{
	"metadata": {
		"type": "App"
	},
	"project": {
		"shadows": true,
		"editable": true,
		"vr": false,
		"debugMode": true
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "F1DEB7BC-9F50-41F1-9B9E-A8F3DBB3419C",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [0.47138985991477966,1.2561374163055916e-8,0.8819248676300049,0,0.37565308809280396,0.9047482013702393,-0.2007870227098465,0,-0.7979198694229126,0.42594674229621887,0.42648911476135254,0,-76.4675521850586,40.82001495361328,40.87199783325195,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 10000,
			"focus": 10,
			"aspect": 1,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "BCC3A53B-07C6-4FC3-B308-8F4A3E94469D",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
			"children": [
				{
					"uuid": "E49F27D7-529D-4C7A-9F53-D3859D6F30CE",
					"type": "Group",
					"name": "scripts",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "B22F5FEF-F45E-4C2E-B36B-AEF0F249EFC7",
					"type": "Group",
					"name": "helpers",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "817A9E70-F25D-467D-A1B9-F6960AE9B2CF",
					"type": "Group",
					"name": "physics",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "AA807597-475F-44C0-9BCF-F909388F0C98",
					"type": "Group",
					"name": "animations",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "EAB32261-6842-401B-A01B-BDD9F02445C6",
					"type": "Group",
					"name": "engine",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "3BC7F6A4-425D-4554-833F-67410759383A",
					"type": "Group",
					"name": "female",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "E6A25D04-08FC-473B-AF43-0CE1C1E64A70",
					"type": "Group",
					"name": "hf hairs",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				}]
		}
	},
	"scripts": {
		"E49F27D7-529D-4C7A-9F53-D3859D6F30CE": [
			{
				"name": "jquery.min.js",
				"source": "/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.3\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=M.replace(\"w\",\"w#\"),O=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+N+\"))|)\"+L+\"*\\\\]\",P=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+O+\")*)|.*)\\\\)|)\",Q=new RegExp(L+\"+\",\"g\"),R=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),S=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),T=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),U=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),V=new RegExp(P),W=new RegExp(\"^\"+N+\"$\"),X={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+O),PSEUDO:new RegExp(\"^\"+P),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},eb=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fb){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function gb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\"string\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+rb(o[l]);w=ab.test(a)&&pb(b.parentNode)||b,x=o.join(\",\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function hb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ib(a){return a[u]=!0,a}function jb(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function kb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function lb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function nb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function ob(a){return ib(function(b){return b=+b,ib(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pb(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=gb.support={},f=gb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=gb.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\"unload\",eb,!1):e.attachEvent&&e.attachEvent(\"onunload\",eb)),p=!f(g),c.attributes=jb(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=jb(function(a){return a.appendChild(g.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=jb(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(jb(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\f]' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),jb(function(a){var b=g.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&jb(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",P)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return lb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?lb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},gb.matches=function(a,b){return gb(a,null,null,b)},gb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return gb(b,n,null,[a]).length>0},gb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},gb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},gb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},gb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=gb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=gb.selectors={cacheLength:50,createPseudo:ib,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||gb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&gb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=gb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(Q,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||gb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ib(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ib(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?ib(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ib(function(a){return function(b){return gb(a,b).length>0}}),contains:ib(function(a){return a=a.replace(cb,db),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ib(function(a){return W.test(a||\"\")||gb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:ob(function(){return[0]}),last:ob(function(a,b){return[b-1]}),eq:ob(function(a,b,c){return[0>c?c+b:c]}),even:ob(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:ob(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:ob(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:ob(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=mb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=nb(b);function qb(){}qb.prototype=d.filters=d.pseudos,d.setFilters=new qb,g=gb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?gb.error(a):z(a,i).slice(0)};function rb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function sb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function tb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ub(a,b,c){for(var d=0,e=b.length;e>d;d++)gb(a,b[d],c);return c}function vb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wb(a,b,c,d,e,f){return d&&!d[u]&&(d=wb(d)),e&&!e[u]&&(e=wb(e,f)),ib(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ub(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:vb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=vb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=vb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=sb(function(a){return a===b},h,!0),l=sb(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sb(tb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wb(i>1&&tb(m),i>1&&rb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&xb(a.slice(i,e)),f>e&&xb(a=a.slice(e)),f>e&&rb(a))}m.push(c)}return tb(m)}function yb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=vb(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&gb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ib(f):f}return h=gb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,yb(e,d)),f.selector=a}return f},i=gb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&pb(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&rb(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&pb(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=jb(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),jb(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||kb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&jb(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||kb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),jb(function(a){return null==a.getAttribute(\"disabled\")})||kb(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),gb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)\n},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec=/#.*$/,fc=/([?&])_=[^&]*/,gc=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,hc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ic=/^(?:GET|HEAD)$/,jc=/^\\/\\//,kc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,lc={},mc={},nc=\"*/\".concat(\"*\"),oc=a.location.href,pc=kc.exec(oc.toLowerCase())||[];function qc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rc(a,b,c,d){var e={},f=a===mc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function sc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function uc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:oc,type:\"GET\",isLocal:hc.test(pc[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":nc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sc(sc(a,n.ajaxSettings),b):sc(n.ajaxSettings,a)},ajaxPrefilter:qc(lc),ajaxTransport:qc(mc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gc.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||oc)+\"\").replace(ec,\"\").replace(jc,pc[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=kc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pc[1]&&h[2]===pc[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(pc[3]||(\"http:\"===pc[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rc(lc,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!ic.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=fc.test(d)?d.replace(fc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+nc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rc(mc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tc(k,v,f)),u=uc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vc=/%20/g,wc=/\\[\\]$/,xc=/\\r?\\n/g,yc=/^(?:submit|button|image|reset|file)$/i,zc=/^(?:input|select|textarea|keygen)/i;function Ac(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wc.test(a)?d(a,e):Ac(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Ac(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ac(c,a[c],b,e);return d.join(\"&\").replace(vc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&zc.test(this.nodeName)&&!yc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xc,\"\\r\\n\")}}):{name:b.name,value:c.replace(xc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bc=0,Cc={},Dc={0:200,1223:204},Ec=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in Cc)Cc[a]()}),k.cors=!!Ec&&\"withCredentials\"in Ec,k.ajax=Ec=!!Ec,n.ajaxTransport(function(a){var b;return k.cors||Ec&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Dc[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Cc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fc=[],Gc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Fc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Gc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hc=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Hc)return Hc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ic=a.document.documentElement;function Jc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ic;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ic})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Kc=a.jQuery,Lc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lc),b&&a.jQuery===n&&(a.jQuery=Kc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n"
			},
			{
				"name": "bootbox.min.js",
				"source": "/**\n * bootbox.js v4.4.0\n *\n * http://bootboxjs.com/license.txt\n */\n!function(a,b){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],b):\"object\"==typeof exports?module.exports=b(require(\"jquery\")):a.bootbox=b(a.jQuery)}(this,function a(b,c){\"use strict\";function d(a){var b=q[o.locale];return b?b[a]:q.en[a]}function e(a,c,d){a.stopPropagation(),a.preventDefault();var e=b.isFunction(d)&&d.call(c,a)===!1;e||c.modal(\"hide\")}function f(a){var b,c=0;for(b in a)c++;return c}function g(a,c){var d=0;b.each(a,function(a,b){c(a,b,d++)})}function h(a){var c,d;if(\"object\"!=typeof a)throw new Error(\"Please supply an object of options\");if(!a.message)throw new Error(\"Please specify a message\");return a=b.extend({},o,a),a.buttons||(a.buttons={}),c=a.buttons,d=f(c),g(c,function(a,e,f){if(b.isFunction(e)&&(e=c[a]={callback:e}),\"object\"!==b.type(e))throw new Error(\"button with key \"+a+\" must be an object\");e.label||(e.label=a),e.className||(e.className=2>=d&&f===d-1?\"btn-primary\":\"btn-default\")}),a}function i(a,b){var c=a.length,d={};if(1>c||c>2)throw new Error(\"Invalid argument length\");return 2===c||\"string\"==typeof a[0]?(d[b[0]]=a[0],d[b[1]]=a[1]):d=a[0],d}function j(a,c,d){return b.extend(!0,{},a,i(c,d))}function k(a,b,c,d){var e={className:\"bootbox-\"+a,buttons:l.apply(null,b)};return m(j(e,d,c),b)}function l(){for(var a={},b=0,c=arguments.length;c>b;b++){var e=arguments[b],f=e.toLowerCase(),g=e.toUpperCase();a[f]={label:d(g)}}return a}function m(a,b){var d={};return g(b,function(a,b){d[b]=!0}),g(a.buttons,function(a){if(d[a]===c)throw new Error(\"button key \"+a+\" is not allowed (options are \"+b.join(\"\\n\")+\")\")}),a}var n={dialog:\"<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>\",header:\"<div class='modal-header'><h4 class='modal-title'></h4></div>\",footer:\"<div class='modal-footer'></div>\",closeButton:\"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\",form:\"<form class='bootbox-form'></form>\",inputs:{text:\"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\",textarea:\"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\",email:\"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\",select:\"<select class='bootbox-input bootbox-input-select form-control'></select>\",checkbox:\"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\",date:\"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\",time:\"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\",number:\"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\",password:\"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\"}},o={locale:\"en\",backdrop:\"static\",animate:!0,className:null,closeButton:!0,show:!0,container:\"body\"},p={};p.alert=function(){var a;if(a=k(\"alert\",[\"ok\"],[\"message\",\"callback\"],arguments),a.callback&&!b.isFunction(a.callback))throw new Error(\"alert requires callback property to be a function when provided\");return a.buttons.ok.callback=a.onEscape=function(){return b.isFunction(a.callback)?a.callback.call(this):!0},p.dialog(a)},p.confirm=function(){var a;if(a=k(\"confirm\",[\"cancel\",\"confirm\"],[\"message\",\"callback\"],arguments),a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,!1)},a.buttons.confirm.callback=function(){return a.callback.call(this,!0)},!b.isFunction(a.callback))throw new Error(\"confirm requires a callback\");return p.dialog(a)},p.prompt=function(){var a,d,e,f,h,i,k;if(f=b(n.form),d={className:\"bootbox-prompt\",buttons:l(\"cancel\",\"confirm\"),value:\"\",inputType:\"text\"},a=m(j(d,arguments,[\"title\",\"callback\"]),[\"cancel\",\"confirm\"]),i=a.show===c?!0:a.show,a.message=f,a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,null)},a.buttons.confirm.callback=function(){var c;switch(a.inputType){case\"text\":case\"textarea\":case\"email\":case\"select\":case\"date\":case\"time\":case\"number\":case\"password\":c=h.val();break;case\"checkbox\":var d=h.find(\"input:checked\");c=[],g(d,function(a,d){c.push(b(d).val())})}return a.callback.call(this,c)},a.show=!1,!a.title)throw new Error(\"prompt requires a title\");if(!b.isFunction(a.callback))throw new Error(\"prompt requires a callback\");if(!n.inputs[a.inputType])throw new Error(\"invalid prompt type\");switch(h=b(n.inputs[a.inputType]),a.inputType){case\"text\":case\"textarea\":case\"email\":case\"date\":case\"time\":case\"number\":case\"password\":h.val(a.value);break;case\"select\":var o={};if(k=a.inputOptions||[],!b.isArray(k))throw new Error(\"Please pass an array of input options\");if(!k.length)throw new Error(\"prompt with select requires options\");g(k,function(a,d){var e=h;if(d.value===c||d.text===c)throw new Error(\"given options in wrong format\");d.group&&(o[d.group]||(o[d.group]=b(\"<optgroup/>\").attr(\"label\",d.group)),e=o[d.group]),e.append(\"<option value='\"+d.value+\"'>\"+d.text+\"</option>\")}),g(o,function(a,b){h.append(b)}),h.val(a.value);break;case\"checkbox\":var q=b.isArray(a.value)?a.value:[a.value];if(k=a.inputOptions||[],!k.length)throw new Error(\"prompt with checkbox requires options\");if(!k[0].value||!k[0].text)throw new Error(\"given options in wrong format\");h=b(\"<div/>\"),g(k,function(c,d){var e=b(n.inputs[a.inputType]);e.find(\"input\").attr(\"value\",d.value),e.find(\"label\").append(d.text),g(q,function(a,b){b===d.value&&e.find(\"input\").prop(\"checked\",!0)}),h.append(e)})}return a.placeholder&&h.attr(\"placeholder\",a.placeholder),a.pattern&&h.attr(\"pattern\",a.pattern),a.maxlength&&h.attr(\"maxlength\",a.maxlength),f.append(h),f.on(\"submit\",function(a){a.preventDefault(),a.stopPropagation(),e.find(\".btn-primary\").click()}),e=p.dialog(a),e.off(\"shown.bs.modal\"),e.on(\"shown.bs.modal\",function(){h.focus()}),i===!0&&e.modal(\"show\"),e},p.dialog=function(a){a=h(a);var d=b(n.dialog),f=d.find(\".modal-dialog\"),i=d.find(\".modal-body\"),j=a.buttons,k=\"\",l={onEscape:a.onEscape};if(b.fn.modal===c)throw new Error(\"$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.\");if(g(j,function(a,b){k+=\"<button data-bb-handler='\"+a+\"' type='button' class='btn \"+b.className+\"'>\"+b.label+\"</button>\",l[a]=b.callback}),i.find(\".bootbox-body\").html(a.message),a.animate===!0&&d.addClass(\"fade\"),a.className&&d.addClass(a.className),\"large\"===a.size?f.addClass(\"modal-lg\"):\"small\"===a.size&&f.addClass(\"modal-sm\"),a.title&&i.before(n.header),a.closeButton){var m=b(n.closeButton);a.title?d.find(\".modal-header\").prepend(m):m.css(\"margin-top\",\"-10px\").prependTo(i)}return a.title&&d.find(\".modal-title\").html(a.title),k.length&&(i.after(n.footer),d.find(\".modal-footer\").html(k)),d.on(\"hidden.bs.modal\",function(a){a.target===this&&d.remove()}),d.on(\"shown.bs.modal\",function(){d.find(\".btn-primary:first\").focus()}),\"static\"!==a.backdrop&&d.on(\"click.dismiss.bs.modal\",function(a){d.children(\".modal-backdrop\").length&&(a.currentTarget=d.children(\".modal-backdrop\").get(0)),a.target===a.currentTarget&&d.trigger(\"escape.close.bb\")}),d.on(\"escape.close.bb\",function(a){l.onEscape&&e(a,d,l.onEscape)}),d.on(\"click\",\".modal-footer button\",function(a){var c=b(this).data(\"bb-handler\");e(a,d,l[c])}),d.on(\"click\",\".bootbox-close-button\",function(a){e(a,d,l.onEscape)}),d.on(\"keyup\",function(a){27===a.which&&d.trigger(\"escape.close.bb\")}),b(a.container).append(d),d.modal({backdrop:a.backdrop?\"static\":!1,keyboard:!1,show:!1}),a.show&&d.modal(\"show\"),d},p.setDefaults=function(){var a={};2===arguments.length?a[arguments[0]]=arguments[1]:a=arguments[0],b.extend(o,a)},p.hideAll=function(){return b(\".bootbox\").modal(\"hide\"),p};var q={bg_BG:{OK:\"Ок\",CANCEL:\"Отказ\",CONFIRM:\"Потвърждавам\"},br:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Sim\"},cs:{OK:\"OK\",CANCEL:\"Zrušit\",CONFIRM:\"Potvrdit\"},da:{OK:\"OK\",CANCEL:\"Annuller\",CONFIRM:\"Accepter\"},de:{OK:\"OK\",CANCEL:\"Abbrechen\",CONFIRM:\"Akzeptieren\"},el:{OK:\"Εντάξει\",CANCEL:\"Ακύρωση\",CONFIRM:\"Επιβεβαίωση\"},en:{OK:\"OK\",CANCEL:\"Cancel\",CONFIRM:\"OK\"},es:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Aceptar\"},et:{OK:\"OK\",CANCEL:\"Katkesta\",CONFIRM:\"OK\"},fa:{OK:\"قبول\",CANCEL:\"لغو\",CONFIRM:\"تایید\"},fi:{OK:\"OK\",CANCEL:\"Peruuta\",CONFIRM:\"OK\"},fr:{OK:\"OK\",CANCEL:\"Annuler\",CONFIRM:\"D'accord\"},he:{OK:\"אישור\",CANCEL:\"ביטול\",CONFIRM:\"אישור\"},hu:{OK:\"OK\",CANCEL:\"Mégsem\",CONFIRM:\"Megerősít\"},hr:{OK:\"OK\",CANCEL:\"Odustani\",CONFIRM:\"Potvrdi\"},id:{OK:\"OK\",CANCEL:\"Batal\",CONFIRM:\"OK\"},it:{OK:\"OK\",CANCEL:\"Annulla\",CONFIRM:\"Conferma\"},ja:{OK:\"OK\",CANCEL:\"キャンセル\",CONFIRM:\"確認\"},lt:{OK:\"Gerai\",CANCEL:\"Atšaukti\",CONFIRM:\"Patvirtinti\"},lv:{OK:\"Labi\",CANCEL:\"Atcelt\",CONFIRM:\"Apstiprināt\"},nl:{OK:\"OK\",CANCEL:\"Annuleren\",CONFIRM:\"Accepteren\"},no:{OK:\"OK\",CANCEL:\"Avbryt\",CONFIRM:\"OK\"},pl:{OK:\"OK\",CANCEL:\"Anuluj\",CONFIRM:\"Potwierdź\"},pt:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Confirmar\"},ru:{OK:\"OK\",CANCEL:\"Отмена\",CONFIRM:\"Применить\"},sq:{OK:\"OK\",CANCEL:\"Anulo\",CONFIRM:\"Prano\"},sv:{OK:\"OK\",CANCEL:\"Avbryt\",CONFIRM:\"OK\"},th:{OK:\"ตกลง\",CANCEL:\"ยกเลิก\",CONFIRM:\"ยืนยัน\"},tr:{OK:\"Tamam\",CANCEL:\"İptal\",CONFIRM:\"Onayla\"},zh_CN:{OK:\"OK\",CANCEL:\"取消\",CONFIRM:\"确认\"},zh_TW:{OK:\"OK\",CANCEL:\"取消\",CONFIRM:\"確認\"}};return p.addLocale=function(a,c){return b.each([\"OK\",\"CANCEL\",\"CONFIRM\"],function(a,b){if(!c[b])throw new Error(\"Please supply a translation for '\"+b+\"'\")}),q[a]={OK:c.OK,CANCEL:c.CANCEL,CONFIRM:c.CONFIRM},p},p.removeLocale=function(a){return delete q[a],p},p.setLocale=function(a){return p.setDefaults(\"locale\",a)},p.init=function(c){return a(c||b)},p});"
			},
			{
				"name": "bootstrap.min.js",
				"source": "/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.6\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.6\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.6\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.6\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");\nd.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.6\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);"
			},
			{
				"name": "DeviceDetector.js",
				"source": "//  Device Detector.\n\n    var isMobile = ( function () {\n        var ua = navigator.userAgent,\n            apple_phone      = /iPhone/i,\n            apple_ipod       = /iPod/i,\n            apple_tablet     = /iPad/i,\n            android_phone    = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n            android_tablet   = /Android/i,\n            windows_phone    = /IEMobile/i,\n            windows_tablet   = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n            other_blackberry = /BlackBerry/i,\n            other_opera      = /Opera Mini/i,\n            other_firefox    = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i; // Match 'Firefox' AND 'Mobile'\n\n        if (\n        apple_phone.test( ua )      ||\n        apple_phone.test( ua )      ||\n        apple_ipod.test( ua )       ||\n        apple_tablet.test( ua )     ||\n        android_phone.test( ua )    ||\n        android_tablet.test( ua )   ||\n        windows_phone.test( ua )    ||\n        windows_tablet.test( ua )   ||\n        other_blackberry.test( ua ) ||\n        other_opera.test( ua )      ||\n        other_firefox.test( ua )\n        ){\n\n            return true;\n\n        } else {\n\n            return false;\n\n        }\n    })();\n"
			},
			{
				"name": "validator.min.js",
				"source": "/*!\n * Copyright (c) 2016 Chris O'Hara <cohara87@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.validator=t()}(this,function(){\"use strict\";function f(e){if(!(\"string\"==typeof e||e instanceof String))throw new TypeError(\"This library (validator.js) validates strings only\")}function i(e){return f(e),e=Date.parse(e),isNaN(e)?null:new Date(e)}function r(e){return f(e),parseFloat(e)}var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};function n(e){return\"object\"===(void 0===e?\"undefined\":a(e))&&null!==e?e=\"function\"==typeof e.toString?e.toString():\"[object Object]\":(null==e||isNaN(e)&&!e.length)&&(e=\"\"),String(e)}function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}function d(e,t){f(e);var r=void 0,o=void 0;\"object\"===(void 0===t?\"undefined\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=encodeURI(e).split(/%..|./).length-1;return r<=i&&(void 0===o||i<=o)}var l={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};function p(e,t){f(e),(t=c(t,l)).allow_trailing_dot&&\".\"===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var r=e.split(\".\"),o=0;o<r.length;o++)if(63<r[o].length)return!1;if(t.require_tld){var i=r.pop();if(!r.length||!/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(i))return!1;if(/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20]/.test(i))return!1}for(var n,a=0;a<r.length;a++){if(n=r[a],t.allow_underscores&&(n=n.replace(/_/g,\"\")),!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(n))return!1;if(/[\\uff01-\\uff5e]/.test(n))return!1;if(\"-\"===n[0]||\"-\"===n[n.length-1])return!1}return!0}var g={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},A=/^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i,h=/^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i,v=/^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i,m=/^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i,_=/^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;var s=/^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/,u=/^[0-9A-F]{1,4}$/i;function F(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"\";if(f(e),!(t=String(t)))return F(e,4)||F(e,6);if(\"4\"===t)return!!s.test(e)&&e.split(\".\").sort(function(e,t){return e-t})[3]<=255;if(\"6\"===t){var r=e.split(\":\"),o=!1,i=F(r[r.length-1],4),n=i?7:8;if(r.length>n)return!1;if(\"::\"===e)return!0;\"::\"===e.substr(0,2)?(r.shift(),r.shift(),o=!0):\"::\"===e.substr(e.length-2)&&(r.pop(),r.pop(),o=!0);for(var a=0;a<r.length;++a)if(\"\"===r[a]&&0<a&&a<r.length-1){if(o)return!1;o=!0}else if(i&&a===r.length-1);else if(!u.test(r[a]))return!1;return o?1<=r.length:r.length===n}return!1}var $={protocols:[\"http\",\"https\",\"ftp\"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},S=/^\\[([^\\]]+)\\](?::([0-9]+))?$/;function R(e,t){for(var r=0;r<t.length;r++){var o=t[r];if(e===o||(i=o,\"[object RegExp]\"===Object.prototype.toString.call(i)&&o.test(e)))return!0}var i;return!1}var t=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;for(var e,o={\"en-US\":/^[A-Z]+$/i,\"bg-BG\":/^[А-Я]+$/i,\"cs-CZ\":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\"da-DK\":/^[A-ZÆØÅ]+$/i,\"de-DE\":/^[A-ZÄÖÜß]+$/i,\"el-GR\":/^[Α-ω]+$/i,\"es-ES\":/^[A-ZÁÉÍÑÓÚÜ]+$/i,\"fr-FR\":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\"it-IT\":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\"nb-NO\":/^[A-ZÆØÅ]+$/i,\"nl-NL\":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,\"nn-NO\":/^[A-ZÆØÅ]+$/i,\"hu-HU\":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\"pl-PL\":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\"pt-PT\":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\"ru-RU\":/^[А-ЯЁ]+$/i,\"sk-SK\":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\"sr-RS@latin\":/^[A-ZČĆŽŠĐ]+$/i,\"sr-RS\":/^[А-ЯЂЈЉЊЋЏ]+$/i,\"sv-SE\":/^[A-ZÅÄÖ]+$/i,\"tr-TR\":/^[A-ZÇĞİıÖŞÜ]+$/i,\"uk-UA\":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},E={\"en-US\":/^[0-9A-Z]+$/i,\"bg-BG\":/^[0-9А-Я]+$/i,\"cs-CZ\":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\"da-DK\":/^[0-9A-ZÆØÅ]+$/i,\"de-DE\":/^[0-9A-ZÄÖÜß]+$/i,\"el-GR\":/^[0-9Α-ω]+$/i,\"es-ES\":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\"fr-FR\":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\"it-IT\":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\"hu-HU\":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\"nb-NO\":/^[0-9A-ZÆØÅ]+$/i,\"nl-NL\":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\"nn-NO\":/^[0-9A-ZÆØÅ]+$/i,\"pl-PL\":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\"pt-PT\":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\"ru-RU\":/^[0-9А-ЯЁ]+$/i,\"sk-SK\":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\"sr-RS@latin\":/^[0-9A-ZČĆŽŠĐ]+$/i,\"sr-RS\":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\"sv-SE\":/^[0-9A-ZÅÄÖ]+$/i,\"tr-TR\":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,\"uk-UA\":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},x={\"en-US\":\".\",ar:\"٫\"},M=[\"AU\",\"GB\",\"HK\",\"IN\",\"NZ\",\"ZA\",\"ZM\"],C=0;C<M.length;C++)o[e=\"en-\"+M[C]]=o[\"en-US\"],E[e]=E[\"en-US\"],x[e]=x[\"en-US\"];for(var N,w=[\"AE\",\"BH\",\"DZ\",\"EG\",\"IQ\",\"JO\",\"KW\",\"LB\",\"LY\",\"MA\",\"QM\",\"QA\",\"SA\",\"SD\",\"SY\",\"TN\",\"YE\"],T=0;T<w.length;T++)o[N=\"ar-\"+w[T]]=o.ar,E[N]=E.ar,x[N]=x.ar;for(var Z=[],B=[\"bg-BG\",\"cs-CZ\",\"da-DK\",\"de-DE\",\"el-GR\",\"es-ES\",\"fr-FR\",\"it-IT\",\"hu-HU\",\"nb-NO\",\"nn-NO\",\"nl-NL\",\"pl-Pl\",\"pt-PT\",\"ru-RU\",\"sr-RS@latin\",\"sr-RS\",\"sv-SE\",\"tr-TR\",\"uk-UA\"],I=0;I<Z.length;I++)x[Z[I]]=x[\"en-US\"];for(var L=0;L<B.length;L++)x[B[L]]=\",\";o[\"pt-BR\"]=o[\"pt-PT\"],E[\"pt-BR\"]=E[\"pt-PT\"],x[\"pt-BR\"]=x[\"pt-PT\"];var y=/^[+-]?([0-9]*[.])?[0-9]+$/;var G=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,D=/^[-+]?[0-9]+$/;function O(e,t){f(e);var r=(t=t||{}).hasOwnProperty(\"allow_leading_zeroes\")&&!t.allow_leading_zeroes?G:D,o=!t.hasOwnProperty(\"min\")||e>=t.min,i=!t.hasOwnProperty(\"max\")||e<=t.max,n=!t.hasOwnProperty(\"lt\")||e<t.lt,a=!t.hasOwnProperty(\"gt\")||e>t.gt;return r.test(e)&&o&&i&&n&&a}var U=/^[\\x00-\\x7F]+$/;var b=/[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;var P=/[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;var K=/[^\\x00-\\x7F]/;var k=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;var H={force_decimal:!1,decimal_digits:\"1,\",locale:\"en-US\"},z=[\"\",\"-\",\"+\"];var V=/^[0-9A-F]+$/i;function W(e){return f(e),V.test(e)}var Y=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;var j=/^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;var J=/^[a-f0-9]{32}$/;var q={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};var Q={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};var X=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;var ee=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;var te=/^(?:[0-9]{9}X|[0-9]{10})$/,re=/^(?:[0-9]{13})$/,oe=[1,3];var ie=\"^\\\\d{4}-?\\\\d{3}[\\\\dX]$\";var ne={\"ar-AE\":/^((\\+?971)|0)?5[024568]\\d{7}$/,\"ar-DZ\":/^(\\+?213|0)(5|6|7)\\d{8}$/,\"ar-EG\":/^((\\+?20)|0)?1[012]\\d{8}$/,\"ar-JO\":/^(\\+?962|0)?7[789]\\d{7}$/,\"ar-SA\":/^(!?(\\+?966)|0)?5\\d{8}$/,\"ar-SY\":/^(!?(\\+?963)|0)?9\\d{8}$/,\"be-BY\":/^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\"bg-BG\":/^(\\+?359|0)?8[789]\\d{7}$/,\"cs-CZ\":/^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\"da-DK\":/^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\"de-DE\":/^(\\+?49[ \\.\\-])?([\\(]{1}[0-9]{1,6}[\\)])?([0-9 \\.\\-\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,\"el-GR\":/^(\\+?30|0)?(69\\d{8})$/,\"en-AU\":/^(\\+?61|0)4\\d{8}$/,\"en-GB\":/^(\\+?44|0)7\\d{9}$/,\"en-HK\":/^(\\+?852\\-?)?[456789]\\d{3}\\-?\\d{4}$/,\"en-IN\":/^(\\+?91|0)?[6789]\\d{9}$/,\"en-KE\":/^(\\+?254|0)?[7]\\d{8}$/,\"en-NG\":/^(\\+?234|0)?[789]\\d{9}$/,\"en-NZ\":/^(\\+?64|0)2\\d{7,9}$/,\"en-PK\":/^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$/,\"en-RW\":/^(\\+?250|0)?[7]\\d{8}$/,\"en-SG\":/^(\\+65)?[89]\\d{7}$/,\"en-TZ\":/^(\\+?255|0)?[67]\\d{8}$/,\"en-UG\":/^(\\+?256|0)?[7]\\d{8}$/,\"en-US\":/^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\"en-ZA\":/^(\\+?27|0)\\d{9}$/,\"en-ZM\":/^(\\+?26)?09[567]\\d{7}$/,\"es-ES\":/^(\\+?34)?(6\\d{1}|7[1234])\\d{7}$/,\"et-EE\":/^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\"fa-IR\":/^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\"fi-FI\":/^(\\+?358|0)\\s?(4(0|1|2|4|5|6)?|50)\\s?(\\d\\s?){4,8}\\d$/,\"fo-FO\":/^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\"fr-FR\":/^(\\+?33|0)[67]\\d{8}$/,\"he-IL\":/^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}/,\"hu-HU\":/^(\\+?36)(20|30|70)\\d{7}$/,\"id-ID\":/^(\\+?62|0[1-9])[\\s|\\d]+$/,\"it-IT\":/^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\"ja-JP\":/^(\\+?81|0)[789]0[ \\-]?[1-9]\\d{2}[ \\-]?\\d{5}$/,\"kk-KZ\":/^(\\+?7|8)?7\\d{9}$/,\"kl-GL\":/^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\"ko-KR\":/^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\"lt-LT\":/^(\\+370|8)\\d{8}$/,\"ms-MY\":/^(\\+?6?01){1}(([145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\"nb-NO\":/^(\\+?47)?[49]\\d{7}$/,\"nl-BE\":/^(\\+?32|0)4?\\d{8}$/,\"nn-NO\":/^(\\+?47)?[49]\\d{7}$/,\"pl-PL\":/^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\"pt-BR\":/^(\\+?55|0)\\-?[1-9]{2}\\-?[2-9]{1}\\d{3,4}\\-?\\d{4}$/,\"pt-PT\":/^(\\+?351)?9[1236]\\d{7}$/,\"ro-RO\":/^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\"ru-RU\":/^(\\+?7|8)?9\\d{9}$/,\"sk-SK\":/^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\"sr-RS\":/^(\\+3816|06)[- \\d]{5,9}$/,\"th-TH\":/^(\\+66|66|0)\\d{9}$/,\"tr-TR\":/^(\\+?90|0)?5\\d{9}$/,\"uk-UA\":/^(\\+?38|8)?0\\d{9}$/,\"vi-VN\":/^(\\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\"zh-CN\":/^(\\+?0?86\\-?)?1[3456789]\\d{9}$/,\"zh-TW\":/^(\\+?886\\-?|0)?9\\d{8}$/};ne[\"en-CA\"]=ne[\"en-US\"],ne[\"fr-BE\"]=ne[\"nl-BE\"],ne[\"zh-HK\"]=ne[\"en-HK\"];var ae={symbol:\"$\",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:\",\",decimal_separator:\".\",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};var le=/^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;var se=/([01][0-9]|2[0-3])/,ue=/[0-5][0-9]/,de=new RegExp(\"[-+]\"+se.source+\":\"+ue.source),ce=new RegExp(\"([zZ]|\"+de.source+\")\"),fe=new RegExp(se.source+\":\"+ue.source+\":\"+/([0-5][0-9]|60)/.source+/(\\.[0-9]+)?/.source),pe=new RegExp(/[0-9]{4}/.source+\"-\"+/(0[1-9]|1[0-2])/.source+\"-\"+/([12]\\d|0[1-9]|3[01])/.source),ge=new RegExp(\"\"+fe.source+ce.source),Ae=new RegExp(pe.source+\"[ tT]\"+ge.source);var he=[\"AD\",\"AE\",\"AF\",\"AG\",\"AI\",\"AL\",\"AM\",\"AO\",\"AQ\",\"AR\",\"AS\",\"AT\",\"AU\",\"AW\",\"AX\",\"AZ\",\"BA\",\"BB\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BJ\",\"BL\",\"BM\",\"BN\",\"BO\",\"BQ\",\"BR\",\"BS\",\"BT\",\"BV\",\"BW\",\"BY\",\"BZ\",\"CA\",\"CC\",\"CD\",\"CF\",\"CG\",\"CH\",\"CI\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"CR\",\"CU\",\"CV\",\"CW\",\"CX\",\"CY\",\"CZ\",\"DE\",\"DJ\",\"DK\",\"DM\",\"DO\",\"DZ\",\"EC\",\"EE\",\"EG\",\"EH\",\"ER\",\"ES\",\"ET\",\"FI\",\"FJ\",\"FK\",\"FM\",\"FO\",\"FR\",\"GA\",\"GB\",\"GD\",\"GE\",\"GF\",\"GG\",\"GH\",\"GI\",\"GL\",\"GM\",\"GN\",\"GP\",\"GQ\",\"GR\",\"GS\",\"GT\",\"GU\",\"GW\",\"GY\",\"HK\",\"HM\",\"HN\",\"HR\",\"HT\",\"HU\",\"ID\",\"IE\",\"IL\",\"IM\",\"IN\",\"IO\",\"IQ\",\"IR\",\"IS\",\"IT\",\"JE\",\"JM\",\"JO\",\"JP\",\"KE\",\"KG\",\"KH\",\"KI\",\"KM\",\"KN\",\"KP\",\"KR\",\"KW\",\"KY\",\"KZ\",\"LA\",\"LB\",\"LC\",\"LI\",\"LK\",\"LR\",\"LS\",\"LT\",\"LU\",\"LV\",\"LY\",\"MA\",\"MC\",\"MD\",\"ME\",\"MF\",\"MG\",\"MH\",\"MK\",\"ML\",\"MM\",\"MN\",\"MO\",\"MP\",\"MQ\",\"MR\",\"MS\",\"MT\",\"MU\",\"MV\",\"MW\",\"MX\",\"MY\",\"MZ\",\"NA\",\"NC\",\"NE\",\"NF\",\"NG\",\"NI\",\"NL\",\"NO\",\"NP\",\"NR\",\"NU\",\"NZ\",\"OM\",\"PA\",\"PE\",\"PF\",\"PG\",\"PH\",\"PK\",\"PL\",\"PM\",\"PN\",\"PR\",\"PS\",\"PT\",\"PW\",\"PY\",\"QA\",\"RE\",\"RO\",\"RS\",\"RU\",\"RW\",\"SA\",\"SB\",\"SC\",\"SD\",\"SE\",\"SG\",\"SH\",\"SI\",\"SJ\",\"SK\",\"SL\",\"SM\",\"SN\",\"SO\",\"SR\",\"SS\",\"ST\",\"SV\",\"SX\",\"SY\",\"SZ\",\"TC\",\"TD\",\"TF\",\"TG\",\"TH\",\"TJ\",\"TK\",\"TL\",\"TM\",\"TN\",\"TO\",\"TR\",\"TT\",\"TV\",\"TW\",\"TZ\",\"UA\",\"UG\",\"UM\",\"US\",\"UY\",\"UZ\",\"VA\",\"VC\",\"VE\",\"VG\",\"VI\",\"VN\",\"VU\",\"WF\",\"WS\",\"YE\",\"YT\",\"ZA\",\"ZM\",\"ZW\"];var ve=[\"AFG\",\"ALA\",\"ALB\",\"DZA\",\"ASM\",\"AND\",\"AGO\",\"AIA\",\"ATA\",\"ATG\",\"ARG\",\"ARM\",\"ABW\",\"AUS\",\"AUT\",\"AZE\",\"BHS\",\"BHR\",\"BGD\",\"BRB\",\"BLR\",\"BEL\",\"BLZ\",\"BEN\",\"BMU\",\"BTN\",\"BOL\",\"BES\",\"BIH\",\"BWA\",\"BVT\",\"BRA\",\"IOT\",\"BRN\",\"BGR\",\"BFA\",\"BDI\",\"KHM\",\"CMR\",\"CAN\",\"CPV\",\"CYM\",\"CAF\",\"TCD\",\"CHL\",\"CHN\",\"CXR\",\"CCK\",\"COL\",\"COM\",\"COG\",\"COD\",\"COK\",\"CRI\",\"CIV\",\"HRV\",\"CUB\",\"CUW\",\"CYP\",\"CZE\",\"DNK\",\"DJI\",\"DMA\",\"DOM\",\"ECU\",\"EGY\",\"SLV\",\"GNQ\",\"ERI\",\"EST\",\"ETH\",\"FLK\",\"FRO\",\"FJI\",\"FIN\",\"FRA\",\"GUF\",\"PYF\",\"ATF\",\"GAB\",\"GMB\",\"GEO\",\"DEU\",\"GHA\",\"GIB\",\"GRC\",\"GRL\",\"GRD\",\"GLP\",\"GUM\",\"GTM\",\"GGY\",\"GIN\",\"GNB\",\"GUY\",\"HTI\",\"HMD\",\"VAT\",\"HND\",\"HKG\",\"HUN\",\"ISL\",\"IND\",\"IDN\",\"IRN\",\"IRQ\",\"IRL\",\"IMN\",\"ISR\",\"ITA\",\"JAM\",\"JPN\",\"JEY\",\"JOR\",\"KAZ\",\"KEN\",\"KIR\",\"PRK\",\"KOR\",\"KWT\",\"KGZ\",\"LAO\",\"LVA\",\"LBN\",\"LSO\",\"LBR\",\"LBY\",\"LIE\",\"LTU\",\"LUX\",\"MAC\",\"MKD\",\"MDG\",\"MWI\",\"MYS\",\"MDV\",\"MLI\",\"MLT\",\"MHL\",\"MTQ\",\"MRT\",\"MUS\",\"MYT\",\"MEX\",\"FSM\",\"MDA\",\"MCO\",\"MNG\",\"MNE\",\"MSR\",\"MAR\",\"MOZ\",\"MMR\",\"NAM\",\"NRU\",\"NPL\",\"NLD\",\"NCL\",\"NZL\",\"NIC\",\"NER\",\"NGA\",\"NIU\",\"NFK\",\"MNP\",\"NOR\",\"OMN\",\"PAK\",\"PLW\",\"PSE\",\"PAN\",\"PNG\",\"PRY\",\"PER\",\"PHL\",\"PCN\",\"POL\",\"PRT\",\"PRI\",\"QAT\",\"REU\",\"ROU\",\"RUS\",\"RWA\",\"BLM\",\"SHN\",\"KNA\",\"LCA\",\"MAF\",\"SPM\",\"VCT\",\"WSM\",\"SMR\",\"STP\",\"SAU\",\"SEN\",\"SRB\",\"SYC\",\"SLE\",\"SGP\",\"SXM\",\"SVK\",\"SVN\",\"SLB\",\"SOM\",\"ZAF\",\"SGS\",\"SSD\",\"ESP\",\"LKA\",\"SDN\",\"SUR\",\"SJM\",\"SWZ\",\"SWE\",\"CHE\",\"SYR\",\"TWN\",\"TJK\",\"TZA\",\"THA\",\"TLS\",\"TGO\",\"TKL\",\"TON\",\"TTO\",\"TUN\",\"TUR\",\"TKM\",\"TCA\",\"TUV\",\"UGA\",\"UKR\",\"ARE\",\"GBR\",\"USA\",\"UMI\",\"URY\",\"UZB\",\"VUT\",\"VEN\",\"VNM\",\"VGB\",\"VIR\",\"WLF\",\"ESH\",\"YEM\",\"ZMB\",\"ZWE\"];var me=/[^A-Z0-9+\\/=]/i;var _e=/^[a-z]+\\/[a-z0-9\\-\\+]+$/i,Fe=/^[a-z\\-]+=[a-z0-9\\-]+$/i,$e=/^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;var Se=/^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i,Re=/^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i,Ee=/^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i;var xe=/^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/,Me=/^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/,Ce=/^\\d{4}$/,Ne=/^\\d{5}$/,we=/^\\d{6}$/,Te={AT:Ce,AU:Ce,BE:Ce,BG:Ce,CA:/^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,CH:Ce,CZ:/^\\d{3}\\s?\\d{2}$/,DE:Ne,DK:Ce,DZ:Ne,ES:Ne,FI:Ne,FR:/^\\d{2}\\s?\\d{3}$/,GB:/^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,GR:/^\\d{3}\\s?\\d{2}$/,IL:Ne,IN:we,IS:/^\\d{3}$/,IT:Ne,JP:/^\\d{3}\\-\\d{4}$/,KE:Ne,LI:/^(948[5-9]|949[0-7])$/,MX:Ne,NL:/^\\d{4}\\s?[a-z]{2}$/i,NO:Ce,PL:/^\\d{2}\\-\\d{3}$/,PT:/^\\d{4}\\-\\d{3}?$/,RO:we,RU:we,SA:Ne,SE:/^\\d{3}\\s?\\d{2}$/,SK:/^\\d{3}\\s?\\d{2}$/,TW:/^\\d{3}(\\d{2})?$/,US:/^\\d{5}(-\\d{4})?$/,ZA:Ce,ZM:Ne};function Ze(e,t){f(e);var r=t?new RegExp(\"^[\"+t+\"]+\",\"g\"):/^\\s+/g;return e.replace(r,\"\")}function Be(e,t){f(e);for(var r=t?new RegExp(\"[\"+t+\"]\"):/\\s/,o=e.length-1;0<=o&&r.test(e[o]);)o--;return o<e.length?e.substr(0,o+1):e}function Ie(e,t){return f(e),e.replace(new RegExp(\"[\"+t+\"]+\",\"g\"),\"\")}var Le={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},ye=[\"icloud.com\",\"me.com\"],Ge=[\"hotmail.at\",\"hotmail.be\",\"hotmail.ca\",\"hotmail.cl\",\"hotmail.co.il\",\"hotmail.co.nz\",\"hotmail.co.th\",\"hotmail.co.uk\",\"hotmail.com\",\"hotmail.com.ar\",\"hotmail.com.au\",\"hotmail.com.br\",\"hotmail.com.gr\",\"hotmail.com.mx\",\"hotmail.com.pe\",\"hotmail.com.tr\",\"hotmail.com.vn\",\"hotmail.cz\",\"hotmail.de\",\"hotmail.dk\",\"hotmail.es\",\"hotmail.fr\",\"hotmail.hu\",\"hotmail.id\",\"hotmail.ie\",\"hotmail.in\",\"hotmail.it\",\"hotmail.jp\",\"hotmail.kr\",\"hotmail.lv\",\"hotmail.my\",\"hotmail.ph\",\"hotmail.pt\",\"hotmail.sa\",\"hotmail.sg\",\"hotmail.sk\",\"live.be\",\"live.co.uk\",\"live.com\",\"live.com.ar\",\"live.com.mx\",\"live.de\",\"live.es\",\"live.eu\",\"live.fr\",\"live.it\",\"live.nl\",\"msn.com\",\"outlook.at\",\"outlook.be\",\"outlook.cl\",\"outlook.co.il\",\"outlook.co.nz\",\"outlook.co.th\",\"outlook.com\",\"outlook.com.ar\",\"outlook.com.au\",\"outlook.com.br\",\"outlook.com.gr\",\"outlook.com.pe\",\"outlook.com.tr\",\"outlook.com.vn\",\"outlook.cz\",\"outlook.de\",\"outlook.dk\",\"outlook.es\",\"outlook.fr\",\"outlook.hu\",\"outlook.id\",\"outlook.ie\",\"outlook.in\",\"outlook.it\",\"outlook.jp\",\"outlook.kr\",\"outlook.lv\",\"outlook.my\",\"outlook.ph\",\"outlook.pt\",\"outlook.sa\",\"outlook.sg\",\"outlook.sk\",\"passport.com\"],De=[\"rocketmail.com\",\"yahoo.ca\",\"yahoo.co.uk\",\"yahoo.com\",\"yahoo.de\",\"yahoo.fr\",\"yahoo.in\",\"yahoo.it\",\"ymail.com\"],Oe=[\"yandex.ru\",\"yandex.ua\",\"yandex.kz\",\"yandex.com\",\"yandex.by\",\"ya.ru\"];function Ue(e){return 1<e.length?e:\"\"}return{version:\"10.1.0\",toDate:i,toFloat:r,toInt:function(e,t){return f(e),parseInt(e,t||10)},toBoolean:function(e,t){return f(e),t?\"1\"===e||\"true\"===e:\"0\"!==e&&\"false\"!==e&&\"\"!==e},equals:function(e,t){return f(e),e===t},contains:function(e,t){return f(e),0<=e.indexOf(n(t))},matches:function(e,t,r){return f(e),\"[object RegExp]\"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,r)),t.test(e)},isEmail:function(e,t){if(f(e),(t=c(t,g)).require_display_name||t.allow_display_name){var r=e.match(A);if(r)e=r[1];else if(t.require_display_name)return!1}var o=e.split(\"@\"),i=o.pop(),n=o.join(\"@\"),a=i.toLowerCase();if(\"gmail.com\"!==a&&\"googlemail.com\"!==a||(n=n.toLowerCase()),!d(n,{max:64})||!d(i,{max:254}))return!1;if(!p(i,{require_tld:t.require_tld}))return!1;if('\"'===n[0])return n=n.slice(1,n.length-1),t.allow_utf8_local_part?_.test(n):v.test(n);for(var l=t.allow_utf8_local_part?m:h,s=n.split(\".\"),u=0;u<s.length;u++)if(!l.test(s[u]))return!1;return!0},isURL:function(e,t){if(f(e),!e||2083<=e.length||/[\\s<>]/.test(e))return!1;if(0===e.indexOf(\"mailto:\"))return!1;t=c(t,$);var r=void 0,o=void 0,i=void 0,n=void 0,a=void 0,l=void 0,s=void 0,u=void 0;if(1<(s=(e=(s=(e=(s=e.split(\"#\")).shift()).split(\"?\")).shift()).split(\"://\")).length){if(r=s.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(r))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&\"//\"===e.substr(0,2)&&(s[0]=e.substr(2))}if(\"\"===(e=s.join(\"://\")))return!1;if(\"\"===(e=(s=e.split(\"/\")).shift())&&!t.require_host)return!0;if(1<(s=e.split(\"@\")).length&&0<=(o=s.shift()).indexOf(\":\")&&2<o.split(\":\").length)return!1;u=l=null;var d=(n=s.join(\"@\")).match(S);return d?(i=\"\",u=d[1],l=d[2]||null):(i=(s=n.split(\":\")).shift(),s.length&&(l=s.join(\":\"))),!(null!==l&&(a=parseInt(l,10),!/^[0-9]+$/.test(l)||a<=0||65535<a)||!(F(i)||p(i,t)||u&&F(u,6))||(i=i||u,t.host_whitelist&&!R(i,t.host_whitelist)||t.host_blacklist&&R(i,t.host_blacklist)))},isMACAddress:function(e){return f(e),t.test(e)},isIP:F,isFQDN:p,isBoolean:function(e){return f(e),0<=[\"true\",\"false\",\"1\",\"0\"].indexOf(e)},isAlpha:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"en-US\";if(f(e),t in o)return o[t].test(e);throw new Error(\"Invalid locale '\"+t+\"'\")},isAlphanumeric:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"en-US\";if(f(e),t in E)return E[t].test(e);throw new Error(\"Invalid locale '\"+t+\"'\")},isNumeric:function(e){return f(e),y.test(e)},isPort:function(e){return O(e,{min:0,max:65535})},isLowercase:function(e){return f(e),e===e.toLowerCase()},isUppercase:function(e){return f(e),e===e.toUpperCase()},isAscii:function(e){return f(e),U.test(e)},isFullWidth:function(e){return f(e),b.test(e)},isHalfWidth:function(e){return f(e),P.test(e)},isVariableWidth:function(e){return f(e),b.test(e)&&P.test(e)},isMultibyte:function(e){return f(e),K.test(e)},isSurrogatePair:function(e){return f(e),k.test(e)},isInt:O,isFloat:function(e,t){f(e),t=t||{};var r=new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\"+(t.locale?x[t.locale]:\".\")+\"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\");if(\"\"===e||\".\"===e||\"-\"===e||\"+\"===e)return!1;var o=parseFloat(e.replace(\",\",\".\"));return r.test(e)&&(!t.hasOwnProperty(\"min\")||o>=t.min)&&(!t.hasOwnProperty(\"max\")||o<=t.max)&&(!t.hasOwnProperty(\"lt\")||o<t.lt)&&(!t.hasOwnProperty(\"gt\")||o>t.gt)},isDecimal:function(e,t){if(f(e),(t=c(t,H)).locale in x)return!z.includes(e.replace(/ /g,\"\"))&&(r=t,new RegExp(\"^[-+]?([0-9]+)?(\\\\\"+x[r.locale]+\"[0-9]{\"+r.decimal_digits+\"})\"+(r.force_decimal?\"\":\"?\")+\"$\")).test(e);var r;throw new Error(\"Invalid locale '\"+t.locale+\"'\")},isHexadecimal:W,isDivisibleBy:function(e,t){return f(e),r(e)%parseInt(t,10)==0},isHexColor:function(e){return f(e),Y.test(e)},isISRC:function(e){return f(e),j.test(e)},isMD5:function(e){return f(e),J.test(e)},isHash:function(e,t){return f(e),new RegExp(\"^[a-f0-9]{\"+q[t]+\"}$\").test(e)},isJSON:function(e){f(e);try{var t=JSON.parse(e);return!!t&&\"object\"===(void 0===t?\"undefined\":a(t))}catch(e){}return!1},isEmpty:function(e){return f(e),0===e.length},isLength:function(e,t){f(e);var r=void 0,o=void 0;\"object\"===(void 0===t?\"undefined\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=e.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g)||[],n=e.length-i.length;return r<=n&&(void 0===o||n<=o)},isByteLength:d,isUUID:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"all\";f(e);var r=Q[t];return r&&r.test(e)},isMongoId:function(e){return f(e),W(e)&&24===e.length},isAfter:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&r<o)},isBefore:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&o<r)},isIn:function(e,t){f(e);var r=void 0;if(\"[object Array]\"===Object.prototype.toString.call(t)){var o=[];for(r in t)({}).hasOwnProperty.call(t,r)&&(o[r]=n(t[r]));return 0<=o.indexOf(e)}return\"object\"===(void 0===t?\"undefined\":a(t))?t.hasOwnProperty(e):!(!t||\"function\"!=typeof t.indexOf)&&0<=t.indexOf(e)},isCreditCard:function(e){f(e);var t=e.replace(/[- ]+/g,\"\");if(!X.test(t))return!1;for(var r=0,o=void 0,i=void 0,n=void 0,a=t.length-1;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i%10+1:i,n=!n;return!(r%10!=0||!t)},isISIN:function(e){if(f(e),!ee.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),r=0,o=void 0,i=void 0,n=!0,a=t.length-2;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i+1:i,n=!n;return parseInt(e.substr(e.length-1),10)===(1e4-r)%10},isISBN:function e(t){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"\";if(f(t),!(r=String(r)))return e(t,10)||e(t,13);var o=t.replace(/[\\s-]+/g,\"\"),i=0,n=void 0;if(\"10\"===r){if(!te.test(o))return!1;for(n=0;n<9;n++)i+=(n+1)*o.charAt(n);if(\"X\"===o.charAt(9)?i+=100:i+=10*o.charAt(9),i%11==0)return!!o}else if(\"13\"===r){if(!re.test(o))return!1;for(n=0;n<12;n++)i+=oe[n%2]*o.charAt(n);if(o.charAt(12)-(10-i%10)%10==0)return!!o}return!1},isISSN:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};f(e);var r=ie;if(r=t.require_hyphen?r.replace(\"?\",\"\"):r,!(r=t.case_sensitive?new RegExp(r):new RegExp(r,\"i\")).test(e))return!1;var o=e.replace(\"-\",\"\"),i=8,n=0,a=!0,l=!1,s=void 0;try{for(var u,d=o[Symbol.iterator]();!(a=(u=d.next()).done);a=!0){var c=u.value;n+=(\"X\"===c.toUpperCase()?10:+c)*i,--i}}catch(e){l=!0,s=e}finally{try{!a&&d.return&&d.return()}finally{if(l)throw s}}return n%11==0},isMobilePhone:function(e,t,r){if(f(e),r&&r.strictMode&&!e.startsWith(\"+\"))return!1;if(t in ne)return ne[t].test(e);if(\"any\"===t){for(var o in ne)if(ne.hasOwnProperty(o)&&ne[o].test(e))return!0;return!1}throw new Error(\"Invalid locale '\"+t+\"'\")},isPostalCode:function(e,t){if(f(e),t in Te)return Te[t].test(e);if(\"any\"===t){for(var r in Te)if(Te.hasOwnProperty(r)&&Te[r].test(e))return!0;return!1}throw new Error(\"Invalid locale '\"+t+\"'\")},isCurrency:function(e,t){return f(e),function(e){var r=\"\\\\d{\"+e.digits_after_decimal[0]+\"}\";e.digits_after_decimal.forEach(function(e,t){0!==t&&(r=r+\"|\\\\d{\"+e+\"}\")});var t=\"(\\\\\"+e.symbol.replace(/\\./g,\"\\\\.\")+\")\"+(e.require_symbol?\"\":\"?\"),o=\"(\"+[\"0\",\"[1-9]\\\\d*\",\"[1-9]\\\\d{0,2}(\\\\\"+e.thousands_separator+\"\\\\d{3})*\"].join(\"|\")+\")?\",i=\"(\\\\\"+e.decimal_separator+\"(\"+r+\"))\"+(e.require_decimal?\"\":\"?\"),n=o+(e.allow_decimal||e.require_decimal?i:\"\");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?n+=\"-?\":e.negative_sign_before_digits&&(n=\"-?\"+n)),e.allow_negative_sign_placeholder?n=\"( (?!\\\\-))?\"+n:e.allow_space_after_symbol?n=\" ?\"+n:e.allow_space_after_digits&&(n+=\"( (?!$))?\"),e.symbol_after_digits?n+=t:n=t+n,e.allow_negatives&&(e.parens_for_negatives?n=\"(\\\\(\"+n+\"\\\\)|\"+n+\")\":e.negative_sign_before_digits||e.negative_sign_after_digits||(n=\"-?\"+n)),new RegExp(\"^(?!-? )(?=.*\\\\d)\"+n+\"$\")}(t=c(t,ae)).test(e)},isISO8601:function(e){return f(e),le.test(e)},isRFC3339:function(e){return f(e),Ae.test(e)},isISO31661Alpha2:function(e){return f(e),he.includes(e.toUpperCase())},isISO31661Alpha3:function(e){return f(e),ve.includes(e.toUpperCase())},isBase64:function(e){f(e);var t=e.length;if(!t||t%4!=0||me.test(e))return!1;var r=e.indexOf(\"=\");return-1===r||r===t-1||r===t-2&&\"=\"===e[t-1]},isDataURI:function(e){f(e);var t=e.split(\",\");if(t.length<2)return!1;var r=t.shift().trim().split(\";\"),o=r.shift();if(\"data:\"!==o.substr(0,5))return!1;var i=o.substr(5);if(\"\"!==i&&!_e.test(i))return!1;for(var n=0;n<r.length;n++)if(n===r.length-1&&\"base64\"===r[n].toLowerCase());else if(!Fe.test(r[n]))return!1;for(var a=0;a<t.length;a++)if(!$e.test(t[a]))return!1;return!0},isMimeType:function(e){return f(e),Se.test(e)||Re.test(e)||Ee.test(e)},isLatLong:function(e){if(f(e),!e.includes(\",\"))return!1;var t=e.split(\",\");return xe.test(t[0])&&Me.test(t[1])},ltrim:Ze,rtrim:Be,trim:function(e,t){return Be(Ze(e,t),t)},escape:function(e){return f(e),e.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\\//g,\"&#x2F;\").replace(/\\\\/g,\"&#x5C;\").replace(/`/g,\"&#96;\")},unescape:function(e){return f(e),e.replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"').replace(/&#x27;/g,\"'\").replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\").replace(/&#x2F;/g,\"/\").replace(/&#x5C;/g,\"\\\\\").replace(/&#96;/g,\"`\")},stripLow:function(e,t){return f(e),Ie(e,t?\"\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F\":\"\\\\x00-\\\\x1F\\\\x7F\")},whitelist:function(e,t){return f(e),e.replace(new RegExp(\"[^\"+t+\"]+\",\"g\"),\"\")},blacklist:Ie,isWhitelisted:function(e,t){f(e);for(var r=e.length-1;0<=r;r--)if(-1===t.indexOf(e[r]))return!1;return!0},normalizeEmail:function(e,t){t=c(t,Le);var r=e.split(\"@\"),o=r.pop(),i=[r.join(\"@\"),o];if(i[1]=i[1].toLowerCase(),\"gmail.com\"===i[1]||\"googlemail.com\"===i[1]){if(t.gmail_remove_subaddress&&(i[0]=i[0].split(\"+\")[0]),t.gmail_remove_dots&&(i[0]=i[0].replace(/\\.+/g,Ue)),!i[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=t.gmail_convert_googlemaildotcom?\"gmail.com\":i[1]}else if(~ye.indexOf(i[1])){if(t.icloud_remove_subaddress&&(i[0]=i[0].split(\"+\")[0]),!i[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~Ge.indexOf(i[1])){if(t.outlookdotcom_remove_subaddress&&(i[0]=i[0].split(\"+\")[0]),!i[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~De.indexOf(i[1])){if(t.yahoo_remove_subaddress){var n=i[0].split(\"-\");i[0]=1<n.length?n.slice(0,-1).join(\"-\"):n[0]}if(!i[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(i[0]=i[0].toLowerCase())}else~Oe.indexOf(i[1])?((t.all_lowercase||t.yandex_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=\"yandex.ru\"):t.all_lowercase&&(i[0]=i[0].toLowerCase());return i.join(\"@\")},toString:n}});"
			},
			{
				"name": "rawinflate-rawdeflate.js",
				"source": "/*\n * $Id: rawinflate.js,v 0.3 2013/04/09 14:25:38 dankogai Exp dankogai $\n *\n * GNU General Public License, version 2 (GPL-2.0)\n *   http://opensource.org/licenses/GPL-2.0\n * original:\n *   http://www.onicos.com/staff/iz/amuse/javascript/expert/inflate.txt\n */\n\n(function(ctx){\n\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0.0.1\n * LastModified: Dec 25 1999\n */\n\n/* Interface:\n * data = zip_inflate(src);\n */\n\n/* constant parameters */\nvar zip_WSIZE = 32768;\t\t// Sliding Window size\nvar zip_STORED_BLOCK = 0;\nvar zip_STATIC_TREES = 1;\nvar zip_DYN_TREES    = 2;\n\n/* for inflate */\nvar zip_lbits = 9; \t\t// bits in base literal/length lookup table\nvar zip_dbits = 6; \t\t// bits in base distance lookup table\nvar zip_INBUFSIZ = 32768;\t// Input buffer size\nvar zip_INBUF_EXTRA = 64;\t// Extra buffer\n\n/* variables (inflate) */\nvar zip_slide;\nvar zip_wp;\t\t\t// current position in slide\nvar zip_fixed_tl = null;\t// inflate static\nvar zip_fixed_td;\t\t// inflate static\nvar zip_fixed_bl, zip_fixed_bd;\t// inflate static\nvar zip_bit_buf;\t\t// bit buffer\nvar zip_bit_len;\t\t// bits in bit buffer\nvar zip_method;\nvar zip_eof;\nvar zip_copy_leng;\nvar zip_copy_dist;\nvar zip_tl, zip_td;\t// literal/length and distance decoder tables\nvar zip_bl, zip_bd;\t// number of bits decoded by tl and td\n\nvar zip_inflate_data;\nvar zip_inflate_pos;\n\n\n/* constant tables (inflate) */\nvar zip_MASK_BITS = new Array(\n    0x0000,\n    0x0001, 0x0003, 0x0007, 0x000f, 0x001f, 0x003f, 0x007f, 0x00ff,\n    0x01ff, 0x03ff, 0x07ff, 0x0fff, 0x1fff, 0x3fff, 0x7fff, 0xffff);\n// Tables for deflate from PKZIP's appnote.txt.\nvar zip_cplens = new Array( // Copy lengths for literal codes 257..285\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n    35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0);\n/* note: see note #13 above about the 258 in this list. */\nvar zip_cplext = new Array( // Extra bits for literal codes 257..285\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n    3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99); // 99==invalid\nvar zip_cpdist = new Array( // Copy offsets for distance codes 0..29\n    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n    257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n    8193, 12289, 16385, 24577);\nvar zip_cpdext = new Array( // Extra bits for distance codes\n    0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n    7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n    12, 12, 13, 13);\nvar zip_border = new Array(  // Order of the bit length code lengths\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15);\n/* objects (inflate) */\n\nvar zip_HuftList = function() {\n    this.next = null;\n    this.list = null;\n}\n\nvar zip_HuftNode = function() {\n    this.e = 0; // number of extra bits or operation\n    this.b = 0; // number of bits in this code or subcode\n\n    // union\n    this.n = 0; // literal, length base, or distance base\n    this.t = null; // (zip_HuftNode) pointer to next level of table\n}\n\nvar zip_HuftBuild = function(b,\t// code lengths in bits (all assumed <= BMAX)\n\t\t       n,\t// number of codes (assumed <= N_MAX)\n\t\t       s,\t// number of simple-valued codes (0..s-1)\n\t\t       d,\t// list of base values for non-simple codes\n\t\t       e,\t// list of extra bits for non-simple codes\n\t\t       mm\t// maximum lookup bits\n\t\t   ) {\n    this.BMAX = 16;   // maximum bit length of any code\n    this.N_MAX = 288; // maximum number of codes in any set\n    this.status = 0;\t// 0: success, 1: incomplete table, 2: bad input\n    this.root = null;\t// (zip_HuftList) starting table\n    this.m = 0;\t\t// maximum lookup bits, returns actual\n\n/* Given a list of code lengths and a maximum table size, make a set of\n   tables to decode that set of codes.\tReturn zero on success, one if\n   the given code set is incomplete (the tables are still built in this\n   case), two if the input is invalid (all zero length codes or an\n   oversubscribed set of lengths), and three if not enough memory.\n   The code with value 256 is special, and the tables are constructed\n   so that no bits beyond that code are fetched when that code is\n   decoded. */\n    {\n\tvar a;\t\t\t// counter for codes of length k\n\tvar c = new Array(this.BMAX+1);\t// bit length count table\n\tvar el;\t\t\t// length of EOB code (value 256)\n\tvar f;\t\t\t// i repeats in table every f entries\n\tvar g;\t\t\t// maximum code length\n\tvar h;\t\t\t// table level\n\tvar i;\t\t\t// counter, current code\n\tvar j;\t\t\t// counter\n\tvar k;\t\t\t// number of bits in current code\n\tvar lx = new Array(this.BMAX+1);\t// stack of bits per table\n\tvar p;\t\t\t// pointer into c[], b[], or v[]\n\tvar pidx;\t\t// index of p\n\tvar q;\t\t\t// (zip_HuftNode) points to current table\n\tvar r = new zip_HuftNode(); // table entry for structure assignment\n\tvar u = new Array(this.BMAX); // zip_HuftNode[BMAX][]  table stack\n\tvar v = new Array(this.N_MAX); // values in order of bit length\n\tvar w;\n\tvar x = new Array(this.BMAX+1);// bit offsets, then code stack\n\tvar xp;\t\t\t// pointer into x or c\n\tvar y;\t\t\t// number of dummy codes added\n\tvar z;\t\t\t// number of entries in current table\n\tvar o;\n\tvar tail;\t\t// (zip_HuftList)\n\n\ttail = this.root = null;\n\tfor(i = 0; i < c.length; i++)\n\t    c[i] = 0;\n\tfor(i = 0; i < lx.length; i++)\n\t    lx[i] = 0;\n\tfor(i = 0; i < u.length; i++)\n\t    u[i] = null;\n\tfor(i = 0; i < v.length; i++)\n\t    v[i] = 0;\n\tfor(i = 0; i < x.length; i++)\n\t    x[i] = 0;\n\n\t// Generate counts for each bit length\n\tel = n > 256 ? b[256] : this.BMAX; // set length of EOB code, if any\n\tp = b; pidx = 0;\n\ti = n;\n\tdo {\n\t    c[p[pidx]]++;\t// assume all entries <= BMAX\n\t    pidx++;\n\t} while(--i > 0);\n\tif(c[0] == n) {\t// null input--all zero length codes\n\t    this.root = null;\n\t    this.m = 0;\n\t    this.status = 0;\n\t    return;\n\t}\n\n\t// Find minimum and maximum length, bound *m by those\n\tfor(j = 1; j <= this.BMAX; j++)\n\t    if(c[j] != 0)\n\t\tbreak;\n\tk = j;\t\t\t// minimum code length\n\tif(mm < j)\n\t    mm = j;\n\tfor(i = this.BMAX; i != 0; i--)\n\t    if(c[i] != 0)\n\t\tbreak;\n\tg = i;\t\t\t// maximum code length\n\tif(mm > i)\n\t    mm = i;\n\n\t// Adjust last length count to fill out codes, if needed\n\tfor(y = 1 << j; j < i; j++, y <<= 1)\n\t    if((y -= c[j]) < 0) {\n\t\tthis.status = 2;\t// bad input: more codes than bits\n\t\tthis.m = mm;\n\t\treturn;\n\t    }\n\tif((y -= c[i]) < 0) {\n\t    this.status = 2;\n\t    this.m = mm;\n\t    return;\n\t}\n\tc[i] += y;\n\n\t// Generate starting offsets into the value table for each length\n\tx[1] = j = 0;\n\tp = c;\n\tpidx = 1;\n\txp = 2;\n\twhile(--i > 0)\t\t// note that i == g from above\n\t    x[xp++] = (j += p[pidx++]);\n\n\t// Make a table of values in order of bit lengths\n\tp = b; pidx = 0;\n\ti = 0;\n\tdo {\n\t    if((j = p[pidx++]) != 0)\n\t\tv[x[j]++] = i;\n\t} while(++i < n);\n\tn = x[g];\t\t\t// set n to length of v\n\n\t// Generate the Huffman codes and for each, make the table entries\n\tx[0] = i = 0;\t\t// first Huffman code is zero\n\tp = v; pidx = 0;\t\t// grab values in bit order\n\th = -1;\t\t\t// no tables yet--level -1\n\tw = lx[0] = 0;\t\t// no bits decoded yet\n\tq = null;\t\t\t// ditto\n\tz = 0;\t\t\t// ditto\n\n\t// go through the bit lengths (k already is bits in shortest code)\n\tfor(; k <= g; k++) {\n\t    a = c[k];\n\t    while(a-- > 0) {\n\t\t// here i is the Huffman code of length k bits for value p[pidx]\n\t\t// make tables up to required level\n\t\twhile(k > w + lx[1 + h]) {\n\t\t    w += lx[1 + h]; // add bits already decoded\n\t\t    h++;\n\n\t\t    // compute minimum size table less than or equal to *m bits\n\t\t    z = (z = g - w) > mm ? mm : z; // upper limit\n\t\t    if((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n\t\t\t// too few codes for k-w bit table\n\t\t\tf -= a + 1;\t// deduct codes from patterns left\n\t\t\txp = k;\n\t\t\twhile(++j < z) { // try smaller tables up to z bits\n\t\t\t    if((f <<= 1) <= c[++xp])\n\t\t\t\tbreak;\t// enough codes to use up j bits\n\t\t\t    f -= c[xp];\t// else deduct codes from patterns\n\t\t\t}\n\t\t    }\n\t\t    if(w + j > el && w < el)\n\t\t\tj = el - w;\t// make EOB code end at table\n\t\t    z = 1 << j;\t// table entries for j-bit table\n\t\t    lx[1 + h] = j; // set table size in stack\n\n\t\t    // allocate and link in new table\n\t\t    q = new Array(z);\n\t\t    for(o = 0; o < z; o++) {\n\t\t\tq[o] = new zip_HuftNode();\n\t\t    }\n\n\t\t    if(tail == null)\n\t\t\ttail = this.root = new zip_HuftList();\n\t\t    else\n\t\t\ttail = tail.next = new zip_HuftList();\n\t\t    tail.next = null;\n\t\t    tail.list = q;\n\t\t    u[h] = q;\t// table starts after link\n\n\t\t    /* connect to last table, if there is one */\n\t\t    if(h > 0) {\n\t\t\tx[h] = i;\t\t// save pattern for backing up\n\t\t\tr.b = lx[h];\t// bits to dump before this table\n\t\t\tr.e = 16 + j;\t// bits in this table\n\t\t\tr.t = q;\t\t// pointer to this table\n\t\t\tj = (i & ((1 << w) - 1)) >> (w - lx[h]);\n\t\t\tu[h-1][j].e = r.e;\n\t\t\tu[h-1][j].b = r.b;\n\t\t\tu[h-1][j].n = r.n;\n\t\t\tu[h-1][j].t = r.t;\n\t\t    }\n\t\t}\n\n\t\t// set up table entry in r\n\t\tr.b = k - w;\n\t\tif(pidx >= n)\n\t\t    r.e = 99;\t\t// out of values--invalid code\n\t\telse if(p[pidx] < s) {\n\t\t    r.e = (p[pidx] < 256 ? 16 : 15); // 256 is end-of-block code\n\t\t    r.n = p[pidx++];\t// simple code is just the value\n\t\t} else {\n\t\t    r.e = e[p[pidx] - s];\t// non-simple--look up in lists\n\t\t    r.n = d[p[pidx++] - s];\n\t\t}\n\n\t\t// fill code-like entries with r //\n\t\tf = 1 << (k - w);\n\t\tfor(j = i >> w; j < z; j += f) {\n\t\t    q[j].e = r.e;\n\t\t    q[j].b = r.b;\n\t\t    q[j].n = r.n;\n\t\t    q[j].t = r.t;\n\t\t}\n\n\t\t// backwards increment the k-bit code i\n\t\tfor(j = 1 << (k - 1); (i & j) != 0; j >>= 1)\n\t\t    i ^= j;\n\t\ti ^= j;\n\n\t\t// backup over finished tables\n\t\twhile((i & ((1 << w) - 1)) != x[h]) {\n\t\t    w -= lx[h];\t\t// don't need to update q\n\t\t    h--;\n\t\t}\n\t    }\n\t}\n\n\t/* return actual size of base table */\n\tthis.m = lx[1];\n\n\t/* Return true (1) if we were given an incomplete table */\n\tthis.status = ((y != 0 && g != 1) ? 1 : 0);\n    } /* end of constructor */\n}\n\n\n/* routines (inflate) */\n\nvar zip_GET_BYTE = function() {\n    if(zip_inflate_data.length == zip_inflate_pos)\n\treturn -1;\n    return zip_inflate_data.charCodeAt(zip_inflate_pos++) & 0xff;\n}\n\nvar zip_NEEDBITS = function(n) {\n    while(zip_bit_len < n) {\n\tzip_bit_buf |= zip_GET_BYTE() << zip_bit_len;\n\tzip_bit_len += 8;\n    }\n}\n\nvar zip_GETBITS = function(n) {\n    return zip_bit_buf & zip_MASK_BITS[n];\n}\n\nvar zip_DUMPBITS = function(n) {\n    zip_bit_buf >>= n;\n    zip_bit_len -= n;\n}\n\nvar zip_inflate_codes = function(buff, off, size) {\n    /* inflate (decompress) the codes in a deflated (compressed) block.\n       Return an error code or zero if it all goes ok. */\n    var e;\t\t// table entry flag/number of extra bits\n    var t;\t\t// (zip_HuftNode) pointer to table entry\n    var n;\n\n    if(size == 0)\n      return 0;\n\n    // inflate the coded data\n    n = 0;\n    for(;;) {\t\t\t// do until end of block\n\tzip_NEEDBITS(zip_bl);\n\tt = zip_tl.list[zip_GETBITS(zip_bl)];\n\te = t.e;\n\twhile(e > 16) {\n\t    if(e == 99)\n\t\treturn -1;\n\t    zip_DUMPBITS(t.b);\n\t    e -= 16;\n\t    zip_NEEDBITS(e);\n\t    t = t.t[zip_GETBITS(e)];\n\t    e = t.e;\n\t}\n\tzip_DUMPBITS(t.b);\n\n\tif(e == 16) {\t\t// then it's a literal\n\t    zip_wp &= zip_WSIZE - 1;\n\t    buff[off + n++] = zip_slide[zip_wp++] = t.n;\n\t    if(n == size)\n\t\treturn size;\n\t    continue;\n\t}\n\n\t// exit if end of block\n\tif(e == 15)\n\t    break;\n\n\t// it's an EOB or a length\n\n\t// get length of block to copy\n\tzip_NEEDBITS(e);\n\tzip_copy_leng = t.n + zip_GETBITS(e);\n\tzip_DUMPBITS(e);\n\n\t// decode distance of block to copy\n\tzip_NEEDBITS(zip_bd);\n\tt = zip_td.list[zip_GETBITS(zip_bd)];\n\te = t.e;\n\n\twhile(e > 16) {\n\t    if(e == 99)\n\t\treturn -1;\n\t    zip_DUMPBITS(t.b);\n\t    e -= 16;\n\t    zip_NEEDBITS(e);\n\t    t = t.t[zip_GETBITS(e)];\n\t    e = t.e;\n\t}\n\tzip_DUMPBITS(t.b);\n\tzip_NEEDBITS(e);\n\tzip_copy_dist = zip_wp - t.n - zip_GETBITS(e);\n\tzip_DUMPBITS(e);\n\n\t// do the copy\n\twhile(zip_copy_leng > 0 && n < size) {\n\t    zip_copy_leng--;\n\t    zip_copy_dist &= zip_WSIZE - 1;\n\t    zip_wp &= zip_WSIZE - 1;\n\t    buff[off + n++] = zip_slide[zip_wp++]\n\t\t= zip_slide[zip_copy_dist++];\n\t}\n\n\tif(n == size)\n\t    return size;\n    }\n\n    zip_method = -1; // done\n    return n;\n}\n\nvar zip_inflate_stored = function(buff, off, size) {\n    /* \"decompress\" an inflated type 0 (stored) block. */\n    var n;\n\n    // go to byte boundary\n    n = zip_bit_len & 7;\n    zip_DUMPBITS(n);\n\n    // get the length and its complement\n    zip_NEEDBITS(16);\n    n = zip_GETBITS(16);\n    zip_DUMPBITS(16);\n    zip_NEEDBITS(16);\n    if(n != ((~zip_bit_buf) & 0xffff))\n\treturn -1;\t\t\t// error in compressed data\n    zip_DUMPBITS(16);\n\n    // read and output the compressed data\n    zip_copy_leng = n;\n\n    n = 0;\n    while(zip_copy_leng > 0 && n < size) {\n\tzip_copy_leng--;\n\tzip_wp &= zip_WSIZE - 1;\n\tzip_NEEDBITS(8);\n\tbuff[off + n++] = zip_slide[zip_wp++] =\n\t    zip_GETBITS(8);\n\tzip_DUMPBITS(8);\n    }\n\n    if(zip_copy_leng == 0)\n      zip_method = -1; // done\n    return n;\n}\n\nvar zip_inflate_fixed = function(buff, off, size) {\n    /* decompress an inflated type 1 (fixed Huffman codes) block.  We should\n       either replace this with a custom decoder, or at least precompute the\n       Huffman tables. */\n\n    // if first time, set up tables for fixed blocks\n    if(zip_fixed_tl == null) {\n\tvar i;\t\t\t// temporary variable\n\tvar l = new Array(288);\t// length list for huft_build\n\tvar h;\t// zip_HuftBuild\n\n\t// literal table\n\tfor(i = 0; i < 144; i++)\n\t    l[i] = 8;\n\tfor(; i < 256; i++)\n\t    l[i] = 9;\n\tfor(; i < 280; i++)\n\t    l[i] = 7;\n\tfor(; i < 288; i++)\t// make a complete, but wrong code set\n\t    l[i] = 8;\n\tzip_fixed_bl = 7;\n\n\th = new zip_HuftBuild(l, 288, 257, zip_cplens, zip_cplext,\n\t\t\t      zip_fixed_bl);\n\tif(h.status != 0) {\n\t    alert(\"HufBuild error: \"+h.status);\n\t    return -1;\n\t}\n\tzip_fixed_tl = h.root;\n\tzip_fixed_bl = h.m;\n\n\t// distance table\n\tfor(i = 0; i < 30; i++)\t// make an incomplete code set\n\t    l[i] = 5;\n\tzip_fixed_bd = 5;\n\n\th = new zip_HuftBuild(l, 30, 0, zip_cpdist, zip_cpdext, zip_fixed_bd);\n\tif(h.status > 1) {\n\t    zip_fixed_tl = null;\n\t    alert(\"HufBuild error: \"+h.status);\n\t    return -1;\n\t}\n\tzip_fixed_td = h.root;\n\tzip_fixed_bd = h.m;\n    }\n\n    zip_tl = zip_fixed_tl;\n    zip_td = zip_fixed_td;\n    zip_bl = zip_fixed_bl;\n    zip_bd = zip_fixed_bd;\n    return zip_inflate_codes(buff, off, size);\n}\n\nvar zip_inflate_dynamic = function(buff, off, size) {\n    // decompress an inflated type 2 (dynamic Huffman codes) block.\n    var i;\t\t// temporary variables\n    var j;\n    var l;\t\t// last length\n    var n;\t\t// number of lengths to get\n    var t;\t\t// (zip_HuftNode) literal/length code table\n    var nb;\t\t// number of bit length codes\n    var nl;\t\t// number of literal/length codes\n    var nd;\t\t// number of distance codes\n    var ll = new Array(286+30); // literal/length and distance code lengths\n    var h;\t\t// (zip_HuftBuild)\n\n    for(i = 0; i < ll.length; i++)\n\tll[i] = 0;\n\n    // read in table lengths\n    zip_NEEDBITS(5);\n    nl = 257 + zip_GETBITS(5);\t// number of literal/length codes\n    zip_DUMPBITS(5);\n    zip_NEEDBITS(5);\n    nd = 1 + zip_GETBITS(5);\t// number of distance codes\n    zip_DUMPBITS(5);\n    zip_NEEDBITS(4);\n    nb = 4 + zip_GETBITS(4);\t// number of bit length codes\n    zip_DUMPBITS(4);\n    if(nl > 286 || nd > 30)\n      return -1;\t\t// bad lengths\n\n    // read in bit-length-code lengths\n    for(j = 0; j < nb; j++)\n    {\n\tzip_NEEDBITS(3);\n\tll[zip_border[j]] = zip_GETBITS(3);\n\tzip_DUMPBITS(3);\n    }\n    for(; j < 19; j++)\n\tll[zip_border[j]] = 0;\n\n    // build decoding table for trees--single level, 7 bit lookup\n    zip_bl = 7;\n    h = new zip_HuftBuild(ll, 19, 19, null, null, zip_bl);\n    if(h.status != 0)\n\treturn -1;\t// incomplete code set\n\n    zip_tl = h.root;\n    zip_bl = h.m;\n\n    // read in literal and distance code lengths\n    n = nl + nd;\n    i = l = 0;\n    while(i < n) {\n\tzip_NEEDBITS(zip_bl);\n\tt = zip_tl.list[zip_GETBITS(zip_bl)];\n\tj = t.b;\n\tzip_DUMPBITS(j);\n\tj = t.n;\n\tif(j < 16)\t\t// length of code in bits (0..15)\n\t    ll[i++] = l = j;\t// save last length in l\n\telse if(j == 16) {\t// repeat last length 3 to 6 times\n\t    zip_NEEDBITS(2);\n\t    j = 3 + zip_GETBITS(2);\n\t    zip_DUMPBITS(2);\n\t    if(i + j > n)\n\t\treturn -1;\n\t    while(j-- > 0)\n\t\tll[i++] = l;\n\t} else if(j == 17) {\t// 3 to 10 zero length codes\n\t    zip_NEEDBITS(3);\n\t    j = 3 + zip_GETBITS(3);\n\t    zip_DUMPBITS(3);\n\t    if(i + j > n)\n\t\treturn -1;\n\t    while(j-- > 0)\n\t\tll[i++] = 0;\n\t    l = 0;\n\t} else {\t\t// j == 18: 11 to 138 zero length codes\n\t    zip_NEEDBITS(7);\n\t    j = 11 + zip_GETBITS(7);\n\t    zip_DUMPBITS(7);\n\t    if(i + j > n)\n\t\treturn -1;\n\t    while(j-- > 0)\n\t\tll[i++] = 0;\n\t    l = 0;\n\t}\n    }\n\n    // build the decoding tables for literal/length and distance codes\n    zip_bl = zip_lbits;\n    h = new zip_HuftBuild(ll, nl, 257, zip_cplens, zip_cplext, zip_bl);\n    if(zip_bl == 0)\t// no literals or lengths\n\th.status = 1;\n    if(h.status != 0) {\n\tif(h.status == 1)\n\t    ;// **incomplete literal tree**\n\treturn -1;\t\t// incomplete code set\n    }\n    zip_tl = h.root;\n    zip_bl = h.m;\n\n    for(i = 0; i < nd; i++)\n\tll[i] = ll[i + nl];\n    zip_bd = zip_dbits;\n    h = new zip_HuftBuild(ll, nd, 0, zip_cpdist, zip_cpdext, zip_bd);\n    zip_td = h.root;\n    zip_bd = h.m;\n\n    if(zip_bd == 0 && nl > 257) {   // lengths but no distances\n\t// **incomplete distance tree**\n\treturn -1;\n    }\n\n    if(h.status == 1) {\n\t;// **incomplete distance tree**\n    }\n    if(h.status != 0)\n\treturn -1;\n\n    // decompress until an end-of-block code\n    return zip_inflate_codes(buff, off, size);\n}\n\nvar zip_inflate_start = function() {\n    var i;\n\n    if(zip_slide == null)\n\tzip_slide = new Array(2 * zip_WSIZE);\n    zip_wp = 0;\n    zip_bit_buf = 0;\n    zip_bit_len = 0;\n    zip_method = -1;\n    zip_eof = false;\n    zip_copy_leng = zip_copy_dist = 0;\n    zip_tl = null;\n}\n\nvar zip_inflate_internal = function(buff, off, size) {\n    // decompress an inflated entry\n    var n, i;\n\n    n = 0;\n    while(n < size) {\n\tif(zip_eof && zip_method == -1)\n\t    return n;\n\n\tif(zip_copy_leng > 0) {\n\t    if(zip_method != zip_STORED_BLOCK) {\n\t\t// STATIC_TREES or DYN_TREES\n\t\twhile(zip_copy_leng > 0 && n < size) {\n\t\t    zip_copy_leng--;\n\t\t    zip_copy_dist &= zip_WSIZE - 1;\n\t\t    zip_wp &= zip_WSIZE - 1;\n\t\t    buff[off + n++] = zip_slide[zip_wp++] =\n\t\t\tzip_slide[zip_copy_dist++];\n\t\t}\n\t    } else {\n\t\twhile(zip_copy_leng > 0 && n < size) {\n\t\t    zip_copy_leng--;\n\t\t    zip_wp &= zip_WSIZE - 1;\n\t\t    zip_NEEDBITS(8);\n\t\t    buff[off + n++] = zip_slide[zip_wp++] = zip_GETBITS(8);\n\t\t    zip_DUMPBITS(8);\n\t\t}\n\t\tif(zip_copy_leng == 0)\n\t\t    zip_method = -1; // done\n\t    }\n\t    if(n == size)\n\t\treturn n;\n\t}\n\n\tif(zip_method == -1) {\n\t    if(zip_eof)\n\t\tbreak;\n\n\t    // read in last block bit\n\t    zip_NEEDBITS(1);\n\t    if(zip_GETBITS(1) != 0)\n\t\tzip_eof = true;\n\t    zip_DUMPBITS(1);\n\n\t    // read in block type\n\t    zip_NEEDBITS(2);\n\t    zip_method = zip_GETBITS(2);\n\t    zip_DUMPBITS(2);\n\t    zip_tl = null;\n\t    zip_copy_leng = 0;\n\t}\n\n\tswitch(zip_method) {\n\t  case 0: // zip_STORED_BLOCK\n\t    i = zip_inflate_stored(buff, off + n, size - n);\n\t    break;\n\n\t  case 1: // zip_STATIC_TREES\n\t    if(zip_tl != null)\n\t\ti = zip_inflate_codes(buff, off + n, size - n);\n\t    else\n\t\ti = zip_inflate_fixed(buff, off + n, size - n);\n\t    break;\n\n\t  case 2: // zip_DYN_TREES\n\t    if(zip_tl != null)\n\t\ti = zip_inflate_codes(buff, off + n, size - n);\n\t    else\n\t\ti = zip_inflate_dynamic(buff, off + n, size - n);\n\t    break;\n\n\t  default: // error\n\t    i = -1;\n\t    break;\n\t}\n\n\tif(i == -1) {\n\t    if(zip_eof)\n\t\treturn 0;\n\t    return -1;\n\t}\n\tn += i;\n    }\n    return n;\n}\n\nvar zip_inflate = function(str) {\n    var i, j;\n\n    zip_inflate_start();\n    zip_inflate_data = str;\n    zip_inflate_pos = 0;\n\n    var buff = new Array(1024);\n    var aout = [];\n    while((i = zip_inflate_internal(buff, 0, buff.length)) > 0) {\n\tvar cbuf = new Array(i);\n\tfor(j = 0; j < i; j++){\n\t    cbuf[j] = String.fromCharCode(buff[j]);\n\t}\n\taout[aout.length] = cbuf.join(\"\");\n    }\n    zip_inflate_data = null; // G.C.\n    return aout.join(\"\");\n}\n\nif (! ctx.RawDeflate) ctx.RawDeflate = {};\nctx.RawDeflate.inflate = zip_inflate;\n\n})(this);\n\n/*\n * $Id: rawdeflate.js,v 0.5 2013/04/09 14:25:38 dankogai Exp dankogai $\n *\n * GNU General Public License, version 2 (GPL-2.0)\n *   http://opensource.org/licenses/GPL-2.0\n * Original:\n *  http://www.onicos.com/staff/iz/amuse/javascript/expert/deflate.txt\n */\n\n(function(ctx){\n\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0.1\n * LastModified: Dec 25 1999\n */\n\n/* Interface:\n * data = zip_deflate(src);\n */\n\n/* constant parameters */\nvar zip_WSIZE = 32768;\t\t// Sliding Window size\nvar zip_STORED_BLOCK = 0;\nvar zip_STATIC_TREES = 1;\nvar zip_DYN_TREES    = 2;\n\n/* for deflate */\nvar zip_DEFAULT_LEVEL = 6;\nvar zip_FULL_SEARCH = true;\nvar zip_INBUFSIZ = 32768;\t// Input buffer size\nvar zip_INBUF_EXTRA = 64;\t// Extra buffer\nvar zip_OUTBUFSIZ = 1024 * 8;\nvar zip_window_size = 2 * zip_WSIZE;\nvar zip_MIN_MATCH = 3;\nvar zip_MAX_MATCH = 258;\nvar zip_BITS = 16;\n// for SMALL_MEM\nvar zip_LIT_BUFSIZE = 0x2000;\nvar zip_HASH_BITS = 13;\n// for MEDIUM_MEM\n// var zip_LIT_BUFSIZE = 0x4000;\n// var zip_HASH_BITS = 14;\n// for BIG_MEM\n// var zip_LIT_BUFSIZE = 0x8000;\n// var zip_HASH_BITS = 15;\nif(zip_LIT_BUFSIZE > zip_INBUFSIZ)\n    alert(\"error: zip_INBUFSIZ is too small\");\nif((zip_WSIZE<<1) > (1<<zip_BITS))\n    alert(\"error: zip_WSIZE is too large\");\nif(zip_HASH_BITS > zip_BITS-1)\n    alert(\"error: zip_HASH_BITS is too large\");\nif(zip_HASH_BITS < 8 || zip_MAX_MATCH != 258)\n    alert(\"error: Code too clever\");\nvar zip_DIST_BUFSIZE = zip_LIT_BUFSIZE;\nvar zip_HASH_SIZE = 1 << zip_HASH_BITS;\nvar zip_HASH_MASK = zip_HASH_SIZE - 1;\nvar zip_WMASK = zip_WSIZE - 1;\nvar zip_NIL = 0; // Tail of hash chains\nvar zip_TOO_FAR = 4096;\nvar zip_MIN_LOOKAHEAD = zip_MAX_MATCH + zip_MIN_MATCH + 1;\nvar zip_MAX_DIST = zip_WSIZE - zip_MIN_LOOKAHEAD;\nvar zip_SMALLEST = 1;\nvar zip_MAX_BITS = 15;\nvar zip_MAX_BL_BITS = 7;\nvar zip_LENGTH_CODES = 29;\nvar zip_LITERALS =256;\nvar zip_END_BLOCK = 256;\nvar zip_L_CODES = zip_LITERALS + 1 + zip_LENGTH_CODES;\nvar zip_D_CODES = 30;\nvar zip_BL_CODES = 19;\nvar zip_REP_3_6 = 16;\nvar zip_REPZ_3_10 = 17;\nvar zip_REPZ_11_138 = 18;\nvar zip_HEAP_SIZE = 2 * zip_L_CODES + 1;\nvar zip_H_SHIFT = parseInt((zip_HASH_BITS + zip_MIN_MATCH - 1) /\n\t\t\t   zip_MIN_MATCH);\n\n/* variables */\nvar zip_free_queue;\nvar zip_qhead, zip_qtail;\nvar zip_initflag;\nvar zip_outbuf = null;\nvar zip_outcnt, zip_outoff;\nvar zip_complete;\nvar zip_window;\nvar zip_d_buf;\nvar zip_l_buf;\nvar zip_prev;\nvar zip_bi_buf;\nvar zip_bi_valid;\nvar zip_block_start;\nvar zip_ins_h;\nvar zip_hash_head;\nvar zip_prev_match;\nvar zip_match_available;\nvar zip_match_length;\nvar zip_prev_length;\nvar zip_strstart;\nvar zip_match_start;\nvar zip_eofile;\nvar zip_lookahead;\nvar zip_max_chain_length;\nvar zip_max_lazy_match;\nvar zip_compr_level;\nvar zip_good_match;\nvar zip_nice_match;\nvar zip_dyn_ltree;\nvar zip_dyn_dtree;\nvar zip_static_ltree;\nvar zip_static_dtree;\nvar zip_bl_tree;\nvar zip_l_desc;\nvar zip_d_desc;\nvar zip_bl_desc;\nvar zip_bl_count;\nvar zip_heap;\nvar zip_heap_len;\nvar zip_heap_max;\nvar zip_depth;\nvar zip_length_code;\nvar zip_dist_code;\nvar zip_base_length;\nvar zip_base_dist;\nvar zip_flag_buf;\nvar zip_last_lit;\nvar zip_last_dist;\nvar zip_last_flags;\nvar zip_flags;\nvar zip_flag_bit;\nvar zip_opt_len;\nvar zip_static_len;\nvar zip_deflate_data;\nvar zip_deflate_pos;\n\n/* objects (deflate) */\n\nvar zip_DeflateCT = function() {\n    this.fc = 0; // frequency count or bit string\n    this.dl = 0; // father node in Huffman tree or length of bit string\n}\n\nvar zip_DeflateTreeDesc = function() {\n    this.dyn_tree = null;\t// the dynamic tree\n    this.static_tree = null;\t// corresponding static tree or NULL\n    this.extra_bits = null;\t// extra bits for each code or NULL\n    this.extra_base = 0;\t// base index for extra_bits\n    this.elems = 0;\t\t// max number of elements in the tree\n    this.max_length = 0;\t// max bit length for the codes\n    this.max_code = 0;\t\t// largest code with non zero frequency\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nvar zip_DeflateConfiguration = function(a, b, c, d) {\n    this.good_length = a; // reduce lazy search above this match length\n    this.max_lazy = b;    // do not perform lazy search above this match length\n    this.nice_length = c; // quit search above this match length\n    this.max_chain = d;\n}\n\nvar zip_DeflateBuffer = function() {\n    this.next = null;\n    this.len = 0;\n    this.ptr = new Array(zip_OUTBUFSIZ);\n    this.off = 0;\n}\n\n/* constant tables */\nvar zip_extra_lbits = new Array(\n    0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0);\nvar zip_extra_dbits = new Array(\n    0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13);\nvar zip_extra_blbits = new Array(\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7);\nvar zip_bl_order = new Array(\n    16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15);\nvar zip_configuration_table = new Array(\n\tnew zip_DeflateConfiguration(0,    0,   0,    0),\n\tnew zip_DeflateConfiguration(4,    4,   8,    4),\n\tnew zip_DeflateConfiguration(4,    5,  16,    8),\n\tnew zip_DeflateConfiguration(4,    6,  32,   32),\n\tnew zip_DeflateConfiguration(4,    4,  16,   16),\n\tnew zip_DeflateConfiguration(8,   16,  32,   32),\n\tnew zip_DeflateConfiguration(8,   16, 128,  128),\n\tnew zip_DeflateConfiguration(8,   32, 128,  256),\n\tnew zip_DeflateConfiguration(32, 128, 258, 1024),\n\tnew zip_DeflateConfiguration(32, 258, 258, 4096));\n\n\n/* routines (deflate) */\n\nvar zip_deflate_start = function(level) {\n    var i;\n\n    if(!level)\n\tlevel = zip_DEFAULT_LEVEL;\n    else if(level < 1)\n\tlevel = 1;\n    else if(level > 9)\n\tlevel = 9;\n\n    zip_compr_level = level;\n    zip_initflag = false;\n    zip_eofile = false;\n    if(zip_outbuf != null)\n\treturn;\n\n    zip_free_queue = zip_qhead = zip_qtail = null;\n    zip_outbuf = new Array(zip_OUTBUFSIZ);\n    zip_window = new Array(zip_window_size);\n    zip_d_buf = new Array(zip_DIST_BUFSIZE);\n    zip_l_buf = new Array(zip_INBUFSIZ + zip_INBUF_EXTRA);\n    zip_prev = new Array(1 << zip_BITS);\n    zip_dyn_ltree = new Array(zip_HEAP_SIZE);\n    for(i = 0; i < zip_HEAP_SIZE; i++)\n\tzip_dyn_ltree[i] = new zip_DeflateCT();\n    zip_dyn_dtree = new Array(2*zip_D_CODES+1);\n    for(i = 0; i < 2*zip_D_CODES+1; i++)\n\tzip_dyn_dtree[i] = new zip_DeflateCT();\n    zip_static_ltree = new Array(zip_L_CODES+2);\n    for(i = 0; i < zip_L_CODES+2; i++)\n\tzip_static_ltree[i] = new zip_DeflateCT();\n    zip_static_dtree = new Array(zip_D_CODES);\n    for(i = 0; i < zip_D_CODES; i++)\n\tzip_static_dtree[i] = new zip_DeflateCT();\n    zip_bl_tree = new Array(2*zip_BL_CODES+1);\n    for(i = 0; i < 2*zip_BL_CODES+1; i++)\n\tzip_bl_tree[i] = new zip_DeflateCT();\n    zip_l_desc = new zip_DeflateTreeDesc();\n    zip_d_desc = new zip_DeflateTreeDesc();\n    zip_bl_desc = new zip_DeflateTreeDesc();\n    zip_bl_count = new Array(zip_MAX_BITS+1);\n    zip_heap = new Array(2*zip_L_CODES+1);\n    zip_depth = new Array(2*zip_L_CODES+1);\n    zip_length_code = new Array(zip_MAX_MATCH-zip_MIN_MATCH+1);\n    zip_dist_code = new Array(512);\n    zip_base_length = new Array(zip_LENGTH_CODES);\n    zip_base_dist = new Array(zip_D_CODES);\n    zip_flag_buf = new Array(parseInt(zip_LIT_BUFSIZE / 8));\n}\n\nvar zip_deflate_end = function() {\n    zip_free_queue = zip_qhead = zip_qtail = null;\n    zip_outbuf = null;\n    zip_window = null;\n    zip_d_buf = null;\n    zip_l_buf = null;\n    zip_prev = null;\n    zip_dyn_ltree = null;\n    zip_dyn_dtree = null;\n    zip_static_ltree = null;\n    zip_static_dtree = null;\n    zip_bl_tree = null;\n    zip_l_desc = null;\n    zip_d_desc = null;\n    zip_bl_desc = null;\n    zip_bl_count = null;\n    zip_heap = null;\n    zip_depth = null;\n    zip_length_code = null;\n    zip_dist_code = null;\n    zip_base_length = null;\n    zip_base_dist = null;\n    zip_flag_buf = null;\n}\n\nvar zip_reuse_queue = function(p) {\n    p.next = zip_free_queue;\n    zip_free_queue = p;\n}\n\nvar zip_new_queue = function() {\n    var p;\n\n    if(zip_free_queue != null)\n    {\n\tp = zip_free_queue;\n\tzip_free_queue = zip_free_queue.next;\n    }\n    else\n\tp = new zip_DeflateBuffer();\n    p.next = null;\n    p.len = p.off = 0;\n\n    return p;\n}\n\nvar zip_head1 = function(i) {\n    return zip_prev[zip_WSIZE + i];\n}\n\nvar zip_head2 = function(i, val) {\n    return zip_prev[zip_WSIZE + i] = val;\n}\n\n/* put_byte is used for the compressed output, put_ubyte for the\n * uncompressed output. However unlzw() uses window for its\n * suffix table instead of its output buffer, so it does not use put_ubyte\n * (to be cleaned up).\n */\nvar zip_put_byte = function(c) {\n    zip_outbuf[zip_outoff + zip_outcnt++] = c;\n    if(zip_outoff + zip_outcnt == zip_OUTBUFSIZ)\n\tzip_qoutbuf();\n}\n\n/* Output a 16 bit value, lsb first */\nvar zip_put_short = function(w) {\n    w &= 0xffff;\n    if(zip_outoff + zip_outcnt < zip_OUTBUFSIZ - 2) {\n\tzip_outbuf[zip_outoff + zip_outcnt++] = (w & 0xff);\n\tzip_outbuf[zip_outoff + zip_outcnt++] = (w >>> 8);\n    } else {\n\tzip_put_byte(w & 0xff);\n\tzip_put_byte(w >>> 8);\n    }\n}\n\n/* ==========================================================================\n * Insert string s in the dictionary and set match_head to the previous head\n * of the hash chain (the most recent string with same hash key). Return\n * the previous length of the hash chain.\n * IN  assertion: all calls to to INSERT_STRING are made with consecutive\n *    input characters and the first MIN_MATCH bytes of s are valid\n *    (except for the last MIN_MATCH-1 bytes of the input file).\n */\nvar zip_INSERT_STRING = function() {\n    zip_ins_h = ((zip_ins_h << zip_H_SHIFT)\n\t\t ^ (zip_window[zip_strstart + zip_MIN_MATCH - 1] & 0xff))\n\t& zip_HASH_MASK;\n    zip_hash_head = zip_head1(zip_ins_h);\n    zip_prev[zip_strstart & zip_WMASK] = zip_hash_head;\n    zip_head2(zip_ins_h, zip_strstart);\n}\n\n/* Send a code of the given tree. c and tree must not have side effects */\nvar zip_SEND_CODE = function(c, tree) {\n    zip_send_bits(tree[c].fc, tree[c].dl);\n}\n\n/* Mapping from a distance to a distance code. dist is the distance - 1 and\n * must not have side effects. dist_code[256] and dist_code[257] are never\n * used.\n */\nvar zip_D_CODE = function(dist) {\n    return (dist < 256 ? zip_dist_code[dist]\n\t    : zip_dist_code[256 + (dist>>7)]) & 0xff;\n}\n\n/* ==========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nvar zip_SMALLER = function(tree, n, m) {\n    return tree[n].fc < tree[m].fc ||\n      (tree[n].fc == tree[m].fc && zip_depth[n] <= zip_depth[m]);\n}\n\n/* ==========================================================================\n * read string data\n */\nvar zip_read_buff = function(buff, offset, n) {\n    var i;\n    for(i = 0; i < n && zip_deflate_pos < zip_deflate_data.length; i++)\n\tbuff[offset + i] =\n\t    zip_deflate_data.charCodeAt(zip_deflate_pos++) & 0xff;\n    return i;\n}\n\n/* ==========================================================================\n * Initialize the \"longest match\" routines for a new file\n */\nvar zip_lm_init = function() {\n    var j;\n\n    /* Initialize the hash table. */\n    for(j = 0; j < zip_HASH_SIZE; j++)\n//\tzip_head2(j, zip_NIL);\n\tzip_prev[zip_WSIZE + j] = 0;\n    /* prev will be initialized on the fly */\n\n    /* Set the default configuration parameters:\n     */\n    zip_max_lazy_match = zip_configuration_table[zip_compr_level].max_lazy;\n    zip_good_match     = zip_configuration_table[zip_compr_level].good_length;\n    if(!zip_FULL_SEARCH)\n\tzip_nice_match = zip_configuration_table[zip_compr_level].nice_length;\n    zip_max_chain_length = zip_configuration_table[zip_compr_level].max_chain;\n\n    zip_strstart = 0;\n    zip_block_start = 0;\n\n    zip_lookahead = zip_read_buff(zip_window, 0, 2 * zip_WSIZE);\n    if(zip_lookahead <= 0) {\n\tzip_eofile = true;\n\tzip_lookahead = 0;\n\treturn;\n    }\n    zip_eofile = false;\n    /* Make sure that we always have enough lookahead. This is important\n     * if input comes from a device such as a tty.\n     */\n    while(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\n\tzip_fill_window();\n\n    /* If lookahead < MIN_MATCH, ins_h is garbage, but this is\n     * not important since only literal bytes will be emitted.\n     */\n    zip_ins_h = 0;\n    for(j = 0; j < zip_MIN_MATCH - 1; j++) {\n//      UPDATE_HASH(ins_h, window[j]);\n\tzip_ins_h = ((zip_ins_h << zip_H_SHIFT) ^ (zip_window[j] & 0xff)) & zip_HASH_MASK;\n    }\n}\n\n/* ==========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n */\nvar zip_longest_match = function(cur_match) {\n    var chain_length = zip_max_chain_length; // max hash chain length\n    var scanp = zip_strstart; // current string\n    var matchp;\t\t// matched string\n    var len;\t\t// length of current match\n    var best_len = zip_prev_length;\t// best match length so far\n\n    /* Stop when cur_match becomes <= limit. To simplify the code,\n     * we prevent matches with the string of window index 0.\n     */\n    var limit = (zip_strstart > zip_MAX_DIST ? zip_strstart - zip_MAX_DIST : zip_NIL);\n\n    var strendp = zip_strstart + zip_MAX_MATCH;\n    var scan_end1 = zip_window[scanp + best_len - 1];\n    var scan_end  = zip_window[scanp + best_len];\n\n    /* Do not waste too much time if we already have a good match: */\n    if(zip_prev_length >= zip_good_match)\n\tchain_length >>= 2;\n\n//  Assert(encoder->strstart <= window_size-MIN_LOOKAHEAD, \"insufficient lookahead\");\n\n    do {\n//    Assert(cur_match < encoder->strstart, \"no future\");\n\tmatchp = cur_match;\n\n\t/* Skip to next match if the match length cannot increase\n\t    * or if the match length is less than 2:\n\t*/\n\tif(zip_window[matchp + best_len]\t!= scan_end  ||\n\t   zip_window[matchp + best_len - 1]\t!= scan_end1 ||\n\t   zip_window[matchp]\t\t\t!= zip_window[scanp] ||\n\t   zip_window[++matchp]\t\t\t!= zip_window[scanp + 1]) {\n\t    continue;\n\t}\n\n\t/* The check at best_len-1 can be removed because it will be made\n         * again later. (This heuristic is not always a win.)\n         * It is not necessary to compare scan[2] and match[2] since they\n         * are always equal when the other bytes match, given that\n         * the hash keys are equal and that HASH_BITS >= 8.\n         */\n\tscanp += 2;\n\tmatchp++;\n\n\t/* We check for insufficient lookahead only every 8th comparison;\n         * the 256th check will be made at strstart+258.\n         */\n\tdo {\n\t} while(zip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tscanp < strendp);\n\n      len = zip_MAX_MATCH - (strendp - scanp);\n      scanp = strendp - zip_MAX_MATCH;\n\n      if(len > best_len) {\n\t  zip_match_start = cur_match;\n\t  best_len = len;\n\t  if(zip_FULL_SEARCH) {\n\t      if(len >= zip_MAX_MATCH) break;\n\t  } else {\n\t      if(len >= zip_nice_match) break;\n\t  }\n\n\t  scan_end1  = zip_window[scanp + best_len-1];\n\t  scan_end   = zip_window[scanp + best_len];\n      }\n    } while((cur_match = zip_prev[cur_match & zip_WMASK]) > limit\n\t    && --chain_length != 0);\n\n    return best_len;\n}\n\n/* ==========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead, and sets eofile if end of input file.\n * IN assertion: lookahead < MIN_LOOKAHEAD && strstart + lookahead > 0\n * OUT assertions: at least one byte has been read, or eofile is set;\n *    file reads are performed for at least two bytes (required for the\n *    translate_eol option).\n */\nvar zip_fill_window = function() {\n    var n, m;\n\n    // Amount of free space at the end of the window.\n    var more = zip_window_size - zip_lookahead - zip_strstart;\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if(more == -1) {\n\t/* Very unlikely, but possible on 16 bit machine if strstart == 0\n         * and lookahead == 1 (input done one byte at time)\n         */\n\tmore--;\n    } else if(zip_strstart >= zip_WSIZE + zip_MAX_DIST) {\n\t/* By the IN assertion, the window is not empty so we can't confuse\n         * more == 0 with more == 64K on a 16 bit machine.\n         */\n//\tAssert(window_size == (ulg)2*WSIZE, \"no sliding with BIG_MEM\");\n\n//\tSystem.arraycopy(window, WSIZE, window, 0, WSIZE);\n\tfor(n = 0; n < zip_WSIZE; n++)\n\t    zip_window[n] = zip_window[n + zip_WSIZE];\n      \n\tzip_match_start -= zip_WSIZE;\n\tzip_strstart    -= zip_WSIZE; /* we now have strstart >= MAX_DIST: */\n\tzip_block_start -= zip_WSIZE;\n\n\tfor(n = 0; n < zip_HASH_SIZE; n++) {\n\t    m = zip_head1(n);\n\t    zip_head2(n, m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\n\t}\n\tfor(n = 0; n < zip_WSIZE; n++) {\n\t    /* If n is not on any hash chain, prev[n] is garbage but\n\t     * its value will never be used.\n\t     */\n\t    m = zip_prev[n];\n\t    zip_prev[n] = (m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\n\t}\n\tmore += zip_WSIZE;\n    }\n    // At this point, more >= 2\n    if(!zip_eofile) {\n\tn = zip_read_buff(zip_window, zip_strstart + zip_lookahead, more);\n\tif(n <= 0)\n\t    zip_eofile = true;\n\telse\n\t    zip_lookahead += n;\n    }\n}\n\n/* ==========================================================================\n * Processes a new input file and return its compressed length. This\n * function does not perform lazy evaluationof matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nvar zip_deflate_fast = function() {\n    while(zip_lookahead != 0 && zip_qhead == null) {\n\tvar flush; // set if current block must be flushed\n\n\t/* Insert the string window[strstart .. strstart+2] in the\n\t * dictionary, and set hash_head to the head of the hash chain:\n\t */\n\tzip_INSERT_STRING();\n\n\t/* Find the longest match, discarding those <= prev_length.\n\t * At this point we have always match_length < MIN_MATCH\n\t */\n\tif(zip_hash_head != zip_NIL &&\n\t   zip_strstart - zip_hash_head <= zip_MAX_DIST) {\n\t    /* To simplify the code, we prevent matches with the string\n\t     * of window index 0 (in particular we have to avoid a match\n\t     * of the string with itself at the start of the input file).\n\t     */\n\t    zip_match_length = zip_longest_match(zip_hash_head);\n\t    /* longest_match() sets match_start */\n\t    if(zip_match_length > zip_lookahead)\n\t\tzip_match_length = zip_lookahead;\n\t}\n\tif(zip_match_length >= zip_MIN_MATCH) {\n//\t    check_match(strstart, match_start, match_length);\n\n\t    flush = zip_ct_tally(zip_strstart - zip_match_start,\n\t\t\t\t zip_match_length - zip_MIN_MATCH);\n\t    zip_lookahead -= zip_match_length;\n\n\t    /* Insert new strings in the hash table only if the match length\n\t     * is not too large. This saves time but degrades compression.\n\t     */\n\t    if(zip_match_length <= zip_max_lazy_match) {\n\t\tzip_match_length--; // string at strstart already in hash table\n\t\tdo {\n\t\t    zip_strstart++;\n\t\t    zip_INSERT_STRING();\n\t\t    /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t     * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\n\t\t     * these bytes are garbage, but it does not matter since\n\t\t     * the next lookahead bytes will be emitted as literals.\n\t\t     */\n\t\t} while(--zip_match_length != 0);\n\t\tzip_strstart++;\n\t    } else {\n\t\tzip_strstart += zip_match_length;\n\t\tzip_match_length = 0;\n\t\tzip_ins_h = zip_window[zip_strstart] & 0xff;\n//\t\tUPDATE_HASH(ins_h, window[strstart + 1]);\n\t\tzip_ins_h = ((zip_ins_h<<zip_H_SHIFT) ^ (zip_window[zip_strstart + 1] & 0xff)) & zip_HASH_MASK;\n\n//#if MIN_MATCH != 3\n//\t\tCall UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n\n\t    }\n\t} else {\n\t    /* No match, output a literal byte */\n\t    flush = zip_ct_tally(0, zip_window[zip_strstart] & 0xff);\n\t    zip_lookahead--;\n\t    zip_strstart++;\n\t}\n\tif(flush) {\n\t    zip_flush_block(0);\n\t    zip_block_start = zip_strstart;\n\t}\n\n\t/* Make sure that we always have enough lookahead, except\n\t * at the end of the input file. We need MAX_MATCH bytes\n\t * for the next match, plus MIN_MATCH bytes to insert the\n\t * string following the next match.\n\t */\n\twhile(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\n\t    zip_fill_window();\n    }\n}\n\nvar zip_deflate_better = function() {\n    /* Process the input block. */\n    while(zip_lookahead != 0 && zip_qhead == null) {\n\t/* Insert the string window[strstart .. strstart+2] in the\n\t * dictionary, and set hash_head to the head of the hash chain:\n\t */\n\tzip_INSERT_STRING();\n\n\t/* Find the longest match, discarding those <= prev_length.\n\t */\n\tzip_prev_length = zip_match_length;\n\tzip_prev_match = zip_match_start;\n\tzip_match_length = zip_MIN_MATCH - 1;\n\n\tif(zip_hash_head != zip_NIL &&\n\t   zip_prev_length < zip_max_lazy_match &&\n\t   zip_strstart - zip_hash_head <= zip_MAX_DIST) {\n\t    /* To simplify the code, we prevent matches with the string\n\t     * of window index 0 (in particular we have to avoid a match\n\t     * of the string with itself at the start of the input file).\n\t     */\n\t    zip_match_length = zip_longest_match(zip_hash_head);\n\t    /* longest_match() sets match_start */\n\t    if(zip_match_length > zip_lookahead)\n\t\tzip_match_length = zip_lookahead;\n\n\t    /* Ignore a length 3 match if it is too distant: */\n\t    if(zip_match_length == zip_MIN_MATCH &&\n\t       zip_strstart - zip_match_start > zip_TOO_FAR) {\n\t\t/* If prev_match is also MIN_MATCH, match_start is garbage\n\t\t * but we will ignore the current match anyway.\n\t\t */\n\t\tzip_match_length--;\n\t    }\n\t}\n\t/* If there was a match at the previous step and the current\n\t * match is not better, output the previous match:\n\t */\n\tif(zip_prev_length >= zip_MIN_MATCH &&\n\t   zip_match_length <= zip_prev_length) {\n\t    var flush; // set if current block must be flushed\n\n//\t    check_match(strstart - 1, prev_match, prev_length);\n\t    flush = zip_ct_tally(zip_strstart - 1 - zip_prev_match,\n\t\t\t\t zip_prev_length - zip_MIN_MATCH);\n\n\t    /* Insert in hash table all strings up to the end of the match.\n\t     * strstart-1 and strstart are already inserted.\n\t     */\n\t    zip_lookahead -= zip_prev_length - 1;\n\t    zip_prev_length -= 2;\n\t    do {\n\t\tzip_strstart++;\n\t\tzip_INSERT_STRING();\n\t\t/* strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\n\t\t * these bytes are garbage, but it does not matter since the\n\t\t * next lookahead bytes will always be emitted as literals.\n\t\t */\n\t    } while(--zip_prev_length != 0);\n\t    zip_match_available = 0;\n\t    zip_match_length = zip_MIN_MATCH - 1;\n\t    zip_strstart++;\n\t    if(flush) {\n\t\tzip_flush_block(0);\n\t\tzip_block_start = zip_strstart;\n\t    }\n\t} else if(zip_match_available != 0) {\n\t    /* If there was no match at the previous position, output a\n\t     * single literal. If there was a match but the current match\n\t     * is longer, truncate the previous match to a single literal.\n\t     */\n\t    if(zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff)) {\n\t\tzip_flush_block(0);\n\t\tzip_block_start = zip_strstart;\n\t    }\n\t    zip_strstart++;\n\t    zip_lookahead--;\n\t} else {\n\t    /* There is no previous match to compare with, wait for\n\t     * the next step to decide.\n\t     */\n\t    zip_match_available = 1;\n\t    zip_strstart++;\n\t    zip_lookahead--;\n\t}\n\n\t/* Make sure that we always have enough lookahead, except\n\t * at the end of the input file. We need MAX_MATCH bytes\n\t * for the next match, plus MIN_MATCH bytes to insert the\n\t * string following the next match.\n\t */\n\twhile(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\n\t    zip_fill_window();\n    }\n}\n\nvar zip_init_deflate = function() {\n    if(zip_eofile)\n\treturn;\n    zip_bi_buf = 0;\n    zip_bi_valid = 0;\n    zip_ct_init();\n    zip_lm_init();\n\n    zip_qhead = null;\n    zip_outcnt = 0;\n    zip_outoff = 0;\n    zip_match_available = 0;\n\n    if(zip_compr_level <= 3)\n    {\n\tzip_prev_length = zip_MIN_MATCH - 1;\n\tzip_match_length = 0;\n    }\n    else\n    {\n\tzip_match_length = zip_MIN_MATCH - 1;\n\tzip_match_available = 0;\n        zip_match_available = 0;\n    }\n\n    zip_complete = false;\n}\n\n/* ==========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nvar zip_deflate_internal = function(buff, off, buff_size) {\n    var n;\n\n    if(!zip_initflag)\n    {\n\tzip_init_deflate();\n\tzip_initflag = true;\n\tif(zip_lookahead == 0) { // empty\n\t    zip_complete = true;\n\t    return 0;\n\t}\n    }\n\n    if((n = zip_qcopy(buff, off, buff_size)) == buff_size)\n\treturn buff_size;\n\n    if(zip_complete)\n\treturn n;\n\n    if(zip_compr_level <= 3) // optimized for speed\n\tzip_deflate_fast();\n    else\n\tzip_deflate_better();\n    if(zip_lookahead == 0) {\n\tif(zip_match_available != 0)\n\t    zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff);\n\tzip_flush_block(1);\n\tzip_complete = true;\n    }\n    return n + zip_qcopy(buff, n + off, buff_size - n);\n}\n\nvar zip_qcopy = function(buff, off, buff_size) {\n    var n, i, j;\n\n    n = 0;\n    while(zip_qhead != null && n < buff_size)\n    {\n\ti = buff_size - n;\n\tif(i > zip_qhead.len)\n\t    i = zip_qhead.len;\n//      System.arraycopy(qhead.ptr, qhead.off, buff, off + n, i);\n\tfor(j = 0; j < i; j++)\n\t    buff[off + n + j] = zip_qhead.ptr[zip_qhead.off + j];\n\t\n\tzip_qhead.off += i;\n\tzip_qhead.len -= i;\n\tn += i;\n\tif(zip_qhead.len == 0) {\n\t    var p;\n\t    p = zip_qhead;\n\t    zip_qhead = zip_qhead.next;\n\t    zip_reuse_queue(p);\n\t}\n    }\n\n    if(n == buff_size)\n\treturn n;\n\n    if(zip_outoff < zip_outcnt) {\n\ti = buff_size - n;\n\tif(i > zip_outcnt - zip_outoff)\n\t    i = zip_outcnt - zip_outoff;\n\t// System.arraycopy(outbuf, outoff, buff, off + n, i);\n\tfor(j = 0; j < i; j++)\n\t    buff[off + n + j] = zip_outbuf[zip_outoff + j];\n\tzip_outoff += i;\n\tn += i;\n\tif(zip_outcnt == zip_outoff)\n\t    zip_outcnt = zip_outoff = 0;\n    }\n    return n;\n}\n\n/* ==========================================================================\n * Allocate the match buffer, initialize the various tables and save the\n * location of the internal file attribute (ascii/binary) and method\n * (DEFLATE/STORE).\n */\nvar zip_ct_init = function() {\n    var n;\t// iterates over tree elements\n    var bits;\t// bit counter\n    var length;\t// length value\n    var code;\t// code value\n    var dist;\t// distance index\n\n    if(zip_static_dtree[0].dl != 0) return; // ct_init already called\n\n    zip_l_desc.dyn_tree\t\t= zip_dyn_ltree;\n    zip_l_desc.static_tree\t= zip_static_ltree;\n    zip_l_desc.extra_bits\t= zip_extra_lbits;\n    zip_l_desc.extra_base\t= zip_LITERALS + 1;\n    zip_l_desc.elems\t\t= zip_L_CODES;\n    zip_l_desc.max_length\t= zip_MAX_BITS;\n    zip_l_desc.max_code\t\t= 0;\n\n    zip_d_desc.dyn_tree\t\t= zip_dyn_dtree;\n    zip_d_desc.static_tree\t= zip_static_dtree;\n    zip_d_desc.extra_bits\t= zip_extra_dbits;\n    zip_d_desc.extra_base\t= 0;\n    zip_d_desc.elems\t\t= zip_D_CODES;\n    zip_d_desc.max_length\t= zip_MAX_BITS;\n    zip_d_desc.max_code\t\t= 0;\n\n    zip_bl_desc.dyn_tree\t= zip_bl_tree;\n    zip_bl_desc.static_tree\t= null;\n    zip_bl_desc.extra_bits\t= zip_extra_blbits;\n    zip_bl_desc.extra_base\t= 0;\n    zip_bl_desc.elems\t\t= zip_BL_CODES;\n    zip_bl_desc.max_length\t= zip_MAX_BL_BITS;\n    zip_bl_desc.max_code\t= 0;\n\n    // Initialize the mapping length (0..255) -> length code (0..28)\n    length = 0;\n    for(code = 0; code < zip_LENGTH_CODES-1; code++) {\n\tzip_base_length[code] = length;\n\tfor(n = 0; n < (1<<zip_extra_lbits[code]); n++)\n\t    zip_length_code[length++] = code;\n    }\n    // Assert (length == 256, \"ct_init: length != 256\");\n\n    /* Note that the length 255 (match length 258) can be represented\n     * in two different ways: code 284 + 5 bits or code 285, so we\n     * overwrite length_code[255] to use the best encoding:\n     */\n    zip_length_code[length-1] = code;\n\n    /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n    dist = 0;\n    for(code = 0 ; code < 16; code++) {\n\tzip_base_dist[code] = dist;\n\tfor(n = 0; n < (1<<zip_extra_dbits[code]); n++) {\n\t    zip_dist_code[dist++] = code;\n\t}\n    }\n    // Assert (dist == 256, \"ct_init: dist != 256\");\n    dist >>= 7; // from now on, all distances are divided by 128\n    for( ; code < zip_D_CODES; code++) {\n\tzip_base_dist[code] = dist << 7;\n\tfor(n = 0; n < (1<<(zip_extra_dbits[code]-7)); n++)\n\t    zip_dist_code[256 + dist++] = code;\n    }\n    // Assert (dist == 256, \"ct_init: 256+dist != 512\");\n\n    // Construct the codes of the static literal tree\n    for(bits = 0; bits <= zip_MAX_BITS; bits++)\n\tzip_bl_count[bits] = 0;\n    n = 0;\n    while(n <= 143) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\n    while(n <= 255) { zip_static_ltree[n++].dl = 9; zip_bl_count[9]++; }\n    while(n <= 279) { zip_static_ltree[n++].dl = 7; zip_bl_count[7]++; }\n    while(n <= 287) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\n    /* Codes 286 and 287 do not exist, but we must include them in the\n     * tree construction to get a canonical Huffman tree (longest code\n     * all ones)\n     */\n    zip_gen_codes(zip_static_ltree, zip_L_CODES + 1);\n\n    /* The static distance tree is trivial: */\n    for(n = 0; n < zip_D_CODES; n++) {\n\tzip_static_dtree[n].dl = 5;\n\tzip_static_dtree[n].fc = zip_bi_reverse(n, 5);\n    }\n\n    // Initialize the first block of the first file:\n    zip_init_block();\n}\n\n/* ==========================================================================\n * Initialize a new block.\n */\nvar zip_init_block = function() {\n    var n; // iterates over tree elements\n\n    // Initialize the trees.\n    for(n = 0; n < zip_L_CODES;  n++) zip_dyn_ltree[n].fc = 0;\n    for(n = 0; n < zip_D_CODES;  n++) zip_dyn_dtree[n].fc = 0;\n    for(n = 0; n < zip_BL_CODES; n++) zip_bl_tree[n].fc = 0;\n\n    zip_dyn_ltree[zip_END_BLOCK].fc = 1;\n    zip_opt_len = zip_static_len = 0;\n    zip_last_lit = zip_last_dist = zip_last_flags = 0;\n    zip_flags = 0;\n    zip_flag_bit = 1;\n}\n\n/* ==========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nvar zip_pqdownheap = function(\n    tree,\t// the tree to restore\n    k) {\t// node to move down\n    var v = zip_heap[k];\n    var j = k << 1;\t// left son of k\n\n    while(j <= zip_heap_len) {\n\t// Set j to the smallest of the two sons:\n\tif(j < zip_heap_len &&\n\t   zip_SMALLER(tree, zip_heap[j + 1], zip_heap[j]))\n\t    j++;\n\n\t// Exit if v is smaller than both sons\n\tif(zip_SMALLER(tree, v, zip_heap[j]))\n\t    break;\n\n\t// Exchange v with the smallest son\n\tzip_heap[k] = zip_heap[j];\n\tk = j;\n\n\t// And continue down the tree, setting j to the left son of k\n\tj <<= 1;\n    }\n    zip_heap[k] = v;\n}\n\n/* ==========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nvar zip_gen_bitlen = function(desc) { // the tree descriptor\n    var tree\t\t= desc.dyn_tree;\n    var extra\t\t= desc.extra_bits;\n    var base\t\t= desc.extra_base;\n    var max_code\t= desc.max_code;\n    var max_length\t= desc.max_length;\n    var stree\t\t= desc.static_tree;\n    var h;\t\t// heap index\n    var n, m;\t\t// iterate over the tree elements\n    var bits;\t\t// bit length\n    var xbits;\t\t// extra bits\n    var f;\t\t// frequency\n    var overflow = 0;\t// number of elements with bit length too large\n\n    for(bits = 0; bits <= zip_MAX_BITS; bits++)\n\tzip_bl_count[bits] = 0;\n\n    /* In a first pass, compute the optimal bit lengths (which may\n     * overflow in the case of the bit length tree).\n     */\n    tree[zip_heap[zip_heap_max]].dl = 0; // root of the heap\n\n    for(h = zip_heap_max + 1; h < zip_HEAP_SIZE; h++) {\n\tn = zip_heap[h];\n\tbits = tree[tree[n].dl].dl + 1;\n\tif(bits > max_length) {\n\t    bits = max_length;\n\t    overflow++;\n\t}\n\ttree[n].dl = bits;\n\t// We overwrite tree[n].dl which is no longer needed\n\n\tif(n > max_code)\n\t    continue; // not a leaf node\n\n\tzip_bl_count[bits]++;\n\txbits = 0;\n\tif(n >= base)\n\t    xbits = extra[n - base];\n\tf = tree[n].fc;\n\tzip_opt_len += f * (bits + xbits);\n\tif(stree != null)\n\t    zip_static_len += f * (stree[n].dl + xbits);\n    }\n    if(overflow == 0)\n\treturn;\n\n    // This happens for example on obj2 and pic of the Calgary corpus\n\n    // Find the first bit length which could increase:\n    do {\n\tbits = max_length - 1;\n\twhile(zip_bl_count[bits] == 0)\n\t    bits--;\n\tzip_bl_count[bits]--;\t\t// move one leaf down the tree\n\tzip_bl_count[bits + 1] += 2;\t// move one overflow item as its brother\n\tzip_bl_count[max_length]--;\n\t/* The brother of the overflow item also moves one step up,\n\t * but this does not affect bl_count[max_length]\n\t */\n\toverflow -= 2;\n    } while(overflow > 0);\n\n    /* Now recompute all bit lengths, scanning in increasing frequency.\n     * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n     * lengths instead of fixing only the wrong ones. This idea is taken\n     * from 'ar' written by Haruhiko Okumura.)\n     */\n    for(bits = max_length; bits != 0; bits--) {\n\tn = zip_bl_count[bits];\n\twhile(n != 0) {\n\t    m = zip_heap[--h];\n\t    if(m > max_code)\n\t\tcontinue;\n\t    if(tree[m].dl != bits) {\n\t\tzip_opt_len += (bits - tree[m].dl) * tree[m].fc;\n\t\ttree[m].fc = bits;\n\t    }\n\t    n--;\n\t}\n    }\n}\n\n  /* ==========================================================================\n   * Generate the codes for a given tree and bit counts (which need not be\n   * optimal).\n   * IN assertion: the array bl_count contains the bit length statistics for\n   * the given tree and the field len is set for all tree elements.\n   * OUT assertion: the field code is set for all tree elements of non\n   *     zero code length.\n   */\nvar zip_gen_codes = function(tree,\t// the tree to decorate\n\t\t   max_code) {\t// largest code with non zero frequency\n    var next_code = new Array(zip_MAX_BITS+1); // next code value for each bit length\n    var code = 0;\t\t// running code value\n    var bits;\t\t\t// bit index\n    var n;\t\t\t// code index\n\n    /* The distribution counts are first used to generate the code values\n     * without bit reversal.\n     */\n    for(bits = 1; bits <= zip_MAX_BITS; bits++) {\n\tcode = ((code + zip_bl_count[bits-1]) << 1);\n\tnext_code[bits] = code;\n    }\n\n    /* Check that the bit counts in bl_count are consistent. The last code\n     * must be all ones.\n     */\n//    Assert (code + encoder->bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n//\t    \"inconsistent bit counts\");\n//    Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n    for(n = 0; n <= max_code; n++) {\n\tvar len = tree[n].dl;\n\tif(len == 0)\n\t    continue;\n\t// Now reverse the bits\n\ttree[n].fc = zip_bi_reverse(next_code[len]++, len);\n\n//      Tracec(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n//\t  n, (isgraph(n) ? n : ' '), len, tree[n].fc, next_code[len]-1));\n    }\n}\n\n/* ==========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nvar zip_build_tree = function(desc) { // the tree descriptor\n    var tree\t= desc.dyn_tree;\n    var stree\t= desc.static_tree;\n    var elems\t= desc.elems;\n    var n, m;\t\t// iterate over heap elements\n    var max_code = -1;\t// largest code with non zero frequency\n    var node = elems;\t// next internal node of the tree\n\n    /* Construct the initial heap, with least frequent element in\n     * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n     * heap[0] is not used.\n     */\n    zip_heap_len = 0;\n    zip_heap_max = zip_HEAP_SIZE;\n\n    for(n = 0; n < elems; n++) {\n\tif(tree[n].fc != 0) {\n\t    zip_heap[++zip_heap_len] = max_code = n;\n\t    zip_depth[n] = 0;\n\t} else\n\t    tree[n].dl = 0;\n    }\n\n    /* The pkzip format requires that at least one distance code exists,\n     * and that at least one bit should be sent even if there is only one\n     * possible code. So to avoid special checks later on we force at least\n     * two codes of non zero frequency.\n     */\n    while(zip_heap_len < 2) {\n\tvar xnew = zip_heap[++zip_heap_len] = (max_code < 2 ? ++max_code : 0);\n\ttree[xnew].fc = 1;\n\tzip_depth[xnew] = 0;\n\tzip_opt_len--;\n\tif(stree != null)\n\t    zip_static_len -= stree[xnew].dl;\n\t// new is 0 or 1 so it does not have extra bits\n    }\n    desc.max_code = max_code;\n\n    /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n     * establish sub-heaps of increasing lengths:\n     */\n    for(n = zip_heap_len >> 1; n >= 1; n--)\n\tzip_pqdownheap(tree, n);\n\n    /* Construct the Huffman tree by repeatedly combining the least two\n     * frequent nodes.\n     */\n    do {\n\tn = zip_heap[zip_SMALLEST];\n\tzip_heap[zip_SMALLEST] = zip_heap[zip_heap_len--];\n\tzip_pqdownheap(tree, zip_SMALLEST);\n\n\tm = zip_heap[zip_SMALLEST];  // m = node of next least frequency\n\n\t// keep the nodes sorted by frequency\n\tzip_heap[--zip_heap_max] = n;\n\tzip_heap[--zip_heap_max] = m;\n\n\t// Create a new node father of n and m\n\ttree[node].fc = tree[n].fc + tree[m].fc;\n//\tdepth[node] = (char)(MAX(depth[n], depth[m]) + 1);\n\tif(zip_depth[n] > zip_depth[m] + 1)\n\t    zip_depth[node] = zip_depth[n];\n\telse\n\t    zip_depth[node] = zip_depth[m] + 1;\n\ttree[n].dl = tree[m].dl = node;\n\n\t// and insert the new node in the heap\n\tzip_heap[zip_SMALLEST] = node++;\n\tzip_pqdownheap(tree, zip_SMALLEST);\n\n    } while(zip_heap_len >= 2);\n\n    zip_heap[--zip_heap_max] = zip_heap[zip_SMALLEST];\n\n    /* At this point, the fields freq and dad are set. We can now\n     * generate the bit lengths.\n     */\n    zip_gen_bitlen(desc);\n\n    // The field len is now set, we can generate the bit codes\n    zip_gen_codes(tree, max_code);\n}\n\n/* ==========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree. Updates opt_len to take into account the repeat\n * counts. (The contribution of the bit length codes will be added later\n * during the construction of bl_tree.)\n */\nvar zip_scan_tree = function(tree,// the tree to be scanned\n\t\t       max_code) {  // and its largest code of non zero frequency\n    var n;\t\t\t// iterates over all tree elements\n    var prevlen = -1;\t\t// last emitted length\n    var curlen;\t\t\t// length of current code\n    var nextlen = tree[0].dl;\t// length of next code\n    var count = 0;\t\t// repeat count of the current code\n    var max_count = 7;\t\t// max repeat count\n    var min_count = 4;\t\t// min repeat count\n\n    if(nextlen == 0) {\n\tmax_count = 138;\n\tmin_count = 3;\n    }\n    tree[max_code + 1].dl = 0xffff; // guard\n\n    for(n = 0; n <= max_code; n++) {\n\tcurlen = nextlen;\n\tnextlen = tree[n + 1].dl;\n\tif(++count < max_count && curlen == nextlen)\n\t    continue;\n\telse if(count < min_count)\n\t    zip_bl_tree[curlen].fc += count;\n\telse if(curlen != 0) {\n\t    if(curlen != prevlen)\n\t\tzip_bl_tree[curlen].fc++;\n\t    zip_bl_tree[zip_REP_3_6].fc++;\n\t} else if(count <= 10)\n\t    zip_bl_tree[zip_REPZ_3_10].fc++;\n\telse\n\t    zip_bl_tree[zip_REPZ_11_138].fc++;\n\tcount = 0; prevlen = curlen;\n\tif(nextlen == 0) {\n\t    max_count = 138;\n\t    min_count = 3;\n\t} else if(curlen == nextlen) {\n\t    max_count = 6;\n\t    min_count = 3;\n\t} else {\n\t    max_count = 7;\n\t    min_count = 4;\n\t}\n    }\n}\n\n  /* ==========================================================================\n   * Send a literal or distance tree in compressed form, using the codes in\n   * bl_tree.\n   */\nvar zip_send_tree = function(tree, // the tree to be scanned\n\t\t   max_code) { // and its largest code of non zero frequency\n    var n;\t\t\t// iterates over all tree elements\n    var prevlen = -1;\t\t// last emitted length\n    var curlen;\t\t\t// length of current code\n    var nextlen = tree[0].dl;\t// length of next code\n    var count = 0;\t\t// repeat count of the current code\n    var max_count = 7;\t\t// max repeat count\n    var min_count = 4;\t\t// min repeat count\n\n    /* tree[max_code+1].dl = -1; */  /* guard already set */\n    if(nextlen == 0) {\n      max_count = 138;\n      min_count = 3;\n    }\n\n    for(n = 0; n <= max_code; n++) {\n\tcurlen = nextlen;\n\tnextlen = tree[n+1].dl;\n\tif(++count < max_count && curlen == nextlen) {\n\t    continue;\n\t} else if(count < min_count) {\n\t    do { zip_SEND_CODE(curlen, zip_bl_tree); } while(--count != 0);\n\t} else if(curlen != 0) {\n\t    if(curlen != prevlen) {\n\t\tzip_SEND_CODE(curlen, zip_bl_tree);\n\t\tcount--;\n\t    }\n\t    // Assert(count >= 3 && count <= 6, \" 3_6?\");\n\t    zip_SEND_CODE(zip_REP_3_6, zip_bl_tree);\n\t    zip_send_bits(count - 3, 2);\n\t} else if(count <= 10) {\n\t    zip_SEND_CODE(zip_REPZ_3_10, zip_bl_tree);\n\t    zip_send_bits(count-3, 3);\n\t} else {\n\t    zip_SEND_CODE(zip_REPZ_11_138, zip_bl_tree);\n\t    zip_send_bits(count-11, 7);\n\t}\n\tcount = 0;\n\tprevlen = curlen;\n\tif(nextlen == 0) {\n\t    max_count = 138;\n\t    min_count = 3;\n\t} else if(curlen == nextlen) {\n\t    max_count = 6;\n\t    min_count = 3;\n\t} else {\n\t    max_count = 7;\n\t    min_count = 4;\n\t}\n    }\n}\n\n/* ==========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nvar zip_build_bl_tree = function() {\n    var max_blindex;  // index of last bit length code of non zero freq\n\n    // Determine the bit length frequencies for literal and distance trees\n    zip_scan_tree(zip_dyn_ltree, zip_l_desc.max_code);\n    zip_scan_tree(zip_dyn_dtree, zip_d_desc.max_code);\n\n    // Build the bit length tree:\n    zip_build_tree(zip_bl_desc);\n    /* opt_len now includes the length of the tree representations, except\n     * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n     */\n\n    /* Determine the number of bit length codes to send. The pkzip format\n     * requires that at least 4 bit length codes be sent. (appnote.txt says\n     * 3 but the actual value used is 4.)\n     */\n    for(max_blindex = zip_BL_CODES-1; max_blindex >= 3; max_blindex--) {\n\tif(zip_bl_tree[zip_bl_order[max_blindex]].dl != 0) break;\n    }\n    /* Update opt_len to include the bit length tree and counts */\n    zip_opt_len += 3*(max_blindex+1) + 5+5+4;\n//    Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n//\t    encoder->opt_len, encoder->static_len));\n\n    return max_blindex;\n}\n\n/* ==========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nvar zip_send_all_trees = function(lcodes, dcodes, blcodes) { // number of codes for each tree\n    var rank; // index in bl_order\n\n//    Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n//    Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n//\t    \"too many codes\");\n//    Tracev((stderr, \"\\nbl counts: \"));\n    zip_send_bits(lcodes-257, 5); // not +255 as stated in appnote.txt\n    zip_send_bits(dcodes-1,   5);\n    zip_send_bits(blcodes-4,  4); // not -3 as stated in appnote.txt\n    for(rank = 0; rank < blcodes; rank++) {\n//      Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n\tzip_send_bits(zip_bl_tree[zip_bl_order[rank]].dl, 3);\n    }\n\n    // send the literal tree\n    zip_send_tree(zip_dyn_ltree,lcodes-1);\n\n    // send the distance tree\n    zip_send_tree(zip_dyn_dtree,dcodes-1);\n}\n\n/* ==========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nvar zip_flush_block = function(eof) { // true if this is the last block for a file\n    var opt_lenb, static_lenb; // opt_len and static_len in bytes\n    var max_blindex;\t// index of last bit length code of non zero freq\n    var stored_len;\t// length of input block\n\n    stored_len = zip_strstart - zip_block_start;\n    zip_flag_buf[zip_last_flags] = zip_flags; // Save the flags for the last 8 items\n\n    // Construct the literal and distance trees\n    zip_build_tree(zip_l_desc);\n//    Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\",\n//\t    encoder->opt_len, encoder->static_len));\n\n    zip_build_tree(zip_d_desc);\n//    Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\",\n//\t    encoder->opt_len, encoder->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = zip_build_bl_tree();\n\n    // Determine the best encoding. Compute first the block length in bytes\n    opt_lenb\t= (zip_opt_len   +3+7)>>3;\n    static_lenb = (zip_static_len+3+7)>>3;\n\n//    Trace((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u dist %u \",\n//\t   opt_lenb, encoder->opt_len,\n//\t   static_lenb, encoder->static_len, stored_len,\n//\t   encoder->last_lit, encoder->last_dist));\n\n    if(static_lenb <= opt_lenb)\n\topt_lenb = static_lenb;\n    if(stored_len + 4 <= opt_lenb // 4: two words for the lengths\n       && zip_block_start >= 0) {\n\tvar i;\n\n\t/* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n\t * Otherwise we can't have processed more than WSIZE input bytes since\n\t * the last block flush, because compression would have been\n\t * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n\t * transform a block into a stored block.\n\t */\n\tzip_send_bits((zip_STORED_BLOCK<<1)+eof, 3);  /* send block type */\n\tzip_bi_windup();\t\t /* align on byte boundary */\n\tzip_put_short(stored_len);\n\tzip_put_short(~stored_len);\n\n      // copy block\n/*\n      p = &window[block_start];\n      for(i = 0; i < stored_len; i++)\n\tput_byte(p[i]);\n*/\n\tfor(i = 0; i < stored_len; i++)\n\t    zip_put_byte(zip_window[zip_block_start + i]);\n\n    } else if(static_lenb == opt_lenb) {\n\tzip_send_bits((zip_STATIC_TREES<<1)+eof, 3);\n\tzip_compress_block(zip_static_ltree, zip_static_dtree);\n    } else {\n\tzip_send_bits((zip_DYN_TREES<<1)+eof, 3);\n\tzip_send_all_trees(zip_l_desc.max_code+1,\n\t\t\t   zip_d_desc.max_code+1,\n\t\t\t   max_blindex+1);\n\tzip_compress_block(zip_dyn_ltree, zip_dyn_dtree);\n    }\n\n    zip_init_block();\n\n    if(eof != 0)\n\tzip_bi_windup();\n}\n\n/* ==========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nvar zip_ct_tally = function(\n\tdist, // distance of matched string\n\tlc) { // match length-MIN_MATCH or unmatched char (if dist==0)\n    zip_l_buf[zip_last_lit++] = lc;\n    if(dist == 0) {\n\t// lc is the unmatched char\n\tzip_dyn_ltree[lc].fc++;\n    } else {\n\t// Here, lc is the match length - MIN_MATCH\n\tdist--;\t\t    // dist = match distance - 1\n//      Assert((ush)dist < (ush)MAX_DIST &&\n//\t     (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n//\t     (ush)D_CODE(dist) < (ush)D_CODES,  \"ct_tally: bad match\");\n\n\tzip_dyn_ltree[zip_length_code[lc]+zip_LITERALS+1].fc++;\n\tzip_dyn_dtree[zip_D_CODE(dist)].fc++;\n\n\tzip_d_buf[zip_last_dist++] = dist;\n\tzip_flags |= zip_flag_bit;\n    }\n    zip_flag_bit <<= 1;\n\n    // Output the flags if they fill a byte\n    if((zip_last_lit & 7) == 0) {\n\tzip_flag_buf[zip_last_flags++] = zip_flags;\n\tzip_flags = 0;\n\tzip_flag_bit = 1;\n    }\n    // Try to guess if it is profitable to stop the current block here\n    if(zip_compr_level > 2 && (zip_last_lit & 0xfff) == 0) {\n\t// Compute an upper bound for the compressed length\n\tvar out_length = zip_last_lit * 8;\n\tvar in_length = zip_strstart - zip_block_start;\n\tvar dcode;\n\n\tfor(dcode = 0; dcode < zip_D_CODES; dcode++) {\n\t    out_length += zip_dyn_dtree[dcode].fc * (5 + zip_extra_dbits[dcode]);\n\t}\n\tout_length >>= 3;\n//      Trace((stderr,\"\\nlast_lit %u, last_dist %u, in %ld, out ~%ld(%ld%%) \",\n//\t     encoder->last_lit, encoder->last_dist, in_length, out_length,\n//\t     100L - out_length*100L/in_length));\n\tif(zip_last_dist < parseInt(zip_last_lit/2) &&\n\t   out_length < parseInt(in_length/2))\n\t    return true;\n    }\n    return (zip_last_lit == zip_LIT_BUFSIZE-1 ||\n\t    zip_last_dist == zip_DIST_BUFSIZE);\n    /* We avoid equality with LIT_BUFSIZE because of wraparound at 64K\n     * on 16 bit machines and because stored blocks are restricted to\n     * 64K-1 bytes.\n     */\n}\n\n  /* ==========================================================================\n   * Send the block data compressed using the given Huffman trees\n   */\nvar zip_compress_block = function(\n\tltree,\t// literal tree\n\tdtree) {\t// distance tree\n    var dist;\t\t// distance of matched string\n    var lc;\t\t// match length or unmatched char (if dist == 0)\n    var lx = 0;\t\t// running index in l_buf\n    var dx = 0;\t\t// running index in d_buf\n    var fx = 0;\t\t// running index in flag_buf\n    var flag = 0;\t// current flags\n    var code;\t\t// the code to send\n    var extra;\t\t// number of extra bits to send\n\n    if(zip_last_lit != 0) do {\n\tif((lx & 7) == 0)\n\t    flag = zip_flag_buf[fx++];\n\tlc = zip_l_buf[lx++] & 0xff;\n\tif((flag & 1) == 0) {\n\t    zip_SEND_CODE(lc, ltree); /* send a literal byte */\n//\tTracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n\t} else {\n\t    // Here, lc is the match length - MIN_MATCH\n\t    code = zip_length_code[lc];\n\t    zip_SEND_CODE(code+zip_LITERALS+1, ltree); // send the length code\n\t    extra = zip_extra_lbits[code];\n\t    if(extra != 0) {\n\t\tlc -= zip_base_length[code];\n\t\tzip_send_bits(lc, extra); // send the extra length bits\n\t    }\n\t    dist = zip_d_buf[dx++];\n\t    // Here, dist is the match distance - 1\n\t    code = zip_D_CODE(dist);\n//\tAssert (code < D_CODES, \"bad d_code\");\n\n\t    zip_SEND_CODE(code, dtree);\t  // send the distance code\n\t    extra = zip_extra_dbits[code];\n\t    if(extra != 0) {\n\t\tdist -= zip_base_dist[code];\n\t\tzip_send_bits(dist, extra);   // send the extra distance bits\n\t    }\n\t} // literal or match pair ?\n\tflag >>= 1;\n    } while(lx < zip_last_lit);\n\n    zip_SEND_CODE(zip_END_BLOCK, ltree);\n}\n\n/* ==========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nvar zip_Buf_size = 16; // bit size of bi_buf\nvar zip_send_bits = function(\n\tvalue,\t// value to send\n\tlength) {\t// number of bits\n    /* If not enough room in bi_buf, use (valid) bits from bi_buf and\n     * (16 - bi_valid) bits from value, leaving (width - (16-bi_valid))\n     * unused bits in value.\n     */\n    if(zip_bi_valid > zip_Buf_size - length) {\n\tzip_bi_buf |= (value << zip_bi_valid);\n\tzip_put_short(zip_bi_buf);\n\tzip_bi_buf = (value >> (zip_Buf_size - zip_bi_valid));\n\tzip_bi_valid += length - zip_Buf_size;\n    } else {\n\tzip_bi_buf |= value << zip_bi_valid;\n\tzip_bi_valid += length;\n    }\n}\n\n/* ==========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nvar zip_bi_reverse = function(\n\tcode,\t// the value to invert\n\tlen) {\t// its bit length\n    var res = 0;\n    do {\n\tres |= code & 1;\n\tcode >>= 1;\n\tres <<= 1;\n    } while(--len > 0);\n    return res >> 1;\n}\n\n/* ==========================================================================\n * Write out any remaining bits in an incomplete byte.\n */\nvar zip_bi_windup = function() {\n    if(zip_bi_valid > 8) {\n\tzip_put_short(zip_bi_buf);\n    } else if(zip_bi_valid > 0) {\n\tzip_put_byte(zip_bi_buf);\n    }\n    zip_bi_buf = 0;\n    zip_bi_valid = 0;\n}\n\nvar zip_qoutbuf = function() {\n    if(zip_outcnt != 0) {\n\tvar q, i;\n\tq = zip_new_queue();\n\tif(zip_qhead == null)\n\t    zip_qhead = zip_qtail = q;\n\telse\n\t    zip_qtail = zip_qtail.next = q;\n\tq.len = zip_outcnt - zip_outoff;\n//      System.arraycopy(zip_outbuf, zip_outoff, q.ptr, 0, q.len);\n\tfor(i = 0; i < q.len; i++)\n\t    q.ptr[i] = zip_outbuf[zip_outoff + i];\n\tzip_outcnt = zip_outoff = 0;\n    }\n}\n\nvar zip_deflate = function(str, level) {\n    var i, j;\n\n    zip_deflate_data = str;\n    zip_deflate_pos = 0;\n    if(typeof level == \"undefined\")\n\tlevel = zip_DEFAULT_LEVEL;\n    zip_deflate_start(level);\n\n    var buff = new Array(1024);\n    var aout = [];\n    while((i = zip_deflate_internal(buff, 0, buff.length)) > 0) {\n\tvar cbuf = new Array(i);\n\tfor(j = 0; j < i; j++){\n\t    cbuf[j] = String.fromCharCode(buff[j]);\n\t}\n\taout[aout.length] = cbuf.join(\"\");\n    }\n    zip_deflate_data = null; // G.C.\n    return aout.join(\"\");\n}\n\nif (! ctx.RawDeflate) ctx.RawDeflate = {};\nctx.RawDeflate.deflate = zip_deflate;\n\n})(this);\n\n"
			},
			{
				"name": "store2.min.js",
				"source": "/*! store2 - v2.7.0 - 2018-03-04\n* Copyright (c) 2018 Nathan Bubna; Licensed (MIT OR GPL-3.0) */\n\n!function(a,b){var c={version:\"2.7.0\",areas:{},apis:{},inherit:function(a,b){for(var c in a)b.hasOwnProperty(c)||(b[c]=a[c]);return b},stringify:function(a){return void 0===a||\"function\"==typeof a?a+\"\":JSON.stringify(a)},parse:function(a){try{return JSON.parse(a)}catch(b){return a}},fn:function(a,b){c.storeAPI[a]=b;for(var d in c.apis)c.apis[d][a]=b},get:function(a,b){return a.getItem(b)},set:function(a,b,c){a.setItem(b,c)},remove:function(a,b){a.removeItem(b)},key:function(a,b){return a.key(b)},length:function(a){return a.length},clear:function(a){a.clear()},Store:function(a,b,d){var e=c.inherit(c.storeAPI,function(a,b,c){return 0===arguments.length?e.getAll():\"function\"==typeof b?e.transact(a,b,c):void 0!==b?e.set(a,b,c):\"string\"==typeof a||\"number\"==typeof a?e.get(a):a?e.setAll(a,b):e.clear()});e._id=a;try{b.setItem(\"_-bad-_\",\"wolf\"),e._area=b,b.removeItem(\"_-bad-_\")}catch(a){}return e._area||(e._area=c.inherit(c.storageAPI,{items:{},name:\"fake\"})),e._ns=d||\"\",c.areas[a]||(c.areas[a]=e._area),c.apis[e._ns+e._id]||(c.apis[e._ns+e._id]=e),e},storeAPI:{area:function(a,b){var d=this[a];return d&&d.area||(d=c.Store(a,b,this._ns),this[a]||(this[a]=d)),d},namespace:function(a,b){if(!a)return this._ns?this._ns.substring(0,this._ns.length-1):\"\";var d=a,e=this[d];return e&&e.namespace||(e=c.Store(this._id,this._area,this._ns+d+\".\"),this[d]||(this[d]=e),b||e.area(\"session\",c.areas.session)),e},isFake:function(){return\"fake\"===this._area.name},toString:function(){return\"store\"+(this._ns?\".\"+this.namespace():\"\")+\"[\"+this._id+\"]\"},has:function(a){return this._area.has?this._area.has(this._in(a)):!!(this._in(a)in this._area)},size:function(){return this.keys().length},each:function(a,b){for(var d=0,e=c.length(this._area);d<e;d++){var f=this._out(c.key(this._area,d));if(void 0!==f&&a.call(this,f,b||this.get(f))===!1)break;e>c.length(this._area)&&(e--,d--)}return b||this},keys:function(a){return this.each(function(a,b){b.push(a)},a||[])},get:function(a,b){var d=c.get(this._area,this._in(a));return null!==d?c.parse(d):b||d},getAll:function(a){return this.each(function(a,b){b[a]=this.get(a)},a||{})},transact:function(a,b,c){var d=this.get(a,c),e=b(d);return this.set(a,void 0===e?d:e),this},set:function(a,b,d){var e=this.get(a);return null!=e&&d===!1?b:c.set(this._area,this._in(a),c.stringify(b),d)||e},setAll:function(a,b){var c,d;for(var e in a)d=a[e],this.set(e,d,b)!==d&&(c=!0);return c},add:function(a,b){var d=this.get(a);if(d instanceof Array)b=d.concat(b);else if(null!==d){var e=typeof d;if(e===typeof b&&\"object\"===e){for(var f in b)d[f]=b[f];b=d}else b=d+b}return c.set(this._area,this._in(a),c.stringify(b)),b},remove:function(a){var b=this.get(a);return c.remove(this._area,this._in(a)),b},clear:function(){return this._ns?this.each(function(a){c.remove(this._area,this._in(a))},1):c.clear(this._area),this},clearAll:function(){var a=this._area;for(var b in c.areas)c.areas.hasOwnProperty(b)&&(this._area=c.areas[b],this.clear());return this._area=a,this},_in:function(a){return\"string\"!=typeof a&&(a=c.stringify(a)),this._ns?this._ns+a:a},_out:function(a){return this._ns?a&&0===a.indexOf(this._ns)?a.substring(this._ns.length):void 0:a}},storageAPI:{length:0,has:function(a){return this.items.hasOwnProperty(a)},key:function(a){var b=0;for(var c in this.items)if(this.has(c)&&a===b++)return c},setItem:function(a,b){this.has(a)||this.length++,this.items[a]=b},removeItem:function(a){this.has(a)&&(delete this.items[a],this.length--)},getItem:function(a){return this.has(a)?this.items[a]:null},clear:function(){for(var a in this.items)this.removeItem(a)},toString:function(){return this.length+\" items in \"+this.name+\"Storage\"}}},d=c.Store(\"local\",function(){try{return localStorage}catch(a){}}());d.local=d,d._=c,d.area(\"session\",function(){try{return sessionStorage}catch(a){}}()),\"function\"==typeof b&&void 0!==b.amd?b(\"store2\",[],function(){return d}):\"undefined\"!=typeof module&&module.exports?module.exports=d:(a.store&&(c.conflict=a.store),a.store=d)}(this,this.define);\n//# sourceMappingURL=store2.min.js.map"
			},
			{
				"name": "Objectid.js",
				"source": "/*\n*\n* Copyright (c) 2011-2014- Justin Dearing (zippy1981@gmail.com)\n* Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\n* and GPL (http://www.opensource.org/licenses/gpl-license.php) version 2 licenses.\n* This software is not distributed under version 3 or later of the GPL.\n*\n* Version 1.0.2\n*\n*/\n\nif (!document) var document = { cookie: '' }; // fix crashes on node\n\n/**\n * Javascript class that mimics how WCF serializes a object of type MongoDB.Bson.ObjectId\n * and converts between that format and the standard 24 character representation.\n*/\nvar ObjectId = (function () {\n    var increment = Math.floor(Math.random() * (16777216));\n    var pid = Math.floor(Math.random() * (65536));\n    var machine = Math.floor(Math.random() * (16777216));\n\n    var setMachineCookie = function() {\n        var cookieList = document.cookie.split('; ');\n        for (var i in cookieList) {\n            var cookie = cookieList[i].split('=');\n            var cookieMachineId = parseInt(cookie[1], 10);\n            if (cookie[0] == 'mongoMachineId' && cookieMachineId && cookieMachineId >= 0 && cookieMachineId <= 16777215) {\n                machine = cookieMachineId;\n                break;\n            }\n        }\n        document.cookie = 'mongoMachineId=' + machine + ';expires=Tue, 19 Jan 2038 05:00:00 GMT;path=/';\n    };\n    if (typeof (localStorage) != 'undefined') {\n        try {\n            var mongoMachineId = parseInt(localStorage['mongoMachineId']);\n            if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n                machine = Math.floor(localStorage['mongoMachineId']);\n            }\n            // Just always stick the value in.\n            localStorage['mongoMachineId'] = machine;\n        } catch (e) {\n            setMachineCookie();\n        }\n    }\n    else {\n        setMachineCookie();\n    }\n\n    function ObjId() {\n        if (!(this instanceof ObjectId)) {\n            return new ObjectId(arguments[0], arguments[1], arguments[2], arguments[3]).toString();\n        }\n\n        if (typeof (arguments[0]) == 'object') {\n            this.timestamp = arguments[0].timestamp;\n            this.machine = arguments[0].machine;\n            this.pid = arguments[0].pid;\n            this.increment = arguments[0].increment;\n        }\n        else if (typeof (arguments[0]) == 'string' && arguments[0].length == 24) {\n            this.timestamp = Number('0x' + arguments[0].substr(0, 8)),\n            this.machine = Number('0x' + arguments[0].substr(8, 6)),\n            this.pid = Number('0x' + arguments[0].substr(14, 4)),\n            this.increment = Number('0x' + arguments[0].substr(18, 6))\n        }\n        else if (arguments.length == 4 && arguments[0] != null) {\n            this.timestamp = arguments[0];\n            this.machine = arguments[1];\n            this.pid = arguments[2];\n            this.increment = arguments[3];\n        }\n        else {\n            this.timestamp = Math.floor(new Date().valueOf() / 1000);\n            this.machine = machine;\n            this.pid = pid;\n            this.increment = increment++;\n            if (increment > 0xffffff) {\n                increment = 0;\n            }\n        }\n    };\n    return ObjId;\n})();\n\nObjectId.prototype.getDate = function () {\n    return new Date(this.timestamp * 1000);\n};\n\nObjectId.prototype.toArray = function () {\n    var strOid = this.toString();\n    var array = [];\n    var i;\n    for(i = 0; i < 12; i++) {\n        array[i] = parseInt(strOid.slice(i*2, i*2+2), 16);\n    }\n    return array;\n};\n\n/**\n* Turns a WCF representation of a BSON ObjectId into a 24 character string representation.\n*/\nObjectId.prototype.toString = function () {\n    if (this.timestamp === undefined\n        || this.machine === undefined\n        || this.pid === undefined\n        || this.increment === undefined) {\n        return 'Invalid ObjectId';\n    }\n\n    var timestamp = this.timestamp.toString(16);\n    var machine = this.machine.toString(16);\n    var pid = this.pid.toString(16);\n    var increment = this.increment.toString(16);\n    return '00000000'.substr(0, 8 - timestamp.length) + timestamp +\n           '000000'.substr(0, 6 - machine.length) + machine +\n           '0000'.substr(0, 4 - pid.length) + pid +\n           '000000'.substr(0, 6 - increment.length) + increment;\n};\n"
			},
			{
				"name": "zangodb.min.js",
				"source": "!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).zango=t()}}(function(){return function t(e,n,r){function i(u,a){if(!n[u]){if(!e[u]){var s=\"function\"==typeof require&&require;if(!a&&s)return s(u,!0);if(o)return o(u,!0);var f=new Error(\"Cannot find module '\"+u+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var c=n[u]={exports:{}};e[u][0].call(c.exports,function(t){var n=e[u][1][t];return i(n||t)},c,c.exports,t,e,n,r)}return n[u].exports}for(var o=\"function\"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}({1:[function(t,e,n){\"use strict\";var r=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),i=t(\"./util.js\").unknownOp,o=t(\"./cursor.js\"),u={$match:function(t,e){return t.filter(e)},$project:function(t,e){return t.project(e)},$group:function(t,e){return t.group(e)},$unwind:function(t,e){return t.unwind(e)},$sort:function(t,e){return t.sort(e)},$skip:function(t,e){return t.skip(e)},$limit:function(t,e){return t.limit(e)}},a=function(t){var e=Object.keys(t);if(e.length>1)throw Error(\"stages must be passed only one operator\");var n=e[0],r=u[n];return r||i(n),[r,t[n]]};e.exports=function(t,e){var n=new o(t,\"readonly\"),i=!0,u=!1,s=void 0;try{for(var f,c=e[Symbol.iterator]();!(i=(f=c.next()).done);i=!0){var l=f.value,p=a(l),h=r(p,2);(0,h[0])(n,h[1])}}catch(t){u=!0,s=t}finally{try{!i&&c.return&&c.return()}finally{if(u)throw s}}return n}},{\"./cursor.js\":4,\"./util.js\":21}],2:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),u=t(\"q\"),a=t(\"./util.js\").getIDBError,s=t(\"./cursor.js\"),f=t(\"./aggregate.js\"),c=t(\"./update.js\"),l=t(\"./remove.js\"),p=function(){function t(e,n){r(this,t),this._db=e,this._name=n,this._indexes=new Set}return o(t,[{key:\"_isIndexed\",value:function(t){return this._indexes.has(t)||\"_id\"===t}},{key:\"find\",value:function(t,e){var n=new s(this,\"readonly\");return n.filter(t),e&&n.project(e),n}},{key:\"findOne\",value:function(t,e,n){\"function\"==typeof e&&(n=e,e=null);var r=u.defer();return this.find(t,e).limit(1).toArray(function(t,e){t?r.reject(t):r.resolve(e[0])}),r.promise.nodeify(n),r.promise}},{key:\"aggregate\",value:function(t){return f(this,t)}},{key:\"_validate\",value:function(t){for(var e in t){if(\"$\"===e[0])throw Error(\"field name cannot start with '$'\");var n=t[e];if(Array.isArray(n)){var r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=a.value;this._validate(f)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}}else\"object\"===(void 0===n?\"undefined\":i(n))&&this._validate(n)}}},{key:\"insert\",value:function(t,e){var n=this;Array.isArray(t)||(t=[t]);var r=u.defer();return this._db._getConn(function(e,i){var o=void 0,u=n._name;try{o=i.transaction([u],\"readwrite\")}catch(e){return r.reject(e)}o.oncomplete=function(){return r.resolve()},o.onerror=function(t){return r.reject(a(t))};var s=o.objectStore(u),f=0;!function e(){var i=t[f];try{n._validate(i)}catch(t){return r.reject(t)}s.add(i).onsuccess=function(){++f<t.length&&e()}}()}),r.promise.nodeify(e),r.promise}},{key:\"_modify\",value:function(t,e,n){var r=u.defer(),i=new s(this,\"readwrite\");return i.filter(e),t(i,function(t){t?r.reject(t):r.resolve()}),r.promise.nodeify(n),r.promise}},{key:\"update\",value:function(t,e,n){return this._modify(function(t,n){return c(t,e,n)},t,n)}},{key:\"remove\",value:function(t,e){return this._modify(l,t,e)}},{key:\"name\",get:function(){return this._name}}]),t}();e.exports=p},{\"./aggregate.js\":1,\"./cursor.js\":4,\"./remove.js\":16,\"./update.js\":20,\"./util.js\":21,q:96}],3:[function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},i=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),o=t(\"deepmerge\"),u=t(\"./util.js\"),a=u.hashify,s=u.getIDBError,f=t(\"./filter.js\"),c=t(\"./sort.js\"),l=t(\"./lang/filter.js\"),p=l.build,h=l.Conjunction,y=l.Disjunction,d=l.Exists,v=function(t){return t>0?\"next\":\"prev\"},g=function(t){return t.length>1?new h(t):t[0]},b=function(t){var e=t.parent,n=t.index;e.args.splice(n,1)},m=function(t,e){var n=t.col,r=t.read_pref;n._db._getConn(function(t,i){if(t)return e(t);var o=n._name;try{var u=i.transaction([o],r);u.onerror=function(t){return e(s(t))},e(null,u.objectStore(o))}catch(t){e(t)}})},w=function(t,e){var n=e.idb_key_range||null,r=e.idb_direction||\"next\",i=e.path.literal;return(\"_id\"===i?t:t.index(i)).openCursor(n,r)},_=function(t){return t.openCursor()},j=function(t){var e=[],n=!0,r=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(n=(u=a.next()).done);n=!0){var s=i(u.value,2),c=s[0],l=s[1];if(c===f){var h=p(l);if(!1===h)return;if(!h)continue;l=h}e.push([c,l])}}catch(t){r=!0,o=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return e},x=function(t){var e=t.pipeline,n=[],r=[],u=0,a=!0,s=!1,l=void 0;try{for(var p,h=e[Symbol.iterator]();!(a=(p=h.next()).done);a=!0){var y=i(p.value,2),d=y[0],v=y[1];if(d===c)r.push(v);else{if(d!==f)break;n.push(v)}u++}}catch(t){s=!0,l=t}finally{try{!a&&h.return&&h.return()}finally{if(s)throw l}}e.splice(0,u),t.pred=g(n),r.length&&(t.sort_spec=r.reduce(o,{}))},O=function(t,e){if(!e)return[];var n=[],r=[],i=!0,o=!1,u=void 0;try{for(var a,s=e.getClauses()[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;t._isIndexed(f.path.literal)&&(f instanceof d?r.push(f):n.push(f))}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}return n.length?n:r},k=function(t){var e=t.col,n=t.pred;t.clauses=O(e,n)},E=function(t){if(t.hint){var e=t.clauses,n=t.hint,r=[],i=!0,o=!1,u=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;f.path.literal===n&&r.push(f)}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}r.length||(r=[{path:{literal:n}}]),t.clauses=r}},A=function(t){if(t.sort_spec){var e=t.clauses,n=t.sort_spec,r=t.pipeline,i=[],o=!0,u=!1,a=void 0;try{for(var s,f=e[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var l=s.value,p=l.path.literal;if(n.hasOwnProperty(p)){var h=n[p];l.idb_direction=v(h),i.push(l)}}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}i.length?t.clauses=i:r.unshift([c,n])}},S=function(t){var e=t.pred,n=t.clauses,i=t.pipeline,o=void 0;if(n.length){var u=function(){var t=n[0];if(o=function(e){return w(e,t)},!e||t===e)return{v:o};b(t)}();if(\"object\"===(void 0===u?\"undefined\":r(u)))return u.v}else if(o=_,!e)return o;return i.unshift([f,e]),o},I=function(t){var e=void 0,n=void 0,r=S(t),i=function(t){n.onsuccess=function(n){e=n.target.result,t()},n.onerror=function(e){return t(s(e))}},o=function(t){i(t),e.continue()},u=function(a){m(t,function(t,s){if(t)return a(t);n=r(s),i(function(t){e&&(u=o),a(t)})})};return function(t){return u(function(n){return t(n,e)})}},T=function(t,e){var n=t.pipeline,r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=i(a.value,2);e=(0,f[0])(e,f[1])}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return e},P=function(t){for(var e=[],n=t.pred.args,r=n.length-1;r>=0;r--){var i={col:t.col,read_pref:t.read_pref,pred:n[r],pipeline:[]};k(i);var o=B(i);e.push(T(i,o))}var u=new Set,s=function(t){var e=a(t._id);if(!u.has(e))return u.add(e)},f=function(){return e.pop()},l=f(),p=function(t){(l=f())?h(t):t()},h=function t(e){l(function(n,r,i){n?e(n):r?s(r)?e(null,r,i):t(e):p(e)})},y=t.sort_spec;return y&&t.pipeline.push([c,y]),h},B=function(t){var e=I(t);return function(t){e(function(e,n){n?t(null,n.value,n):t(e)})}};e.exports=function(t){var e=void 0;try{e=j(t._pipeline)}catch(t){return function(e){return e(t)}}if(!e)return function(t){return t()};var n={col:t._col,read_pref:t._read_pref,hint:t._hint,pipeline:e};x(n);var r=void 0;return n.pred instanceof y?r=P(n):(k(n),E(n),A(n),r=B(n)),T(n,r)}},{\"./filter.js\":6,\"./lang/filter.js\":11,\"./sort.js\":18,\"./util.js\":21,deepmerge:26}],4:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function i(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function o(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var u=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=t(\"events\"),s=t(\"q\"),f=t(\"./create_next_fn.js\"),c=t(\"./filter.js\"),l=t(\"./project.js\"),p=t(\"./group.js\"),h=t(\"./unwind.js\"),y=t(\"./sort.js\"),d=t(\"./skip.js\"),v=t(\"./limit.js\"),g=function(t){function e(t,n){r(this,e);var o=i(this,Object.getPrototypeOf(e).call(this));return o._col=t,o._read_pref=n,o._pipeline=[],o._next=o._init,o}return o(e,a),u(e,[{key:\"_forEach\",value:function(t,e){var n=this;this._next(function(r,i){i?(t(i),n.emit(\"data\",i),n._forEach(t,e)):(n.emit(\"end\"),e(r))})}},{key:\"forEach\",value:function(){var t=arguments.length<=0||void 0===arguments[0]?function(){}:arguments[0],e=arguments[1],n=s.defer();return this._forEach(t,function(t){t?n.reject(t):n.resolve()}),n.promise.nodeify(e),n.promise}},{key:\"_toArray\",value:function(t){var e=[];this._forEach(function(t){e.push(t)},function(n){return t(n,e)})}},{key:\"toArray\",value:function(t){var e=s.defer();return this._toArray(function(t,n){t?e.reject(t):e.resolve(n)}),e.promise.nodeify(t),e.promise}},{key:\"_assertUnopened\",value:function(){if(this._opened)throw Error(\"cursor has already been opened\")}},{key:\"hint\",value:function(t){if(this._assertUnopened(),!this._col._isIndexed(t))throw Error(\"index '\"+t+\"' does not exist\");return this._hint=t,this}},{key:\"_addStage\",value:function(t,e){return this._assertUnopened(),this._pipeline.push([t,e]),this}},{key:\"filter\",value:function(t){return this._addStage(c,t)}},{key:\"limit\",value:function(t){return this._addStage(v,t)}},{key:\"skip\",value:function(t){return this._addStage(d,t)}},{key:\"project\",value:function(t){return this._addStage(l,t)}},{key:\"group\",value:function(t){return this._addStage(p,t)}},{key:\"unwind\",value:function(t){return this._addStage(h,t)}},{key:\"sort\",value:function(t){return this._addStage(y,t)}},{key:\"_init\",value:function(t){this._opened=!0,this._next=f(this),this._next(t)}}]),e}();e.exports=g},{\"./create_next_fn.js\":3,\"./filter.js\":6,\"./group.js\":7,\"./limit.js\":14,\"./project.js\":15,\"./skip.js\":17,\"./sort.js\":18,\"./unwind.js\":19,events:71,q:96}],5:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function i(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function o(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=t(\"events\"),f=t(\"memoizee\"),c=t(\"q\"),l=t(\"./util.js\").getIDBError,p=t(\"./collection.js\"),h=function(t){function e(t,n,o){r(this,e);var a=i(this,Object.getPrototypeOf(e).call(this));if(a._name=t,\"object\"===(void 0===n?\"undefined\":u(n))?o=n:a._version=n,a._cols={},a._config={},a._initGetConn(),Array.isArray(o)){var s=!0,f=!1,c=void 0;try{for(var l,p=o[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){var h=l.value;a._addCollection(h),a._config[h]=!0}}catch(t){f=!0,c=t}finally{try{!s&&p.return&&p.return()}finally{if(f)throw c}}}else for(var y in o)a._addCollection(y),a._addIndex(o[y],y);return a}return o(e,s),a(e,[{key:\"_addCollection\",value:function(t){this._cols[t]=new p(this,t)}},{key:\"_addIndex\",value:function(t,e){var n=this._config;if(!t)return n[e]=!1;if(\"object\"!==(void 0===t?\"undefined\":u(t)))return n[e]={};var r=this._cols[e];if(Array.isArray(t)){var i={},o=!0,a=!1,s=void 0;try{for(var f,c=t[Symbol.iterator]();!(o=(f=c.next()).done);o=!0){var l=f.value;i[l]=!0,r._indexes.add(l)}}catch(t){a=!0,s=t}finally{try{!o&&c.return&&c.return()}finally{if(a)throw s}}n[e]=i}else{for(var p in t)t[p]&&r._indexes.add(p);n[e]=t}}},{key:\"_addStore\",value:function(t,e){var n=t.createObjectStore(e,{keyPath:\"_id\",autoIncrement:!0}),r=this._config[e];for(var i in r)r[i]?n.createIndex(i,i,{unique:!1}):n.deleteIndex(i)}},{key:\"_getConn\",value:function(t){var e=this,n=void 0;(n=this._version?indexedDB.open(this._name,this._version):indexedDB.open(this._name)).onsuccess=function(n){var r=n.target.result;e._idb=r,e._version=r.version,e._open=!0,t(null,r)},n.onerror=function(e){return t(l(e))},n.onupgradeneeded=function(n){var r=n.target.result;for(var i in e._config)try{e._config[i]?r.objectStoreNames.contains(i)||e._addStore(r,i):r.deleteObjectStore(i)}catch(e){return t(e)}},n.onblocked=function(){return e.emit(\"blocked\")}}},{key:\"_initGetConn\",value:function(){this._getConn=f(this._getConn,{async:!0})}},{key:\"collection\",value:function(t){var e=this._cols[t];if(!e)throw Error(\"collection '\"+t+\"' does not exist\");return e}},{key:\"open\",value:function(t){var e=this,n=c.defer();return this._getConn(function(t){t?n.reject(t):n.resolve(e)}),n.promise.nodeify(t),n.promise}},{key:\"close\",value:function(){this._open&&(this._idb.close(),this._open=!1,this._initGetConn())}},{key:\"drop\",value:function(t){this.close();var e=c.defer(),n=indexedDB.deleteDatabase(this._name);return n.onsuccess=function(){return e.resolve()},n.onerror=function(t){return e.reject(l(t))},e.promise.nodeify(t),e.promise}},{key:\"name\",get:function(){return this._name}},{key:\"version\",get:function(){return this._version}}]),e}();e.exports=h},{\"./collection.js\":2,\"./util.js\":21,events:71,memoizee:81,q:96}],6:[function(t,e,n){\"use strict\";var r=t(\"./lang/fields.js\");e.exports=function(t,e){return function(n){!function i(){t(function(t,o,u){o?e.run(new r(o))?n(null,o,u):i():n(t)})}()}}},{\"./lang/fields.js\":10}],7:[function(t,e,n){\"use strict\";function r(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function i(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},a=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if(\"value\"in i)return i.value;var u=i.get;if(void 0!==u)return u.call(r)},s=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),f=t(\"memoizee\"),c=t(\"./util.js\"),l=c.unknownOp,p=c.hashify,h=t(\"./lang/expression.js\"),y=t(\"./lang/fields.js\"),d=function(){function t(){o(this,t)}return s(t,[{key:\"getOpValueWithRefs\",value:function(t,e,n){var r=t.ast,i=t.fields;n(r.run(i))}},{key:\"value\",get:function(){return this._value}}],[{key:\"getNoRefsSteps\",value:function(t){return t.in_iter}},{key:\"getOpValue\",value:function(t,e){e(t.ast.run())}}]),t}(),v=function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._value=0,t}return i(e,d),s(e,[{key:\"getOpValueWithRefs\",value:function(t,n,r){a(Object.getPrototypeOf(e.prototype),\"getOpValueWithRefs\",this).call(this,t,n,function(t){e._verify(t,r)})}},{key:\"add\",value:function(t){this._value+=t}}],[{key:\"_verify\",value:function(t,e){\"number\"==typeof t&&e(t)}},{key:\"getOpValue\",value:function(t,n){a(Object.getPrototypeOf(e),\"getOpValue\",this).call(this,t,function(t){return e._verify(t,n)})}}]),e}(),g=function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._count=0,t}return i(e,v),s(e,[{key:\"add\",value:function(t){this._count++,a(Object.getPrototypeOf(e.prototype),\"add\",this).call(this,t)}},{key:\"value\",get:function(){return this._value/this._count||0}}]),e}(),b=function(t){function e(t){o(this,e);var n=r(this,Object.getPrototypeOf(e).call(this));return n._value=null,n._fn=t,n._add=n._add1,n}return i(e,d),s(e,[{key:\"_add1\",value:function(t){this._value=t,this._add=this._add2}},{key:\"_add2\",value:function(t){this._fn(t,this._value)&&(this._value=t)}},{key:\"add\",value:function(t){null!=t&&this._add(t)}}],[{key:\"getNoRefsSteps\",value:function(t){return t.in_end}}]),e}(),m=function(t){for(var e=arguments.length,n=Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];var i=!0,o=!1,u=void 0;try{for(var a,s=t[Symbol.iterator]();!(i=(a=s.next()).done);i=!0)a.value.apply(void 0,n)}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}},w=function(t,e){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0){var a=o.value;m(t,a)}}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}},_=function(t,e,n,r){return function(i){var o=function(t){t||w(e,n),i(t,n)};!function e(){t(function(t,n){if(!n)return o(t);r(n),e()})}()}},j=function(t,e,n){var r=n.in_start,i=n.in_iter,o=n.in_end,u=[],a=f(function(t,e){var n={_id:e};return u.push(n),m(r,n),n},{length:1}),s=e.ast,c=function(t){return s.run(new y(t))},l=void 0;return l=i.length?function(t){var e=c(t),n=a(p(e),e);m(i,n,t)}:function(t){var e=c(t);a(p(e),e)},_(t,o,u,l)},x=function(t,e,n){if(e.has_refs)return j(t,e,n);var r=n.in_start,i=n.in_iter,o=n.in_end,a=[],s=function(){var t={_id:e.ast.run()};return m(r,t),a.push(t),t};if(i.length){var c=function(){var e=f(function(){return s()});return{v:_(t,o,a,function(t){m(i,e(),t)})}}();if(\"object\"===(void 0===c?\"undefined\":u(c)))return c.v}return function(e){t(function(t,n){n&&(s(),w(o,a)),e(t,a)})}},O={$sum:v,$avg:g,$min:function(t){function e(){return o(this,e),r(this,Object.getPrototypeOf(e).call(this,function(t,e){return t<e}))}return i(e,b),e}(),$max:function(t){function e(){return o(this,e),r(this,Object.getPrototypeOf(e).call(this,function(t,e){return t>e}))}return i(e,b),e}(),$push:function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._value=[],t}return i(e,d),s(e,[{key:\"add\",value:function(t){this._value.push(t)}}]),e}(),$addToSet:function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._hashes={},t}return i(e,d),s(e,[{key:\"add\",value:function(t){this._hashes[p(t)]=t}},{key:\"value\",get:function(){var t=[];for(var e in this._hashes)t.push(this._hashes[e]);return t}}],[{key:\"getNoRefsSteps\",value:function(t){return t.in_end}}]),e}()},k=function(t,e,n){var r=t.in_start,i=t.in_iter,o=t.in_end,u=Object.keys(n);if(u.length>1)throw Error(\"fields must have only one operator\");var a=u[0],s=O[a];if(!s)throw\"$\"===a[0]&&l(a),Error(\"unexpected field '\"+a+\"'\");var f=h(n[a]);r.push(function(t){t[e]=new s(f)}),f.has_refs?i.push(function(t,n){var r=new y(n);if(r.ensure(f.paths)){var i=t[e],o=Object.assign({fields:r},f);i.getOpValueWithRefs(o,n,function(t){return i.add(t)})}}):s.getOpValue(f,function(n){s.getNoRefsSteps(t).push(function(t){t[e].add(n)})}),o.push(function(t){t[e]=t[e].value})};e.exports=function(t,e){if(!e.hasOwnProperty(\"_id\"))throw Error(\"the '_id' field is missing\");var n=h(e._id),r=Object.assign({},e);delete r._id;var i={in_start:[],in_iter:[],in_end:[]};for(var o in r)k(i,o,r[o]);var u=x(t,n,i),a=function(t){u(function(e,n){e?t(e):(a=function(t){return t(null,n.pop())})(t)})};return function(t){return a(t)}}},{\"./lang/expression.js\":9,\"./lang/fields.js\":10,\"./util.js\":21,memoizee:81}],8:[function(t,e,n){\"use strict\";e.exports={Db:t(\"./db.js\")}},{\"./db.js\":5}],9:[function(t,e,n){\"use strict\";function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function i(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function o(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function u(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=t(\"../util.js\").unknownOp,f=t(\"./missing_symbol.js\"),c=t(\"./path.js\"),l=function(){function t(e){u(this,t),this.value=e}return a(t,[{key:\"run\",value:function(){return this.value}},{key:\"ResultType\",get:function(){return this.constructor}}],[{key:\"any\",value:function(e){return\"number\"==typeof e?new p(e):\"string\"==typeof e?new h(e):Array.isArray(e)?new y(e):e instanceof Date?new d(e):new t(e)}},{key:\"literal\",value:function(e){return new v(t.any(e))}}]),t}(),p=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return\"number\"==typeof t}}]),e}(),h=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return\"string\"==typeof t}}]),e}(),y=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return Array.isArray(t)}}]),e}(),d=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return t instanceof Date}}]),e}(),v=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,[{key:\"run\",value:function(){return this.value.run()}},{key:\"ResultType\",get:function(){return this.value.ResultType}}]),e}(),g=function(){function t(e){u(this,t),this.path=e}return a(t,[{key:\"run\",value:function(t){var e=t.get(this.path);return e===f?null:e}}]),t}(),b=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,[{key:\"run\",value:function(t){var e={},n=this.value;for(var r in n)e[r]=n[r].run(t);return e}}]),e}(),m=function(){function t(){u(this,t),this.args=[]}return a(t,[{key:\"add\",value:function(t){this.args.push(t)}},{key:\"alt\",get:function(){return new l(null)}}]),t}(),w=function(t){function e(t){u(this,e);var n=i(this,Object.getPrototypeOf(e).call(this));return n.fn=t,n}return o(e,m),a(e,[{key:\"run\",value:function(t){var e=this.args,n=this.fn;return e.map(function(e){return e.run(t)}).reduce(n)}},{key:\"length\",get:function(){return 1/0}}]),e}(),_=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,w),a(e,[{key:\"run\",value:function(t){return this.fn(this.args[0].run(t))}},{key:\"length\",get:function(){return 1}}]),e}(),j=function(t,e){return function(n){function r(){return u(this,r),i(this,Object.getPrototypeOf(r).call(this,e))}return o(r,t),r}()},x=function(t,e){var n=arguments.length<=2||void 0===arguments[2]?e:arguments[2],r=function(e){function n(){return u(this,n),i(this,Object.getPrototypeOf(n).apply(this,arguments))}return o(n,t),n}();return r.prototype.InputType=e,r.prototype.ResultType=n,r},O=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,p)),e}(),k=function(t){return j(O,t)},E=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t+e})),e}(),A=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t-e})),e}(),S=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t*e})),e}(),I=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t/e})),e}(),T=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t%e})),e}(),P=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,p)),a(e,[{key:\"run\",value:function(t){return this.fn.apply(this,r(this.args.map(function(e){return e.run(t)})))}},{key:\"length\",get:function(){return this.fn.length}}]),e}(),B=function(t){return j(P,t)},C=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.abs)),e}(),L=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.ceil)),e}(),U=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.floor)),e}(),R=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.log)),e}(),$=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.log10)),e}(),N=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.pow)),e}(),M=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.sqrt)),e}(),D=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.trunc)),e}(),z=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,h)),e}(),F=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(z,function(t,e){return t+e})),e}(),Y=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(_,h)),a(e,[{key:\"alt\",get:function(){return new h(\"\")}}]),e}(),q=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Y,function(t){return t.toLowerCase()})),e}(),V=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Y,function(t){return t.toUpperCase()})),e}(),Q=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,y)),e}(),K=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Q,function(t,e){return t.concat(e)})),e}(),W=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(_,d,p)),e}(),H=function(t){return j(W,t)},J=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getDate()})),e}(),G=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCFullYear()})),e}(),X=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMonth()+1})),e}(),Z=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCHours()})),e}(),tt=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMinutes()})),e}(),et=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCSeconds()})),e}(),nt=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMilliseconds()})),e}(),rt=function(){function t(e,n,r){u(this,t);var i=r.InputType,o=r.alt;this.result_types=new Set([r.ResultType,o.ResultType]),this.stack=e,this.isType=i.isType,this.args=n,this.op=r,this.alt_value=o.value}return a(t,[{key:\"run\",value:function(t){var e=this.stack,n=this.isType,r=this.op,i=[],o=!0,u=!1,a=void 0;try{for(var s,f=this.args[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value.run(t);if(!n(c))return this.alt_value;i.push(c)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}for(var l=i.length-1;l>=0;l--)e.push(i[l]);return r.run(t)}}]),t}(),it=function(){function t(e){u(this,t),this.stack=e}return a(t,[{key:\"run\",value:function(){return this.stack.pop()}}]),t}(),ot={$add:E,$subtract:A,$multiply:S,$divide:I,$mod:T,$abs:C,$ceil:L,$floor:U,$ln:R,$log10:$,$pow:N,$sqrt:M,$trunc:D,$concat:F,$toLower:q,$toUpper:V,$concatArrays:K,$dayOfMonth:J,$year:G,$month:X,$hour:Z,$minute:tt,$second:et,$millisecond:nt},ut=function(t,e,n){var r=ot[e];r||s(e),Array.isArray(n)||(n=[n]);for(var i=new r,o=[],u=[],a=[],f=0;f<n.length&&f<i.length;f++){var c=st(u,n[f]);if(c.ResultType){if(c.ResultType!==i.InputType)return i.alt;i.add(c)}else{if(c instanceof rt){if(!c.result_types.has(i.InputType))return i.alt;if(1===c.result_types.size){i.add(c);continue}}o.push(c),i.add(new it(a))}}return u.length?(t.push.apply(t,u),o.length?new rt(a,o,i):i):new i.ResultType(i.run())},at=function(t,e){var n=new Set,r=new Set;for(var i in e)(\"$\"===i[0]?n:r).add(i);if(n.size>1)throw Error(\"objects cannot have more than one operator\");if(n.size){var o=!0,u=!1,a=void 0;try{for(var s,f=r[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value;throw Error(\"unexpected field '\"+c+\"'\")}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}var p=!0,h=!1,y=void 0;try{for(var d,v=n[Symbol.iterator]();!(p=(d=v.next()).done);p=!0){var g=d.value;return\"$literal\"===g?l.literal(e[g]):ut(t,g,e[g])}}catch(t){h=!0,y=t}finally{try{!p&&v.return&&v.return()}finally{if(h)throw y}}}var m=[],w={};for(var _ in e)w[_]=st(m,e[_]);var j=new b(w);return m.length?(t.push.apply(t,m),j):new l(j.run())},st=function(t,e){if(\"string\"==typeof e&&\"$\"===e[0]){var n=new c(e.substring(1));return t.push(n),new g(n)}return null==e||e.constructor!==Object?l.any(e):at(t,e)};e.exports=function(t){var e=[];return{ast:st(e,t),paths:e,has_refs:!!e.length}}},{\"../util.js\":21,\"./missing_symbol.js\":12,\"./path.js\":13}],10:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=t(\"memoizee\"),u=t(\"../util.js\").get,a=t(\"./missing_symbol.js\"),s=function(){function t(e){r(this,t),this._doc=e,this.get=o(this.get)}return i(t,[{key:\"get\",value:function(t){var e=a;return u(this._doc,t.pieces,function(t,n){e=t[n]}),e}},{key:\"ensure\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=t[Symbol.iterator]();!(e=(i=o.next()).done);e=!0){var u=i.value;if(this.get(u)===a)return!1}}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!0}}]),t}();e.exports=s},{\"../util.js\":21,\"./missing_symbol.js\":12,memoizee:81}],11:[function(t,e,n){\"use strict\";function r(t){return Array.isArray(t)?t:Array.from(t)}function i(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function o(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function u(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var s=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if(\"value\"in i)return i.value;var u=i.get;if(void 0!==u)return u.call(r)},f=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=t(\"../util.js\"),l=c.isObject,p=c.equal,h=c.unknownOp,y=t(\"./missing_symbol.js\"),d=t(\"./path.js\"),v=t(\"./fields.js\"),g=function t(e){if(\"number\"==typeof e)return!isNaN(e);if(\"string\"==typeof e)return!0;if(\"boolean\"==typeof e)return!0;if(!e)return!1;if(e.constructor===Object)return!1;if(Array.isArray(e)){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0)if(!t(o.value))return!1}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}return!0}return e instanceof Date&&!isNaN(e.valueOf())},b=function(){function t(){a(this,t)}return f(t,[{key:\"getClauses\",value:function(){return this.is_index_matchable?[this]:[]}}]),t}(),m=function(t){function e(t){a(this,e);var n=o(this,Object.getPrototypeOf(e).call(this));return n.args=t,n}return u(e,b),e}(),w=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,m),f(e,[{key:\"getClauses\",value:function(){for(var t=[],e=0;e<this.args.length;e++){var n=this.args[e];n instanceof m?t.push.apply(t,i(n.getClauses())):n.is_index_matchable&&(n.parent=this,n.index=e,t.push(n))}return t}},{key:\"run\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=this.args[Symbol.iterator]();!(e=(i=o.next()).done);e=!0)if(!i.value.run(t))return!1}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!0}}]),e}(),_=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,m),f(e,[{key:\"getClauses\",value:function(){return[]}},{key:\"run\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=this.args[Symbol.iterator]();!(e=(i=o.next()).done);e=!0)if(i.value.run(t))return!0}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!1}}]),e}(),j=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,w),f(e,[{key:\"getClauses\",value:function(){return[]}},{key:\"run\",value:function(t){return!s(Object.getPrototypeOf(e.prototype),\"run\",this).call(this,t)}}]),e}(),x=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.bool=n,r}return u(e,b),f(e,[{key:\"run\",value:function(t){return t.get(this.path)!==y===this.bool}},{key:\"is_index_matchable\",get:function(){return!!this.bool}}]),e}(),O=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.value=n,r}return u(e,b),f(e,[{key:\"run\",value:function(t){var e=t.get(this.path);return e!==y&&p(e,this.value)}},{key:\"is_index_matchable\",get:function(){return g(this.value)}},{key:\"idb_key_range\",get:function(){return IDBKeyRange.only(this.value)}}]),e}(),k=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,O),f(e,[{key:\"run\",value:function(t){return!s(Object.getPrototypeOf(e.prototype),\"run\",this).call(this,t)}},{key:\"is_index_matchable\",get:function(){return!1}}]),e}(),E=function(t){function e(t,n,r){a(this,e);var i=o(this,Object.getPrototypeOf(e).call(this));return i.path=t,i.fns=n,i.values=r,i}return u(e,b),f(e,[{key:\"run\",value:function(t){var e=t.get(this.path);if(e===y||null==e)return!1;for(var n=this.fns,r=this.values,i=0;i<n.length;i++)if(!n[i](e,r[i]))return!1;return!0}},{key:\"is_index_matchable\",get:function(){return!0}}]),e}(),A=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(t){function n(t,r){return a(this,n),o(this,Object.getPrototypeOf(n).call(this,t,e,r))}return u(n,E),n}()},S=function(t,e){return t>e},I=function(t,e){return t>=e},T=function(t,e){return t<e},P=function(t,e){return t<=e},B=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).lowerBound.apply(t,i(this.values).concat([!0]))}}]),e}(),C=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).lowerBound.apply(t,i(this.values))}}]),e}(),L=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(T)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).upperBound.apply(t,i(this.values).concat([!0]))}}]),e}(),U=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(P)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).upperBound.apply(t,i(this.values))}}]),e}(),R=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S,T)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!0,!0]))}}]),e}(),$=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I,T)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!1,!0]))}}]),e}(),N=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S,P)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!0,!1]))}}]),e}(),M=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I,P)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values))}}]),e}(),D=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.op=n,r}return u(e,b),f(e,[{key:\"run\",value:function(t){var e=t.get(this.path);if(!e||!e[Symbol.iterator])return!1;var n=this.op,r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done);r=!0){var s=u.value;if(l(s)&&n.run(new v(s)))return!0}}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return!1}},{key:\"is_index_matchable\",get:function(){return!1}}]),e}(),z=function(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done);r=!0){var s=u.value,f=Q(s);f&&n.push(f)}}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n.length&&t.push(new j(n)),!0},F={$and:function(t,e){var n=!0,r=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(n=(u=a.next()).done);n=!0){var s=u.value,f=Q(s);if(!1===f)return!1;f&&(f.constructor===w?t.push.apply(t,i(f.args)):t.push(f))}}catch(t){r=!0,o=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return!0},$or:function(t,e){var n=[],r=void 0,o=!0,u=!1,a=void 0;try{for(var s,f=e[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value,l=Q(c);l?l.constructor===_?n.push.apply(n,i(l.args)):n.push(l):!1===l&&(r=!0)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}if(n.length>1)t.push(new _(n));else if(n.length)t.push(n[0]);else if(r)return!1;return!0},$not:z,$nor:z},Y=[[R,\"$gt\",\"$lt\"],[$,\"$gte\",\"$lt\"],[N,\"$gt\",\"$lte\"],[M,\"$gte\",\"$lte\"],[B,\"$gt\"],[C,\"$gte\"],[L,\"$lt\"],[U,\"$lte\"]],q=function(t,e,n,i){var o=!0,u=!1,a=void 0;try{for(var s,f=Y[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=r(s.value),l=function(r,o){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=o[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;if(!i.has(p))return;var h=n[p];if(!g(h))return!1;u.push(h)}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}return t.push(new r(e,u)),!0}(c[0],c.slice(1));if(!1===l)return;if(l){i.delete(\"$gt\"),i.delete(\"$gte\"),i.delete(\"$lt\"),i.delete(\"$lte\");break}}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}return!0},V=function(t,e,n){var r=function(){return t.push(new O(e,n)),!0};if(null==n||n.constructor!==Object)return r();var i=new Set(Object.keys(n));if(i.has(\"$exists\")&&!n.$exists)return t.push(new x(e,!1)),!0;var o=[];if(i.has(\"$eq\")&&(o.push(new O(e,n.$eq)),i.delete(\"$eq\")),i.has(\"$ne\")&&(o.push(new k(e,n.$ne)),i.delete(\"$ne\")),!q(o,e,n,i))return!1;if(i.has(\"$in\")){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=n.$in[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;u.push(new O(e,p))}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}u.length>1?o.push(new _(u)):u.length&&o.push(u[0]),i.delete(\"$in\")}if(i.has(\"$nin\")){var y=!0,d=!1,v=void 0;try{for(var g,b=n.$nin[Symbol.iterator]();!(y=(g=b.next()).done);y=!0){var m=g.value;o.push(new k(e,m))}}catch(t){d=!0,v=t}finally{try{!y&&b.return&&b.return()}finally{if(d)throw v}}i.delete(\"$nin\")}if(i.has(\"$elemMatch\")){var w=Q(n.$elemMatch);w&&o.push(new D(e,w)),i.delete(\"$elemMatch\")}n.$exists&&!o.length&&(o.push(new x(e,!0)),i.delete(\"$exists\"));var j=!0,E=!1,A=void 0;try{for(var S,I=i[Symbol.iterator]();!(j=(S=I.next()).done);j=!0){var T=S.value;\"$\"===T[0]&&h(T)}}catch(t){E=!0,A=t}finally{try{!j&&I.return&&I.return()}finally{if(E)throw A}}return o.length?(t.push.apply(t,o),!0):r()},Q=function(t){var e=[];for(var n in t){var r=t[n],i=void 0;if(\"$\"!==n[0])i=V(e,new d(n),r);else{Array.isArray(r)||(r=[r]);var o=F[n];o||h(n),i=o(e,r)}if(!i)return i}if(e.length)return 1===e.length?e[0]:new w(e)};e.exports.build=Q,e.exports.Conjunction=w,e.exports.Disjunction=_,e.exports.Exists=x},{\"../util.js\":21,\"./fields.js\":10,\"./missing_symbol.js\":12,\"./path.js\":13}],12:[function(t,e,n){\"use strict\";e.exports=Symbol(\"missing\")},{}],13:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var i=t(\"../util.js\").toPathPieces;e.exports=function t(e){r(this,t),this.pieces=i(e),this.literal=e}},{\"../util.js\":21}],14:[function(t,e,n){\"use strict\";e.exports=function(t,e){var n=0;return function(r){n++<e?t(r):r()}}},{}],15:[function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},i=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),o=t(\"./util.js\"),u=o.toPathPieces,a=o.set,s=o.remove2,f=o.copy,c=t(\"./lang/expression.js\"),l=t(\"./lang/fields.js\"),p=function(t,e,n){var r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=i(a.value,2),c=f[0];(0,f[1])(t,e,c)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return e},h=function(t){var e=c(t),n=e.ast,i=e.paths;if(!e.has_refs){var o=function(){var t=n.run();return{v:function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return a.apply(void 0,r.concat([t]))}}}();if(\"object\"===(void 0===o?\"undefined\":r(o)))return o.v}return function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),o=1;o<e;o++)r[o-1]=arguments[o];var u=new l(t);u.ensure(i)&&a.apply(void 0,r.concat([n.run(u)]))}};e.exports=function(t,e){var n=function(t){return!!e[t]},r=!0;e.hasOwnProperty(\"_id\")&&(r=n(\"_id\"),delete e._id);var i=[],o=[],a=!0,c=function(t){if(n(t)!==a)throw Error(\"cannot mix inclusions and exclusions\")},l=function(t){a=n(t),l=c};for(var y in e){var d=e[y],v=u(y);\"boolean\"==typeof d||1===d||0===d?(l(y),i.push(v)):o.push([v,h(d)])}var g=[];o.length&&g.push(function(t,e){return p(t,e,o)}),i.length?function(){a===r&&i.push([\"_id\"]);var t=a?f:s;g.push(function(e){return t(e,i)})}():function(){var t=void 0;t=r?function(t,e){t.hasOwnProperty(\"_id\")&&(e._id=t._id)}:function(t,e){delete e._id},g.push(function(e,n){return t(e,n),n})}();return function(e){t(function(t,n){if(!n)return e(t);var r=n,i=!0,o=!1,u=void 0;try{for(var a,s=g[Symbol.iterator]();!(i=(a=s.next()).done);i=!0)r=(0,a.value)(n,r)}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}e(null,r)})}}},{\"./lang/expression.js\":9,\"./lang/fields.js\":10,\"./util.js\":21}],16:[function(t,e,n){\"use strict\";var r=t(\"./util.js\").getIDBError;e.exports=function(t,e){!function n(){t._next(function(t,i,o){if(!i)return e(t);var u=o.delete();u.onsuccess=n,u.onerror=function(t){return e(r(t))}})}()}},{\"./util.js\":21}],17:[function(t,e,n){\"use strict\";e.exports=function(t,e){var n=0;return function r(i){t(function(t,o){o?++n>e?i(null,o):r(i):i(t)})}}},{}],18:[function(t,e,n){\"use strict\";var r=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),i=t(\"./util.js\"),o=i.toPathPieces,u=i.isObject,a=i.equal,s=function(t,e,n,r){for(var i=0;i<n.length-1;i++){var o=n[i];if(t=t[o],e=e[o],u(t)){if(u(e))continue}else if(!u(e))return null;return r}var s=n[i];if(t.hasOwnProperty(s)){if(e.hasOwnProperty(s))return t=t[s],e=e[s],a(t,e)?0:(t<e?1:-1)*r}else if(!e.hasOwnProperty(s))return null;return r};e.exports=function(t,e){var n=[];for(var i in e)n.push([o(i),e[i]]);var u=function(t,e){var i=!0,o=!1,u=void 0;try{for(var a,f=n[Symbol.iterator]();!(i=(a=f.next()).done);i=!0){var c=r(a.value,2),l=c[0],p=c[1],h=s(t,e,l,p);if(h>0||h<0)return h}}catch(t){o=!0,u=t}finally{try{!i&&f.return&&f.return()}finally{if(o)throw u}}return-p},a=[],f=function(t){return t(null,a.pop())},c=function(e){var n=function(t){if(t)return e(t);a=a.sort(u),(c=f)(e)};!function e(){t(function(t,r){if(!r)return n(t);a.push(r),e()})}()};return function(t){return c(t)}}},{\"./util.js\":21}],19:[function(t,e,n){\"use strict\";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var i=t(\"./util.js\"),o=i.toPathPieces,u=i.get;e.exports=function(t,e){var n=o(e.substring(1)),i=[],a=function(t){return t(null,i.pop())},s=function(t,e){var o=i.length;if(u(t,n,function(t,e){var n=t[e];if(n&&n[Symbol.iterator]){var o=!0,u=!1,a=void 0;try{for(var s,f=n[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value;i.push(r({},e,c))}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}}}),o===i.length)return f(e);a(e)},f=function(e){t(function(t,n){t?e(t):n?s(n,e):(f=a)(e)})};return function(t){return f(t)}}},{\"./util.js\":21}],20:[function(t,e,n){\"use strict\";var r=t(\"./util.js\"),i=r.toPathPieces,o=r.get,u=r.set,a=r.modify,s=r.remove1,f=r.rename,c=r.equal,l=r.unknownOp,p=r.getIDBError,h={};h.$set=function(t,e){return function(n){u(n,t,e)}},h.$unset=function(t){return function(e){return s(e,t)}},h.$rename=function(t,e){return function(n){f(n,t,e)}};var y=function(t,e,n){return function(r){a(r,t,e,n)}},d=function(t){return function(e,n){return y(e,function(e,r){var i=e[r];\"number\"==typeof i&&(e[r]=t(n,i))},function(t,e){return t[e]=0})}};h.$inc=d(function(t,e){return t+e}),h.$mul=d(function(t,e){return t*e});var v=function(t){return function(e,n){return y(e,function(e,r){t(n,e[r])&&(e[r]=n)},function(t,e){return t[e]=n})}};h.$min=v(function(t,e){return t<e}),h.$max=v(function(t,e){return t>e}),h.$push=function(t,e){return y(t,function(t,n){var r=t[n];Array.isArray(r)&&r.push(e)},function(t,n){return t[n]=[e]})},h.$pop=function(t,e){var n=void 0;return n=e<1?function(t){return t.shift()}:function(t){return t.pop()},function(e){o(e,t,function(t,e){var r=t[e];Array.isArray(r)&&n(r)})}},h.$pullAll=function(t,e){return function(n){o(n,t,function(t,n){var r=t[n];if(Array.isArray(r)){var i=[],o=!0,u=!1,a=void 0;try{for(var s,f=r[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var l=s.value;(function(t){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0){var a=o.value;if(c(t,a))return!0}}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}})(l)||i.push(l)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}t[n]=i}})}},h.$pull=function(t,e){return h.$pullAll(t,[e])},h.$addToSet=function(t,e){return function(n){o(n,t,function(t,n){var r=t[n];if(Array.isArray(r)){var i=!0,o=!1,u=void 0;try{for(var a,s=r[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;if(c(f,e))return}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}r.push(e)}})}};var g=function(t,e,n){if(\"$\"!==e[0])return t.push(h.$set(i(e),n));var r=h[e];r||l(e);for(var o in n)t.push(r(i(o),n[o]))};e.exports=function(t,e,n){var r=[];for(var i in e)g(r,i,e[i]);if(!r.length)return n(null);!function e(){t._next(function(t,i,o){if(!i)return n(t);var u=!0,a=!1,s=void 0;try{for(var f,c=r[Symbol.iterator]();!(u=(f=c.next()).done);u=!0)(0,f.value)(i)}catch(t){a=!0,s=t}finally{try{!u&&c.return&&c.return()}finally{if(a)throw s}}var l=o.update(i);l.onsuccess=e,l.onerror=function(t){return n(p(t))}})}()}},{\"./util.js\":21}],21:[function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},i=t(\"deepmerge\"),o=t(\"clone\"),u=t(\"object-hash\"),a=function(t,e){for(var n=0;n<e.length-1;n++){var r=e[n];if(!t.hasOwnProperty(r))return;if(t=t[r],!c(t))return}if(t.hasOwnProperty(e[n]))return t},s=function(t,e,n){for(var r=n;r<e.length-1;r++)t[e[r]]={},t=t[e[r]];return t},f=function(t,e,n){(t=a(t,e))&&n(t,e[e.length-1])},c=function(t){return\"object\"===(void 0===t?\"undefined\":r(t))&&null!==t},l=function(t,e,n,r){var i=e[e.length-1],o=function(n){t=s(t,e,n),r(t,i)};if(!t.hasOwnProperty(e[0]))return o(0);if(e.length>1){t=t[e[0]];for(var u=1;u<e.length-1;u++){var a=e[u];if(!c(t[a]))return;if(Array.isArray(t)&&a<0)return;if(!t.hasOwnProperty(a))return o(u);t=t[a]}}n(t,i)},p=function t(e,n,r){for(var i in e)!function(i){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=r[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;if(p[0]===i){if(1===p.length)return;u.push(p.slice(1))}}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}if(u.length){var h=e[i];n[i]=new h.constructor,t(h,n[i],u)}else n[i]=o(e[i])}(i)},h=function(t,e,n){for(var r=0;r<n.length-1;r++){var i=n[r];if(t=t[i],!c(t))return;e[i]=new t.constructor,e=e[i]}if(t.hasOwnProperty(n[r]))return e[n[r]]=t[n[r]],t},y=function(t){if(void 0!==t)return u(t)};e.exports.toPathPieces=function(t){return t.split(\".\")},e.exports.exists=function(t,e){return!!a(t,e)},e.exports.create=s,e.exports.get=f,e.exports.set=function(t,e,n){var r=function(t,e){return t[e]=n};l(t,e,r,r)},e.exports.isObject=c,e.exports.modify=l,e.exports.remove1=function(t,e){for(var n=0;n<e.length-1;n++)if(t=t[e[n]],!c(t))return;if(Array.isArray(t)){var r=Number.parseFloat(e[n]);Number.isInteger(r)&&t.splice(r,1)}else delete t[e[n]]},e.exports.remove2=function(t,e){var n=new t.constructor;return p(t,n,e),n},e.exports.rename=function(t,e,n){f(t,e,function(t,e){t[n]=t[e],delete t[e]})},e.exports.copy=function(t,e){var n=[],r=!0,o=!1,u=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=a.value,c=new t.constructor;h(t,c,f)&&n.push(c)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return n.reduce(i,{})},e.exports.equal=function(t,e){return y(t)===y(e)},e.exports.unknownOp=function(t){throw Error(\"unknown operator '\"+t+\"'\")},e.exports.hashify=y,e.exports.getIDBError=function(t){return Error(t.target.error.message)}},{clone:24,deepmerge:26,\"object-hash\":94}],22:[function(t,e,n){\"use strict\";function r(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");return\"=\"===t[e-2]?2:\"=\"===t[e-1]?1:0}function i(t){return u[t>>18&63]+u[t>>12&63]+u[t>>6&63]+u[63&t]}function o(t,e,n){for(var r,o=[],u=e;u<n;u+=3)r=(t[u]<<16)+(t[u+1]<<8)+t[u+2],o.push(i(r));return o.join(\"\")}n.byteLength=function(t){return 3*t.length/4-r(t)},n.toByteArray=function(t){var e,n,i,o,u,f=t.length;o=r(t),u=new s(3*f/4-o),n=o>0?f-4:f;var c=0;for(e=0;e<n;e+=4)i=a[t.charCodeAt(e)]<<18|a[t.charCodeAt(e+1)]<<12|a[t.charCodeAt(e+2)]<<6|a[t.charCodeAt(e+3)],u[c++]=i>>16&255,u[c++]=i>>8&255,u[c++]=255&i;return 2===o?(i=a[t.charCodeAt(e)]<<2|a[t.charCodeAt(e+1)]>>4,u[c++]=255&i):1===o&&(i=a[t.charCodeAt(e)]<<10|a[t.charCodeAt(e+1)]<<4|a[t.charCodeAt(e+2)]>>2,u[c++]=i>>8&255,u[c++]=255&i),u},n.fromByteArray=function(t){for(var e,n=t.length,r=n%3,i=\"\",a=[],s=0,f=n-r;s<f;s+=16383)a.push(o(t,s,s+16383>f?f:s+16383));return 1===r?(e=t[n-1],i+=u[e>>2],i+=u[e<<4&63],i+=\"==\"):2===r&&(e=(t[n-2]<<8)+t[n-1],i+=u[e>>10],i+=u[e>>4&63],i+=u[e<<2&63],i+=\"=\"),a.push(i),a.join(\"\")};for(var u=[],a=[],s=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",c=0,l=f.length;c<l;++c)u[c]=f[c],a[f.charCodeAt(c)]=c;a[\"-\".charCodeAt(0)]=62,a[\"_\".charCodeAt(0)]=63},{}],23:[function(t,e,n){\"use strict\";function r(t){if(t>H)throw new RangeError(\"Invalid typed array length\");var e=new Uint8Array(t);return e.__proto__=i.prototype,e}function i(t,e,n){if(\"number\"==typeof t){if(\"string\"==typeof e)throw new Error(\"If encoding is specified then the first argument must be a string\");return s(t)}return o(t,e,n)}function o(t,e,n){if(\"number\"==typeof t)throw new TypeError('\"value\" argument must not be a number');return q(t)?l(t,e,n):\"string\"==typeof t?f(t,e):p(t)}function u(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function a(t,e,n){return u(t),t<=0?r(t):void 0!==e?\"string\"==typeof n?r(t).fill(e,n):r(t).fill(e):r(t)}function s(t){return u(t),r(t<0?0:0|h(t))}function f(t,e){if(\"string\"==typeof e&&\"\"!==e||(e=\"utf8\"),!i.isEncoding(e))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|y(t,e),o=r(n),u=o.write(t,e);return u!==n&&(o=o.slice(0,u)),o}function c(t){for(var e=t.length<0?0:0|h(t.length),n=r(e),i=0;i<e;i+=1)n[i]=255&t[i];return n}function l(t,e,n){if(e<0||t.byteLength<e)throw new RangeError(\"'offset' is out of bounds\");if(t.byteLength<e+(n||0))throw new RangeError(\"'length' is out of bounds\");var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),r.__proto__=i.prototype,r}function p(t){if(i.isBuffer(t)){var e=0|h(t.length),n=r(e);return 0===n.length?n:(t.copy(n,0,0,e),n)}if(t){if(V(t)||\"length\"in t)return\"number\"!=typeof t.length||Q(t.length)?r(0):c(t);if(\"Buffer\"===t.type&&Array.isArray(t.data))return c(t.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}function h(t){if(t>=H)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+H.toString(16)+\" bytes\");return 0|t}function y(t,e){if(i.isBuffer(t))return t.length;if(V(t)||q(t))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return n;case\"utf8\":case\"utf-8\":case void 0:return M(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*n;case\"hex\":return n>>>1;case\"base64\":return F(t).length;default:if(r)return M(t).length;e=(\"\"+e).toLowerCase(),r=!0}}function d(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return\"\";if(n>>>=0,e>>>=0,n<=e)return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return T(this,e,n);case\"utf8\":case\"utf-8\":return E(this,e,n);case\"ascii\":return S(this,e,n);case\"latin1\":case\"binary\":return I(this,e,n);case\"base64\":return k(this,e,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return P(this,e,n);default:if(r)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),r=!0}}function v(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,o){if(0===t.length)return-1;if(\"string\"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,Q(n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if(\"string\"==typeof e&&(e=i.from(e,r)),i.isBuffer(e))return 0===e.length?-1:b(t,e,n,r,o);if(\"number\"==typeof e)return e&=255,\"function\"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):b(t,[e],n,r,o);throw new TypeError(\"val must be string, number or Buffer\")}function b(t,e,n,r,i){function o(t,e){return 1===u?t[e]:t.readUInt16BE(e*u)}var u=1,a=t.length,s=e.length;if(void 0!==r&&(\"ucs2\"===(r=String(r).toLowerCase())||\"ucs-2\"===r||\"utf16le\"===r||\"utf-16le\"===r)){if(t.length<2||e.length<2)return-1;u=2,a/=2,s/=2,n/=2}var f;if(i){var c=-1;for(f=n;f<a;f++)if(o(t,f)===o(e,-1===c?0:f-c)){if(-1===c&&(c=f),f-c+1===s)return c*u}else-1!==c&&(f-=f-c),c=-1}else for(n+s>a&&(n=a-s),f=n;f>=0;f--){for(var l=!0,p=0;p<s;p++)if(o(t,f+p)!==o(e,p)){l=!1;break}if(l)return f}return-1}function m(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=e.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");r>o/2&&(r=o/2);for(var u=0;u<r;++u){var a=parseInt(e.substr(2*u,2),16);if(Q(a))return u;t[n+u]=a}return u}function w(t,e,n,r){return Y(M(e,t.length-n),t,n,r)}function _(t,e,n,r){return Y(D(e),t,n,r)}function j(t,e,n,r){return _(t,e,n,r)}function x(t,e,n,r){return Y(F(e),t,n,r)}function O(t,e,n,r){return Y(z(e,t.length-n),t,n,r)}function k(t,e,n){return 0===e&&n===t.length?K.fromByteArray(t):K.fromByteArray(t.slice(e,n))}function E(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var o=t[i],u=null,a=o>239?4:o>223?3:o>191?2:1;if(i+a<=n){var s,f,c,l;switch(a){case 1:o<128&&(u=o);break;case 2:128==(192&(s=t[i+1]))&&(l=(31&o)<<6|63&s)>127&&(u=l);break;case 3:s=t[i+1],f=t[i+2],128==(192&s)&&128==(192&f)&&(l=(15&o)<<12|(63&s)<<6|63&f)>2047&&(l<55296||l>57343)&&(u=l);break;case 4:s=t[i+1],f=t[i+2],c=t[i+3],128==(192&s)&&128==(192&f)&&128==(192&c)&&(l=(15&o)<<18|(63&s)<<12|(63&f)<<6|63&c)>65535&&l<1114112&&(u=l)}}null===u?(u=65533,a=1):u>65535&&(u-=65536,r.push(u>>>10&1023|55296),u=56320|1023&u),r.push(u),i+=a}return A(r)}function A(t){var e=t.length;if(e<=J)return String.fromCharCode.apply(String,t);for(var n=\"\",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=J));return n}function S(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function I(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function T(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i=\"\",o=e;o<n;++o)i+=N(t[o]);return i}function P(t,e,n){for(var r=t.slice(e,n),i=\"\",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function B(t,e,n){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>n)throw new RangeError(\"Trying to access beyond buffer length\")}function C(t,e,n,r,o,u){if(!i.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>o||e<u)throw new RangeError('\"value\" argument is out of bounds');if(n+r>t.length)throw new RangeError(\"Index out of range\")}function L(t,e,n,r,i,o){if(n+r>t.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"Index out of range\")}function U(t,e,n,r,i){return e=+e,n>>>=0,i||L(t,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),W.write(t,e,n,r,23,4),n+4}function R(t,e,n,r,i){return e=+e,n>>>=0,i||L(t,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),W.write(t,e,n,r,52,8),n+8}function $(t){if((t=t.trim().replace(G,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}function N(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function M(t,e){e=e||1/0;for(var n,r=t.length,i=null,o=[],u=0;u<r;++u){if((n=t.charCodeAt(u))>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(u+1===r){(e-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function D(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function z(t,e){for(var n,r,i,o=[],u=0;u<t.length&&!((e-=2)<0);++u)r=(n=t.charCodeAt(u))>>8,i=n%256,o.push(i),o.push(r);return o}function F(t){return K.toByteArray($(t))}function Y(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}function q(t){return t instanceof ArrayBuffer||null!=t&&null!=t.constructor&&\"ArrayBuffer\"===t.constructor.name&&\"number\"==typeof t.byteLength}function V(t){return\"function\"==typeof ArrayBuffer.isView&&ArrayBuffer.isView(t)}function Q(t){return t!==t}var K=t(\"base64-js\"),W=t(\"ieee754\");n.Buffer=i,n.SlowBuffer=function(t){return+t!=t&&(t=0),i.alloc(+t)},n.INSPECT_MAX_BYTES=50;var H=2147483647;n.kMaxLength=H,i.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()}catch(t){return!1}}(),i.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),\"undefined\"!=typeof Symbol&&Symbol.species&&i[Symbol.species]===i&&Object.defineProperty(i,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),i.poolSize=8192,i.from=function(t,e,n){return o(t,e,n)},i.prototype.__proto__=Uint8Array.prototype,i.__proto__=Uint8Array,i.alloc=function(t,e,n){return a(t,e,n)},i.allocUnsafe=function(t){return s(t)},i.allocUnsafeSlow=function(t){return s(t)},i.isBuffer=function(t){return null!=t&&!0===t._isBuffer},i.compare=function(t,e){if(!i.isBuffer(t)||!i.isBuffer(e))throw new TypeError(\"Arguments must be Buffers\");if(t===e)return 0;for(var n=t.length,r=e.length,o=0,u=Math.min(n,r);o<u;++o)if(t[o]!==e[o]){n=t[o],r=e[o];break}return n<r?-1:r<n?1:0},i.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},i.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return i.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=i.allocUnsafe(e),o=0;for(n=0;n<t.length;++n){var u=t[n];if(!i.isBuffer(u))throw new TypeError('\"list\" argument must be an Array of Buffers');u.copy(r,o),o+=u.length}return r},i.byteLength=y,i.prototype._isBuffer=!0,i.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var e=0;e<t;e+=2)v(this,e,e+1);return this},i.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var e=0;e<t;e+=4)v(this,e,e+3),v(this,e+1,e+2);return this},i.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var e=0;e<t;e+=8)v(this,e,e+7),v(this,e+1,e+6),v(this,e+2,e+5),v(this,e+3,e+4);return this},i.prototype.toString=function(){var t=this.length;return 0===t?\"\":0===arguments.length?E(this,0,t):d.apply(this,arguments)},i.prototype.equals=function(t){if(!i.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===i.compare(this,t)},i.prototype.inspect=function(){var t=\"\",e=n.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,e).match(/.{2}/g).join(\" \"),this.length>e&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},i.prototype.compare=function(t,e,n,r,o){if(!i.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError(\"out of range index\");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,o>>>=0,this===t)return 0;for(var u=o-r,a=n-e,s=Math.min(u,a),f=this.slice(r,o),c=t.slice(e,n),l=0;l<s;++l)if(f[l]!==c[l]){u=f[l],a=c[l];break}return u<a?-1:a<u?1:0},i.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},i.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},i.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},i.prototype.write=function(t,e,n,r){if(void 0===e)r=\"utf8\",n=this.length,e=0;else if(void 0===n&&\"string\"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r=\"utf8\")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");r||(r=\"utf8\");for(var o=!1;;)switch(r){case\"hex\":return m(this,t,e,n);case\"utf8\":case\"utf-8\":return w(this,t,e,n);case\"ascii\":return _(this,t,e,n);case\"latin1\":case\"binary\":return j(this,t,e,n);case\"base64\":return x(this,t,e,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return O(this,t,e,n);default:if(o)throw new TypeError(\"Unknown encoding: \"+r);r=(\"\"+r).toLowerCase(),o=!0}},i.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var J=4096;i.prototype.slice=function(t,e){var n=this.length;t=~~t,e=void 0===e?n:~~e,t<0?(t+=n)<0&&(t=0):t>n&&(t=n),e<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return r.__proto__=i.prototype,r},i.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return r},i.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t+--e],i=1;e>0&&(i*=256);)r+=this[t+--e]*i;return r},i.prototype.readUInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),this[t]},i.prototype.readUInt16LE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]|this[t+1]<<8},i.prototype.readUInt16BE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]<<8|this[t+1]},i.prototype.readUInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},i.prototype.readUInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},i.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*e)),r},i.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=e,i=1,o=this[t+--r];r>0&&(i*=256);)o+=this[t+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},i.prototype.readInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},i.prototype.readInt16LE=function(t,e){t>>>=0,e||B(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt16BE=function(t,e){t>>>=0,e||B(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},i.prototype.readInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},i.prototype.readFloatLE=function(t,e){return t>>>=0,e||B(t,4,this.length),W.read(this,t,!0,23,4)},i.prototype.readFloatBE=function(t,e){return t>>>=0,e||B(t,4,this.length),W.read(this,t,!1,23,4)},i.prototype.readDoubleLE=function(t,e){return t>>>=0,e||B(t,8,this.length),W.read(this,t,!0,52,8)},i.prototype.readDoubleBE=function(t,e){return t>>>=0,e||B(t,8,this.length),W.read(this,t,!1,52,8)},i.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var i=1,o=0;for(this[e]=255&t;++o<n&&(i*=256);)this[e+o]=t/i&255;return e+n},i.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+n},i.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,1,255,0),this[e]=255&t,e+1},i.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},i.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},i.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},i.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},i.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);C(this,t,e,n,i-1,-i)}var o=0,u=1,a=0;for(this[e]=255&t;++o<n&&(u*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/u>>0)-a&255;return e+n},i.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);C(this,t,e,n,i-1,-i)}var o=n-1,u=1,a=0;for(this[e+o]=255&t;--o>=0&&(u*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/u>>0)-a&255;return e+n},i.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},i.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},i.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},i.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},i.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},i.prototype.writeFloatLE=function(t,e,n){return U(this,t,e,!0,n)},i.prototype.writeFloatBE=function(t,e,n){return U(this,t,e,!1,n)},i.prototype.writeDoubleLE=function(t,e,n){return R(this,t,e,!0,n)},i.prototype.writeDoubleBE=function(t,e,n){return R(this,t,e,!1,n)},i.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(n<0||n>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(r<0)throw new RangeError(\"sourceEnd out of bounds\");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,o=r-n;if(this===t&&n<e&&e<r)for(i=o-1;i>=0;--i)t[i+e]=this[i+n];else if(o<1e3)for(i=0;i<o;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},i.prototype.fill=function(t,e,n,r){if(\"string\"==typeof t){if(\"string\"==typeof e?(r=e,e=0,n=this.length):\"string\"==typeof n&&(r=n,n=this.length),1===t.length){var o=t.charCodeAt(0);o<256&&(t=o)}if(void 0!==r&&\"string\"!=typeof r)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof r&&!i.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r)}else\"number\"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError(\"Out of range index\");if(n<=e)return this;e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0);var u;if(\"number\"==typeof t)for(u=e;u<n;++u)this[u]=t;else{var a=i.isBuffer(t)?t:new i(t,r),s=a.length;for(u=0;u<n-e;++u)this[u+e]=a[u%s]}return this};var G=/[^+/0-9A-Za-z-_]/g},{\"base64-js\":22,ieee754:72}],24:[function(t,e,n){(function(t){var n=function(){\"use strict\";function e(t,e){return null!=e&&t instanceof e}function n(r,s,f,c,l){function p(r,f){if(null===r)return null;if(0===f)return r;var v,g;if(\"object\"!=typeof r)return r;if(e(r,o))v=new o;else if(e(r,u))v=new u;else if(e(r,a))v=new a(function(t,e){r.then(function(e){t(p(e,f-1))},function(t){e(p(t,f-1))})});else if(n.__isArray(r))v=[];else if(n.__isRegExp(r))v=new RegExp(r.source,i(r)),r.lastIndex&&(v.lastIndex=r.lastIndex);else if(n.__isDate(r))v=new Date(r.getTime());else{if(d&&t.isBuffer(r))return v=new t(r.length),r.copy(v),v;e(r,Error)?v=Object.create(r):void 0===c?(g=Object.getPrototypeOf(r),v=Object.create(g)):(v=Object.create(c),g=c)}if(s){var b=h.indexOf(r);if(-1!=b)return y[b];h.push(r),y.push(v)}e(r,o)&&r.forEach(function(t,e){var n=p(e,f-1),r=p(t,f-1);v.set(n,r)}),e(r,u)&&r.forEach(function(t){var e=p(t,f-1);v.add(e)});for(var m in r){var w;g&&(w=Object.getOwnPropertyDescriptor(g,m)),w&&null==w.set||(v[m]=p(r[m],f-1))}if(Object.getOwnPropertySymbols)for(var _=Object.getOwnPropertySymbols(r),m=0;m<_.length;m++){var j=_[m];(!(k=Object.getOwnPropertyDescriptor(r,j))||k.enumerable||l)&&(v[j]=p(r[j],f-1),k.enumerable||Object.defineProperty(v,j,{enumerable:!1}))}if(l)for(var x=Object.getOwnPropertyNames(r),m=0;m<x.length;m++){var O=x[m],k=Object.getOwnPropertyDescriptor(r,O);k&&k.enumerable||(v[O]=p(r[O],f-1),Object.defineProperty(v,O,{enumerable:!1}))}return v}\"object\"==typeof s&&(f=s.depth,c=s.prototype,l=s.includeNonEnumerable,s=s.circular);var h=[],y=[],d=void 0!==t;return void 0===s&&(s=!0),void 0===f&&(f=1/0),p(r,f)}function r(t){return Object.prototype.toString.call(t)}function i(t){var e=\"\";return t.global&&(e+=\"g\"),t.ignoreCase&&(e+=\"i\"),t.multiline&&(e+=\"m\"),e}var o;try{o=Map}catch(t){o=function(){}}var u;try{u=Set}catch(t){u=function(){}}var a;try{a=Promise}catch(t){a=function(){}}return n.clonePrototype=function(t){if(null===t)return null;var e=function(){};return e.prototype=t,new e},n.__objToStr=r,n.__isDate=function(t){return\"object\"==typeof t&&\"[object Date]\"===r(t)},n.__isArray=function(t){return\"object\"==typeof t&&\"[object Array]\"===r(t)},n.__isRegExp=function(t){return\"object\"==typeof t&&\"[object RegExp]\"===r(t)},n.__getRegExpFlags=i,n}();\"object\"==typeof e&&e.exports&&(e.exports=n)}).call(this,t(\"buffer\").Buffer)},{buffer:23}],25:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/assign\"),i=t(\"es5-ext/object/normalize-options\"),o=t(\"es5-ext/object/is-callable\"),u=t(\"es5-ext/string/#/contains\");(e.exports=function(t,e){var n,o,a,s,f;return arguments.length<2||\"string\"!=typeof t?(s=e,e=t,t=null):s=arguments[2],null==t?(n=a=!0,o=!1):(n=u.call(t,\"c\"),o=u.call(t,\"e\"),a=u.call(t,\"w\")),f={value:e,configurable:n,enumerable:o,writable:a},s?r(i(s),f):f}).gs=function(t,e,n){var a,s,f,c;return\"string\"!=typeof t?(f=n,n=e,e=t,t=null):f=arguments[3],null==e?e=void 0:o(e)?null==n?n=void 0:o(n)||(f=n,n=void 0):(f=e,e=n=void 0),null==t?(a=!0,s=!1):(a=u.call(t,\"c\"),s=u.call(t,\"e\")),c={get:e,set:n,configurable:a,enumerable:s},f?r(i(f),c):c}},{\"es5-ext/object/assign\":46,\"es5-ext/object/is-callable\":50,\"es5-ext/object/normalize-options\":58,\"es5-ext/string/#/contains\":61}],26:[function(t,e,n){\"use strict\";function r(t){return!!t&&\"object\"==typeof t}function i(t){var e=Object.prototype.toString.call(t);return\"[object RegExp]\"!==e&&\"[object Date]\"!==e}function o(t){return Array.isArray(t)?[]:{}}function u(t,e){return e&&!0===e.clone&&c(t)?f(o(t),t,e):t}function a(t,e,n){var r=t.slice();return e.forEach(function(e,i){void 0===r[i]?r[i]=u(e,n):c(e)?r[i]=f(t[i],e,n):-1===t.indexOf(e)&&r.push(u(e,n))}),r}function s(t,e,n){var r={};return c(t)&&Object.keys(t).forEach(function(e){r[e]=u(t[e],n)}),Object.keys(e).forEach(function(i){c(e[i])&&t[i]?r[i]=f(t[i],e[i],n):r[i]=u(e[i],n)}),r}function f(t,e,n){var r=Array.isArray(e),i=Array.isArray(t),o=n||{arrayMerge:a};return r===i?r?(o.arrayMerge||a)(t,e,n):s(t,e,n):u(e,n)}var c=function(t){return r(t)&&i(t)};f.all=function(t,e){if(!Array.isArray(t)||t.length<2)throw new Error(\"first argument should be an array with at least two elements\");return t.reduce(function(t,n){return f(t,n,e)})};var l=f;e.exports=l},{}],27:[function(t,e,n){\"use strict\";var r=t(\"../../number/is-nan\"),i=t(\"../../number/to-pos-integer\"),o=t(\"../../object/valid-value\"),u=Array.prototype.indexOf,a=Object.prototype.hasOwnProperty,s=Math.abs,f=Math.floor;e.exports=function(t){var e,n,c,l;if(!r(t))return u.apply(this,arguments);for(n=i(o(this).length),c=arguments[1],e=c=isNaN(c)?0:c>=0?f(c):i(this.length)-f(s(c));e<n;++e)if(a.call(this,e)&&(l=this[e],r(l)))return e;return-1}},{\"../../number/is-nan\":40,\"../../number/to-pos-integer\":44,\"../../object/valid-value\":60}],28:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Array.from:t(\"./shim\")},{\"./is-implemented\":29,\"./shim\":30}],29:[function(t,e,n){\"use strict\";e.exports=function(){var t,e,n=Array.from;return\"function\"==typeof n&&(t=[\"raz\",\"dwa\"],e=n(t),Boolean(e&&e!==t&&\"dwa\"===e[1]))}},{}],30:[function(t,e,n){\"use strict\";var r=t(\"es6-symbol\").iterator,i=t(\"../../function/is-arguments\"),o=t(\"../../function/is-function\"),u=t(\"../../number/to-pos-integer\"),a=t(\"../../object/valid-callable\"),s=t(\"../../object/valid-value\"),f=t(\"../../object/is-value\"),c=t(\"../../string/is-string\"),l=Array.isArray,p=Function.prototype.call,h={configurable:!0,enumerable:!0,writable:!0,value:null},y=Object.defineProperty;e.exports=function(t){var e,n,d,v,g,b,m,w,_,j,x=arguments[1],O=arguments[2];if(t=Object(s(t)),f(x)&&a(x),this&&this!==Array&&o(this))e=this;else{if(!x){if(i(t))return 1!==(g=t.length)?Array.apply(null,t):(v=new Array(1),v[0]=t[0],v);if(l(t)){for(v=new Array(g=t.length),n=0;n<g;++n)v[n]=t[n];return v}}v=[]}if(!l(t))if(void 0!==(_=t[r])){for(m=a(_).call(t),e&&(v=new e),w=m.next(),n=0;!w.done;)j=x?p.call(x,O,w.value,n):w.value,e?(h.value=j,y(v,n,h)):v[n]=j,w=m.next(),++n;g=n}else if(c(t)){for(g=t.length,e&&(v=new e),n=0,d=0;n<g;++n)j=t[n],n+1<g&&(b=j.charCodeAt(0))>=55296&&b<=56319&&(j+=t[++n]),j=x?p.call(x,O,j,d):j,e?(h.value=j,y(v,d,h)):v[d]=j,++d;g=d}if(void 0===g)for(g=u(t.length),e&&(v=new e(g)),n=0;n<g;++n)j=x?p.call(x,O,t[n],n):t[n],e?(h.value=j,y(v,n,h)):v[n]=j;return e&&(h.value=null,v.length=g),v}},{\"../../function/is-arguments\":34,\"../../function/is-function\":35,\"../../number/to-pos-integer\":44,\"../../object/is-value\":52,\"../../object/valid-callable\":59,\"../../object/valid-value\":60,\"../../string/is-string\":64,\"es6-symbol\":65}],31:[function(t,e,n){\"use strict\";var r=t(\"./from\"),i=Array.isArray;e.exports=function(t){return i(t)?t:r(t)}},{\"./from\":28}],32:[function(t,e,n){\"use strict\";var r=t(\"../object/assign\"),i=t(\"../object/is-object\"),o=t(\"../object/is-value\"),u=Error.captureStackTrace;n=e.exports=function(t){var e=new Error(t),a=arguments[1],s=arguments[2];return o(s)||i(a)&&(s=a,a=null),o(s)&&r(e,s),o(a)&&(e.code=a),u&&u(e,n),e}},{\"../object/assign\":46,\"../object/is-object\":51,\"../object/is-value\":52}],33:[function(t,e,n){\"use strict\";var r,i,o,u,a=t(\"../number/to-pos-integer\"),s=function(t,e){return e};try{Object.defineProperty(s,\"length\",{configurable:!0,writable:!1,enumerable:!1,value:1})}catch(t){}1===s.length?(r={configurable:!0,writable:!1,enumerable:!1},i=Object.defineProperty,e.exports=function(t,e){return e=a(e),t.length===e?t:(r.value=e,i(t,\"length\",r))}):(u=t(\"../object/mixin\"),o=function(){var t=[];return function(e){var n,r=0;if(t[e])return t[e];for(n=[];e--;)n.push(\"a\"+(++r).toString(36));return new Function(\"fn\",\"return function (\"+n.join(\", \")+\") { return fn.apply(this, arguments); };\")}}(),e.exports=function(t,e){var n;if(e=a(e),t.length===e)return t;n=o(e)(t);try{u(n,t)}catch(t){}return n})},{\"../number/to-pos-integer\":44,\"../object/mixin\":57}],34:[function(t,e,n){\"use strict\";var r=Object.prototype.toString,i=r.call(function(){return arguments}());e.exports=function(t){return r.call(t)===i}},{}],35:[function(t,e,n){\"use strict\";var r=Object.prototype.toString,i=r.call(t(\"./noop\"));e.exports=function(t){return\"function\"==typeof t&&r.call(t)===i}},{\"./noop\":36}],36:[function(t,e,n){\"use strict\";e.exports=function(){}},{}],37:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Math.sign:t(\"./shim\")},{\"./is-implemented\":38,\"./shim\":39}],38:[function(t,e,n){\"use strict\";e.exports=function(){var t=Math.sign;return\"function\"==typeof t&&(1===t(10)&&-1===t(-20))}},{}],39:[function(t,e,n){\"use strict\";e.exports=function(t){return t=Number(t),isNaN(t)||0===t?t:t>0?1:-1}},{}],40:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Number.isNaN:t(\"./shim\")},{\"./is-implemented\":41,\"./shim\":42}],41:[function(t,e,n){\"use strict\";e.exports=function(){var t=Number.isNaN;return\"function\"==typeof t&&(!t({})&&t(NaN)&&!t(34))}},{}],42:[function(t,e,n){\"use strict\";e.exports=function(t){return t!==t}},{}],43:[function(t,e,n){\"use strict\";var r=t(\"../math/sign\"),i=Math.abs,o=Math.floor;e.exports=function(t){return isNaN(t)?0:0!==(t=Number(t))&&isFinite(t)?r(t)*o(i(t)):t}},{\"../math/sign\":37}],44:[function(t,e,n){\"use strict\";var r=t(\"./to-integer\"),i=Math.max;e.exports=function(t){return i(0,r(t))}},{\"./to-integer\":43}],45:[function(t,e,n){\"use strict\";var r=t(\"./valid-callable\"),i=t(\"./valid-value\"),o=Function.prototype.bind,u=Function.prototype.call,a=Object.keys,s=Object.prototype.propertyIsEnumerable;e.exports=function(t,e){return function(n,f){var c,l=arguments[2],p=arguments[3];return n=Object(i(n)),r(f),c=a(n),p&&c.sort(\"function\"==typeof p?o.call(p,n):void 0),\"function\"!=typeof t&&(t=c[t]),u.call(t,c,function(t,r){return s.call(n,t)?u.call(f,l,n[t],t,n,r):e})}}},{\"./valid-callable\":59,\"./valid-value\":60}],46:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Object.assign:t(\"./shim\")},{\"./is-implemented\":47,\"./shim\":48}],47:[function(t,e,n){\"use strict\";e.exports=function(){var t,e=Object.assign;return\"function\"==typeof e&&(t={foo:\"raz\"},e(t,{bar:\"dwa\"},{trzy:\"trzy\"}),t.foo+t.bar+t.trzy===\"razdwatrzy\")}},{}],48:[function(t,e,n){\"use strict\";var r=t(\"../keys\"),i=t(\"../valid-value\"),o=Math.max;e.exports=function(t,e){var n,u,a,s=o(arguments.length,2);for(t=Object(i(t)),a=function(r){try{t[r]=e[r]}catch(t){n||(n=t)}},u=1;u<s;++u)e=arguments[u],r(e).forEach(a);if(void 0!==n)throw n;return t}},{\"../keys\":53,\"../valid-value\":60}],49:[function(t,e,n){\"use strict\";e.exports=t(\"./_iterate\")(\"forEach\")},{\"./_iterate\":45}],50:[function(t,e,n){\"use strict\";e.exports=function(t){return\"function\"==typeof t}},{}],51:[function(t,e,n){\"use strict\";var r=t(\"./is-value\"),i={function:!0,object:!0};e.exports=function(t){return r(t)&&i[typeof t]||!1}},{\"./is-value\":52}],52:[function(t,e,n){\"use strict\";var r=t(\"../function/noop\")();e.exports=function(t){return t!==r&&null!==t}},{\"../function/noop\":36}],53:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Object.keys:t(\"./shim\")},{\"./is-implemented\":54,\"./shim\":55}],54:[function(t,e,n){\"use strict\";e.exports=function(){try{return Object.keys(\"primitive\"),!0}catch(t){return!1}}},{}],55:[function(t,e,n){\"use strict\";var r=t(\"../is-value\"),i=Object.keys;e.exports=function(t){return i(r(t)?Object(t):t)}},{\"../is-value\":52}],56:[function(t,e,n){\"use strict\";var r=t(\"./valid-callable\"),i=t(\"./for-each\"),o=Function.prototype.call;e.exports=function(t,e){var n={},u=arguments[2];return r(e),i(t,function(t,r,i,a){n[r]=o.call(e,u,t,r,i,a)}),n}},{\"./for-each\":49,\"./valid-callable\":59}],57:[function(t,e,n){\"use strict\";var r=t(\"./valid-value\"),i=Object.defineProperty,o=Object.getOwnPropertyDescriptor,u=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols;e.exports=function(t,e){var n,s=Object(r(e));if(t=Object(r(t)),u(s).forEach(function(r){try{i(t,r,o(e,r))}catch(t){n=t}}),\"function\"==typeof a&&a(s).forEach(function(r){try{i(t,r,o(e,r))}catch(t){n=t}}),void 0!==n)throw n;return t}},{\"./valid-value\":60}],58:[function(t,e,n){\"use strict\";var r=t(\"./is-value\"),i=Array.prototype.forEach,o=Object.create,u=function(t,e){var n;for(n in t)e[n]=t[n]};e.exports=function(t){var e=o(null);return i.call(arguments,function(t){r(t)&&u(Object(t),e)}),e}},{\"./is-value\":52}],59:[function(t,e,n){\"use strict\";e.exports=function(t){if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");return t}},{}],60:[function(t,e,n){\"use strict\";var r=t(\"./is-value\");e.exports=function(t){if(!r(t))throw new TypeError(\"Cannot use null or undefined\");return t}},{\"./is-value\":52}],61:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?String.prototype.contains:t(\"./shim\")},{\"./is-implemented\":62,\"./shim\":63}],62:[function(t,e,n){\"use strict\";var r=\"razdwatrzy\";e.exports=function(){return\"function\"==typeof r.contains&&(!0===r.contains(\"dwa\")&&!1===r.contains(\"foo\"))}},{}],63:[function(t,e,n){\"use strict\";var r=String.prototype.indexOf;e.exports=function(t){return r.call(this,t,arguments[1])>-1}},{}],64:[function(t,e,n){\"use strict\";var r=Object.prototype.toString,i=r.call(\"\");e.exports=function(t){return\"string\"==typeof t||t&&\"object\"==typeof t&&(t instanceof String||r.call(t)===i)||!1}},{}],65:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Symbol:t(\"./polyfill\")},{\"./is-implemented\":66,\"./polyfill\":68}],66:[function(t,e,n){\"use strict\";var r={object:!0,symbol:!0};e.exports=function(){var t;if(\"function\"!=typeof Symbol)return!1;t=Symbol(\"test symbol\");try{String(t)}catch(t){return!1}return!!r[typeof Symbol.iterator]&&(!!r[typeof Symbol.toPrimitive]&&!!r[typeof Symbol.toStringTag])}},{}],67:[function(t,e,n){\"use strict\";e.exports=function(t){return!!t&&(\"symbol\"==typeof t||!!t.constructor&&(\"Symbol\"===t.constructor.name&&\"Symbol\"===t[t.constructor.toStringTag]))}},{}],68:[function(t,e,n){\"use strict\";var r,i,o,u,a=t(\"d\"),s=t(\"./validate-symbol\"),f=Object.create,c=Object.defineProperties,l=Object.defineProperty,p=Object.prototype,h=f(null);if(\"function\"==typeof Symbol){r=Symbol;try{String(r()),u=!0}catch(t){}}var y=function(){var t=f(null);return function(e){for(var n,r,i=0;t[e+(i||\"\")];)++i;return e+=i||\"\",t[e]=!0,n=\"@@\"+e,l(p,n,a.gs(null,function(t){r||(r=!0,l(this,n,a(t)),r=!1)})),n}}();o=function(t){if(this instanceof o)throw new TypeError(\"Symbol is not a constructor\");return i(t)},e.exports=i=function t(e){var n;if(this instanceof t)throw new TypeError(\"Symbol is not a constructor\");return u?r(e):(n=f(o.prototype),e=void 0===e?\"\":String(e),c(n,{__description__:a(\"\",e),__name__:a(\"\",y(e))}))},c(i,{for:a(function(t){return h[t]?h[t]:h[t]=i(String(t))}),keyFor:a(function(t){var e;s(t);for(e in h)if(h[e]===t)return e}),hasInstance:a(\"\",r&&r.hasInstance||i(\"hasInstance\")),isConcatSpreadable:a(\"\",r&&r.isConcatSpreadable||i(\"isConcatSpreadable\")),iterator:a(\"\",r&&r.iterator||i(\"iterator\")),match:a(\"\",r&&r.match||i(\"match\")),replace:a(\"\",r&&r.replace||i(\"replace\")),search:a(\"\",r&&r.search||i(\"search\")),species:a(\"\",r&&r.species||i(\"species\")),split:a(\"\",r&&r.split||i(\"split\")),toPrimitive:a(\"\",r&&r.toPrimitive||i(\"toPrimitive\")),toStringTag:a(\"\",r&&r.toStringTag||i(\"toStringTag\")),unscopables:a(\"\",r&&r.unscopables||i(\"unscopables\"))}),c(o.prototype,{constructor:a(i),toString:a(\"\",function(){return this.__name__})}),c(i.prototype,{toString:a(function(){return\"Symbol (\"+s(this).__description__+\")\"}),valueOf:a(function(){return s(this)})}),l(i.prototype,i.toPrimitive,a(\"\",function(){var t=s(this);return\"symbol\"==typeof t?t:t.toString()})),l(i.prototype,i.toStringTag,a(\"c\",\"Symbol\")),l(o.prototype,i.toStringTag,a(\"c\",i.prototype[i.toStringTag])),l(o.prototype,i.toPrimitive,a(\"c\",i.prototype[i.toPrimitive]))},{\"./validate-symbol\":69,d:25}],69:[function(t,e,n){\"use strict\";var r=t(\"./is-symbol\");e.exports=function(t){if(!r(t))throw new TypeError(t+\" is not a symbol\");return t}},{\"./is-symbol\":67}],70:[function(t,e,n){\"use strict\";var r,i,o,u,a,s,f,c=t(\"d\"),l=t(\"es5-ext/object/valid-callable\"),p=Function.prototype.apply,h=Function.prototype.call,y=Object.create,d=Object.defineProperty,v=Object.defineProperties,g=Object.prototype.hasOwnProperty,b={configurable:!0,enumerable:!1,writable:!0};a={on:r=function(t,e){var n;return l(e),g.call(this,\"__ee__\")?n=this.__ee__:(n=b.value=y(null),d(this,\"__ee__\",b),b.value=null),n[t]?\"object\"==typeof n[t]?n[t].push(e):n[t]=[n[t],e]:n[t]=e,this},once:i=function(t,e){var n,i;return l(e),i=this,r.call(this,t,n=function(){o.call(i,t,n),p.call(e,this,arguments)}),n.__eeOnceListener__=e,this},off:o=function(t,e){var n,r,i,o;if(l(e),!g.call(this,\"__ee__\"))return this;if(!(n=this.__ee__)[t])return this;if(\"object\"==typeof(r=n[t]))for(o=0;i=r[o];++o)i!==e&&i.__eeOnceListener__!==e||(2===r.length?n[t]=r[o?0:1]:r.splice(o,1));else r!==e&&r.__eeOnceListener__!==e||delete n[t];return this},emit:u=function(t){var e,n,r,i,o;if(g.call(this,\"__ee__\")&&(i=this.__ee__[t]))if(\"object\"==typeof i){for(n=arguments.length,o=new Array(n-1),e=1;e<n;++e)o[e-1]=arguments[e];for(i=i.slice(),e=0;r=i[e];++e)p.call(r,this,o)}else switch(arguments.length){case 1:h.call(i,this);break;case 2:h.call(i,this,arguments[1]);break;case 3:h.call(i,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,o=new Array(n-1),e=1;e<n;++e)o[e-1]=arguments[e];p.call(i,this,o)}}},s={on:c(r),once:c(i),off:c(o),emit:c(u)},f=v({},s),e.exports=n=function(t){return null==t?y(f):v(Object(t),s)},n.methods=a},{d:25,\"es5-ext/object/valid-callable\":59}],71:[function(t,e,n){function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(t){return\"function\"==typeof t}function o(t){return\"number\"==typeof t}function u(t){return\"object\"==typeof t&&null!==t}function a(t){return void 0===t}e.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(t){if(!o(t)||t<0||isNaN(t))throw TypeError(\"n must be a positive number\");return this._maxListeners=t,this},r.prototype.emit=function(t){var e,n,r,o,s,f;if(this._events||(this._events={}),\"error\"===t&&(!this._events.error||u(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var c=new Error('Uncaught, unspecified \"error\" event. ('+e+\")\");throw c.context=e,c}if(n=this._events[t],a(n))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:o=Array.prototype.slice.call(arguments,1),n.apply(this,o)}else if(u(n))for(o=Array.prototype.slice.call(arguments,1),r=(f=n.slice()).length,s=0;s<r;s++)f[s].apply(this,o);return!0},r.prototype.addListener=function(t,e){var n;if(!i(e))throw TypeError(\"listener must be a function\");return this._events||(this._events={}),this._events.newListener&&this.emit(\"newListener\",t,i(e.listener)?e.listener:e),this._events[t]?u(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,u(this._events[t])&&!this._events[t].warned&&(n=a(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&n>0&&this._events[t].length>n&&(this._events[t].warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\",this._events[t].length),\"function\"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(t,e){function n(){this.removeListener(t,n),r||(r=!0,e.apply(this,arguments))}if(!i(e))throw TypeError(\"listener must be a function\");var r=!1;return n.listener=e,this.on(t,n),this},r.prototype.removeListener=function(t,e){var n,r,o,a;if(!i(e))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[t])return this;if(n=this._events[t],o=n.length,r=-1,n===e||i(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit(\"removeListener\",t,e);else if(u(n)){for(a=o;a-- >0;)if(n[a]===e||n[a].listener&&n[a].listener===e){r=a;break}if(r<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(r,1),this._events.removeListener&&this.emit(\"removeListener\",t,e)}return this},r.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)\"removeListener\"!==e&&this.removeAllListeners(e);return this.removeAllListeners(\"removeListener\"),this._events={},this}if(n=this._events[t],i(n))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},r.prototype.listeners=function(t){return this._events&&this._events[t]?i(this._events[t])?[this._events[t]]:this._events[t].slice():[]},r.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(i(e))return 1;if(e)return e.length}return 0},r.listenerCount=function(t,e){return t.listenerCount(e)}},{}],72:[function(t,e,n){n.read=function(t,e,n,r,i){var o,u,a=8*i-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?i-1:0,p=n?-1:1,h=t[e+l];for(l+=p,o=h&(1<<-c)-1,h>>=-c,c+=a;c>0;o=256*o+t[e+l],l+=p,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=r;c>0;u=256*u+t[e+l],l+=p,c-=8);if(0===o)o=1-f;else{if(o===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),o-=f}return(h?-1:1)*u*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var u,a,s,f=8*o-i-1,c=(1<<f)-1,l=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,y=r?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,u=c):(u=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-u))<1&&(u--,s*=2),(e+=u+l>=1?p/s:p*Math.pow(2,1-l))*s>=2&&(u++,s/=2),u+l>=c?(a=0,u=c):u+l>=1?(a=(e*s-1)*Math.pow(2,i),u+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),u=0));i>=8;t[n+h]=255&a,h+=y,a/=256,i-=8);for(u=u<<i|a,f+=i;f>0;t[n+h]=255&u,h+=y,u/=256,f-=8);t[n+h-y]|=128*d}},{}],73:[function(t,e,n){e.exports=function(t){return!!t&&(\"object\"==typeof t||\"function\"==typeof t)&&\"function\"==typeof t.then}},{}],74:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\"),i=Object.create,o=Object.prototype.hasOwnProperty;e.exports=function(t){var e,n=0,u=1,a=i(null),s=i(null),f=0;return t=r(t),{hit:function(r){var i=s[r],c=++f;if(a[c]=r,s[r]=c,!i){if(++n<=t)return;return r=a[u],e(r),r}if(delete a[i],u===i)for(;!o.call(a,++u);)continue},delete:e=function(t){var e=s[t];if(e&&(delete a[e],delete s[t],--n,u===e)){if(!n)return f=0,void(u=1);for(;!o.call(a,++u);)continue}},clear:function(){n=0,u=1,a=i(null),s=i(null),f=0}}}},{\"es5-ext/number/to-pos-integer\":44}],75:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/from\"),i=t(\"es5-ext/object/map\"),o=t(\"es5-ext/object/mixin\"),u=t(\"es5-ext/function/_define-length\"),a=t(\"next-tick\"),s=Array.prototype.slice,f=Function.prototype.apply,c=Object.create,l=Object.prototype.hasOwnProperty;t(\"../lib/registered-extensions\").async=function(t,e){var n,p,h,y=c(null),d=c(null),v=e.memoized,g=e.original;e.memoized=u(function(t){var e=arguments,r=e[e.length-1];return\"function\"==typeof r&&(n=r,e=s.call(e,0,-1)),v.apply(p=this,h=e)},v);try{o(e.memoized,v)}catch(t){}e.on(\"get\",function(t){var r,i,o;if(n){if(y[t])return\"function\"==typeof y[t]?y[t]=[y[t],n]:y[t].push(n),void(n=null);r=n,i=p,o=h,n=p=h=null,a(function(){var u;l.call(d,t)?(u=d[t],e.emit(\"getasync\",t,o,i),f.call(r,u.context,u.args)):(n=r,p=i,h=o,v.apply(i,o))})}}),e.original=function(){var t,i,o,u;return n?(t=r(arguments),i=function t(n){var i,o,s=t.id;if(null!=s){if(delete t.id,i=y[s],delete y[s],i)return o=r(arguments),e.has(s)&&(n?e.delete(s):(d[s]={context:this,args:o},e.emit(\"setasync\",s,\"function\"==typeof i?1:i.length))),\"function\"==typeof i?u=f.call(i,this,o):i.forEach(function(t){u=f.call(t,this,o)},this),u}else a(f.bind(t,this,arguments))},o=n,n=p=h=null,t.push(i),u=f.call(g,this,t),i.cb=o,n=i,u):f.call(g,this,arguments)},e.on(\"set\",function(t){n?(y[t]?\"function\"==typeof y[t]?y[t]=[y[t],n.cb]:y[t].push(n.cb):y[t]=n.cb,delete n.cb,n.id=t,n=null):e.delete(t)}),e.on(\"delete\",function(t){var n;l.call(y,t)||d[t]&&(n=d[t],delete d[t],e.emit(\"deleteasync\",t,s.call(n.args,1)))}),e.on(\"clear\",function(){var t=d;d=c(null),e.emit(\"clearasync\",i(t,function(t){return s.call(t.args,1)}))})}},{\"../lib/registered-extensions\":83,\"es5-ext/array/from\":28,\"es5-ext/function/_define-length\":33,\"es5-ext/object/map\":56,\"es5-ext/object/mixin\":57,\"next-tick\":93}],76:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/valid-callable\"),i=t(\"es5-ext/object/for-each\"),o=t(\"../lib/registered-extensions\"),u=Function.prototype.apply;o.dispose=function(t,e,n){var a;if(r(t),n.async&&o.async||n.promise&&o.promise)return e.on(\"deleteasync\",a=function(e,n){u.call(t,null,n)}),void e.on(\"clearasync\",function(t){i(t,function(t,e){a(e,t)})});e.on(\"delete\",a=function(e,n){t(n)}),e.on(\"clear\",function(t){i(t,function(t,e){a(e,t)})})}},{\"../lib/registered-extensions\":83,\"es5-ext/object/for-each\":49,\"es5-ext/object/valid-callable\":59}],77:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/from\"),i=t(\"es5-ext/object/for-each\"),o=t(\"next-tick\"),u=t(\"is-promise\"),a=t(\"timers-ext/valid-timeout\"),s=t(\"../lib/registered-extensions\"),f=Function.prototype,c=Math.max,l=Math.min,p=Object.create;s.maxAge=function(t,e,n){var h,y,d,v;(t=a(t))&&(h=p(null),y=n.async&&s.async||n.promise&&s.promise?\"async\":\"\",e.on(\"set\"+y,function(n){h[n]=setTimeout(function(){e.delete(n)},t),v&&(v[n]&&\"nextTick\"!==v[n]&&clearTimeout(v[n]),v[n]=setTimeout(function(){delete v[n]},d))}),e.on(\"delete\"+y,function(t){clearTimeout(h[t]),delete h[t],v&&(\"nextTick\"!==v[t]&&clearTimeout(v[t]),delete v[t])}),n.preFetch&&(d=!0===n.preFetch||isNaN(n.preFetch)?.333:c(l(Number(n.preFetch),1),0))&&(v={},d=(1-d)*t,e.on(\"get\"+y,function(t,i,a){v[t]||(v[t]=\"nextTick\",o(function(){var o;\"nextTick\"===v[t]&&(delete v[t],e.delete(t),n.async&&(i=r(i)).push(f),o=e.memoized.apply(a,i),n.promise&&u(o)&&(\"function\"==typeof o.done?o.done(f,f):o.then(f,f)))}))})),e.on(\"clear\"+y,function(){i(h,function(t){clearTimeout(t)}),h={},v&&(i(v,function(t){\"nextTick\"!==t&&clearTimeout(t)}),v={})}))}},{\"../lib/registered-extensions\":83,\"es5-ext/array/from\":28,\"es5-ext/object/for-each\":49,\"is-promise\":73,\"next-tick\":93,\"timers-ext/valid-timeout\":98}],78:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\"),i=t(\"lru-queue\"),o=t(\"../lib/registered-extensions\");o.max=function(t,e,n){var u,a,s;(t=r(t))&&(a=i(t),u=n.async&&o.async||n.promise&&o.promise?\"async\":\"\",e.on(\"set\"+u,s=function(t){void 0!==(t=a.hit(t))&&e.delete(t)}),e.on(\"get\"+u,s),e.on(\"delete\"+u,a.delete),e.on(\"clear\"+u,a.clear))}},{\"../lib/registered-extensions\":83,\"es5-ext/number/to-pos-integer\":44,\"lru-queue\":74}],79:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/map\"),i=t(\"is-promise\"),o=t(\"next-tick\"),u=Object.create,a=Object.prototype.hasOwnProperty;t(\"../lib/registered-extensions\").promise=function(t,e){var n=u(null),s=u(null),f=u(null);e.on(\"set\",function(r,u,a){var c=!1;if(!i(a))return s[r]=a,void e.emit(\"setasync\",r,1);n[r]=1,f[r]=a;var l=function(t){var i=n[r];if(c)throw new Error(\"Memoizee error: Promise resolved with both failure and success, this can be result of unordered done & finally resolution.\\nInstead of `promise: true` consider configuring memoization via `promise: 'then'` or `promise: 'done'\");i&&(delete n[r],s[r]=t,e.emit(\"setasync\",r,i))},p=function(){c=!0,n[r]&&(delete n[r],delete f[r],e.delete(r))};\"then\"!==t&&\"function\"==typeof a.done?\"done\"!==t&&\"function\"==typeof a.finally?(a.done(l),a.finally(p)):a.done(l,p):a.then(function(t){o(l.bind(this,t))},function(){o(p)})}),e.on(\"get\",function(t,r,u){var a;if(n[t])++n[t];else{a=f[t];var s=function(){e.emit(\"getasync\",t,r,u)};i(a)?\"function\"==typeof a.done?a.done(s):a.then(function(){o(s)}):s()}}),e.on(\"delete\",function(t){if(delete f[t],n[t])delete n[t];else if(a.call(s,t)){var r=s[t];delete s[t],e.emit(\"deleteasync\",t,[r])}}),e.on(\"clear\",function(){var t=s;s=u(null),n=u(null),f=u(null),e.emit(\"clearasync\",r(t,function(t){return[t]}))})}},{\"../lib/registered-extensions\":83,\"es5-ext/object/map\":56,\"is-promise\":73,\"next-tick\":93}],80:[function(t,e,n){\"use strict\";var r=t(\"d\"),i=t(\"../lib/registered-extensions\"),o=Object.create,u=Object.defineProperties;i.refCounter=function(t,e,n){var a,s;a=o(null),s=n.async&&i.async||n.promise&&i.promise?\"async\":\"\",e.on(\"set\"+s,function(t,e){a[t]=e||1}),e.on(\"get\"+s,function(t){++a[t]}),e.on(\"delete\"+s,function(t){delete a[t]}),e.on(\"clear\"+s,function(){a={}}),u(e.memoized,{deleteRef:r(function(){var t=e.get(arguments);return null===t?null:a[t]?!--a[t]&&(e.delete(t),!0):null}),getRefCount:r(function(){var t=e.get(arguments);return null===t?0:a[t]?a[t]:0})})}},{\"../lib/registered-extensions\":83,d:25}],81:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/normalize-options\"),i=t(\"./lib/resolve-length\"),o=t(\"./plain\");e.exports=function(e){var n,u=r(arguments[1]);return u.normalizer||0!==(n=u.length=i(u.length,e.length,u.async))&&(u.primitive?!1===n?u.normalizer=t(\"./normalizers/primitive\"):n>1&&(u.normalizer=t(\"./normalizers/get-primitive-fixed\")(n)):u.normalizer=!1===n?t(\"./normalizers/get\")():1===n?t(\"./normalizers/get-1\")():t(\"./normalizers/get-fixed\")(n)),u.async&&t(\"./ext/async\"),u.promise&&t(\"./ext/promise\"),u.dispose&&t(\"./ext/dispose\"),u.maxAge&&t(\"./ext/max-age\"),u.max&&t(\"./ext/max\"),u.refCounter&&t(\"./ext/ref-counter\"),o(e,u)}},{\"./ext/async\":75,\"./ext/dispose\":76,\"./ext/max\":78,\"./ext/max-age\":77,\"./ext/promise\":79,\"./ext/ref-counter\":80,\"./lib/resolve-length\":84,\"./normalizers/get\":90,\"./normalizers/get-1\":87,\"./normalizers/get-fixed\":88,\"./normalizers/get-primitive-fixed\":89,\"./normalizers/primitive\":91,\"./plain\":92,\"es5-ext/object/normalize-options\":58}],82:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/error/custom\"),i=t(\"es5-ext/function/_define-length\"),o=t(\"d\"),u=t(\"event-emitter\").methods,a=t(\"./resolve-resolve\"),s=t(\"./resolve-normalize\"),f=Function.prototype.apply,c=Function.prototype.call,l=Object.create,p=Object.prototype.hasOwnProperty,h=Object.defineProperties,y=u.on,d=u.emit;e.exports=function(t,e,n){var u,v,g,b,m,w,_,j,x,O,k,E,A,S,I,T=l(null);return v=!1!==e?e:isNaN(t.length)?1:t.length,n.normalizer&&(O=s(n.normalizer),g=O.get,b=O.set,m=O.delete,w=O.clear),null!=n.resolvers&&(I=a(n.resolvers)),S=g?i(function(e){var n,i,o=arguments;if(I&&(o=I(o)),null!==(n=g(o))&&p.call(T,n))return k&&u.emit(\"get\",n,o,this),T[n];if(i=1===o.length?c.call(t,this,o[0]):f.call(t,this,o),null===n){if(null!==(n=g(o)))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");n=b(o)}else if(p.call(T,n))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return T[n]=i,E&&u.emit(\"set\",n,null,i),i},v):0===e?function(){var e;if(p.call(T,\"data\"))return k&&u.emit(\"get\",\"data\",arguments,this),T.data;if(e=arguments.length?f.call(t,this,arguments):c.call(t,this),p.call(T,\"data\"))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return T.data=e,E&&u.emit(\"set\",\"data\",null,e),e}:function(e){var n,i,o=arguments;if(I&&(o=I(arguments)),i=String(o[0]),p.call(T,i))return k&&u.emit(\"get\",i,o,this),T[i];if(n=1===o.length?c.call(t,this,o[0]):f.call(t,this,o),p.call(T,i))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return T[i]=n,E&&u.emit(\"set\",i,null,n),n},u={original:t,memoized:S,get:function(t){return I&&(t=I(t)),g?g(t):String(t[0])},has:function(t){return p.call(T,t)},delete:function(t){var e;p.call(T,t)&&(m&&m(t),e=T[t],delete T[t],A&&u.emit(\"delete\",t,e))},clear:function(){var t=T;w&&w(),T=l(null),u.emit(\"clear\",t)},on:function(t,e){return\"get\"===t?k=!0:\"set\"===t?E=!0:\"delete\"===t&&(A=!0),y.call(this,t,e)},emit:d,updateEnv:function(){t=u.original}},_=g?i(function(t){var e,n=arguments;I&&(n=I(n)),null!==(e=g(n))&&u.delete(e)},v):0===e?function(){return u.delete(\"data\")}:function(t){return I&&(t=I(arguments)[0]),u.delete(t)},j=i(function(){var t,e=arguments;return I&&(e=I(e)),t=g(e),T[t]}),x=i(function(){var t,e=arguments;return I&&(e=I(e)),null!==(t=g(e))&&u.has(t)}),h(S,{__memoized__:o(!0),delete:o(_),clear:o(u.clear),_get:o(j),_has:o(x)}),u}},{\"./resolve-normalize\":85,\"./resolve-resolve\":86,d:25,\"es5-ext/error/custom\":32,\"es5-ext/function/_define-length\":33,\"event-emitter\":70}],83:[function(t,e,n){\"use strict\"},{}],84:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\");e.exports=function(t,e,n){var i;return isNaN(t)?(i=e)>=0?n&&i?i-1:i:1:!1!==t&&r(t)}},{\"es5-ext/number/to-pos-integer\":44}],85:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/valid-callable\");e.exports=function(t){var e;return\"function\"==typeof t?{set:t,get:t}:(e={get:r(t.get)},void 0!==t.set?(e.set=r(t.set),t.delete&&(e.delete=r(t.delete)),t.clear&&(e.clear=r(t.clear)),e):(e.set=e.get,e))}},{\"es5-ext/object/valid-callable\":59}],86:[function(t,e,n){\"use strict\";var r,i=t(\"es5-ext/array/to-array\"),o=t(\"es5-ext/object/valid-callable\"),u=Array.prototype.slice;r=function(t){return this.map(function(e,n){return e?e(t[n]):t[n]}).concat(u.call(t,this.length))},e.exports=function(t){return(t=i(t)).forEach(function(t){null!=t&&o(t)}),r.bind(t)}},{\"es5-ext/array/to-array\":31,\"es5-ext/object/valid-callable\":59}],87:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/#/e-index-of\");e.exports=function(){var t=0,e=[],n=[];return{get:function(t){var i=r.call(e,t[0]);return-1===i?null:n[i]},set:function(r){return e.push(r[0]),n.push(++t),t},delete:function(t){var i=r.call(n,t);-1!==i&&(e.splice(i,1),n.splice(i,1))},clear:function(){e=[],n=[]}}}},{\"es5-ext/array/#/e-index-of\":27}],88:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/#/e-index-of\"),i=Object.create;e.exports=function(t){var e=0,n=[[],[]],o=i(null);return{get:function(e){for(var i,o=0,u=n;o<t-1;){if(-1===(i=r.call(u[0],e[o])))return null;u=u[1][i],++o}return-1===(i=r.call(u[0],e[o]))?null:u[1][i]||null},set:function(i){for(var u,a=0,s=n;a<t-1;)-1===(u=r.call(s[0],i[a]))&&(u=s[0].push(i[a])-1,s[1].push([[],[]])),s=s[1][u],++a;return-1===(u=r.call(s[0],i[a]))&&(u=s[0].push(i[a])-1),s[1][u]=++e,o[e]=i,e},delete:function(e){for(var i,u=0,a=n,s=[],f=o[e];u<t-1;){if(-1===(i=r.call(a[0],f[u])))return;s.push(a,i),a=a[1][i],++u}if(-1!==(i=r.call(a[0],f[u]))){for(e=a[1][i],a[0].splice(i,1),a[1].splice(i,1);!a[0].length&&s.length;)i=s.pop(),(a=s.pop())[0].splice(i,1),a[1].splice(i,1);delete o[e]}},clear:function(){n=[[],[]],o=i(null)}}}},{\"es5-ext/array/#/e-index-of\":27}],89:[function(t,e,n){\"use strict\";e.exports=function(t){return t?function(e){for(var n=String(e[0]),r=0,i=t;--i;)n+=\"\u0001\"+e[++r];return n}:function(){return\"\"}}},{}],90:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/#/e-index-of\"),i=Object.create;e.exports=function(){var t=0,e=[],n=i(null);return{get:function(t){var n,i=0,o=e,u=t.length;if(0===u)return o[u]||null;if(o=o[u]){for(;i<u-1;){if(-1===(n=r.call(o[0],t[i])))return null;o=o[1][n],++i}return-1===(n=r.call(o[0],t[i]))?null:o[1][n]||null}return null},set:function(i){var o,u=0,a=e,s=i.length;if(0===s)a[s]=++t;else{for(a[s]||(a[s]=[[],[]]),a=a[s];u<s-1;)-1===(o=r.call(a[0],i[u]))&&(o=a[0].push(i[u])-1,a[1].push([[],[]])),a=a[1][o],++u;-1===(o=r.call(a[0],i[u]))&&(o=a[0].push(i[u])-1),a[1][o]=++t}return n[t]=i,t},delete:function(t){var i,o=0,u=e,a=n[t],s=a.length,f=[];if(0===s)delete u[s];else if(u=u[s]){for(;o<s-1;){if(-1===(i=r.call(u[0],a[o])))return;f.push(u,i),u=u[1][i],++o}if(-1===(i=r.call(u[0],a[o])))return;for(t=u[1][i],u[0].splice(i,1),u[1].splice(i,1);!u[0].length&&f.length;)i=f.pop(),(u=f.pop())[0].splice(i,1),u[1].splice(i,1)}delete n[t]},clear:function(){e=[],n=i(null)}}}},{\"es5-ext/array/#/e-index-of\":27}],91:[function(t,e,n){\"use strict\";e.exports=function(t){var e,n,r=t.length;if(!r)return\"\u0002\";for(e=String(t[n=0]);--r;)e+=\"\u0001\"+t[++n];return e}},{}],92:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/valid-callable\"),i=t(\"es5-ext/object/for-each\"),o=t(\"./lib/registered-extensions\"),u=t(\"./lib/configure-map\"),a=t(\"./lib/resolve-length\"),s=Object.prototype.hasOwnProperty;e.exports=function t(e){var n,f,c;if(r(e),(n=Object(arguments[1])).async&&n.promise)throw new Error(\"Options 'async' and 'promise' cannot be used together\");return s.call(e,\"__memoized__\")&&!n.force?e:(f=a(n.length,e.length,n.async&&o.async),c=u(e,f,n),i(o,function(t,e){n[e]&&t(n[e],c,n)}),t.__profiler__&&t.__profiler__(c),c.updateEnv(),c.memoized)}},{\"./lib/configure-map\":82,\"./lib/registered-extensions\":83,\"./lib/resolve-length\":84,\"es5-ext/object/for-each\":49,\"es5-ext/object/valid-callable\":59}],93:[function(t,e,n){(function(t){\"use strict\";var n,r;n=function(t){if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");return t},r=function(t){var e,r,i=document.createTextNode(\"\"),o=0;return new t(function(){var t;if(e)r&&(e=r.concat(e));else{if(!r)return;e=r}if(r=e,e=null,\"function\"==typeof r)return t=r,r=null,void t();for(i.data=o=++o%2;r;)t=r.shift(),r.length||(r=null),t()}).observe(i,{characterData:!0}),function(t){n(t),e?\"function\"==typeof e?e=[e,t]:e.push(t):(e=t,i.data=o=++o%2)}},e.exports=function(){if(\"object\"==typeof t&&t&&\"function\"==typeof t.nextTick)return t.nextTick;if(\"object\"==typeof document&&document){if(\"function\"==typeof MutationObserver)return r(MutationObserver);if(\"function\"==typeof WebKitMutationObserver)return r(WebKitMutationObserver)}return\"function\"==typeof setImmediate?function(t){setImmediate(n(t))}:\"function\"==typeof setTimeout||\"object\"==typeof setTimeout?function(t){setTimeout(n(t),0)}:null}()}).call(this,t(\"_process\"))},{_process:95}],94:[function(t,e,n){(function(r){!function(t){if(\"object\"==typeof n)e.exports=t();else{var i;\"undefined\"!=typeof window?i=window:void 0!==r?i=r:\"undefined\"!=typeof self&&(i=self),i.objectHash=t()}}(function(){return function e(n,r,i){function o(a,s){if(!r[a]){if(!n[a]){var f=\"function\"==typeof t&&t;if(!s&&f)return f(a,!0);if(u)return u(a,!0);throw new Error(\"Cannot find module '\"+a+\"'\")}var c=r[a]={exports:{}};n[a][0].call(c.exports,function(t){var e=n[a][1][t];return o(e||t)},c,c.exports,e,n,r,i)}return r[a].exports}for(var u=\"function\"==typeof t&&t,a=0;a<i.length;a++)o(i[a]);return o}({1:[function(t,e,n){(function(r,i,o,u,a,s,f,c,l){\"use strict\";function p(t,e){return e=h(t,e),d(t,e)}function h(t,e){if(e=e||{},e.algorithm=e.algorithm||\"sha1\",e.encoding=e.encoding||\"hex\",e.excludeValues=!!e.excludeValues,e.algorithm=e.algorithm.toLowerCase(),e.encoding=e.encoding.toLowerCase(),e.ignoreUnknown=!0===e.ignoreUnknown,e.respectType=!1!==e.respectType,e.respectFunctionNames=!1!==e.respectFunctionNames,e.respectFunctionProperties=!1!==e.respectFunctionProperties,e.unorderedArrays=!0===e.unorderedArrays,e.unorderedSets=!1!==e.unorderedSets,e.replacer=e.replacer||void 0,void 0===t)throw new Error(\"Object argument required.\");for(var n=0;n<m.length;++n)m[n].toLowerCase()===e.algorithm.toLowerCase()&&(e.algorithm=m[n]);if(-1===m.indexOf(e.algorithm))throw new Error('Algorithm \"'+e.algorithm+'\"  not supported. supported values: '+m.join(\", \"));if(-1===w.indexOf(e.encoding)&&\"passthrough\"!==e.algorithm)throw new Error('Encoding \"'+e.encoding+'\"  not supported. supported values: '+w.join(\", \"));return e}function y(t){return\"function\"==typeof t&&null!=/^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i.exec(Function.prototype.toString.call(t))}function d(t,e){var n;if(void 0===(n=\"passthrough\"!==e.algorithm?b.createHash(e.algorithm):new g).write&&(n.write=n.update,n.end=n.update),v(e,n).dispatch(t),n.update||n.end(\"\"),n.digest)return n.digest(\"buffer\"===e.encoding?void 0:e.encoding);var r=n.read();return\"buffer\"===e.encoding?r:r.toString(e.encoding)}function v(t,e,n){n=n||[];var r=function(t){return e.update?e.update(t,\"utf8\"):e.write(t,\"utf8\")};return{dispatch:function(e){t.replacer&&(e=t.replacer(e));var n=typeof e;return null===e&&(n=\"null\"),this[\"_\"+n](e)},_object:function(e){var i=/\\[object (.*)\\]/i,u=Object.prototype.toString.call(e),a=i.exec(u);a=(a=a?a[1]:\"unknown:[\"+u+\"]\").toLowerCase();var s=null;if((s=n.indexOf(e))>=0)return this.dispatch(\"[CIRCULAR:\"+s+\"]\");if(n.push(e),void 0!==o&&o.isBuffer&&o.isBuffer(e))return r(\"buffer:\"),r(e);if(\"object\"===a||\"function\"===a){var f=Object.keys(e).sort();!1===t.respectType||y(e)||f.splice(0,0,\"prototype\",\"__proto__\",\"constructor\"),r(\"object:\"+f.length+\":\");var c=this;return f.forEach(function(n){c.dispatch(n),r(\":\"),t.excludeValues||c.dispatch(e[n]),r(\",\")})}if(!this[\"_\"+a]){if(t.ignoreUnknown)return r(\"[\"+a+\"]\");throw new Error('Unknown object type \"'+a+'\"')}this[\"_\"+a](e)},_array:function(e,i){i=void 0!==i?i:!1!==t.unorderedArrays;var o=this;if(r(\"array:\"+e.length+\":\"),!i||e.length<=1)return e.forEach(function(t){return o.dispatch(t)});var u=[],a=e.map(function(e){var r=new g,i=n.slice();return v(t,r,i).dispatch(e),u=u.concat(i.slice(n.length)),r.read().toString()});return n=n.concat(u),a.sort(),this._array(a,!1)},_date:function(t){return r(\"date:\"+t.toJSON())},_symbol:function(t){return r(\"symbol:\"+t.toString())},_error:function(t){return r(\"error:\"+t.toString())},_boolean:function(t){return r(\"bool:\"+t.toString())},_string:function(t){r(\"string:\"+t.length+\":\"),r(t)},_function:function(e){r(\"fn:\"),y(e)?this.dispatch(\"[native]\"):this.dispatch(e.toString()),!1!==t.respectFunctionNames&&this.dispatch(\"function-name:\"+String(e.name)),t.respectFunctionProperties&&this._object(e)},_number:function(t){return r(\"number:\"+t.toString())},_xml:function(t){return r(\"xml:\"+t.toString())},_null:function(){return r(\"Null\")},_undefined:function(){return r(\"Undefined\")},_regexp:function(t){return r(\"regex:\"+t.toString())},_uint8array:function(t){return r(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(t))},_uint8clampedarray:function(t){return r(\"uint8clampedarray:\"),this.dispatch(Array.prototype.slice.call(t))},_int8array:function(t){return r(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(t))},_uint16array:function(t){return r(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(t))},_int16array:function(t){return r(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(t))},_uint32array:function(t){return r(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(t))},_int32array:function(t){return r(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(t))},_float32array:function(t){return r(\"float32array:\"),this.dispatch(Array.prototype.slice.call(t))},_float64array:function(t){return r(\"float64array:\"),this.dispatch(Array.prototype.slice.call(t))},_arraybuffer:function(t){return r(\"arraybuffer:\"),this.dispatch(new Uint8Array(t))},_url:function(t){return r(\"url:\"+t.toString())},_map:function(e){r(\"map:\");var n=Array.from(e);return this._array(n,!1!==t.unorderedSets)},_set:function(e){r(\"set:\");var n=Array.from(e);return this._array(n,!1!==t.unorderedSets)},_blob:function(){if(t.ignoreUnknown)return r(\"[blob]\");throw Error('Hashing Blob objects is currently not supported\\n(see https://github.com/puleos/object-hash/issues/26)\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n')},_domwindow:function(){return r(\"domwindow\")},_process:function(){return r(\"process\")},_timer:function(){return r(\"timer\")},_pipe:function(){return r(\"pipe\")},_tcp:function(){return r(\"tcp\")},_udp:function(){return r(\"udp\")},_tty:function(){return r(\"tty\")},_statwatcher:function(){return r(\"statwatcher\")},_securecontext:function(){return r(\"securecontext\")},_connection:function(){return r(\"connection\")},_zlib:function(){return r(\"zlib\")},_context:function(){return r(\"context\")},_nodescript:function(){return r(\"nodescript\")},_httpparser:function(){return r(\"httpparser\")},_dataview:function(){return r(\"dataview\")},_signal:function(){return r(\"signal\")},_fsevent:function(){return r(\"fsevent\")},_tlswrap:function(){return r(\"tlswrap\")}}}function g(){return{buf:\"\",write:function(t){this.buf+=t},end:function(t){this.buf+=t},read:function(){return this.buf}}}var b=t(\"crypto\");(n=e.exports=p).sha1=function(t){return p(t)},n.keys=function(t){return p(t,{excludeValues:!0,algorithm:\"sha1\",encoding:\"hex\"})},n.MD5=function(t){return p(t,{algorithm:\"md5\",encoding:\"hex\"})},n.keysMD5=function(t){return p(t,{algorithm:\"md5\",encoding:\"hex\",excludeValues:!0})};var m=b.getHashes?b.getHashes().slice():[\"sha1\",\"md5\"];m.push(\"passthrough\");var w=[\"buffer\",\"hex\",\"binary\",\"base64\"];n.writeToStream=function(t,e,n){return void 0===n&&(n=e,e={}),e=h(t,e),v(e,n).dispatch(t)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_8c3adc78.js\",\"/\")},{buffer:3,crypto:5,lYpoI2:10}],2:[function(t,e,n){(function(t,e,r,i,o,u,a,s,f){var c=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";!function(t){\"use strict\";function e(t){var e=t.charCodeAt(0);return e===r||e===s?62:e===i||e===f?63:e<o?-1:e<o+10?e-o+26+26:e<a+26?e-a:e<u+26?e-u+26:void 0}var n=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,r=\"+\".charCodeAt(0),i=\"/\".charCodeAt(0),o=\"0\".charCodeAt(0),u=\"a\".charCodeAt(0),a=\"A\".charCodeAt(0),s=\"-\".charCodeAt(0),f=\"_\".charCodeAt(0);t.toByteArray=function(t){function r(t){f[l++]=t}var i,o,u,a,s,f;if(t.length%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var c=t.length;s=\"=\"===t.charAt(c-2)?2:\"=\"===t.charAt(c-1)?1:0,f=new n(3*t.length/4-s),u=s>0?t.length-4:t.length;var l=0;for(i=0,o=0;i<u;i+=4,o+=3)a=e(t.charAt(i))<<18|e(t.charAt(i+1))<<12|e(t.charAt(i+2))<<6|e(t.charAt(i+3)),r((16711680&a)>>16),r((65280&a)>>8),r(255&a);return 2===s?(a=e(t.charAt(i))<<2|e(t.charAt(i+1))>>4,r(255&a)):1===s&&(a=e(t.charAt(i))<<10|e(t.charAt(i+1))<<4|e(t.charAt(i+2))>>2,r(a>>8&255),r(255&a)),f},t.fromByteArray=function(t){function e(t){return c.charAt(t)}var n,r,i,o=t.length%3,u=\"\";for(n=0,i=t.length-o;n<i;n+=3)r=(t[n]<<16)+(t[n+1]<<8)+t[n+2],u+=function(t){return e(t>>18&63)+e(t>>12&63)+e(t>>6&63)+e(63&t)}(r);switch(o){case 1:u+=e((r=t[t.length-1])>>2),u+=e(r<<4&63),u+=\"==\";break;case 2:u+=e((r=(t[t.length-2]<<8)+t[t.length-1])>>10),u+=e(r>>4&63),u+=e(r<<2&63),u+=\"=\"}return u}}(void 0===n?this.base64js={}:n)}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/node_modules/gulp-browserify/node_modules/base64-js/lib\")},{buffer:3,lYpoI2:10}],3:[function(t,e,n){(function(e,r,i,o,u,a,s,f,c){function i(t,e,n){if(!(this instanceof i))return new i(t,e,n);var r=typeof t;if(\"base64\"===e&&\"string\"===r)for(t=U(t);t.length%4!=0;)t+=\"=\";var o;if(\"number\"===r)o=$(t);else if(\"string\"===r)o=i.byteLength(t,e);else{if(\"object\"!==r)throw new Error(\"First argument needs to be a number, array or string.\");o=$(t.length)}var u;i._useTypedArrays?u=i._augment(new Uint8Array(o)):(u=this,u.length=o,u._isBuffer=!0);var a;if(i._useTypedArrays&&\"number\"==typeof t.byteLength)u._set(t);else if(M(t))for(a=0;a<o;a++)i.isBuffer(t)?u[a]=t.readUInt8(a):u[a]=t[a];else if(\"string\"===r)u.write(t,0,e);else if(\"number\"===r&&!i._useTypedArrays&&!n)for(a=0;a<o;a++)u[a]=0;return u}function l(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;var u=e.length;J(u%2==0,\"Invalid hex string\"),r>u/2&&(r=u/2);for(var a=0;a<r;a++){var s=parseInt(e.substr(2*a,2),16);J(!isNaN(s),\"Invalid hex string\"),t[n+a]=s}return i._charsWritten=2*a,a}function p(t,e,n,r){return i._charsWritten=V(z(e),t,n,r)}function h(t,e,n,r){return i._charsWritten=V(F(e),t,n,r)}function y(t,e,n,r){return h(t,e,n,r)}function d(t,e,n,r){return i._charsWritten=V(q(e),t,n,r)}function v(t,e,n,r){return i._charsWritten=V(Y(e),t,n,r)}function g(t,e,n){return 0===e&&n===t.length?G.fromByteArray(t):G.fromByteArray(t.slice(e,n))}function b(t,e,n){var r=\"\",i=\"\";n=Math.min(t.length,n);for(var o=e;o<n;o++)t[o]<=127?(r+=Q(i)+String.fromCharCode(t[o]),i=\"\"):i+=\"%\"+t[o].toString(16);return r+Q(i)}function m(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var i=e;i<n;i++)r+=String.fromCharCode(t[i]);return r}function w(t,e,n){return m(t,e,n)}function _(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i=\"\",o=e;o<n;o++)i+=D(t[o]);return i}function j(t,e,n){for(var r=t.slice(e,n),i=\"\",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function x(t,e,n,r){r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+1<t.length,\"Trying to read beyond buffer length\"));var i=t.length;if(!(e>=i)){var o;return n?(o=t[e],e+1<i&&(o|=t[e+1]<<8)):(o=t[e]<<8,e+1<i&&(o|=t[e+1])),o}}function O(t,e,n,r){r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+3<t.length,\"Trying to read beyond buffer length\"));var i=t.length;if(!(e>=i)){var o;return n?(e+2<i&&(o=t[e+2]<<16),e+1<i&&(o|=t[e+1]<<8),o|=t[e],e+3<i&&(o+=t[e+3]<<24>>>0)):(e+1<i&&(o=t[e+1]<<16),e+2<i&&(o|=t[e+2]<<8),e+3<i&&(o|=t[e+3]),o+=t[e]<<24>>>0),o}}function k(t,e,n,r){if(r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+1<t.length,\"Trying to read beyond buffer length\")),!(e>=t.length)){var i=x(t,e,n,!0);return 32768&i?-1*(65535-i+1):i}}function E(t,e,n,r){if(r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+3<t.length,\"Trying to read beyond buffer length\")),!(e>=t.length)){var i=O(t,e,n,!0);return 2147483648&i?-1*(4294967295-i+1):i}}function A(t,e,n,r){return r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(e+3<t.length,\"Trying to read beyond buffer length\")),X.read(t,e,n,23,4)}function S(t,e,n,r){return r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(e+7<t.length,\"Trying to read beyond buffer length\")),X.read(t,e,n,52,8)}function I(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+1<t.length,\"trying to write beyond buffer length\"),K(e,65535));var o=t.length;if(!(n>=o))for(var u=0,a=Math.min(o-n,2);u<a;u++)t[n+u]=(e&255<<8*(r?u:1-u))>>>8*(r?u:1-u)}function T(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+3<t.length,\"trying to write beyond buffer length\"),K(e,4294967295));var o=t.length;if(!(n>=o))for(var u=0,a=Math.min(o-n,4);u<a;u++)t[n+u]=e>>>8*(r?u:3-u)&255}function P(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+1<t.length,\"Trying to write beyond buffer length\"),W(e,32767,-32768)),n>=t.length||(e>=0?I(t,e,n,r,i):I(t,65535+e+1,n,r,i))}function B(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+3<t.length,\"Trying to write beyond buffer length\"),W(e,2147483647,-2147483648)),n>=t.length||(e>=0?T(t,e,n,r,i):T(t,4294967295+e+1,n,r,i))}function C(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+3<t.length,\"Trying to write beyond buffer length\"),H(e,3.4028234663852886e38,-3.4028234663852886e38)),n>=t.length||X.write(t,e,n,r,23,4)}function L(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+7<t.length,\"Trying to write beyond buffer length\"),H(e,1.7976931348623157e308,-1.7976931348623157e308)),n>=t.length||X.write(t,e,n,r,52,8)}function U(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function R(t,e,n){return\"number\"!=typeof t?n:(t=~~t)>=e?e:t>=0?t:(t+=e)>=0?t:0}function $(t){return(t=~~Math.ceil(+t))<0?0:t}function N(t){return(Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)})(t)}function M(t){return N(t)||i.isBuffer(t)||t&&\"object\"==typeof t&&\"number\"==typeof t.length}function D(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function z(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);if(r<=127)e.push(t.charCodeAt(n));else{var i=n;r>=55296&&r<=57343&&n++;for(var o=encodeURIComponent(t.slice(i,n+1)).substr(1).split(\"%\"),u=0;u<o.length;u++)e.push(parseInt(o[u],16))}}return e}function F(t){for(var e=[],n=0;n<t.length;n++)e.push(255&t.charCodeAt(n));return e}function Y(t){for(var e,n,r,i=[],o=0;o<t.length;o++)e=t.charCodeAt(o),n=e>>8,r=e%256,i.push(r),i.push(n);return i}function q(t){return G.toByteArray(t)}function V(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);i++)e[i+n]=t[i];return i}function Q(t){try{return decodeURIComponent(t)}catch(t){return String.fromCharCode(65533)}}function K(t,e){J(\"number\"==typeof t,\"cannot write a non-number as a number\"),J(t>=0,\"specified a negative value for writing an unsigned value\"),J(t<=e,\"value is larger than maximum value for type\"),J(Math.floor(t)===t,\"value has a fractional component\")}function W(t,e,n){J(\"number\"==typeof t,\"cannot write a non-number as a number\"),J(t<=e,\"value larger than maximum allowed value\"),J(t>=n,\"value smaller than minimum allowed value\"),J(Math.floor(t)===t,\"value has a fractional component\")}function H(t,e,n){J(\"number\"==typeof t,\"cannot write a non-number as a number\"),J(t<=e,\"value larger than maximum allowed value\"),J(t>=n,\"value smaller than minimum allowed value\")}function J(t,e){if(!t)throw new Error(e||\"Failed assertion\")}var G=t(\"base64-js\"),X=t(\"ieee754\");n.Buffer=i,n.SlowBuffer=i,n.INSPECT_MAX_BYTES=50,i.poolSize=8192,i._useTypedArrays=function(){try{var t=new ArrayBuffer(0),e=new Uint8Array(t);return e.foo=function(){return 42},42===e.foo()&&\"function\"==typeof e.subarray}catch(t){return!1}}(),i.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"raw\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},i.isBuffer=function(t){return!(null===t||void 0===t||!t._isBuffer)},i.byteLength=function(t,e){var n;switch(t+=\"\",e||\"utf8\"){case\"hex\":n=t.length/2;break;case\"utf8\":case\"utf-8\":n=z(t).length;break;case\"ascii\":case\"binary\":case\"raw\":n=t.length;break;case\"base64\":n=q(t).length;break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":n=2*t.length;break;default:throw new Error(\"Unknown encoding\")}return n},i.concat=function(t,e){if(J(N(t),\"Usage: Buffer.concat(list, [totalLength])\\nlist should be an Array.\"),0===t.length)return new i(0);if(1===t.length)return t[0];var n;if(\"number\"!=typeof e)for(e=0,n=0;n<t.length;n++)e+=t[n].length;var r=new i(e),o=0;for(n=0;n<t.length;n++){var u=t[n];u.copy(r,o),o+=u.length}return r},i.prototype.write=function(t,e,n,r){if(isFinite(e))isFinite(n)||(r=n,n=void 0);else{var i=r;r=e,e=n,n=i}e=Number(e)||0;var o=this.length-e;n?(n=Number(n))>o&&(n=o):n=o;var u;switch(r=String(r||\"utf8\").toLowerCase()){case\"hex\":u=l(this,t,e,n);break;case\"utf8\":case\"utf-8\":u=p(this,t,e,n);break;case\"ascii\":u=h(this,t,e,n);break;case\"binary\":u=y(this,t,e,n);break;case\"base64\":u=d(this,t,e,n);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":u=v(this,t,e,n);break;default:throw new Error(\"Unknown encoding\")}return u},i.prototype.toString=function(t,e,n){var r=this;if(t=String(t||\"utf8\").toLowerCase(),e=Number(e)||0,(n=void 0!==n?Number(n):n=r.length)===e)return\"\";var i;switch(t){case\"hex\":i=_(r,e,n);break;case\"utf8\":case\"utf-8\":i=b(r,e,n);break;case\"ascii\":i=m(r,e,n);break;case\"binary\":i=w(r,e,n);break;case\"base64\":i=g(r,e,n);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":i=j(r,e,n);break;default:throw new Error(\"Unknown encoding\")}return i},i.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},i.prototype.copy=function(t,e,n,r){var o=this;if(n||(n=0),r||0===r||(r=this.length),e||(e=0),r!==n&&0!==t.length&&0!==o.length){J(r>=n,\"sourceEnd < sourceStart\"),J(e>=0&&e<t.length,\"targetStart out of bounds\"),J(n>=0&&n<o.length,\"sourceStart out of bounds\"),J(r>=0&&r<=o.length,\"sourceEnd out of bounds\"),r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var u=r-n;if(u<100||!i._useTypedArrays)for(var a=0;a<u;a++)t[a+e]=this[a+n];else t._set(this.subarray(n,n+u),e)}},i.prototype.slice=function(t,e){var n=this.length;if(t=R(t,n,0),e=R(e,n,n),i._useTypedArrays)return i._augment(this.subarray(t,e));for(var r=e-t,o=new i(r,void 0,!0),u=0;u<r;u++)o[u]=this[u+t];return o},i.prototype.get=function(t){return console.log(\".get() is deprecated. Access using array indexes instead.\"),this.readUInt8(t)},i.prototype.set=function(t,e){return console.log(\".set() is deprecated. Access using array indexes instead.\"),this.writeUInt8(t,e)},i.prototype.readUInt8=function(t,e){if(e||(J(void 0!==t&&null!==t,\"missing offset\"),J(t<this.length,\"Trying to read beyond buffer length\")),!(t>=this.length))return this[t]},i.prototype.readUInt16LE=function(t,e){return x(this,t,!0,e)},i.prototype.readUInt16BE=function(t,e){return x(this,t,!1,e)},i.prototype.readUInt32LE=function(t,e){return O(this,t,!0,e)},i.prototype.readUInt32BE=function(t,e){return O(this,t,!1,e)},i.prototype.readInt8=function(t,e){if(e||(J(void 0!==t&&null!==t,\"missing offset\"),J(t<this.length,\"Trying to read beyond buffer length\")),!(t>=this.length))return 128&this[t]?-1*(255-this[t]+1):this[t]},i.prototype.readInt16LE=function(t,e){return k(this,t,!0,e)},i.prototype.readInt16BE=function(t,e){return k(this,t,!1,e)},i.prototype.readInt32LE=function(t,e){return E(this,t,!0,e)},i.prototype.readInt32BE=function(t,e){return E(this,t,!1,e)},i.prototype.readFloatLE=function(t,e){return A(this,t,!0,e)},i.prototype.readFloatBE=function(t,e){return A(this,t,!1,e)},i.prototype.readDoubleLE=function(t,e){return S(this,t,!0,e)},i.prototype.readDoubleBE=function(t,e){return S(this,t,!1,e)},i.prototype.writeUInt8=function(t,e,n){n||(J(void 0!==t&&null!==t,\"missing value\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e<this.length,\"trying to write beyond buffer length\"),K(t,255)),e>=this.length||(this[e]=t)},i.prototype.writeUInt16LE=function(t,e,n){I(this,t,e,!0,n)},i.prototype.writeUInt16BE=function(t,e,n){I(this,t,e,!1,n)},i.prototype.writeUInt32LE=function(t,e,n){T(this,t,e,!0,n)},i.prototype.writeUInt32BE=function(t,e,n){T(this,t,e,!1,n)},i.prototype.writeInt8=function(t,e,n){n||(J(void 0!==t&&null!==t,\"missing value\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e<this.length,\"Trying to write beyond buffer length\"),W(t,127,-128)),e>=this.length||(t>=0?this.writeUInt8(t,e,n):this.writeUInt8(255+t+1,e,n))},i.prototype.writeInt16LE=function(t,e,n){P(this,t,e,!0,n)},i.prototype.writeInt16BE=function(t,e,n){P(this,t,e,!1,n)},i.prototype.writeInt32LE=function(t,e,n){B(this,t,e,!0,n)},i.prototype.writeInt32BE=function(t,e,n){B(this,t,e,!1,n)},i.prototype.writeFloatLE=function(t,e,n){C(this,t,e,!0,n)},i.prototype.writeFloatBE=function(t,e,n){C(this,t,e,!1,n)},i.prototype.writeDoubleLE=function(t,e,n){L(this,t,e,!0,n)},i.prototype.writeDoubleBE=function(t,e,n){L(this,t,e,!1,n)},i.prototype.fill=function(t,e,n){if(t||(t=0),e||(e=0),n||(n=this.length),\"string\"==typeof t&&(t=t.charCodeAt(0)),J(\"number\"==typeof t&&!isNaN(t),\"value is not a number\"),J(n>=e,\"end < start\"),n!==e&&0!==this.length){J(e>=0&&e<this.length,\"start out of bounds\"),J(n>=0&&n<=this.length,\"end out of bounds\");for(var r=e;r<n;r++)this[r]=t}},i.prototype.inspect=function(){for(var t=[],e=this.length,r=0;r<e;r++)if(t[r]=D(this[r]),r===n.INSPECT_MAX_BYTES){t[r+1]=\"...\";break}return\"<Buffer \"+t.join(\" \")+\">\"},i.prototype.toArrayBuffer=function(){if(\"undefined\"!=typeof Uint8Array){if(i._useTypedArrays)return new i(this).buffer;for(var t=new Uint8Array(this.length),e=0,n=t.length;e<n;e+=1)t[e]=this[e];return t.buffer}throw new Error(\"Buffer.toArrayBuffer not supported in this browser\")};var Z=i.prototype;i._augment=function(t){return t._isBuffer=!0,t._get=t.get,t._set=t.set,t.get=Z.get,t.set=Z.set,t.write=Z.write,t.toString=Z.toString,t.toLocaleString=Z.toString,t.toJSON=Z.toJSON,t.copy=Z.copy,t.slice=Z.slice,t.readUInt8=Z.readUInt8,t.readUInt16LE=Z.readUInt16LE,t.readUInt16BE=Z.readUInt16BE,t.readUInt32LE=Z.readUInt32LE,t.readUInt32BE=Z.readUInt32BE,t.readInt8=Z.readInt8,t.readInt16LE=Z.readInt16LE,t.readInt16BE=Z.readInt16BE,t.readInt32LE=Z.readInt32LE,t.readInt32BE=Z.readInt32BE,t.readFloatLE=Z.readFloatLE,t.readFloatBE=Z.readFloatBE,t.readDoubleLE=Z.readDoubleLE,t.readDoubleBE=Z.readDoubleBE,t.writeUInt8=Z.writeUInt8,t.writeUInt16LE=Z.writeUInt16LE,t.writeUInt16BE=Z.writeUInt16BE,t.writeUInt32LE=Z.writeUInt32LE,t.writeUInt32BE=Z.writeUInt32BE,t.writeInt8=Z.writeInt8,t.writeInt16LE=Z.writeInt16LE,t.writeInt16BE=Z.writeInt16BE,t.writeInt32LE=Z.writeInt32LE,t.writeInt32BE=Z.writeInt32BE,t.writeFloatLE=Z.writeFloatLE,t.writeFloatBE=Z.writeFloatBE,t.writeDoubleLE=Z.writeDoubleLE,t.writeDoubleBE=Z.writeDoubleBE,t.fill=Z.fill,t.inspect=Z.inspect,t.toArrayBuffer=Z.toArrayBuffer,t}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/node_modules/gulp-browserify/node_modules/buffer\")},{\"base64-js\":2,buffer:3,ieee754:11,lYpoI2:10}],4:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){if(t.length%h!=0){var n=t.length+(h-t.length%h);t=i.concat([t,y],n)}for(var r=[],o=e?t.readInt32BE:t.readInt32LE,u=0;u<t.length;u+=h)r.push(o.call(t,u));return r}function p(t,e,n){for(var r=new i(e),o=n?r.writeInt32BE:r.writeInt32LE,u=0;u<t.length;u++)o.call(r,t[u],4*u,!0);return r}var h=4,y=new(i=t(\"buffer\").Buffer)(h);y.fill(0);var d=8;e.exports={hash:function(t,e,n,r){return i.isBuffer(t)||(t=new i(t)),p(e(l(t,r),t.length*d),n,r)}}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:10}],5:[function(t,e,n){(function(e,r,i,o,u,a,s,f,c){function l(t,e,n){i.isBuffer(e)||(e=new i(e)),i.isBuffer(n)||(n=new i(n)),e.length>b?e=t(e):e.length<b&&(e=i.concat([e,m],b));for(var r=new i(b),o=new i(b),u=0;u<b;u++)r[u]=54^e[u],o[u]=92^e[u];var a=t(i.concat([r,n]));return t(i.concat([o,a]))}function p(t,e){var n=g[t=t||\"sha1\"],r=[],o=0;return n||h(\"algorithm:\",t,\"is not yet supported\"),{update:function(t){return i.isBuffer(t)||(t=new i(t)),r.push(t),o+=t.length,this},digest:function(t){var o=i.concat(r),u=e?l(n,e,o):n(o);return r=null,t?u.toString(t):u}}}function h(){var t=[].slice.call(arguments).join(\" \");throw new Error([t,\"we accept pull requests\",\"http://github.com/dominictarr/crypto-browserify\"].join(\"\\n\"))}var i=t(\"buffer\").Buffer,y=t(\"./sha\"),d=t(\"./sha256\"),v=t(\"./rng\"),g={sha1:y,sha256:d,md5:t(\"./md5\")},b=64,m=new i(b);m.fill(0),n.createHash=function(t){return p(t)},n.createHmac=function(t,e){return p(t,e)},n.randomBytes=function(t,e){if(!e||!e.call)return new i(v(t));try{e.call(this,void 0,new i(v(t)))}catch(t){e(t)}},function(t,e){for(var n in t)e(t[n],n)}([\"createCredentials\",\"createCipher\",\"createCipheriv\",\"createDecipher\",\"createDecipheriv\",\"createSign\",\"createVerify\",\"createDiffieHellman\",\"pbkdf2\"],function(t){n[t]=function(){h(\"sorry,\",t,\"is not implemented yet\")}})}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./md5\":6,\"./rng\":7,\"./sha\":8,\"./sha256\":9,buffer:3,lYpoI2:10}],6:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){t[e>>5]|=128<<e%32,t[14+(e+64>>>9<<4)]=e;for(var n=1732584193,r=-271733879,i=-1732584194,o=271733878,u=0;u<t.length;u+=16){var a=n,s=r,f=i,c=o;r=v(r=v(r=v(r=v(r=d(r=d(r=d(r=d(r=y(r=y(r=y(r=y(r=h(r=h(r=h(r=h(r,i=h(i,o=h(o,n=h(n,r,i,o,t[u+0],7,-680876936),r,i,t[u+1],12,-389564586),n,r,t[u+2],17,606105819),o,n,t[u+3],22,-1044525330),i=h(i,o=h(o,n=h(n,r,i,o,t[u+4],7,-176418897),r,i,t[u+5],12,1200080426),n,r,t[u+6],17,-1473231341),o,n,t[u+7],22,-45705983),i=h(i,o=h(o,n=h(n,r,i,o,t[u+8],7,1770035416),r,i,t[u+9],12,-1958414417),n,r,t[u+10],17,-42063),o,n,t[u+11],22,-1990404162),i=h(i,o=h(o,n=h(n,r,i,o,t[u+12],7,1804603682),r,i,t[u+13],12,-40341101),n,r,t[u+14],17,-1502002290),o,n,t[u+15],22,1236535329),i=y(i,o=y(o,n=y(n,r,i,o,t[u+1],5,-165796510),r,i,t[u+6],9,-1069501632),n,r,t[u+11],14,643717713),o,n,t[u+0],20,-373897302),i=y(i,o=y(o,n=y(n,r,i,o,t[u+5],5,-701558691),r,i,t[u+10],9,38016083),n,r,t[u+15],14,-660478335),o,n,t[u+4],20,-405537848),i=y(i,o=y(o,n=y(n,r,i,o,t[u+9],5,568446438),r,i,t[u+14],9,-1019803690),n,r,t[u+3],14,-187363961),o,n,t[u+8],20,1163531501),i=y(i,o=y(o,n=y(n,r,i,o,t[u+13],5,-1444681467),r,i,t[u+2],9,-51403784),n,r,t[u+7],14,1735328473),o,n,t[u+12],20,-1926607734),i=d(i,o=d(o,n=d(n,r,i,o,t[u+5],4,-378558),r,i,t[u+8],11,-2022574463),n,r,t[u+11],16,1839030562),o,n,t[u+14],23,-35309556),i=d(i,o=d(o,n=d(n,r,i,o,t[u+1],4,-1530992060),r,i,t[u+4],11,1272893353),n,r,t[u+7],16,-155497632),o,n,t[u+10],23,-1094730640),i=d(i,o=d(o,n=d(n,r,i,o,t[u+13],4,681279174),r,i,t[u+0],11,-358537222),n,r,t[u+3],16,-722521979),o,n,t[u+6],23,76029189),i=d(i,o=d(o,n=d(n,r,i,o,t[u+9],4,-640364487),r,i,t[u+12],11,-421815835),n,r,t[u+15],16,530742520),o,n,t[u+2],23,-995338651),i=v(i,o=v(o,n=v(n,r,i,o,t[u+0],6,-198630844),r,i,t[u+7],10,1126891415),n,r,t[u+14],15,-1416354905),o,n,t[u+5],21,-57434055),i=v(i,o=v(o,n=v(n,r,i,o,t[u+12],6,1700485571),r,i,t[u+3],10,-1894986606),n,r,t[u+10],15,-1051523),o,n,t[u+1],21,-2054922799),i=v(i,o=v(o,n=v(n,r,i,o,t[u+8],6,1873313359),r,i,t[u+15],10,-30611744),n,r,t[u+6],15,-1560198380),o,n,t[u+13],21,1309151649),i=v(i,o=v(o,n=v(n,r,i,o,t[u+4],6,-145523070),r,i,t[u+11],10,-1120210379),n,r,t[u+2],15,718787259),o,n,t[u+9],21,-343485551),n=g(n,a),r=g(r,s),i=g(i,f),o=g(o,c)}return Array(n,r,i,o)}function p(t,e,n,r,i,o){return g(b(g(g(e,t),g(r,o)),i),n)}function h(t,e,n,r,i,o,u){return p(e&n|~e&r,t,e,i,o,u)}function y(t,e,n,r,i,o,u){return p(e&r|n&~r,t,e,i,o,u)}function d(t,e,n,r,i,o,u){return p(e^n^r,t,e,i,o,u)}function v(t,e,n,r,i,o,u){return p(n^(e|~r),t,e,i,o,u)}function g(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function b(t,e){return t<<e|t>>>32-e}var m=t(\"./helpers\");e.exports=function(t){return m.hash(t,l,16)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],7:[function(t,e,n){(function(t,n,r,i,o,u,a,s,f){!function(){var t,n;t=function(t){for(var e,n=new Array(t),r=0;r<t;r++)0==(3&r)&&(e=4294967296*Math.random()),n[r]=e>>>((3&r)<<3)&255;return n},this.crypto&&crypto.getRandomValues&&(n=function(t){var e=new Uint8Array(t);return crypto.getRandomValues(e),e}),e.exports=n||t}()}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:10}],8:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){t[e>>5]|=128<<24-e%32,t[15+(e+64>>9<<4)]=e;for(var n=Array(80),r=1732584193,i=-271733879,o=-1732584194,u=271733878,a=-1009589776,s=0;s<t.length;s+=16){for(var f=r,c=i,l=o,v=u,g=a,b=0;b<80;b++){n[b]=b<16?t[s+b]:d(n[b-3]^n[b-8]^n[b-14]^n[b-16],1);var m=y(y(d(r,5),p(b,i,o,u)),y(y(a,n[b]),h(b)));a=u,u=o,o=d(i,30),i=r,r=m}r=y(r,f),i=y(i,c),o=y(o,l),u=y(u,v),a=y(a,g)}return Array(r,i,o,u,a)}function p(t,e,n,r){return t<20?e&n|~e&r:t<40?e^n^r:t<60?e&n|e&r|n&r:e^n^r}function h(t){return t<20?1518500249:t<40?1859775393:t<60?-1894007588:-899497514}function y(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function d(t,e){return t<<e|t>>>32-e}var v=t(\"./helpers\");e.exports=function(t){return v.hash(t,l,20,!0)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],9:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){var l=t(\"./helpers\"),p=function(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n},h=function(t,e){return t>>>e|t<<32-e},y=function(t,e){return t>>>e},d=function(t,e,n){return t&e^~t&n},v=function(t,e,n){return t&e^t&n^e&n},g=function(t){return h(t,2)^h(t,13)^h(t,22)},b=function(t){return h(t,6)^h(t,11)^h(t,25)},m=function(t){return h(t,7)^h(t,18)^y(t,3)},w=function(t){return h(t,17)^h(t,19)^y(t,10)},_=function(t,e){var n,r,i,o,u,a,s,f,c,l,h=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),y=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),_=new Array(64);t[e>>5]|=128<<24-e%32,t[15+(e+64>>9<<4)]=e;for(var j=0;j<t.length;j+=16){n=y[0],r=y[1],i=y[2],o=y[3],u=y[4],a=y[5],s=y[6],f=y[7];for(var x=0;x<64;x++)_[x]=x<16?t[x+j]:p(p(p(w(_[x-2]),_[x-7]),m(_[x-15])),_[x-16]),c=p(p(p(p(f,b(u)),d(u,a,s)),h[x]),_[x]),l=p(g(n),v(n,r,i)),f=s,s=a,a=u,u=p(o,c),o=i,i=r,r=n,n=p(c,l);y[0]=p(n,y[0]),y[1]=p(r,y[1]),y[2]=p(i,y[2]),y[3]=p(o,y[3]),y[4]=p(u,y[4]),y[5]=p(a,y[5]),y[6]=p(s,y[6]),y[7]=p(f,y[7])}return y};e.exports=function(t){return l.hash(t,_,32,!0)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],10:[function(t,e,n){(function(t,n,r,i,o,u,a,s,f){function c(){}(t=e.exports={}).nextTick=function(){var t=\"undefined\"!=typeof window&&window.setImmediate,e=\"undefined\"!=typeof window&&window.postMessage&&window.addEventListener;if(t)return function(t){return window.setImmediate(t)};if(e){var n=[];return window.addEventListener(\"message\",function(t){var e=t.source;(e===window||null===e)&&\"process-tick\"===t.data&&(t.stopPropagation(),n.length>0)&&n.shift()()},!0),function(t){n.push(t),window.postMessage(\"process-tick\",\"*\")}}return function(t){setTimeout(t,0)}}(),t.title=\"browser\",t.browser=!0,t.env={},t.argv=[],t.on=c,t.addListener=c,t.once=c,t.off=c,t.removeListener=c,t.removeAllListeners=c,t.emit=c,t.binding=function(t){throw new Error(\"process.binding is not supported\")},t.cwd=function(){return\"/\"},t.chdir=function(t){throw new Error(\"process.chdir is not supported\")}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/process/browser.js\",\"/node_modules/gulp-browserify/node_modules/process\")},{buffer:3,lYpoI2:10}],11:[function(t,e,n){(function(t,e,r,i,o,u,a,s,f){n.read=function(t,e,n,r,i){var o,u,a=8*i-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?i-1:0,p=n?-1:1,h=t[e+l];for(l+=p,o=h&(1<<-c)-1,h>>=-c,c+=a;c>0;o=256*o+t[e+l],l+=p,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=r;c>0;u=256*u+t[e+l],l+=p,c-=8);if(0===o)o=1-f;else{if(o===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),o-=f}return(h?-1:1)*u*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var u,a,s,f=8*o-i-1,c=(1<<f)-1,l=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,y=r?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,u=c):(u=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-u))<1&&(u--,s*=2),(e+=u+l>=1?p/s:p*Math.pow(2,1-l))*s>=2&&(u++,s/=2),u+l>=c?(a=0,u=c):u+l>=1?(a=(e*s-1)*Math.pow(2,i),u+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),u=0));i>=8;t[n+h]=255&a,h+=y,a/=256,i-=8);for(u=u<<i|a,f+=i;f>0;t[n+h]=255&u,h+=y,u/=256,f-=8);t[n+h-y]|=128*d}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/ieee754/index.js\",\"/node_modules/ieee754\")},{buffer:3,lYpoI2:10}]},{},[1])(1)})}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],95:[function(t,e,n){function r(){throw new Error(\"setTimeout has not been defined\")}function i(){throw new Error(\"clearTimeout has not been defined\")}function o(t){if(l===setTimeout)return setTimeout(t,0);if((l===r||!l)&&setTimeout)return l=setTimeout,setTimeout(t,0);try{return l(t,0)}catch(e){try{return l.call(null,t,0)}catch(e){return l.call(this,t,0)}}}function u(t){if(p===clearTimeout)return clearTimeout(t);if((p===i||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(t);try{return p(t)}catch(e){try{return p.call(null,t)}catch(e){return p.call(this,t)}}}function a(){v&&y&&(v=!1,y.length?d=y.concat(d):g=-1,d.length&&s())}function s(){if(!v){var t=o(a);v=!0;for(var e=d.length;e;){for(y=d,d=[];++g<e;)y&&y[g].run();g=-1,e=d.length}y=null,v=!1,u(t)}}function f(t,e){this.fun=t,this.array=e}function c(){}var l,p,h=e.exports={};!function(){try{l=\"function\"==typeof setTimeout?setTimeout:r}catch(t){l=r}try{p=\"function\"==typeof clearTimeout?clearTimeout:i}catch(t){p=i}}();var y,d=[],v=!1,g=-1;h.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];d.push(new f(t,e)),1!==d.length||v||o(s)},f.prototype.run=function(){this.fun.apply(null,this.array)},h.title=\"browser\",h.browser=!0,h.env={},h.argv=[],h.version=\"\",h.versions={},h.on=c,h.addListener=c,h.once=c,h.off=c,h.removeListener=c,h.removeAllListeners=c,h.emit=c,h.prependListener=c,h.prependOnceListener=c,h.listeners=function(t){return[]},h.binding=function(t){throw new Error(\"process.binding is not supported\")},h.cwd=function(){return\"/\"},h.chdir=function(t){throw new Error(\"process.chdir is not supported\")},h.umask=function(){return 0}},{}],96:[function(t,e,n){(function(t){!function(t){\"use strict\";if(\"function\"==typeof bootstrap)bootstrap(\"promise\",t);else if(\"object\"==typeof n&&\"object\"==typeof e)e.exports=t();else if(\"undefined\"!=typeof ses){if(!ses.ok())return;ses.makeQ=t}else{if(\"undefined\"==typeof window&&\"undefined\"==typeof self)throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");var r=\"undefined\"!=typeof window?window:self,i=r.Q;r.Q=t(),r.Q.noConflict=function(){return r.Q=i,this}}}(function(){\"use strict\";function e(t){return function(){return R.apply(t,arguments)}}function n(t){return t===Object(t)}function r(t){return\"[object StopIteration]\"===V(t)||t instanceof B}function i(t,e){if(T&&e.stack&&\"object\"==typeof t&&null!==t&&t.stack){for(var n=[],r=e;r;r=r.source)r.stack&&(!t.__minimumStackCounter__||t.__minimumStackCounter__>r.stackCounter)&&(F(t,\"__minimumStackCounter__\",{value:r.stackCounter,configurable:!0}),n.unshift(r.stack));n.unshift(t.stack);var i=o(n.join(\"\\n\"+Q+\"\\n\"));F(t,\"stack\",{value:i,configurable:!0})}}function o(t){for(var e=t.split(\"\\n\"),n=[],r=0;r<e.length;++r){var i=e[r];s(i)||u(i)||!i||n.push(i)}return n.join(\"\\n\")}function u(t){return-1!==t.indexOf(\"(module.js:\")||-1!==t.indexOf(\"(node.js:\")}function a(t){var e=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(t);if(e)return[e[1],Number(e[2])];var n=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(t);if(n)return[n[1],Number(n[2])];var r=/.*@(.+):(\\d+)$/.exec(t);return r?[r[1],Number(r[2])]:void 0}function s(t){var e=a(t);if(!e)return!1;var n=e[0],r=e[1];return n===P&&r>=C&&r<=X}function f(){if(T)try{throw new Error}catch(n){var t=n.stack.split(\"\\n\"),e=a(t[0].indexOf(\"@\")>0?t[1]:t[2]);if(!e)return;return P=e[0],e[1]}}function c(t){return t instanceof y?t:b(t)?O(t):x(t)}function l(){function t(t){e=t,c.longStackSupport&&T&&(o.source=t),N(n,function(e,n){c.nextTick(function(){t.promiseDispatch.apply(t,n)})},void 0),n=void 0,r=void 0}var e,n=[],r=[],i=z(l.prototype),o=z(y.prototype);if(o.promiseDispatch=function(t,i,o){var u=$(arguments);n?(n.push(u),\"when\"===i&&o[1]&&r.push(o[1])):c.nextTick(function(){e.promiseDispatch.apply(e,u)})},o.valueOf=function(){if(n)return o;var t=v(e);return g(t)&&(e=t),t},o.inspect=function(){return e?e.inspect():{state:\"pending\"}},c.longStackSupport&&T)try{throw new Error}catch(t){o.stack=t.stack.substring(t.stack.indexOf(\"\\n\")+1),o.stackCounter=K++}return i.promise=o,i.resolve=function(n){e||t(c(n))},i.fulfill=function(n){e||t(x(n))},i.reject=function(n){e||t(j(n))},i.notify=function(t){e||N(r,function(e,n){c.nextTick(function(){n(t)})},void 0)},i}function p(t){if(\"function\"!=typeof t)throw new TypeError(\"resolver must be a function.\");var e=l();try{t(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}return e.promise}function h(t){return p(function(e,n){for(var r=0,i=t.length;r<i;r++)c(t[r]).then(e,n)})}function y(t,e,n){void 0===e&&(e=function(t){return j(new Error(\"Promise does not support operation: \"+t))}),void 0===n&&(n=function(){return{state:\"unknown\"}});var r=z(y.prototype);if(r.promiseDispatch=function(n,i,o){var u;try{u=t[i]?t[i].apply(r,o):e.call(r,i,o)}catch(t){u=j(t)}n&&n(u)},r.inspect=n,n){var i=n();\"rejected\"===i.state&&(r.exception=i.reason),r.valueOf=function(){var t=n();return\"pending\"===t.state||\"rejected\"===t.state?r:t.value}}return r}function d(t,e,n,r){return c(t).then(e,n,r)}function v(t){if(g(t)){var e=t.inspect();if(\"fulfilled\"===e.state)return e.value}return t}function g(t){return t instanceof y}function b(t){return n(t)&&\"function\"==typeof t.then}function m(){W.length=0,H.length=0,G||(G=!0)}function w(e,n){G&&(\"object\"==typeof t&&\"function\"==typeof t.emit&&c.nextTick.runAfter(function(){-1!==M(H,e)&&(t.emit(\"unhandledRejection\",n,e),J.push(e))}),H.push(e),n&&void 0!==n.stack?W.push(n.stack):W.push(\"(no stack) \"+n))}function _(e){if(G){var n=M(H,e);-1!==n&&(\"object\"==typeof t&&\"function\"==typeof t.emit&&c.nextTick.runAfter(function(){var r=M(J,e);-1!==r&&(t.emit(\"rejectionHandled\",W[n],e),J.splice(r,1))}),H.splice(n,1),W.splice(n,1))}}function j(t){var e=y({when:function(e){return e&&_(this),e?e(t):this}},function(){return this},function(){return{state:\"rejected\",reason:t}});return w(e,t),e}function x(t){return y({when:function(){return t},get:function(e){return t[e]},set:function(e,n){t[e]=n},delete:function(e){delete t[e]},post:function(e,n){return null===e||void 0===e?t.apply(void 0,n):t[e].apply(t,n)},apply:function(e,n){return t.apply(e,n)},keys:function(){return q(t)}},void 0,function(){return{state:\"fulfilled\",value:t}})}function O(t){var e=l();return c.nextTick(function(){try{t.then(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}}),e.promise}function k(t,e,n){return c(t).spread(e,n)}function E(t,e,n){return c(t).dispatch(e,n)}function A(t){return d(t,function(t){var e=0,n=l();return N(t,function(r,i,o){var u;g(i)&&\"fulfilled\"===(u=i.inspect()).state?t[o]=u.value:(++e,d(i,function(r){t[o]=r,0==--e&&n.resolve(t)},n.reject,function(t){n.notify({index:o,value:t})}))},void 0),0===e&&n.resolve(t),n.promise})}function S(t){if(0===t.length)return c.resolve();var e=c.defer(),n=0;return N(t,function(r,i,o){var u=t[o];n++,d(u,function(t){e.resolve(t)},function(t){0==--n&&(t.message=\"Q can't get fulfillment value from any promise, all promises were rejected. Last error message: \"+t.message,e.reject(t))},function(t){e.notify({index:o,value:t})})},void 0),e.promise}function I(t){return d(t,function(t){return t=D(t,c),d(A(D(t,function(t){return d(t,L,L)})),function(){return t})})}var T=!1;try{throw new Error}catch(t){T=!!t.stack}var P,B,C=f(),L=function(){},U=function(){function e(){for(var t,e;r.next;)t=(r=r.next).task,r.task=void 0,(e=r.domain)&&(r.domain=void 0,e.enter()),n(t,e);for(;s.length;)n(t=s.pop());o=!1}function n(t,n){try{t()}catch(t){if(a)throw n&&n.exit(),setTimeout(e,0),n&&n.enter(),t;setTimeout(function(){throw t},0)}n&&n.exit()}var r={task:void 0,next:null},i=r,o=!1,u=void 0,a=!1,s=[];if(U=function(e){i=i.next={task:e,domain:a&&t.domain,next:null},o||(o=!0,u())},\"object\"==typeof t&&\"[object process]\"===t.toString()&&t.nextTick)a=!0,u=function(){t.nextTick(e)};else if(\"function\"==typeof setImmediate)u=\"undefined\"!=typeof window?setImmediate.bind(window,e):function(){setImmediate(e)};else if(\"undefined\"!=typeof MessageChannel){var f=new MessageChannel;f.port1.onmessage=function(){u=c,f.port1.onmessage=e,e()};var c=function(){f.port2.postMessage(0)};u=function(){setTimeout(e,0),c()}}else u=function(){setTimeout(e,0)};return U.runAfter=function(t){s.push(t),o||(o=!0,u())},U}(),R=Function.call,$=e(Array.prototype.slice),N=e(Array.prototype.reduce||function(t,e){var n=0,r=this.length;if(1===arguments.length)for(;;){if(n in this){e=this[n++];break}if(++n>=r)throw new TypeError}for(;n<r;n++)n in this&&(e=t(e,this[n],n));return e}),M=e(Array.prototype.indexOf||function(t){for(var e=0;e<this.length;e++)if(this[e]===t)return e;return-1}),D=e(Array.prototype.map||function(t,e){var n=this,r=[];return N(n,function(i,o,u){r.push(t.call(e,o,u,n))},void 0),r}),z=Object.create||function(t){function e(){}return e.prototype=t,new e},F=Object.defineProperty||function(t,e,n){return t[e]=n.value,t},Y=e(Object.prototype.hasOwnProperty),q=Object.keys||function(t){var e=[];for(var n in t)Y(t,n)&&e.push(n);return e},V=e(Object.prototype.toString);B=\"undefined\"!=typeof ReturnValue?ReturnValue:function(t){this.value=t};var Q=\"From previous event:\";c.resolve=c,c.nextTick=U,c.longStackSupport=!1;var K=1;\"object\"==typeof t&&t&&t.env&&t.env.Q_DEBUG&&(c.longStackSupport=!0),c.defer=l,l.prototype.makeNodeResolver=function(){var t=this;return function(e,n){e?t.reject(e):arguments.length>2?t.resolve($(arguments,1)):t.resolve(n)}},c.Promise=p,c.promise=p,p.race=h,p.all=A,p.reject=j,p.resolve=c,c.passByCopy=function(t){return t},y.prototype.passByCopy=function(){return this},c.join=function(t,e){return c(t).join(e)},y.prototype.join=function(t){return c([this,t]).spread(function(t,e){if(t===e)return t;throw new Error(\"Q can't join: not the same: \"+t+\" \"+e)})},c.race=h,y.prototype.race=function(){return this.then(c.race)},c.makePromise=y,y.prototype.toString=function(){return\"[object Promise]\"},y.prototype.then=function(t,e,n){function r(e){try{return\"function\"==typeof t?t(e):e}catch(t){return j(t)}}function o(t){if(\"function\"==typeof e){i(t,a);try{return e(t)}catch(t){return j(t)}}return j(t)}function u(t){return\"function\"==typeof n?n(t):t}var a=this,s=l(),f=!1;return c.nextTick(function(){a.promiseDispatch(function(t){f||(f=!0,s.resolve(r(t)))},\"when\",[function(t){f||(f=!0,s.resolve(o(t)))}])}),a.promiseDispatch(void 0,\"when\",[void 0,function(t){var e,n=!1;try{e=u(t)}catch(t){if(n=!0,!c.onerror)throw t;c.onerror(t)}n||s.notify(e)}]),s.promise},c.tap=function(t,e){return c(t).tap(e)},y.prototype.tap=function(t){return t=c(t),this.then(function(e){return t.fcall(e).thenResolve(e)})},c.when=d,y.prototype.thenResolve=function(t){return this.then(function(){return t})},c.thenResolve=function(t,e){return c(t).thenResolve(e)},y.prototype.thenReject=function(t){return this.then(function(){throw t})},c.thenReject=function(t,e){return c(t).thenReject(e)},c.nearer=v,c.isPromise=g,c.isPromiseAlike=b,c.isPending=function(t){return g(t)&&\"pending\"===t.inspect().state},y.prototype.isPending=function(){return\"pending\"===this.inspect().state},c.isFulfilled=function(t){return!g(t)||\"fulfilled\"===t.inspect().state},y.prototype.isFulfilled=function(){return\"fulfilled\"===this.inspect().state},c.isRejected=function(t){return g(t)&&\"rejected\"===t.inspect().state},y.prototype.isRejected=function(){return\"rejected\"===this.inspect().state};var W=[],H=[],J=[],G=!0;c.resetUnhandledRejections=m,c.getUnhandledReasons=function(){return W.slice()},c.stopUnhandledRejectionTracking=function(){m(),G=!1},m(),c.reject=j,c.fulfill=x,c.master=function(t){return y({isDef:function(){}},function(e,n){return E(t,e,n)},function(){return c(t).inspect()})},c.spread=k,y.prototype.spread=function(t,e){return this.all().then(function(e){return t.apply(void 0,e)},e)},c.async=function(t){return function(){function e(t,e){var u;if(\"undefined\"==typeof StopIteration){try{u=n[t](e)}catch(t){return j(t)}return u.done?c(u.value):d(u.value,i,o)}try{u=n[t](e)}catch(t){return r(t)?c(t.value):j(t)}return d(u,i,o)}var n=t.apply(this,arguments),i=e.bind(e,\"next\"),o=e.bind(e,\"throw\");return i()}},c.spawn=function(t){c.done(c.async(t)())},c.return=function(t){throw new B(t)},c.promised=function(t){return function(){return k([this,A(arguments)],function(e,n){return t.apply(e,n)})}},c.dispatch=E,y.prototype.dispatch=function(t,e){var n=this,r=l();return c.nextTick(function(){n.promiseDispatch(r.resolve,t,e)}),r.promise},c.get=function(t,e){return c(t).dispatch(\"get\",[e])},y.prototype.get=function(t){return this.dispatch(\"get\",[t])},c.set=function(t,e,n){return c(t).dispatch(\"set\",[e,n])},y.prototype.set=function(t,e){return this.dispatch(\"set\",[t,e])},c.del=c.delete=function(t,e){return c(t).dispatch(\"delete\",[e])},y.prototype.del=y.prototype.delete=function(t){return this.dispatch(\"delete\",[t])},c.mapply=c.post=function(t,e,n){return c(t).dispatch(\"post\",[e,n])},y.prototype.mapply=y.prototype.post=function(t,e){return this.dispatch(\"post\",[t,e])},c.send=c.mcall=c.invoke=function(t,e){return c(t).dispatch(\"post\",[e,$(arguments,2)])},y.prototype.send=y.prototype.mcall=y.prototype.invoke=function(t){return this.dispatch(\"post\",[t,$(arguments,1)])},c.fapply=function(t,e){return c(t).dispatch(\"apply\",[void 0,e])},y.prototype.fapply=function(t){return this.dispatch(\"apply\",[void 0,t])},c.try=c.fcall=function(t){return c(t).dispatch(\"apply\",[void 0,$(arguments,1)])},y.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,$(arguments)])},c.fbind=function(t){var e=c(t),n=$(arguments,1);return function(){return e.dispatch(\"apply\",[this,n.concat($(arguments))])}},y.prototype.fbind=function(){var t=this,e=$(arguments);return function(){return t.dispatch(\"apply\",[this,e.concat($(arguments))])}},c.keys=function(t){return c(t).dispatch(\"keys\",[])},y.prototype.keys=function(){return this.dispatch(\"keys\",[])},c.all=A,y.prototype.all=function(){return A(this)},c.any=S,y.prototype.any=function(){return S(this)},c.allResolved=function(t,e,n){return function(){return\"undefined\"!=typeof console&&\"function\"==typeof console.warn&&console.warn(e+\" is deprecated, use \"+n+\" instead.\",new Error(\"\").stack),t.apply(t,arguments)}}(I,\"allResolved\",\"allSettled\"),y.prototype.allResolved=function(){return I(this)},c.allSettled=function(t){return c(t).allSettled()},y.prototype.allSettled=function(){return this.then(function(t){return A(D(t,function(t){function e(){return t.inspect()}return(t=c(t)).then(e,e)}))})},c.fail=c.catch=function(t,e){return c(t).then(void 0,e)},y.prototype.fail=y.prototype.catch=function(t){return this.then(void 0,t)},c.progress=function(t,e){return c(t).then(void 0,void 0,e)},y.prototype.progress=function(t){return this.then(void 0,void 0,t)},c.fin=c.finally=function(t,e){return c(t).finally(e)},y.prototype.fin=y.prototype.finally=function(t){if(!t||\"function\"!=typeof t.apply)throw new Error(\"Q can't apply finally callback\");return t=c(t),this.then(function(e){return t.fcall().then(function(){return e})},function(e){return t.fcall().then(function(){throw e})})},c.done=function(t,e,n,r){return c(t).done(e,n,r)},y.prototype.done=function(e,n,r){var o=function(t){c.nextTick(function(){if(i(t,u),!c.onerror)throw t;c.onerror(t)})},u=e||n||r?this.then(e,n,r):this;\"object\"==typeof t&&t&&t.domain&&(o=t.domain.bind(o)),u.then(void 0,o)},c.timeout=function(t,e,n){return c(t).timeout(e,n)},y.prototype.timeout=function(t,e){var n=l(),r=setTimeout(function(){e&&\"string\"!=typeof e||((e=new Error(e||\"Timed out after \"+t+\" ms\")).code=\"ETIMEDOUT\"),n.reject(e)},t);return this.then(function(t){clearTimeout(r),n.resolve(t)},function(t){clearTimeout(r),n.reject(t)},n.notify),n.promise},c.delay=function(t,e){return void 0===e&&(e=t,t=void 0),c(t).delay(e)},y.prototype.delay=function(t){return this.then(function(e){var n=l();return setTimeout(function(){n.resolve(e)},t),n.promise})},c.nfapply=function(t,e){return c(t).nfapply(e)},y.prototype.nfapply=function(t){var e=l(),n=$(t);return n.push(e.makeNodeResolver()),this.fapply(n).fail(e.reject),e.promise},c.nfcall=function(t){var e=$(arguments,1);return c(t).nfapply(e)},y.prototype.nfcall=function(){var t=$(arguments),e=l();return t.push(e.makeNodeResolver()),this.fapply(t).fail(e.reject),e.promise},c.nfbind=c.denodeify=function(t){if(void 0===t)throw new Error(\"Q can't wrap an undefined function\");var e=$(arguments,1);return function(){var n=e.concat($(arguments)),r=l();return n.push(r.makeNodeResolver()),c(t).fapply(n).fail(r.reject),r.promise}},y.prototype.nfbind=y.prototype.denodeify=function(){var t=$(arguments);return t.unshift(this),c.denodeify.apply(void 0,t)},c.nbind=function(t,e){var n=$(arguments,2);return function(){var r=n.concat($(arguments)),i=l();return r.push(i.makeNodeResolver()),c(function(){return t.apply(e,arguments)}).fapply(r).fail(i.reject),i.promise}},y.prototype.nbind=function(){var t=$(arguments,0);return t.unshift(this),c.nbind.apply(void 0,t)},c.nmapply=c.npost=function(t,e,n){return c(t).npost(e,n)},y.prototype.nmapply=y.prototype.npost=function(t,e){var n=$(e||[]),r=l();return n.push(r.makeNodeResolver()),this.dispatch(\"post\",[t,n]).fail(r.reject),r.promise},c.nsend=c.nmcall=c.ninvoke=function(t,e){var n=$(arguments,2),r=l();return n.push(r.makeNodeResolver()),c(t).dispatch(\"post\",[e,n]).fail(r.reject),r.promise},y.prototype.nsend=y.prototype.nmcall=y.prototype.ninvoke=function(t){var e=$(arguments,1),n=l();return e.push(n.makeNodeResolver()),this.dispatch(\"post\",[t,e]).fail(n.reject),n.promise},c.nodeify=function(t,e){return c(t).nodeify(e)},y.prototype.nodeify=function(t){if(!t)return this;this.then(function(e){c.nextTick(function(){t(null,e)})},function(e){c.nextTick(function(){t(e)})})},c.noConflict=function(){throw new Error(\"Q.noConflict only works when Q is used as a global\")};var X=f();return c})}).call(this,t(\"_process\"))},{_process:95}],97:[function(t,e,n){\"use strict\";e.exports=2147483647},{}],98:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\"),i=t(\"./max-timeout\");e.exports=function(t){if((t=r(t))>i)throw new TypeError(t+\" exceeds maximum possible timeout\");return t}},{\"./max-timeout\":97,\"es5-ext/number/to-pos-integer\":44}]},{},[8])(8)});\n"
			},
			{
				"name": "MathDecimalAdjustment.js",
				"source": "// MathDecimalAdjustment.js\n// Closure\n(function() {\n  /**\n   * Decimal adjustment of a number.\n   *\n   * @param {String}  type  The type of adjustment.\n   * @param {Number}  value The number.\n   * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n   * @returns {Number} The adjusted value.\n   */\n  function decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n\n  // Decimal round\n  if (!Math.round10) {\n    Math.round10 = function(value, exp) {\n      return decimalAdjust('round', value, exp);\n    };\n  }\n  // Decimal floor\n  if (!Math.floor10) {\n    Math.floor10 = function(value, exp) {\n      return decimalAdjust('floor', value, exp);\n    };\n  }\n  // Decimal ceil\n  if (!Math.ceil10) {\n    Math.ceil10 = function(value, exp) {\n      return decimalAdjust('ceil', value, exp);\n    };\n  }\n})();\n/*\n//  Round\n    Math.round10(55.55, -1);   // 55.6\n    Math.round10(55.549, -1);  // 55.5\n    Math.round10(55, 1);       // 60\n    Math.round10(54.9, 1);     // 50\n    Math.round10(-55.55, -1);  // -55.5 -- round works towards +8 when in-between two values\n    Math.round10(-55.551, -1); // -55.6\n    Math.round10(-55, 1);      // -50 -- round works towards +8 when in-between two values\n    Math.round10(-55.1, 1);    // -60\n    Math.round10(1.005, -2);   // 1.01 -- compare this with Math.round(1.005*100)/100 above\n    Math.round10(-1.005, -2);  // -1.0 -- round works towards +8 when exactly in-between two values\n    // Floor\n    Math.floor10(55.59, -1);   // 55.5\n    Math.floor10(59, 1);       // 50\n    Math.floor10(-55.51, -1);  // -55.6 -- floor is always lower than or equal to floored number: -55.6 < -55.51\n    Math.floor10(-51, 1);      // -60 -- ditto\n    // Ceil\n    Math.ceil10(55.51, -1);    // 55.6\n    Math.ceil10(51, 1);        // 60\n    Math.ceil10(-55.59, -1);   // -55.5 -- ceil is always equal or above ceiled number: -55.5 > -55.59\n    Math.ceil10(-59, 1);       // -59 -- ditto\n*/\n"
			},
			{
				"name": "shader.js",
				"source": "//  shader.js\n\nvertexShader = [\n\n\t\"attribute vec4 tangent;\",\n\n\t\"uniform float time;\",\n\t\"uniform vec2 repeat;\",\n\t\"uniform float useNormal;\",\n\t\"uniform float useRim;\",\n\n\t\"varying vec2 vUv;\",\n\t\"varying vec3 vTangent;\",\n\t\"varying vec3 vBinormal;\",\n\t\"varying vec3 vNormal;\",\n\t\"varying vec3 vEye;\",\n\t\"varying vec3 vU;\",\n\t\"varying vec2 vN;\",\n\n\t\"void main() {\",\n\n\t\"vU = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\",\n\n\t\"if( useNormal == 0. ) {\",\n\t\"vec3 n = normalize( normalMatrix * normal );\",\n\t\"vec3 r = reflect( vU, n );\",\n\t\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\",\n\t\"vN = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\",\n\t\"} else {\",\n\t\"vN = vec2( 0. );\",\n\t\"}\",\n\n\t\"vUv = repeat * uv;\",\n\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\"vNormal = normalize( normalMatrix * normal );\",\n\t\"if( useNormal == 1. ) {\",\n\t\"vTangent = normalize( normalMatrix * tangent.xyz );\",\n\t\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\n\t\"} else {\",\n\t\"vTangent = vec3( 0. );\",\n\t\"vBinormal = vec3( 0. );\",\n\t\"}\",\n\n\t\"if( useRim > 0. ) {\",\n\t\"vEye = ( modelViewMatrix * vec4( position, 1.0 ) ).xyz;\",\n\t\"} else {\",\n\t\"vEye = vec3( 0. );\",\n\t\"}\",\n\t\"}\"\n].join(\" \");\n\nfragmentShader = [\n\n\t\"uniform float time;\",\n\t\"uniform float bump;\",\n\t\"uniform sampler2D tNormal;\",\n\t\"uniform sampler2D tMatCap;\",\n\t\"uniform float noise;\",\n\t\"uniform float useNormal;\",\n\t\"uniform float useRim;\",\n\t\"uniform float rimPower;\",\n\t\"uniform float useScreen;\",\n\t\"uniform float normalScale;\",\n\t\"uniform float normalRepeat;\",\n\n\t\"varying vec2 vUv;\",\n\t\"varying vec3 vTangent;\",\n\t\"varying vec3 vBinormal;\",\n\t\"varying vec3 vNormal;\",\n\t\"varying vec3 vEye;\",\n\t\"varying vec3 vU;\",\n\t\"varying vec2 vN;\",\n\n\t\"float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}\",\n\n\t\"void main() {\",\n\n\t\"vec3 finalNormal = vNormal;\",\n\t\"vec2 calculatedNormal = vN;\",\n\n\t\"if( useNormal == 1. ) {\",\n\t\"vec3 normalTex = texture2D( tNormal, vUv * normalRepeat ).xyz * 2.0 - 1.0;\",\n\t\"normalTex.xy *= normalScale;\",\n\t\"normalTex.y *= -1.;\",\n\t\"normalTex = normalize( normalTex );\",\n\t\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\n\t\"finalNormal = tsb * normalTex;\",\n\n\t\"vec3 r = reflect( vU, normalize( finalNormal ) );\",\n\t\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\",\n\t\"calculatedNormal = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\",\n\t\"}\",\n\n\t\"vec3 base = texture2D( tMatCap, calculatedNormal ).rgb;\",\n\n\t// rim lighting\n\n\t\"if( useRim > 0. ) {\",\n\t\"float f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );\",\n\t\"f = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\",\n\t\"base += vec3( f );\",\n\t\"}\",\n\n\t// screen blending\n\n\t\"if( useScreen == 1. ) {\",\n\t\"base = vec3( 1. ) - ( vec3( 1. ) - base ) * ( vec3( 1. ) - base );\",\n\t\"}\",\n\n\t// noise \n\n\t\"base += noise * ( .5 - random( vec3( 1. ), length( gl_FragCoord ) ) );\",\n\n\t\"gl_FragColor = vec4( base, 1. );\",\n\t\"}\",\n].join(\"\");\n\nfunction ShaderMaterial(normalMap, matcapMap, callback){\n\treturn new Promise( function(resolve, reject){\n\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\tuniforms: { \n\t\t\t\ttNormal: { type: \"t\", value: normalMap },\n\t\t\t\ttMatCap: { type: \"t\", value: matcapMap },\n\t\t\t\ttime: { type: \"f\", value: 0 },\n\t\t\t\tbump: { type: \"f\", value: 0 },\n\t\t\t\tnoise: { type: \"f\", value: 0.04 },\n\t\t\t\trepeat: { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\t\t\t\tuseNormal: { type: \"f\", value: 0 },\n\t\t\t\tuseRim: { type: \"f\", value: 0 },\n\t\t\t\trimPower: { type: \"f\", value: 0 },\n\t\t\t\tuseScreen: { type: \"f\", value: 0 },\n\t\t\t\tnormalScale: { type: \"f\", value: 1 },\n\t\t\t\tnormalRepeat: { type: \"f\", value: 1 }\n\t\t\t},\n\t\t\tvertexShader: vertexShader,       //  document.getElementById( \"vertexShader\" ).textContent,\n\t\t\tfragmentShader: fragmentShader,   //  document.getElementById( \"fragmentShader\" ).textContent,\n\t\t\tshading: THREE.SmoothShading,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\n\t\tmaterial.uniforms.tMatCap.value.wrapS = material.uniforms.tMatCap.value.wrapT = THREE.ClampToEdgeWrapping;\n\t\tmaterial.uniforms.tNormal.value.wrapS = material.uniforms.tNormal.value.wrapT = THREE.RepeatWrapping;\n\n\t\tmaterial.uniforms.tMatCap.value.needsUpdate = true;\n\t\tmaterial.uniforms.tNormal.value.needsUpdate = true;\n\n\t\tif ( !!callback ) callback( material );\n\n\t\tresolve( material );\n\t});\n}\n\n"
			},
			{
				"name": "watch.js",
				"source": "/**\n * DEVELOPED BY\n * GIL LOPES BUENO\n * gilbueno.mail@gmail.com\n *\n * WORKS WITH:\n * IE8*, IE 9+, FF 4+, SF 5+, WebKit, CH 7+, OP 12+, BESEN, Rhino 1.7+\n * For IE8 (and other legacy browsers) WatchJS will use dirty checking  \n *\n * FORK:\n * https://github.com/melanke/Watch.JS\n *\n * LICENSE: MIT\n */\n\n\"use strict\";\n(function (factory) {\n    if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else {\n        // Browser globals\n        window.WatchJS = factory();\n        window.watch = window.WatchJS.watch;\n        window.unwatch = window.WatchJS.unwatch;\n        window.callWatchers = window.WatchJS.callWatchers;\n    }\n}(function () {\n\n    var WatchJS = {\n        noMore: false,        // use WatchJS.suspend(obj) instead\n        useDirtyCheck: false, // use only dirty checking to track changes.\n        preserveExistingSetters: false\n    },\n    lengthsubjects = [];\n    \n    var dirtyChecklist = [];\n    var pendingChanges = []; // used coalesce changes from defineProperty and __defineSetter__\n    \n    var supportDefineProperty = false;\n    try {\n        supportDefineProperty = Object.defineProperty && Object.defineProperty({},'x', {});\n    } catch(ex) {  /* not supported */  }\n\n    var isFunction = function (functionToCheck) {\n        var getType = {};\n        return functionToCheck && getType.toString.call(functionToCheck) == '[object Function]';\n    };\n\n    var isInt = function (x) {\n        return x % 1 === 0;\n    };\n\n    var isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    var isObject = function(obj) {\n        return {}.toString.apply(obj) === '[object Object]';\n    };\n    \n    var getObjDiff = function(a, b){\n        var aplus = [],\n        bplus = [];\n\n        if(!(typeof a == \"string\") && !(typeof b == \"string\")){\n\n            if (isArray(a) && b) {\n                for (var i=0; i<a.length; i++) {\n                    if (b[i] === undefined) aplus.push(i);\n                }\n            } else {\n                for(var i in a){\n                    if (a.hasOwnProperty(i)) {\n                        if(b && !b.hasOwnProperty(i)) {\n                            aplus.push(i);\n                        }\n                    }\n                }\n            }\n\n            if (isArray(b) && a) {\n                for (var j=0; j<b.length; j++) {\n                    if (a[j] === undefined) bplus.push(j);\n                }\n            } else {\n                for(var j in b){\n                    if (b.hasOwnProperty(j)) {\n                        if(a && !a.hasOwnProperty(j)) {\n                            bplus.push(j);\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            added: aplus,\n            removed: bplus\n        }\n    };\n\n    var clone = function(obj){\n\n        if (null == obj || \"object\" != typeof obj) {\n            return obj;\n        }\n\n        var copy = obj.constructor();\n\n        for (var attr in obj) {\n            copy[attr] = obj[attr];\n        }\n\n        return copy;        \n\n    }\n\n    var getExistingSetter = function (obj, propName) {\n        if (WatchJS.preserveExistingSetters) {\n            var existing = Object.getOwnPropertyDescriptor(obj, propName);\n            return existing.set;\n        }\n\n        return undefined;\n    }\n\n    var defineGetAndSet = function (obj, propName, getter, setter) {\n        try {\n            var existingSetter = getExistingSetter(obj, propName);\n            Object.defineProperty(obj, propName, {\n                get: getter,\n                set: function(value) {\n                    setter.call(this, value, true); // coalesce changes\n                    if (existingSetter) {\n                        existingSetter(value);\n                    }\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n        catch(e1) {\n            try{\n                Object.prototype.__defineGetter__.call(obj, propName, getter);\n                Object.prototype.__defineSetter__.call(obj, propName, function(value) {\n                    setter.call(this,value,true); // coalesce changes\n                });\n            }\n            catch(e2) {\n                observeDirtyChanges(obj,propName,setter);\n                //throw new Error(\"watchJS error: browser not supported :/\")\n            }\n        }\n\n    };\n\n    var defineProp = function (obj, propName, value) {\n        try {\n            Object.defineProperty(obj, propName, {\n                enumerable: false,\n                configurable: true,\n                writable: false,\n                value: value\n            });\n        } catch(error) {\n            obj[propName] = value;\n        }\n    };\n\n    var observeDirtyChanges = function(obj,propName,setter) {\n        dirtyChecklist[dirtyChecklist.length] = {\n            prop:       propName,\n            object:     obj,\n            orig:       clone(obj[propName]),\n            callback:   setter\n        }        \n    }\n    \n    var watch = function () {\n\n        if (isFunction(arguments[1])) {\n            watchAll.apply(this, arguments);\n        } else if (isArray(arguments[1])) {\n            watchMany.apply(this, arguments);\n        } else {\n            watchOne.apply(this, arguments);\n        }\n\n    };\n\n\n    var watchAll = function (obj, watcher, level, addNRemove) {\n\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if(isArray(obj)) {\n            defineWatcher(obj, \"__watchall__\", watcher, level); // watch all changes on the array\n            if (level===undefined||level > 0) {\n                for (var prop = 0; prop < obj.length; prop++) { // watch objects in array\n                   watchAll(obj[prop],watcher,level, addNRemove);\n                }\n            }\n        } \n        else {\n            var prop,props = [];\n            for (prop in obj) { //for each attribute if obj is an object\n                if (prop == \"$val\" || (!supportDefineProperty && prop === 'watchers')) {\n                    continue;\n                }\n\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                    props.push(prop); //put in the props\n                }\n            }\n            watchMany(obj, props, watcher, level, addNRemove); //watch all items of the props\n        }\n\n\n        if (addNRemove) {\n            pushToLengthSubjects(obj, \"$$watchlengthsubjectroot\", watcher, level);\n        }\n    };\n\n\n    var watchMany = function (obj, props, watcher, level, addNRemove) {\n\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        for (var i=0; i<props.length; i++) { //watch each property\n            var prop = props[i];\n            watchOne(obj, prop, watcher, level, addNRemove);\n        }\n\n    };\n\n    var watchOne = function (obj, prop, watcher, level, addNRemove) {\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if(isFunction(obj[prop])) { //dont watch if it is a function\n            return;\n        }\n        if(obj[prop] != null && (level === undefined || level > 0)){\n            watchAll(obj[prop], watcher, level!==undefined? level-1 : level); //recursively watch all attributes of this\n        }\n\n        defineWatcher(obj, prop, watcher, level);\n\n        if(addNRemove && (level === undefined || level > 0)){\n            pushToLengthSubjects(obj, prop, watcher, level);\n        }\n\n    };\n\n    var unwatch = function () {\n\n        if (isFunction(arguments[1])) {\n            unwatchAll.apply(this, arguments);\n        } else if (isArray(arguments[1])) {\n            unwatchMany.apply(this, arguments);\n        } else {\n            unwatchOne.apply(this, arguments);\n        }\n\n    };\n\n    var unwatchAll = function (obj, watcher) {\n\n        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if (isArray(obj)) {\n            var props = ['__watchall__'];\n            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array\n                props.push(prop); //put in the props\n            }\n            unwatchMany(obj, props, watcher); //watch all itens of the props\n        } else {\n            var unwatchPropsInObject = function (obj2) {\n                var props = [];\n                for (var prop2 in obj2) { //for each attribute if obj is an object\n                    if (obj2.hasOwnProperty(prop2)) {\n                        if (obj2[prop2] instanceof Object) {\n                            unwatchPropsInObject(obj2[prop2]); //recurs into object props\n                        } else {\n                            props.push(prop2); //put in the props\n                        }\n                    }\n                }\n                unwatchMany(obj2, props, watcher); //unwatch all of the props\n            };\n            unwatchPropsInObject(obj);\n        }\n    };\n\n\n    var unwatchMany = function (obj, props, watcher) {\n\n        for (var prop2 in props) { //watch each attribute of \"props\" if is an object\n            if (props.hasOwnProperty(prop2)) {\n                unwatchOne(obj, props[prop2], watcher);\n            }\n        }\n    };\n\n    var timeouts = [],\n        timerID = null;\n    function clearTimerID() {\n        timerID = null;\n        for(var i=0; i< timeouts.length; i++) {\n            timeouts[i]();\n        }\n        timeouts.length = 0;\n    }\n    var getTimerID= function () {\n        if (!timerID)  {\n            timerID = setTimeout(clearTimerID);\n        }\n        return timerID;\n    }\n    var registerTimeout = function(fn) { // register function to be called on timeout\n        if (timerID==null) getTimerID();\n        timeouts[timeouts.length] = fn;\n    }\n    \n    // Track changes made to an array, object or an object's property \n    // and invoke callback with a single change object containing type, value, oldvalue and array splices\n    // Syntax: \n    //      trackChange(obj, callback, recursive, addNRemove)\n    //      trackChange(obj, prop, callback, recursive, addNRemove)\n    var trackChange = function() {\n        var fn = (isFunction(arguments[2])) ? trackProperty : trackObject ;\n        fn.apply(this,arguments);\n    }\n\n    // track changes made to an object and invoke callback with a single change object containing type, value and array splices\n    var trackObject= function(obj, callback, recursive, addNRemove) {\n        var change = null,lastTimerID = -1;\n        var isArr = isArray(obj);\n        var level,fn = function(prop, action, newValue, oldValue) {\n            var timerID = getTimerID();\n            if (lastTimerID!==timerID) { // check if timer has changed since last update\n                lastTimerID = timerID;\n                change = {\n                    type: 'update'\n                }\n                change['value'] = obj;\n                change['splices'] = null;\n                registerTimeout(function() {\n                    callback.call(this,change);\n                    change = null;\n                });\n            }\n            // create splices for array changes\n            if (isArr && obj === this && change !== null)  {                \n                if (action==='pop'||action==='shift') {\n                    newValue = [];\n                    oldValue = [oldValue];\n                }\n                else if (action==='push'||action==='unshift') {\n                    newValue = [newValue];\n                    oldValue = [];\n                }\n                else if (action!=='splice') { \n                    return; // return here - for reverse and sort operations we don't need to return splices. a simple update will do\n                }\n                if (!change.splices) change.splices = [];\n                change.splices[change.splices.length] = {\n                    index: prop,\n                    deleteCount: oldValue ? oldValue.length : 0,\n                    addedCount: newValue ? newValue.length : 0,\n                    added: newValue,\n                    deleted: oldValue\n                };\n            }\n\n        }  \n        level = (recursive==true) ? undefined : 0;        \n        watchAll(obj,fn, level, addNRemove);\n    }\n    \n    // track changes made to the property of an object and invoke callback with a single change object containing type, value, oldvalue and splices\n    var trackProperty = function(obj,prop,callback,recursive, addNRemove) { \n        if (obj && prop) {\n            watchOne(obj,prop,function(prop, action, newvalue, oldvalue) {\n                var change = {\n                    type: 'update'\n                }\n                change['value'] = newvalue;\n                change['oldvalue'] = oldvalue;\n                if (recursive && isObject(newvalue)||isArray(newvalue)) {\n                    trackObject(newvalue,callback,recursive, addNRemove);\n                }               \n                callback.call(this,change);\n            },0)\n            \n            if (recursive && isObject(obj[prop])||isArray(obj[prop])) {\n                trackObject(obj[prop],callback,recursive, addNRemove);\n            }                           \n        }\n    }\n    \n    \n    var defineWatcher = function (obj, prop, watcher, level) {\n        var newWatcher = false;\n        var isArr = isArray(obj);\n        \n        if (!obj.watchers) {\n            defineProp(obj, \"watchers\", {});\n            if (isArr) {\n                // watch array functions\n                watchFunctions(obj, function(index,action,newValue, oldValue) {\n                    addPendingChange(obj, index, action,newValue, oldValue);\n                    if (level !== 0 && newValue && (isObject(newValue) || isArray(newValue))) {\n                        var i,n, ln, wAll, watchList = obj.watchers[prop];\n                        if ((wAll = obj.watchers['__watchall__'])) {\n                            watchList = watchList ? watchList.concat(wAll) : wAll;\n                        }\n                        ln = watchList ?  watchList.length : 0;\n                        for (i = 0; i<ln; i++) {\n                            if (action!=='splice') {\n                                watchAll(newValue, watchList[i], (level===undefined)?level:level-1);\n                            }\n                            else {\n                                // watch spliced values\n                                for(n=0; n < newValue.length; n++) {\n                                    watchAll(newValue[n], watchList[i], (level===undefined)?level:level-1);\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        }\n\n        if (!obj.watchers[prop]) {\n            obj.watchers[prop] = [];\n            if (!isArr) newWatcher = true;\n        }\n\n        for (var i=0; i<obj.watchers[prop].length; i++) {\n            if(obj.watchers[prop][i] === watcher){\n                return;\n            }\n        }\n\n        obj.watchers[prop].push(watcher); //add the new watcher to the watchers array\n\n        if (newWatcher) {\n            var val = obj[prop];            \n            var getter = function () {\n                return val;                        \n            };\n\n            var setter = function (newval, delayWatcher) {\n                var oldval = val;\n                val = newval;                \n                if (level !== 0 \n                    && obj[prop] && (isObject(obj[prop]) || isArray(obj[prop]))\n                    && !obj[prop].watchers) {\n                    // watch sub properties\n                    var i,ln = obj.watchers[prop].length; \n                    for(i=0; i<ln; i++) {\n                        watchAll(obj[prop], obj.watchers[prop][i], (level===undefined)?level:level-1);\n                    }\n                }\n\n                //watchFunctions(obj, prop);\n                \n                if (isSuspended(obj, prop)) {\n                    resume(obj, prop);\n                    return;\n                }\n\n                if (!WatchJS.noMore){ // this does not work with Object.observe\n                    //if (JSON.stringify(oldval) !== JSON.stringify(newval)) {\n                    if (oldval !== newval) {\n                        if (!delayWatcher) {\n                            callWatchers(obj, prop, \"set\", newval, oldval);\n                        }\n                        else {\n                            addPendingChange(obj, prop, \"set\", newval, oldval);\n                        }\n                        WatchJS.noMore = false;\n                    }\n                }\n            };\n\n            if (WatchJS.useDirtyCheck) {\n                observeDirtyChanges(obj,prop,setter);\n            }\n            else {\n                defineGetAndSet(obj, prop, getter, setter);\n            }\n        }\n\n    };\n\n    var callWatchers = function (obj, prop, action, newval, oldval) {\n        if (prop !== undefined) {\n            var ln, wl, watchList = obj.watchers[prop];\n            if ((wl = obj.watchers['__watchall__'])) {\n                watchList = watchList ? watchList.concat(wl) : wl;\n            }\n            ln = watchList ? watchList.length : 0;\n            for (var wr=0; wr< ln; wr++) {\n                watchList[wr].call(obj, prop, action, newval, oldval);\n            }\n        } else {\n            for (var prop in obj) {//call all\n                if (obj.hasOwnProperty(prop)) {\n                    callWatchers(obj, prop, action, newval, oldval);\n                }\n            }\n        }\n    };\n\n    var methodNames = ['pop', 'push', 'reverse', 'shift', 'sort', 'slice', 'unshift', 'splice'];\n    var defineArrayMethodWatcher = function (obj, original, methodName, callback) {\n        defineProp(obj, methodName, function () {\n            var index = 0;\n            var i,newValue, oldValue, response;                        \n            // get values before splicing array \n            if (methodName === 'splice') {\n               var start = arguments[0];\n               var end = start + arguments[1];\n               oldValue = obj.slice(start,end);\n               newValue = [];\n               for(i=2;i<arguments.length;i++) {\n                   newValue[i-2] = arguments[i];\n               }\n               index = start;\n            } \n            else {\n                newValue = arguments.length > 0 ? arguments[0] : undefined;\n            } \n\n            response = original.apply(obj, arguments);\n            if (methodName !== 'slice') {\n                if (methodName === 'pop') {\n                    oldValue = response;\n                    index = obj.length;\n                }\n                else if (methodName === 'push') {\n                    index = obj.length-1;\n                }\n                else if (methodName === 'shift') {\n                    oldValue = response;\n                }\n                else if (methodName !== 'unshift' && newValue===undefined) {\n                    newValue = response;\n                }\n                callback.call(obj, index, methodName,newValue, oldValue)\n            }\n            return response;\n        });\n    };\n\n    var watchFunctions = function(obj, callback) {\n\n        if (!isFunction(callback) || !obj || (obj instanceof String) || (!isArray(obj))) {\n            return;\n        }\n\n        for (var i = methodNames.length, methodName; i--;) {\n            methodName = methodNames[i];\n            defineArrayMethodWatcher(obj, obj[methodName], methodName, callback);\n        }\n\n    };\n\n    var unwatchOne = function (obj, prop, watcher) {\n        if (prop) {\n            if (obj.watchers && obj.watchers[prop]) {\n                if (watcher === undefined) {\n                    delete obj.watchers[prop]; // remove all property watchers\n                }\n                else {\n                    for (var i = 0; i < obj.watchers[prop].length; i++) {\n                        var w = obj.watchers[prop][i];\n                        if (w == watcher) {\n                            obj.watchers[prop].splice(i, 1);\n                        }\n                    }\n                }\n            }\n        } else {\n            delete obj.watchers;\n        }\n\n        removeFromLengthSubjects(obj, prop, watcher);\n        removeFromDirtyChecklist(obj, prop);\n    };\n    \n    // suspend watchers until next update cycle\n    var suspend = function(obj, prop) {\n        if (obj.watchers) {\n            var name = '__wjs_suspend__'+(prop!==undefined ? prop : '');\n            obj.watchers[name] = true;\n        }\n    }\n    \n    var isSuspended = function(obj, prop) {\n        return obj.watchers \n               && (obj.watchers['__wjs_suspend__'] || \n                   obj.watchers['__wjs_suspend__'+prop]);\n    }\n    \n    // resumes preivously suspended watchers\n    var resume = function(obj, prop) {\n        registerTimeout(function() {\n            delete obj.watchers['__wjs_suspend__'];\n            delete obj.watchers['__wjs_suspend__'+prop];\n        })\n    }\n\n    var pendingTimerID = null;\n    var addPendingChange = function(obj,prop, mode, newval, oldval) {\n        pendingChanges[pendingChanges.length] = {\n            obj:obj,\n            prop: prop,\n            mode: mode,\n            newval: newval,\n            oldval: oldval\n        };\n        if (pendingTimerID===null) {\n            pendingTimerID = setTimeout(applyPendingChanges);\n        }\n    };\n    \n    \n    var applyPendingChanges = function()  {\n        // apply pending changes\n        var change = null;\n        pendingTimerID = null;\n        for(var i=0;i < pendingChanges.length;i++) {\n            change = pendingChanges[i];\n            callWatchers(change.obj, change.prop, change.mode, change.newval, change.oldval);\n        }\n        if (change) {\n            pendingChanges = [];\n            change = null;\n        }        \n    }\n\n    var loop = function(){\n\n        // check for new or deleted props\n        for(var i=0; i<lengthsubjects.length; i++) {\n\n            var subj = lengthsubjects[i];\n\n            if (subj.prop === \"$$watchlengthsubjectroot\") {\n\n                var difference = getObjDiff(subj.obj, subj.actual);\n\n                if(difference.added.length || difference.removed.length){\n                    if(difference.added.length){\n                        watchMany(subj.obj, difference.added, subj.watcher, subj.level - 1, true);\n                    }\n\n                    subj.watcher.call(subj.obj, \"root\", \"differentattr\", difference, subj.actual);\n                }\n                subj.actual = clone(subj.obj);\n\n\n            } else {\n\n                var difference = getObjDiff(subj.obj[subj.prop], subj.actual);\n\n                if(difference.added.length || difference.removed.length){\n                    if(difference.added.length){\n                        for (var j=0; j<subj.obj.watchers[subj.prop].length; j++) {\n                            watchMany(subj.obj[subj.prop], difference.added, subj.obj.watchers[subj.prop][j], subj.level - 1, true);\n                        }\n                    }\n\n                    callWatchers(subj.obj, subj.prop, \"differentattr\", difference, subj.actual);\n                }\n\n                subj.actual = clone(subj.obj[subj.prop]);\n\n            }\n\n        }\n        \n        // start dirty check\n        var n, value;\n        if (dirtyChecklist.length > 0) {\n            for (var i = 0; i < dirtyChecklist.length; i++) {\n                n = dirtyChecklist[i];\n                value = n.object[n.prop];\n                if (!compareValues(n.orig, value)) {\n                    n.orig = clone(value);\n                    n.callback(value);\n                }\n            }\n        }\n\n    };\n\n    var compareValues =  function(a,b) {\n        var i, state = true;\n        if (a!==b)  {\n            if (isObject(a)) {\n                for(i in a) {\n                    if (!supportDefineProperty && i==='watchers') continue;\n                    if (a[i]!==b[i]) {\n                        state = false;\n                        break;\n                    };\n                }\n            }\n            else {\n                state = false;\n            }\n        }\n        return state;\n    }\n    \n    var pushToLengthSubjects = function(obj, prop, watcher, level){\n\n        var actual;\n\n        if (prop === \"$$watchlengthsubjectroot\") {\n            actual =  clone(obj);\n        } else {\n            actual = clone(obj[prop]);\n        }\n\n        lengthsubjects.push({\n            obj: obj,\n            prop: prop,\n            actual: actual,\n            watcher: watcher,\n            level: level\n        });\n    };\n\n    var removeFromLengthSubjects = function(obj, prop, watcher){\n        for (var i=0; i<lengthsubjects.length; i++) {\n            var subj = lengthsubjects[i];\n\n            if (subj.obj == obj) {\n                if (!prop || subj.prop == prop) {\n                    if (!watcher || subj.watcher == watcher) {\n                        // if we splice off one item at position i\n                        // we need to decrement i as the array is one item shorter\n                        // so when we increment i in the loop statement we\n                        // will land at the correct index.\n                        // if it's not decremented, you won't delete all length subjects\n                        lengthsubjects.splice(i--, 1);\n                    }\n                }\n            }\n        }\n\n    };\n    \n    var removeFromDirtyChecklist = function(obj, prop){\n        var notInUse;\n        for (var i=0; i<dirtyChecklist.length; i++) {\n            var n = dirtyChecklist[i];\n            var watchers = n.object.watchers;\n            notInUse = (\n                n.object == obj \n                && (!prop || n.prop == prop)\n                && watchers\n                && (!prop || !watchers[prop] || watchers[prop].length == 0 )\n            );\n            if (notInUse)  {\n                // we use the same syntax as in removeFromLengthSubjects\n                dirtyChecklist.splice(i--, 1);\n            }\n        }\n\n    };    \n\n    setInterval(loop, 50);\n\n    WatchJS.watch = watch;\n    WatchJS.unwatch = unwatch;\n    WatchJS.callWatchers = callWatchers;\n    WatchJS.suspend = suspend; // suspend watchers    \n    WatchJS.onChange = trackChange;  // track changes made to object or  it's property and return a single change object\n\n    return WatchJS;\n\n}));\n"
			}],
		"BCC3A53B-07C6-4FC3-B308-8F4A3E94469D": [
			{
				"name": "index.js",
				"source": "//\tboilerplate (v1.1)\n\ndebugMode = true;\ndebugMode && console.log( this );\n\nTHREE.Cache.enabled = true;\n\ncontainer = player.dom;\nmouse = new THREE.Vector2();\n//\tclock = new THREE.Clock();\n\nvar fontPath = \"/three/fonts/helvetiker_regular.typeface.json\";\n\nvar rendererHalfWidth  = container.offsetWidth * 0.5;\nvar rendererHalfHeight = container.offsetHeight * 0.5;\n\nfunction init(){\n\twindow.addEventListener( \"resize\", updateHalfWidthHeight )\n}\n\nfunction updateHalfWidthHeight() {\n\trendererHalfWidth  = container.offsetWidth * 0.5;\n\trendererHalfHeight = container.offsetHeight * 0.5;\n}\n\n//\tonMouseMove.\n\nfunction mousemove( event ) {\n\tmouse.x = ( event.clientX - rendererHalfWidth );\n\tmouse.y = ( event.clientY - rendererHalfHeight );\n}\n/*\n//\tUpdate.\nfunction update( event ){\n\t//\tvar time = clock.getElapsedTime();\n}\n*/\n//\tDebug.\n\nfunction stop( event ){\n\twindow.removeEventListener( \"resize\", updateHalfWidthHeight )\n}\n\n//\tHelpers.\n"
			},
			{
				"name": "background.js",
				"source": "//  Background.\n\nsceneBackground([\n\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n]);\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tloader.load( urls, function(texture){\n\t\tscene.background = texture;\n\t\tscene.background.needsUpdate = true;\n\t});\n}\n"
			},
			{
				"name": "groundHelper.js",
				"source": "groundHelper = newGroundHelper(1000, 10);  \n//\taxisCustomHelper = customAxisHelper(5200);\n//\taxisOriginHelper = originAxisHelper(1200);\n\nfunction newGroundHelper(xz, step){\n\tif (!xz) xz = 1000;\n\tif (!step) step = 10;\n\tvar grid = new THREE.GridHelper( xz, step, 0x444444, 0x444444 );\n\tgrid.name = \"GRID\"\n\tgrid.position.y = 0;\n\tscene.add( grid );\n\treturn grid;\n}\n"
			},
			{
				"name": "sunlight.js",
				"source": "//  Shadow Light.\n\nsunLight = new THREE.DirectionalLight( 0xdfebff, 0.75 );\nsunLight.position.set( 0, 500, 300 );\nsunLight.position.multiplyScalar( 1.5 );\nsunLight.castShadow = true;\nsunLight.shadow.mapSize.width  = Math.pow(2, 10); // 2048;\nsunLight.shadow.mapSize.height = Math.pow(2, 10); // 2048;\n\nvar d = 30;\nsunLight.shadow.camera.left = - d;\nsunLight.shadow.camera.right = d;\nsunLight.shadow.camera.top = d;\nsunLight.shadow.camera.bottom = - d;\nsunLight.shadow.camera.far = 10000;\n\nshadowHelper = new THREE.CameraHelper(sunLight.shadow.camera);\nshadowHelper.visible = false;\n\nscene.add( sunLight, shadowHelper  );\n"
			},
			{
				"name": "",
				"source": ""
			},
			{
				"name": "scene-helpers.js",
				"source": "// sceneHelpers.js\n\nfunction toggleHelperVisible(theHelper){\n\ttheHelper.visible = !theHelper.visible;\n}\n\nfunction directionalLight(hexcolor, x, y, z, intensity){\n\tvar light = new THREE.DirectionalLight( hexcolor );\n\tlight.position.set( x, y, z );\n\tlight.intensity = intensity;\n\treturn light;\n}\n\nfunction convertingFromBufferGeometry( object ){\n\tdebugMode && console.log(\"converting from buffer geometry:\", object);\n\tif( object.children ) {\n\t\tfor( child in object.children ) {\n\t\t\tvar t = Date.now();\n\t\t\tobject.children[child].geometry = new THREE.Geometry().fromBufferGeometry( object.children[child].geometry );\n\t\t\tdebugMode && console.log(child, object.children[child].name, \"time:\", Date.now() - t, \"msec.\");\n\t\t}\n\t}\n}\n\nfunction FpsCamera(fov, near, far){\n\tvar camera = new THREE.PerspectiveCamera( fov, window.innerWidth / window.innerHeight, near, far );\n\tcamera.position.set( 0, 11, -113 );\n\tcamera.rotation.set( 0, 0, 0 );\n\tcamera.name = \"FPS_CAMERA\" ;\n\treturn camera;\n}\n\nfunction FpsCameraControls( camera ){\n\tvar controls = new THREE.FirstPersonControls( camera );\n\tcontrols.movementSpeed = 30;\n\tcontrols.lookSpeed = 0.05;\n\tcontrols.noFly = true;\n\tcontrols.autoForward = false;\n\tcontrols.lookVertical = false;\n\tcontrols.enabled = true;\n\treturn controls;\n}\n\nfunction DirectionalLight(hexcolor, x, y, z, intensity){\n\tvar light = new THREE.DirectionalLight( hexcolor );\n\tlight.position.set( x, y, z );\n\tlight.intensity = intensity;\n\tscene.add( light );\n\treturn light;\n}\n\nfunction DirectionalLightsGroup(hexcolor, x, y, z, intensity){\n\tvar group = new THREE.Group();\n\tscene.add(group);\n\tlight0 = new directionalLight(hexcolor, x, y, z, intensity);\n\tlight1 = new directionalLight(hexcolor, x, y, -z, intensity);\n\tlight2 = new directionalLight(hexcolor, -x, y, -z, intensity);\n\tlight3 = new directionalLight(hexcolor, -x, y, z, intensity);\n\tlight4 = new directionalLight(hexcolor, 0, -y, 0, intensity);\n\tgroup.add( light0, light1, light2, light3, light4 );\n\treturn [light0, light1, light2, light3, light4];\n}\n\nfunction groundHelper(xz, step){\n\tif (!xz) xz = 1000;\n\tif (!step) step = 10;\n\tvar grid = new THREE.GridHelper( xz, step, 0x444444, 0x444444 );\n\tgrid.name = \"GRID\"\n\tgrid.position.y = 0;\n\tscene.add( grid );\n\treturn grid;\n}\n\nfunction SkeletonHelper(target){\n\tvar helper = new THREE.SkeletonHelper(target);\n\thelper.material.linewidth = 5;\n\thelper.name = \"ARMATURE_HELPER\";\n\thelper.visible = true;\n\treturn helper;\n}\n\nfunction Skybox( cubemap ) {\n\tscene.background = new THREE.CubeTexture( cubemap );\n\tscene.background.needsUpdate = true;\n}\n\nfunction Skydome( path ){\n\tvar loader = new THREE.TextureLoader();\n\tvar skydomeGmt = new THREE.SphereGeometry( 2000, 64, 32 );\n\tvar skydomeTxr = loader.load( path );\n\tvar skydomeMtl = new THREE.MeshBasicMaterial({\n\t\tmap: skydomeTxr,\n\t\tside: THREE.DoubleSide\n\t});\n\tvar skydome = new THREE.Mesh( skydomeGmt, skydomeMtl );\n\tskydome.scale.y = 0.5;\n\tskydome.name = \"SKYDOME\";\n\tscene.add(skydome);\n\treturn skydome;\n}\n\nfunction customAxisHelper( distance ){\n\tvar group = new THREE.Group();\n\tscene.add(group);\n\n\t//  Lines.\n\tvar geometryAxisXpos = new THREE.Geometry();\n\tvar geometryAxisXneg = new THREE.Geometry();\n\tvar geometryAxisYpos = new THREE.Geometry();\n\tvar geometryAxisYneg = new THREE.Geometry();\n\tvar geometryAxisZpos = new THREE.Geometry();\n\tvar geometryAxisZneg = new THREE.Geometry();\n\n\tvar materialAxisXpos = new THREE.LineBasicMaterial( {color: 0xff0000} );\n\tvar materialAxisXneg = new THREE.LineBasicMaterial( {color: 0xff0000} );\n\tvar materialAxisYpos = new THREE.LineBasicMaterial( {color: 0x00ff00} );\n\tvar materialAxisYneg = new THREE.LineBasicMaterial( {color: 0x00ff00} );\n\tvar materialAxisZpos = new THREE.LineBasicMaterial( {color: 0x0000ff} );\n\tvar materialAxisZneg = new THREE.LineBasicMaterial( {color: 0x0000ff} );\n\n\tgeometryAxisXpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( distance, 0, 0 ) );\n\tgeometryAxisXneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3(-distance, 0, 0 ) );\n\tgeometryAxisYpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, distance, 0 ) );\n\tgeometryAxisYneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0,-distance, 0 ) );\n\tgeometryAxisZpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, distance ) );\n\tgeometryAxisZneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0,-distance ) );\n\n\tvar lineAxisXpos = new THREE.Line( geometryAxisXpos, materialAxisXpos );\n\tvar lineAxisXneg = new THREE.Line( geometryAxisXneg, materialAxisXneg );\n\tvar lineAxisYpos = new THREE.Line( geometryAxisYpos, materialAxisYpos );\n\tvar lineAxisYneg = new THREE.Line( geometryAxisYneg, materialAxisYneg );\n\tvar lineAxisZpos = new THREE.Line( geometryAxisZpos, materialAxisZpos );\n\tvar lineAxisZneg = new THREE.Line( geometryAxisZneg, materialAxisZneg );\n\n\tgroup.add( lineAxisXpos );\n\tgroup.add( lineAxisXneg );\n\t//  group.add( lineAxisYpos );\n\t//  group.add( lineAxisYneg );\n\tgroup.add( lineAxisZpos );\n\tgroup.add( lineAxisZneg );\n\tgroup.name = \"AXES\"\n\treturn group;\n}\n\n\nfunction originAxisHelper( distance ){\n\tvar group = new THREE.Group();\n\tvar promise = new Promise( function(resolve, reject){\n\t\tvar loader = new THREE.FontLoader();\n\t\tloader.load( fontPath, function ( response ) {\n\t\t\tvar font = response;\n\t\t\tscene.add(group);\n\n\t\t\t//  Font Material\n\t\t\tvar materialFace = new THREE.MeshBasicMaterial( { color: 0xffffff } );\n\t\t\tvar materialSide = new THREE.MeshBasicMaterial( { color: 0x888888 } );\n\t\t\tvar materialArray = [ materialFace, materialSide ];\n\t\t\tvar material = new THREE.MeshFaceMaterial(materialArray);\n\n\t\t\t//  Text Styles.\n\t\t\th0 = { size: 40, height: 2,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\t\t\th1 = { size: 20, height: 1,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\t\t\th2 = { size: 10, height: 1,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\t\t\th3 = { size: 5,  height: 0.5, curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\n\t\t\t//  Origins Group.\n\t\t\tgroup.add( new Text3D( \"+x\", h1, [2, 2, 5], [ distance, 20, 0], [0, -Math.PI * 0.5, 0]) );\n\t\t\tgroup.add( new Text3D( \"-x\", h1, [2, 2, 5], [-distance, 20, 0], [0,  Math.PI * 0.5, 0]) ); \n\t\t\tgroup.add( new Text3D( \"+z\", h1, [2, 2, 5], [0, 20,  distance], [0, -Math.PI,       0]) ); \n\t\t\tgroup.add( new Text3D( \"-z\", h1, [2, 2, 5], [0, 20, -distance], [0,              0, 0]) ); \n\t\t\tgroup.add( new Text3D( \"+y\", h1, [2, 2, 5], [0,   distance, 0], [ Math.PI * 0.5, 0, 0]) ); \n\t\t\tgroup.add( new Text3D( \"-y\", h1, [2, 2, 5], [0,  -distance, 0], [-Math.PI * 0.5, 0, 0]) ); \n\t\t\tgroup.name = \"ORIGINS\";\n\n\t\t\tresolve(group);  //  return group;\n\n\t\t\tfunction Text3D(text, style, scale, position, rotation){\n\t\t\t\tvar geometry = new THREE.TextGeometry( text, style );\n\t\t\t\tvar mesh = new THREE.Mesh(geometry, material );\n\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\tvar width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\t\t\tmesh.scale.fromArray( scale ); \n\t\t\t\tmesh.geometry.center();\n\t\t\t\tmesh.position.fromArray( position );\n\t\t\t\tmesh.rotation.fromArray( rotation );\n\t\t\t\treturn mesh;\n\t\t\t}\n\n\t\t});\n\n\t});\n\n\tpromise;\n\treturn group;\n}\n\n//  SELECTED EDGES HELPER.\n    \nfunction creatingSelectedEdgesHelpers( object ){\n    debugMode && console.log(\"creating selected edges helpers:\", object);\n    if ( object.children ) {\n        for( child in object.children ) {\n            object.children[child].add( new THREE.EdgesHelper( object.children[child], 0x00ff00, 1 ) );\n            debugMode && console.log(child, object.children[child].name);\n        }\n    }\n}\n\n//  CONVERT FROM BUFFER GEOMETRY.\n\nfunction convertingFromBufferGeometry( object ){\n    if ( object.geometry instanceof THREE.BufferGeometry ) {\n        debugMode && console.log(\"converting object from buffer geometry:\", object );\n        object.geometry = new THREE.Geometry().fromBufferGeometry( object.geometry );\n        debugMode && console.log(object, object.name);\n    } else {\n        debugMode && console.log(\"converting from object buffer geometry:\", \"aborted.\" );\n    }\n}\n\nfunction convertingChildrenFromBufferGeometry( object ){\n    if ( object.children && object.children.length > 0 ) {\n        for( child in object.children ) {\n        //  debugMode && console.log( \"object.children[child]:\", object.children[child] );\n            if ( object.children[child].geometry instanceof THREE.BufferGeometry ){\n                debugMode && console.log(\"converting child from buffer geometry:\", object.children[child] );\n                object.children[child].geometry = new THREE.Geometry().fromBufferGeometry( object.children[child].geometry );\n                debugMode && console.log(child, object.children[child].name);\n            }\n        }\n    } else {\n        debugMode && console.log(\"converting from children buffer geometry:\", \"aborted.\" );\n    }\n}\n\n//  WILDCARD ANY OBJECT AND CHILD OF ROOT OBJECT.\n\nfunction wildcardAnyObjectAndChild( object, callback ){\n// callback: function(item, index){};\n// Return any children of an object and object itself.\n    if ( !!object && !!callback ){\n    //  Object itself.\n        if ( !(object instanceof THREE.Scene) ) callback( object );\n    //  Object children.\n        if ( object.children ) object.children.forEach( function( item, index ){\n            wildcardAnyObjectAndChild( item, callback );\n        });\n    }\n}\n\n//  REMOVE OLD EDGESHELPERS.\n\nfunction removeEdgesHelpers(){\n    scene.children.filter( function(item){\n        return (item instanceof THREE.EdgesHelper);\n    }).forEach( function(item){\n        scene.remove(item);\n        item.geometry.dispose();\n        item.material.dispose();\n    });\n}\n\nfunction removeBoxHelpers(){\n    scene.children.filter( function(item){\n        return (item instanceof THREE.BoxHelper);\n    }).forEach( function(item){\n        scene.remove(item);\n        item.geometry.dispose();\n        item.material.dispose();\n    });\n}\n\nfunction removeBoundHelpers(){\n    scene.children.filter( function(item){\n        return (item instanceof THREE.BoundingBoxHelper);\n    }).forEach( function(item){\n        scene.remove(item);\n        item.geometry.dispose();\n        item.material.dispose();\n    });\n}\n\n"
			}],
		"AA807597-475F-44C0-9BCF-F909388F0C98": [
			{
				"name": "Animations.js",
				"source": "/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Animation = function ( root, data ) {\n\n\tthis.root = root;\n\tthis.data = THREE.AnimationHandler.init( data );\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\n\n\tthis.currentTime = 0;\n\tthis.timeScale = 1;\n\n\tthis.isPlaying = false;\n\tthis.loop = true;\n\tthis.weight = 0;\n\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\n\n};\n\nTHREE.Animation.prototype = {\n\n\tconstructor: THREE.Animation,\n\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\n\n\tplay: function ( startTime, weight ) {\n\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\n\t\tthis.weight = weight !== undefined ? weight : 1;\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.reset();\n\n\t\tTHREE.AnimationHandler.play( this );\n\n\t},\n\n\tstop: function() {\n\n\t\tthis.isPlaying = false;\n\n\t\tTHREE.AnimationHandler.stop( this );\n\n\t},\n\n\treset: function () {\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\n\t\t\tif ( object.animationCache === undefined ) {\n\n\t\t\t\tobject.animationCache = {\n\t\t\t\t\tanimations: {},\n\t\t\t\t\tblending: {\n\t\t\t\t\t\tpositionWeight: 0.0,\n\t\t\t\t\t\tquaternionWeight: 0.0,\n\t\t\t\t\t\tscaleWeight: 0.0\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar name = this.data.name;\n\t\t\tvar animations = object.animationCache.animations;\n\t\t\tvar animationCache = animations[ name ];\n\n\t\t\tif ( animationCache === undefined ) {\n\n\t\t\t\tanimationCache = {\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\n\t\t\t\t\toriginalMatrix: object.matrix\n\t\t\t\t};\n\n\t\t\t\tanimations[ name ] = animationCache;\n\n\t\t\t}\n\n\t\t\t// Get keys to match our current time\n\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\n\n\t\t\t\tvar type = this.keyTypes[ t ];\n\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\n\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n\t\t\t\t}\n\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tresetBlendWeights: function () {\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\t\t\tvar animationCache = object.animationCache;\n\n\t\t\tif ( animationCache !== undefined ) {\n\n\t\t\t\tvar blending = animationCache.blending;\n\n\t\t\t\tblending.positionWeight = 0.0;\n\t\t\t\tblending.quaternionWeight = 0.0;\n\t\t\t\tblending.scaleWeight = 0.0;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function() {\n\n\t\tvar points = [];\n\t\tvar target = new THREE.Vector3();\n\t\tvar newVector = new THREE.Vector3();\n\t\tvar newQuat = new THREE.Quaternion();\n\n\t\t// Catmull-Rom spline\n\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\n\n\t\t\tvar c = [], v3 = [],\n\t\t\tpoint, intPoint, weight, w2, w3,\n\t\t\tpa, pb, pc, pd;\n\n\t\t\tpoint = ( points.length - 1 ) * scale;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\n\n\t\t\tpa = points[ c[ 0 ] ];\n\t\t\tpb = points[ c[ 1 ] ];\n\t\t\tpc = points[ c[ 2 ] ];\n\t\t\tpd = points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t};\n\n\t\treturn function ( delta ) {\n\n\t\t\tif ( this.isPlaying === false ) return;\n\n\t\t\tthis.currentTime += delta * this.timeScale;\n\n\t\t\tif ( this.weight === 0 )\n\t\t\t\treturn;\n\n\t\t\t//\n\n\t\t\tvar duration = this.data.length;\n\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\n\n\t\t\t\tif ( this.loop ) {\n\n\t\t\t\t\tthis.currentTime %= duration;\n\n\t\t\t\t\tif ( this.currentTime < 0 )\n\t\t\t\t\t\tthis.currentTime += duration;\n\n\t\t\t\t\tthis.reset();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.stop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\t\tvar object = this.hierarchy[ h ];\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\n\t\t\t\tvar blending = object.animationCache.blending;\n\n\t\t\t\t// loop through pos/rot/scl\n\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\n\n\t\t\t\t\t// get keys\n\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\n\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\n\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\n\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\n\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\n\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\n\n\t\t\t\t\t// interpolate\n\n\t\t\t\t\tif ( type === \"pos\" ) {\n\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\n\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n\t\t\t\t\t\t\t// blend\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\n\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\n\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\n\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\n\n\t\t\t\t\t\t\t// blend\n\n\t\t\t\t\t\t\tvar vector = object.position;\n\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\n\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\n\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\n\t\t\t\t\t\t\t\ttarget.sub( vector );\n\t\t\t\t\t\t\t\ttarget.y = 0;\n\t\t\t\t\t\t\t\ttarget.normalize();\n\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( type === \"rot\" ) {\n\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\n\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\n\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( type === \"scl\" ) {\n\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t} )(),\n\n\tgetNextKeyWith: function ( type, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\n\n\t\t} else {\n\n\t\t\tkey = key % keys.length;\n\n\t\t}\n\n\t\tfor ( ; key < keys.length; key ++ ) {\n\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\n\n\t},\n\n\tgetPrevKeyWith: function ( type, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\tkey = key > 0 ? key : 0;\n\n\t\t} else {\n\n\t\t\tkey = key >= 0 ? key : key + keys.length;\n\n\t\t}\n\n\n\t\tfor ( ; key >= 0; key -- ) {\n\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\n\n\t}\n\n};\n"
			},
			{
				"name": "AnimationHandler.js",
				"source": "/**\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.AnimationHandler = {\n\n\tLINEAR: 0,\n\tCATMULLROM: 1,\n\tCATMULLROM_FORWARD: 2,\n\n\t//\n\n\tadd: function () {\n\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\n\n\t},\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\n\n\t},\n\tremove: function () {\n\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\n\n\t},\n\n\t//\n\n\tanimations: [],\n\n\tinit: function ( data ) {\n\n\t\tif ( data.initialized === true ) return data;\n\n\t\t// loop through all keys\n\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\n\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t// remove minus times\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\n\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\n\n\t\t\t\t}\n\n\t\t\t\t// create quaternions\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\n\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// prepare morph target keys\n\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\n\n\t\t\t\t// get all used\n\n\t\t\t\tvar usedMorphTargets = {};\n\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\n\n\n\t\t\t\t// set all used on all frames\n\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t\tvar influences = {};\n\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\n\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\n\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// remove all keys that are on the same time\n\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\n\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\n\t\t\t\t\tk --;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// set index\n\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdata.initialized = true;\n\n\t\treturn data;\n\n\t},\n\n\tparse: function ( root ) {\n\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\n\n\t\t\thierarchy.push( root );\n\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\n\n\t\t};\n\n\t\t// setup hierarchy\n\n\t\tvar hierarchy = [];\n\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\n\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\n\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparseRecurseHierarchy( root, hierarchy );\n\n\t\t}\n\n\t\treturn hierarchy;\n\n\t},\n\n\tplay: function ( animation ) {\n\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\n\n\t\t\tthis.animations.push( animation );\n\n\t\t}\n\n\t},\n\n\tstop: function ( animation ) {\n\n\t\tvar index = this.animations.indexOf( animation );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.animations.splice( index, 1 );\n\n\t\t}\n\n\t},\n\n\tupdate: function ( deltaTimeMS ) {\n\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\tthis.animations[ i ].resetBlendWeights();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\n\n\t\t}\n\n\t}\n\n};\n"
			},
			{
				"name": "KeyFrameAnimation.js",
				"source": "/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author khang duong\n * @author erik kitson\n */\n\nTHREE.KeyFrameAnimation = function ( data ) {\n\n\tthis.root = data.node;\n\tthis.data = THREE.AnimationHandler.init( data );\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\n\tthis.currentTime = 0;\n\tthis.timeScale = 0.001;\n\tthis.isPlaying = false;\n\tthis.isPaused = true;\n\tthis.loop = true;\n\n\t// initialize to first keyframes\n\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys,\n\t\t\tsids = this.data.hierarchy[ h ].sids,\n\t\t\tobj = this.hierarchy[ h ];\n\n\t\tif ( keys.length && sids ) {\n\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\n\n\t\t\t\tvar sid = sids[ s ],\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\n\n\t\t\t\tif ( next ) {\n\n\t\t\t\t\tnext.apply( sid );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.matrixAutoUpdate = false;\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\n\t\t\tobj.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.KeyFrameAnimation.prototype = {\n\n\tconstructor: THREE.KeyFrameAnimation,\n\n\tplay: function ( startTime ) {\n\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\n\n\t\tif ( this.isPlaying === false ) {\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\t// reset key cache\n\n\t\t\tvar h, hl = this.hierarchy.length,\n\t\t\t\tobject,\n\t\t\t\tnode;\n\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\n\n\t\t\t\tobject = this.hierarchy[ h ];\n\t\t\t\tnode = this.data.hierarchy[ h ];\n\n\t\t\t\tif ( node.animationCache === undefined ) {\n\n\t\t\t\t\tnode.animationCache = {};\n\t\t\t\t\tnode.animationCache.prevKey = null;\n\t\t\t\t\tnode.animationCache.nextKey = null;\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\n\n\t\t\t\t}\n\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\n\n\t\t\t\tif ( keys.length > 1 ) {\n\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\n\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.update( 0 );\n\n\t\t}\n\n\t\tthis.isPaused = false;\n\t},\n\n\tstop: function () {\n\n\t\tthis.isPlaying = false;\n\t\tthis.isPaused  = false;\n\n\t\t// reset JIT matrix and remove cache\n\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\n\n\t\t\tvar obj = this.hierarchy[ h ];\n\t\t\tvar node = this.data.hierarchy[ h ];\n\n\t\t\tif ( node.animationCache !== undefined ) {\n\n\t\t\t\tvar original = node.animationCache.originalMatrix;\n\n\t\t\t\toriginal.copy( obj.matrix );\n\t\t\t\tobj.matrix = original;\n\n\t\t\t\tdelete node.animationCache;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function ( delta ) {\n\n\t\tif ( this.isPlaying === false ) return;\n\n\t\tthis.currentTime += delta * this.timeScale;\n\n\t\t//\n\n\t\tvar duration = this.data.length;\n\n\t\tif ( this.loop === true && this.currentTime > duration ) {\n\n\t\t\tthis.currentTime %= duration;\n\n\t\t}\n\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\t\t\tvar node = this.data.hierarchy[ h ];\n\n\t\t\tvar keys = node.keys,\n\t\t\t\tanimationCache = node.animationCache;\n\n\n\t\t\tif ( keys.length ) {\n\n\t\t\t\tvar prevKey = animationCache.prevKey;\n\t\t\t\tvar nextKey = animationCache.nextKey;\n\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\n\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationCache.prevKey = prevKey;\n\t\t\t\t\tanimationCache.nextKey = nextKey;\n\n\t\t\t\t}\n\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\n\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\n\n\t\t\t\t}\n\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tgetNextKeyWith: function ( sid, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\t\tkey = key % keys.length;\n\n\t\tfor ( ; key < keys.length; key ++ ) {\n\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keys[ 0 ];\n\n\t},\n\n\tgetPrevKeyWith: function ( sid, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\t\tkey = key >= 0 ? key : key + keys.length;\n\n\t\tfor ( ; key >= 0; key -- ) {\n\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keys[ keys.length - 1 ];\n\n\t}\n\n};\n"
			},
			{
				"name": "animations-loader.js",
				"source": "\tAnimations = {};\n\tMaleAnimations = {};\n\tFemaleAnimations = {};\n\n/*\n\tvar idle = \"/animations/rlc/female/RLC_SDK_HFBody_v6_idle_sec3.0_v1.json\";\n\tvar walk = \"/animations/rlc/female/RLC_SDK_HFBody_v6_walk_sec1.0_v1.json\";\n\n\tvar loader = new THREE.XHRLoader();\n\tloader.setResponseType( \"json\" );\n\n\tloader.load(idle, function( json ){\n\t\tdebugMode && console.log( json );\n\t\tFemaleAnimations.idle = json;\n\t});\n\n\tloader.load(walk, function( json ){\n\t\tdebugMode && console.log( json );\n\t\tFemaleAnimations.walk = json;\n\t});\n*/\n\n"
			},
			{
				"name": "female_idle_anim.js",
				"source": "//\tRLC_SDK_HFBody_v6_idle_sec3.0_v1.json\n\nFemaleAnimations.idle = {\"name\":\"idle\",\"fps\":25,\"length\":3,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0.08110972507331586,-0.10852438482691497,0.04275342070621884,0.9898564620258776],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0.08110972507331586,-0.10852438482691497,0.04275342070621884,0.9898564620258776],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[-0.2508830799393094,0.046297470393187365,-0.029975231189155127,0.9664448820033734],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[-0.2508830799393094,0.046297470393187365,-0.029975231189155127,0.9664448820033734],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.18223552549214747,0,0,0.9832549075639546],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.026176948307873153,0,0,0.9996573249755573],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.18223552549214747,0,0,0.9832549075639546],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.05648904079047317,-0.29380992210344425,-0.012910860768279471,0.9541058786205869],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0.0662162066044309,0.21649845959222072,0.006598561112362683,0.9740124691031226],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0.0954044976882724,0.0954044976882724,0.00918640827616802,0.9908135917238321],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.05648904079047317,-0.29380992210344425,-0.012910860768279471,0.9541058786205869],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0.13938461223091034,-0.03334478210020656,-0.013493231455433213,0.989584755382185],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0.13938461223091034,-0.03334478210020656,-0.013493231455433213,0.989584755382185],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.08977605084327832,0.033565889994950644,-0.34859509594579907,0.9323599362941176],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.0965717077778429,0.04000131110311384,-0.3805870524817655,0.9188184237650792],\"scl\":[1,1,1],\"time\":1},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.0965717077778429,0.04000131110311384,-0.3805870524817655,0.9188184237650792],\"scl\":[1,1,1],\"time\":2},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.08977605084327832,0.033565889994950644,-0.34859509594579907,0.9323599362941176],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0.017649456306844953,-0.07644819418733124,-0.22425760531694186,0.9713664070550719],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.04659103265964365,0.25472048153874666,-0.14500127610726593,0.9549457481384174],\"scl\":[1,1,1],\"time\":2},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[-0.033664403405740194,0.36502815163946495,-0.0680906724593644,0.9278926752475434],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[-0.033664403405740194,0.36502815163946495,-0.0680906724593644,0.9278926752475434],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0.15643446504023087,0.9876883405951378],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.02474916633088814,-0.18469889108422627,0.22591292760076828,0.9561574909715622],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.034100170275569865,-0.01894723701057425,0.042977675724626484,0.9983141289124137],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0.15643446504023087,0.9876883405951378],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0.011368010309443642,0.21677851353720998,-0.02177646004678168,0.9759116918031226],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0.011368010309443642,0.21677851353720998,-0.02177646004678168,0.9759116918031226],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.01673250036501372,0.1119597742000099,-0.14685927090251089,0.9826583266540819],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[-0.06093467170257374,-0.0037269241793389824,-0.06093467170257374,0.9962730758206609],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,-0.16504760586067765,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[-0.06093467170257374,-0.0037269241793389824,-0.06093467170257374,0.9962730758206609],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[-0.13012382353035157,-0.010240967010384116,-0.07778786728740775,0.9883885677441897],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.05289434227051154,-0.08657801110116932,-0.013242619947177417,0.9947517627863096],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.8,-1.60251,0.04113],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.05289434227051154,-0.08657801110116932,-0.013242619947177417,0.9947517627863096],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0.026008679106203633,-0.0029633146750876085,0.1131644218538618,0.9932313834166578],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[-0.08571740814525969,0.023422394668670805,0.06796307330355708,0.9937227671921276],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0.09584575252022398,0.9953961983671789],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0.026008679106203633,-0.0029633146750876085,0.1131644218538618,0.9932313834166578],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.15643446504023087,0,0,0.9876883405951378],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[-0.14780941112961063,0,0,0.9890158633619168],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]}]};"
			},
			{
				"name": "female_walk_anim.js",
				"source": "//\tRLC_SDK_HFBody_v6_walk_sec1.0_v1.json\n\nFemaleAnimations.walk = {\"name\":\"idle\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,14.5,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,16,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000027,14.5,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,15.9,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000027,14.5,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.07845909572784494,0,0,0.996917333733128],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.23911761839433449,0.09904576054128762,-0.3696438106143861,0.8923991008325228],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.13256989652402948,0.054912249102650856,-0.37872318955302253,0.9143186606041034],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.024184346765249966,0.010017484427300428,-0.38255229631055027,0.9235629420699013],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.13256989652402948,0.054912249102650856,-0.37872318955302253,0.9143186606041034],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.23911761839433449,0.09904576054128762,-0.3696438106143861,0.8923991008325228],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.03489816783660457,-0.008721219528731424,0.0003045516968497588,0.9993527732787075],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.01369879188248452,-0.10505462045483409,-0.032879865436440926,0.9938283474881026],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0.025238044688962256,-0.12920656296492938,-0.06279078960882961,0.9893058283096119],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0.008802020473715274,0.00864972142940827,0.008802020473715274,0.9998851089952057],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.03489816783660457,-0.008721219528731424,0.0003045516968497588,0.9993527732787075],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.10452846326765347,0.9945218953682733],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.1908089953765448,0.981627183447664],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,-0.13917310096006544,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[-0.12186934340514748,0,0,0.992546151641322],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0.35020738125946743,0,0,0.9366721892483976],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0.24192189559966773,0,0,0.9702957262759965],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.02084506970569165,-0.018076607791144388,0.38232668433076056,0.9236151935564816],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.12127227334991539,-0.05959187784394953,0.37808632003237,0.9158561996383252],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.22025787424253448,-0.10039875996355209,0.36935152131589893,0.8972101267448848],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.12127227334991539,-0.05959187784394953,0.37808632003237,0.9158561996383252],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.02084506970569165,-0.018076607791144388,0.38232668433076056,0.9236151935564816],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.03322576326979469,-0.013783702099207956,0.14741253846967084,0.9884207614743368],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[-0.0417168882701734,-0.15665558296350302,-0.0017875781876456887,0.9867702539718363],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.03322576326979469,-0.013783702099207956,0.14741253846967084,0.9884207614743368],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.1908089953765448,0.981627183447664],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.13917310096006544,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.13917310096006544,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.1908089953765448,0.981627183447664],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[-0.00851968176305283,0.0018887679742852046,0.21643137258081216,0.9762588327595204],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[-0.00851968176305283,0.0018887679742852046,0.21643137258081216,0.9762588327595204],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.01175942937344755,0.1820510834426342,0.01874955344598273,0.9830399651508327],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,-0.07845909572784494,0,0.996917333733128],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,-0.12186934340514748,0,0.992546151641322],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.01175942937344755,0.1820510834426342,0.01874955344598273,0.9830399651508327],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.24117613113288489,-0.01898097316551604,0.07612852527220725,0.9673046283717154],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.1480529180500005,-0.0008834016706651343,0.053047216404080756,0.9875553381406769],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.21625154078414352,0.012263568935751942,0.0954503349415529,0.9715833003633746],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.009383953260013822,-0.008014653232669736,0.07852903854699522,0.9968354412136732],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.24117613113288489,-0.01898097316551604,0.07612852527220725,0.9673046283717154],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0.6156614753256583,0,0,0.7880107536067219],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,-0.11320321376790672,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.008726535498373935,0,0,0.9999619230641713],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.11753739745783764,0,0,0.9930684569549263],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.224951054343865,0,0,0.9743700647852352],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.008726535498373935,0,0,0.9999619230641713],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.04341857235856081,0.09575452860150463,0.004180733006501779,0.9944488017480722],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.012321295630453703,-0.10415792632230236,-0.03561860769689824,0.9938463799018232],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0.11320321376790672,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[-0.20659316195735433,-0.02482146873554838,-0.07493289832487197,0.9752375202333567],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.01373336526755417,-0.007671930455933075,-0.07856326141801098,0.9967850069683395],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.23338262665424891,0.009855951828208986,-0.0783192490714475,0.9691756832558317],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[-0.12080946217260312,-0.01819618314346435,-0.0768110895676198,0.9895322275135918],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[-0.20659316195735433,-0.02482146873554838,-0.07493289832487197,0.9752375202333567],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0.5948227867513413,0,0,0.8038568606172174],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[-0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":1}]}]};\n"
			}],
		"EAB32261-6842-401B-A01B-BDD9F02445C6": [
			{
				"name": "MW.js",
				"source": "// MW.js\n\n/*!\n* @author yomotsu http://yomotsu.net/\n* MIT License\n*/\n\nMW = {};\n\n\nMW.triangle = {};\n\n\nMW.triangle.makeBoundingBox = function ( triangle ) {\n\n  var bb = new THREE.Box3();\n\n  bb.min = bb.min.min( triangle.a );\n  bb.min = bb.min.min( triangle.b );\n  bb.min = bb.min.min( triangle.c );\n\n  bb.max = bb.max.max( triangle.a );\n  bb.max = bb.max.max( triangle.b );\n  bb.max = bb.max.max( triangle.c );\n\n  return bb;\n\n};\n\nMW.triangle.makeBoundingSphere = function ( triangle, normal ) {\n \n  var bs = new THREE.Sphere(),\n      v = new THREE.Vector3(),\n      v0 = new THREE.Vector3(),\n      v1 = new THREE.Vector3(),\n      e0 = new THREE.Vector3(),\n      e1 = new THREE.Vector3(),\n      a, b, c, d, e,\n      div, t, s;\n \n  // obtuse triangle\n \n  v0.subVectors( triangle.b, triangle.a );\n  v1.subVectors( triangle.c, triangle.a );\n \n  if ( v0.dot( v1 ) <= 0 ) {\n \n    bs.center.addVectors( triangle.b, triangle.c ).divideScalar( 2 );\n    bs.radius = v.subVectors( triangle.b, triangle.c ).length() / 2;\n    return bs;\n \n  }\n \n  v0.subVectors( triangle.a, triangle.b );\n  v1.subVectors( triangle.c, triangle.b );\n \n  if ( v0.dot( v1 ) <= 0 ) {\n \n    bs.center.addVectors( triangle.a, triangle.c ).divideScalar( 2 );\n    bs.radius = v.subVectors( triangle.a, triangle.c ).length() / 2;\n    return bs;\n \n  }\n \n  v0.subVectors( triangle.a, triangle.c );\n  v1.subVectors( triangle.b, triangle.c );\n \n  if ( v0.dot( v1 ) <= 0 ) {\n \n    bs.center.addVectors( triangle.a, triangle.b ).divideScalar( 2 );\n    bs.radius = v.subVectors( triangle.a, triangle.b ).length() / 2;\n    return bs;\n \n  }\n \n  // acute‐angled triangle\n \n  if ( !normal ) {\n \n    normal = triangle.normal();\n \n  }\n \n  v0.crossVectors( v.subVectors( triangle.c, triangle.b ), normal );\n  v1.crossVectors( v.subVectors( triangle.c, triangle.a ), normal );\n \n  e0.addVectors( triangle.c, triangle.b ).multiplyScalar( .5 );\n  e1.addVectors( triangle.c, triangle.a ).multiplyScalar( .5 );\n \n  a = v0.dot( v1 );\n  b = v0.dot( v0 );\n  d = v1.dot( v1 );\n  c = -v.subVectors( e1, e0 ).dot( v0 );\n  e = -v.subVectors( e1, e0 ).dot( v1 );\n \n  div = - a * a + b * d;\n  // t = ( - a * c + b * e ) / div;\n  s = ( - c * d + a * e ) / div;\n \n  bs.center = e0.clone().add( v0.clone().multiplyScalar( s ) );\n  bs.radius = v.subVectors( bs.center, triangle.a ).length();\n  return bs;\n \n}\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  ns.collision = {};\n\n  // aabb: <THREE.Box3>\n  // Plane: <THREE.Plane>\n  ns.collision.isIntersectionAABBPlane = function ( aabb, Plane ) {\n\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\n\n    var r = extents.x * Math.abs( Plane.normal.x ) + extents.y * Math.abs( Plane.normal.y ) + extents.z * Math.abs( Plane.normal.z );\n    var s = Plane.normal.dot( center ) - Plane.constant;\n\n    return Math.abs( s ) <= r;\n\n  };\n\n  // based on http://www.gamedev.net/topic/534655-aabb-triangleplane-intersection--distance-to-plane-is-incorrect-i-have-solved-it/\n  //\n  // a: <THREE.Vector3>, // vertex of a triangle\n  // b: <THREE.Vector3>, // vertex of a triangle\n  // c: <THREE.Vector3>, // vertex of a triangle\n  // aabb: <THREE.Box3>\n  ns.collision.isIntersectionTriangleAABB = function ( a, b, c, aabb ) {\n\n    var p0, p1, p2, r;\n    \n    // Compute box center and extents of AABoundingBox (if not already given in that format)\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\n\n    // Translate triangle as conceptually moving AABB to origin\n    var v0 = new THREE.Vector3().subVectors( a, center ),\n        v1 = new THREE.Vector3().subVectors( b, center ),\n        v2 = new THREE.Vector3().subVectors( c, center );\n\n    // Compute edge vectors for triangle\n    var f0 = new THREE.Vector3().subVectors( v1, v0 ),\n        f1 = new THREE.Vector3().subVectors( v2, v1 ),\n        f2 = new THREE.Vector3().subVectors( v0, v2 );\n\n    // Test axes a00..a22 (category 3)\n    var a00 = new THREE.Vector3( 0, -f0.z, f0.y ),\n        a01 = new THREE.Vector3( 0, -f1.z, f1.y ),\n        a02 = new THREE.Vector3( 0, -f2.z, f2.y ),\n        a10 = new THREE.Vector3( f0.z, 0, -f0.x ),\n        a11 = new THREE.Vector3( f1.z, 0, -f1.x ),\n        a12 = new THREE.Vector3( f2.z, 0, -f2.x ),\n        a20 = new THREE.Vector3( -f0.y, f0.x, 0 ),\n        a21 = new THREE.Vector3( -f1.y, f1.x, 0 ),\n        a22 = new THREE.Vector3( -f2.y, f2.x, 0 );\n\n    // Test axis a00\n    p0 = v0.dot( a00 );\n    p1 = v1.dot( a00 );\n    p2 = v2.dot( a00 );\n    r = extents.y * Math.abs( f0.z ) + extents.z * Math.abs( f0.y );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a01\n    p0 = v0.dot( a01 );\n    p1 = v1.dot( a01 );\n    p2 = v2.dot( a01 );\n    r = extents.y * Math.abs( f1.z ) + extents.z * Math.abs( f1.y );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a02\n    p0 = v0.dot( a02 );\n    p1 = v1.dot( a02 );\n    p2 = v2.dot( a02 );\n    r = extents.y * Math.abs( f2.z ) + extents.z * Math.abs( f2.y );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a10\n    p0 = v0.dot( a10 );\n    p1 = v1.dot( a10 );\n    p2 = v2.dot( a10 );\n    r = extents.x * Math.abs( f0.z ) + extents.z * Math.abs( f0.x );\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a11\n    p0 = v0.dot( a11 );\n    p1 = v1.dot( a11 );\n    p2 = v2.dot( a11 );\n    r = extents.x * Math.abs( f1.z ) + extents.z * Math.abs( f1.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a12\n    p0 = v0.dot( a12 );\n    p1 = v1.dot( a12 );\n    p2 = v2.dot( a12 );\n    r = extents.x * Math.abs( f2.z ) + extents.z * Math.abs( f2.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a20\n    p0 = v0.dot( a20 );\n    p1 = v1.dot( a20 );\n    p2 = v2.dot( a20 );\n    r = extents.x * Math.abs( f0.y ) + extents.y * Math.abs( f0.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a21\n    p0 = v0.dot( a21 );\n    p1 = v1.dot( a21 );\n    p2 = v2.dot( a21 );\n    r = extents.x * Math.abs( f1.y ) + extents.y * Math.abs( f1.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a22\n    p0 = v0.dot( a22 );\n    p1 = v1.dot( a22 );\n    p2 = v2.dot( a22 );\n    r = extents.x * Math.abs( f2.y ) + extents.y * Math.abs( f2.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test the three axes corresponding to the face normals of AABB b (category 1).\n    // Exit if...\n    // ... [-extents.x, extents.x] and [min(v0.x,v1.x,v2.x), max(v0.x,v1.x,v2.x)] do not overlap\n    if ( Math.max( v0.x, v1.x, v2.x ) < -extents.x || Math.min( v0.x, v1.x, v2.x ) > extents.x ) {\n\n      return false;\n\n    }\n    // ... [-extents.y, extents.y] and [min(v0.y,v1.y,v2.y), max(v0.y,v1.y,v2.y)] do not overlap\n    if ( Math.max( v0.y, v1.y, v2.y ) < -extents.y || Math.min( v0.y, v1.y, v2.y ) > extents.y ) {\n\n      return false;\n\n    }\n    // ... [-extents.z, extents.z] and [min(v0.z,v1.z,v2.z), max(v0.z,v1.z,v2.z)] do not overlap\n    if ( Math.max( v0.z, v1.z, v2.z ) < -extents.z || Math.min( v0.z, v1.z, v2.z ) > extents.z ) {\n\n      return false;\n\n    }\n\n    // Test separating axis corresponding to triangle face normal (category 2)\n    // Face Normal is -ve as Triangle is clockwise winding (and XNA uses -z for into screen)\n    var plane = new THREE.Plane();\n    plane.normal = new THREE.Vector3().copy( f1 ).cross( f0 ).normalize();\n    plane.constant = plane.normal.dot( a );\n    \n    return ns.collision.isIntersectionAABBPlane( aabb, plane );\n\n  };\n\n\n  // sphere1: <THREE.Sphere>\n  // sphere2: <THREE.Sphere>\n  ns.collision.isIntersectionSphereSphere = function ( sphere1, sphere2 ) {\n\n    var radiusSum = sphere1.radius + sphere2.radius;\n\n    return sphere1.center.distanceToSquared( sphere2.center ) <= ( radiusSum * radiusSum );\n\n  };\n\n  // Section 5.1.3\n  // sphere: <THREE.Sphere>\n  // aabb: <THREE.Box3>\n\n  ns.collision.isIntersectionSphereAABB = function ( sphere, aabb ) {\n\n    var sqDist = 0;\n\n    if ( sphere.center.x < aabb.min.x ) { sqDist += ( aabb.min.x - sphere.center.x ) * ( aabb.min.x - sphere.center.x ); }\n    if ( sphere.center.x > aabb.max.x ) { sqDist += ( sphere.center.x - aabb.max.x ) * ( sphere.center.x - aabb.max.x ); }\n\n    if ( sphere.center.y < aabb.min.y ) { sqDist += ( aabb.min.y - sphere.center.y ) * ( aabb.min.y - sphere.center.y ); }\n    if ( sphere.center.y > aabb.max.y ) { sqDist += ( sphere.center.y - aabb.max.y ) * ( sphere.center.y - aabb.max.y ); }\n\n    if ( sphere.center.z < aabb.min.z ) { sqDist += ( aabb.min.z - sphere.center.z ) * ( aabb.min.z - sphere.center.z ); }\n    if ( sphere.center.z > aabb.max.z ) { sqDist += ( sphere.center.z - aabb.max.z ) * ( sphere.center.z - aabb.max.z ); }\n\n    return sqDist <= sphere.radius * sphere.radius;\n\n  };\n\n\n  //http://clb.demon.fi/MathGeoLib/docs/Triangle.cpp_code.html#459\n\n  // sphere: <THREE.Sphere>\n  // a: <THREE.Vector3>, // vertex of a triangle\n  // b: <THREE.Vector3>, // vertex of a triangle\n  // c: <THREE.Vector3>, // vertex of a triangle\n  // normal: <THREE.Vector3>, // normal of a triangle\n  ns.collision.isIntersectionSphereTriangle = function ( sphere, a, b, c, normal ) {\n    // http://realtimecollisiondetection.net/blog/?p=103\n\n    // vs plain of traiangle face\n    var A = new THREE.Vector3(),\n        B = new THREE.Vector3(),\n        C = new THREE.Vector3(),\n        rr,\n        V = new THREE.Vector3(),\n        d,\n        e;\n\n    A.subVectors( a, sphere.center );\n    B.subVectors( b, sphere.center );\n    C.subVectors( c, sphere.center );\n    rr = sphere.radius * sphere.radius;\n    V.crossVectors( B.clone().sub( A ), C.clone().sub( A ) );\n    d = A.dot( V );\n    e = V.dot( V );\n\n    if ( d * d > rr * e ) {\n\n      return false;\n\n    }\n\n    // vs triangle vertex\n    var aa,\n        ab,\n        ac,\n        bb,\n        bc,\n        cc;\n\n    aa = A.dot( A );\n    ab = A.dot( B );\n    ac = A.dot( C );\n    bb = B.dot( B );\n    bc = B.dot( C );\n    cc = C.dot( C );\n\n    if (\n      ( aa > rr ) & ( ab > aa ) & ( ac > aa ) ||\n      ( bb > rr ) & ( ab > bb ) & ( bc > bb ) ||\n      ( cc > rr ) & ( ac > cc ) & ( bc > cc )\n    ) {\n\n      return false;\n\n    }\n\n    // vs edge\n    var AB = new THREE.Vector3(),\n        BC = new THREE.Vector3(),\n        CA = new THREE.Vector3(),\n        d1,\n        d2,\n        d3,\n        e1,\n        e2,\n        e3,\n        Q1 = new THREE.Vector3(),\n        Q2 = new THREE.Vector3(),\n        Q3 = new THREE.Vector3(),\n        QC = new THREE.Vector3(),\n        QA = new THREE.Vector3(),\n        QB = new THREE.Vector3();\n\n    AB.subVectors( B, A );\n    BC.subVectors( C, B );\n    CA.subVectors( A, C );\n    d1 = ab - aa;\n    d2 = bc - bb;\n    d3 = ac - cc;\n    e1 = AB.dot( AB );\n    e2 = BC.dot( BC );\n    e3 = CA.dot( CA );\n    Q1.subVectors( A.multiplyScalar( e1 ), AB.multiplyScalar( d1 ) );\n    Q2.subVectors( B.multiplyScalar( e2 ), BC.multiplyScalar( d2 ) );\n    Q3.subVectors( C.multiplyScalar( e3 ), CA.multiplyScalar( d3 ) );\n    QC.subVectors( C.multiplyScalar( e1 ), Q1 );\n    QA.subVectors( A.multiplyScalar( e2 ), Q2 );\n    QB.subVectors( B.multiplyScalar( e3 ), Q3 );\n\n    if (\n      ( Q1.dot( Q1 ) > rr * e1 * e1 ) && ( Q1.dot( QC ) >= 0 ) ||\n      ( Q2.dot( Q2 ) > rr * e2 * e2 ) && ( Q2.dot( QA ) >= 0 ) ||\n      ( Q3.dot( Q3 ) > rr * e3 * e3 ) && ( Q3.dot( QB ) >= 0 )\n    ) {\n\n      return false;\n\n    }\n\n    var distance = Math.sqrt( d * d / e ) - sphere.radius - 1,\n        contactPoint = new THREE.Vector3(),\n        negatedNormal = new THREE.Vector3( -normal.x, -normal.y, -normal.z );\n\n    contactPoint.copy( sphere.center ).add( negatedNormal.multiplyScalar( distance ) );\n\n    return {\n      distance    : distance,\n      contactPoint: contactPoint\n    };\n\n  };\n\n  // based on Real-Time Collision Detection Section 5.3.4\n  // p: <THREE.Vector3>, // line3.start\n  // q: <THREE.Vector3>, // line3.end\n  // a: <THREE.Vector3>, // triangle.a\n  // b: <THREE.Vector3>, // triangle.b\n  // c: <THREE.Vector3>, // triangle.c\n  // normal: <THREE.Vector3>, // triangle.normal, optional\n\n  // var scalarTriple = function ( a, b, c ) {\n\n  //   var m = b.clone().cross( c );\n  //   return a.dot( m );\n\n  // }\n\n  // var vectorTriple = function ( a, b, c ) {\n\n  //   var m = b.clone().cross( c );\n  //   return a.clone().cross( m );\n\n  // }\n\n  // ns.collision.isIntersectionLineTriangle = function ( p, q, a, b, c, precision ) {\n\n  //   var pq = q.clone().sub( p ),\n  //       pa = a.clone().sub( p ),\n  //       pb = b.clone().sub( p ),\n  //       pc = c.clone().sub( p ),\n  //       u, v, w;\n\n  //   u = scalarTriple( pq, pc, pb );\n\n  //   if ( u < 0 ) { return false; }\n\n  //   v = scalarTriple( pq, pa, pc );\n\n  //   if ( v < 0 ) { return false; }\n\n  //   w = scalarTriple( pq, pb, pa );\n\n  //   if ( w < 0 ) { return false; }\n\n  //   var denom = 1 / ( u + v + w );\n  //   u *= denom;\n  //   v *= denom;\n  //   w *= denom;\n\n  //   var au = a.clone().multiplyScalar( u ),\n  //       bv = b.clone().multiplyScalar( v ),\n  //       cw = c.clone().multiplyScalar( w ),\n  //       contactPoint = au.clone().add( bv ).add( cw );\n\n  //   return {\n  //     contactPoint: contactPoint\n  //   }\n\n  // }\n\n  ns.collision.testSegmentTriangle = function ( p, q, a, b, c ) {\n\n    var ab = b.clone().sub( a );\n    var ac = c.clone().sub( a );\n    var qp = p.clone().sub( q );\n\n    var n = ab.clone().cross( ac );\n\n    var d = qp.dot( n );\n    if ( d <= 0 ) { return false; }\n\n    var ap = p.clone().sub( a );\n    var t = ap.dot( n );\n\n    if ( t < 0 ) { return 0; }\n    if ( t > d ) { return 0; }\n\n    var e = qp.clone().cross( ap );\n    var v = ac.dot( e );\n\n    if ( v < 0 || v > d ) { return 0; }\n\n    var w = ab.clone().dot( e ) * -1;\n\n    if ( w < 0 || v + w > d ) { return 0; }\n\n    var ood = 1 / d;\n    t *= ood;\n    v *= ood;\n    w *= ood;\n    var u = 1 - v - w;\n\n    var au = a.clone().multiplyScalar( u ),\n        bv = b.clone().multiplyScalar( v ),\n        cw = c.clone().multiplyScalar( w ),\n        contactPoint = au.clone().add( bv ).add( cw );\n\n    return {\n      contactPoint: contactPoint\n    }\n\n}\n\n} )( THREE, MW );\n\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  ns.World = function () {\n\n    // console.log( 'THREEFIELD.World' );\n\n    this.colliderPool  = [];\n    this.characterPool = [];\n\n  };\n\n  ns.World.prototype.add = function ( object ) {\n    \n    if ( object instanceof ns.Octree ) {\n\n      this.colliderPool.push( object );\n\n    } else if ( object instanceof ns.CharacterController ) {\n\n      this.characterPool.push( object );\n      object.world = this;\n\n    }\n\n  };\n\n  ns.World.prototype.step = function ( dt ) {\n\n    var character,\n        octree,\n        sphere,\n        intersectedNodes,\n        faces,\n        contactInfo,\n        i, ii, iii, l, ll, lll;\n\n    for ( i = 0, l = this.characterPool.length; i < l; i ++ ) {\n\n      character = this.characterPool[ i ];\n\n      // octree で絞られた node に含まれる face だけを\n      // charactore に渡して判定する\n      for ( ii = 0, ll = this.colliderPool.length; ii < ll; ii ++ ) {\n\n        octree = this.colliderPool[ ii ];\n        sphere = new THREE.Sphere( character.center, character.radius + character.groundPadding );\n        intersectedNodes = octree.getIntersectedNodes( sphere, octree.maxDepth );\n        faces = ns.Octree.uniqTriangkesfromNodes( intersectedNodes );\n\n      }\n      \n      character.collisionCandidate = faces;\n      character.update( dt );\n\n    }\n\n  };\n\n} )( THREE, MW );\n\n// @author yomotsu\n// MIT License\n\n// OcTree with Morton Order\n// based on http://marupeke296.com/COL_3D_No15_Octree.html\n//\n//       +------+------+\n//       |\\   2  \\   3  \\\n//       | +------+------+\n//       + |\\      \\      \\\n//       |\\| +------+------+\n//       | + |      |      |\n//       +0|\\|   6  |   7  |\n//        \\| +------+------+\n//         + |      |      |\n//    y     \\|   4  |   5  |\n//    |      +------+------+\n//    +--x\n//     \\\n//      z\n//\n//\n//       +------+------+\n//       |\\   6  \\   7  \\\n//       | +------+------+\n//       + |\\      \\      \\\n//       |\\| +------+------+\n//       | + |      |      |\n//       +4|\\|   2  |   3  |\n//        \\| +------+------+\n//         + |      |      |\n//  z y     \\|   0  |   1  |\n//   \\|      +------+------+\n//    +--x\n//\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  // min: <THREE.Vector3>\n  // max: <THREE.Vector3>\n  // maxDepth: <Number>\n  ns.Octree = function ( min, max, maxDepth ) {\n\n    this.min = min;\n    this.max = max;\n    this.maxDepth = maxDepth;\n    this.nodes = [];\n\n    var i, length, depth, mortonNumber,\n        pow2, pow4,\n        indexX, indexY, indexZ,\n        nodeBoxSize = new THREE.Vector3(),\n        nodeBoxMin = new THREE.Vector3(),\n        nodeBoxMax = new THREE.Vector3();\n\n    for ( depth = 0; depth < this.maxDepth; depth ++ ) {\n\n      this.nodes.push( [] );\n      pow2 = Math.pow( 2, depth );\n      pow4 = Math.pow( 4, depth );\n      nodeBoxSize.subVectors( this.max, this.min ).divideScalar( pow2 );\n\n      for ( i = 0, length = Math.pow( 8, depth ); i < length; i ++ ) {\n\n        indexX = i % pow2;\n        indexY = ( i / pow4 )|0;\n        indexZ = ( ( i / pow2 )|0 ) % pow2;\n\n        nodeBoxMin.set(\n          this.min.x + indexX * nodeBoxSize.x,\n          this.min.y + indexY * nodeBoxSize.y,\n          this.min.z + indexZ * nodeBoxSize.z\n        );\n        nodeBoxMax.copy( nodeBoxMin ).add( nodeBoxSize );\n\n        mortonNumber = ns.Octree.getMortonNumber( indexX, indexY, indexZ );\n        this.nodes[ depth ][ mortonNumber ] = new ns.OctreeNode( this, depth, mortonNumber, nodeBoxMin, nodeBoxMax );\n\n      }\n\n    }\n\n  };\n\n  ns.Octree.prototype = {\n\n    constructor: ns.Octree,\n\n    importThreeMesh: function ( threeMesh ) {\n\n\n      var i, ii, l, ll,\n          vec3 = new THREE.Vector3(),\n          geometry,\n          geometryId,\n          face,\n          normal,\n          index,\n          count,\n          start,\n          a, b, c,\n        \tvA  = new THREE.Vector3(),\n        \tvB  = new THREE.Vector3(),\n        \tvC  = new THREE.Vector3(),\n        \tvnA = new THREE.Vector3(),\n        \tvnB = new THREE.Vector3(),\n        \tvnC = new THREE.Vector3(),\n          ab  = new THREE.Vector3(),\n          cb  = new THREE.Vector3(),\n          faceNormal;\n\n      threeMesh.updateMatrix();\n\n      geometryId = threeMesh.geometry.uuid;\n      geometry   = threeMesh.geometry.clone();\n      geometry.applyMatrix( threeMesh.matrix );\n      geometry.computeVertexNormals();\n\n      if ( geometry instanceof THREE.BufferGeometry ) {\n\n        if ( geometry.index !== undefined ) {\n\n          var indices   = geometry.index.array;\n          var positions = geometry.attributes.position.array;\n          var normals   = geometry.attributes.normal.array;\n          var offsets   = geometry.groups;\n\n          if ( offsets.length === 0 ) {\n\n            offsets = [ { start: 0, count: indices.length, index: 0 } ];\n\n          }\n\n          for ( i = 0, l = offsets.length; i < l; ++ i ) {\n\n            start  = offsets[ i ].start;\n            count  = offsets[ i ].count;\n            index  = offsets[ i ].materialIndex;\n\n            for ( ii = start, ll = start + count; ii < ll; ii += 3 ) {\n\n              a = index + indices[ ii ];\n              b = index + indices[ ii + 1 ];\n              c = index + indices[ ii + 2 ];\n\n              vA = vec3.fromArray( positions, a * 3 ).clone();\n              vB = vec3.fromArray( positions, b * 3 ).clone();\n              vC = vec3.fromArray( positions, c * 3 ).clone();\n\n              // https://github.com/mrdoob/three.js/issues/4691\n              // make face normal\n              cb.subVectors( vC, vB );\n              ab.subVectors( vA, vB );\n              faceNormal = cb.cross( ab ).normalize().clone();\n\n              face = new ns.Face(\n                vA,\n                vB,\n                vC,\n                faceNormal,\n                geometryId\n              );\n\n              this.addFace( face );\n\n            }\n\n          }\n\n        }\n\n        return;\n\n      }\n\n      geometry.computeFaceNormals();\n\n      for ( i = 0, l = geometry.faces.length; i < l; i ++ ) {\n\n        face = new ns.Face(\n          geometry.vertices[ geometry.faces[ i ].a ],\n          geometry.vertices[ geometry.faces[ i ].b ],\n          geometry.vertices[ geometry.faces[ i ].c ],\n          geometry.faces[ i ].normal,\n          geometryId\n        );\n        this.addFace( face );\n\n      }\n\n    },\n\n    addFace: function ( face ) {\n\n      var i, ii, l, ll, node, targetNodes = [], tmp = [], isIntersected;\n\n      targetNodes = this.nodes[ 0 ].slice( 0 );\n\n      for ( i = 0, l = this.maxDepth; i < l; i ++ ) {\n\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\n\n          node = targetNodes[ ii ];\n          isIntersected = ns.collision.isIntersectionTriangleAABB( face.a, face.b, face.c, node );\n\n          if ( isIntersected ) {\n\n            node.trianglePool.push( face );\n\n            if ( i + 1 !== this.maxDepth ) {\n\n              tmp = tmp.concat( node.getChildNodes() );\n\n            }\n\n          }\n\n        }\n\n        if ( tmp.length === 0 ) {\n\n          break;\n\n        }\n\n        targetNodes = tmp.slice( 0 );\n        tmp.length = 0;\n\n      }\n\n    },\n\n    removeThreeMesh: function ( meshID ) {\n\n      var that = this;\n\n      this.nodes.forEach( function ( nodeDepth ) {\n\n        nodeDepth.forEach( function ( node ) {\n\n          var newTrianglePool = [];\n\n          node.trianglePool.forEach( function ( face ) {\n\n            if ( face.meshID !== meshID ) {\n\n              newTrianglePool.push( face );\n\n            }\n\n          } );\n\n          node.trianglePool = newTrianglePool;\n\n        } );\n\n      } );\n\n    },\n\n    getIntersectedNodes: function ( sphere, depth ) {\n\n      var i, ii, l, ll, node, targetNodes = [], tmp = [],\n          isIntersected, intersectedNodes = [], isAtMaxDepth;\n\n      isIntersected = ns.collision.isIntersectionSphereAABB( sphere, this );\n\n      if ( !isIntersected ) {\n\n        return [];\n\n      }\n\n      targetNodes = this.nodes[ 0 ].slice( 0 );\n\n      for ( i = 0, l = depth; i < l; i ++ ) {\n\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\n\n          node = targetNodes[ ii ];\n          isIntersected = ns.collision.isIntersectionSphereAABB( sphere, node );\n\n          if ( isIntersected ) {\n\n            isAtMaxDepth = ( i + 1 === depth );\n\n            if ( isAtMaxDepth ) {\n\n              if ( node.trianglePool.length !== 0 ) {\n\n                intersectedNodes.push( node );\n\n              }\n\n            } else {\n\n              tmp = tmp.concat( node.getChildNodes() );\n\n            }\n\n          }\n\n        }\n\n        targetNodes = tmp.slice( 0 );\n        tmp.length = 0;\n\n      }\n\n      return intersectedNodes;\n\n    }\n\n  };\n\n  ns.Octree.separate3Bit = function ( n ) {\n\n    n = ( n | n << 8 ) & 0x0000f00f;\n    n = ( n | n << 4 ) & 0x000c30c3;\n    n = ( n | n << 2 ) & 0x00249249;\n    return n;\n\n  };\n\n  ns.Octree.getMortonNumber = function ( x, y, z ) {\n\n    return ns.Octree.separate3Bit( x ) |\n           ns.Octree.separate3Bit( y ) << 1 |\n           ns.Octree.separate3Bit( z ) << 2;\n\n  };\n\n  ns.Octree.uniqTriangkesfromNodes = function ( nodes ) {\n\n    var i, ii, iii, l, ll, lll, uniq = [], isContained = false;\n\n    if ( nodes.length === 0 ) {\n\n      return [];\n\n    } else if ( nodes.length === 1 ) {\n\n      return nodes[ 0 ].trianglePool.slice( 0 );\n\n    }\n\n    for ( i = 0, l = nodes.length; i < l; i ++ ) {\n\n      for ( ii = 0, ll = nodes[ i ].trianglePool.length; ii < ll; ii ++ ) {\n\n        for ( iii = 0, lll = uniq.length; iii < lll; iii ++ ) {\n\n          if ( nodes[ i ].trianglePool[ ii ] === uniq[ iii ] ) {\n\n            isContained = true;\n\n          }\n\n        }\n\n        if ( !isContained ) {\n\n          uniq.push( nodes[ i ].trianglePool[ ii ] );\n\n        }\n\n        isContained = false;\n\n      }\n\n    }\n\n    return uniq;\n\n  };\n\n  //\n\n  ns.OctreeNode = function ( tree, depth, mortonNumber, min, max ) {\n\n    this.tree = tree;\n    this.depth = depth;\n    this.mortonNumber = mortonNumber;\n    this.min = new THREE.Vector3( min.x, min.y, min.z );\n    this.max = new THREE.Vector3( max.x, max.y, max.z );\n    this.trianglePool = [];\n\n  };\n\n  ns.OctreeNode.prototype = {\n\n    constructor: ns.OctreeNode,\n\n    getParentNode: function () {\n\n      if ( this.depth === 0 ) {\n\n        return null;\n\n      }\n\n      this.tree.nodes[ this.depth ][ this.mortonNumber >> 3 ];\n\n    },\n\n    getChildNodes: function () {\n\n      if ( this.tree.maxDepth === this.depth ) {\n\n        return null;\n\n      }\n\n      var firstChild = this.mortonNumber << 3;\n\n      return [\n        this.tree.nodes[ this.depth + 1 ][ firstChild ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 1 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 2 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 3 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 4 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 5 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 6 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 7 ]\n      ];\n\n    }\n\n  };\n\n  //\n\n  // a: <THREE.Vector3>\n  // b: <THREE.Vector3>\n  // c: <THREE.Vector3>\n  // normal: <THREE.Vector3>\n  // meshID: <String>\n  ns.Face = function ( a, b, c, normal, meshID ) {\n\n    this.a = a.clone();\n    this.b = b.clone();\n    this.c = c.clone();\n    this.normal = normal.clone();\n    this.meshID = meshID;\n\n  };\n\n  ns.Face.prototype = {\n\n    constructor: ns.Face\n\n  };\n\n  // origin   : <THREE.Vector3>\n  // direction: <THREE.Vector3>\n  // distance : <Float>\n  ns.Ray = function ( origin, direction, distance ) {\n    this.origin = origin;\n    this.direction = direction;\n    this.distance = distance;\n  };\n\n} )( THREE, MW );\n\n\n"
			},
			{
				"name": "MWtps.js",
				"source": "// MWtps.js\n\n/*!\n* @author yomotsu http://yomotsu.net/\n* MIT License\n*/\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  ns.CharacterController = function ( object3d, radius ) {\n\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n    this.object = object3d;\n    this.center = this.object.position.clone();\n    this.radius = radius;\n    this.groundPadding = 0.5;\n    this.maxSlopeGradient = Math.cos( THREE.Math.degToRad( 50 ) );\n    this.isGrounded = false;\n    this.isOnSlope  = false;\n    this.isIdling   = false;\n    this.isRunning  = false;\n    this.isJumping  = false;\n    this.direction  = 0; // 0 to 2PI(=360deg) in rad\n    this.movementSpeed = 28; // default: 50; // Meters Per Second\n    this.velocity = new THREE.Vector3( 0, -10, 0 );\n    this.currentJumpPower = 0;\n    this.jumpStartTime = 0;\n    this.groundHeight = 0;\n    this.groundNormal = new THREE.Vector3();\n    this.collisionCandidate;\n    this.contactInfo = [];\n\n  };\n\n  ns.CharacterController.prototype = {\n\n    constructor: ns.CharacterController,\n\n    update: function ( dt ) {\n\n      this.isGrounded = false;\n      this.isOnSlope  = false;\n      this.groundHeight = -Infinity;\n      this.groundNormal.set( 0, 1, 0 );\n\n      this.updateGrounding();\n      this.updateJumping();\n      this.updatePosition( dt );\n      this.collisionDetection();\n      this.solvePosition();\n      this.updateVelocity();\n      this.events();\n\n    },\n\n    updateVelocity: function () {\n\n      var FALL_VELOCITY = -50,\n          frontDierction = -Math.cos( this.direction ),\n          rightDierction = -Math.sin( this.direction ),\n          normal,\n          isHittingCeiling = false,\n          wallNomal2D,\n          direction2D,\n          wallAngle,\n          frontAngle,\n          negativeFrontAngle,\n          i, l;\n      \n      this.velocity.set(\n        rightDierction * this.movementSpeed * this.isRunning, \n        FALL_VELOCITY,\n        frontDierction * this.movementSpeed * this.isRunning\n      );\n\n      if ( this.contactInfo.length === 0 && !this.isJumping ) {\n\n        return;\n\n      } else if ( this.isGrounded && !this.isOnSlope && !this.isJumping ) {\n\n        this.velocity.y = 0;\n\n      } else if ( this.isOnSlope ) {\n\n        var slidingDownVelocity = FALL_VELOCITY;\n        var holizontalSpead = - slidingDownVelocity / ( 1 - this.groundNormal.y ) * 0.2;\n\n        this.velocity.x = this.groundNormal.x * holizontalSpead;\n        this.velocity.y = FALL_VELOCITY;\n        this.velocity.z = this.groundNormal.z * holizontalSpead;\n\n      } else if ( !this.isGrounded && !this.isOnSlope && this.isJumping ) {\n\n        this.velocity.y = this.currentJumpPower * -FALL_VELOCITY;\n\n      }\n\n\n      // vs walls and sliding on the wall\n      direction2D = new THREE.Vector2( rightDierction, frontDierction );\n      frontAngle = Math.atan2( direction2D.y, direction2D.x );\n      negativeFrontAngle = Math.atan2( -direction2D.y, -direction2D.x );\n      \n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\n\n        normal = this.contactInfo[ i ].face.normal;\n        // var distance = this.contactInfo[ i ].distance;\n\n        if ( this.maxSlopeGradient < normal.y || this.isOnSlope ) {\n\n          continue;\n\n        }\n\n        if ( !isHittingCeiling && normal.y < 0 ) {\n\n          isHittingCeiling = true;\n\n        }\n\n        wallNomal2D = new THREE.Vector2( normal.x, normal.z ).normalize();\n        wallAngle = Math.atan2( wallNomal2D.y, wallNomal2D.x );\n\n        if (\n          Math.abs( negativeFrontAngle - wallAngle ) >= Math.PI * 0.5 && //  90deg\n          Math.abs( negativeFrontAngle - wallAngle ) <= Math.PI * 1.5    // 270deg\n        ) {\n\n          continue;\n\n        }\n\n        wallNomal2D.set(\n          direction2D.dot( wallNomal2D ) * wallNomal2D.x,\n          direction2D.dot( wallNomal2D ) * wallNomal2D.y\n        );\n        direction2D.subVectors( direction2D, wallNomal2D );\n\n        this.velocity.x = direction2D.x * this.movementSpeed * this.isRunning;\n        this.velocity.z = direction2D.y * this.movementSpeed * this.isRunning;\n\n      }\n\n      if ( isHittingCeiling ) {\n\n        this.velocity.y = Math.min( 0, this.velocity.y );\n        this.isJumping = false;\n\n      }\n\n    },\n\n    updateGrounding: function () {\n\n      // \"頭上からほぼ無限に下方向までの線 (segment)\" vs \"フェイス (triangle)\" の\n      // 交差判定を行う\n      // もし、フェイスとの交差点が「頭上」から「下groundPadding」までの間だったら\n      // 地面上 (isGrounded) にいることとみなす\n      //\n      //   ___\n      //  / | \\\n      // |  |  | player sphere\n      //  \\_|_/\n      //    |\n      //---[+]---- ground\n      //    |\n      //    |\n      //    | segment (player's head to almost -infinity)\n\n\n      var i, l,\n          groundContactInfo,\n          groundContactInfoTmp,\n          faces = this.collisionCandidate,\n          distanceToGround;\n\n      var head = new THREE.Vector3(\n        this.center.x,\n        this.center.y + this.radius,\n        this.center.z\n      );\n\n      var to = new THREE.Vector3(\n        this.center.x,\n        this.center.y - 1e10,\n        this.center.z\n      );\n\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\n\n        groundContactInfoTmp = ns.collision.testSegmentTriangle( head, to, faces[ i ].a, faces[ i ].b, faces[ i ].c );\n\n        if ( groundContactInfoTmp && !groundContactInfo ) {\n\n          groundContactInfo = groundContactInfoTmp;\n          groundContactInfo.face = faces[ i ];\n\n        } else if (\n          groundContactInfoTmp &&\n          groundContactInfoTmp.contactPoint.y > groundContactInfo.contactPoint.y\n        ) {\n          \n          groundContactInfo = groundContactInfoTmp;\n          groundContactInfo.face = faces[ i ];\n\n        }\n\n      }\n\n      if ( !groundContactInfo ) {\n\n        return;\n\n      }\n\n      this.groundHeight = groundContactInfo.contactPoint.y;\n      this.groundNormal.copy( groundContactInfo.face.normal );\n\n      var top    = head.y;\n      var bottom = this.center.y - this.radius - this.groundPadding;\n\n      if ( this.isJumping && 0 < this.currentJumpPower ) {\n\n        this.isOnSlope  = false;\n        this.isGrounded = false;\n        return;\n\n      }\n\n      this.isGrounded = ( bottom <= this.groundHeight && this.groundHeight <= top );\n      this.isOnSlope  = ( this.groundNormal.y <= this.maxSlopeGradient );\n\n      if ( this.isGrounded ) {\n\n        this.isJumping = false;\n\n      }\n\n    },\n\n    updatePosition: function ( dt ) {\n\n      var x = this.center.x + this.velocity.x * dt,\n          y = this.center.y + this.velocity.y * dt,\n          z = this.center.z + this.velocity.z * dt;\n\n      if ( this.isGrounded ) {\n\n        y = this.groundHeight + this.radius;\n\n      }\n\n      this.center.set( x, y, z );\n\n    },\n\n    collisionDetection: function () {\n\n      var i, l,\n          faces = this.collisionCandidate,\n          contactInfo;\n\n      this.contactInfo.length = 0;\n\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\n\n        contactInfo = ns.collision.isIntersectionSphereTriangle( this, faces[ i ].a, faces[ i ].b, faces[ i ].c, faces[ i ].normal );\n\n        if ( !contactInfo ) {\n\n          continue;\n\n        }\n\n        contactInfo.face = faces[ i ];\n        this.contactInfo.push( contactInfo );\n\n      }\n\n    },\n\n    solvePosition: function () {\n\n      var face,\n          normal,\n          distance,\n          point1 = new THREE.Vector3(),\n          point2 = new THREE.Vector3(),\n          direction = new THREE.Vector3(),\n          plainD,\n          t,\n          translateScoped = new THREE.Vector3(),\n          translate = new THREE.Vector3(),\n          i, l;\n\n      if ( this.contactInfo.length === 0 ) {\n\n        this.object.position.copy( this.center );\n        return;\n\n      }\n\n      // \n      // vs walls and sliding on the wall\n\n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\n\n        face = this.contactInfo[ i ].face;\n        normal = this.contactInfo[ i ].face.normal;\n        distance = this.contactInfo[ i ].distance;\n\n        // if ( 0 <= distance ) {\n\n        //   continue;\n\n        // }\n\n        if ( this.maxSlopeGradient < normal.y ) {\n\n          // this triangle is a ground or slope, not a wall or ceil.\n          continue;\n\n        }\n\n        var isSlopeFace = ( this.maxSlopeGradient <= face.normal.y && face.normal.y < 1 );\n\n        if ( this.isJumping && 0 >= this.currentJumpPower && isSlopeFace ) {\n\n          this.isJumping = false;\n          this.isGrounded = true;\n          // console.log( 'jump end' );\n\n        }\n\n        if ( this.isGrounded || this.isOnSlope ) {\n\n          // http://gamedev.stackexchange.com/questions/80293/how-do-i-resolve-a-sphere-triangle-collision-in-a-given-direction\n          point1.copy( normal ).multiplyScalar( -this.radius ).add( this.center );\n          direction.set( normal.x, 0, normal.z ).normalize();\n          plainD = face.a.dot( normal );\n          t = ( plainD - ( normal.x * point1.x + normal.y * point1.y + normal.z * point1.z ) ) / ( normal.x * direction.x + normal.y * direction.y + normal.z * direction.z );\n          point2.copy( direction ).multiplyScalar( t ).add( point1 );\n          translateScoped.subVectors( point2, point1 );\n\n          if ( Math.abs( translate.x ) > Math.abs( translateScoped.x ) ) {\n\n            translate.x += translateScoped.x;\n\n          }\n\n          if ( Math.abs( translate.z ) > Math.abs( translateScoped.z ) ) {\n\n            translate.z += translateScoped.z;\n\n          }\n\n          // break;\n          continue;\n\n        }\n\n      }\n\n      this.center.add( translate );\n      this.object.position.copy( this.center );\n\n    },\n\n    events: function () {\n\n      var isFirstUpdate = true,\n          wasGrounded,\n          wasOnSlope,\n          wasIdling,\n          wasRunning,\n          wasJumping;\n\n      return function () {\n\n        if ( isFirstUpdate ) {\n\n            isFirstUpdate = false;\n            wasGrounded = this.isGrounded;\n            wasOnSlope  = this.isOnSlope;\n            wasIdling   = this.isIdling;\n            wasRunning  = this.isRunning;\n            wasJumping  = this.isJumping;\n            return;\n\n        }\n\n        if ( !wasRunning && !this.isRunning && this.isGrounded && !this.isIdling ) {\n\n            this.isIdling = true;\n            this.dispatchEvent( { type: 'startIdling' } );\n\n        } else if (\n          ( !wasRunning && this.isRunning && !this.isJumping && this.isGrounded ) ||\n          ( !wasGrounded && this.isGrounded && this.isRunning ) ||\n          ( wasOnSlope && !this.isOnSlope && this.isRunning && this.isGrounded )\n        ) {\n\n            this.isIdling = false;\n            this.dispatchEvent( { type: 'startRunning' } );\n          \n        } else if ( !wasJumping && this.isJumping ) {\n\n            this.isIdling = false;\n            this.dispatchEvent( { type: 'startJumping' } );\n          \n        } else if ( !wasOnSlope && this.isOnSlope ) {\n\n            this.dispatchEvent( { type: 'startSliding' } );\n          \n        } else if ( wasGrounded && !this.isGrounded && !this.isJumping ) {\n\n            this.dispatchEvent( { type: 'startFalling' } );\n          \n        }\n\n        if ( !wasGrounded && this.isGrounded ) {\n\n            this.dispatchEvent( { type: 'endJumping' } );\n          \n        }\n\n        wasGrounded = this.isGrounded;\n        wasOnSlope  = this.isOnSlope;\n        wasIdling   = this.isIdling;\n        wasRunning  = this.isRunning;\n        wasJumping  = this.isJumping;\n\n      };\n\n    }(),\n\n    setDirection : function () {\n\n\n\n    },\n\n    jump: function () {\n      \n      if ( this.isJumping || !this.isGrounded || this.isOnSlope ) {\n\n        return;\n\n      }\n\n      // since ios dose not support porformance.now()\n      // this.jumpStartTime = performance.now();\n      this.jumpStartTime = Date.now();\n      this.currentJumpPower = 0.01;\n      this.isJumping = true;\n\n    },\n\n    updateJumping: function () {\n\n      var JUMP_DURATION = 1500;\n\n      if ( !this.isJumping ) {\n\n        return;\n\n      }\n\n      // since ios dose not support porformance.now()\n      // var elapsed = performance.now() - this.jumpStartTime;\n      var elapsed = Date.now() - this.jumpStartTime;\n      var progress = elapsed / JUMP_DURATION;\n      this.currentJumpPower = Math.cos( Math.min( progress, 1 ) * Math.PI );\n\n    }\n\n  }\n\n} )( THREE, MW );\n\n// @author yomotsu\n// MIT License\n\nMW.AnimationController = function ( mesh ) {\n\n  this.mesh   = mesh;\n  this.motion = {};\n  this.mixer  = new THREE.AnimationMixer( mesh );\n  this.currentMotionName = \"\";\n\n  var i, l, anim;\n\n  for ( i = 0, l = this.mesh.geometry.animations.length; i < l; i ++ ) {\n\n    anim = this.mesh.geometry.animations[ i ];\n    this.motion[ anim.name ] = this.mixer.clipAction( anim );\n    this.motion[ anim.name ].setEffectiveWeight( 1 );\n\n  }\n  \n};\n\nMW.AnimationController.prototype = {\n\n  play: function ( name ) {\n\n    if ( this.currentMotionName === name ) { return; }\n\n    if ( this.motion[ this.currentMotionName ] ) {\n\n      var from = this.motion[ this.currentMotionName ].play();\n      var to   = this.motion[ name ].play();\n\n      from.enabled = true;\n      to.enabled = true;\n\n      from.crossFadeTo( to, .3 );\n\n    } else {\n\n      this.motion[ name ].enabled = true;\n      this.motion[ name ].play();\n\n    }\n\n    this.currentMotionName = name;\n\n  },\n\n  turn: function () {\n\n    var DURATION  = 200;\n    var TAU = 2 * Math.PI;\n\n    var mod = function ( a, n ) { return ( a % n + n ) % n; };\n\n    var getDeltaAngle = function ( current, target ) {\n\n      var a = mod( ( current - target ), TAU );\n      var b = mod( ( target - current ), TAU );\n\n      return a < b ? -a : b;\n\n    };\n\n    return function ( rad, immediate ) {\n\n\n      var that       = this;\n      var progress   = 0;\n      var prevRotY   = this.mesh.rotation.y;\n      var targetRotY = rad;\n      var deltaY     = getDeltaAngle( prevRotY, targetRotY );\n      // var duration   = Math.abs( deltaY ) * 100;\n      var start      = Date.now();\n      var end        = start + DURATION;\n\n      if ( immediate ) {\n\n        this.mesh.rotation.y = targetRotY;\n        return;\n\n      }\n\n      if ( this._targetRotY === targetRotY ) { return; }\n\n      this._targetRotY = targetRotY;\n\n      ( function () {\n\n        var _targetRotY = targetRotY;\n\n        ( function interval () {\n\n          var now = Date.now();\n          var isAborted = _targetRotY !== that._targetRotY;\n\n          if ( isAborted ) { return; }\n\n          if ( now >= end ) {\n\n            that.mesh.rotation.y = _targetRotY;\n            delete that._targetRotY;\n            return;\n\n          }\n\n          requestAnimationFrame( interval );\n          progress = ( now - start ) / DURATION;\n          that.mesh.rotation.y = prevRotY + deltaY * progress;\n\n        } )();\n\n      } )();\n\n    }\n\n  }(),\n\n  update: function ( delta ) {\n\n    this.mixer.update( delta );\n\n  }\n\n};\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  var KEY_W     = 87,\n      KEY_UP    = 38,\n      KEY_S     = 83,\n      KEY_DOWN  = 40,\n      KEY_A     = 65,\n      KEY_LEFT  = 37,\n      KEY_D     = 68,\n      KEY_RIGHT = 39,\n      KEY_SPACE = 32,\n      KEY_R     = 82; // hack //\n\n  var DEG_0   = THREE.Math.degToRad(   0 ),\n      DEG_45  = THREE.Math.degToRad(  45 ),\n      DEG_90  = THREE.Math.degToRad(  90 ),\n      DEG_135 = THREE.Math.degToRad( 135 ),\n      DEG_180 = THREE.Math.degToRad( 180 ),\n      DEG_225 = THREE.Math.degToRad( 225 ),\n      DEG_270 = THREE.Math.degToRad( 270 ),\n      DEG_315 = THREE.Math.degToRad( 315 ),\n      DEG_360 = THREE.Math.degToRad( 360 );\n\n  ns.KeyInputControl = function () {\n    \n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n\n    this.isDisabled = false;\n\n    this.isUp    = false;\n    this.isDown  = false;\n    this.isLeft  = false;\n    this.isRight = false;\n    this.inRun   = false; // hack.\n    this.isMoveKeyHolded = false;\n    this.frontAngle = 0;\n\n    this._keydownListener = onkeydown.bind( this );\n    this._keyupListener   = onkeyup.bind( this );\n    this._blurListener    = onblur.bind( this );\n\n    window.addEventListener( 'keydown', this._keydownListener, false );\n    window.addEventListener( 'keyup',   this._keyupListener,   false );\n    window.addEventListener( 'blur',    this._blurListener,    false );\n\n  };\n\n  ns.KeyInputControl.prototype.jump = function () {\n\n    this.dispatchEvent( { type: 'jumpkeypress' } );\n\n  };\n\n  ns.KeyInputControl.prototype.updateAngle = function () {\n\n    var up    = this.isUp;\n    var down  = this.isDown;\n    var left  = this.isLeft;\n    var right = this.isRight;\n\n    if (  up && !left && !down && !right )      { this.frontAngle = DEG_0  ; }\n    else if (  up &&  left && !down && !right ) { this.frontAngle = DEG_45 ; }\n    else if ( !up &&  left && !down && !right ) { this.frontAngle = DEG_90 ; }\n    else if ( !up &&  left &&  down && !right ) { this.frontAngle = DEG_135; }\n    else if ( !up && !left &&  down && !right ) { this.frontAngle = DEG_180; }\n    else if ( !up && !left &&  down &&  right ) { this.frontAngle = DEG_225; }\n    else if ( !up && !left && !down &&  right ) { this.frontAngle = DEG_270; }\n    else if (  up && !left && !down &&  right ) { this.frontAngle = DEG_315; }\n\n  };\n\n\n  function onkeydown ( e ) {\n\n    if ( this.isDisabled ) { return; }\n\n    switch ( e.keyCode ) {\n\n      case KEY_W :\n      case KEY_UP :\n        this.isUp = true;\n        break;\n\n      case KEY_S :\n      case KEY_DOWN :\n        this.isDown = true;\n        break;\n\n      case KEY_A :\n      case KEY_LEFT :\n        this.isLeft = true;\n        break;\n\n      case KEY_D :\n      case KEY_RIGHT :\n        this.isRight = true;\n        break;\n\n      case KEY_SPACE :\n        this.jump();\n        break;\n\n      default:\n        return;\n\n    }\n    \n    var prevAngle = this.frontAngle;\n\n    this.updateAngle();\n\n    if ( prevAngle !== this.frontAngle ) {\n\n      this.dispatchEvent( { type: 'movekeychange' } );\n\n    }\n\n    if (\n      ( this.isUp || this.isDown || this.isLeft || this.isRight ) &&\n      !this.isMoveKeyHolded\n    ) {\n\n      this.isMoveKeyHolded = true;\n      this.dispatchEvent( { type: 'movekeyon' } );\n\n    }\n\n  }\n\n  function onkeyup ( e ) {\n\n    if ( this.isDisabled ) { return; }\n\n    switch ( e.keyCode ) {\n\n      case KEY_W :\n      case KEY_UP :\n        this.isUp = false;\n        break;\n\n      case KEY_S :\n      case KEY_DOWN :\n        this.isDown = false;\n        break;\n        \n      case KEY_A :\n      case KEY_LEFT :\n        this.isLeft = false;\n        break;\n\n      case KEY_D :\n      case KEY_RIGHT :\n        this.isRight = false;\n        break;\n\n      case KEY_SPACE :\n        break;\n\n      case KEY_R:\n        this.inRun = !this.inRun; // hack //  console.log(\"case KEY_R:\", e.keyCode, this.inRun);\n        break;\n\n      default:\n        return;\n\n    }\n    \n    var prevAngle = this.frontAngle;\n\n    this.updateAngle();\n\n    if ( prevAngle !== this.frontAngle ) {\n\n      this.dispatchEvent( { type: 'movekeychange' } );\n\n    }\n\n    if ( !this.isUp && !this.isDown && !this.isLeft && !this.isRight &&\n      (\n           e.keyCode === KEY_W\n        || e.keyCode === KEY_UP\n        || e.keyCode === KEY_S\n        || e.keyCode === KEY_DOWN\n        || e.keyCode === KEY_A\n        || e.keyCode === KEY_LEFT\n        || e.keyCode === KEY_D\n        || e.keyCode === KEY_RIGHT\n      )\n    ) {\n\n      this.isMoveKeyHolded = false;\n      this.dispatchEvent( { type: 'movekeyoff' } );\n\n    }\n\n  }\n\n  function onblur ( e ) {\n\n    this.isUp    = false;\n    this.isDown  = false;\n    this.isLeft  = false;\n    this.isRight = false;\n//  this.inRun   = false; // hack // DO NOT SET TO FALSE ON BLUR. //\n    \n    if ( this.isMoveKeyHolded ) {\n\n      this.isMoveKeyHolded = false;\n      this.dispatchEvent( { type: 'movekeyoff' } );\n\n    }\n\n  }\n\n} )( THREE, MW );\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  var PI2     = Math.PI * 2,\n      PI_HALF = Math.PI / 2;\n\n  var modulo = function ( n, d ) {\n\n    return ( ( n % d ) + d ) % d;\n\n  };\n\n  // camera              isntance of THREE.Camera\n  // trackObject         isntance of THREE.Object3D\n  // params.el           DOM element\n  // params.radius       number\n  // params.minRadius    number\n  // params.maxRadius    number\n  // params.rigidObjects array of inctances of THREE.Mesh\n  ns.TPSCameraControl = function ( camera, trackObject, params ) {\n\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n    this.camera = camera;\n    this.trackObject  = trackObject;\n    this.el           = params && params.el || document.body;\n    this.offset       = params && params.offset || new THREE.Vector3( 0, 0, 0 ),\n    this.radius       = params && params.radius    || 10;\n    this.minRadius    = params && params.minRadius || 1;\n    this.maxRadius    = params && params.maxRadius || 30;\n    this.rigidObjects = params && params.rigidObjects || [];\n    this.lat   = 0;\n    this.lon   = 0;\n    this.phi   = 0; // angle of zenith\n    this.theta = 0; // angle of azimuth\n    this.mouseAccelerationX = params && params.mouseAccelerationX !== undefined ? params.mouseAccelerationX : 100;\n    this.mouseAccelerationY = params && params.mouseAccelerationY !== undefined ? params.mouseAccelerationY : 30;\n    this._pointerStart = { x: 0, y: 0 };\n    this._pointerLast  = { x: 0, y: 0 };\n\n    this.setNearPlainCornersWithPadding();\n    this.update();\n\n    this._mousedownListener = onmousedown.bind( this );\n    this._mouseupListener   = onmouseup.bind( this );\n    this._mousedragListener = onmousedrag.bind( this );\n    this._scrollListener    = onscroll.bind( this );\n\n    this.el.addEventListener( 'mousedown', this._mousedownListener, false );\n    this.el.addEventListener( 'mouseup',   this._mouseupListener,   false );\n    this.el.addEventListener( 'mousewheel',     this._scrollListener, false );\n    this.el.addEventListener( 'DOMMouseScroll', this._scrollListener, false );\n\n  };\n\n  ns.TPSCameraControl.prototype = {\n\n    constructor: ns.TPSCameraControl,\n\n    update: function () {\n\n      var position,\n          distance;\n\n      this._center = new THREE.Vector3(\n        this.trackObject.matrixWorld.elements[ 12 ] + this.offset.x,\n        this.trackObject.matrixWorld.elements[ 13 ] + this.offset.y,\n        this.trackObject.matrixWorld.elements[ 14 ] + this.offset.z\n      );\n      position = new THREE.Vector3(\n        Math.cos( this.phi ) * Math.cos( this.theta + PI_HALF ),\n        Math.sin( this.phi ),\n        Math.cos( this.phi ) * Math.sin( this.theta + PI_HALF )\n      );\n      distance = this.collisionTest( position.clone().normalize() );\n      position.multiplyScalar( distance );\n      position.add( this._center );\n      this.camera.position.copy( position );\n\n      if ( this.lat === 90 ) {\n\n        this.camera.up.set(\n          Math.cos( this.theta + Math.PI ),\n          0,\n          Math.sin( this.theta + Math.PI )\n        );\n\n      } else if ( this.lat === -90 ) {\n\n        this.camera.up.set(\n          Math.cos( this.theta ),\n          0,\n          Math.sin( this.theta )\n        );\n\n      } else {\n\n        this.camera.up.set( 0, 1, 0 );\n\n      }\n\n      this.camera.lookAt( this._center );\n      this.dispatchEvent( { type: 'updated' } );\n\n    },\n\n    getFrontAngle: function () {\n\n      return PI2 + this.theta;\n\n    },\n\n    setNearPlainCornersWithPadding: function () {\n\n      var near = this.camera.near,\n          halfFov = this.camera.fov * 0.5,\n          h = ( Math.tan( THREE.Math.degToRad( halfFov ) ) * near ),\n          w = h * this.camera.aspect;\n\n      this.nearPlainCornersWithPadding = [\n        new THREE.Vector3( -w - near, -h - near, 0 ),\n        new THREE.Vector3(  w + near, -h - near, 0 ),\n        new THREE.Vector3(  w + near,  h + near, 0 ),\n        new THREE.Vector3( -w - near,  h + near, 0 )\n      ];\n\n    },\n\n    setLatLon: function ( lat, lon ) {\n\n      this.lat = lat >  90 ?  90 :\n                 lat < -90 ? -90 :\n                 lat;\n      this.lon = lon < 0 ? 360 + lon % 360 : lon % 360;\n\n      this.phi   =  THREE.Math.degToRad( this.lat );\n      this.theta = -THREE.Math.degToRad( this.lon );\n\n    },\n\n    collisionTest: function ( direction ) {\n\n      var i,\n          distance = this.radius,\n          nearPlainCorner,\n          rotationMatrix = new THREE.Matrix4(),\n          rotationX = new THREE.Matrix4().makeRotationX( this.phi ),\n          rotationY = new THREE.Matrix4().makeRotationY( this.theta ),\n          origin,\n          raycaster,\n          intersects;\n\n      rotationMatrix.multiplyMatrices( rotationX, rotationY );\n\n      for ( i = 0; i < 4; i ++ ) {\n\n        nearPlainCorner = this.nearPlainCornersWithPadding[ i ].clone();\n        nearPlainCorner.applyMatrix4( rotationMatrix );\n\n        origin = new THREE.Vector3(\n          this._center.x + nearPlainCorner.x,\n          this._center.y + nearPlainCorner.y,\n          this._center.z + nearPlainCorner.z\n        );\n        raycaster = new THREE.Raycaster(\n          origin,           // origin\n          direction,        // direction\n          this.camera.near, // near\n          this.radius       // far\n        );\n        intersects = raycaster.intersectObjects( this.rigidObjects );\n\n        if ( intersects.length !== 0 && intersects[ 0 ].distance < distance ) {\n\n          distance = intersects[ 0 ].distance;\n\n        }\n\n      }\n\n      return distance;\n\n    }\n\n  };\n\n  function onmousedown ( event ) {\n\n    this.dispatchEvent( { type: 'mousedown' } );\n    this._pointerStart.x = event.clientX;\n    this._pointerStart.y = event.clientY;\n    this._pointerLast.x = this.lon;\n    this._pointerLast.y = this.lat;\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\n    this.el.addEventListener( 'mousemove', this._mousedragListener, false );\n//  document.body.className += ' js-TPSCameraDragging';\n    document.body.classList.add(\"js-TPSCameraDragging\");\n\n  }\n\n  function onmouseup () {\n\n    this.dispatchEvent( { type: 'mouseup' } );\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\n//  document.body.className = document.body.className.replace( / js-TPSCameraDragging/g, '' );\n    document.body.classList.remove(\"js-TPSCameraDragging\");\n\n  }\n\n  function onmousedrag ( event ) {\n\n    var w = this.el.offsetWidth,\n        h = this.el.offsetHeight,\n        x = ( this._pointerStart.x - event.clientX ) / w * 2,\n        y = ( this._pointerStart.y - event.clientY ) / h * 2;\n\n    this.setLatLon(\n      this._pointerLast.y + y * this.mouseAccelerationY,\n      this._pointerLast.x + x * this.mouseAccelerationX\n    );\n\n  }\n\n  function onscroll ( event ) {\n\n    event.preventDefault();\n\n    if ( event.wheelDeltaY ) {\n\n      // WebKit\n      this.radius -= event.wheelDeltaY * 0.05;\n\n    } else if ( event.wheelDelta ) {\n\n      // IE\n      this.radius -= event.wheelDelta * 0.05 ;\n\n    } else if ( event.detail ) {\n\n      // Firefox\n      this.radius += event.detail;\n\n    }\n\n    this.radius = Math.max( this.radius, this.minRadius );\n    this.radius = Math.min( this.radius, this.maxRadius );\n\n  }\n\n} )( THREE, MW );\n"
			},
			{
				"name": "VirtualInput.js",
				"source": "/*!\n * @author yomotsu http://yomotsu.net/\n * MIT License\n */\n\nvirtualInput = {};\n\n( function ( ns ) {\n\n    var _ua = function () {\n        return {\n            Touch: typeof document.ontouchstart != \"undefined\",\n            Pointer: window.navigator.pointerEnabled,\n            MSPoniter: window.navigator.msPointerEnabled\n        }\n    };\n\n    ns._start = \"pointerdown MSPointerDown touchstart mousedown\";\n    ns._move  = \"pointermove MSPointerMove touchmove  mousemove\";\n    ns._end   = \"pointerup   MSPointerUp   touchend   mouseup\";\n\n    ns.Joystick = function ( $container, size, params ) {\n\n        Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n\n        this.angle = 0;\n        this.position = { x: 0, y: 0 };\n        this.pointerId = null;\n        this.isActive = false;\n\n        this.width = size * 2;\n        this.halfWidth = size;\n\n        var that = this;\n        var id = params && params.id ? params.id  : '';\n        var template = [\n          '<div class=\"gameinput-joystick\" id=\"' + id + '\">',\n            '<div class=\"gameinput-joystick__button\"></div>',\n            '<svg class=\"gameinput-frame\" width=\"' + this.width + '\" height=\"' + this.width + '\" viewbox=\"0 0 64 64\">',\n              '<polygon points=\"32 19 34 21 30 21\" fill=\"#fff\"></polygon>',\n              '<polygon points=\"45 32 43 34 43 30\" fill=\"#fff\"></polygon>',\n              '<polygon points=\"32 45 34 43 30 43\" fill=\"#fff\"></polygon>',\n              '<polygon points=\"19 32 21 34 21 30\" fill=\"#fff\"></polygon>',\n              '<circle cx=\"32\" cy=\"32\" r=\"16\" fill=\"none\" stroke=\"#fff\" stroke-width=\"' + ( this.halfWidth / 64 ) + '\"></circle>',\n            '</svg>',\n          '</div>'\n        ].join( '' );\n\n        var $win = $( window );\n        this.$all = $( template );\n        this.$button = this.$all.find( \".gameinput-joystick__button\" );\n        $container.append( this.$all );\n\n        this.$all.css({\n            width:  this.width,\n            height: this.width\n        });\n\n        this.$button.css({\n            width:  size * .6,\n            height: size * .6\n        });\n\n        this.offset = this.$all.offset();\n        this.buttonRadius = this.$button.width() / 2;\n        this.frameRadius = size / 2;\n    //  this.position = { x: 0, y: 0 };\n\n        var onbuttondown = function ( event ) {\n\n            event.preventDefault();\n            event.stopPropagation();\n            \n            that.dispatchEvent( { type: 'active' } );\n            that.isActive = true;\n            \n            if ( event.originalEvent.pointerId ) {\n            \n                that.pointerId = event.originalEvent.pointerId;\n            \n            } else if ( event.originalEvent.changedTouches ) {\n            \n                that.pointerId = event.originalEvent.changedTouches[ event.originalEvent.changedTouches.length - 1 ].identifier;\n            \n            }\n            \n            var coordinate = that.getEventCoordinate( event );\n            \n            if ( !coordinate ) { return; }\n            \n            that.setPosition( coordinate.x, coordinate.y );\n            \n            $win.on( ns._move, onbuttonmove );\n            $win.on( ns._end,  onbuttonup );\n\n        };\n\n        var onbuttonmove = function ( event ) {\n\n            event.preventDefault();\n            event.stopPropagation();\n            \n            var coordinate = that.getEventCoordinate( event );\n            \n            if ( !coordinate ) {\n                return;\n            }\n            \n            that.setPosition( coordinate.x, coordinate.y );\n\n        };\n\n        var onbuttonup = function ( event ) {\n\n            event.stopPropagation();\n\n            var wasEventHappend;\n\n            if ( event.originalEvent.pointerId ) {\n\n                if ( that.pointerId !== event.originalEvent.pointerId ) {\n                    return;\n                }\n\n            } else if ( event.originalEvent.changedTouches ) {\n            \n                for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\n                \n                    if ( that.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\n                        wasEventHappend = true;\n                        break;\n                    }\n                \n                    if ( !wasEventHappend ) {\n                        return;\n                    }\n                \n                }\n            \n            }\n\n            that.dispatchEvent( { type: \"disactive\" } );\n            that.isActive = false;\n            that.setPosition( 0, 0 );\n            $win.off( ns._move, onbuttonmove );\n            $win.off( ns._end,  onbuttonup );\n\n        };\n\n        this.setCSSPosition( 0, 0 );\n        this.$all.on( ns._start, onbuttondown );\n\n        $win.on( \"resize\", function () {\n\n            that.offset = that.$all.offset();\n\n        });\n\n    };\n\n    ns.Joystick.prototype.getLength = function ( x, y ) {\n        return Math.sqrt( Math.pow( x, 2 ) + Math.pow( y, 2 ) );\n    };\n\n    ns.Joystick.prototype.getAngle = function ( lengthX, lengthY ) {\n\n        if ( lengthX === 0 && lengthY === 0 ) {\n          return this.angle;\n        }\n\n        var angle = Math.atan( lengthY / lengthX );\n\n        if ( 0 > lengthX && 0 <= lengthY ) {\n          //the second quadrant\n          angle += Math.PI;\n\n        } else if ( 0 > lengthX && 0 > lengthY ) {\n          //the third quadrant\n          angle += Math.PI;\n\n        } else if ( 0 <= lengthX && 0 > lengthY ) {\n          //the fourth quadrant\n          angle += Math.PI * 2;\n\n        }\n\n        this.angle = angle;\n        return angle;\n\n    };\n\n    ns.Joystick.prototype.getPointOnRadius = function ( angle ) {\n\n        return {\n          x: Math.cos( angle ),\n          y: Math.sin( angle )\n        };\n\n    };\n\n    ns.Joystick.prototype.getEventCoordinate = function ( event ) {\n\n        var x, y, _event = null, i, l;\n\n        if ( event.originalEvent.pointerId ) {\n\n            if ( this.pointerId === event.originalEvent.pointerId ) {\n                _event = event.originalEvent;\n            }\n\n        } else if ( event.originalEvent.changedTouches ) {\n\n            for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\n                if ( this.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\n                  _event = event.originalEvent.changedTouches[ i ];\n                }\n            }\n\n        } else {\n\n            _event = event;\n\n        }\n\n        if ( _event === null ) {\n            return false;\n        }\n\n        x = (   ( _event.clientX - this.offset.left ) - this.halfWidth ) / this.halfWidth * 2;\n        y = ( - ( _event.clientY - this.offset.top  ) + this.halfWidth ) / this.halfWidth * 2;\n\n        return { x: x, y: y };\n\n    };\n\n    ns.Joystick.prototype.setPosition = function ( x, y ) {\n\n        this.position.x = x;\n        this.position.y = y;\n        var length = this.getLength( x, y );\n        var angle = this.getAngle( x, y );\n\n        if ( 1 >= length ) {\n            this.setCSSPosition( x, y );\n            return;\n        }\n\n        var pointOnRadius = this.getPointOnRadius( angle );\n        this.setCSSPosition( pointOnRadius.x, pointOnRadius.y );\n\n    };\n\n    ns.Joystick.prototype.setCSSPosition = function ( x, y ) {\n\n        this.$button.css( {\n            left: ( this.halfWidth + x * this.frameRadius - this.buttonRadius ),\n            top:  ( this.halfWidth - y * this.frameRadius - this.buttonRadius )\n        });\n\n    };\n\n    ns.Button = function ( $container, size, params ) {\n\n        Object.assign( this, THREE.EventDispatcher.prototype );  // THREE.EventDispatcher.prototype.apply( this );\n\n        var that = this;\n        var id = params && params.id ? params.id  : \"\";\n        var label = params.label;\n        var template = [\n          '<div class=\"gameinput-button\" id=\"' + id + '\">',\n            '<div class=\"gameinput-button__inner\">',\n              label,\n            '</div>',\n          '</div>'\n        ].join( \"\" );\n        var $button = $( template );\n        $container.append( $button );\n        $button.css( {\n            width: size,\n            height: size\n        });\n\n        $button.on( ns._start, function () {\n            that.dispatchEvent( { type: \"press\" } );\n        });\n\n    };\n\n})( virtualInput );\n"
			},
			{
				"name": "world.js",
				"source": "//  MW WORLD.\n\nworld = new MW.World();\n\nvar clock = new THREE.Clock();\nfunction update( event ){\n\tvar delta = clock.getDelta();\n\tworld.step( delta );\n}\n"
			},
			{
				"name": "octree.js",
				"source": "//  OCTREE.\n\n//  Make a octree object, which will be the \n//  container of rigid objects such as terrain ect.\n\nconst partition = 2;\n\nconst min = new THREE.Vector3( -1000, -1000, -1000 );\nconst max = new THREE.Vector3(  1000,  1000,  1000 );\n\noctree = new MW.Octree( min, max, partition );\n\n//  WORLD.\n\nworld.add( octree );\n\n//  GROUND.\n\nground = new THREE.Mesh(\n\tnew THREE.PlaneGeometry( 2500, 2500, 1, 1 ),\n\tnew THREE.MeshPhongMaterial({ \n\t\tcolor:0x829ec4,\n\t\ttransparent:false,\n\t\topacity:1, \n\t\tshininess: 80,\n\t\twireframe:false,\n\t})\n);\n\nground.rotation.x = THREE.Math.degToRad( -90 );\n\n//  We want the ground as collision surface only,\n//  so we do not add the ground in the scene.\n\n//\tscene.add( ground );\n//\tground.visible = false;\n//  ground.receiveShadow = true;\n\n//  Add the ground to WALKMESH world octree object.\n//  MESHWALK use octree system to detect collision objects.\n\noctree.importThreeMesh( ground ); // important!\n\n//  Octree helpers.\n\nvar octMeshHelpers = [];\nvar octEdgesHelpers = [];\n\n//  Add octree edges helpers.\n//  octreeHelpers( octree );\n\nfunction octreeHelpers( octree ){\n\tvar nodeIndex = octree.nodes.length - 1;\n\tvar node = octree.nodes[ nodeIndex ][0];\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\n\toctree.nodes[ nodeIndex ].forEach(function(node){\n\n\t\tvar x = node.max.x - node.min.x;\n\t\tvar y = node.max.y - node.min.y;\n\t\tvar z = node.max.z - node.min.z;\n\n\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\n\t\tmesh.position.set(\n\t\t\tnode.min.x + (x/2),\n\t\t\tnode.min.y + (y/2),\n\t\t\tnode.min.z + (z/2)\n\t\t);\n\n\t\t//  scene.add( mesh );\n\t\tscene.add( mesh, helper );\n\n\t\toctMeshHelpers.push(mesh);\n\t\toctEdgesHelpers.push(helper);\n\t});\n}\n\nfunction octreeNodeHelper( node ){\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.set(\n\t\tnode.min.x + (x/2),\n\t\tnode.min.y + (y/2),\n\t\tnode.min.z + (z/2)\n\t);\n\tscene.add( mesh );\n\toctMeshHelpers.push(mesh);\n\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\thelper.name = \"octree helper\";\n\tscene.add( helper );\n\toctEdgesHelpers.push(helper);\n}\n\n/*\n//  Remove octree mesh helpers.\n    setTimeout(function(){\n        octMeshHelpers.forEach( function( item, i ){\n            scene.remove( octMeshHelpers[i] );\n            var geometry = octMeshHelpers[i].geometry;\n            var material = octMeshHelpers[i].material;\n            geometry.dispose();\n            material.dispose();\n        });\n        console.log( \"octree mesh helpers has been removed.\" );\n    }, 5000);\n*/\n\n"
			},
			{
				"name": "AW3D.js (v0.4)",
				"source": "//  AW3D.js (v0.4.0)\n\nAW3D = { VERSION: \"0.4.0\" };\n\n//  Player Holder.\nAW3D.PlayerHolder = function ( name ){\n\tvar holder = new THREE.Object3D();\n\tholder.position.set( 0, 1, 0 );\n\tholder.name = name || \"PLAYER HOLDER\";\n\treturn holder;\n};\n\n//  Player Holder Helper.\nAW3D.PlayerHolderHelper = function ( name ){\n\tvar helper = new THREE.BoxHelper();\n\thelper.name = name || \"HOLDER HELPER\";\n\thelper.visible = true;\n\treturn helper;\n};\n\n//  Player Controller Direction pointer.\nAW3D.DirectionPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n\t//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshStandardMaterial({color:0x00ff00});\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 15, 0);\n\tpointer.name = name || \"PLAYER DIRECTION\";\n\tpointer.visible = true;\n\treturn pointer;\n};\n\n//  Player Sphere.\nAW3D.PlayerSphere = function ( name ){\n\tvar sphere = new THREE.Mesh(\n\t\tnew THREE.SphereGeometry( 15, 8, 4 ),\n\t\tnew THREE.MeshBasicMaterial({ \n\t\t\tcolor: 0xff0000,  \n\t\t\twireframe: true,\n\t\t})\n\t); \n\tsphere.position.y = 12;\n\tsphere.name = name || \"PLAYER SPHERE\";\n\tsphere.visible = true;\n\treturn sphere;\n};\n\n//  Player pointer.\nAW3D.PlayerPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n\t//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshNormalMaterial();\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 40, 0);\n\tpointer.name = name || \"PLAYER POINTER\";\n\tpointer.visible = true; // debugMode || false;\n\treturn pointer;\n};\n\n\n//  OutfitManager.js\n\nAW3D.OutfitManager = function(){\n\n\tvar self = this;\n\n\t//  requires \"signals.min.js\"\n\tvar Signal = signals.Signal;\n\tthis.added = new Signal();\n\tthis.removed = new Signal();\n\tthis.changed = new Signal();\n\n\tthis.eventTimeout = undefined;\n\tthis.direction = new THREE.Object3D();\n\n\tthis.gender = {\n\t\tmale    : false,\n\t\tfemale  : false,\n\t\tshemale : false,\n\t\ttrans   : false,\n\t};\n\n\tthis.genitals = { \n\t\tvagina   : false,\n\t\tpenis    : false,\n\t\tattached : false,\n\t};\n\n\tthis.layers = [\n\t\t\"body\",\n\t\t\"head\",\n\t\t\"face\",\n\t\t\"hairs\",\n\t\t\"upper\", // chest.\n\t\t\"lower\", // hips.\n\t\t\"torso\", // (chest & hips).\n\t\t\"arms\",\n\t\t\"legs\",\n\t\t\"hands\",\n\t\t\"feet\",\n\t\t\"genitals\", \n\t\t\"skeleton\",\n\t];\n\n\tthis.slots = [\n\t\t\"skeleton\",\n\t\t\"body\",\n\t\t\"hairs\",\n\t\t\"eyes\",\n\t\t\"glasses\",\n\t\t\"hat\",\n\t\t\"stockings\",\n\t\t\"underwears\",\n\t\t\"costume\",\n\t\t\"tshirt\",\n\t\t\"skirt\",\n\t\t\"trousers\",\n\t\t\"skirt\",\n\t\t\"dress\",\n\t\t\"shoes\",\n\t\t\"coat\",\n\t\t\"penis\", \n\t\t\"vagina\",\n\t];\n\n\tthis.stickers = [\n\t\t\"skin\",\n\t\t\"makeup\",\n\t\t\"tattoo\",\n\t\t\"bodypaint\",\n\t\t\"neck\",\n\t\t\"chest\",\n\t\t\"belly\",\n\t\t\"upperlimb\",\n\t\t\"arm\",\n\t\t\"forearm\",\n\t\t\"wrist\",\n\t\t\"hand\",\n\t\t\"lowerlimb\",\n\t\t\"thigh\",\n\t\t\"leg\",\n\t\t\"foot\",\n\t\t\"butt\",\n\t\t\"back\",\n\t\t\"scapula\",\n\t\t\"lumbar\",\n\t];\n\n\tthis.attachments = [\n\t\t\"helmet\",\n\t\t\"face\",\n\t\t\"mask\",\n\t\t\"teeth\",\n\t\t\"beard\",\n\t\t\"eyelash\",\n\t\t\"glasses\",\n\t\t\"ears\",\n\t\t\"belly\",\n\t\t\"gun\",\n\t\t\"wepon\",\n\t\t\"knife\",\n\t\t\"sword\",\n\t\t\"bistol\",\n\t\t\"watch\",\n\t\t\"jewelry\",\n\t\t\"earings\",\n\t\t\"necklace\",\n\t\t\"bracelet\",\n\t\t\"bag\",\n\t\t\"handbag\",\n\t\t\"cape\",\n\t\t\"coat\",\n\t\t\"horn\",\n\t\t\"tail\",\n\t\t\"penis\", \n\t];\n\n\tthis.AnimationsHandler = [];\n\n\t//  Outfit.AnimationsHandler is an simple array where local\n\t//  player.outfit keeps the AW3D.AnimationHandler instances.\n\n\tthis.AnimationsHandler.reset = function(){\n\t\tthis.length = 0; // reset array.\n\t};\n\n\tthis.AnimationsHandler.stop = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.stop();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.jump = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.jump();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.play = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.play(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOff = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOff(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeIn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeIn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeOut = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeOut(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.refresh = function(){\n\n\t\tthis.stop();\n\t\tthis.fill(null);\n\t\tthis.reset();\n\n\t\tvar gender = self.getGender();\n\n\t\tself.slots.forEach( function(name, i){\n\n\t\t\tif ( !!self[ name ] ){\n\n\t\t\t\tvar handler = new AW3D.AnimationHandler( self[ name ], gender );\n\n\t\t\t\tself.AnimationsHandler.push( handler );\n\t\t\t}\n\t\t});\n\n\t\tthis.play(\"idle\");\n\t};\n\n\t//  Outfit EventDispatcher.\n\tObject.assign( this, THREE.EventDispatcher.prototype );  // important!\n\n};\n\n\nAW3D.OutfitManager.prototype = {\n\n\tconstructor: AW3D.OutfitManager,\n\n\trefresh: function(){\n\t\tthis.AnimationsHandler.refresh();\n\t},\n\n\n\tget: function(){\n\n\t\tvar results = {};\n\n\t\tvar _get = ( arg ) => {\n\n\t\t\tif ( typeof( arg ) == \"string\" ) {\n\t\t\t\tif ( !!this[arg] ) results[arg] =  this[arg];\n\t\t\t}\n\n\t\t\tif ( arg instanceof Array ) {\n\t\t\t\targ.forEach( ( key ) => {\n\t\t\t\t\t_get( key );\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif ( arguments.length > 0 ){\n\n\t\t\tfor (var i in arguments){\n\n\t\t\t\tif ( !arguments[i] ) continue;\n\n\t\t\t\t_get( arguments[i] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.slots.forEach( (name) => { _get( name ); });\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tset: function(){\n\t\t//  Set \"this.slot\" but not add to \"this.direction\".\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( !!this[ name ] ) this.remove( name );\n\n\t\t\tthis[ name ] = asset;\n\n\t\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[ name ], this.getGender() );\n\n\t\t\t//  Add animation handler.\n\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t}\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( () => {\n\t\t\tthis.dispatchEvent( {type:\"change\"} );\n\t\t\tthis.changed && this.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tadd: function(){\n\n\t\tfor (var arg in arguments) {\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( this[ name ] ) this.remove( name );  // important!\n\n\t\t\tthis[ name ] = asset;\n\n\t\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[name], this.getGender() );\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t\t//  Copy each action properties of first animation handler.\n\t\t\t\tvar masterHandler = this.AnimationsHandler[0];\n\n\t\t\t\tfor ( var action in handler.actions ) {\n\n\t\t\t\t\tif ( !action ) break;\n\n\t\t\t\t\thandler.actions[action].loop = masterHandler.actions[action].loop;\n\t\t\t\t\thandler.actions[action].weight = masterHandler.actions[action].weight;\n\t\t\t\t\thandler.actions[action].timeScale = masterHandler.actions[action].timeScale;\n\t\t\t\t\thandler.actions[action].currentTime = masterHandler.actions[action].currentTime;\n\t\t\t\t\thandler.actions[action].interpolationType = masterHandler.actions[action].interpolationType;\n\n\t\t\t\t\tif ( masterHandler.actions[action].isPlaying ) {\n\t\t\t\t\t\thandler.actions[action].play( masterHandler.actions[action].currentTime );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t\t} else {\n\n\t\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\t\t\t\t//  Play idle.\n\t\t\t\tthis.AnimationsHandler.play(\"idle\");\n\n\t\t\t}\n\n\t\t\t//  Add outfit item to scene.\n\t\t\tthis.direction.add( this[ name ] );\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"add\"} );\n\t\tthis.added && this.added.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( () => {\n\t\t\tthis.dispatchEvent( {type:\"change\"} );\n\t\t\tthis.changed && this.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremove: function(){\n\n\t\tif ( arguments.length == 0 ) return;\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif ( !arguments[arg] ) continue;\n\t\t\tif ( !this.slots.includes( arguments[arg] ) ) continue;\n\n\t\t\tvar name = arguments[arg];\n\n\t\t\t//  Remove from scene (does not throw error).\n\t\t\tthis.direction.remove( this[ name ] );\n\n\t\t\t//  Dispose textures.\n\n\t\t\tif ( this[ name ] ) {\n\n\t\t\t\tif (this[ name ].material && !this[ name ].material.materials) {\n\n\t\t\t\t\t//  Single material.\n\n\t\t\t\t\tObject.keys(this[ name ].material).filter( (key) => {\n\t\t\t\t\t\treturn this[ name ].material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t}).forEach( (key) => {\n\t\t\t\t\t\tthis[ name ].material[ key ].dispose();\n\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE.  important!\n\t\t\t\t\t});\n\n\t\t\t\t\tthis[ name ].material.dispose();\n\n\t\t\t\t} else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n\t\t\t\t\t//  Multimaterial.\n\n\t\t\t\t\tthis[ name ].material.materials.forEach(function(material){\n\n\t\t\t\t\t\tObject.keys(material).filter(function(key){\n\t\t\t\t\t\t\treturn material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t\t}).forEach(function(key){\n\t\t\t\t\t\t\tmaterial[ key ].dispose();\n\t\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE. important!\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmaterial.dispose();\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//  Dispose geometry.\n\t\t\tif ( this[ name ] ) this[ name ].geometry.dispose();\n\n\t\t\t//  Dispose bones texture. !important\n\t\t\tif ( this[ name ] && this[ name ].skeleton  )\n\t\t\t\tthis[ name ].skeleton.boneTexture.dispose();\n\n\t\t\t//  Remove the animation handler.\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t\t//  Find handler index.\n\t\t\t\tvar index = this.AnimationsHandler.findIndex((handler) => {\n\t\t\t\t\treturn handler.mesh == this[ name ];\n\t\t\t\t});\n\n\t\t\t\t//  Keep in mind \"splice()\" uses \"zero\" \n\t\t\t\t//  and \"negative\" indexes also. // danger!\n\t\t\t\t//  debugMode && console.log({\"index\": index});\n\n\t\t\t\tif ( index != undefined && index > -1 ) {\n\n\t\t\t\t\t//  Get and remove handler from AnimationsHandler.\n\t\t\t\t\tvar handler = this.AnimationsHandler.splice(index, 1)[0];\n\n\t\t\t\t\t//  Stop handler animations.\n\t\t\t\t\thandler.stop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//  Delete slot.\n\t\t\tdelete this[ name ];\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"remove\"} );\n\t\tthis.removed && this.removed.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  remove has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( () => {\n\t\t\tthis.dispatchEvent( {type:\"change\"} );\n\t\t\tthis.changed && this.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremoveAll: function() { \n\n\t\tthis.slots.forEach( ( name ) => {\n\t\t\tif ( this[ name ] ) this.remove( name );\n\t\t});\n\n\t\treturn this;\n\n\t},\n\n\tremoveFromScene: function(){\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tthis.slots.forEach( ( name ) => {\n\t\t\t\tthis.remove( name );\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tfor (var arg in arguments){\n\t\t\t\tthis.remove( arguments[arg] );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveTexture: function( outfit, map, index ){\n\n\t\t//  outfit: outfit slot name (e.g \"body\", \"hair\", \"dress\", etc.)\n\t\t//  map   : material map name (e.g. \"map\", \"bumpMap\", \"normalMap\", etc.)\n\t\t//  index : material index of multimaterial (\"null\" for simple material).\n\n\t\tif ( !this[ outfit ] ) return;\n\t\tif ( !this[ outfit ].material ) return;\n\n\t\t//  Material.\n\n\t\tif ( index == null || isNaN(index) || typeof(index) != \"number\" ) {\n\n\t\t\tif ( !this[ outfit ].material[ map ] ) return;\n\n\t\t\tthis[ outfit ].material[ map ].dispose();\n\t\t\tthis[ outfit ].material[ map ] = null;\n\t\t\tthis[ outfit ].material.needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t//  MultiMaterial.\n\n\t\tif ( typeof(index) == \"number\" && index > -1 ) {\n\n\t\t\tif ( !this[ outfit ].material.materials ) return;\n\t\t\tif ( !this[ outfit ].material.materials[ index ] ) return;\n\t\t\tif ( !this.body.material.materials[ index ][ map ] ) return;\n\n\t\t\tthis[ outfit ].material.materials[ index ][ map ].dispose();\n\t\t\tthis[ outfit ].material.materials[ index ][ map ] = null;\n\t\t\tthis[ outfit ].material.materials[ index ].needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\t},\n\n\tsetGender: function( gender ){\n\n\t\tvar self = this;\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = ( name == gender );\n\t\t});\n\n\t\t//  Outfit direction scale. (object3D)\n\n\t\tswitch ( this.getGender() ){\n\n\t\t\tcase \"male\":\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t\t\tbreak;\n\n\t\t\tcase \"female\":\n\t\t\t\tthis.direction.scale.set(0.95, 0.95, 0.95);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t}\n\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetGender: function(){\n\n\t\tvar self = this;\n\n\t\tif (arguments.length > 0){\n\n\t\t\treturn self.gender[ arguments[0] ];\n\n\t\t} else {\n\n\t\t\treturn Object.keys(this.gender).find( function( name ){\n\t\t\t\treturn self.gender[ name ];\n\t\t\t});\n\n\t\t}\n\t},\n\n\tresetGender: function(){\n\n\t\tvar self = this;\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = false;\n\t\t});\n\n\t\tthis.direction.scale.set(1, 1, 1);\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetPose: function( name ){\n\n\t\tvar name = name || \"body\";\n\t\tif ( !this[ name ] ) return;\n\t\tif ( !this.slots.includes( name ) ) return;\n\n\t\tvar pose = [];\n\n\t\tfor (var i in this[ name ].skeleton.bones) {\n\t\t\tvar key = {}; // {\"pos\":[], \"rot\":[], \"scl\":[]};\n\t\t\tkey.pos = this[ name ].skeleton.bones[i].position.toArray();\n\t\t\tkey.rot = this[ name ].skeleton.bones[i].quaternion.toArray();\n\t\t\tkey.scl = this[ name ].skeleton.bones[i].scale.toArray();\n\t\t\tpose.push(key);\n\t\t}\n\n\t\treturn pose;\n\t},\n\n\n\ttoJSON: function(){\n\n\t\tvar data = {};\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tfor (var i = 0; i < this.slots.length; i++) {\n\n\t\t\t\tvar name = this.slots[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material  = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor (var i = 0; i < arguments.length; i++){\n\n\t\t\t\tvar name = arguments[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.getGender() ) \n\t\t\tdata.gender = this.getGender();\n\n\t\tvar data = JSON.stringify( data );\n\n\t\tif ( data === \"{}\" ) \n\t\t\treturn null;\n\t\telse \n\t\t\treturn JSON.parse( data );\n\n\t},\n\n\t//  fromJSON (v2.1).\n\n\tfromJSON: function( json ){\n\n\t\t//  Make a copy of json. important!\n\n\t\tif ( typeof(json) == \"object\" ) {\n\n\t\t\ttry {\n\n\t\t\t\tvar json = JSON.stringify( json ); // string copy of json.\n\n\t\t\t} catch(err) { throw err; }\n\n\t\t}\n\n\t\t//  requires \"validation.js\".\n\n\t\tif ( typeof(json) == \"string\" ) {\n\n\t\t\tif ( !validator.isJSON( json ) ) {\n\t\t\t\tthrow \"Validation Error: json not valid\";\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow \"Type Error: json is not string type.\";\n\n\t\t}\n\n\n\t\tvar json = JSON.parse( json ); // (now is a json copy).\n\n\n\t\tvar self = this;\n\n\t\t//  Set gender first.\n\n\t\tthis.removeAll();          // important!\n\t\tvar gender = json.gender;  // important!\n\t\tthis.setGender( gender );  // important!\n\n\t\t//  Clear gender of json.\n\t\tdelete json.gender; // (is a copy of json).\n\n\t\t//  ORDER DOES MATTER for transparency:\n\t\t//   Order in localPlayer.outfit.direction.children array DOES MATTER.\n\t\t//  So we must deliver the outfit.direction.children array with the following order:\n\t\t//  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\n\n\t\tvar orderMap = [];\n\n\t\t(function(){\n\t\t\tif (json.skeleton) orderMap.push(\"skeleton\");\n\t\t\tif (json.body) orderMap.push(\"body\");\n\t\t\tif (json.eyes) orderMap.push(\"eyes\");\n\t\t\tif (json.glasses) orderMap.push(\"glasses\");\n\t\t\tif (json.hairs) orderMap.push(\"hairs\");\n\t\t\tif (json.hat) orderMap.push(\"hat\");\n\t\t\tif (json.stockings) orderMap.push(\"stockings\");\n\t\t\tif (json.underwears) orderMap.push(\"underwears\");\n\t\t\tif (json.costume) orderMap.push(\"costume\");\n\t\t\tif (json.tshirt) orderMap.push(\"tshirt\");\n\t\t\tif (json.trousers) orderMap.push(\"trousers\");\n\t\t\tif (json.skirt) orderMap.push(\"skirt\");\n\t\t\tif (json.dress) orderMap.push(\"dress\");\n\t\t\tif (json.shoes) orderMap.push(\"shoes\");\n\t\t\tif (json.coat) orderMap.push(\"coat\");\n\t\t})();\n\n\t\tdebugMode && console.log({\"orderMap\": orderMap});\n\n\t\tvar outfit = {};\n\t\tvar promises = [];\n\n\t\tfor (var i = 0; i < orderMap.length; i++){\n\n\t\t\tpromises.push(\n\t\t\t\tnew Promise(function(resolve, reject){\n\n\t\t\t\t\tvar object = {};\n\t\t\t\t\tvar sortIndex = i;\n\t\t\t\t\tvar key = orderMap[i];\n\n\t\t\t\t\tobject.name      = json[ key ].name;\n\t\t\t\t\tobject.visible   = json[ key ].visible;\n\t\t\t\t\tobject.material  = json[ key ].material;\n\t\t\t\t\tobject.geometry  = json[ key ].geometry;  // (url).\n\n\t\t\t\t\t//  Scale.\n\t\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\t\tobject.scale = vector.fromArray( json[ key ].scale );\n\n\t\t\t\t\t//  Material.\n\t\t\t\t\tvar material = materialfromJSON( object.material );\n\n\t\t\t\t\t//  Geometry: cache first.\n\t\t\t\t\tcaches.match( object.geometry ).then(function(response){\n\n\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\tthrow \"geometry not found! Trying to fetch geometry...\";\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}).catch(function(err){\n\t\t\t\t\t\tconsole.error(err);\n\n\t\t\t\t\t\treturn caches.open(\"geometries\").then(function(cache){\n\t\t\t\t\t\t\treturn cache.add( object.geometry ).then(function(){\n\t\t\t\t\t\t\t\treturn cache.match( object.geometry ).then(function(response){\n\t\t\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\tif (!response) throw \"None response returned!\";\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\t}).then(function( gmtjson ){\n\n\t\t\t\t\t\tif ( !gmtjson ) throw \"None json returned fromJSON!\";\n\n\t\t\t\t\t\tvar loader = new THREE.JSONLoader();\n\t\t\t\t\t\tvar geometry = loader.parse( gmtjson ).geometry;\n\n\t\t\t\t\t\tgeometry.name = gmtjson.name;\n\t\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\t\tgeometry.computeVertexNormals();\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\t\t\t\t\tgeometry.sourceFile = object.geometry;  // important!\n\n\t\t\t\t\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\tskinned.renderDepth = 1;\n\t\t\t\t\t\tskinned.frustumCulled = false;\n\t\t\t\t\t\tskinned.position.set( 0, 0, 0 );\n\t\t\t\t\t\tskinned.rotation.set( 0, 0, 0 );\n\t\t\t\t\t\tskinned.scale.copy( object.scale );\n\t\t\t\t\t\tskinned.castShadow = true;\n\t\t\t\t\t\tskinned.name = object.name;\n\t\t\t\t\t\tskinned.sortIndex = sortIndex;\n\n\t\t\t\t\t\tvar obj = {};\n\t\t\t\t\t\tobj[ key ] = skinned;\n\t\t\t\t\t\tresolve( obj );\n\n\t\t\t\t\t\toutfit[ key ] = skinned;\n\n\t\t\t\t\t}).catch(function(err){\n\t\t\t\t\t\tresolve( null );\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\n\t\t\t\t}) // end of promise,\n\t\t\t); // end push.\n\t\t}// end for.\n\n\t\tdebugMode && console.log(\"promises:\", promises);\n\n\t\treturn Promise.all(promises).then(function(results){\n\t\t\tdebugMode && console.log(\"results:\", results);\n\n\t\t\t//  cleanup.\n\t\t\tvar results = results.filter(Boolean); // important!\n\t\t\tdebugMode && console.log(\"cleaned results:\", results);\n\n\t\t\t//  add outfit.\n\t\t\twhile (results.length) {\n\t\t\t\tself.add( results.shift() );\n\t\t\t}\n\n\t\t}).then(function(){\n\t\t\tdebugMode && console.log(\"outfit:\", outfit);\n\t\t\treturn outfit;\n\t\t});\n\n\t},\n\n\n\t//  Outfit DNA is an object that contains the outfit data that needed to\n\t//  create the player oufit anywhere remotly. It is player outfit assets\n\t//  in transfered structure ( aka like .toJSON() ).\n\t//\n\t//  .toDNA(); .fromDNA(dna); Usage:\n\t//      dna = localPlayer.outfit.toDNA();\n\t//      player = new Player();\n\t//      player.outfit = new AW3D.Outfit(player);\n\t//      player.outfit.fromDNA( dna );\n\n\t//\t.toDNA, .fromDNA (v2).\n\t//\trequires \"rawinflate.js, rawdeflate.js, and validator.js\"\n\n\ttoDNA: function(){\n\n\t\treturn encode( JSON.stringify( this.toJSON() ) );\n\n\t\tfunction encode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn window.btoa( RawDeflate.deflate( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n\tfromDNA: function( dna ){\n\n\t\t//  Validation.\n\n\t\tif ( typeof(dna) == \"string\" ) {\n\n\t\t\tif ( validator.isBase64( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( decode( dna ) );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else if ( validator.isJSON( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( dna );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar err = \"DNA is not valid.\";\n\t\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t\t//  throw Error( err );\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\tvar err = \"Unsupported DNA type: \" + typeof(dna);\n\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t//  throw Error( err );\n\t\t\t});\n\n\t\t}\n\n\t\tfunction decode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn RawDeflate.inflate( window.atob( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n\n};\n\n\n//  AW3D AnimationHandler.js\n\n//  Reset THREE.AnimationHandler.animations array.\nTHREE.AnimationHandler.animations.length = 0;\nAnimationManager = THREE.AnimationHandler;\n\nAW3D.AnimationHandler = function ( mesh, gender ) {\n\n\tthis.mesh = mesh;\n\tthis.gender = gender; // important!\n\tthis.actions = {};\n\n\t//  This create the animations of skinned mesh. \n\tthis.reloadActions(); // important!\n\n};\n\n\nAW3D.AnimationHandler.prototype = {\n\n\tconstructor: AW3D.AnimationHandler,\n\n\tfindAction: function(action){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation == action); // boolean.\n\t\t}); \n\t},\n\n\tfindByUuid: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.uuid == this.actions[ name ].uuid); // boolean.\n\t\t});\n\t},\n\n\tfindByName: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.data.name == name); // boolean.\n\t\t});\n\t},\n\n\tgetCurrentAction: function(){\n\t\t//  returns current playing action name.\n\t\tfor (var name in this.actions) {\n\t\t\tif ( !name ) return;\n\t\t\tvar action = this.actions[ name ];\n\t\t\tif ( action.isPlaying ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t},\n\n\t//  To stop an animation, find the animation in\n\t//  THREE.AnimationHandler.animations and stop it from there.\n\n\tstop: function stop(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tvar action = self.actions[name];\n\t\t\tself.findAction(action).forEach(function(animation){\n\t\t\t\tanimation.stop();\n\t\t\t});\n\t\t});\n\t},\n\n\t//  To delete an action, stop the animation in \n\t//  THREE.AnimationHandler.animations and then delete it from this.actions.\n\n\tdelete: function( name ){\n\t\tvar action = this.actions[ name ];\n\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\tanimation.stop();\n\t\t});\n\t\tdelete this.actions[ name ];\n\t},\n\n\treset: function reset(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.actions[ name ].weight = 1;\n\t\t\tthis.actions[ name ].timeScale = 1;\n\t\t\tthis.actions[ name ].currentTime = 0;\n\t\t}\n\t},\n\n\tresetAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.reset( name );\n\t\t});\n\t},\n\n\tdeleteAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.delete[ name ]\n\t\t});\n\t},\n\n\tplay: function play(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tif ( !this.actions[ name ] ) return;\n\t\t\tthis.actions[ name ].play(0);\n\t\t}\n\t},\n\n\t//  To pause an animation, find the animation \n\t//  in THREE.AnimationHandler.animations and set timeScale to 0.\n\n\tpause: function pause(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 0;\n\t\t\t});\n\t\t}\n\t},\n\n\t//  To unpause an animation, find the animation \n\t//  in THREE.AnimationHandler.animations and set timeScale to 1.\n\n\tcontinue: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOff: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 0;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOn: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tfadeIn: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar animation = this.actions[ name ];\n\t\t\tfades.push(function fade(){\n\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\tanimation.weight += ( 0.05 * (1 - animation.weight) );\n\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\tdebugMode && console.log( \"fadeIn: \", round(animation.weight, 3) );\n\t\t\t\tif ( round(animation.weight, 3) > 0.9 ){\n\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\tanimation.play(animation.currentTime, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tfadeOut: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tfades.push(function fade(){\n\t\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\t\tanimation.weight -= ( 0.05 * animation.weight );\n\t\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\t\tdebugMode && console.log( \"fadeOut:\", round(animation.weight, 3) );\n\t\t\t\t\tif ( round(animation.weight, 3) < 0.1 ){\n\t\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\t\tanimation.stop();\n\t\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tidle: function idle(){\n\t\tthis.actions.idle.play(0);\n\t},\n\n\tjump: function jump(){\n\t\tthis.actions.jump.play(0);\n\t},\n\n\trun: function run(){\n\t\tthis.actions.run.play(0);\n\t},\n\n\twalk: function walk(){\n\t\tthis.actions.walk.play(0);\n\t},\n\n\t//  ------------------------------------------------------  //\n\t//  This create the animations of skinned mesh. important!  //\n\t//  ------------------------------------------------------  //\n\n\tloadAction: function(){\n\n\t\tfor ( var i in arguments ) {\n\n\t\t\tvar name = arguments[i];\n\n\t\t\tvar data;\n\n\t\t\tswitch (this.gender) {\n\n\t\t\t\tcase \"male\":\n\t\t\t\t\tdata = MaleAnimations[ name ];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"female\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdata = Animations[ name ];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar action = new THREE.Animation( this.mesh, data );\n\t\t\taction.uuid = THREE.Math.generateUUID();\n\t\t\taction.weight = 1;\n\t\t\taction.timeScale = 1;\n\t\t\taction.currentTime = 0;\n\t\t\tthis.actions[ name ] = action;\n\t\t}\n\n\t},\n\n\treloadActions: function(){\n\n\t\tvar self = this;\n\n\t\tthis.stop();\n\t\tthis.deleteAll();\n\t\tthis.actions = {};\n\n\t\tif (this.actions.jump) this.actions.jump.loop = false;\n\n\t\tif (MaleAnimations && this.gender && this.gender == \"male\") {\n\t\t\tObject.keys( MaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (FemaleAnimations && this.gender && this.gender == \"female\") {\n\t\t\tObject.keys( FemaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Animations && !this.gender ) {\n\t\t\tObject.keys( Animations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.gender && this.gender != \"male\" && this.gender != \"female\" ){\n\t\t\tconsole.warn( \"AW3D.AnimationHandler: reloadActions(\" \n\t\t\t+ this.gender + \"): Gender exists but is not male or female.\");\n\n\t\t\treturn;\n\t\t}\n\n\t},\n\n};\n\n\n//  MATERIAL TO JSON.\n\n//  materialtoJson.js (v1.6)\n//  Return a promise with the \n//  material json object resolved.\n\nfunction materialtoJSON( material ){\n\n\t//  MULTIMATERIAL.\n\n\tif ( material.type == \"MultiMaterial\" || material.materials ) {\n\n\t\t//  multimaterial to json.\n\n\t\tvar multjson = {\n\n\t\t\t_id: \"\",\n\t\t\ttype: material.type,\n\t\t\tuuid: material.uuid || THREE.Math.generateUUID(),\n\n\t\t};\n\n\n\t\t//  materials to json.\n\n\t\tmultjson.materials = [];\n\n\t\tfor ( var i = 0; i < material.materials.length; i++ ){\n\n\t\t\tmultjson.materials.push( materialtoJSON( material.materials[i] ) );\n\n\t\t}\n\n\n\t\tdebugMode && console.log( \"multimaterial to json:\", multjson );\n\n\t\treturn multjson;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar json = {};\n\n\tfor ( var name in material ){\n\n\t\tif ( material[ name ] == undefined ) continue;         // important!\n\t\tif ( material[ name ] instanceof Function ) continue;  // important!\n\t\tif ( typeof(material[name]) === \"function\" ) continue; // important!\n\n\t\tswitch( name ){\n\n\t\t\tcase \"defines\":\n\t\t\tcase \"program\":\n\t\t\tcase \"_listeners\":\n\t\t\tcase \"needsUpdate\":\n\t\t\tcase \"_needsUpdate\":\n\t\t\tcase \"__webglShader\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  name, _id, uuid.\n\n\t\t\tcase \"name\":\n\t\t\t\tjson.name = material.name;\n\t\t\t\tbreak;\n\n\t\t\tcase \"_id\":\n\t\t\t\tjson._id = material._id || ObjectId();\n\t\t\t\tbreak;\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson.uuid = material.uuid || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  texture to json.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"aoMap\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Texture) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Texture\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = texturetoJSON( material[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Color) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Color\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].getHex();\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 to array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Vector2) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Vector2\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].toArray();\n\n\t\t\t\tbreak;\n\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = material[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n}\n\n\n//  TEXTURE TO JSON.\n//  Return a promise resolved \n//  with the texture json object.\n\nfunction texturetoJSON( texture ){\n\n\tvar json = {};\n\n\tfor (var name in texture ){\n\n\t\tif ( texture[ name ] == undefined ) continue;\n\t\tif ( texture[ name ] instanceof Function ) continue;\n\t\tif ( typeof(texture[name]) === \"function\" ) continue;\n\n\t\tswitch (name){\n\n\t\t\tcase \"_listeners\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson[ name ] = texture[ name ] || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 to array.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\t\t\t\tjson[ name ] = texture[ name ].toArray();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  image to json.\n\n\t\t\tcase \"image\":\n\t\t\t\tjson[ name ] = texture.sourceFile || getDataURL( texture[ name ] ); // important!\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = texture[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n}\n\n\n//  IMAGE TO JSON.\n//  Return an image object.\n\nfunction imagetoJSON( image ){\n\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: image.src || getDataURL( image ),\n\t};\n\n}\n\n\n//  TEXTURE IMAGE TO JSON.\n//  Return an image object.\n\nfunction textureImagetoJSON( texture ){\n\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: texture.sourceFile || texture.image.src || getDataURL( texture.image )\n\t};\n\n}\n\n\n//  MATERIAL FROM JSON.\n//  materialfromJson.js (v1.6)\n//  Return a promise with the material resolved.\n\nfunction materialfromJSON( json ){\n\n\t//  MULTIMATERIAL.\n\n\tif ( json.type == \"MultiMaterial\" ) {\n\n\n\t\tvar materials = [];\n\n\t\tfor ( var i = 0; i < json.materials.length; i++ ){\n\n\t\t\tmaterials.push( materialfromJSON( json.materials[i] ) );\n\n\t\t}\n\n\n\t\t//  Create multimaterial.\n\n\t\tvar multimaterial = new THREE.MeshFaceMaterial(materials);\n\n\t\tmultimaterial.uuid = json.uuid || THREE.Math.generateUUID();\n\n\t\treturn multimaterial;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar options = {};\n\n\tfor (var name in json){\n\n\t\tif ( json[ name ] == undefined ) continue; // important!\n\n\n\t\tswitch (name){\n\n\t\t\tcase \"_id\":\n\t\t\tcase \"meta\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\toptions.uuid = json.uuid || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  texture from json.\n\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"aoMap\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"map\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\n\t\t\t\toptions[ name ] = texturefromJSON( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\toptions[ name ] = new THREE.Color();\n\t\t\t\toptions[ name ].setHex( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 from array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\toptions[ name ] = new THREE.Vector2();\n\t\t\t\toptions[ name ].fromArray( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\toptions[ name ] = json[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn new THREE[ options.type ](options);\n}\n\n\n//  TEXTURE FROM JSON (v1.6)\n//  Return a promise with the texture resolved.\n\nfunction texturefromJSON( json ){\n\n\tvar texture = new THREE.Texture();\n\n\tfor ( var name in json ){\n\n\t\tswitch (name){\n\n\t\t\tcase \"meta\":\n\t\t\tcase \"image\":\n\t\t\t\tbreak;\n\n\t\t\t\t//  array to vector2.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\n\t\t\t\ttexture[ name ] = new THREE.Vector2();\n\t\t\t\ttexture[ name ].fromArray( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  wrapS & wrapT.\n\n\t\t\tcase \"wrap\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\t\t\t\tif ( !( json[ name ] instanceof Array ) ) break;\n\n\t\t\t\ttexture.wrapS = json[ name ][0];\n\t\t\t\ttexture.wrapT = json[ name ][1];\n\n\t\t\t\tbreak;\n\n\t\t\t\t//  image from texture json with\"FileReader.readAsDataURL(blob)\".\n\n\t\t\t\t//  Check whether a match for the request is found in   \n\t\t\t\t//  the CacheStorage using CacheStorage.match(). If so, serve that.\n\n\t\t\t\t//  If not, open the \"textures\" cache using open(), \n\t\t\t\t//  put the default network request in the cache using Cache.put() \n\t\t\t\t//  and return a clone of the default network request using return response.clone().\n\n\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t//  If this fails (e.g., because the network is down), return a fallback response.\n\n\t\t\t\t//  Pros:\n\n\t\t\t\t//  Easy to use.\n\t\t\t\t//  Small, compact, safe code.\n\t\t\t\t//  Texture.image.src is string.\n\t\t\t\t//  Texture.image.src is dataURL.\n\t\t\t\t//  Texture.image.src can reused.\n\t\t\t\t//  Texture.image.src is always valid.\n\t\t\t\t//  Texture.image.src can be send everywhere.\n\t\t\t\t//  Texture.image.src can converted to canvas.\n\t\t\t\t//  Texture.image (canvas) size always power of 2.\n\t\t\t\t//  Texture.image.src can saved in storage objects.\n\t\t\t\t//  Texture.image.src can converted vice versa to blob.\n\n\t\t\t\t//  Cons:\n\n\t\t\t\t//  Larger size (~33%)\n\t\t\t\t//  Take more time than URL.createObjectURL(blob);\n\n\t\t\t\t//  sourceFile.\n\t\t\t\t//  case \"sourceFile\":\n\t\t\t\t//      texture.sourceFile = json[ name ]; // important!\n\t\t\t\t//  break;\n\n\t\t\t\t//  case \"image\": (N/A).\n\t\t\tcase \"sourceFile\":\n\n\t\t\t\ttexture.sourceFile = json.sourceFile;\n\n\t\t\t\t//  SourceFile first.\n\t\t\t\tvar url = json.sourceFile || json.image.src || json.image || \"//i.imgur.com/ODeftia.jpg\";\n\n\t\t\t\t//  URL.\n\n\t\t\t\tif ( validator && validator.isURL( url ) ) {\n\n\t\t\t\t\t//  Cache first.\n\t\t\t\t\tcaches.match( url ).then(function(response){\n\n\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\tthrow \"Texture not found!\";\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}).catch(function(err){\n\n\t\t\t\t\t\t//  We use cors origin mode to avoid\n\t\t\t\t\t\t//  texture tainted canvases, images.\n\n\t\t\t\t\t\treturn fetch( url, {\n\t\t\t\t\t\t\tmode: \"cors\",  // important!\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\treturn caches.open(\"textures\").then(function(cache){\n\n\t\t\t\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\t\t\t\t\tvar clone = response.clone();\n\t\t\t\t\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\t\t\t\t\treturn response.blob();  //  important!\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(blob){\n\n\t\t\t\t\t\tvar img = new Image();\n\t\t\t\t\t\timg.crossOrigin = \"anonymous\";  //  important!\n\n\t\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\t\ttexture.image = canvas;\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\t\timg.onload = null; // optional!\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t//  Get dataURL from blob.\n\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onload = function() {\n\t\t\t\t\t\t\timg.src = reader.result;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\n\t\t\t\t//  DataURL.\n\n\t\t\t\tif ( validator && validator.isDataURI( url ) ) {\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.crossOrigin = \"anonymous\";\n\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\ttexture.image = canvas;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\timg.onload = null; // optional!\n\t\t\t\t\t}; \n\t\t\t\t\timg.src = url;  break;\n\t\t\t\t} \n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\ttexture[ name ] = json[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn texture;\n}\n\n\n//  IMAGE FROM JSON (v1.6)\n//  Return a promise with the image resolved.\n\nfunction imagefromJSON( json, onLoadEnd ){\n\n\tvar url = json.src;\n\n\t//  Cache first.\n\tcaches.match( url ).then(function(response){\n\n\t\tif ( !response ) \n\t\t\tthrow response;\n\t\telse\n\t\t\treturn response;\n\n\t}).catch(function(err){\n\n\t\t//  We use cors origin mode to avoid\n\t\t//  texture tainted canvases, images.\n\n\t\treturn fetch( url, {\n\t\t\tmode: \"cors\",  // important!\n\t\t\tmethod: \"GET\",\n\t\t});\n\n\t\t//  TODO: REPLACE async/await FOR BACKWARD COMPETALITY.\n\t}).then(function(response){\n\n\t\treturn caches.open(\"textures\").then(function(cache){\n\n\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\tvar clone = response.clone();\n\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\treturn response.blob(); //  important!\n\t\t\t});\n\n\t\t});\n\n\t}).then(function(blob){\n\n\t\tvar img = new Image();\n\t\timg.crossOrigin = \"anonymous\";  //  important!\n\t\timg.onload = onLoadEnd;\n\n\t\t//  Get dataURL from blob.\n\n\t\treturn new Promise(function(resolve, reject){\n\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\timg.src = reader.result;\n\t\t\t\tresolve( img );\n\t\t\t};\n\n\t\t\treader.readAsDataURL(blob);\n\n\t\t});\n\n\t});\n\n}\n\n\n//  blobToDataUrl.js\n//  https://gist.github.com/tantaman/6921973\n\nfunction convertToBase64(blob, callback) {\n\n\tvar reader = new FileReader();\n\n\treader.onload = function(e) {\n\t\tcallback(reader.result);\n\t};\n\n\treader.readAsDataURL(blob);\n}\n\n\n//  dataUrlToBlob.js\n//  https://gist.github.com/tantaman/6921973\n\nfunction dataURLToBlob(dataURL) {\n\n\tvar BASE64_MARKER = \";base64,\";\n\n\tif (dataURL.indexOf(BASE64_MARKER) == -1) {\n\t\tvar parts = dataURL.split(\",\");\n\t\tvar contentType = parts[0].split(\":\")[1];\n\t\tvar raw = parts[1];\n\n\t\treturn new Blob([raw], {type: contentType});\n\t}\n\n\tvar parts = dataURL.split(BASE64_MARKER);\n\tvar contentType = parts[0].split(\":\")[1];\n\tvar raw = window.atob(parts[1]);\n\tvar rawLength = raw.length;\n\n\tvar uInt8Array = new Uint8Array(rawLength);\n\n\tfor (var i = 0; i < rawLength; ++i) {\n\t\tuInt8Array[i] = raw.charCodeAt(i);\n\t}\n\n\treturn new Blob([uInt8Array], {type: contentType});\n}\n\n\n//  makePowerOfTwo.js\n\nfunction makePowerOfTwo( image, natural ) {\n\n\tvar canvas = document.createElement( \"canvas\" );\n\n\tif ( natural ){\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.naturalWidth );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.naturalHeight );\n\t} else {\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\t}\n\n\tvar context = canvas.getContext( \"2d\" );\n\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t//  debugMode && console.warn( \"outfitLoader:makePowerOfTwo(img):\", \n\t//  \"Image resized to:\", canvas.width, \"x\", canvas.height );\n\n\treturn canvas;\n}\n\n\n//  getDataURL.js\n\nfunction getDataURL( image ) {\n\n\tvar canvas;\n\n\tif ( image.toDataURL !== undefined ) {\n\n\t\tcanvas = image;\n\n\t} else {\n\n\t\tcanvas = document.createElementNS( \"http://www.w3.org/1999/xhtml\", \"canvas\" );\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\n\t\tcanvas.getContext( \"2d\" ).drawImage( image, 0, 0, image.width, image.height );\n\n\t}\n\n\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\treturn canvas.toDataURL( \"image/jpeg\", 0.6 );\n\n\t} else {\n\n\t\treturn canvas.toDataURL( \"image/png\" );\n\n\t}\n\n}\n\n\n//  deepCopy.js\n\nfunction deepCopy(obj) {\n\tif (Object.prototype.toString.call(obj) === \"[object Array]\") {\n\t\tvar out = [], i = 0, len = obj.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tout[i] = arguments.callee(obj[i]);\n\t\t}\n\t\treturn out;\n\t}\n\tif (typeof obj === \"object\") {\n\t\tvar out = {}, i;\n\t\tfor ( i in obj ) {\n\t\t\tout[i] = arguments.callee(obj[i]);\n\t\t}\n\t\treturn out;\n\t}\n\treturn obj;\n}\n\n\n//  round.js  source: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"\n\nfunction round(number, precision) {\n\tvar shift = function (number, precision, reverseShift) {\n\t\tif (reverseShift) {\n\t\t\tprecision = -precision;\n\t\t}  \n\t\tnumArray = (\"\" + number).split(\"e\");\n\t\treturn +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\n\t};\n\treturn shift(Math.round(shift(number, precision, false)), precision, true);\n}\n\n"
			},
			{
				"name": "PlayerControlller.js",
				"source": "//  PlayerController.js\n\nvar Player = function(radius){\n\n\tthis.holder = AW3D.PlayerHolder(); // important!\n\tscene.add( this.holder );\n\tthis.holder.visible = false;\n\n\tthis.holderHelper = AW3D.PlayerHolderHelper();\n\t//  scene.add( this.holderHelper );\n\n\tthis.sphere = AW3D.PlayerSphere();\n\tthis.sphere.position.y = 12;\n\tthis.holder.add( this.sphere ); \n\n\tvar player = this; // important!\n\n\tthis.outfit = new AW3D.OutfitManager(); // important!\n\n\tthis.outfit.update = function() {\n\n\t\t//  Update avatar rotation y.\n\t\tvar direction = player.controller.direction - Math.PI;\n\n\t\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.rotation.y = direction;\n\n\t\t//  Update avatar position.\n\t\tvar x = player.controller.center.x;\n\t\tvar y = player.controller.center.y - player.controller.radius;\n\t\tvar z = player.controller.center.z;\n\n\t\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.position.set( x, y, z );\n\t};\n\n\tvar radius = radius || 3;\n\tthis.controller = new MW.CharacterController( this.holder, radius );\n\tthis.controller.isWalking = false;\n\n\tthis.controller.getdata = function( action ){\n\n\t\tvar data = {};\n\t\tdata.playerid = socket.id;\n\t\tdata.radius = this.radius;\n\t\tdata.isGrounded = this.isGrounded;\n\t\tdata.isOnSlope = this.isOnSlope;\n\t\tdata.isIdling  = this.isIdling;\n\t\tdata.isJumping = this.isJumping;\n\t\tdata.isRunning = this.isRunning;\n\t\tdata.isWalking = this.isWalking;\n\t\tdata.direction = this.direction;\n\t\tdata.movementSpeed = this.movementSpeed;\n\t\tdata.jumpStartTime = this.jumpStartTime;\n\t\tdata.position = this.center.toArray();\n\t\tif (!!action) data.action = action;\n\n\t\treturn data;\n\t};\n\n\tfunction onStartJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOff(\"idle\", \"walk\", \"run\");\n\t};\n\n\tfunction onEndJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOn(\"idle\", \"walk\", \"run\");\n\n\t\tif ( player.controller.isRunning && player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 28;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"walk\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else if ( player.controller.isRunning && !player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 45;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"run\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 0;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"idle\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t\t}\n\t}\n\n\tthis.controller.addEventListener(\"endJumping\",   onEndJumping);\n\tthis.controller.addEventListener(\"startJumping\", onStartJumping);\n\n\t//  Add controller to world.\n\tworld.add( this.controller ); // important!\n\n\tdebugMode && console.log( \n\t\t\"world.characterPool length:\", world.characterPool.length, \n\t\t\"index:\", world.characterPool.indexOf( this.controller )\n\t);\n\n\t//  Add outfit to scene.\n\tscene.add(this.outfit.direction); // important!\n\n};\n\nPlayer.prototype = {\n\n\t//  Collect position, direction, nickname, and gender.\n\n\tgetdata: function( socket ){\n\t\tif ( !socket ) return;\n\t\tvar data = {};\n\t\tdata.playerid  = socket.id;\n\t\tdata.nickname  = this.nickname;\n\t\tdata.gender    = this.outfit.getGender();\n\t\tdata.direction = this.outfit.direction.rotation.y;\n\t\tdata.position  = this.outfit.direction.position.toArray();\n\t\tdata.dna       = this.outfit.toDNA();\n\t\tdebugMode && console.log(\"player data:\", data);\n\t\treturn data;\n\t},\n\n\t//  Remote player set data.\n\n\tsetdata: function( data ){\n\t\tif ( !data.playerid || data.playerid != this.playerid ) return;\n\n\t\tthis.playerid = data.playerid;\n\t\tthis.nickname = data.nickname;\n\t\tthis.outfit.setGender( data.gender );\n\t\tthis.outfit.direction.rotation.y = data.direction;\n\t\tthis.outfit.direction.position.fromArray(data.position);\n\n\t\tif (data.action != undefined) {\n\t\t\tthis.outfit.AnimationsHandler.stop();\n\t\t\tthis.outfit.AnimationsHandler.play( data.action );\n\t\t}\n\t},\n\n\t//  Create player outfit from dna data.\n\n\tfromDNA: function( dna ){\n\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle(); // face front.\n\t\tthis.controller.direction = frontAngle;\n\t\tthis.outfit.fromDNA( dna );\n\t\tscene.add(this.outfit.direction);\n\t\tthis.outfit.update();\n\t},\n\n\t//  Start remote player action.\n\tstartAction: function( running, walking, idling, speed, name, eventType ){\n\n\t\tthis.outfit.AnimationsHandler.stop();        \n\t\tthis.controller.isRunning = running;\n\t\tthis.controller.isWalking = walking;\n\t\tthis.controller.isIdling  = idling;\n\t\tthis.controller.movementSpeed = speed;\n\t\tthis.outfit.AnimationsHandler.play( name );\n\t\tthis.controller.dispatchEvent({type: eventType});\n\n\t},\n\n\t//  Get local player action data.\n\tgetActionData: function ( name ){\n\t\treturn {\n\t\t\tplayerid : socket.id,\n\t\t\tdirection: this.outfit.direction.rotation.y,\n\t\t\tposition : this.outfit.direction.position.toArray(),\n\t\t\taction   : name,\n\t\t};\n\t},\n\n};\n\nlocalPlayer = new Player();\ndebugMode && console.log({\"localPlayer\": localPlayer});\n\nfunction update( event ) {\n\tlocalPlayer.outfit.update();\n}\n"
			},
			{
				"name": "cameraControl.js",
				"source": "//  MW cameraControl.js\n\ncameraControls = new MW.TPSCameraControl(camera, localPlayer.holder, {\n\tel: renderer.domElement,               // html renderer element.\n\toffset: new THREE.Vector3( 0, 15, 0 ), // camera eye height.\n\tradius: 40,                            // default: 37 // (distance of the character to the camera).\n\tminRadius: 6,                          // default: 10 // (can take and negative values, yes!!!).\n\tmaxRadius: 1500,                       // default: 64, runtime: 40.\n\trigidObjects: [],                      // collition objects for the camera.\n});\n\ncameraControls.getforward = function(){ \n\treturn -this.theta \n};\n\ncameraControls.setVerticalOffset = function(offset){ \n\tthis.offset.y = offset; \n};\n\n(cameraControls.frontAngleUpdate = function(){\n\twindowAnimationFrameRequestID = requestAnimationFrame( cameraControls.frontAngleUpdate );\n\tcameraControls.forward = -cameraControls.theta;\n})();\n\nfunction update( event ) {\n\tcameraControls.update();\n}\n"
			},
			{
				"name": "KeyInputControls.js",
				"source": "//  KeyInputControls.js\n\nkeyInputControls = new MW.KeyInputControl();\n\nkeyInputControls.On = function(){\n\n\tif ( !keyInputControls.isOff ) return;\n\n\t$(keyInputControls).on( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).on( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).on( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).on( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = false;\n\tdebugMode && console.log( \"keyInputControls are ON.\" );\n};\n\nkeyInputControls.Off = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\t$(keyInputControls).off( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).off( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).off( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).off( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = true;\n\tdebugMode && console.log( \"keyInputControls are OFF.\" );\n};\n\nkeyInputControls.update = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\tif ( keyInputControls.isMoveKeyHolded \n\t\t|| localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t|| localPlayer.controller.isOnSlope ){\n\n\t\tthis.dispatchEvent({type:\"update\"});\n\t}\n};\n\n//\tSet to off to activate key input controls.\n\nkeyInputControls.Off();  // important!\n\n//\tEnable key input controls.\n\nkeyInputControls.On(); // important!\n\n\nfunction onMoveKeyOn() { \n\tdebugMode && console.log(\"move key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = true; \n\tlocalPlayer.controller.isWalking = true;\n\tlocalPlayer.controller.movementSpeed = 28;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n}\n\nfunction onMoveKeyChange() {\n\tdebugMode && console.log(\"move key changed\");\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n}\n\nfunction onMoveKeyOff() {\n\tdebugMode && console.log(\"move key off\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tvar finalDirection = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.controller.direction = finalDirection;\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.isIdling  = true;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n}\n\nfunction onJumpInput() {\n\tdebugMode && console.log(\"jump key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.jump();\n\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n}\n\n\n//\tUpdate.\n\nfunction update( event ) {\n\tkeyInputControls.update();\n}\n\n//\tDebug.\n\nfunction stop(){\n\tkeyInputControls.Off();  // important!\n}"
			},
			{
				"name": "JoystickControls.js",
				"source": "//  JoystickControls.js\n\n/*\n$(document.head).append(\n\t\"<style class='joystick-controls'> \"\n\t+ \".gameinput-button__inner { display:table-cell; vertical-align: middle; } \"\n\t+ \".gameinput-joystick { border:solid 0px white; border-radius:50%; position:absolute; bottom:30px; user-select:none; \"\n\t+ \"touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \"\n\t+ \".gameinput-frame { position:absolute; top:0; left:0; pointer-events:none; opacity:0.5; } \"\n\t+ \".gameinput-button { cursor:pointer; text-align:center; position:absolute; display:table; \"\n\t+ \"box-sizing:border-box; border:1px solid #333; border-radius:50%; background:rgba( 255, 255, 255, .5 ); user-select:none; \"\n\t+ \"touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \"\n\t+ \"#joystick1 { bottom:50px; right:40px; width:120px; height:120px;z-index:1; } \"\n\t+ \"#joystick2 { bottom:50px; left:40px; width:120px; height:120px; z-index:1;} \"\n\t+ \"#jumpButton { right:105px; bottom:240px; z-index:1; } \"\n\t+ \"@media ( max-width: 768px ) { #joystick1 { bottom:0px; right:0px; } #joystick2 { bottom:0px; left:0px; } \"\n\t+ \"#jumpButton { bottom:190px; right:65px; } \"\n\t+ \".gameinput-joystick { bottom:0px;} } \"\n\t+ \".gameinput-joystick__button { position:absolute; width:72px; height:72px; left:85px; top:85px; cursor:pointer; \"\n\t+ \"box-sizing:border-box; border-radius:50%; border:1px solid #333; background:rgba( 255, 255, 255, .5 ); } \"\n\t+ \"</style>\"\n);\n\n$(document.body).append('<div class=\"joystick-controls\" id=\"joystick-controls-1\"></div><div class=\"joystick-controls\" id=\"joystick-controls-2\"></div>');\n*/\n\n//  MW Joystick Controls.\n\nvar joystick1Selector  = \"#joystick1\";\nvar joystick2Selector  = \"#joystick2\";\nvar jumpButtonSelector = \"#jumpButton\";\n\nvar joystickControlsSelector  = \".joystick-controls\";\nvar joystickControls1Selector = \"#joystick-controls-1\";\nvar joystickControls2Selector = \"#joystick-controls-2\";\n\nvar buttonSvgSrc = '<svg width=\"48\" height=\"48\" viewBox=\"0 0 64 64\"><path fill=\"#fff\" d=\"M44.5,54.5c-0.3-5.1-2.4-9.4-5.7-13.2C41,36,40.9,30,38.5,24.7c-1.2-2.7-3.9-4.4-6.9-3.3c-0.2,0.1-0.4,0.1-0.5,0.2c-3-4.3-6.6-8.3-10.1-11.8c-2.6-2.6-6.4,1.7-3.8,4.3c3.9,3.9,8.1,8.5,11,13.7c0,0.1,0.1,0.3,0.2,0.4c1.5,3.2,1.9,6.4,0.2,9.6c-0.3,0.5-0.4,1-0.5,1.5c-1.1,1.5-2.3,3-3.6,4.4c-0.8-2.3-1.4-4.7-1.6-7.1c-0.5-4.6-7.7-4.1-7.2,0.5c0.5,4.9,2.1,9.6,3.9,14.2c0.8,1.9,3.6,3.4,5.4,1.8c2.8-2.4,5.3-4.9,7.5-7.8c0.2,0.1,0.5,0.1,0.7,0.1c0.1,0.3,0.3,0.5,0.5,0.7c1.7,1.8,2.8,3.9,3.3,6.3c-2.2,0.8-4.6,1.4-7,1.4c-4.6,0.1-4.1,7.2,0.5,7.2c4-0.1,7.9-1.3,11.6-3C43.6,57.5,44.6,56.2,44.5,54.5z M34.2,8.9c0.7,0.1,1.6-0.1,2.3,0.3c1.5,0.8,2.6,2.1,3.2,3.6c0.2-2.2,0.5-4.3,0.8-6.5c0.5-3.7-5.1-4.7-5.7-1.1C34.6,6.3,34.3,7.8,34.2,8.9z\"/><circle fill=\"#fff\" cx=\"33.8\" cy=\"15.2\" r=\"4.9\"/></svg>';\n\njoystick1  = new virtualInput.Joystick( $( joystickControls1Selector ), 94, { id: \"joystick1\" } );\njoystick2  = new virtualInput.Joystick( $( joystickControls2Selector ), 94, { id: \"joystick2\" } );\njumpButton = new virtualInput.Button( $( joystickControls1Selector ),   58, { id: \"jumpButton\", label: \"<b>JUMP</b>\" } ); // buttonSvgSrc\n\njoystick1.addEventListener( \"active\", function () { \n\n\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded ||  localPlayer.controller.isOnSlope ) return;\n\n\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + joystick1.angle; // important!\n/*\n\tif ( localPlayer.controller.isRunning && !localPlayer.controller.isWalking ) {\n\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.movementSpeed = 45;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"run\");\n\n\t} else {\n*/\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = true; \n\t\tlocalPlayer.controller.isWalking = false;  // !!!danger: \"false\" cause bug in production server ??? //\n\t\tlocalPlayer.controller.movementSpeed = 28;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n//\t}\n\n});\n\njoystick1.addEventListener( \"disactive\", function () { \n\n\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded ||  localPlayer.controller.isOnSlope ) return;\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n});\n\njoystick1.update = function(){\n\n\tif ( joystick1.isActive ) {\n\n\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + joystick1.angle;\n\n\t\tjoystick1.dispatchEvent({type:\"update\"}); // important!\n\n\t}\n};\n\njoystick2.update = function(){\n\n\tif ( joystick2.isActive ) {\n\n\t\tcameraControls.setLatLon(\n\t\t\tcameraControls.lat + joystick2.position.y * 0.5, // deg.\n\t\t\tcameraControls.lon - joystick2.position.x        // deg.\n\t\t);\n\n\t\tjoystick2.dispatchEvent({type:\"update\"}); // important!\n\t}\n}\n\njumpButton.addEventListener( \"press\", function () { \n\n\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded || localPlayer.controller.isOnSlope ) return;\n\n\tlocalPlayer.controller.jump();\n\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n});\n\nfunction update( event ) {\n\tjoystick1.update();\n\tjoystick2.update();\n}\n\n//\tDebug.\n\nfunction stop(){\n//\t$(joystickControlsSelector).remove();\n}"
			},
			{
				"name": "AnimationsUpdate.js",
				"source": "var clock = new THREE.Clock();\nfunction update( event ) {\n\tvar delta = clock.getDelta();\n\tTHREE.AnimationHandler.update( delta );\n}\n"
			}],
		"B22F5FEF-F45E-4C2E-B36B-AEF0F249EFC7": [
			{
				"name": "UVsDebug.js",
				"source": "/* \n * @author zz85 / http://github.com/zz85\n * @author WestLangley / http://github.com/WestLangley\n *\n * tool for \"unwrapping\" and debugging three.js \n * geometries UV mapping\n *\n * Sample usage:\n *\tdocument.body.appendChild( THREE.UVsDebug( new THREE.SphereGeometry( 10, 10, 10, 10 ) );\n *\n */\n \nTHREE.UVsDebug = function( geometry, size ) {\n\n\t// handles wrapping of uv.x > 1 only\n    \n\tvar abc = 'abc';\n\n\tvar uv, u, ax, ay;\n\tvar i, il, j, jl;\n\tvar vnum;\n\n\tvar a = new THREE.Vector2();\n\tvar b = new THREE.Vector2();\n\n\tvar geo = ( geometry instanceof THREE.BufferGeometry ) ? new THREE.Geometry().fromBufferGeometry( geometry ) : geometry;\n\n\tvar faces = geo.faces;\n\tvar uvs = geo.faceVertexUvs[ 0 ];\n\n\tvar canvas = document.createElement( 'canvas' );\n\tvar width = size || 1024;   // power of 2 required for wrapping\n\tvar height = size || 1024;\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tvar ctx = canvas.getContext( '2d' );\n\tctx.lineWidth = 1;\n\tctx.strokeStyle = 'rgba( 0, 0, 0, 1.0 )';\n\tctx.textAlign = 'center';\n\n\t// paint background white\n\n\tctx.fillStyle = 'rgba( 255, 255, 255, 1.0 )';\n\tctx.fillRect( 0, 0, width, height );\n\n\tfor ( i = 0, il = uvs.length; i < il; i ++ ) {\n\n\t\tuv = uvs[ i ];\n\n\t\t// draw lines\n\n\t\tctx.beginPath();\n\n\t\ta.set( 0, 0 );\n\n\t\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\tu = uv[ j ];\n\n\t\t\ta.x += u.x;\n\t\t\ta.y += u.y;\n\n\t\t\tif ( j == 0 ) {\n\n\t\t\t\tctx.moveTo( u.x * width, ( 1 - u.y ) * height );\n\n\t\t\t} else {\n\n\t\t\t\tctx.lineTo( u.x * width, ( 1 - u.y ) * height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tctx.closePath();\n\t\tctx.stroke();\n\n\t\ta.divideScalar( jl );\n\n\t}\n\n\treturn canvas;\n\n};\n\n//  disable labels.\n\n/*\n\t\t// label the face number\n\n\t\tctx.font = \"12pt Arial bold\";\n\t\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\n\t\tctx.fillText( i, a.x * width, ( 1 - a.y ) * height );\n\n\t\tif ( a.x > 0.95 ) {\n\n\t\t\t// wrap x // 0.95 is arbitrary\n\n\t\t\tctx.fillText( i, ( a.x % 1 ) * width, ( 1 - a.y ) * height );\n\n\t\t}\n\n\t\tctx.font = \"8pt Arial bold\";\n\t\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\n\n\t\t// label uv edge orders\n\n\t\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\tu = uv[ j ];\n\t\t\tb.addVectors( a, u ).divideScalar( 2 );\n\n\t\t\tvnum = faces[ i ][ abc[ j ] ];\n\t\t\tctx.fillText( abc[ j ] + vnum, b.x * width, ( 1 - b.y ) * height );\n\n\t\t\tif ( b.x > 0.95 ) {\n\n\t\t\t\t// wrap x\n\n\t\t\t\tctx.fillText( abc[ j ] + vnum, ( b.x % 1 ) * width, ( 1 - b.y ) * height );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn canvas;\n\n};\n*/\n\n"
			},
			{
				"name": "SubdivisionModifier.js",
				"source": "/*\n *\t@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog\n *\t@author centerionware / http://www.centerionware.com\n *\n *\tSubdivision Geometry Modifier\n *\t\tusing Loop Subdivision Scheme\n *\n *\tReferences:\n *\t\thttp://graphics.stanford.edu/~mdfisher/subdivision.html\n *\t\thttp://www.holmes3d.net/graphics/subdivision/\n *\t\thttp://www.cs.rutgers.edu/~decarlo/readings/subdiv-sg00c.pdf\n *\n *\tKnown Issues:\n *\t\t- currently doesn't handle \"Sharp Edges\"\n */\n\nTHREE.SubdivisionModifier = function ( subdivisions ) {\n\n\tthis.subdivisions = ( subdivisions === undefined ) ? 1 : subdivisions;\n\n};\n\n// Applies the \"modify\" pattern\nTHREE.SubdivisionModifier.prototype.modify = function ( geometry ) {\n\n\tvar repeats = this.subdivisions;\n\n\twhile ( repeats -- > 0 ) {\n\n\t\tthis.smooth( geometry );\n\n\t}\n\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\n};\n\n( function() {\n\n\t// Some constants\n\tvar WARNINGS = ! true; // Set to true for development\n\tvar ABC = [ 'a', 'b', 'c' ];\n\n\n\tfunction getEdge( a, b, map ) {\n\n\t\tvar vertexIndexA = Math.min( a, b );\n\t\tvar vertexIndexB = Math.max( a, b );\n\n\t\tvar key = vertexIndexA + \"_\" + vertexIndexB;\n\n\t\treturn map[ key ];\n\n\t}\n\n\n\tfunction processEdge( a, b, vertices, map, face, metaVertices ) {\n\n\t\tvar vertexIndexA = Math.min( a, b );\n\t\tvar vertexIndexB = Math.max( a, b );\n\n\t\tvar key = vertexIndexA + \"_\" + vertexIndexB;\n\n\t\tvar edge;\n\n\t\tif ( key in map ) {\n\n\t\t\tedge = map[ key ];\n\n\t\t} else {\n\n\t\t\tvar vertexA = vertices[ vertexIndexA ];\n\t\t\tvar vertexB = vertices[ vertexIndexB ];\n\n\t\t\tedge = {\n\n\t\t\t\ta: vertexA, // pointer reference\n\t\t\t\tb: vertexB,\n\t\t\t\tnewEdge: null,\n\t\t\t\t// aIndex: a, // numbered reference\n\t\t\t\t// bIndex: b,\n\t\t\t\tfaces: [] // pointers to face\n\n\t\t\t};\n\n\t\t\tmap[ key ] = edge;\n\n\t\t}\n\n\t\tedge.faces.push( face );\n\n\t\tmetaVertices[ a ].edges.push( edge );\n\t\tmetaVertices[ b ].edges.push( edge );\n\n\n\t}\n\n\tfunction generateLookups( vertices, faces, metaVertices, edges ) {\n\n\t\tvar i, il, face, edge;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tmetaVertices[ i ] = { edges: [] };\n\n\t\t}\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tprocessEdge( face.a, face.b, vertices, edges, face, metaVertices );\n\t\t\tprocessEdge( face.b, face.c, vertices, edges, face, metaVertices );\n\t\t\tprocessEdge( face.c, face.a, vertices, edges, face, metaVertices );\n\n\t\t}\n\n\t}\n\n\tfunction newFace( newFaces, a, b, c ) {\n\n\t\tnewFaces.push( new THREE.Face3( a, b, c ) );\n\n\t}\n\n\tfunction midpoint( a, b ) {\n\n\t\treturn ( Math.abs( b - a ) / 2 ) + Math.min( a, b );\n\n\t}\n\n\tfunction newUv( newUvs, a, b, c ) {\n\n\t\tnewUvs.push( [ a.clone(), b.clone(), c.clone() ] );\n\n\t}\n\n\t/////////////////////////////\n\n\t// Performs one iteration of Subdivision\n\tTHREE.SubdivisionModifier.prototype.smooth = function ( geometry ) {\n\n\t\tvar tmp = new THREE.Vector3();\n\n\t\tvar oldVertices, oldFaces, oldUvs;\n\t\tvar newVertices, newFaces, newUVs = [];\n\n\t\tvar n, l, i, il, j, k;\n\t\tvar metaVertices, sourceEdges;\n\n\t\t// new stuff.\n\t\tvar sourceEdges, newEdgeVertices, newSourceVertices;\n\n\t\toldVertices = geometry.vertices; // { x, y, z}\n\t\toldFaces = geometry.faces; // { a: oldVertex1, b: oldVertex2, c: oldVertex3 }\n\t\toldUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\tvar hasUvs = oldUvs !== undefined && oldUvs.length > 0;\n\n\t\t/******************************************************\n\t\t *\n\t\t * Step 0: Preprocess Geometry to Generate edges Lookup\n\t\t *\n\t\t *******************************************************/\n\n\t\tmetaVertices = new Array( oldVertices.length );\n\t\tsourceEdges = {}; // Edge => { oldVertex1, oldVertex2, faces[]  }\n\n\t\tgenerateLookups( oldVertices, oldFaces, metaVertices, sourceEdges );\n\n\n\t\t/******************************************************\n\t\t *\n\t\t *\tStep 1.\n\t\t *\tFor each edge, create a new Edge Vertex,\n\t\t *\tthen position it.\n\t\t *\n\t\t *******************************************************/\n\n\t\tnewEdgeVertices = [];\n\t\tvar other, currentEdge, newEdge, face;\n\t\tvar edgeVertexWeight, adjacentVertexWeight, connectedFaces;\n\n\t\tfor ( i in sourceEdges ) {\n\n\t\t\tcurrentEdge = sourceEdges[ i ];\n\t\t\tnewEdge = new THREE.Vector3();\n\n\t\t\tedgeVertexWeight = 3 / 8;\n\t\t\tadjacentVertexWeight = 1 / 8;\n\n\t\t\tconnectedFaces = currentEdge.faces.length;\n\n\t\t\t// check how many linked faces. 2 should be correct.\n\t\t\tif ( connectedFaces != 2 ) {\n\n\t\t\t\t// if length is not 2, handle condition\n\t\t\t\tedgeVertexWeight = 0.5;\n\t\t\t\tadjacentVertexWeight = 0;\n\n\t\t\t\tif ( connectedFaces != 1 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( 'Subdivision Modifier: Number of connected faces != 2, is: ', connectedFaces, currentEdge );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewEdge.addVectors( currentEdge.a, currentEdge.b ).multiplyScalar( edgeVertexWeight );\n\n\t\t\ttmp.set( 0, 0, 0 );\n\n\t\t\tfor ( j = 0; j < connectedFaces; j ++ ) {\n\n\t\t\t\tface = currentEdge.faces[ j ];\n\n\t\t\t\tfor ( k = 0; k < 3; k ++ ) {\n\n\t\t\t\t\tother = oldVertices[ face[ ABC[ k ] ] ];\n\t\t\t\t\tif ( other !== currentEdge.a && other !== currentEdge.b ) break;\n\n\t\t\t\t}\n\n\t\t\t\ttmp.add( other );\n\n\t\t\t}\n\n\t\t\ttmp.multiplyScalar( adjacentVertexWeight );\n\t\t\tnewEdge.add( tmp );\n\n\t\t\tcurrentEdge.newEdge = newEdgeVertices.length;\n\t\t\tnewEdgeVertices.push( newEdge );\n\n\t\t\t// console.log(currentEdge, newEdge);\n\n\t\t}\n\n\t\t/******************************************************\n\t\t *\n\t\t *\tStep 2.\n\t\t *\tReposition each source vertices.\n\t\t *\n\t\t *******************************************************/\n\n\t\tvar beta, sourceVertexWeight, connectingVertexWeight;\n\t\tvar connectingEdge, connectingEdges, oldVertex, newSourceVertex;\n\t\tnewSourceVertices = [];\n\n\t\tfor ( i = 0, il = oldVertices.length; i < il; i ++ ) {\n\n\t\t\toldVertex = oldVertices[ i ];\n\n\t\t\t// find all connecting edges (using lookupTable)\n\t\t\tconnectingEdges = metaVertices[ i ].edges;\n\t\t\tn = connectingEdges.length;\n\n\t\t\tif ( n == 3 ) {\n\n\t\t\t\tbeta = 3 / 16;\n\n\t\t\t} else if ( n > 3 ) {\n\n\t\t\t\tbeta = 3 / ( 8 * n ); // Warren's modified formula\n\n\t\t\t}\n\n\t\t\t// Loop's original beta formula\n\t\t\t// beta = 1 / n * ( 5/8 - Math.pow( 3/8 + 1/4 * Math.cos( 2 * Math. PI / n ), 2) );\n\n\t\t\tsourceVertexWeight = 1 - n * beta;\n\t\t\tconnectingVertexWeight = beta;\n\n\t\t\tif ( n <= 2 ) {\n\n\t\t\t\t// crease and boundary rules\n\t\t\t\t// console.warn('crease and boundary rules');\n\n\t\t\t\tif ( n == 2 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( '2 connecting edges', connectingEdges );\n\t\t\t\t\tsourceVertexWeight = 3 / 4;\n\t\t\t\t\tconnectingVertexWeight = 1 / 8;\n\n\t\t\t\t\t// sourceVertexWeight = 1;\n\t\t\t\t\t// connectingVertexWeight = 0;\n\n\t\t\t\t} else if ( n == 1 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( 'only 1 connecting edge' );\n\n\t\t\t\t} else if ( n == 0 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( '0 connecting edges' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewSourceVertex = oldVertex.clone().multiplyScalar( sourceVertexWeight );\n\n\t\t\ttmp.set( 0, 0, 0 );\n\n\t\t\tfor ( j = 0; j < n; j ++ ) {\n\n\t\t\t\tconnectingEdge = connectingEdges[ j ];\n\t\t\t\tother = connectingEdge.a !== oldVertex ? connectingEdge.a : connectingEdge.b;\n\t\t\t\ttmp.add( other );\n\n\t\t\t}\n\n\t\t\ttmp.multiplyScalar( connectingVertexWeight );\n\t\t\tnewSourceVertex.add( tmp );\n\n\t\t\tnewSourceVertices.push( newSourceVertex );\n\n\t\t}\n\n\n\t\t/******************************************************\n\t\t *\n\t\t *\tStep 3.\n\t\t *\tGenerate Faces between source vertices\n\t\t *\tand edge vertices.\n\t\t *\n\t\t *******************************************************/\n\n\t\tnewVertices = newSourceVertices.concat( newEdgeVertices );\n\t\tvar sl = newSourceVertices.length, edge1, edge2, edge3;\n\t\tnewFaces = [];\n\n\t\tvar uv, x0, x1, x2;\n\t\tvar x3 = new THREE.Vector2();\n\t\tvar x4 = new THREE.Vector2();\n\t\tvar x5 = new THREE.Vector2();\n\n\t\tfor ( i = 0, il = oldFaces.length; i < il; i ++ ) {\n\n\t\t\tface = oldFaces[ i ];\n\n\t\t\t// find the 3 new edges vertex of each old face\n\n\t\t\tedge1 = getEdge( face.a, face.b, sourceEdges ).newEdge + sl;\n\t\t\tedge2 = getEdge( face.b, face.c, sourceEdges ).newEdge + sl;\n\t\t\tedge3 = getEdge( face.c, face.a, sourceEdges ).newEdge + sl;\n\n\t\t\t// create 4 faces.\n\n\t\t\tnewFace( newFaces, edge1, edge2, edge3 );\n\t\t\tnewFace( newFaces, face.a, edge1, edge3 );\n\t\t\tnewFace( newFaces, face.b, edge2, edge1 );\n\t\t\tnewFace( newFaces, face.c, edge3, edge2 );\n\n\t\t\t// create 4 new uv's\n\n\t\t\tif ( hasUvs ) {\n\n\t\t\t\tuv = oldUvs[ i ];\n\n\t\t\t\tx0 = uv[ 0 ];\n\t\t\t\tx1 = uv[ 1 ];\n\t\t\t\tx2 = uv[ 2 ];\n\n\t\t\t\tx3.set( midpoint( x0.x, x1.x ), midpoint( x0.y, x1.y ) );\n\t\t\t\tx4.set( midpoint( x1.x, x2.x ), midpoint( x1.y, x2.y ) );\n\t\t\t\tx5.set( midpoint( x0.x, x2.x ), midpoint( x0.y, x2.y ) );\n\n\t\t\t\tnewUv( newUVs, x3, x4, x5 );\n\t\t\t\tnewUv( newUVs, x0, x3, x5 );\n\n\t\t\t\tnewUv( newUVs, x1, x4, x3 );\n\t\t\t\tnewUv( newUVs, x2, x5, x4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Overwrite old arrays\n\t\tgeometry.vertices = newVertices;\n\t\tgeometry.faces = newFaces;\n\t\tif ( hasUvs ) geometry.faceVertexUvs[ 0 ] = newUVs;\n\n\t\t// console.log('done');\n\n\t};\n\n} )();\n"
			}],
		"817A9E70-F25D-467D-A1B9-F6960AE9B2CF": [
			{
				"name": "cannon.min.js",
				"source": "/*\n * Copyright (c) 2015 cannon.js Authors\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use, copy,\n * modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&false)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CANNON=e()}}(function(){return function e(f,n,o){function d(t,l){if(!n[t]){if(!f[t]){var u=\"function\"==typeof require&&require;if(!l&&u)return u(t,!0);if(i)return i(t,!0);throw new Error(\"Cannot find module '\"+t+\"'\")}var p=n[t]={exports:{}};f[t][0].call(p.exports,function(e){var n=f[t][1][e];return d(n?n:e)},p,p.exports,e,f,n,o)}return n[t].exports}for(var i=\"function\"==typeof require&&require,t=0;t<o.length;t++)d(o[t]);return d}({1:[function(e,f){f.exports={name:\"cannon\",version:\"0.6.2\",description:\"A lightweight 3D physics engine written in JavaScript.\",homepage:\"https://github.com/schteppe/cannon.js\",author:\"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)\",keywords:[\"cannon.js\",\"cannon\",\"physics\",\"engine\",\"3d\"],main:\"./build/cannon.js\",engines:{node:\"*\"},repository:{type:\"git\",url:\"https://github.com/schteppe/cannon.js.git\"},bugs:{url:\"https://github.com/schteppe/cannon.js/issues\"},licenses:[{type:\"MIT\"}],devDependencies:{jshint:\"latest\",\"uglify-js\":\"latest\",nodeunit:\"^0.9.0\",grunt:\"~0.4.0\",\"grunt-contrib-jshint\":\"~0.1.1\",\"grunt-contrib-nodeunit\":\"^0.4.1\",\"grunt-contrib-concat\":\"~0.1.3\",\"grunt-contrib-uglify\":\"^0.5.1\",\"grunt-browserify\":\"^2.1.4\",\"grunt-contrib-yuidoc\":\"^0.5.2\",browserify:\"*\"},dependencies:{}}},{}],2:[function(e,f){f.exports={version:e(\"../package.json\").version,AABB:e(\"./collision/AABB\"),ArrayCollisionMatrix:e(\"./collision/ArrayCollisionMatrix\"),Body:e(\"./objects/Body\"),Box:e(\"./shapes/Box\"),Broadphase:e(\"./collision/Broadphase\"),Constraint:e(\"./constraints/Constraint\"),ContactEquation:e(\"./equations/ContactEquation\"),Narrowphase:e(\"./world/Narrowphase\"),ConeTwistConstraint:e(\"./constraints/ConeTwistConstraint\"),ContactMaterial:e(\"./material/ContactMaterial\"),ConvexPolyhedron:e(\"./shapes/ConvexPolyhedron\"),Cylinder:e(\"./shapes/Cylinder\"),DistanceConstraint:e(\"./constraints/DistanceConstraint\"),Equation:e(\"./equations/Equation\"),EventTarget:e(\"./utils/EventTarget\"),FrictionEquation:e(\"./equations/FrictionEquation\"),GSSolver:e(\"./solver/GSSolver\"),GridBroadphase:e(\"./collision/GridBroadphase\"),Heightfield:e(\"./shapes/Heightfield\"),HingeConstraint:e(\"./constraints/HingeConstraint\"),LockConstraint:e(\"./constraints/LockConstraint\"),Mat3:e(\"./math/Mat3\"),Material:e(\"./material/Material\"),NaiveBroadphase:e(\"./collision/NaiveBroadphase\"),ObjectCollisionMatrix:e(\"./collision/ObjectCollisionMatrix\"),Pool:e(\"./utils/Pool\"),Particle:e(\"./shapes/Particle\"),Plane:e(\"./shapes/Plane\"),PointToPointConstraint:e(\"./constraints/PointToPointConstraint\"),Quaternion:e(\"./math/Quaternion\"),Ray:e(\"./collision/Ray\"),RaycastVehicle:e(\"./objects/RaycastVehicle\"),RaycastResult:e(\"./collision/RaycastResult\"),RigidVehicle:e(\"./objects/RigidVehicle\"),RotationalEquation:e(\"./equations/RotationalEquation\"),RotationalMotorEquation:e(\"./equations/RotationalMotorEquation\"),SAPBroadphase:e(\"./collision/SAPBroadphase\"),SPHSystem:e(\"./objects/SPHSystem\"),Shape:e(\"./shapes/Shape\"),Solver:e(\"./solver/Solver\"),Sphere:e(\"./shapes/Sphere\"),SplitSolver:e(\"./solver/SplitSolver\"),Spring:e(\"./objects/Spring\"),Trimesh:e(\"./shapes/Trimesh\"),Vec3:e(\"./math/Vec3\"),Vec3Pool:e(\"./utils/Vec3Pool\"),World:e(\"./world/World\")}},{\"../package.json\":1,\"./collision/AABB\":3,\"./collision/ArrayCollisionMatrix\":4,\"./collision/Broadphase\":5,\"./collision/GridBroadphase\":6,\"./collision/NaiveBroadphase\":7,\"./collision/ObjectCollisionMatrix\":8,\"./collision/Ray\":9,\"./collision/RaycastResult\":10,\"./collision/SAPBroadphase\":11,\"./constraints/ConeTwistConstraint\":12,\"./constraints/Constraint\":13,\"./constraints/DistanceConstraint\":14,\"./constraints/HingeConstraint\":15,\"./constraints/LockConstraint\":16,\"./constraints/PointToPointConstraint\":17,\"./equations/ContactEquation\":19,\"./equations/Equation\":20,\"./equations/FrictionEquation\":21,\"./equations/RotationalEquation\":22,\"./equations/RotationalMotorEquation\":23,\"./material/ContactMaterial\":24,\"./material/Material\":25,\"./math/Mat3\":27,\"./math/Quaternion\":28,\"./math/Vec3\":30,\"./objects/Body\":31,\"./objects/RaycastVehicle\":32,\"./objects/RigidVehicle\":33,\"./objects/SPHSystem\":34,\"./objects/Spring\":35,\"./shapes/Box\":37,\"./shapes/ConvexPolyhedron\":38,\"./shapes/Cylinder\":39,\"./shapes/Heightfield\":40,\"./shapes/Particle\":41,\"./shapes/Plane\":42,\"./shapes/Shape\":43,\"./shapes/Sphere\":44,\"./shapes/Trimesh\":45,\"./solver/GSSolver\":46,\"./solver/Solver\":47,\"./solver/SplitSolver\":48,\"./utils/EventTarget\":49,\"./utils/Pool\":51,\"./utils/Vec3Pool\":54,\"./world/Narrowphase\":55,\"./world/World\":56}],3:[function(e,f){function n(e){e=e||{},this.lowerBound=new o,e.lowerBound&&this.lowerBound.copy(e.lowerBound),this.upperBound=new o,e.upperBound&&this.upperBound.copy(e.upperBound)}{var o=e(\"../math/Vec3\");e(\"../utils/Utils\")}f.exports=n;var d=new o;n.prototype.setFromPoints=function(e,f,n,o){var i=this.lowerBound,t=this.upperBound,l=n;i.copy(e[0]),l&&l.vmult(i,i),t.copy(i);for(var u=1;u<e.length;u++){var p=e[u];l&&(l.vmult(p,d),p=d),p.x>t.x&&(t.x=p.x),p.x<i.x&&(i.x=p.x),p.y>t.y&&(t.y=p.y),p.y<i.y&&(i.y=p.y),p.z>t.z&&(t.z=p.z),p.z<i.z&&(i.z=p.z)}return f&&(f.vadd(i,i),f.vadd(t,t)),o&&(i.x-=o,i.y-=o,i.z-=o,t.x+=o,t.y+=o,t.z+=o),this},n.prototype.copy=function(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this},n.prototype.clone=function(){return(new n).copy(this)},n.prototype.extend=function(e){var f=e.lowerBound.x;this.lowerBound.x>f&&(this.lowerBound.x=f);var n=e.upperBound.x;this.upperBound.x<n&&(this.upperBound.x=n);var f=e.lowerBound.y;this.lowerBound.y>f&&(this.lowerBound.y=f);var n=e.upperBound.y;this.upperBound.y<n&&(this.upperBound.y=n);var f=e.lowerBound.z;this.lowerBound.z>f&&(this.lowerBound.z=f);var n=e.upperBound.z;this.upperBound.z<n&&(this.upperBound.z=n)},n.prototype.overlaps=function(e){var f=this.lowerBound,n=this.upperBound,o=e.lowerBound,d=e.upperBound;return(o.x<=n.x&&n.x<=d.x||f.x<=d.x&&d.x<=n.x)&&(o.y<=n.y&&n.y<=d.y||f.y<=d.y&&d.y<=n.y)&&(o.z<=n.z&&n.z<=d.z||f.z<=d.z&&d.z<=n.z)},n.prototype.contains=function(e){var f=this.lowerBound,n=this.upperBound,o=e.lowerBound,d=e.upperBound;return f.x<=o.x&&n.x>=d.x&&f.y<=o.y&&n.y>=d.y&&f.z<=o.z&&n.z>=d.z},n.prototype.getCorners=function(e,f,n,o,d,i,t,l){var u=this.lowerBound,p=this.upperBound;e.copy(u),f.set(p.x,u.y,u.z),n.set(p.x,p.y,u.z),o.set(u.x,p.y,p.z),d.set(p.x,u.y,u.z),i.set(u.x,p.y,u.z),t.set(u.x,u.y,p.z),l.copy(p)};var i=[new o,new o,new o,new o,new o,new o,new o,new o];n.prototype.toLocalFrame=function(e,f){var n=i,o=n[0],d=n[1],t=n[2],l=n[3],u=n[4],p=n[5],s=n[6],y=n[7];this.getCorners(o,d,t,l,u,p,s,y);for(var c=0;8!==c;c++){var a=n[c];e.pointToLocal(a,a)}return f.setFromPoints(n)},n.prototype.toWorldFrame=function(e,f){var n=i,o=n[0],d=n[1],t=n[2],l=n[3],u=n[4],p=n[5],s=n[6],y=n[7];this.getCorners(o,d,t,l,u,p,s,y);for(var c=0;8!==c;c++){var a=n[c];e.pointToWorld(a,a)}return f.setFromPoints(n)}},{\"../math/Vec3\":30,\"../utils/Utils\":53}],4:[function(e,f){function n(){this.matrix=[]}f.exports=n,n.prototype.get=function(e,f){if(e=e.index,f=f.index,f>e){var n=f;f=e,e=n}return this.matrix[(e*(e+1)>>1)+f-1]},n.prototype.set=function(e,f,n){if(e=e.index,f=f.index,f>e){var o=f;f=e,e=o}this.matrix[(e*(e+1)>>1)+f-1]=n?1:0},n.prototype.reset=function(){for(var e=0,f=this.matrix.length;e!==f;e++)this.matrix[e]=0},n.prototype.setNumObjects=function(e){this.matrix.length=e*(e-1)>>1}},{}],5:[function(e,f){function n(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}{var o=e(\"../objects/Body\"),d=e(\"../math/Vec3\"),i=e(\"../math/Quaternion\");e(\"../shapes/Shape\"),e(\"../shapes/Plane\")}f.exports=n,n.prototype.collisionPairs=function(){throw new Error(\"collisionPairs not implemented for this BroadPhase class!\")};var t=o.STATIC|o.KINEMATIC;n.prototype.needBroadphaseCollision=function(e,f){return 0===(e.collisionFilterGroup&f.collisionFilterMask)||0===(f.collisionFilterGroup&e.collisionFilterMask)?!1:0===(e.type&t)&&e.sleepState!==o.SLEEPING||0===(f.type&t)&&f.sleepState!==o.SLEEPING?!0:!1},n.prototype.intersectionTest=function(e,f,n,o){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,f,n,o):this.doBoundingSphereBroadphase(e,f,n,o)};{var l=new d;new d,new i,new d}n.prototype.doBoundingSphereBroadphase=function(e,f,n,o){var d=l;f.position.vsub(e.position,d);var i=Math.pow(e.boundingRadius+f.boundingRadius,2),t=d.norm2();i>t&&(n.push(e),o.push(f))},n.prototype.doBoundingBoxBroadphase=function(e,f,n,o){e.aabbNeedsUpdate&&e.computeAABB(),f.aabbNeedsUpdate&&f.computeAABB(),e.aabb.overlaps(f.aabb)&&(n.push(e),o.push(f))};var u={keys:[]},p=[],s=[];n.prototype.makePairsUnique=function(e,f){for(var n=u,o=p,d=s,i=e.length,t=0;t!==i;t++)o[t]=e[t],d[t]=f[t];e.length=0,f.length=0;for(var t=0;t!==i;t++){var l=o[t].id,y=d[t].id,c=y>l?l+\",\"+y:y+\",\"+l;n[c]=t,n.keys.push(c)}for(var t=0;t!==n.keys.length;t++){var c=n.keys.pop(),a=n[c];e.push(o[a]),f.push(d[a]),delete n[c]}},n.prototype.setWorld=function(){};var y=new d;n.boundingSphereCheck=function(e,f){var n=y;return e.position.vsub(f.position,n),Math.pow(e.shape.boundingSphereRadius+f.shape.boundingSphereRadius,2)>n.norm2()},n.prototype.aabbQuery=function(){return console.warn(\".aabbQuery is not implemented in this Broadphase subclass.\"),[]}},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Plane\":42,\"../shapes/Shape\":43}],6:[function(e,f){function n(e,f,n,i,t){o.apply(this),this.nx=n||10,this.ny=i||10,this.nz=t||10,this.aabbMin=e||new d(100,100,100),this.aabbMax=f||new d(-100,-100,-100);var l=this.nx*this.ny*this.nz;if(0>=l)throw\"GridBroadphase: Each dimension's n must be >0\";this.bins=[],this.binLengths=[],this.bins.length=l,this.binLengths.length=l;for(var u=0;l>u;u++)this.bins[u]=[],this.binLengths[u]=0}f.exports=n;var o=e(\"./Broadphase\"),d=e(\"../math/Vec3\"),i=e(\"../shapes/Shape\");n.prototype=new o,n.prototype.constructor=n;{var t=new d;new d}n.prototype.collisionPairs=function(e,f,n){function o(e,f,n,o,d,i,t){var l=(e-g)*v|0,u=(f-x)*A|0,p=(n-j)*C|0,b=I((o-g)*v),m=I((d-x)*A),N=I((i-j)*C);0>l?l=0:l>=s&&(l=s-1),0>u?u=0:u>=y&&(u=y-1),0>p?p=0:p>=c&&(p=c-1),0>b?b=0:b>=s&&(b=s-1),0>m?m=0:m>=y&&(m=y-1),0>N?N=0:N>=c&&(N=c-1),l*=a,u*=r,p*=w,b*=a,m*=r,N*=w;for(var O=l;b>=O;O+=a)for(var h=u;m>=h;h+=r)for(var k=p;N>=k;k+=w){var q=O+h+k;E[q][F[q]++]=t}}for(var d=e.numObjects(),l=e.bodies,u=this.aabbMax,p=this.aabbMin,s=this.nx,y=this.ny,c=this.nz,a=y*c,r=c,w=1,b=u.x,m=u.y,N=u.z,g=p.x,x=p.y,j=p.z,v=s/(b-g),A=y/(m-x),C=c/(N-j),O=(b-g)/s,h=(m-x)/y,k=(N-j)/c,q=.5*Math.sqrt(O*O+h*h+k*k),z=i.types,B=z.SPHERE,D=z.PLANE,E=(z.BOX,z.COMPOUND,z.CONVEXPOLYHEDRON,this.bins),F=this.binLengths,G=this.bins.length,H=0;H!==G;H++)F[H]=0;for(var I=Math.ceil,p=Math.min,u=Math.max,H=0;H!==d;H++){var J=l[H],K=J.shape;switch(K.type){case B:var L=J.position.x,M=J.position.y,P=J.position.z,Q=K.radius;o(L-Q,M-Q,P-Q,L+Q,M+Q,P+Q,J);break;case D:K.worldNormalNeedsUpdate&&K.computeWorldNormal(J.quaternion);var R=K.worldNormal,S=g+.5*O-J.position.x,T=x+.5*h-J.position.y,U=j+.5*k-J.position.z,V=t;V.set(S,T,U);for(var W=0,X=0;W!==s;W++,X+=a,V.y=T,V.x+=O)for(var Y=0,Z=0;Y!==y;Y++,Z+=r,V.z=U,V.y+=h)for(var $=0,_=0;$!==c;$++,_+=w,V.z+=k)if(V.dot(R)<q){var ef=X+Z+_;E[ef][F[ef]++]=J}break;default:J.aabbNeedsUpdate&&J.computeAABB(),o(J.aabb.lowerBound.x,J.aabb.lowerBound.y,J.aabb.lowerBound.z,J.aabb.upperBound.x,J.aabb.upperBound.y,J.aabb.upperBound.z,J)}}for(var H=0;H!==G;H++){var ff=F[H];if(ff>1)for(var nf=E[H],W=0;W!==ff;W++)for(var J=nf[W],Y=0;Y!==W;Y++){var of=nf[Y];this.needBroadphaseCollision(J,of)&&this.intersectionTest(J,of,f,n)}}this.makePairsUnique(f,n)}},{\"../math/Vec3\":30,\"../shapes/Shape\":43,\"./Broadphase\":5}],7:[function(e,f){function n(){o.apply(this)}f.exports=n;var o=e(\"./Broadphase\"),d=e(\"./AABB\");n.prototype=new o,n.prototype.constructor=n,n.prototype.collisionPairs=function(e,f,n){var o,d,i,t,l=e.bodies,u=l.length;for(o=0;o!==u;o++)for(d=0;d!==o;d++)i=l[o],t=l[d],this.needBroadphaseCollision(i,t)&&this.intersectionTest(i,t,f,n)};new d;n.prototype.aabbQuery=function(e,f,n){n=n||[];for(var o=0;o<e.bodies.length;o++){var d=e.bodies[o];d.aabbNeedsUpdate&&d.computeAABB(),d.aabb.overlaps(f)&&n.push(d)}return n}},{\"./AABB\":3,\"./Broadphase\":5}],8:[function(e,f){function n(){this.matrix={}}f.exports=n,n.prototype.get=function(e,f){if(e=e.id,f=f.id,f>e){var n=f;f=e,e=n}return e+\"-\"+f in this.matrix},n.prototype.set=function(e,f,n){if(e=e.id,f=f.id,f>e){var o=f;f=e,e=o}n?this.matrix[e+\"-\"+f]=!0:delete this.matrix[e+\"-\"+f]},n.prototype.reset=function(){this.matrix={}},n.prototype.setNumObjects=function(){}},{}],9:[function(e,f){function n(e,f){this.from=e?e.clone():new i,this.to=f?f.clone():new i,this._direction=new i,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=n.ANY,this.result=new u,this.hasHit=!1,this.callback=function(){}}function o(e,f,n,o){o.vsub(f,G),n.vsub(f,a),e.vsub(f,r);var d,i,t=G.dot(G),l=G.dot(a),u=G.dot(r),p=a.dot(a),s=a.dot(r);return(d=p*u-l*s)>=0&&(i=t*s-l*u)>=0&&t*p-l*l>d+i}function d(e,f,n){n.vsub(e,G);var o=G.dot(f);f.mult(o,H),H.vadd(e,H);var d=n.distanceTo(H);return d}f.exports=n;var i=e(\"../math/Vec3\"),t=e(\"../math/Quaternion\"),l=e(\"../math/Transform\"),u=(e(\"../shapes/ConvexPolyhedron\"),e(\"../shapes/Box\"),e(\"../collision/RaycastResult\")),p=e(\"../shapes/Shape\"),s=e(\"../collision/AABB\");n.prototype.constructor=n,n.CLOSEST=1,n.ANY=2,n.ALL=4;var y=new s,c=[];n.prototype.intersectWorld=function(e,f){return this.mode=f.mode||n.ANY,this.result=f.result||new u,this.skipBackfaces=!!f.skipBackfaces,this.collisionFilterMask=\"undefined\"!=typeof f.collisionFilterMask?f.collisionFilterMask:-1,this.collisionFilterGroup=\"undefined\"!=typeof f.collisionFilterGroup?f.collisionFilterGroup:-1,f.from&&this.from.copy(f.from),f.to&&this.to.copy(f.to),this.callback=f.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(y),c.length=0,e.broadphase.aabbQuery(e,y,c),this.intersectBodies(c),this.hasHit};var a=new i,r=new i;n.pointInTriangle=o;var w=new i,b=new t;n.prototype.intersectBody=function(e,f){f&&(this.result=f,this._updateDirection());var n=this.checkCollisionResponse;if((!n||e.collisionResponse)&&0!==(this.collisionFilterGroup&e.collisionFilterMask)&&0!==(e.collisionFilterGroup&this.collisionFilterMask))for(var o=w,d=b,i=0,t=e.shapes.length;t>i;i++){var l=e.shapes[i];if((!n||l.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[i],d),e.quaternion.vmult(e.shapeOffsets[i],o),o.vadd(e.position,o),this.intersectShape(l,d,o,e),this.result._shouldStop))break}},n.prototype.intersectBodies=function(e,f){f&&(this.result=f,this._updateDirection());for(var n=0,o=e.length;!this.result._shouldStop&&o>n;n++)this.intersectBody(e[n])},n.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},n.prototype.intersectShape=function(e,f,n,o){var i=this.from,t=d(i,this._direction,n);if(!(t>e.boundingSphereRadius)){var l=this[e.type];l&&l.call(this,e,f,n,o)}};{var m=(new i,new i,new i),N=new i,g=new i,x=new i;new i,new u}n.prototype.intersectBox=function(e,f,n,o){return this.intersectConvex(e.convexPolyhedronRepresentation,f,n,o)},n.prototype[p.types.BOX]=n.prototype.intersectBox,n.prototype.intersectPlane=function(e,f,n,o){var d=this.from,t=this.to,l=this._direction,u=new i(0,0,1);f.vmult(u,u);var p=new i;d.vsub(n,p);var s=p.dot(u);t.vsub(n,p);var y=p.dot(u);if(!(s*y>0||d.distanceTo(t)<s)){var c=u.dot(l);if(!(Math.abs(c)<this.precision)){var a=new i,r=new i,w=new i;d.vsub(n,a);var b=-u.dot(a)/c;l.scale(b,r),d.vadd(r,w),this.reportIntersection(u,w,e,o,-1)}}},n.prototype[p.types.PLANE]=n.prototype.intersectPlane,n.prototype.getAABB=function(e){var f=this.to,n=this.from;e.lowerBound.x=Math.min(f.x,n.x),e.lowerBound.y=Math.min(f.y,n.y),e.lowerBound.z=Math.min(f.z,n.z),e.upperBound.x=Math.max(f.x,n.x),e.upperBound.y=Math.max(f.y,n.y),e.upperBound.z=Math.max(f.z,n.z)};var j={faceList:[0]};n.prototype.intersectHeightfield=function(e,f,o,d){var t=(e.data,e.elementSize,new i),u=new n(this.from,this.to);l.pointToLocalFrame(o,f,u.from,u.from),l.pointToLocalFrame(o,f,u.to,u.to);var p=[],s=null,y=null,c=null,a=null,r=e.getIndexOfPosition(u.from.x,u.from.y,p,!1);if(r&&(s=p[0],y=p[1],c=p[0],a=p[1]),r=e.getIndexOfPosition(u.to.x,u.to.y,p,!1),r&&((null===s||p[0]<s)&&(s=p[0]),(null===c||p[0]>c)&&(c=p[0]),(null===y||p[1]<y)&&(y=p[1]),(null===a||p[1]>a)&&(a=p[1])),null!==s){var w=[];e.getRectMinMax(s,y,c,a,w);for(var b=(w[0],w[1],s);c>=b;b++)for(var m=y;a>=m;m++){if(this.result._shouldStop)return;if(e.getConvexTrianglePillar(b,m,!1),l.pointToWorldFrame(o,f,e.pillarOffset,t),this.intersectConvex(e.pillarConvex,f,t,d,j),this.result._shouldStop)return;e.getConvexTrianglePillar(b,m,!0),l.pointToWorldFrame(o,f,e.pillarOffset,t),this.intersectConvex(e.pillarConvex,f,t,d,j)}}},n.prototype[p.types.HEIGHTFIELD]=n.prototype.intersectHeightfield;var v=new i,A=new i;n.prototype.intersectSphere=function(e,f,n,o){var d=this.from,i=this.to,t=e.radius,l=Math.pow(i.x-d.x,2)+Math.pow(i.y-d.y,2)+Math.pow(i.z-d.z,2),u=2*((i.x-d.x)*(d.x-n.x)+(i.y-d.y)*(d.y-n.y)+(i.z-d.z)*(d.z-n.z)),p=Math.pow(d.x-n.x,2)+Math.pow(d.y-n.y,2)+Math.pow(d.z-n.z,2)-Math.pow(t,2),s=Math.pow(u,2)-4*l*p,y=v,c=A;if(!(0>s))if(0===s)d.lerp(i,s,y),y.vsub(n,c),c.normalize(),this.reportIntersection(c,y,e,o,-1);else{var a=(-u-Math.sqrt(s))/(2*l),r=(-u+Math.sqrt(s))/(2*l);if(a>=0&&1>=a&&(d.lerp(i,a,y),y.vsub(n,c),c.normalize(),this.reportIntersection(c,y,e,o,-1)),this.result._shouldStop)return;r>=0&&1>=r&&(d.lerp(i,r,y),y.vsub(n,c),c.normalize(),this.reportIntersection(c,y,e,o,-1))}},n.prototype[p.types.SPHERE]=n.prototype.intersectSphere;var C=new i,O=(new i,new i,new i);n.prototype.intersectConvex=function(e,f,n,d,i){for(var t=C,l=O,u=i&&i.faceList||null,p=e.faces,s=e.vertices,y=e.faceNormals,c=this._direction,a=this.from,r=this.to,w=a.distanceTo(r),b=u?u.length:p.length,j=this.result,v=0;!j._shouldStop&&b>v;v++){var A=u?u[v]:v,h=p[A],k=y[A],q=f,z=n;l.copy(s[h[0]]),q.vmult(l,l),l.vadd(z,l),l.vsub(a,l),q.vmult(k,t);var B=c.dot(t);if(!(Math.abs(B)<this.precision)){var D=t.dot(l)/B;if(!(0>D)){c.mult(D,m),m.vadd(a,m),N.copy(s[h[0]]),q.vmult(N,N),z.vadd(N,N);for(var E=1;!j._shouldStop&&E<h.length-1;E++){g.copy(s[h[E]]),x.copy(s[h[E+1]]),q.vmult(g,g),q.vmult(x,x),z.vadd(g,g),z.vadd(x,x);var F=m.distanceTo(a);!o(m,N,g,x)&&!o(m,g,N,x)||F>w||this.reportIntersection(t,m,e,d,A)}}}}},n.prototype[p.types.CONVEXPOLYHEDRON]=n.prototype.intersectConvex;var h=new i,k=new i,q=new i,z=new i,B=new i,D=new i,E=(new s,[]),F=new l;n.prototype.intersectTrimesh=function(e,f,n,d,i){var t=h,u=E,p=F,s=O,y=k,c=q,a=z,r=D,w=B,b=(i&&i.faceList||null,e.indices),j=(e.vertices,e.faceNormals,this.from),v=this.to,A=this._direction;p.position.copy(n),p.quaternion.copy(f),l.vectorToLocalFrame(n,f,A,y),l.pointToLocalFrame(n,f,j,c),l.pointToLocalFrame(n,f,v,a);var C=c.distanceSquared(a);e.tree.rayQuery(this,p,u);for(var G=0,H=u.length;!this.result._shouldStop&&G!==H;G++){var I=u[G];e.getNormal(I,t),e.getVertex(b[3*I],N),N.vsub(c,s);var J=y.dot(t),K=t.dot(s)/J;if(!(0>K)){y.scale(K,m),m.vadd(c,m),e.getVertex(b[3*I+1],g),e.getVertex(b[3*I+2],x);var L=m.distanceSquared(c);!o(m,g,N,x)&&!o(m,N,g,x)||L>C||(l.vectorToWorldFrame(f,t,w),l.pointToWorldFrame(n,f,m,r),this.reportIntersection(w,r,e,d,I))}}u.length=0},n.prototype[p.types.TRIMESH]=n.prototype.intersectTrimesh,n.prototype.reportIntersection=function(e,f,o,d,i){var t=this.from,l=this.to,u=t.distanceTo(f),p=this.result;if(!(this.skipBackfaces&&e.dot(this._direction)>0))switch(p.hitFaceIndex=\"undefined\"!=typeof i?i:-1,this.mode){case n.ALL:this.hasHit=!0,p.set(t,l,e,f,o,d,u),p.hasHit=!0,this.callback(p);break;case n.CLOSEST:(u<p.distance||!p.hasHit)&&(this.hasHit=!0,p.hasHit=!0,p.set(t,l,e,f,o,d,u));break;case n.ANY:this.hasHit=!0,p.hasHit=!0,p.set(t,l,e,f,o,d,u),p._shouldStop=!0}};var G=new i,H=new i},{\"../collision/AABB\":3,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43}],10:[function(e,f){function n(){this.rayFromWorld=new o,this.rayToWorld=new o,this.hitNormalWorld=new o,this.hitPointWorld=new o,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}var o=e(\"../math/Vec3\");f.exports=n,n.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},n.prototype.abort=function(){this._shouldStop=!0},n.prototype.set=function(e,f,n,o,d,i,t){this.rayFromWorld.copy(e),this.rayToWorld.copy(f),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(o),this.shape=d,this.body=i,this.distance=t}},{\"../math/Vec3\":30}],11:[function(e,f){function n(e){o.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var f=this.axisList;this._addBodyHandler=function(e){f.push(e.body)},this._removeBodyHandler=function(e){var n=f.indexOf(e.body);-1!==n&&f.splice(n,1)},e&&this.setWorld(e)}var o=(e(\"../shapes/Shape\"),e(\"../collision/Broadphase\"));f.exports=n,n.prototype=new o,n.prototype.setWorld=function(e){this.axisList.length=0;for(var f=0;f<e.bodies.length;f++)this.axisList.push(e.bodies[f]);e.removeEventListener(\"addBody\",this._addBodyHandler),e.removeEventListener(\"removeBody\",this._removeBodyHandler),e.addEventListener(\"addBody\",this._addBodyHandler),e.addEventListener(\"removeBody\",this._removeBodyHandler),this.world=e,this.dirty=!0},n.insertionSortX=function(e){for(var f=1,n=e.length;n>f;f++){for(var o=e[f],d=f-1;d>=0&&!(e[d].aabb.lowerBound.x<=o.aabb.lowerBound.x);d--)e[d+1]=e[d];e[d+1]=o}return e},n.insertionSortY=function(e){for(var f=1,n=e.length;n>f;f++){for(var o=e[f],d=f-1;d>=0&&!(e[d].aabb.lowerBound.y<=o.aabb.lowerBound.y);d--)e[d+1]=e[d];e[d+1]=o}return e},n.insertionSortZ=function(e){for(var f=1,n=e.length;n>f;f++){for(var o=e[f],d=f-1;d>=0&&!(e[d].aabb.lowerBound.z<=o.aabb.lowerBound.z);d--)e[d+1]=e[d];e[d+1]=o}return e},n.prototype.collisionPairs=function(e,f,o){var d,i,t=this.axisList,l=t.length,u=this.axisIndex;for(this.dirty&&(this.sortList(),this.dirty=!1),d=0;d!==l;d++){var p=t[d];for(i=d+1;l>i;i++){var s=t[i];if(this.needBroadphaseCollision(p,s)){if(!n.checkBounds(p,s,u))break;this.intersectionTest(p,s,f,o)}}}},n.prototype.sortList=function(){for(var e=this.axisList,f=this.axisIndex,o=e.length,d=0;d!==o;d++){var i=e[d];i.aabbNeedsUpdate&&i.computeAABB()}0===f?n.insertionSortX(e):1===f?n.insertionSortY(e):2===f&&n.insertionSortZ(e)},n.checkBounds=function(e,f,n){var o,d;0===n?(o=e.position.x,d=f.position.x):1===n?(o=e.position.y,d=f.position.y):2===n&&(o=e.position.z,d=f.position.z);var i=e.boundingRadius,t=f.boundingRadius,l=o+i,u=d-t;return l>u},n.prototype.autoDetectAxis=function(){for(var e=0,f=0,n=0,o=0,d=0,i=0,t=this.axisList,l=t.length,u=1/l,p=0;p!==l;p++){var s=t[p],y=s.position.x;e+=y,f+=y*y;var c=s.position.y;n+=c,o+=c*c;var a=s.position.z;d+=a,i+=a*a}var r=f-e*e*u,w=o-n*n*u,b=i-d*d*u;this.axisIndex=r>w?r>b?0:2:w>b?1:2},n.prototype.aabbQuery=function(e,f,n){n=n||[],this.dirty&&(this.sortList(),this.dirty=!1);var o=this.axisIndex,d=\"x\";1===o&&(d=\"y\"),2===o&&(d=\"z\");for(var i=this.axisList,t=(f.lowerBound[d],f.upperBound[d],0);t<i.length;t++){var l=i[t];l.aabbNeedsUpdate&&l.computeAABB(),l.aabb.overlaps(f)&&n.push(l)}return n}},{\"../collision/Broadphase\":5,\"../shapes/Shape\":43}],12:[function(e,f){function n(e,f,n){n=n||{};var l=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6,u=n.pivotA?n.pivotA.clone():new t,p=n.pivotB?n.pivotB.clone():new t;this.axisA=n.axisA?n.axisA.clone():new t,this.axisB=n.axisB?n.axisB.clone():new t,o.call(this,e,u,f,p,l),this.collideConnected=!!n.collideConnected,this.angle=\"undefined\"!=typeof n.angle?n.angle:0;var s=this.coneEquation=new d(e,f,n),y=this.twistEquation=new i(e,f,n);this.twistAngle=\"undefined\"!=typeof n.twistAngle?n.twistAngle:0,s.maxForce=0,s.minForce=-l,y.maxForce=0,y.minForce=-l,this.equations.push(s,y)}f.exports=n;var o=(e(\"./Constraint\"),e(\"./PointToPointConstraint\")),d=e(\"../equations/ConeEquation\"),i=e(\"../equations/RotationalEquation\"),t=(e(\"../equations/ContactEquation\"),e(\"../math/Vec3\"));n.prototype=new o,n.constructor=n;new t,new t;n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.coneEquation,d=this.twistEquation;o.prototype.update.call(this),e.vectorToWorldFrame(this.axisA,n.axisA),f.vectorToWorldFrame(this.axisB,n.axisB),this.axisA.tangents(d.axisA,d.axisA),e.vectorToWorldFrame(d.axisA,d.axisA),this.axisB.tangents(d.axisB,d.axisB),f.vectorToWorldFrame(d.axisB,d.axisB),n.angle=this.angle,d.maxAngle=this.twistAngle}},{\"../equations/ConeEquation\":18,\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],13:[function(e,f){function n(e,f,d){d=o.defaults(d,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=f,this.id=n.idCounter++,this.collideConnected=d.collideConnected,d.wakeUpBodies&&(e&&e.wakeUp(),f&&f.wakeUp())}f.exports=n;var o=e(\"../utils/Utils\");n.prototype.update=function(){throw new Error(\"method update() not implmemented in this Constraint subclass!\")},n.prototype.enable=function(){for(var e=this.equations,f=0;f<e.length;f++)e[f].enabled=!0},n.prototype.disable=function(){for(var e=this.equations,f=0;f<e.length;f++)e[f].enabled=!1},n.idCounter=0},{\"../utils/Utils\":53}],14:[function(e,f){function n(e,f,n,i){o.call(this,e,f),\"undefined\"==typeof n&&(n=e.position.distanceTo(f.position)),\"undefined\"==typeof i&&(i=1e6),this.distance=n;var t=this.distanceEquation=new d(e,f);this.equations.push(t),t.minForce=-i,t.maxForce=i}f.exports=n;var o=e(\"./Constraint\"),d=e(\"../equations/ContactEquation\");n.prototype=new o,n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.distanceEquation,o=.5*this.distance,d=n.ni;f.position.vsub(e.position,d),d.normalize(),d.mult(o,n.ri),d.mult(-o,n.rj)}},{\"../equations/ContactEquation\":19,\"./Constraint\":13}],15:[function(e,f){function n(e,f,n){n=n||{};var l=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6,u=n.pivotA?n.pivotA.clone():new t,p=n.pivotB?n.pivotB.clone():new t;o.call(this,e,u,f,p,l);var s=this.axisA=n.axisA?n.axisA.clone():new t(1,0,0);s.normalize();var y=this.axisB=n.axisB?n.axisB.clone():new t(1,0,0);y.normalize();var c=this.rotationalEquation1=new d(e,f,n),a=this.rotationalEquation2=new d(e,f,n),r=this.motorEquation=new i(e,f,l);r.enabled=!1,this.equations.push(c,a,r)}f.exports=n;var o=(e(\"./Constraint\"),e(\"./PointToPointConstraint\")),d=e(\"../equations/RotationalEquation\"),i=e(\"../equations/RotationalMotorEquation\"),t=(e(\"../equations/ContactEquation\"),e(\"../math/Vec3\"));n.prototype=new o,n.constructor=n,n.prototype.enableMotor=function(){this.motorEquation.enabled=!0},n.prototype.disableMotor=function(){this.motorEquation.enabled=!1},n.prototype.setMotorSpeed=function(e){this.motorEquation.targetVelocity=e},n.prototype.setMotorMaxForce=function(e){this.motorEquation.maxForce=e,this.motorEquation.minForce=-e};var l=new t,u=new t;n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.motorEquation,d=this.rotationalEquation1,i=this.rotationalEquation2,t=l,p=u,s=this.axisA,y=this.axisB;o.prototype.update.call(this),e.quaternion.vmult(s,t),f.quaternion.vmult(y,p),t.tangents(d.axisA,i.axisA),d.axisB.copy(p),i.axisB.copy(p),this.motorEquation.enabled&&(e.quaternion.vmult(this.axisA,n.axisA),f.quaternion.vmult(this.axisB,n.axisB))}},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],16:[function(e,f){function n(e,f,n){n=n||{};var t=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6,l=new i,u=new i,p=new i;e.position.vadd(f.position,p),p.scale(.5,p),f.pointToLocalFrame(p,u),e.pointToLocalFrame(p,l),o.call(this,e,l,f,u,t);var s=this.rotationalEquation1=new d(e,f,n),y=this.rotationalEquation2=new d(e,f,n),c=this.rotationalEquation3=new d(e,f,n);this.equations.push(s,y,c)}f.exports=n;var o=(e(\"./Constraint\"),e(\"./PointToPointConstraint\")),d=e(\"../equations/RotationalEquation\"),i=(e(\"../equations/RotationalMotorEquation\"),e(\"../equations/ContactEquation\"),e(\"../math/Vec3\"));n.prototype=new o,n.constructor=n;new i,new i;n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=(this.motorEquation,this.rotationalEquation1),d=this.rotationalEquation2,t=this.rotationalEquation3;o.prototype.update.call(this),e.vectorToWorldFrame(i.UNIT_X,n.axisA),f.vectorToWorldFrame(i.UNIT_Y,n.axisB),e.vectorToWorldFrame(i.UNIT_Y,d.axisA),f.vectorToWorldFrame(i.UNIT_Z,d.axisB),e.vectorToWorldFrame(i.UNIT_Z,t.axisA),f.vectorToWorldFrame(i.UNIT_X,t.axisB)}},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],17:[function(e,f){function n(e,f,n,t,l){o.call(this,e,n),l=\"undefined\"!=typeof l?l:1e6,this.pivotA=f?f.clone():new i,this.pivotB=t?t.clone():new i;var u=this.equationX=new d(e,n),p=this.equationY=new d(e,n),s=this.equationZ=new d(e,n);this.equations.push(u,p,s),u.minForce=p.minForce=s.minForce=-l,u.maxForce=p.maxForce=s.maxForce=l,u.ni.set(1,0,0),p.ni.set(0,1,0),s.ni.set(0,0,1)}f.exports=n;var o=e(\"./Constraint\"),d=e(\"../equations/ContactEquation\"),i=e(\"../math/Vec3\");n.prototype=new o,n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.equationX,o=this.equationY,d=this.equationZ;e.quaternion.vmult(this.pivotA,n.ri),f.quaternion.vmult(this.pivotB,n.rj),o.ri.copy(n.ri),o.rj.copy(n.rj),d.ri.copy(n.ri),d.rj.copy(n.rj)}},{\"../equations/ContactEquation\":19,\"../math/Vec3\":30,\"./Constraint\":13}],18:[function(e,f){function n(e,f,n){n=n||{};var i=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6;d.call(this,e,f,-i,i),this.axisA=n.axisA?n.axisA.clone():new o(1,0,0),this.axisB=n.axisB?n.axisB.clone():new o(0,1,0),this.angle=\"undefined\"!=typeof n.angle?n.angle:0}f.exports=n;var o=e(\"../math/Vec3\"),d=(e(\"../math/Mat3\"),e(\"./Equation\"));n.prototype=new d,n.prototype.constructor=n;var i=new o,t=new o;n.prototype.computeB=function(e){var f=this.a,n=this.b,o=this.axisA,d=this.axisB,l=i,u=t,p=this.jacobianElementA,s=this.jacobianElementB;o.cross(d,l),d.cross(o,u),p.rotational.copy(u),s.rotational.copy(l);var y=Math.cos(this.angle)-o.dot(d),c=this.computeGW(),a=this.computeGiMf(),r=-y*f-c*n-e*a;return r}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],19:[function(e,f){function n(e,f,n){n=\"undefined\"!=typeof n?n:1e6,o.call(this,e,f,0,n),this.restitution=0,this.ri=new d,this.rj=new d,this.ni=new d}f.exports=n;{var o=e(\"./Equation\"),d=e(\"../math/Vec3\");e(\"../math/Mat3\")}n.prototype=new o,n.prototype.constructor=n;var i=new d,t=new d,l=new d;n.prototype.computeB=function(e){var f=this.a,n=this.b,o=this.bi,d=this.bj,u=this.ri,p=this.rj,s=i,y=t,c=o.velocity,a=o.angularVelocity,r=(o.force,o.torque,d.velocity),w=d.angularVelocity,b=(d.force,d.torque,l),m=this.jacobianElementA,N=this.jacobianElementB,g=this.ni;u.cross(g,s),p.cross(g,y),g.negate(m.spatial),s.negate(m.rotational),N.spatial.copy(g),N.rotational.copy(y),b.copy(d.position),b.vadd(p,b),b.vsub(o.position,b),b.vsub(u,b);var x=g.dot(b),j=this.restitution+1,v=j*r.dot(g)-j*c.dot(g)+w.dot(y)-a.dot(s),A=this.computeGiMf(),C=-x*f-v*n-e*A;return C};var u=new d,p=new d,s=new d,y=new d,c=new d;n.prototype.getImpactVelocityAlongNormal=function(){var e=u,f=p,n=s,o=y,d=c;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,o),this.bi.getVelocityAtWorldPoint(n,e),this.bj.getVelocityAtWorldPoint(o,f),e.vsub(f,d),this.ni.dot(d)}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],20:[function(e,f){function n(e,f,d,i){this.id=n.id++,this.minForce=\"undefined\"==typeof d?-1e6:d,this.maxForce=\"undefined\"==typeof i?1e6:i,this.bi=e,this.bj=f,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new o,this.jacobianElementB=new o,this.enabled=!0,this.setSpookParams(1e7,4,1/60)\n}f.exports=n;var o=e(\"../math/JacobianElement\"),d=e(\"../math/Vec3\");n.prototype.constructor=n,n.id=0,n.prototype.setSpookParams=function(e,f,n){var o=f,d=e,i=n;this.a=4/(i*(1+4*o)),this.b=4*o/(1+4*o),this.eps=4/(i*i*d*(1+4*o))},n.prototype.computeB=function(e,f,n){var o=this.computeGW(),d=this.computeGq(),i=this.computeGiMf();return-d*e-o*f-i*n},n.prototype.computeGq=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.position,i=o.position;return e.spatial.dot(d)+f.spatial.dot(i)};var i=new d;n.prototype.computeGW=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.velocity,t=o.velocity,l=n.angularVelocity||i,u=o.angularVelocity||i;return e.multiplyVectors(d,l)+f.multiplyVectors(t,u)},n.prototype.computeGWlambda=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.vlambda,t=o.vlambda,l=n.wlambda||i,u=o.wlambda||i;return e.multiplyVectors(d,l)+f.multiplyVectors(t,u)};var t=new d,l=new d,u=new d,p=new d;n.prototype.computeGiMf=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.force,i=n.torque,s=o.force,y=o.torque,c=n.invMassSolve,a=o.invMassSolve;return n.invInertiaWorldSolve?n.invInertiaWorldSolve.vmult(i,u):u.set(0,0,0),o.invInertiaWorldSolve?o.invInertiaWorldSolve.vmult(y,p):p.set(0,0,0),d.mult(c,t),s.mult(a,l),e.multiplyVectors(t,u)+f.multiplyVectors(l,p)};var s=new d;n.prototype.computeGiMGt=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.invMassSolve,i=o.invMassSolve,t=n.invInertiaWorldSolve,l=o.invInertiaWorldSolve,u=d+i;return t&&(t.vmult(e.rotational,s),u+=s.dot(e.rotational)),l&&(l.vmult(f.rotational,s),u+=s.dot(f.rotational)),u};{var y=new d;new d,new d,new d,new d,new d}n.prototype.addToWlambda=function(e){var f=this.jacobianElementA,n=this.jacobianElementB,o=this.bi,d=this.bj,i=y;f.spatial.mult(o.invMassSolve*e,i),o.vlambda.vadd(i,o.vlambda),n.spatial.mult(d.invMassSolve*e,i),d.vlambda.vadd(i,d.vlambda),o.invInertiaWorldSolve&&(o.invInertiaWorldSolve.vmult(f.rotational,i),i.mult(e,i),o.wlambda.vadd(i,o.wlambda)),d.invInertiaWorldSolve&&(d.invInertiaWorldSolve.vmult(n.rotational,i),i.mult(e,i),d.wlambda.vadd(i,d.wlambda))},n.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{\"../math/JacobianElement\":26,\"../math/Vec3\":30}],21:[function(e,f){function n(e,f,n){o.call(this,e,f,-n,n),this.ri=new d,this.rj=new d,this.t=new d}f.exports=n;{var o=e(\"./Equation\"),d=e(\"../math/Vec3\");e(\"../math/Mat3\")}n.prototype=new o,n.prototype.constructor=n;var i=new d,t=new d;n.prototype.computeB=function(e){var f=(this.a,this.b),n=(this.bi,this.bj,this.ri),o=this.rj,d=i,l=t,u=this.t;n.cross(u,d),o.cross(u,l);var p=this.jacobianElementA,s=this.jacobianElementB;u.negate(p.spatial),d.negate(p.rotational),s.spatial.copy(u),s.rotational.copy(l);var y=this.computeGW(),c=this.computeGiMf(),a=-y*f-e*c;return a}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],22:[function(e,f){function n(e,f,n){n=n||{};var i=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6;d.call(this,e,f,-i,i),this.axisA=n.axisA?n.axisA.clone():new o(1,0,0),this.axisB=n.axisB?n.axisB.clone():new o(0,1,0),this.maxAngle=Math.PI/2}f.exports=n;var o=e(\"../math/Vec3\"),d=(e(\"../math/Mat3\"),e(\"./Equation\"));n.prototype=new d,n.prototype.constructor=n;var i=new o,t=new o;n.prototype.computeB=function(e){var f=this.a,n=this.b,o=this.axisA,d=this.axisB,l=i,u=t,p=this.jacobianElementA,s=this.jacobianElementB;o.cross(d,l),d.cross(o,u),p.rotational.copy(u),s.rotational.copy(l);var y=Math.cos(this.maxAngle)-o.dot(d),c=this.computeGW(),a=this.computeGiMf(),r=-y*f-c*n-e*a;return r}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],23:[function(e,f){function n(e,f,n){n=\"undefined\"!=typeof n?n:1e6,d.call(this,e,f,-n,n),this.axisA=new o,this.axisB=new o,this.targetVelocity=0}f.exports=n;var o=e(\"../math/Vec3\"),d=(e(\"../math/Mat3\"),e(\"./Equation\"));n.prototype=new d,n.prototype.constructor=n,n.prototype.computeB=function(e){var f=(this.a,this.b),n=(this.bi,this.bj,this.axisA),o=this.axisB,d=this.jacobianElementA,i=this.jacobianElementB;d.rotational.copy(n),o.negate(i.rotational);var t=this.computeGW()-this.targetVelocity,l=this.computeGiMf(),u=-t*f-e*l;return u}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],24:[function(e,f){function n(e,f,d){d=o.defaults(d,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=n.idCounter++,this.materials=[e,f],this.friction=d.friction,this.restitution=d.restitution,this.contactEquationStiffness=d.contactEquationStiffness,this.contactEquationRelaxation=d.contactEquationRelaxation,this.frictionEquationStiffness=d.frictionEquationStiffness,this.frictionEquationRelaxation=d.frictionEquationRelaxation}var o=e(\"../utils/Utils\");f.exports=n,n.idCounter=0},{\"../utils/Utils\":53}],25:[function(e,f){function n(e){var f=\"\";e=e||{},\"string\"==typeof e?(f=e,e={}):\"object\"==typeof e&&(f=\"\"),this.name=f,this.id=n.idCounter++,this.friction=\"undefined\"!=typeof e.friction?e.friction:-1,this.restitution=\"undefined\"!=typeof e.restitution?e.restitution:-1}f.exports=n,n.idCounter=0},{}],26:[function(e,f){function n(){this.spatial=new o,this.rotational=new o}f.exports=n;var o=e(\"./Vec3\");n.prototype.multiplyElement=function(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)},n.prototype.multiplyVectors=function(e,f){return e.dot(this.spatial)+f.dot(this.rotational)}},{\"./Vec3\":30}],27:[function(e,f){function n(e){this.elements=e?e:[0,0,0,0,0,0,0,0,0]}f.exports=n;var o=e(\"./Vec3\");n.prototype.identity=function(){var e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1},n.prototype.setZero=function(){var e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0},n.prototype.setTrace=function(e){var f=this.elements;f[0]=e.x,f[4]=e.y,f[8]=e.z},n.prototype.getTrace=function(e){var e=e||new o,f=this.elements;e.x=f[0],e.y=f[4],e.z=f[8]},n.prototype.vmult=function(e,f){f=f||new o;var n=this.elements,d=e.x,i=e.y,t=e.z;return f.x=n[0]*d+n[1]*i+n[2]*t,f.y=n[3]*d+n[4]*i+n[5]*t,f.z=n[6]*d+n[7]*i+n[8]*t,f},n.prototype.smult=function(e){for(var f=0;f<this.elements.length;f++)this.elements[f]*=e},n.prototype.mmult=function(e,f){for(var o=f||new n,d=0;3>d;d++)for(var i=0;3>i;i++){for(var t=0,l=0;3>l;l++)t+=e.elements[d+3*l]*this.elements[l+3*i];o.elements[d+3*i]=t}return o},n.prototype.scale=function(e,f){f=f||new n;for(var o=this.elements,d=f.elements,i=0;3!==i;i++)d[3*i+0]=e.x*o[3*i+0],d[3*i+1]=e.y*o[3*i+1],d[3*i+2]=e.z*o[3*i+2];return f},n.prototype.solve=function(e,f){f=f||new o;for(var n=3,d=4,i=[],t=0;n*d>t;t++)i.push(0);var t,l;for(t=0;3>t;t++)for(l=0;3>l;l++)i[t+d*l]=this.elements[t+3*l];i[3]=e.x,i[7]=e.y,i[11]=e.z;var u,p,s=3,y=s,c=4;do{if(t=y-s,0===i[t+d*t])for(l=t+1;y>l;l++)if(0!==i[t+d*l]){u=c;do p=c-u,i[p+d*t]+=i[p+d*l];while(--u);break}if(0!==i[t+d*t])for(l=t+1;y>l;l++){var a=i[t+d*l]/i[t+d*t];u=c;do p=c-u,i[p+d*l]=t>=p?0:i[p+d*l]-i[p+d*t]*a;while(--u)}}while(--s);if(f.z=i[2*d+3]/i[2*d+2],f.y=(i[1*d+3]-i[1*d+2]*f.z)/i[1*d+1],f.x=(i[0*d+3]-i[0*d+2]*f.z-i[0*d+1]*f.y)/i[0*d+0],isNaN(f.x)||isNaN(f.y)||isNaN(f.z)||1/0===f.x||1/0===f.y||1/0===f.z)throw\"Could not solve equation! Got x=[\"+f.toString()+\"], b=[\"+e.toString()+\"], A=[\"+this.toString()+\"]\";return f},n.prototype.e=function(e,f,n){return void 0===n?this.elements[f+3*e]:void(this.elements[f+3*e]=n)},n.prototype.copy=function(e){for(var f=0;f<e.elements.length;f++)this.elements[f]=e.elements[f];return this},n.prototype.toString=function(){for(var e=\"\",f=\",\",n=0;9>n;n++)e+=this.elements[n]+f;return e},n.prototype.reverse=function(e){e=e||new n;for(var f=3,o=6,d=[],i=0;f*o>i;i++)d.push(0);var i,t;for(i=0;3>i;i++)for(t=0;3>t;t++)d[i+o*t]=this.elements[i+3*t];d[3]=1,d[9]=0,d[15]=0,d[4]=0,d[10]=1,d[16]=0,d[5]=0,d[11]=0,d[17]=1;var l,u,p=3,s=p,y=o;do{if(i=s-p,0===d[i+o*i])for(t=i+1;s>t;t++)if(0!==d[i+o*t]){l=y;do u=y-l,d[u+o*i]+=d[u+o*t];while(--l);break}if(0!==d[i+o*i])for(t=i+1;s>t;t++){var c=d[i+o*t]/d[i+o*i];l=y;do u=y-l,d[u+o*t]=i>=u?0:d[u+o*t]-d[u+o*i]*c;while(--l)}}while(--p);i=2;do{t=i-1;do{var c=d[i+o*t]/d[i+o*i];l=o;do u=o-l,d[u+o*t]=d[u+o*t]-d[u+o*i]*c;while(--l)}while(t--)}while(--i);i=2;do{var c=1/d[i+o*i];l=o;do u=o-l,d[u+o*i]=d[u+o*i]*c;while(--l)}while(i--);i=2;do{t=2;do{if(u=d[f+t+o*i],isNaN(u)||1/0===u)throw\"Could not reverse! A=[\"+this.toString()+\"]\";e.e(i,t,u)}while(t--)}while(i--);return e},n.prototype.setRotationFromQuaternion=function(e){var f=e.x,n=e.y,o=e.z,d=e.w,i=f+f,t=n+n,l=o+o,u=f*i,p=f*t,s=f*l,y=n*t,c=n*l,a=o*l,r=d*i,w=d*t,b=d*l,m=this.elements;return m[0]=1-(y+a),m[1]=p-b,m[2]=s+w,m[3]=p+b,m[4]=1-(u+a),m[5]=c-r,m[6]=s-w,m[7]=c+r,m[8]=1-(u+y),this},n.prototype.transpose=function(e){e=e||new n;for(var f=e.elements,o=this.elements,d=0;3!==d;d++)for(var i=0;3!==i;i++)f[3*d+i]=o[3*i+d];return e}},{\"./Vec3\":30}],28:[function(e,f){function n(e,f,n,o){this.x=void 0!==e?e:0,this.y=void 0!==f?f:0,this.z=void 0!==n?n:0,this.w=void 0!==o?o:1}f.exports=n;var o=e(\"./Vec3\");n.prototype.set=function(e,f,n,o){this.x=e,this.y=f,this.z=n,this.w=o},n.prototype.toString=function(){return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w},n.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},n.prototype.setFromAxisAngle=function(e,f){var n=Math.sin(.5*f);this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(.5*f)},n.prototype.toAxisAngle=function(e){e=e||new o,this.normalize();var f=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return.001>n?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/n,e.y=this.y/n,e.z=this.z/n),[e,f]};var d=new o,i=new o;n.prototype.setFromVectors=function(e,f){if(e.isAntiparallelTo(f)){var n=d,o=i;e.tangents(n,o),this.setFromAxisAngle(n,Math.PI)}else{var t=e.cross(f);this.x=t.x,this.y=t.y,this.z=t.z,this.w=Math.sqrt(Math.pow(e.norm(),2)*Math.pow(f.norm(),2))+e.dot(f),this.normalize()}};var t=new o,l=new o,u=new o;n.prototype.mult=function(e,f){f=f||new n;var o=this.w,d=t,i=l,p=u;return d.set(this.x,this.y,this.z),i.set(e.x,e.y,e.z),f.w=o*e.w-d.dot(i),d.cross(i,p),f.x=o*i.x+e.w*d.x+p.x,f.y=o*i.y+e.w*d.y+p.y,f.z=o*i.z+e.w*d.z+p.z,f},n.prototype.inverse=function(e){var f=this.x,o=this.y,d=this.z,i=this.w;e=e||new n,this.conjugate(e);var t=1/(f*f+o*o+d*d+i*i);return e.x*=t,e.y*=t,e.z*=t,e.w*=t,e},n.prototype.conjugate=function(e){return e=e||new n,e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e},n.prototype.normalize=function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e)},n.prototype.normalizeFast=function(){var e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e)},n.prototype.vmult=function(e,f){f=f||new o;var n=e.x,d=e.y,i=e.z,t=this.x,l=this.y,u=this.z,p=this.w,s=p*n+l*i-u*d,y=p*d+u*n-t*i,c=p*i+t*d-l*n,a=-t*n-l*d-u*i;return f.x=s*p+a*-t+y*-u-c*-l,f.y=y*p+a*-l+c*-t-s*-u,f.z=c*p+a*-u+s*-l-y*-t,f},n.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},n.prototype.toEuler=function(e,f){f=f||\"YZX\";var n,o,d,i=this.x,t=this.y,l=this.z,u=this.w;switch(f){case\"YZX\":var p=i*t+l*u;if(p>.499&&(n=2*Math.atan2(i,u),o=Math.PI/2,d=0),-.499>p&&(n=-2*Math.atan2(i,u),o=-Math.PI/2,d=0),isNaN(n)){var s=i*i,y=t*t,c=l*l;n=Math.atan2(2*t*u-2*i*l,1-2*y-2*c),o=Math.asin(2*p),d=Math.atan2(2*i*u-2*t*l,1-2*s-2*c)}break;default:throw new Error(\"Euler order \"+f+\" not supported yet.\")}e.y=n,e.z=o,e.x=d},n.prototype.setFromEuler=function(e,f,n,o){o=o||\"XYZ\";var d=Math.cos(e/2),i=Math.cos(f/2),t=Math.cos(n/2),l=Math.sin(e/2),u=Math.sin(f/2),p=Math.sin(n/2);return\"XYZ\"===o?(this.x=l*i*t+d*u*p,this.y=d*u*t-l*i*p,this.z=d*i*p+l*u*t,this.w=d*i*t-l*u*p):\"YXZ\"===o?(this.x=l*i*t+d*u*p,this.y=d*u*t-l*i*p,this.z=d*i*p-l*u*t,this.w=d*i*t+l*u*p):\"ZXY\"===o?(this.x=l*i*t-d*u*p,this.y=d*u*t+l*i*p,this.z=d*i*p+l*u*t,this.w=d*i*t-l*u*p):\"ZYX\"===o?(this.x=l*i*t-d*u*p,this.y=d*u*t+l*i*p,this.z=d*i*p-l*u*t,this.w=d*i*t+l*u*p):\"YZX\"===o?(this.x=l*i*t+d*u*p,this.y=d*u*t+l*i*p,this.z=d*i*p-l*u*t,this.w=d*i*t-l*u*p):\"XZY\"===o&&(this.x=l*i*t-d*u*p,this.y=d*u*t-l*i*p,this.z=d*i*p+l*u*t,this.w=d*i*t+l*u*p),this},n.prototype.clone=function(){return new n(this.x,this.y,this.z,this.w)}},{\"./Vec3\":30}],29:[function(e,f){function n(e){e=e||{},this.position=new o,e.position&&this.position.copy(e.position),this.quaternion=new d,e.quaternion&&this.quaternion.copy(e.quaternion)}var o=e(\"./Vec3\"),d=e(\"./Quaternion\");f.exports=n;var i=new d;n.pointToLocalFrame=function(e,f,n,d){var d=d||new o;return n.vsub(e,d),f.conjugate(i),i.vmult(d,d),d},n.prototype.pointToLocal=function(e,f){return n.pointToLocalFrame(this.position,this.quaternion,e,f)},n.pointToWorldFrame=function(e,f,n,d){var d=d||new o;return f.vmult(n,d),d.vadd(e,d),d},n.prototype.pointToWorld=function(e,f){return n.pointToWorldFrame(this.position,this.quaternion,e,f)},n.prototype.vectorToWorldFrame=function(e,f){var f=f||new o;return this.quaternion.vmult(e,f),f},n.vectorToWorldFrame=function(e,f,n){return e.vmult(f,n),n},n.vectorToLocalFrame=function(e,f,n,d){var d=d||new o;return f.w*=-1,f.vmult(n,d),f.w*=-1,d}},{\"./Quaternion\":28,\"./Vec3\":30}],30:[function(e,f){function n(e,f,n){this.x=e||0,this.y=f||0,this.z=n||0}f.exports=n;var o=e(\"./Mat3\");n.ZERO=new n(0,0,0),n.UNIT_X=new n(1,0,0),n.UNIT_Y=new n(0,1,0),n.UNIT_Z=new n(0,0,1),n.prototype.cross=function(e,f){var o=e.x,d=e.y,i=e.z,t=this.x,l=this.y,u=this.z;return f=f||new n,f.x=l*i-u*d,f.y=u*o-t*i,f.z=t*d-l*o,f},n.prototype.set=function(e,f,n){return this.x=e,this.y=f,this.z=n,this},n.prototype.setZero=function(){this.x=this.y=this.z=0},n.prototype.vadd=function(e,f){return f?(f.x=e.x+this.x,f.y=e.y+this.y,f.z=e.z+this.z,void 0):new n(this.x+e.x,this.y+e.y,this.z+e.z)},n.prototype.vsub=function(e,f){return f?(f.x=this.x-e.x,f.y=this.y-e.y,f.z=this.z-e.z,void 0):new n(this.x-e.x,this.y-e.y,this.z-e.z)},n.prototype.crossmat=function(){return new o([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},n.prototype.normalize=function(){var e=this.x,f=this.y,n=this.z,o=Math.sqrt(e*e+f*f+n*n);if(o>0){var d=1/o;this.x*=d,this.y*=d,this.z*=d}else this.x=0,this.y=0,this.z=0;return o},n.prototype.unit=function(e){e=e||new n;var f=this.x,o=this.y,d=this.z,i=Math.sqrt(f*f+o*o+d*d);return i>0?(i=1/i,e.x=f*i,e.y=o*i,e.z=d*i):(e.x=1,e.y=0,e.z=0),e},n.prototype.norm=function(){var e=this.x,f=this.y,n=this.z;return Math.sqrt(e*e+f*f+n*n)},n.prototype.length=n.prototype.norm,n.prototype.norm2=function(){return this.dot(this)},n.prototype.lengthSquared=n.prototype.norm2,n.prototype.distanceTo=function(e){var f=this.x,n=this.y,o=this.z,d=e.x,i=e.y,t=e.z;return Math.sqrt((d-f)*(d-f)+(i-n)*(i-n)+(t-o)*(t-o))},n.prototype.distanceSquared=function(e){var f=this.x,n=this.y,o=this.z,d=e.x,i=e.y,t=e.z;return(d-f)*(d-f)+(i-n)*(i-n)+(t-o)*(t-o)},n.prototype.mult=function(e,f){f=f||new n;var o=this.x,d=this.y,i=this.z;return f.x=e*o,f.y=e*d,f.z=e*i,f},n.prototype.scale=n.prototype.mult,n.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},n.prototype.isZero=function(){return 0===this.x&&0===this.y&&0===this.z},n.prototype.negate=function(e){return e=e||new n,e.x=-this.x,e.y=-this.y,e.z=-this.z,e};var d=new n,i=new n;n.prototype.tangents=function(e,f){var n=this.norm();if(n>0){var o=d,t=1/n;o.set(this.x*t,this.y*t,this.z*t);var l=i;Math.abs(o.x)<.9?(l.set(1,0,0),o.cross(l,e)):(l.set(0,1,0),o.cross(l,e)),o.cross(e,f)}else e.set(1,0,0),f.set(0,1,0)},n.prototype.toString=function(){return this.x+\",\"+this.y+\",\"+this.z},n.prototype.toArray=function(){return[this.x,this.y,this.z]},n.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},n.prototype.lerp=function(e,f,n){var o=this.x,d=this.y,i=this.z;n.x=o+(e.x-o)*f,n.y=d+(e.y-d)*f,n.z=i+(e.z-i)*f},n.prototype.almostEquals=function(e,f){return void 0===f&&(f=1e-6),Math.abs(this.x-e.x)>f||Math.abs(this.y-e.y)>f||Math.abs(this.z-e.z)>f?!1:!0},n.prototype.almostZero=function(e){return void 0===e&&(e=1e-6),Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e?!1:!0};var t=new n;n.prototype.isAntiparallelTo=function(e,f){return this.negate(t),t.almostEquals(e,f)},n.prototype.clone=function(){return new n(this.x,this.y,this.z)}},{\"./Mat3\":27}],31:[function(e,f){function n(e){e=e||{},o.apply(this),this.id=n.idCounter++,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new d,this.collisionFilterGroup=\"number\"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask=\"number\"==typeof e.collisionFilterMask?e.collisionFilterMask:1,this.collisionResponse=!0,this.position=new d,e.position&&this.position.copy(e.position),this.previousPosition=new d,this.initPosition=new d,this.velocity=new d,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new d,this.force=new d;var f=\"number\"==typeof e.mass?e.mass:0;this.mass=f,this.invMass=f>0?1/f:0,this.material=e.material||null,this.linearDamping=\"number\"==typeof e.linearDamping?e.linearDamping:.01,this.type=0>=f?n.STATIC:n.DYNAMIC,typeof e.type==typeof n.STATIC&&(this.type=e.type),this.allowSleep=\"undefined\"!=typeof e.allowSleep?e.allowSleep:!0,this.sleepState=0,this.sleepSpeedLimit=\"undefined\"!=typeof e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=\"undefined\"!=typeof e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new d,this.quaternion=new t,e.quaternion&&this.quaternion.copy(e.quaternion),this.initQuaternion=new t,this.angularVelocity=new d,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new d,this.interpolatedPosition=new d,this.interpolatedQuaternion=new t,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new d,this.invInertia=new d,this.invInertiaWorld=new i,this.invMassSolve=0,this.invInertiaSolve=new d,this.invInertiaWorldSolve=new i,this.fixedRotation=\"undefined\"!=typeof e.fixedRotation?e.fixedRotation:!1,this.angularDamping=\"undefined\"!=typeof e.angularDamping?e.angularDamping:.01,this.aabb=new l,this.aabbNeedsUpdate=!0,this.wlambda=new d,e.shape&&this.addShape(e.shape),this.updateMassProperties()}f.exports=n;var o=e(\"../utils/EventTarget\"),d=(e(\"../shapes/Shape\"),e(\"../math/Vec3\")),i=e(\"../math/Mat3\"),t=e(\"../math/Quaternion\"),l=(e(\"../material/Material\"),e(\"../collision/AABB\")),u=e(\"../shapes/Box\");n.prototype=new o,n.prototype.constructor=n,n.DYNAMIC=1,n.STATIC=2,n.KINEMATIC=4,n.AWAKE=0,n.SLEEPY=1,n.SLEEPING=2,n.idCounter=0,n.prototype.wakeUp=function(){var e=this.sleepState;this.sleepState=0,e===n.SLEEPING&&this.dispatchEvent({type:\"wakeup\"})},n.prototype.sleep=function(){this.sleepState=n.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0)},n.sleepyEvent={type:\"sleepy\"},n.sleepEvent={type:\"sleep\"},n.prototype.sleepTick=function(e){if(this.allowSleep){var f=this.sleepState,o=this.velocity.norm2()+this.angularVelocity.norm2(),d=Math.pow(this.sleepSpeedLimit,2);f===n.AWAKE&&d>o?(this.sleepState=n.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(n.sleepyEvent)):f===n.SLEEPY&&o>d?this.wakeUp():f===n.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(n.sleepEvent))}},n.prototype.updateSolveMassProperties=function(){this.sleepState===n.SLEEPING||this.type===n.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},n.prototype.pointToLocalFrame=function(e,f){var f=f||new d;return e.vsub(this.position,f),this.quaternion.conjugate().vmult(f,f),f},n.prototype.vectorToLocalFrame=function(e,f){var f=f||new d;return this.quaternion.conjugate().vmult(e,f),f},n.prototype.pointToWorldFrame=function(e,f){var f=f||new d;return this.quaternion.vmult(e,f),f.vadd(this.position,f),f},n.prototype.vectorToWorldFrame=function(e,f){var f=f||new d;return this.quaternion.vmult(e,f),f};var p=new d,s=new t;n.prototype.addShape=function(e,f,n){var o=new d,i=new t;return f&&o.copy(f),n&&i.copy(n),this.shapes.push(e),this.shapeOffsets.push(o),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,this},n.prototype.updateBoundingRadius=function(){for(var e=this.shapes,f=this.shapeOffsets,n=e.length,o=0,d=0;d!==n;d++){var i=e[d];i.updateBoundingSphereRadius();var t=f[d].norm(),l=i.boundingSphereRadius;t+l>o&&(o=t+l)}this.boundingRadius=o};var y=new l;n.prototype.computeAABB=function(){for(var e=this.shapes,f=this.shapeOffsets,n=this.shapeOrientations,o=e.length,d=p,i=s,t=this.quaternion,l=this.aabb,u=y,c=0;c!==o;c++){var a=e[c];n[c].mult(t,i),i.vmult(f[c],d),d.vadd(this.position,d),a.calculateWorldAABB(d,i,u.lowerBound,u.upperBound),0===c?l.copy(u):l.extend(u)}this.aabbNeedsUpdate=!1};{var c=new i,a=new i;new i}n.prototype.updateInertiaWorld=function(e){var f=this.invInertia;if(f.x!==f.y||f.y!==f.z||e){var n=c,o=a;n.setRotationFromQuaternion(this.quaternion),n.transpose(o),n.scale(f,n),n.mmult(o,this.invInertiaWorld)}else;};var r=new d,w=new d;n.prototype.applyForce=function(e,f){if(this.type===n.DYNAMIC){var o=r;f.vsub(this.position,o);var d=w;o.cross(e,d),this.force.vadd(e,this.force),this.torque.vadd(d,this.torque)}};var b=new d,m=new d;n.prototype.applyLocalForce=function(e,f){if(this.type===n.DYNAMIC){var o=b,d=m;this.vectorToWorldFrame(e,o),this.pointToWorldFrame(f,d),this.applyForce(o,d)}};var N=new d,g=new d,x=new d;n.prototype.applyImpulse=function(e,f){if(this.type===n.DYNAMIC){var o=N;f.vsub(this.position,o);var d=g;d.copy(e),d.mult(this.invMass,d),this.velocity.vadd(d,this.velocity);var i=x;o.cross(e,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}};var j=new d,v=new d;n.prototype.applyLocalImpulse=function(e,f){if(this.type===n.DYNAMIC){var o=j,d=v;this.vectorToWorldFrame(e,o),this.pointToWorldFrame(f,d),this.applyImpulse(o,d)}};var A=new d;n.prototype.updateMassProperties=function(){var e=A;this.invMass=this.mass>0?1/this.mass:0;var f=this.inertia,n=this.fixedRotation;this.computeAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),u.calculateInertia(e,this.mass,f),this.invInertia.set(f.x>0&&!n?1/f.x:0,f.y>0&&!n?1/f.y:0,f.z>0&&!n?1/f.z:0),this.updateInertiaWorld(!0)},n.prototype.getVelocityAtWorldPoint=function(e,f){var n=new d;return e.vsub(this.position,n),this.angularVelocity.cross(n,f),this.velocity.vadd(f,f),f}},{\"../collision/AABB\":3,\"../material/Material\":25,\"../math/Mat3\":27,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Shape\":43,\"../utils/EventTarget\":49}],32:[function(e,f){function n(e){this.chassisBody=e.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=\"undefined\"!=typeof e.indexRightAxis?e.indexRightAxis:1,this.indexForwardAxis=\"undefined\"!=typeof e.indexForwardAxis?e.indexForwardAxis:0,this.indexUpAxis=\"undefined\"!=typeof e.indexUpAxis?e.indexUpAxis:2}function o(e,f,n,o,i){var t=0,l=n,u=x,p=j,s=v;e.getVelocityAtWorldPoint(l,u),f.getVelocityAtWorldPoint(l,p),u.vsub(p,s);var y=o.dot(s),c=d(e,n,o),a=d(f,n,o),r=1,w=r/(c+a);return t=-y*w,t>i&&(t=i),-i>t&&(t=-i),t}function d(e,f,n){var o=A,d=C,i=O,t=h;return f.vsub(e.position,o),o.cross(n,d),e.invInertiaWorld.vmult(d,t),t.cross(o,i),e.invMass+n.dot(i)}function i(e,f,n,o,d,i){var t=d.norm2();if(t>1.1)return 0;var l=k,u=q,p=z;e.getVelocityAtWorldPoint(f,l),n.getVelocityAtWorldPoint(o,u),l.vsub(u,p);var s=d.dot(p),y=.2,c=1/(e.invMass+n.invMass),i=-y*s*c;return i}var t=(e(\"./Body\"),e(\"../math/Vec3\")),l=e(\"../math/Quaternion\"),u=(e(\"../collision/RaycastResult\"),e(\"../collision/Ray\")),p=e(\"../objects/WheelInfo\");f.exports=n;{var s=(new t,new t,new t,new t),y=new t,c=new t;new u}n.prototype.addWheel=function(e){e=e||{};var f=new p(e),n=this.wheelInfos.length;return this.wheelInfos.push(f),n},n.prototype.setSteeringValue=function(e,f){var n=this.wheelInfos[f];n.steering=e};new t;n.prototype.applyEngineForce=function(e,f){this.wheelInfos[f].engineForce=e},n.prototype.setBrake=function(e,f){this.wheelInfos[f].brake=e},n.prototype.addToWorld=function(e){this.constraints;e.add(this.chassisBody);var f=this;this.preStepCallback=function(){f.updateVehicle(e.dt)},e.addEventListener(\"preStep\",this.preStepCallback),this.world=e},n.prototype.getVehicleAxisWorld=function(e,f){f.set(0===e?1:0,1===e?1:0,2===e?1:0),this.chassisBody.vectorToWorldFrame(f,f)},n.prototype.updateVehicle=function(e){for(var f=this.wheelInfos,n=f.length,o=this.chassisBody,d=0;n>d;d++)this.updateWheelTransform(d);this.currentVehicleSpeedKmHour=3.6*o.velocity.norm();var i=new t;this.getVehicleAxisWorld(this.indexForwardAxis,i),i.dot(o.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(var d=0;n>d;d++)this.castRay(f[d]);this.updateSuspension(e);for(var l=new t,u=new t,d=0;n>d;d++){var p=f[d],s=p.suspensionForce;s>p.maxSuspensionForce&&(s=p.maxSuspensionForce),p.raycastResult.hitNormalWorld.scale(s*e,l),p.raycastResult.hitPointWorld.vsub(o.position,u),o.applyImpulse(l,p.raycastResult.hitPointWorld)}this.updateFriction(e);var y=new t,c=new t,a=new t;for(d=0;n>d;d++){var p=f[d];o.getVelocityAtWorldPoint(p.chassisConnectionPointWorld,a);var r=1;switch(this.indexUpAxis){case 1:r=-1}if(p.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,c);var w=c.dot(p.raycastResult.hitNormalWorld);p.raycastResult.hitNormalWorld.scale(w,y),c.vsub(y,c);var b=c.dot(a);p.deltaRotation=r*b*e/p.radius}!p.sliding&&p.isInContact||0===p.engineForce||!p.useCustomSlidingRotationalSpeed||(p.deltaRotation=(p.engineForce>0?1:-1)*p.customSlidingRotationalSpeed*e),Math.abs(p.brake)>Math.abs(p.engineForce)&&(p.deltaRotation=0),p.rotation+=p.deltaRotation,p.deltaRotation*=.99}},n.prototype.updateSuspension=function(){for(var e=this.chassisBody,f=e.mass,n=this.wheelInfos,o=n.length,d=0;o>d;d++){var i=n[d];if(i.isInContact){var t,l=i.suspensionRestLength,u=i.suspensionLength,p=l-u;t=i.suspensionStiffness*p*i.clippedInvContactDotSuspension;var s,y=i.suspensionRelativeVelocity;s=0>y?i.dampingCompression:i.dampingRelaxation,t-=s*y,i.suspensionForce=t*f,i.suspensionForce<0&&(i.suspensionForce=0)}else i.suspensionForce=0}},n.prototype.removeFromWorld=function(e){this.constraints;e.remove(this.chassisBody),e.removeEventListener(\"preStep\",this.preStepCallback),this.world=null};var a=new t,r=new t;n.prototype.castRay=function(e){var f=a,n=r;this.updateWheelTransformWorld(e);var o=this.chassisBody,d=-1,i=e.suspensionRestLength+e.radius;e.directionWorld.scale(i,f);var l=e.chassisConnectionPointWorld;l.vadd(f,n);var u=e.raycastResult;u.reset();var p=o.collisionResponse;o.collisionResponse=!1,this.world.rayTest(l,n,u),o.collisionResponse=p;var s=u.body;if(e.raycastResult.groundObject=0,s){d=u.distance,e.raycastResult.hitNormalWorld=u.hitNormalWorld,e.isInContact=!0;var y=u.distance;e.suspensionLength=y-e.radius;var c=e.suspensionRestLength-e.maxSuspensionTravel,w=e.suspensionRestLength+e.maxSuspensionTravel;e.suspensionLength<c&&(e.suspensionLength=c),e.suspensionLength>w&&(e.suspensionLength=w,e.raycastResult.reset());var b=e.raycastResult.hitNormalWorld.dot(e.directionWorld),m=new t;o.getVelocityAtWorldPoint(e.raycastResult.hitPointWorld,m);var N=e.raycastResult.hitNormalWorld.dot(m);if(b>=-.1)e.suspensionRelativeVelocity=0,e.clippedInvContactDotSuspension=10;else{var g=-1/b;e.suspensionRelativeVelocity=N*g,e.clippedInvContactDotSuspension=g}}else e.suspensionLength=e.suspensionRestLength+0*e.maxSuspensionTravel,e.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.raycastResult.hitNormalWorld),e.clippedInvContactDotSuspension=1;return d},n.prototype.updateWheelTransformWorld=function(e){e.isInContact=!1;var f=this.chassisBody;f.pointToWorldFrame(e.chassisConnectionPointLocal,e.chassisConnectionPointWorld),f.vectorToWorldFrame(e.directionLocal,e.directionWorld),f.vectorToWorldFrame(e.axleLocal,e.axleWorld)},n.prototype.updateWheelTransform=function(e){var f=s,n=y,o=c,d=this.wheelInfos[e];this.updateWheelTransformWorld(d),d.directionLocal.scale(-1,f),n.copy(d.axleLocal),f.cross(n,o),o.normalize(),n.normalize();var i=d.steering,t=new l;t.setFromAxisAngle(f,i);var u=new l;u.setFromAxisAngle(n,d.rotation);var p=d.worldTransform.quaternion;this.chassisBody.quaternion.mult(t,p),p.mult(u,p),p.normalize();var a=d.worldTransform.position;a.copy(d.directionWorld),a.scale(d.suspensionLength,a),a.vadd(d.chassisConnectionPointWorld,a)};var w=[new t(1,0,0),new t(0,1,0),new t(0,0,1)];n.prototype.getWheelTransformWorld=function(e){return this.wheelInfos[e].worldTransform};var b=new t,m=[],N=[],g=1;n.prototype.updateFriction=function(e){for(var f=b,n=this.wheelInfos,d=n.length,l=this.chassisBody,u=N,p=m,s=0,y=0;d>y;y++){var c=n[y],a=c.raycastResult.body;a&&s++,c.sideImpulse=0,c.forwardImpulse=0,u[y]||(u[y]=new t),p[y]||(p[y]=new t)}for(var y=0;d>y;y++){var c=n[y],a=c.raycastResult.body;if(a){var r=p[y],x=this.getWheelTransformWorld(y);x.vectorToWorldFrame(w[this.indexRightAxis],r);var j=c.raycastResult.hitNormalWorld,v=r.dot(j);j.scale(v,f),r.vsub(f,r),r.normalize(),j.cross(r,u[y]),u[y].normalize(),c.sideImpulse=i(l,c.raycastResult.hitPointWorld,a,c.raycastResult.hitPointWorld,r),c.sideImpulse*=g}}var A=1,C=.5;this.sliding=!1;for(var y=0;d>y;y++){var c=n[y],a=c.raycastResult.body,O=0;if(c.slipInfo=1,a){var h=0,k=c.brake?c.brake:h;O=o(l,a,c.raycastResult.hitPointWorld,u[y],k),O+=c.engineForce*e;var q=k/O;c.slipInfo*=q}if(c.forwardImpulse=0,c.skidInfo=1,a){c.skidInfo=1;var z=c.suspensionForce*e*c.frictionSlip,B=z,D=z*B;c.forwardImpulse=O;var E=c.forwardImpulse*C,F=c.sideImpulse*A,G=E*E+F*F;if(c.sliding=!1,G>D){this.sliding=!0,c.sliding=!0;var q=z/Math.sqrt(G);c.skidInfo*=q}}}if(this.sliding)for(var y=0;d>y;y++){var c=n[y];0!==c.sideImpulse&&c.skidInfo<1&&(c.forwardImpulse*=c.skidInfo,c.sideImpulse*=c.skidInfo)}for(var y=0;d>y;y++){var c=n[y],H=new t;if(H.copy(c.raycastResult.hitPointWorld),0!==c.forwardImpulse){var I=new t;u[y].scale(c.forwardImpulse,I),l.applyImpulse(I,H)}if(0!==c.sideImpulse){var a=c.raycastResult.body,J=new t;J.copy(c.raycastResult.hitPointWorld);var K=new t;p[y].scale(c.sideImpulse,K),l.pointToLocalFrame(H,H),H[\"xyz\"[this.indexUpAxis]]*=c.rollInfluence,l.pointToWorldFrame(H,H),l.applyImpulse(K,H),K.scale(-1,K),a.applyImpulse(K,J)}}};var x=new t,j=new t,v=new t,A=new t,C=new t,O=new t,h=new t,k=new t,q=new t,z=new t},{\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/WheelInfo\":36,\"./Body\":31}],33:[function(e,f){function n(e){if(this.wheelBodies=[],this.coordinateSystem=\"undefined\"==typeof e.coordinateSystem?new t(1,2,3):e.coordinateSystem.clone(),this.chassisBody=e.chassisBody,!this.chassisBody){var f=new i(new t(5,2,.5));this.chassisBody=new o(1,f)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}var o=e(\"./Body\"),d=e(\"../shapes/Sphere\"),i=e(\"../shapes/Box\"),t=e(\"../math/Vec3\"),l=e(\"../constraints/HingeConstraint\");f.exports=n,n.prototype.addWheel=function(e){e=e||{};var f=e.body;f||(f=new o(1,new d(1.2))),this.wheelBodies.push(f),this.wheelForces.push(0);var n=(new t,\"undefined\"!=typeof e.position?e.position.clone():new t),i=new t;this.chassisBody.pointToWorldFrame(n,i),f.position.set(i.x,i.y,i.z);var u=\"undefined\"!=typeof e.axis?e.axis.clone():new t(0,1,0);this.wheelAxes.push(u);var p=new l(this.chassisBody,f,{pivotA:n,axisA:u,pivotB:t.ZERO,axisB:u,collideConnected:!1});return this.constraints.push(p),this.wheelBodies.length-1},n.prototype.setSteeringValue=function(e,f){var n=this.wheelAxes[f],o=Math.cos(e),d=Math.sin(e),i=n.x,t=n.y;this.constraints[f].axisA.set(o*i-d*t,d*i+o*t,0)},n.prototype.setMotorSpeed=function(e,f){var n=this.constraints[f];n.enableMotor(),n.motorTargetVelocity=e},n.prototype.disableMotor=function(e){var f=this.constraints[e];\nf.disableMotor()};var u=new t;n.prototype.setWheelForce=function(e,f){this.wheelForces[f]=e},n.prototype.applyWheelForce=function(e,f){var n=this.wheelAxes[f],o=this.wheelBodies[f],d=o.torque;n.scale(e,u),o.vectorToWorldFrame(u,u),d.vadd(u,d)},n.prototype.addToWorld=function(e){for(var f=this.constraints,n=this.wheelBodies.concat([this.chassisBody]),o=0;o<n.length;o++)e.add(n[o]);for(var o=0;o<f.length;o++)e.addConstraint(f[o]);e.addEventListener(\"preStep\",this._update.bind(this))},n.prototype._update=function(){for(var e=this.wheelForces,f=0;f<e.length;f++)this.applyWheelForce(e[f],f)},n.prototype.removeFromWorld=function(e){for(var f=this.constraints,n=this.wheelBodies.concat([this.chassisBody]),o=0;o<n.length;o++)e.remove(n[o]);for(var o=0;o<f.length;o++)e.removeConstraint(f[o])};var p=new t;n.prototype.getWheelSpeed=function(e){var f=this.wheelAxes[e],n=this.wheelBodies[e],o=n.angularVelocity;return this.chassisBody.vectorToWorldFrame(f,p),o.dot(p)}},{\"../constraints/HingeConstraint\":15,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Sphere\":44,\"./Body\":31}],34:[function(e,f){function n(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}f.exports=n;{var o=(e(\"../shapes/Shape\"),e(\"../math/Vec3\"));e(\"../math/Quaternion\"),e(\"../shapes/Particle\"),e(\"../objects/Body\"),e(\"../material/Material\")}n.prototype.add=function(e){this.particles.push(e),this.neighbors.length<this.particles.length&&this.neighbors.push([])},n.prototype.remove=function(e){var f=this.particles.indexOf(e);-1!==f&&(this.particles.splice(f,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var d=new o;n.prototype.getNeighbors=function(e,f){for(var n=this.particles.length,o=e.id,i=this.smoothingRadius*this.smoothingRadius,t=d,l=0;l!==n;l++){var u=this.particles[l];u.position.vsub(e.position,t),o!==u.id&&t.norm2()<i&&f.push(u)}};var i=new o,t=new o,l=new o,u=new o,p=new o,s=new o;n.prototype.update=function(){for(var e=this.particles.length,f=i,n=this.speedOfSound,o=this.eps,d=0;d!==e;d++){var y=this.particles[d],c=this.neighbors[d];c.length=0,this.getNeighbors(y,c),c.push(this.particles[d]);for(var a=c.length,r=0,w=0;w!==a;w++){y.position.vsub(c[w].position,f);var b=f.norm(),m=this.w(b);r+=c[w].mass*m}this.densities[d]=r,this.pressures[d]=n*n*(this.densities[d]-this.density)}for(var N=t,g=l,x=u,j=p,v=s,d=0;d!==e;d++){var A=this.particles[d];N.set(0,0,0),g.set(0,0,0);for(var C,O,c=this.neighbors[d],a=c.length,w=0;w!==a;w++){var h=c[w];A.position.vsub(h.position,j);var k=j.norm();C=-h.mass*(this.pressures[d]/(this.densities[d]*this.densities[d]+o)+this.pressures[w]/(this.densities[w]*this.densities[w]+o)),this.gradw(j,x),x.mult(C,x),N.vadd(x,N),h.velocity.vsub(A.velocity,v),v.mult(1/(1e-4+this.densities[d]*this.densities[w])*this.viscosity*h.mass,v),O=this.nablaw(k),v.mult(O,v),g.vadd(v,g)}g.mult(A.mass,g),N.mult(A.mass,N),A.force.vadd(g,A.force),A.force.vadd(N,A.force)}},n.prototype.w=function(e){var f=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(f,9))*Math.pow(f*f-e*e,3)},n.prototype.gradw=function(e,f){var n=e.norm(),o=this.smoothingRadius;e.mult(945/(32*Math.PI*Math.pow(o,9))*Math.pow(o*o-n*n,2),f)},n.prototype.nablaw=function(e){var f=this.smoothingRadius,n=945/(32*Math.PI*Math.pow(f,9))*(f*f-e*e)*(7*e*e-3*f*f);return n}},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Particle\":41,\"../shapes/Shape\":43}],35:[function(e,f){function n(e,f,n){n=n||{},this.restLength=\"number\"==typeof n.restLength?n.restLength:1,this.stiffness=n.stiffness||100,this.damping=n.damping||1,this.bodyA=e,this.bodyB=f,this.localAnchorA=new o,this.localAnchorB=new o,n.localAnchorA&&this.localAnchorA.copy(n.localAnchorA),n.localAnchorB&&this.localAnchorB.copy(n.localAnchorB),n.worldAnchorA&&this.setWorldAnchorA(n.worldAnchorA),n.worldAnchorB&&this.setWorldAnchorB(n.worldAnchorB)}var o=e(\"../math/Vec3\");f.exports=n,n.prototype.setWorldAnchorA=function(e){this.bodyA.pointToLocalFrame(e,this.localAnchorA)},n.prototype.setWorldAnchorB=function(e){this.bodyB.pointToLocalFrame(e,this.localAnchorB)},n.prototype.getWorldAnchorA=function(e){this.bodyA.pointToWorldFrame(this.localAnchorA,e)},n.prototype.getWorldAnchorB=function(e){this.bodyB.pointToWorldFrame(this.localAnchorB,e)};var d=new o,i=new o,t=new o,l=new o,u=new o,p=new o,s=new o,y=new o,c=new o,a=new o,r=new o;n.prototype.applyForce=function(){var e=this.stiffness,f=this.damping,n=this.restLength,o=this.bodyA,w=this.bodyB,b=d,m=i,N=t,g=l,x=r,j=u,v=p,A=s,C=y,O=c,h=a;this.getWorldAnchorA(j),this.getWorldAnchorB(v),j.vsub(o.position,A),v.vsub(w.position,C),v.vsub(j,b);var k=b.norm();m.copy(b),m.normalize(),w.velocity.vsub(o.velocity,N),w.angularVelocity.cross(C,x),N.vadd(x,N),o.angularVelocity.cross(A,x),N.vsub(x,N),m.mult(-e*(k-n)-f*N.dot(m),g),o.force.vsub(g,o.force),w.force.vadd(g,w.force),A.cross(g,O),C.cross(g,h),o.torque.vsub(O,o.torque),w.torque.vadd(h,w.torque)}},{\"../math/Vec3\":30}],36:[function(e,f){function n(e){e=t.defaults(e,{chassisConnectionPointLocal:new o,chassisConnectionPointWorld:new o,directionLocal:new o,directionWorld:new o,axleLocal:new o,axleWorld:new o,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=e.maxSuspensionTravel,this.customSlidingRotationalSpeed=e.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=e.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=e.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=e.chassisConnectionPointWorld.clone(),this.directionLocal=e.directionLocal.clone(),this.directionWorld=e.directionWorld.clone(),this.axleLocal=e.axleLocal.clone(),this.axleWorld=e.axleWorld.clone(),this.suspensionRestLength=e.suspensionRestLength,this.suspensionMaxLength=e.suspensionMaxLength,this.radius=e.radius,this.suspensionStiffness=e.suspensionStiffness,this.dampingCompression=e.dampingCompression,this.dampingRelaxation=e.dampingRelaxation,this.frictionSlip=e.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=e.rollInfluence,this.maxSuspensionForce=e.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=e.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new i,this.worldTransform=new d,this.isInContact=!1}var o=e(\"../math/Vec3\"),d=e(\"../math/Transform\"),i=e(\"../collision/RaycastResult\"),t=e(\"../utils/Utils\");f.exports=n;var l=new o,u=new o,l=new o;n.prototype.updateWheel=function(e){var f=this.raycastResult;if(this.isInContact){var n=f.hitNormalWorld.dot(f.directionWorld);f.hitPointWorld.vsub(e.position,u),e.getVelocityAtWorldPoint(u,l);var o=f.hitNormalWorld.dot(l);if(n>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{var d=-1/n;this.suspensionRelativeVelocity=o*d,this.clippedInvContactDotSuspension=d}}else f.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,f.directionWorld.scale(-1,f.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{\"../collision/RaycastResult\":10,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Utils\":53}],37:[function(e,f){function n(e){o.call(this),this.type=o.types.BOX,this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=e(\"./ConvexPolyhedron\");n.prototype=new o,n.prototype.constructor=n,n.prototype.updateConvexPolyhedronRepresentation=function(){var e=this.halfExtents.x,f=this.halfExtents.y,n=this.halfExtents.z,o=d,t=[new o(-e,-f,-n),new o(e,-f,-n),new o(e,f,-n),new o(-e,f,-n),new o(-e,-f,n),new o(e,-f,n),new o(e,f,n),new o(-e,f,n)],l=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],u=([new o(0,0,1),new o(0,1,0),new o(1,0,0)],new i(t,l));this.convexPolyhedronRepresentation=u,u.material=this.material},n.prototype.calculateLocalInertia=function(e,f){return f=f||new d,n.calculateInertia(this.halfExtents,e,f),f},n.calculateInertia=function(e,f,n){var o=e;n.x=1/12*f*(2*o.y*2*o.y+2*o.z*2*o.z),n.y=1/12*f*(2*o.x*2*o.x+2*o.z*2*o.z),n.z=1/12*f*(2*o.y*2*o.y+2*o.x*2*o.x)},n.prototype.getSideNormals=function(e,f){var n=e,o=this.halfExtents;if(n[0].set(o.x,0,0),n[1].set(0,o.y,0),n[2].set(0,0,o.z),n[3].set(-o.x,0,0),n[4].set(0,-o.y,0),n[5].set(0,0,-o.z),void 0!==f)for(var d=0;d!==n.length;d++)f.vmult(n[d],n[d]);return n},n.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};{var t=new d;new d}n.prototype.forEachWorldCorner=function(e,f,n){for(var o=this.halfExtents,d=[[o.x,o.y,o.z],[-o.x,o.y,o.z],[-o.x,-o.y,o.z],[-o.x,-o.y,-o.z],[o.x,-o.y,-o.z],[o.x,o.y,-o.z],[-o.x,o.y,-o.z],[o.x,-o.y,o.z]],i=0;i<d.length;i++)t.set(d[i][0],d[i][1],d[i][2]),f.vmult(t,t),e.vadd(t,t),n(t.x,t.y,t.z)};var l=[new d,new d,new d,new d,new d,new d,new d,new d];n.prototype.calculateWorldAABB=function(e,f,n,o){var d=this.halfExtents;l[0].set(d.x,d.y,d.z),l[1].set(-d.x,d.y,d.z),l[2].set(-d.x,-d.y,d.z),l[3].set(-d.x,-d.y,-d.z),l[4].set(d.x,-d.y,-d.z),l[5].set(d.x,d.y,-d.z),l[6].set(-d.x,d.y,-d.z),l[7].set(d.x,-d.y,d.z);var i=l[0];f.vmult(i,i),e.vadd(i,i),o.copy(i),n.copy(i);for(var t=1;8>t;t++){var i=l[t];f.vmult(i,i),e.vadd(i,i);var u=i.x,p=i.y,s=i.z;u>o.x&&(o.x=u),p>o.y&&(o.y=p),s>o.z&&(o.z=s),u<n.x&&(n.x=u),p<n.y&&(n.y=p),s<n.z&&(n.z=s)}}},{\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],38:[function(e,f){function n(e,f,n){o.call(this),this.type=o.types.CONVEXPOLYHEDRON,this.vertices=e||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=f||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=n?n.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=(e(\"../math/Quaternion\"),e(\"../math/Transform\"));n.prototype=new o,n.prototype.constructor=n;var t=new d;n.prototype.computeEdges=function(){var e=this.faces,f=this.vertices,n=(f.length,this.uniqueEdges);n.length=0;for(var o=t,d=0;d!==e.length;d++)for(var i=e[d],l=i.length,u=0;u!==l;u++){var p=(u+1)%l;f[i[u]].vsub(f[i[p]],o),o.normalize();for(var s=!1,y=0;y!==n.length;y++)if(n[y].almostEquals(o)||n[y].almostEquals(o)){s=!0;break}s||n.push(o.clone())}},n.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var e=0;e<this.faces.length;e++){for(var f=0;f<this.faces[e].length;f++)if(!this.vertices[this.faces[e][f]])throw new Error(\"Vertex \"+this.faces[e][f]+\" not found!\");var n=this.faceNormals[e]||new d;this.getFaceNormal(e,n),n.negate(n),this.faceNormals[e]=n;var o=this.vertices[this.faces[e][0]];if(n.dot(o)<0){console.error(\".faceNormals[\"+e+\"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");for(var f=0;f<this.faces[e].length;f++)console.warn(\".vertices[\"+this.faces[e][f]+\"] = Vec3(\"+this.vertices[this.faces[e][f]].toString()+\")\")}}};var l=new d,u=new d;n.computeNormal=function(e,f,n,o){f.vsub(e,u),n.vsub(f,l),l.cross(u,o),o.isZero()||o.normalize()},n.prototype.getFaceNormal=function(e,f){var o=this.faces[e],d=this.vertices[o[0]],i=this.vertices[o[1]],t=this.vertices[o[2]];return n.computeNormal(d,i,t,f)};var p=new d;n.prototype.clipAgainstHull=function(e,f,n,o,i,t,l,u,s){for(var y=p,c=-1,a=-Number.MAX_VALUE,r=0;r<n.faces.length;r++){y.copy(n.faceNormals[r]),i.vmult(y,y);var w=y.dot(t);w>a&&(a=w,c=r)}for(var b=[],m=n.faces[c],N=m.length,g=0;N>g;g++){var x=n.vertices[m[g]],j=new d;j.copy(x),i.vmult(j,j),o.vadd(j,j),b.push(j)}c>=0&&this.clipFaceAgainstHull(t,e,f,b,l,u,s)};var s=new d,y=new d,c=new d,a=new d,r=new d,w=new d;n.prototype.findSeparatingAxis=function(e,f,n,o,d,i,t,l){var u=s,p=y,b=c,m=a,N=r,g=w,x=Number.MAX_VALUE,j=this,v=0;if(j.uniqueAxes)for(var A=0;A!==j.uniqueAxes.length;A++){n.vmult(j.uniqueAxes[A],u);var C=j.testSepAxis(u,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(u))}else for(var O=t?t.length:j.faces.length,A=0;O>A;A++){var h=t?t[A]:A;u.copy(j.faceNormals[h]),n.vmult(u,u);var C=j.testSepAxis(u,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(u))}if(e.uniqueAxes)for(var A=0;A!==e.uniqueAxes.length;A++){d.vmult(e.uniqueAxes[A],p),v++;var C=j.testSepAxis(p,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(p))}else for(var k=l?l.length:e.faces.length,A=0;k>A;A++){var h=l?l[A]:A;p.copy(e.faceNormals[h]),d.vmult(p,p),v++;var C=j.testSepAxis(p,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(p))}for(var q=0;q!==j.uniqueEdges.length;q++){n.vmult(j.uniqueEdges[q],m);for(var z=0;z!==e.uniqueEdges.length;z++)if(d.vmult(e.uniqueEdges[z],N),m.cross(N,g),!g.almostZero()){g.normalize();var B=j.testSepAxis(g,e,f,n,o,d);if(B===!1)return!1;x>B&&(x=B,i.copy(g))}}return o.vsub(f,b),b.dot(i)>0&&i.negate(i),!0};var b=[],m=[];n.prototype.testSepAxis=function(e,f,o,d,i,t){var l=this;n.project(l,e,o,d,b),n.project(f,e,i,t,m);var u=b[0],p=b[1],s=m[0],y=m[1];if(y>u||p>s)return!1;var c=u-y,a=s-p,r=a>c?c:a;return r};var N=new d,g=new d;n.prototype.calculateLocalInertia=function(e,f){this.computeLocalAABB(N,g);var n=g.x-N.x,o=g.y-N.y,d=g.z-N.z;f.x=1/12*e*(2*o*2*o+2*d*2*d),f.y=1/12*e*(2*n*2*n+2*d*2*d),f.z=1/12*e*(2*o*2*o+2*n*2*n)},n.prototype.getPlaneConstantOfFace=function(e){var f=this.faces[e],n=this.faceNormals[e],o=this.vertices[f[0]],d=-n.dot(o);return d};var x=new d,j=new d,v=new d,A=new d,C=new d,O=new d,h=new d,k=new d;n.prototype.clipFaceAgainstHull=function(e,f,n,o,d,i,t){for(var l=x,u=j,p=v,s=A,y=C,c=O,a=h,r=k,w=this,b=[],m=o,N=b,g=-1,q=Number.MAX_VALUE,z=0;z<w.faces.length;z++){l.copy(w.faceNormals[z]),n.vmult(l,l);var B=l.dot(e);q>B&&(q=B,g=z)}if(!(0>g)){var D=w.faces[g];D.connectedFaces=[];for(var E=0;E<w.faces.length;E++)for(var F=0;F<w.faces[E].length;F++)-1!==D.indexOf(w.faces[E][F])&&E!==g&&-1===D.connectedFaces.indexOf(E)&&D.connectedFaces.push(E);for(var G=(m.length,D.length),H=0;G>H;H++){var I=w.vertices[D[H]],J=w.vertices[D[(H+1)%G]];I.vsub(J,u),p.copy(u),n.vmult(p,p),f.vadd(p,p),s.copy(this.faceNormals[g]),n.vmult(s,s),f.vadd(s,s),p.cross(s,y),y.negate(y),c.copy(I),n.vmult(c,c),f.vadd(c,c);var K,L=(-c.dot(y),D.connectedFaces[H]);a.copy(this.faceNormals[L]);var M=this.getPlaneConstantOfFace(L);r.copy(a),n.vmult(r,r);var K=M-r.dot(f);for(this.clipFaceAgainstPlane(m,N,r,K);m.length;)m.shift();for(;N.length;)m.push(N.shift())}a.copy(this.faceNormals[g]);var M=this.getPlaneConstantOfFace(g);r.copy(a),n.vmult(r,r);for(var K=M-r.dot(f),E=0;E<m.length;E++){var P=r.dot(m[E])+K;if(d>=P&&(console.log(\"clamped: depth=\"+P+\" to minDist=\"+(d+\"\")),P=d),i>=P){var Q=m[E];if(0>=P){var R={point:Q,normal:r,depth:P};t.push(R)}}}}},n.prototype.clipFaceAgainstPlane=function(e,f,n,o){var i,t,l=e.length;if(2>l)return f;var u=e[e.length-1],p=e[0];i=n.dot(u)+o;for(var s=0;l>s;s++){if(p=e[s],t=n.dot(p)+o,0>i)if(0>t){var y=new d;y.copy(p),f.push(y)}else{var y=new d;u.lerp(p,i/(i-t),y),f.push(y)}else if(0>t){var y=new d;u.lerp(p,i/(i-t),y),f.push(y),f.push(p)}u=p,i=t}return f},n.prototype.computeWorldVertices=function(e,f){for(var n=this.vertices.length;this.worldVertices.length<n;)this.worldVertices.push(new d);for(var o=this.vertices,i=this.worldVertices,t=0;t!==n;t++)f.vmult(o[t],i[t]),e.vadd(i[t],i[t]);this.worldVerticesNeedsUpdate=!1};new d;n.prototype.computeLocalAABB=function(e,f){var n=this.vertices.length,o=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),f.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var d=0;n>d;d++){var i=o[d];i.x<e.x?e.x=i.x:i.x>f.x&&(f.x=i.x),i.y<e.y?e.y=i.y:i.y>f.y&&(f.y=i.y),i.z<e.z?e.z=i.z:i.z>f.z&&(f.z=i.z)}},n.prototype.computeWorldFaceNormals=function(e){for(var f=this.faceNormals.length;this.worldFaceNormals.length<f;)this.worldFaceNormals.push(new d);for(var n=this.faceNormals,o=this.worldFaceNormals,i=0;i!==f;i++)e.vmult(n[i],o[i]);this.worldFaceNormalsNeedsUpdate=!1},n.prototype.updateBoundingSphereRadius=function(){for(var e=0,f=this.vertices,n=0,o=f.length;n!==o;n++){var d=f[n].norm2();d>e&&(e=d)}this.boundingSphereRadius=Math.sqrt(e)};var q=new d;n.prototype.calculateWorldAABB=function(e,f,n,o){for(var d,i,t,l,u,p,s=this.vertices.length,y=this.vertices,c=0;s>c;c++){q.copy(y[c]),f.vmult(q,q),e.vadd(q,q);var a=q;a.x<d||void 0===d?d=a.x:(a.x>l||void 0===l)&&(l=a.x),a.y<i||void 0===i?i=a.y:(a.y>u||void 0===u)&&(u=a.y),a.z<t||void 0===t?t=a.z:(a.z>p||void 0===p)&&(p=a.z)}n.set(d,i,t),o.set(l,u,p)},n.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},n.prototype.getAveragePointLocal=function(e){e=e||new d;for(var f=this.vertices.length,n=this.vertices,o=0;f>o;o++)e.vadd(n[o],e);return e.mult(1/f,e),e},n.prototype.transformAllPoints=function(e,f){var n=this.vertices.length,o=this.vertices;if(f){for(var d=0;n>d;d++){var i=o[d];f.vmult(i,i)}for(var d=0;d<this.faceNormals.length;d++){var i=this.faceNormals[d];f.vmult(i,i)}}if(e)for(var d=0;n>d;d++){var i=o[d];i.vadd(e,i)}};var z=new d,B=new d,D=new d;n.prototype.pointIsInside=function(e){var f=this.vertices.length,n=this.vertices,o=this.faces,d=this.faceNormals,i=null,t=this.faces.length,l=z;this.getAveragePointLocal(l);for(var u=0;t>u;u++){var f=(this.faces[u].length,d[u]),p=n[o[u][0]],s=B;e.vsub(p,s);var y=f.dot(s),c=D;l.vsub(p,c);var a=f.dot(c);if(0>y&&a>0||y>0&&0>a)return!1}return i?1:-1};var E=(new d,new d),F=new d;n.project=function(e,f,n,o,d){var t=e.vertices.length,l=E,u=0,p=0,s=F,y=e.vertices;s.setZero(),i.vectorToLocalFrame(n,o,f,l),i.pointToLocalFrame(n,o,s,s);var c=s.dot(l);p=u=y[0].dot(l);for(var a=1;t>a;a++){var r=y[a].dot(l);r>u&&(u=r),p>r&&(p=r)}if(p-=c,u-=c,p>u){var w=p;p=u,u=w}d[0]=u,d[1]=p}},{\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"./Shape\":43}],39:[function(e,f){function n(e,f,n,t){var l=t,u=[],p=[],s=[],y=[],c=[],a=Math.cos,r=Math.sin;u.push(new d(f*a(0),f*r(0),.5*-n)),y.push(0),u.push(new d(e*a(0),e*r(0),.5*n)),c.push(1);for(var w=0;l>w;w++){var b=2*Math.PI/l*(w+1),m=2*Math.PI/l*(w+.5);l-1>w?(u.push(new d(f*a(b),f*r(b),.5*-n)),y.push(2*w+2),u.push(new d(e*a(b),e*r(b),.5*n)),c.push(2*w+3),s.push([2*w+2,2*w+3,2*w+1,2*w])):s.push([0,1,2*w+1,2*w]),(l%2===1||l/2>w)&&p.push(new d(a(m),r(m),0))}s.push(c),p.push(new d(0,0,1));for(var N=[],w=0;w<y.length;w++)N.push(y[y.length-w-1]);s.push(N),this.type=o.types.CONVEXPOLYHEDRON,i.call(this,u,s,p)}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=(e(\"../math/Quaternion\"),e(\"./ConvexPolyhedron\"));n.prototype=new i},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],40:[function(e,f){function n(e,f){f=t.defaults(f,{maxValue:null,minValue:null,elementSize:1}),this.data=e,this.maxValue=f.maxValue,this.minValue=f.minValue,this.elementSize=f.elementSize,null===f.minValue&&this.updateMinValue(),null===f.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,o.call(this),this.pillarConvex=new d,this.pillarOffset=new i,this.type=o.types.HEIGHTFIELD,this.updateBoundingSphereRadius(),this._cachedPillars={}}var o=e(\"./Shape\"),d=e(\"./ConvexPolyhedron\"),i=e(\"../math/Vec3\"),t=e(\"../utils/Utils\");f.exports=n,n.prototype=new o,n.prototype.update=function(){this._cachedPillars={}},n.prototype.updateMinValue=function(){for(var e=this.data,f=e[0][0],n=0;n!==e.length;n++)for(var o=0;o!==e[n].length;o++){var d=e[n][o];f>d&&(f=d)}this.minValue=f},n.prototype.updateMaxValue=function(){for(var e=this.data,f=e[0][0],n=0;n!==e.length;n++)for(var o=0;o!==e[n].length;o++){var d=e[n][o];d>f&&(f=d)}this.maxValue=f},n.prototype.setHeightValueAtIndex=function(e,f,n){var o=this.data;o[e][f]=n,this.clearCachedConvexTrianglePillar(e,f,!1),e>0&&(this.clearCachedConvexTrianglePillar(e-1,f,!0),this.clearCachedConvexTrianglePillar(e-1,f,!1)),f>0&&(this.clearCachedConvexTrianglePillar(e,f-1,!0),this.clearCachedConvexTrianglePillar(e,f-1,!1)),f>0&&e>0&&this.clearCachedConvexTrianglePillar(e-1,f-1,!0)},n.prototype.getRectMinMax=function(e,f,n,o,d){d=d||[];for(var i=this.data,t=this.minValue,l=e;n>=l;l++)for(var u=f;o>=u;u++){var p=i[l][u];p>t&&(t=p)}d[0]=this.minValue,d[1]=t},n.prototype.getIndexOfPosition=function(e,f,n,o){var d=this.elementSize,i=this.data,t=Math.floor(e/d),l=Math.floor(f/d);return n[0]=t,n[1]=l,o&&(0>t&&(t=0),0>l&&(l=0),t>=i.length-1&&(t=i.length-1),l>=i[0].length-1&&(l=i[0].length-1)),0>t||0>l||t>=i.length-1||l>=i[0].length-1?!1:!0},n.prototype.getHeightAt=function(e,f,n){var o=[];this.getIndexOfPosition(e,f,o,n);var d=[];return this.getRectMinMax(o[0],o[1]+1,o[0],o[1]+1,d),(d[0]+d[1])/2},n.prototype.getCacheConvexTrianglePillarKey=function(e,f,n){return e+\"_\"+f+\"_\"+(n?1:0)},n.prototype.getCachedConvexTrianglePillar=function(e,f,n){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,f,n)]},n.prototype.setCachedConvexTrianglePillar=function(e,f,n,o,d){this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,f,n)]={convex:o,offset:d}},n.prototype.clearCachedConvexTrianglePillar=function(e,f,n){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,f,n)]},n.prototype.getConvexTrianglePillar=function(e,f,n){var o=this.pillarConvex,t=this.pillarOffset;if(this.cacheEnabled){var l=this.getCachedConvexTrianglePillar(e,f,n);if(l)return this.pillarConvex=l.convex,void(this.pillarOffset=l.offset);o=new d,t=new i,this.pillarConvex=o,this.pillarOffset=t}var l=this.data,u=this.elementSize,p=o.faces;o.vertices.length=6;for(var s=0;6>s;s++)o.vertices[s]||(o.vertices[s]=new i);p.length=5;for(var s=0;5>s;s++)p[s]||(p[s]=[]);var y=o.vertices,c=(Math.min(l[e][f],l[e+1][f],l[e][f+1],l[e+1][f+1])-this.minValue)/2+this.minValue;n?(t.set((e+.75)*u,(f+.75)*u,c),y[0].set(.25*u,.25*u,l[e+1][f+1]-c),y[1].set(-.75*u,.25*u,l[e][f+1]-c),y[2].set(.25*u,-.75*u,l[e+1][f]-c),y[3].set(.25*u,.25*u,-c-1),y[4].set(-.75*u,.25*u,-c-1),y[5].set(.25*u,-.75*u,-c-1),p[0][0]=0,p[0][1]=1,p[0][2]=2,p[1][0]=5,p[1][1]=4,p[1][2]=3,p[2][0]=2,p[2][1]=5,p[2][2]=3,p[2][3]=0,p[3][0]=3,p[3][1]=4,p[3][2]=1,p[3][3]=0,p[4][0]=1,p[4][1]=4,p[4][2]=5,p[4][3]=2):(t.set((e+.25)*u,(f+.25)*u,c),y[0].set(-.25*u,-.25*u,l[e][f]-c),y[1].set(.75*u,-.25*u,l[e+1][f]-c),y[2].set(-.25*u,.75*u,l[e][f+1]-c),y[3].set(-.25*u,-.25*u,-c-1),y[4].set(.75*u,-.25*u,-c-1),y[5].set(-.25*u,.75*u,-c-1),p[0][0]=0,p[0][1]=1,p[0][2]=2,p[1][0]=5,p[1][1]=4,p[1][2]=3,p[2][0]=0,p[2][1]=2,p[2][2]=5,p[2][3]=3,p[3][0]=1,p[3][1]=0,p[3][2]=3,p[3][3]=4,p[4][0]=4,p[4][1]=5,p[4][2]=2,p[4][3]=1),o.computeNormals(),o.computeEdges(),o.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(e,f,n,o,t)},n.prototype.calculateLocalInertia=function(e,f){return f=f||new i,f.set(0,0,0),f},n.prototype.volume=function(){return Number.MAX_VALUE},n.prototype.calculateWorldAABB=function(e,f,n,o){n.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),o.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},n.prototype.updateBoundingSphereRadius=function(){var e=this.data,f=this.elementSize;this.boundingSphereRadius=new i(e.length*f,e[0].length*f,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()}},{\"../math/Vec3\":30,\"../utils/Utils\":53,\"./ConvexPolyhedron\":38,\"./Shape\":43}],41:[function(e,f){function n(){o.call(this),this.type=o.types.PARTICLE}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\");n.prototype=new o,n.prototype.constructor=n,n.prototype.calculateLocalInertia=function(e,f){return f=f||new d,f.set(0,0,0),f},n.prototype.volume=function(){return 0},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},n.prototype.calculateWorldAABB=function(e,f,n,o){n.copy(e),o.copy(e)}},{\"../math/Vec3\":30,\"./Shape\":43}],42:[function(e,f){function n(){o.call(this),this.type=o.types.PLANE,this.worldNormal=new d,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\");n.prototype=new o,n.prototype.constructor=n,n.prototype.computeWorldNormal=function(e){var f=this.worldNormal;f.set(0,0,1),e.vmult(f,f),this.worldNormalNeedsUpdate=!1},n.prototype.calculateLocalInertia=function(e,f){return f=f||new d},n.prototype.volume=function(){return Number.MAX_VALUE};var i=new d;n.prototype.calculateWorldAABB=function(e,f,n,o){i.set(0,0,1),f.vmult(i,i);var d=Number.MAX_VALUE;n.set(-d,-d,-d),o.set(d,d,d),1===i.x&&(o.x=e.x),1===i.y&&(o.y=e.y),1===i.z&&(o.z=e.z),-1===i.x&&(n.x=e.x),-1===i.y&&(n.y=e.y),-1===i.z&&(n.z=e.z)},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{\"../math/Vec3\":30,\"./Shape\":43}],43:[function(e,f){function n(){this.id=n.idCounter++,this.type=0,this.boundingSphereRadius=0,this.collisionResponse=!0,this.material=null}f.exports=n;{var n=e(\"./Shape\");e(\"../math/Vec3\"),e(\"../math/Quaternion\"),e(\"../material/Material\")}n.prototype.constructor=n,n.prototype.updateBoundingSphereRadius=function(){throw\"computeBoundingSphereRadius() not implemented for shape type \"+this.type},n.prototype.volume=function(){throw\"volume() not implemented for shape type \"+this.type},n.prototype.calculateLocalInertia=function(){throw\"calculateLocalInertia() not implemented for shape type \"+this.type},n.idCounter=0,n.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Shape\":43}],44:[function(e,f){function n(e){if(o.call(this),this.radius=void 0!==e?Number(e):1,this.type=o.types.SPHERE,this.radius<0)throw new Error(\"The sphere radius cannot be negative.\");this.updateBoundingSphereRadius()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\");n.prototype=new o,n.prototype.constructor=n,n.prototype.calculateLocalInertia=function(e,f){f=f||new d;var n=2*e*this.radius*this.radius/5;return f.x=n,f.y=n,f.z=n,f},n.prototype.volume=function(){return 4*Math.PI*this.radius/3},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},n.prototype.calculateWorldAABB=function(e,f,n,o){for(var d=this.radius,i=[\"x\",\"y\",\"z\"],t=0;t<i.length;t++){var l=i[t];n[l]=e[l]-d,o[l]=e[l]+d}}},{\"../math/Vec3\":30,\"./Shape\":43}],45:[function(e,f){function n(e,f){o.call(this),this.type=o.types.TRIMESH,this.vertices=new Float32Array(e),this.indices=new Int16Array(f),this.normals=new Float32Array(f.length),this.aabb=new t,this.edges=null,this.scale=new d(1,1,1),this.tree=new l,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=(e(\"../math/Quaternion\"),e(\"../math/Transform\")),t=e(\"../collision/AABB\"),l=e(\"../utils/Octree\");n.prototype=new o,n.prototype.constructor=n;var u=new d;n.prototype.updateTree=function(){var e=this.tree;e.reset(),e.aabb.copy(this.aabb);var f=this.scale;e.aabb.lowerBound.x*=1/f.x,e.aabb.lowerBound.y*=1/f.y,e.aabb.lowerBound.z*=1/f.z,e.aabb.upperBound.x*=1/f.x,e.aabb.upperBound.y*=1/f.y,e.aabb.upperBound.z*=1/f.z;for(var n=new t,o=new d,i=new d,l=new d,u=[o,i,l],p=0;p<this.indices.length/3;p++){var s=3*p;this._getUnscaledVertex(this.indices[s],o),this._getUnscaledVertex(this.indices[s+1],i),this._getUnscaledVertex(this.indices[s+2],l),n.setFromPoints(u),e.insert(n,p)}e.removeEmptyNodes()};var p=new t;n.prototype.getTrianglesInAABB=function(e,f){p.copy(e);var n=this.scale,o=n.x,d=n.y,i=n.z,t=p.lowerBound,l=p.upperBound;return t.x/=o,t.y/=d,t.z/=i,l.x/=o,l.y/=d,l.z/=i,this.tree.aabbQuery(p,f)},n.prototype.setScale=function(e){var f=this.scale.x===this.scale.y===this.scale.z,n=e.x===e.y===e.z;f&&n||this.updateNormals(),this.scale.copy(e),this.updateAABB(),this.updateBoundingSphereRadius()},n.prototype.updateNormals=function(){for(var e=u,f=this.normals,o=0;o<this.indices.length/3;o++){var d=3*o,i=this.indices[d],t=this.indices[d+1],l=this.indices[d+2];this.getVertex(i,r),this.getVertex(t,w),this.getVertex(l,b),n.computeNormal(w,r,b,e),f[d]=e.x,f[d+1]=e.y,f[d+2]=e.z}},n.prototype.updateEdges=function(){for(var e={},f=function(){var f=i>d?d+\"_\"+i:i+\"_\"+d;e[f]=!0},n=0;n<this.indices.length/3;n++){var o=3*n,d=this.indices[o],i=this.indices[o+1],t=this.indices[o+2];f(d,i),f(i,t),f(t,d)}var l=Object.keys(e);this.edges=new Int16Array(2*l.length);for(var n=0;n<l.length;n++){var u=l[n].split(\"_\");this.edges[2*n]=parseInt(u[0],10),this.edges[2*n+1]=parseInt(u[1],10)}},n.prototype.getEdgeVertex=function(e,f,n){var o=this.edges[2*e+(f?1:0)];this.getVertex(o,n)};var s=new d,y=new d;n.prototype.getEdgeVector=function(e,f){var n=s,o=y;this.getEdgeVertex(e,0,n),this.getEdgeVertex(e,1,o),o.vsub(n,f)};var c=new d,a=new d;n.computeNormal=function(e,f,n,o){f.vsub(e,a),n.vsub(f,c),c.cross(a,o),o.isZero()||o.normalize()};var r=new d,w=new d,b=new d;n.prototype.getVertex=function(e,f){var n=this.scale;return this._getUnscaledVertex(e,f),f.x*=n.x,f.y*=n.y,f.z*=n.z,f},n.prototype._getUnscaledVertex=function(e,f){var n=3*e,o=this.vertices;return f.set(o[n],o[n+1],o[n+2])},n.prototype.getWorldVertex=function(e,f,n,o){return this.getVertex(e,o),i.pointToWorldFrame(f,n,o,o),o},n.prototype.getTriangleVertices=function(e,f,n,o){var d=3*e;this.getVertex(this.indices[d],f),this.getVertex(this.indices[d+1],n),this.getVertex(this.indices[d+2],o)},n.prototype.getNormal=function(e,f){var n=3*e;return f.set(this.normals[n],this.normals[n+1],this.normals[n+2])};var m=new t;n.prototype.calculateLocalInertia=function(e,f){this.computeLocalAABB(m);var n=m.upperBound.x-m.lowerBound.x,o=m.upperBound.y-m.lowerBound.y,d=m.upperBound.z-m.lowerBound.z;return f.set(1/12*e*(2*o*2*o+2*d*2*d),1/12*e*(2*n*2*n+2*d*2*d),1/12*e*(2*o*2*o+2*n*2*n))};var N=new d;n.prototype.computeLocalAABB=function(e){var f=e.lowerBound,n=e.upperBound,o=this.vertices.length,d=(this.vertices,N);this.getVertex(0,d),f.copy(d),n.copy(d);for(var i=0;i!==o;i++)this.getVertex(i,d),d.x<f.x?f.x=d.x:d.x>n.x&&(n.x=d.x),d.y<f.y?f.y=d.y:d.y>n.y&&(n.y=d.y),d.z<f.z?f.z=d.z:d.z>n.z&&(n.z=d.z)},n.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},n.prototype.updateBoundingSphereRadius=function(){for(var e=0,f=this.vertices,n=new d,o=0,i=f.length/3;o!==i;o++){this.getVertex(o,n);var t=n.norm2();t>e&&(e=t)}this.boundingSphereRadius=Math.sqrt(e)};var g=(new d,new i),x=new t;n.prototype.calculateWorldAABB=function(e,f,n,o){var d=g,i=x;d.position=e,d.quaternion=f,this.aabb.toWorldFrame(d,i),n.copy(i.lowerBound),o.copy(i.upperBound)},n.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},n.createTorus=function(e,f,o,d,i){e=e||1,f=f||.5,o=o||8,d=d||6,i=i||2*Math.PI;for(var t=[],l=[],u=0;o>=u;u++)for(var p=0;d>=p;p++){var s=p/d*i,y=u/o*Math.PI*2,c=(e+f*Math.cos(y))*Math.cos(s),a=(e+f*Math.cos(y))*Math.sin(s),r=f*Math.sin(y);t.push(c,a,r)}for(var u=1;o>=u;u++)for(var p=1;d>=p;p++){var w=(d+1)*u+p-1,b=(d+1)*(u-1)+p-1,m=(d+1)*(u-1)+p,N=(d+1)*u+p;l.push(w,b,N),l.push(b,m,N)}return new n(t,l)}},{\"../collision/AABB\":3,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Octree\":50,\"./Shape\":43}],46:[function(e,f){function n(){o.call(this),this.iterations=10,this.tolerance=1e-7}f.exports=n;var o=(e(\"../math/Vec3\"),e(\"../math/Quaternion\"),e(\"./Solver\"));n.prototype=new o;var d=[],i=[],t=[];n.prototype.solve=function(e,f){var n,o,l,u,p,s,y=0,c=this.iterations,a=this.tolerance*this.tolerance,r=this.equations,w=r.length,b=f.bodies,m=b.length,N=e;if(0!==w)for(var g=0;g!==m;g++)b[g].updateSolveMassProperties();var x=i,j=t,v=d;\nx.length=w,j.length=w,v.length=w;for(var g=0;g!==w;g++){var A=r[g];v[g]=0,j[g]=A.computeB(N),x[g]=1/A.computeC()}if(0!==w){for(var g=0;g!==m;g++){var C=b[g],O=C.vlambda,h=C.wlambda;O.set(0,0,0),h&&h.set(0,0,0)}for(y=0;y!==c;y++){u=0;for(var k=0;k!==w;k++){var A=r[k];n=j[k],o=x[k],s=v[k],p=A.computeGWlambda(),l=o*(n-p-A.eps*s),s+l<A.minForce?l=A.minForce-s:s+l>A.maxForce&&(l=A.maxForce-s),v[k]+=l,u+=l>0?l:-l,A.addToWlambda(l)}if(a>u*u)break}for(var g=0;g!==m;g++){var C=b[g],q=C.velocity,z=C.angularVelocity;q.vadd(C.vlambda,q),z&&z.vadd(C.wlambda,z)}}return y}},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Solver\":47}],47:[function(e,f){function n(){this.equations=[]}f.exports=n,n.prototype.solve=function(){return 0},n.prototype.addEquation=function(e){e.enabled&&this.equations.push(e)},n.prototype.removeEquation=function(e){var f=this.equations,n=f.indexOf(e);-1!==n&&f.splice(n,1)},n.prototype.removeAllEquations=function(){this.equations.length=0}},{}],48:[function(e,f){function n(e){for(l.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=e,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}function o(e){for(var f=e.length,n=0;n!==f;n++){var o=e[n];if(!(o.visited||o.body.type&c))return o}return!1}function d(e,f,n,d){for(a.push(e),e.visited=!0,f(e,n,d);a.length;)for(var i,t=a.pop();i=o(t.children);)i.visited=!0,f(i,n,d),a.push(i)}function i(e,f,n){f.push(e.body);for(var o=e.eqs.length,d=0;d!==o;d++){var i=e.eqs[d];-1===n.indexOf(i)&&n.push(i)}}function t(e,f){return f.id-e.id}f.exports=n;var l=(e(\"../math/Vec3\"),e(\"../math/Quaternion\"),e(\"./Solver\")),u=e(\"../objects/Body\");n.prototype=new l;var p=[],s=[],y={bodies:[]},c=u.STATIC,a=[];n.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},n.prototype.solve=function(e,f){for(var n=p,l=this.nodePool,u=f.bodies,c=this.equations,a=c.length,r=u.length,w=this.subsolver;l.length<r;)l.push(this.createNode());n.length=r;for(var b=0;r>b;b++)n[b]=l[b];for(var b=0;b!==r;b++){var m=n[b];m.body=u[b],m.children.length=0,m.eqs.length=0,m.visited=!1}for(var N=0;N!==a;N++){var g=c[N],b=u.indexOf(g.bi),x=u.indexOf(g.bj),j=n[b],v=n[x];j.children.push(v),j.eqs.push(g),v.children.push(j),v.eqs.push(g)}var A,C=0,O=s;w.tolerance=this.tolerance,w.iterations=this.iterations;for(var h=y;A=o(n);){O.length=0,h.bodies.length=0,d(A,i,h.bodies,O);var k=O.length;O=O.sort(t);for(var b=0;b!==k;b++)w.addEquation(O[b]);{w.solve(e,h)}w.removeAllEquations(),C++}return C}},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"./Solver\":47}],49:[function(e,f){var n=function(){};f.exports=n,n.prototype={constructor:n,addEventListener:function(e,f){void 0===this._listeners&&(this._listeners={});var n=this._listeners;return void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(f)&&n[e].push(f),this},hasEventListener:function(e,f){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(f)?!0:!1},removeEventListener:function(e,f){if(void 0===this._listeners)return this;var n=this._listeners;if(void 0===n[e])return this;var o=n[e].indexOf(f);return-1!==o&&n[e].splice(o,1),this},dispatchEvent:function(e){if(void 0===this._listeners)return this;var f=this._listeners,n=f[e.type];if(void 0!==n){e.target=this;for(var o=0,d=n.length;d>o;o++)n[o].call(this,e)}return this}}},{}],50:[function(e,f){function n(e){e=e||{},this.root=e.root||null,this.aabb=e.aabb?e.aabb.clone():new d,this.data=[],this.children=[]}function o(e,f){f=f||{},f.root=null,f.aabb=e,n.call(this,f),this.maxDepth=\"undefined\"!=typeof f.maxDepth?f.maxDepth:8}var d=e(\"../collision/AABB\"),i=e(\"../math/Vec3\");f.exports=o,o.prototype=new n,n.prototype.reset=function(){this.children.length=this.data.length=0},n.prototype.insert=function(e,f,n){var o=this.data;if(n=n||0,!this.aabb.contains(e))return!1;var d=this.children;if(n<(this.maxDepth||this.root.maxDepth)){var i=!1;d.length||(this.subdivide(),i=!0);for(var t=0;8!==t;t++)if(d[t].insert(e,f,n+1))return!0;i&&(d.length=0)}return o.push(f),!0};var t=new i;n.prototype.subdivide=function(){var e=this.aabb,f=e.lowerBound,o=e.upperBound,l=this.children;l.push(new n({aabb:new d({lowerBound:new i(0,0,0)})}),new n({aabb:new d({lowerBound:new i(1,0,0)})}),new n({aabb:new d({lowerBound:new i(1,1,0)})}),new n({aabb:new d({lowerBound:new i(1,1,1)})}),new n({aabb:new d({lowerBound:new i(0,1,1)})}),new n({aabb:new d({lowerBound:new i(0,0,1)})}),new n({aabb:new d({lowerBound:new i(1,0,1)})}),new n({aabb:new d({lowerBound:new i(0,1,0)})})),o.vsub(f,t),t.scale(.5,t);for(var u=this.root||this,p=0;8!==p;p++){var s=l[p];s.root=u;var y=s.aabb.lowerBound;y.x*=t.x,y.y*=t.y,y.z*=t.z,y.vadd(f,y),y.vadd(t,s.aabb.upperBound)}},n.prototype.aabbQuery=function(e,f){for(var n=(this.data,this.children,[this]);n.length;){var o=n.pop();o.aabb.overlaps(e)&&Array.prototype.push.apply(f,o.data),Array.prototype.push.apply(n,o.children)}return f};var l=new d;n.prototype.rayQuery=function(e,f,n){return e.getAABB(l),l.toLocalFrame(f,l),this.aabbQuery(l,n),n},n.prototype.removeEmptyNodes=function(){for(var e=[this];e.length;){for(var f=e.pop(),n=f.children.length-1;n>=0;n--)f.children[n].data.length||f.children.splice(n,1);Array.prototype.push.apply(e,f.children)}}},{\"../collision/AABB\":3,\"../math/Vec3\":30}],51:[function(e,f){function n(){this.objects=[],this.type=Object}f.exports=n,n.prototype.release=function(){for(var e=arguments.length,f=0;f!==e;f++)this.objects.push(arguments[f])},n.prototype.get=function(){return 0===this.objects.length?this.constructObject():this.objects.pop()},n.prototype.constructObject=function(){throw new Error(\"constructObject() not implemented in this Pool subclass yet!\")}},{}],52:[function(e,f){function n(){this.data={keys:[]}}f.exports=n,n.prototype.get=function(e,f){if(e>f){var n=f;f=e,e=n}return this.data[e+\"-\"+f]},n.prototype.set=function(e,f,n){if(e>f){var o=f;f=e,e=o}var d=e+\"-\"+f;this.get(e,f)||this.data.keys.push(d),this.data[d]=n},n.prototype.reset=function(){for(var e=this.data,f=e.keys;f.length>0;){var n=f.pop();delete e[n]}}},{}],53:[function(e,f){function n(){}f.exports=n,n.defaults=function(e,f){e=e||{};for(var n in f)n in e||(e[n]=f[n]);return e}},{}],54:[function(e,f){function n(){d.call(this),this.type=o}f.exports=n;var o=e(\"../math/Vec3\"),d=e(\"./Pool\");n.prototype=new d,n.prototype.constructObject=function(){return new o}},{\"../math/Vec3\":30,\"./Pool\":51}],55:[function(e,f){function n(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new s,this.world=e,this.currentContactMaterial=null,this.enableFrictionReduction=!1}function o(e,f,n){for(var o=null,d=e.length,i=0;i!==d;i++){var t=e[i],l=M;e[(i+1)%d].vsub(t,l);var u=P;l.cross(f,u);var p=Q;n.vsub(t,p);var s=u.dot(p);if(!(null===o||s>0&&o===!0||0>=s&&o===!1))return!1;null===o&&(o=s>0)}return!0}f.exports=n;var d=e(\"../collision/AABB\"),i=e(\"../shapes/Shape\"),t=e(\"../collision/Ray\"),l=e(\"../math/Vec3\"),u=e(\"../math/Transform\"),p=(e(\"../shapes/ConvexPolyhedron\"),e(\"../math/Quaternion\")),s=(e(\"../solver/Solver\"),e(\"../utils/Vec3Pool\")),y=e(\"../equations/ContactEquation\"),c=e(\"../equations/FrictionEquation\");n.prototype.createContactEquation=function(e,f,n,o,d,i){var t;this.contactPointPool.length?(t=this.contactPointPool.pop(),t.bi=e,t.bj=f):t=new y(e,f),t.enabled=e.collisionResponse&&f.collisionResponse&&n.collisionResponse&&o.collisionResponse;var l=this.currentContactMaterial;t.restitution=l.restitution,t.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);var u=n.material||e.material,p=o.material||f.material;return u&&p&&u.restitution>=0&&p.restitution>=0&&(t.restitution=u.restitution*p.restitution),t.si=d||n,t.sj=i||o,t},n.prototype.createFrictionEquationsFromContact=function(e,f){var n=e.bi,o=e.bj,d=e.si,i=e.sj,t=this.world,l=this.currentContactMaterial,u=l.friction,p=d.material||n.material,s=i.material||o.material;if(p&&s&&p.friction>=0&&s.friction>=0&&(u=p.friction*s.friction),u>0){var y=u*t.gravity.length(),a=n.invMass+o.invMass;a>0&&(a=1/a);var r=this.frictionEquationPool,w=r.length?r.pop():new c(n,o,y*a),b=r.length?r.pop():new c(n,o,y*a);return w.bi=b.bi=n,w.bj=b.bj=o,w.minForce=b.minForce=-y*a,w.maxForce=b.maxForce=y*a,w.ri.copy(e.ri),w.rj.copy(e.rj),b.ri.copy(e.ri),b.rj.copy(e.rj),e.ni.tangents(w.t,b.t),w.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,t.dt),b.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,t.dt),w.enabled=b.enabled=e.enabled,f.push(w,b),!0}return!1};var a=new l,r=new l,w=new l;n.prototype.createFrictionFromAverage=function(e){var f=this.result[this.result.length-1];if(this.createFrictionEquationsFromContact(f,this.frictionResult)&&1!==e){var n=this.frictionResult[this.frictionResult.length-2],o=this.frictionResult[this.frictionResult.length-1];a.setZero(),r.setZero(),w.setZero();for(var d=f.bi,i=(f.bj,0);i!==e;i++)f=this.result[this.result.length-1-i],f.bodyA!==d?(a.vadd(f.ni,a),r.vadd(f.ri,r),w.vadd(f.rj,w)):(a.vsub(f.ni,a),r.vadd(f.rj,r),w.vadd(f.ri,w));var t=1/e;r.scale(t,n.ri),w.scale(t,n.rj),o.ri.copy(n.ri),o.rj.copy(n.rj),a.normalize(),a.tangents(n.t,o.t)}};var b=new l,m=new l,N=new p,g=new p;n.prototype.getContacts=function(e,f,n,o,d,i,t){this.contactPointPool=d,this.frictionEquationPool=t,this.result=o,this.frictionResult=i;for(var l=N,u=g,p=b,s=m,y=0,c=e.length;y!==c;y++){var a=e[y],r=f[y],w=null;a.material&&r.material&&(w=n.getContactMaterial(a.material,r.material)||null);for(var x=0;x<a.shapes.length;x++){a.quaternion.mult(a.shapeOrientations[x],l),a.quaternion.vmult(a.shapeOffsets[x],p),p.vadd(a.position,p);for(var j=a.shapes[x],v=0;v<r.shapes.length;v++){r.quaternion.mult(r.shapeOrientations[v],u),r.quaternion.vmult(r.shapeOffsets[v],s),s.vadd(r.position,s);var A=r.shapes[v];if(!(p.distanceTo(s)>j.boundingSphereRadius+A.boundingSphereRadius)){var C=null;j.material&&A.material&&(C=n.getContactMaterial(j.material,A.material)||null),this.currentContactMaterial=C||w||n.defaultContactMaterial;var O=this[j.type|A.type];O&&(j.type<A.type?O.call(this,j,A,p,s,l,u,a,r,j,A):O.call(this,A,j,s,p,u,l,r,a,j,A))}}}}};n.prototype[i.types.BOX|i.types.BOX]=n.prototype.boxBox=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,f.convexPolyhedronRepresentation.material=f.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,f.convexPolyhedronRepresentation.collisionResponse=f.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,f.convexPolyhedronRepresentation,n,o,d,i,t,l,e,f)},n.prototype[i.types.BOX|i.types.CONVEXPOLYHEDRON]=n.prototype.boxConvex=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,f,n,o,d,i,t,l,e,f)},n.prototype[i.types.BOX|i.types.PARTICLE]=n.prototype.boxParticle=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,f,n,o,d,i,t,l,e,f)},n.prototype[i.types.SPHERE]=n.prototype.sphereSphere=function(e,f,n,o,d,i,t,l){var u=this.createContactEquation(t,l,e,f);o.vsub(n,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.mult(e.radius,u.ri),u.rj.mult(-f.radius,u.rj),u.ri.vadd(n,u.ri),u.ri.vsub(t.position,u.ri),u.rj.vadd(o,u.rj),u.rj.vsub(l.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)};var x=new l,j=new l,v=new l;n.prototype[i.types.PLANE|i.types.TRIMESH]=n.prototype.planeTrimesh=function(e,f,n,o,d,i,t,p){var s=new l,y=x;y.set(0,0,1),d.vmult(y,y);for(var c=0;c<f.vertices.length/3;c++){f.getVertex(c,s);var a=new l;a.copy(s),u.pointToWorldFrame(o,i,a,s);var r=j;s.vsub(n,r);var w=y.dot(r);if(0>=w){var b=this.createContactEquation(t,p,e,f);b.ni.copy(y);var m=v;y.scale(r.dot(y),m),s.vsub(m,m),b.ri.copy(m),b.ri.vsub(t.position,b.ri),b.rj.copy(s),b.rj.vsub(p.position,b.rj),this.result.push(b),this.createFrictionEquationsFromContact(b,this.frictionResult)}}};var A=new l,C=new l,O=(new l,new l),h=new l,k=new l,q=new l,z=new l,B=new l,D=new l,E=new l,F=new l,G=new l,H=new l,I=new d,J=[];n.prototype[i.types.SPHERE|i.types.TRIMESH]=n.prototype.sphereTrimesh=function(e,f,n,o,d,i,l,p){var s=k,y=q,c=z,a=B,r=D,w=E,b=I,m=h,N=C,g=J;u.pointToLocalFrame(o,i,n,r);var x=e.radius;b.lowerBound.set(r.x-x,r.y-x,r.z-x),b.upperBound.set(r.x+x,r.y+x,r.z+x),f.getTrianglesInAABB(b,g);for(var j=O,v=e.radius*e.radius,K=0;K<g.length;K++)for(var L=0;3>L;L++)if(f.getVertex(f.indices[3*g[K]+L],j),j.vsub(r,N),N.norm2()<=v){m.copy(j),u.pointToWorldFrame(o,i,m,j),j.vsub(n,N);var M=this.createContactEquation(l,p,e,f);M.ni.copy(N),M.ni.normalize(),M.ri.copy(M.ni),M.ri.scale(e.radius,M.ri),M.ri.vadd(n,M.ri),M.ri.vsub(l.position,M.ri),M.rj.copy(j),M.rj.vsub(p.position,M.rj),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult)}for(var K=0;K<g.length;K++)for(var L=0;3>L;L++){f.getVertex(f.indices[3*g[K]+L],s),f.getVertex(f.indices[3*g[K]+(L+1)%3],y),y.vsub(s,c),r.vsub(y,w);var P=w.dot(c);r.vsub(s,w);var Q=w.dot(c);if(Q>0&&0>P){r.vsub(s,w),a.copy(c),a.normalize(),Q=w.dot(a),a.scale(Q,w),w.vadd(s,w);var R=w.distanceTo(r);if(R<e.radius){var M=this.createContactEquation(l,p,e,f);w.vsub(r,M.ni),M.ni.normalize(),M.ni.scale(e.radius,M.ri),u.pointToWorldFrame(o,i,w,w),w.vsub(p.position,M.rj),u.vectorToWorldFrame(i,M.ni,M.ni),u.vectorToWorldFrame(i,M.ri,M.ri),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult)}}}for(var S=F,T=G,U=H,V=A,K=0,W=g.length;K!==W;K++){f.getTriangleVertices(g[K],S,T,U),f.getNormal(g[K],V),r.vsub(S,w);var R=w.dot(V);if(V.scale(R,w),r.vsub(w,w),R=w.distanceTo(r),t.pointInTriangle(w,S,T,U)&&R<e.radius){var M=this.createContactEquation(l,p,e,f);w.vsub(r,M.ni),M.ni.normalize(),M.ni.scale(e.radius,M.ri),u.pointToWorldFrame(o,i,w,w),w.vsub(p.position,M.rj),u.vectorToWorldFrame(i,M.ni,M.ni),u.vectorToWorldFrame(i,M.ri,M.ri),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult)}}g.length=0};var K=new l,L=new l;n.prototype[i.types.SPHERE|i.types.PLANE]=n.prototype.spherePlane=function(e,f,n,o,d,i,t,l){var u=this.createContactEquation(t,l,e,f);if(u.ni.set(0,0,1),i.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.mult(e.radius,u.ri),n.vsub(o,K),u.ni.mult(u.ni.dot(K),L),K.vsub(L,u.rj),-K.dot(u.ni)<=e.radius){var p=u.ri,s=u.rj;p.vadd(n,p),p.vsub(t.position,p),s.vadd(o,s),s.vsub(l.position,s),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}};var M=new l,P=new l,Q=new l,R=new l,S=new l,T=new l,U=new l,V=[new l,new l,new l,new l,new l,new l],W=new l,X=new l,Y=new l,Z=new l;n.prototype[i.types.SPHERE|i.types.BOX]=n.prototype.sphereBox=function(e,f,n,o,d,i,t,l){var u=this.v3pool,p=V;n.vsub(o,R),f.getSideNormals(p,i);for(var s=e.radius,y=!1,c=X,a=Y,r=Z,w=null,b=0,m=0,N=0,g=null,x=0,j=p.length;x!==j&&y===!1;x++){var v=S;v.copy(p[x]);var A=v.norm();v.normalize();var C=R.dot(v);if(A+s>C&&C>0){var O=T,h=U;O.copy(p[(x+1)%3]),h.copy(p[(x+2)%3]);var k=O.norm(),q=h.norm();O.normalize(),h.normalize();var z=R.dot(O),B=R.dot(h);if(k>z&&z>-k&&q>B&&B>-q){var D=Math.abs(C-A-s);(null===g||g>D)&&(g=D,m=z,N=B,w=A,c.copy(v),a.copy(O),r.copy(h),b++)}}}if(b){y=!0;var E=this.createContactEquation(t,l,e,f);c.mult(-s,E.ri),E.ni.copy(c),E.ni.negate(E.ni),c.mult(w,c),a.mult(m,a),c.vadd(a,c),r.mult(N,r),c.vadd(r,E.rj),E.ri.vadd(n,E.ri),E.ri.vsub(t.position,E.ri),E.rj.vadd(o,E.rj),E.rj.vsub(l.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}for(var F=u.get(),G=W,H=0;2!==H&&!y;H++)for(var I=0;2!==I&&!y;I++)for(var J=0;2!==J&&!y;J++)if(F.set(0,0,0),H?F.vadd(p[0],F):F.vsub(p[0],F),I?F.vadd(p[1],F):F.vsub(p[1],F),J?F.vadd(p[2],F):F.vsub(p[2],F),o.vadd(F,G),G.vsub(n,G),G.norm2()<s*s){y=!0;var E=this.createContactEquation(t,l,e,f);E.ri.copy(G),E.ri.normalize(),E.ni.copy(E.ri),E.ri.mult(s,E.ri),E.rj.copy(F),E.ri.vadd(n,E.ri),E.ri.vsub(t.position,E.ri),E.rj.vadd(o,E.rj),E.rj.vsub(l.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}u.release(F),F=null;for(var K=u.get(),L=u.get(),E=u.get(),M=u.get(),D=u.get(),P=p.length,H=0;H!==P&&!y;H++)for(var I=0;I!==P&&!y;I++)if(H%3!==I%3){p[I].cross(p[H],K),K.normalize(),p[H].vadd(p[I],L),E.copy(n),E.vsub(L,E),E.vsub(o,E);var Q=E.dot(K);K.mult(Q,M);for(var J=0;J===H%3||J===I%3;)J++;D.copy(n),D.vsub(M,D),D.vsub(L,D),D.vsub(o,D);var $=Math.abs(Q),_=D.norm();if($<p[J].norm()&&s>_){y=!0;var ef=this.createContactEquation(t,l,e,f);L.vadd(M,ef.rj),ef.rj.copy(ef.rj),D.negate(ef.ni),ef.ni.normalize(),ef.ri.copy(ef.rj),ef.ri.vadd(o,ef.ri),ef.ri.vsub(n,ef.ri),ef.ri.normalize(),ef.ri.mult(s,ef.ri),ef.ri.vadd(n,ef.ri),ef.ri.vsub(t.position,ef.ri),ef.rj.vadd(o,ef.rj),ef.rj.vsub(l.position,ef.rj),this.result.push(ef),this.createFrictionEquationsFromContact(ef,this.frictionResult)}}u.release(K,L,E,M,D)};var $=new l,_=new l,ef=new l,ff=new l,nf=new l,of=new l,df=new l,tf=new l,lf=new l,uf=new l;n.prototype[i.types.SPHERE|i.types.CONVEXPOLYHEDRON]=n.prototype.sphereConvex=function(e,f,n,d,i,t,l,u){var p=this.v3pool;n.vsub(d,$);for(var s=f.faceNormals,y=f.faces,c=f.vertices,a=e.radius,r=0;r!==c.length;r++){var w=c[r],b=nf;t.vmult(w,b),d.vadd(b,b);var m=ff;if(b.vsub(n,m),m.norm2()<a*a){g=!0;var N=this.createContactEquation(l,u,e,f);return N.ri.copy(m),N.ri.normalize(),N.ni.copy(N.ri),N.ri.mult(a,N.ri),b.vsub(d,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(l.position,N.ri),N.rj.vadd(d,N.rj),N.rj.vsub(u.position,N.rj),this.result.push(N),void this.createFrictionEquationsFromContact(N,this.frictionResult)}}for(var g=!1,r=0,x=y.length;r!==x&&g===!1;r++){var j=s[r],v=y[r],A=of;t.vmult(j,A);var C=df;t.vmult(c[v[0]],C),C.vadd(d,C);var O=tf;A.mult(-a,O),n.vadd(O,O);var h=lf;O.vsub(C,h);var k=h.dot(A),q=uf;if(n.vsub(C,q),0>k&&q.dot(A)>0){for(var z=[],B=0,D=v.length;B!==D;B++){var E=p.get();t.vmult(c[v[B]],E),d.vadd(E,E),z.push(E)}if(o(z,A,n)){g=!0;var N=this.createContactEquation(l,u,e,f);A.mult(-a,N.ri),A.negate(N.ni);var F=p.get();A.mult(-k,F);var G=p.get();A.mult(-a,G),n.vsub(d,N.rj),N.rj.vadd(G,N.rj),N.rj.vadd(F,N.rj),N.rj.vadd(d,N.rj),N.rj.vsub(u.position,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(l.position,N.ri),p.release(F),p.release(G),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult);for(var B=0,H=z.length;B!==H;B++)p.release(z[B]);return}for(var B=0;B!==v.length;B++){var I=p.get(),J=p.get();t.vmult(c[v[(B+1)%v.length]],I),t.vmult(c[v[(B+2)%v.length]],J),d.vadd(I,I),d.vadd(J,J);var K=_;J.vsub(I,K);var L=ef;K.unit(L);var M=p.get(),P=p.get();n.vsub(I,P);var Q=P.dot(L);L.mult(Q,M),M.vadd(I,M);var R=p.get();if(M.vsub(n,R),Q>0&&Q*Q<K.norm2()&&R.norm2()<a*a){var N=this.createContactEquation(l,u,e,f);M.vsub(d,N.rj),M.vsub(n,N.ni),N.ni.normalize(),N.ni.mult(a,N.ri),N.rj.vadd(d,N.rj),N.rj.vsub(u.position,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(l.position,N.ri),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult);for(var B=0,H=z.length;B!==H;B++)p.release(z[B]);return p.release(I),p.release(J),p.release(M),p.release(R),void p.release(P)}p.release(I),p.release(J),p.release(M),p.release(R),p.release(P)}for(var B=0,H=z.length;B!==H;B++)p.release(z[B])}}};new l,new l;n.prototype[i.types.PLANE|i.types.BOX]=n.prototype.planeBox=function(e,f,n,o,d,i,t,l){f.convexPolyhedronRepresentation.material=f.material,f.convexPolyhedronRepresentation.collisionResponse=f.collisionResponse,this.planeConvex(e,f.convexPolyhedronRepresentation,n,o,d,i,t,l)};var pf=new l,sf=new l,yf=new l,cf=new l;n.prototype[i.types.PLANE|i.types.CONVEXPOLYHEDRON]=n.prototype.planeConvex=function(e,f,n,o,d,i,t,l){var u=pf,p=sf;p.set(0,0,1),d.vmult(p,p);for(var s=0,y=yf,c=0;c!==f.vertices.length;c++){u.copy(f.vertices[c]),i.vmult(u,u),o.vadd(u,u),u.vsub(n,y);var a=p.dot(y);if(0>=a){var r=this.createContactEquation(t,l,e,f),w=cf;p.mult(p.dot(y),w),u.vsub(w,w),w.vsub(n,r.ri),r.ni.copy(p),u.vsub(o,r.rj),r.ri.vadd(n,r.ri),r.ri.vsub(t.position,r.ri),r.rj.vadd(o,r.rj),r.rj.vsub(l.position,r.rj),this.result.push(r),s++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(r,this.frictionResult)}}this.enableFrictionReduction&&s&&this.createFrictionFromAverage(s)};var af=new l,rf=new l;n.prototype[i.types.CONVEXPOLYHEDRON]=n.prototype.convexConvex=function(e,f,n,o,d,i,t,l,u,p,s,y){var c=af;if(!(n.distanceTo(o)>e.boundingSphereRadius+f.boundingSphereRadius)&&e.findSeparatingAxis(f,n,d,o,i,c,s,y)){var a=[],r=rf;e.clipAgainstHull(n,d,f,o,i,c,-100,100,a);for(var w=0,b=0;b!==a.length;b++){var m=this.createContactEquation(t,l,e,f,u,p),N=m.ri,g=m.rj;c.negate(m.ni),a[b].normal.negate(r),r.mult(a[b].depth,r),a[b].point.vadd(r,N),g.copy(a[b].point),N.vsub(n,N),g.vsub(o,g),N.vadd(n,N),N.vsub(t.position,N),g.vadd(o,g),g.vsub(l.position,g),this.result.push(m),w++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(m,this.frictionResult)}this.enableFrictionReduction&&w&&this.createFrictionFromAverage(w)}};var wf=new l,bf=new l,mf=new l;n.prototype[i.types.PLANE|i.types.PARTICLE]=n.prototype.planeParticle=function(e,f,n,o,d,i,t,l){var u=wf;u.set(0,0,1),t.quaternion.vmult(u,u);var p=bf;o.vsub(t.position,p);var s=u.dot(p);if(0>=s){var y=this.createContactEquation(l,t,f,e);y.ni.copy(u),y.ni.negate(y.ni),y.ri.set(0,0,0);var c=mf;u.mult(u.dot(o),c),o.vsub(c,c),y.rj.copy(c),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}};var Nf=new l;n.prototype[i.types.PARTICLE|i.types.SPHERE]=n.prototype.sphereParticle=function(e,f,n,o,d,i,t,l){var u=Nf;u.set(0,0,1),o.vsub(n,u);var p=u.norm2();if(p<=e.radius*e.radius){var s=this.createContactEquation(l,t,f,e);u.normalize(),s.rj.copy(u),s.rj.mult(e.radius,s.rj),s.ni.copy(u),s.ni.negate(s.ni),s.ri.set(0,0,0),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}};var gf=new p,xf=new l,jf=(new l,new l),vf=new l,Af=new l;n.prototype[i.types.PARTICLE|i.types.CONVEXPOLYHEDRON]=n.prototype.convexParticle=function(e,f,n,o,d,i,t,l){var u=-1,p=jf,s=Af,y=null,c=0,a=xf;if(a.copy(o),a.vsub(n,a),d.conjugate(gf),gf.vmult(a,a),e.pointIsInside(a)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(n,d),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(d);for(var r=0,w=e.faces.length;r!==w;r++){var b=[e.worldVertices[e.faces[r][0]]],m=e.worldFaceNormals[r];o.vsub(b[0],vf);var N=-m.dot(vf);(null===y||Math.abs(N)<Math.abs(y))&&(y=N,u=r,p.copy(m),c++)}if(-1!==u){var g=this.createContactEquation(l,t,f,e);p.mult(y,s),s.vadd(o,s),s.vsub(n,s),g.rj.copy(s),p.negate(g.ni),g.ri.set(0,0,0);var x=g.ri,j=g.rj;x.vadd(o,x),x.vsub(l.position,x),j.vadd(n,j),j.vsub(t.position,j),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}else console.warn(\"Point found inside convex, but did not find penetrating face!\")}},n.prototype[i.types.BOX|i.types.HEIGHTFIELD]=n.prototype.boxHeightfield=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,f,n,o,d,i,t,l)};var Cf=new l,Of=new l,hf=[0];n.prototype[i.types.CONVEXPOLYHEDRON|i.types.HEIGHTFIELD]=n.prototype.convexHeightfield=function(e,f,n,o,d,i,t,l){var p=f.data,s=f.elementSize,y=e.boundingSphereRadius,c=Of,a=hf,r=Cf;u.pointToLocalFrame(o,i,n,r);var w=Math.floor((r.x-y)/s)-1,b=Math.ceil((r.x+y)/s)+1,m=Math.floor((r.y-y)/s)-1,N=Math.ceil((r.y+y)/s)+1;if(!(0>b||0>N||w>p.length||m>p[0].length)){0>w&&(w=0),0>b&&(b=0),0>m&&(m=0),0>N&&(N=0),w>=p.length&&(w=p.length-1),b>=p.length&&(b=p.length-1),N>=p[0].length&&(N=p[0].length-1),m>=p[0].length&&(m=p[0].length-1);var g=[];f.getRectMinMax(w,m,b,N,g);var x=g[0],j=g[1];if(!(r.z-y>j||r.z+y<x))for(var v=w;b>v;v++)for(var A=m;N>A;A++)f.getConvexTrianglePillar(v,A,!1),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.convexConvex(e,f.pillarConvex,n,c,d,i,t,l,null,null,a,null),f.getConvexTrianglePillar(v,A,!0),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.convexConvex(e,f.pillarConvex,n,c,d,i,t,l,null,null,a,null)}};var kf=new l,qf=new l;n.prototype[i.types.SPHERE|i.types.HEIGHTFIELD]=n.prototype.sphereHeightfield=function(e,f,n,o,d,i,t,l){var p=f.data,s=e.radius,y=f.elementSize,c=qf,a=kf;u.pointToLocalFrame(o,i,n,a);var r=Math.floor((a.x-s)/y)-1,w=Math.ceil((a.x+s)/y)+1,b=Math.floor((a.y-s)/y)-1,m=Math.ceil((a.y+s)/y)+1;if(!(0>w||0>m||r>p.length||m>p[0].length)){0>r&&(r=0),0>w&&(w=0),0>b&&(b=0),0>m&&(m=0),r>=p.length&&(r=p.length-1),w>=p.length&&(w=p.length-1),m>=p[0].length&&(m=p[0].length-1),b>=p[0].length&&(b=p[0].length-1);var N=[];f.getRectMinMax(r,b,w,m,N);var g=N[0],x=N[1];if(!(a.z-s>x||a.z+s<g))for(var j=this.result,v=r;w>v;v++)for(var A=b;m>A;A++){var C=j.length;f.getConvexTrianglePillar(v,A,!1),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.sphereConvex(e,f.pillarConvex,n,c,d,i,t,l),f.getConvexTrianglePillar(v,A,!0),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.sphereConvex(e,f.pillarConvex,n,c,d,i,t,l);var O=j.length-C;if(O>2)return}}}},{\"../collision/AABB\":3,\"../collision/Ray\":9,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43,\"../solver/Solver\":47,\"../utils/Vec3Pool\":54}],56:[function(e,f){function n(){u.apply(this),this.dt=-1,this.allowSleep=!1,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=0,this.quatNormalizeFast=!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new d,this.broadphase=new m,this.bodies=[],this.solver=new t,this.constraints=[],this.narrowphase=new l(this),this.collisionMatrix=new p,this.collisionMatrixPrevious=new p,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new a,this.defaultMaterial=new s(\"default\"),this.defaultContactMaterial=new y(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.subsystems=[],this.addBodyEvent={type:\"addBody\",body:null},this.removeBodyEvent={type:\"removeBody\",body:null}}f.exports=n;var o=e(\"../shapes/Shape\"),d=e(\"../math/Vec3\"),i=e(\"../math/Quaternion\"),t=e(\"../solver/GSSolver\"),l=(e(\"../utils/Vec3Pool\"),e(\"../equations/ContactEquation\"),e(\"../equations/FrictionEquation\"),e(\"./Narrowphase\")),u=e(\"../utils/EventTarget\"),p=e(\"../collision/ArrayCollisionMatrix\"),s=e(\"../material/Material\"),y=e(\"../material/ContactMaterial\"),c=e(\"../objects/Body\"),a=e(\"../utils/TupleDictionary\"),r=e(\"../collision/RaycastResult\"),w=e(\"../collision/AABB\"),b=e(\"../collision/Ray\"),m=e(\"../collision/NaiveBroadphase\");n.prototype=new u;var N=(new w,new b);if(n.prototype.getContactMaterial=function(e,f){return this.contactMaterialTable.get(e.id,f.id)},n.prototype.numObjects=function(){return this.bodies.length},n.prototype.collisionMatrixTick=function(){var e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset()},n.prototype.add=n.prototype.addBody=function(e){-1===this.bodies.indexOf(e)&&(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof c&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.dispatchEvent(this.addBodyEvent))},n.prototype.addConstraint=function(e){this.constraints.push(e)},n.prototype.removeConstraint=function(e){var f=this.constraints.indexOf(e);-1!==f&&this.constraints.splice(f,1)},n.prototype.rayTest=function(e,f,n){n instanceof r?this.raycastClosest(e,f,{skipBackfaces:!0},n):this.raycastAll(e,f,{skipBackfaces:!0},n)},n.prototype.raycastAll=function(e,f,n,o){return n.mode=b.ALL,n.from=e,n.to=f,n.callback=o,N.intersectWorld(this,n)},n.prototype.raycastAny=function(e,f,n,o){return n.mode=b.ANY,n.from=e,n.to=f,n.result=o,N.intersectWorld(this,n)},n.prototype.raycastClosest=function(e,f,n,o){return n.mode=b.CLOSEST,n.from=e,n.to=f,n.result=o,N.intersectWorld(this,n)},n.prototype.remove=function(e){e.world=null;var f=this.bodies.length-1,n=this.bodies,o=n.indexOf(e);if(-1!==o){n.splice(o,1);for(var d=0;d!==n.length;d++)n[d].index=d;this.collisionMatrix.setNumObjects(f),this.removeBodyEvent.body=e,this.dispatchEvent(this.removeBodyEvent)}},n.prototype.removeBody=n.prototype.remove,n.prototype.addMaterial=function(e){this.materials.push(e)},n.prototype.addContactMaterial=function(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)},\"undefined\"==typeof performance&&(performance={}),!performance.now){var g=Date.now();performance.timing&&performance.timing.navigationStart&&(g=performance.timing.navigationStart),performance.now=function(){return Date.now()-g}}var x=new d;n.prototype.step=function(e,f,n){if(n=n||10,f=f||0,0===f)this.internalStep(e),this.time+=e;else{var o=Math.floor((this.time+f)/e)-Math.floor(this.time/e);o=Math.min(o,n);for(var d=performance.now(),i=0;i!==o&&(this.internalStep(e),!(performance.now()-d>1e3*e));i++);this.time+=f;for(var t=this.time%e,l=t/e,u=x,p=this.bodies,s=0;s!==p.length;s++){var y=p[s];y.type!==c.STATIC&&y.sleepState!==c.SLEEPING?(y.position.vsub(y.previousPosition,u),u.scale(l,u),y.position.vadd(u,y.interpolatedPosition)):(y.interpolatedPosition.copy(y.position),y.interpolatedQuaternion.copy(y.quaternion))}}};var j={type:\"postStep\"},v={type:\"preStep\"},A={type:\"collide\",body:null,contact:null},C=[],O=[],h=[],k=[],q=(new d,new d,new d,new d,new d,new d,new d,new d,new d,new i,new i),z=new i,B=new d;n.prototype.internalStep=function(e){this.dt=e;var f,n=this.contacts,d=h,i=k,t=this.numObjects(),l=this.bodies,u=this.solver,p=this.gravity,s=this.doProfiling,y=this.profile,a=c.DYNAMIC,r=this.constraints,w=O,b=(p.norm(),p.x),m=p.y,N=p.z,g=0;for(s&&(f=performance.now()),g=0;g!==t;g++){var x=l[g];if(x.type&a){var D=x.force,E=x.mass;D.x+=E*b,D.y+=E*m,D.z+=E*N}}for(var g=0,F=this.subsystems.length;g!==F;g++)this.subsystems[g].update();s&&(f=performance.now()),d.length=0,i.length=0,this.broadphase.collisionPairs(this,d,i),s&&(y.broadphase=performance.now()-f);var G=r.length;for(g=0;g!==G;g++){var H=r[g];if(!H.collideConnected)for(var I=d.length-1;I>=0;I-=1)(H.bodyA===d[I]&&H.bodyB===i[I]||H.bodyB===d[I]&&H.bodyA===i[I])&&(d.splice(I,1),i.splice(I,1))}this.collisionMatrixTick(),s&&(f=performance.now());var J=C,K=n.length;for(g=0;g!==K;g++)J.push(n[g]);n.length=0;var L=this.frictionEquations.length;for(g=0;g!==L;g++)w.push(this.frictionEquations[g]);this.frictionEquations.length=0,this.narrowphase.getContacts(d,i,this,n,J,this.frictionEquations,w),s&&(y.narrowphase=performance.now()-f),s&&(f=performance.now());for(var g=0;g<this.frictionEquations.length;g++)u.addEquation(this.frictionEquations[g]);for(var M=n.length,P=0;P!==M;P++){{var Q,H=n[P],x=H.bi,R=H.bj;H.si,H.sj}Q=x.material&&R.material?this.getContactMaterial(x.material,R.material)||this.defaultContactMaterial:this.defaultContactMaterial;var S=Q.friction;if(x.material&&R.material&&(x.material.friction>=0&&R.material.friction>=0&&(S=x.material.friction*R.material.friction),x.material.restitution>=0&&R.material.restitution>=0&&(H.restitution=x.material.restitution*R.material.restitution)),u.addEquation(H),x.allowSleep&&x.type===c.DYNAMIC&&x.sleepState===c.SLEEPING&&R.sleepState===c.AWAKE&&R.type!==c.STATIC){var T=R.velocity.norm2()+R.angularVelocity.norm2(),U=Math.pow(R.sleepSpeedLimit,2);\nT>=2*U&&(x._wakeUpAfterNarrowphase=!0)}if(R.allowSleep&&R.type===c.DYNAMIC&&R.sleepState===c.SLEEPING&&x.sleepState===c.AWAKE&&x.type!==c.STATIC){var V=x.velocity.norm2()+x.angularVelocity.norm2(),W=Math.pow(x.sleepSpeedLimit,2);V>=2*W&&(R._wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(x,R,!0),this.collisionMatrixPrevious.get(x,R)||(A.body=R,A.contact=H,x.dispatchEvent(A),A.body=x,R.dispatchEvent(A))}for(s&&(y.makeContactConstraints=performance.now()-f,f=performance.now()),g=0;g!==t;g++){var x=l[g];x._wakeUpAfterNarrowphase&&(x.wakeUp(),x._wakeUpAfterNarrowphase=!1)}var G=r.length;for(g=0;g!==G;g++){var H=r[g];H.update();for(var I=0,X=H.equations.length;I!==X;I++){var Y=H.equations[I];u.addEquation(Y)}}u.solve(e,this),s&&(y.solve=performance.now()-f),u.removeAllEquations();var Z=Math.pow;for(g=0;g!==t;g++){var x=l[g];if(x.type&a){var $=Z(1-x.linearDamping,e),_=x.velocity;_.mult($,_);var ef=x.angularVelocity;if(ef){var ff=Z(1-x.angularDamping,e);ef.mult(ff,ef)}}}for(this.dispatchEvent(v),g=0;g!==t;g++){var x=l[g];x.preStep&&x.preStep.call(x)}s&&(f=performance.now());{var nf=q,of=z,df=this.stepnumber,tf=c.DYNAMIC|c.KINEMATIC,lf=df%(this.quatNormalizeSkip+1)===0,uf=this.quatNormalizeFast,pf=.5*e;o.types.PLANE,o.types.CONVEXPOLYHEDRON}for(g=0;g!==t;g++){var sf=l[g],yf=sf.force,cf=sf.torque;if(sf.type&tf&&sf.sleepState!==c.SLEEPING){var af=sf.velocity,rf=sf.angularVelocity,wf=sf.position,bf=sf.quaternion,mf=sf.invMass,Nf=sf.invInertiaWorld;af.x+=yf.x*mf*e,af.y+=yf.y*mf*e,af.z+=yf.z*mf*e,sf.angularVelocity&&(Nf.vmult(cf,B),B.mult(e,B),B.vadd(rf,rf)),wf.x+=af.x*e,wf.y+=af.y*e,wf.z+=af.z*e,sf.angularVelocity&&(nf.set(rf.x,rf.y,rf.z,0),nf.mult(bf,of),bf.x+=pf*of.x,bf.y+=pf*of.y,bf.z+=pf*of.z,bf.w+=pf*of.w,lf&&(uf?bf.normalizeFast():bf.normalize())),sf.aabb&&(sf.aabbNeedsUpdate=!0),sf.updateInertiaWorld&&sf.updateInertiaWorld()}}for(this.clearForces(),this.broadphase.dirty=!0,s&&(y.integrate=performance.now()-f),this.time+=e,this.stepnumber+=1,this.dispatchEvent(j),g=0;g!==t;g++){var x=l[g],gf=x.postStep;gf&&gf.call(x)}if(this.allowSleep)for(g=0;g!==t;g++)l[g].sleepTick(this.time)},n.prototype.clearForces=function(){for(var e=this.bodies,f=e.length,n=0;n!==f;n++){{var o=e[n];o.force,o.torque}o.force.set(0,0,0),o.torque.set(0,0,0)}}},{\"../collision/AABB\":3,\"../collision/ArrayCollisionMatrix\":4,\"../collision/NaiveBroadphase\":7,\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../material/ContactMaterial\":24,\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Shape\":43,\"../solver/GSSolver\":46,\"../utils/EventTarget\":49,\"../utils/TupleDictionary\":52,\"../utils/Vec3Pool\":54,\"./Narrowphase\":55}]},{},[2])(2)});"
			}],
		"3BC7F6A4-425D-4554-833F-67410759383A": [
			{
				"name": "hfFemaleBody.js",
				"source": "//\tRLC_SDK_HFBody_v6.json\n\nhfBody = {\n    \"bones\": [{\n        \"name\": \"Genitals\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": -1,\n        \"pos\": [-2.7e-05,15.0028,0.169405]\n    },{\n        \"name\": \"1.Hips\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 0,\n        \"pos\": [2.7e-05,0.144162,0.321899]\n    },{\n        \"name\": \"2.LowerBack\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 1,\n        \"pos\": [-0,2.30816,-0.491099]\n    },{\n        \"name\": \"3.Spine\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 2,\n        \"pos\": [0.008712,3.25595,0.069768]\n    },{\n        \"name\": \"4.Chest\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 3,\n        \"pos\": [-0.072112,1.56253,0.174991]\n    },{\n        \"name\": \"5.Neck\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 4,\n        \"pos\": [0.063054,2.16348,-0.12585]\n    },{\n        \"name\": \"6.Head\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 5,\n        \"pos\": [-0.023034,1.46401,0.411038]\n    },{\n        \"name\": \"7.LeftScapula\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 4,\n        \"pos\": [0.063054,2.16348,-0.12585]\n    },{\n        \"name\": \"8.LeftArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 7,\n        \"pos\": [2.52983,-0.937077,-0.361347]\n    },{\n        \"name\": \"9.LeftForeArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 8,\n        \"pos\": [3.19505,-2.63784,0.444198]\n    },{\n        \"name\": \"10.LeftHand\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 9,\n        \"pos\": [3.19611,-2.32051,1.02422]\n    },{\n        \"name\": \"11.LeftHandFinger\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 10,\n        \"pos\": [1.0844,-0.702997,0.311596]\n    },{\n        \"name\": \"12.LeftHandFinger1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 11,\n        \"pos\": [0.476265,-0.405676,0.16763]\n    },{\n        \"name\": \"13.LeftHandFinger2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 12,\n        \"pos\": [0.366805,-0.348112,0.094266]\n    },{\n        \"name\": \"14.LeftThumbBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 10,\n        \"pos\": [1.0844,-0.702997,0.311596]\n    },{\n        \"name\": \"15.LeftThumb\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 14,\n        \"pos\": [-1.1345,0.465408,0.302213]\n    },{\n        \"name\": \"16.LeftThumb1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 15,\n        \"pos\": [0.180056,-0.478939,0.60054]\n    },{\n        \"name\": \"17.LeftThumb2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 16,\n        \"pos\": [0.092886,-0.289543,0.386178]\n    },{\n        \"name\": \"18.RightScapula\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 4,\n        \"pos\": [0.063054,2.16348,-0.12585]\n    },{\n        \"name\": \"19.RightArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 18,\n        \"pos\": [-2.52867,-0.937096,-0.361214]\n    },{\n        \"name\": \"20.RightForeArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 19,\n        \"pos\": [-3.19598,-2.63734,0.444101]\n    },{\n        \"name\": \"21.RightHand\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 20,\n        \"pos\": [-3.196,-2.32064,1.032]\n    },{\n        \"name\": \"22.RightHandFinger\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 21,\n        \"pos\": [-1.14875,-0.745953,0.339327]\n    },{\n        \"name\": \"23.RightHandFinger1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 22,\n        \"pos\": [-0.499381,-0.387148,0.109694]\n    },{\n        \"name\": \"24.RightHandFinger2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 23,\n        \"pos\": [-0.373054,-0.338717,0.107148]\n    },{\n        \"name\": \"25.RightThumbBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 21,\n        \"pos\": [-1.14875,-0.745953,0.339327]\n    },{\n        \"name\": \"26.RightThumb\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 25,\n        \"pos\": [1.19745,0.436272,0.257659]\n    },{\n        \"name\": \"27.RightThumb1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 26,\n        \"pos\": [-0.176136,-0.458651,0.585481]\n    },{\n        \"name\": \"28.RightThumb2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 27,\n        \"pos\": [-0.070728,-0.239492,0.362029]\n    },{\n        \"name\": \"29.LeftBoob\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 3,\n        \"pos\": [-0.072112,1.56253,0.174991]\n    },{\n        \"name\": \"30.LeftBoobBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 29,\n        \"pos\": [1.79366,0.798965,-0.440115]\n    },{\n        \"name\": \"31.RightBoob\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 3,\n        \"pos\": [-0.072112,1.56253,0.174991]\n    },{\n        \"name\": \"32.RightBoobBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 31,\n        \"pos\": [-1.73021,0.798965,-0.440115]\n    },{\n        \"name\": \"33.RightHip\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 1,\n        \"pos\": [-0,2.30816,-0.491099]\n    },{\n        \"name\": \"34.RightButt\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 33,\n        \"pos\": [-1.43938,-1.60251,0.041129]\n    },{\n        \"name\": \"35.RightUpLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 33,\n        \"pos\": [-1.43938,-1.60251,0.041129]\n    },{\n        \"name\": \"36.RightLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 35,\n        \"pos\": [-0.851619,-7.12582,-0.664236]\n    },{\n        \"name\": \"37.RightFoot\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 36,\n        \"pos\": [-0.7531,-6.81598,-0.370799]\n    },{\n        \"name\": \"38.RightToeBase\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 37,\n        \"pos\": [-0.3779,-2.27964,0.987525]\n    },{\n        \"name\": \"39.LeftHip\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 1,\n        \"pos\": [-0,2.30816,-0.491099]\n    },{\n        \"name\": \"40.LeftButt\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 39,\n        \"pos\": [1.439,-1.60251,0.04113]\n    },{\n        \"name\": \"41.LeftUpLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 39,\n        \"pos\": [1.439,-1.60251,0.04113]\n    },{\n        \"name\": \"42.LeftLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 41,\n        \"pos\": [0.852048,-7.1256,-0.664335]\n    },{\n        \"name\": \"43.LeftFoot\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 42,\n        \"pos\": [0.753052,-6.8162,-0.3707]\n    },{\n        \"name\": \"44.LeftToeBase\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 43,\n        \"pos\": [0.377549,-2.27926,0.988361]\n    }],\n    \"name\": \"rlc_female_nudebodyGeometry.v6\",\n    \"influencesPerVertex\": 4,\n    \"metadata\": {\n        \"materials\": 1,\n        \"bones\": 45,\n        \"vertices\": 4805,\n        \"generator\": \"io_three\",\n        \"version\": 3,\n        \"type\": \"Geometry\",\n        \"faces\": 5066,\n        \"uvs\": 1\n    },\n    \"materials\": [{\n        \"colorSpecular\": [0.5,0.5,0.5],\n        \"visible\": true,\n        \"colorEmissive\": [0,0,0],\n        \"DbgColor\": 15658734,\n        \"transparent\": false,\n        \"DbgName\": \"FemaleBodyMaterial\",\n        \"depthTest\": true,\n        \"depthWrite\": true,\n        \"opacity\": 1,\n        \"shading\": \"lambert\",\n        \"blending\": \"NormalBlending\",\n        \"wireframe\": false,\n        \"colorDiffuse\": [1,1,1],\n        \"DbgIndex\": 0,\n        \"doubleSided\": true,\n        \"specularCoef\": 50\n    }],\n    \"faces\": [10,0,1,2,0,0,1,2,11,3,4,5,6,0,3,4,5,6,11,7,8,9,10,0,7,8,9,10,11,11,12,4,3,0,11,12,4,3,11,1,9,8,2,0,1,9,8,2,11,13,14,15,16,0,13,14,15,16,11,10,9,17,18,0,10,9,17,18,11,9,1,19,17,0,9,1,19,17,10,7,12,11,0,20,12,11,11,14,13,10,18,0,14,13,10,18,10,20,21,22,0,21,22,23,11,23,24,25,26,0,24,25,26,27,11,25,27,28,26,0,26,28,29,27,11,27,29,30,28,0,28,30,31,29,11,29,31,32,30,0,30,32,33,31,11,33,34,35,36,0,34,35,36,37,11,34,37,38,35,0,35,38,39,36,11,37,39,40,38,0,38,40,41,39,11,39,41,42,40,0,42,43,44,45,11,41,43,44,42,0,43,46,47,44,11,43,45,46,44,0,46,48,49,47,11,47,32,31,48,0,50,33,32,51,11,36,47,48,33,0,37,50,51,34,11,45,24,23,46,0,48,25,24,49,11,49,50,51,52,0,52,53,54,55,11,53,54,55,56,0,56,57,58,59,11,52,51,57,58,0,55,54,60,61,11,59,54,53,60,0,62,57,56,63,11,61,62,63,64,0,64,65,66,67,11,56,55,65,66,0,59,58,68,69,11,65,67,68,66,0,68,70,71,69,11,67,69,70,68,0,70,72,73,71,11,57,59,60,58,0,60,62,63,61,11,69,61,64,70,0,74,64,67,75,11,24,54,59,25,0,25,57,62,26,11,25,59,57,27,0,26,62,60,28,11,27,57,51,29,0,28,60,54,30,11,51,50,31,29,0,54,53,32,30,11,71,62,34,33,0,76,65,35,34,11,62,61,37,34,0,65,64,38,35,11,72,73,74,75,0,77,78,79,80,11,75,74,76,77,0,80,79,81,82,11,78,79,77,76,0,83,84,82,81,11,79,78,80,81,0,84,83,85,86,11,82,83,81,80,0,87,88,86,85,11,84,85,83,82,0,89,90,88,87,11,86,87,88,89,0,91,92,93,94,11,87,90,91,88,0,92,95,96,93,11,91,90,92,93,0,97,98,99,100,11,92,94,95,93,0,99,101,102,100,11,94,73,72,95,0,101,78,77,102,11,96,97,98,99,0,103,104,105,106,11,100,101,99,98,0,107,108,106,105,11,102,103,101,100,0,109,110,108,107,11,103,102,104,105,0,110,109,111,112,11,106,107,108,109,0,113,114,115,116,11,107,110,111,108,0,114,117,118,115,11,112,111,110,113,0,119,120,121,122,11,114,112,113,115,0,123,119,122,124,11,116,114,115,117,0,125,123,124,126,11,116,117,118,119,0,125,126,127,128,11,104,102,106,109,0,111,109,113,116,11,84,86,89,85,0,89,91,94,90,11,82,80,17,19,0,87,85,17,19,11,78,18,17,80,0,83,18,17,85,11,18,78,76,14,0,18,83,81,14,11,74,15,14,76,0,79,15,14,81,11,73,120,15,74,0,78,129,15,79,11,121,120,73,94,0,130,129,78,101,11,92,122,121,94,0,99,131,130,101,11,90,123,122,92,0,98,132,131,99,11,124,123,90,87,0,133,134,95,92,11,87,86,125,124,0,92,91,135,133,11,126,125,86,84,0,136,135,91,89,11,126,84,82,19,0,136,89,87,19,11,127,50,49,128,0,137,53,52,138,11,50,127,48,31,0,53,137,51,32,11,129,71,127,128,0,139,76,137,138,11,33,48,127,71,0,34,51,137,76,11,118,97,96,119,0,127,104,103,128,11,105,128,49,103,0,112,138,52,110,11,109,108,64,63,0,116,115,67,66,11,108,111,70,64,0,115,118,75,67,11,111,112,68,70,0,120,119,71,73,11,112,114,66,68,0,119,123,69,71,11,104,129,128,105,0,111,139,138,112,11,129,63,62,71,0,139,66,65,76,11,104,109,63,129,0,111,116,66,139,11,61,69,39,37,0,64,74,40,38,11,65,55,45,43,0,68,58,48,46,11,54,24,45,55,0,57,25,48,58,11,79,98,97,77,0,84,105,104,82,11,98,79,81,100,0,105,84,86,107,10,85,102,83,0,90,109,88,11,102,85,89,106,0,109,90,94,113,11,89,88,107,106,0,94,93,114,113,11,88,91,110,107,0,93,96,117,114,11,91,93,113,110,0,97,100,122,121,11,93,95,115,113,0,100,102,124,122,11,95,72,117,115,0,102,77,126,124,11,117,72,75,118,0,126,77,80,127,11,118,75,77,97,0,127,80,82,104,11,100,81,83,102,0,107,86,88,109,11,66,114,116,56,0,69,123,125,59,11,119,53,56,116,0,128,56,59,125,11,60,53,119,96,0,63,56,128,103,11,58,60,96,99,0,61,63,103,106,11,101,52,58,99,0,108,55,61,106,11,52,101,103,49,0,55,108,110,52,11,130,47,36,131,0,140,50,37,141,11,32,47,130,132,0,33,50,140,142,11,133,30,32,132,0,143,31,33,142,11,28,30,133,134,0,29,31,143,144,11,26,28,134,135,0,27,29,144,145,11,26,135,136,23,0,27,145,146,24,11,46,23,136,137,0,49,24,146,147,11,44,46,137,138,0,47,49,147,148,11,139,42,44,138,0,149,44,47,148,11,40,42,139,140,0,45,44,149,150,10,140,38,40,0,151,39,41,11,131,35,38,140,0,141,36,39,151,10,131,36,35,0,141,37,36,11,43,41,67,65,0,46,43,70,68,11,41,39,69,67,0,43,42,72,70,11,1,0,126,19,0,1,0,136,19,11,0,141,125,126,0,0,152,135,136,11,141,21,20,125,0,152,22,21,135,10,20,123,124,0,21,134,133,11,142,122,123,143,0,153,131,132,154,11,144,121,122,142,0,155,130,131,153,11,144,5,120,121,0,155,156,129,130,11,16,15,120,5,0,16,15,129,156,11,145,146,147,148,0,157,158,159,160,11,149,150,145,148,0,161,162,163,164,11,151,149,148,152,0,165,161,164,166,11,153,152,148,147,0,167,168,160,159,11,154,155,156,157,0,169,170,171,172,11,156,158,159,157,0,171,173,174,172,11,158,160,161,159,0,173,175,176,174,11,160,162,163,161,0,175,177,178,179,11,163,162,164,165,0,178,177,180,181,11,165,164,166,167,0,181,180,182,183,11,167,166,168,169,0,183,182,184,185,11,169,168,155,154,0,186,187,170,169,11,169,154,146,145,0,186,169,158,157,11,153,159,161,152,0,167,174,176,168,11,161,163,151,152,0,179,178,165,166,11,163,165,149,151,0,178,181,161,165,11,149,165,167,150,0,161,181,183,162,11,150,167,169,145,0,162,183,185,163,11,147,157,159,153,0,159,172,174,167,11,147,146,154,157,0,159,158,169,172,11,170,171,172,173,0,188,189,190,191,11,174,175,170,173,0,192,193,194,195,11,176,174,173,177,0,196,192,195,197,11,178,177,173,172,0,198,199,191,190,11,179,180,181,182,0,200,201,202,203,11,182,181,183,184,0,203,202,204,205,11,183,185,186,184,0,204,206,207,205,11,185,187,188,186,0,208,209,210,211,11,187,189,190,188,0,209,212,213,210,11,191,192,190,189,0,214,215,213,212,11,192,191,193,194,0,215,214,216,217,11,194,193,180,179,0,218,219,201,200,11,194,179,171,170,0,218,200,189,188,11,178,184,186,177,0,198,205,207,199,11,186,188,176,177,0,211,210,196,197,11,176,188,190,174,0,196,210,213,192,11,174,190,192,175,0,192,213,215,193,11,175,192,194,170,0,193,215,217,194,11,172,182,184,178,0,190,203,205,198,11,182,172,171,179,0,203,190,189,200,11,195,196,197,198,0,220,221,222,223,11,199,200,195,198,0,224,225,226,227,11,201,199,198,202,0,228,224,227,229,11,203,202,198,197,0,230,231,223,222,11,204,205,206,207,0,232,233,234,235,11,207,206,208,209,0,235,234,236,237,11,208,210,211,209,0,236,238,239,237,11,210,212,213,211,0,240,241,242,243,11,212,214,215,213,0,241,244,245,242,11,214,216,217,215,0,244,246,247,245,11,217,216,218,219,0,247,246,248,249,11,219,218,205,204,0,250,251,233,232,11,219,204,196,195,0,250,232,221,220,11,203,209,211,202,0,230,237,239,231,11,211,213,201,202,0,243,242,228,229,11,213,215,199,201,0,242,245,224,228,11,199,215,217,200,0,224,245,247,225,11,200,217,219,195,0,225,247,249,226,11,197,207,209,203,0,222,235,237,230,11,207,197,196,204,0,235,222,221,232,11,220,221,222,223,0,252,253,254,255,11,224,225,226,227,0,256,257,258,259,11,228,229,230,231,0,260,261,262,263,11,232,233,234,235,0,264,265,266,267,11,236,237,238,239,0,268,269,270,271,11,205,218,240,241,0,233,251,272,273,11,242,210,208,243,0,274,238,236,275,11,212,210,242,244,0,241,240,276,277,11,230,245,246,231,0,262,278,279,263,11,247,248,227,226,0,280,281,259,258,11,244,242,229,228,0,277,276,261,260,11,249,221,220,250,0,282,253,252,283,11,251,225,224,240,0,284,257,256,285,11,251,252,253,225,0,284,286,287,257,11,244,228,253,252,0,277,260,287,286,11,206,205,241,254,0,234,233,273,288,11,252,251,216,214,0,286,284,246,244,11,212,244,252,214,0,241,277,286,244,11,240,218,216,251,0,285,248,246,284,11,206,254,243,208,0,234,288,275,236,11,255,253,228,231,0,289,287,260,263,11,255,226,225,253,0,289,258,257,287,11,255,256,247,226,0,289,290,280,258,11,256,255,231,246,0,290,289,263,279,11,257,250,220,258,0,291,283,252,292,11,259,246,245,239,0,293,279,278,294,11,246,259,260,256,0,279,293,295,290,11,247,256,260,261,0,280,290,295,296,11,261,235,248,247,0,296,297,281,280,11,262,259,239,238,0,298,293,294,299,11,262,263,260,259,0,298,300,295,293,11,258,264,234,265,0,292,301,266,302,11,264,248,235,234,0,301,303,267,266,11,223,227,248,264,0,255,304,303,301,11,223,222,224,227,0,255,254,305,304,11,222,241,240,224,0,254,273,272,305,11,221,254,241,222,0,253,288,273,254,11,243,254,221,249,0,275,288,253,282,11,229,242,243,249,0,306,274,275,282,11,230,229,249,250,0,307,306,282,283,11,250,257,245,230,0,283,291,308,307,11,239,245,257,236,0,271,308,291,268,11,236,257,258,265,0,268,291,292,302,11,264,258,220,223,0,301,292,252,255,11,234,233,266,265,0,266,265,309,302,11,266,237,236,265,0,309,269,268,302,11,267,262,268,269,0,310,298,311,312,11,270,271,272,273,0,313,314,315,316,11,274,275,276,277,0,317,318,319,320,11,278,279,280,281,0,321,322,323,324,11,282,283,284,285,0,325,326,327,328,11,286,287,288,289,0,329,330,331,332,11,286,290,291,287,0,329,333,334,330,11,132,130,292,293,0,142,140,335,336,10,294,133,295,0,337,143,338,10,296,297,298,0,339,340,341,11,299,138,300,301,0,342,343,344,345,11,302,140,139,303,0,346,151,347,348,11,304,305,140,306,0,349,350,151,351,10,307,131,140,0,352,141,151,11,130,131,307,292,0,140,141,352,335,11,308,309,310,311,0,353,354,355,356,11,311,310,312,313,0,356,355,357,358,11,314,315,302,303,0,359,360,346,348,10,292,316,317,0,335,361,362,11,292,317,318,293,0,335,362,363,336,11,293,319,320,295,0,336,364,365,338,11,321,322,323,324,0,366,367,368,369,11,232,325,326,233,0,264,370,371,265,11,327,238,237,328,0,372,270,269,373,10,297,329,330,0,374,375,376,10,331,332,333,0,377,378,379,11,334,335,331,333,0,380,381,382,383,11,336,337,298,297,0,384,385,386,374,11,338,339,340,341,0,387,388,389,390,10,342,319,293,0,391,364,336,11,274,343,344,275,0,317,392,393,318,10,345,295,346,0,394,338,395,11,347,348,349,350,0,396,397,398,399,11,335,351,352,331,0,381,400,401,382,11,269,268,353,354,0,312,311,402,403,11,263,262,267,355,0,300,298,310,404,11,356,357,358,332,0,405,406,407,378,11,359,360,325,232,0,408,409,410,411,11,280,282,285,281,0,323,325,328,324,11,359,261,260,263,0,408,296,295,300,10,266,233,361,0,309,265,412,10,361,237,266,0,412,269,309,11,277,276,349,348,0,320,319,398,397,11,344,343,289,288,0,393,392,332,331,11,362,363,291,290,0,413,414,334,333,11,364,347,350,365,0,415,396,399,416,11,294,295,345,366,0,337,338,394,417,10,307,367,292,0,352,418,335,11,368,314,303,299,0,419,359,348,342,11,303,139,138,299,0,348,347,343,342,11,369,370,339,338,0,420,421,388,387,10,296,341,371,0,339,390,422,11,354,353,271,270,0,403,402,314,313,11,372,373,374,375,0,423,424,425,426,11,376,377,378,379,0,427,428,429,430,10,339,370,380,0,388,421,431,11,381,340,339,382,0,432,389,388,433,11,383,384,340,381,0,434,435,389,432,10,269,368,267,0,312,419,310,10,354,368,269,0,403,419,312,11,314,368,354,270,0,359,419,403,313,11,315,314,270,273,0,360,359,313,316,11,306,302,315,385,0,351,346,360,436,11,386,387,281,285,0,437,438,324,328,11,388,386,285,284,0,439,437,328,327,10,140,302,306,0,151,346,351,11,346,348,347,345,0,395,397,396,394,11,274,277,320,319,0,317,320,365,364,11,342,343,274,319,0,391,392,317,364,11,286,289,318,317,0,329,332,363,362,11,290,286,317,316,0,333,329,362,361,11,307,305,386,388,0,352,350,437,439,11,305,304,387,386,0,350,349,438,437,11,304,306,385,387,0,349,351,436,438,11,389,390,376,379,0,440,440,427,430,11,391,392,312,310,0,441,442,443,444,11,309,393,391,310,0,445,446,441,444,10,394,395,396,0,447,448,449,11,331,352,397,332,0,382,401,450,451,11,347,364,366,345,0,396,415,417,394,11,277,348,346,320,0,320,397,395,365,11,289,343,342,318,0,332,392,391,363,11,362,290,316,367,0,413,333,361,418,11,298,338,341,296,0,341,387,390,339,11,337,398,338,298,0,385,452,453,386,11,399,400,374,373,0,454,455,425,424,11,395,401,402,396,0,448,456,457,449,11,403,404,405,406,0,458,459,460,461,11,407,403,406,408,0,462,463,464,465,11,409,407,408,410,0,466,462,465,467,11,411,409,410,412,0,468,466,467,469,11,411,412,413,414,0,468,469,470,471,11,415,416,414,413,0,472,473,474,475,11,417,334,333,418,0,476,380,383,477,10,419,336,420,0,478,384,479,11,418,333,421,422,0,480,379,481,482,11,423,357,356,424,0,483,406,405,484,11,425,424,356,426,0,485,486,487,488,11,365,350,233,326,0,416,399,265,371,11,350,427,361,233,0,399,489,412,265,11,427,276,237,361,0,489,319,269,412,11,328,237,276,275,0,373,269,319,318,11,428,328,275,429,0,490,373,318,491,11,429,288,322,428,0,491,331,367,490,11,323,322,288,287,0,368,367,331,330,11,323,287,430,431,0,368,330,492,493,11,430,363,283,431,0,492,414,326,493,10,283,363,284,0,326,414,327,11,432,433,434,423,0,494,495,496,483,11,360,435,436,325,0,409,497,498,410,11,433,435,360,434,0,495,497,409,496,11,280,437,438,282,0,323,499,500,325,10,439,323,431,0,501,368,493,10,431,283,439,0,493,326,501,11,279,440,437,280,0,322,502,499,323,11,272,441,440,279,0,503,504,502,322,11,442,443,268,327,0,505,506,311,507,10,444,328,428,0,508,373,490,10,428,322,444,0,490,367,508,11,425,426,445,446,0,485,488,509,510,11,445,365,326,446,0,509,416,371,510,11,364,365,447,448,0,415,416,511,512,11,449,448,447,426,0,513,512,511,488,10,450,447,365,0,514,511,416,10,451,349,276,0,515,398,319,10,427,451,276,0,489,515,319,10,452,344,288,0,516,393,331,10,429,452,288,0,491,516,331,10,453,291,363,0,517,334,414,10,430,453,363,0,492,517,414,11,454,455,448,449,0,518,519,512,513,11,455,366,364,448,0,519,417,415,512,11,351,329,134,133,0,400,375,144,143,10,355,359,263,0,404,408,300,10,360,456,434,0,409,520,496,11,355,381,382,456,0,404,432,433,520,11,267,383,381,355,0,310,434,432,404,11,457,434,456,382,0,521,496,520,433,10,397,449,426,0,450,513,488,11,397,352,454,449,0,450,401,518,513,11,352,351,294,454,0,401,400,337,518,11,135,134,329,297,0,145,144,375,374,11,299,301,458,368,0,342,345,522,419,11,300,137,136,296,0,344,523,524,339,11,341,340,384,371,0,390,389,435,422,11,377,459,460,378,0,428,525,525,429,11,380,421,358,461,0,431,481,407,526,11,357,457,461,358,0,406,521,526,407,11,462,422,421,380,0,527,482,481,431,11,463,462,380,370,0,528,527,431,421,11,464,463,370,369,0,529,528,421,420,11,465,464,369,398,0,530,531,532,452,10,336,419,337,0,384,478,385,11,466,467,462,463,0,533,534,527,528,11,463,464,468,466,0,528,529,535,533,11,465,469,468,464,0,530,536,537,531,11,419,470,469,465,0,478,538,536,530,11,417,471,470,419,0,476,539,538,478,11,418,472,471,417,0,477,540,539,476,11,422,473,472,418,0,482,541,542,480,11,467,473,422,462,0,534,541,482,527,11,337,419,465,398,0,385,478,530,452,11,334,417,419,420,0,380,476,478,479,11,335,334,420,330,0,381,380,479,376,11,329,351,335,330,0,375,400,381,376,11,408,401,474,410,0,465,456,543,467,11,412,410,475,476,0,469,467,544,545,11,412,476,477,413,0,469,545,546,470,11,478,479,399,373,0,547,548,454,424,11,372,480,478,373,0,423,549,547,424,11,408,406,402,401,0,465,464,457,456,11,473,481,394,472,0,541,550,447,542,11,482,481,473,467,0,551,550,541,534,11,483,482,467,466,0,552,551,534,533,11,483,466,468,484,0,552,533,535,553,11,459,474,401,395,0,525,543,456,448,11,377,475,474,459,0,428,544,543,525,11,376,476,475,377,0,427,545,544,428,11,379,483,484,389,0,430,552,553,440,11,379,378,482,483,0,430,429,551,552,11,481,482,378,460,0,550,551,429,525,11,390,477,476,376,0,440,546,545,427,11,485,486,416,415,0,554,555,473,472,11,404,486,485,405,0,459,555,554,460,10,405,485,487,0,460,554,556,10,487,485,415,0,556,554,472,11,416,313,312,414,0,473,358,357,474,11,486,488,313,416,0,555,557,358,473,11,308,488,486,404,0,353,557,555,459,11,309,308,404,403,0,354,353,459,458,11,393,309,403,407,0,446,445,463,462,11,409,391,393,407,0,466,441,446,462,11,392,391,409,411,0,442,441,466,468,11,392,411,414,312,0,442,468,471,443,11,469,489,484,468,0,536,558,559,537,11,389,484,489,490,0,560,559,558,561,11,477,390,490,479,0,562,563,561,548,11,479,415,413,477,0,548,472,475,562,11,478,487,415,479,0,547,556,472,548,11,480,405,487,478,0,549,460,556,547,11,406,405,480,402,0,461,460,549,564,11,402,480,491,396,0,564,549,565,566,11,396,491,492,394,0,566,565,567,568,11,394,492,471,472,0,568,567,539,540,11,471,492,493,470,0,539,567,569,538,11,470,493,489,469,0,538,569,558,536,11,479,490,400,399,0,548,561,455,454,11,375,491,480,372,0,426,565,549,423,11,375,494,492,491,0,426,570,567,565,11,495,400,490,489,0,571,455,561,558,11,397,426,356,332,0,450,488,487,451,10,447,450,426,0,511,514,488,10,426,450,445,0,488,514,509,10,445,450,365,0,509,514,416,10,294,366,455,0,337,417,519,10,349,451,350,0,398,515,399,10,344,452,275,0,393,516,318,10,291,453,287,0,334,517,330,10,350,451,427,0,399,515,489,10,275,452,429,0,318,516,491,10,287,453,430,0,330,517,492,11,284,363,362,388,0,327,414,413,439,11,492,494,496,493,0,567,570,572,569,11,496,495,489,493,0,572,571,558,569,11,374,400,495,496,0,425,455,571,572,11,374,496,494,375,0,425,572,570,426,11,497,498,499,500,0,573,574,575,576,11,501,502,503,504,0,577,578,579,580,11,505,506,497,500,0,581,582,583,584,11,507,508,509,510,0,585,586,587,588,11,511,512,424,425,0,589,590,486,485,11,512,432,423,424,0,591,494,483,484,11,325,436,513,326,0,370,592,593,371,10,514,425,446,0,594,485,510,10,446,326,514,0,510,371,594,11,515,505,500,516,0,595,581,584,596,11,517,516,500,499,0,597,598,576,575,11,518,519,520,521,0,599,600,601,602,11,520,519,522,523,0,601,600,603,604,11,522,524,525,523,0,603,605,606,604,11,524,526,527,525,0,607,608,609,610,11,526,528,529,527,0,608,611,612,609,11,530,531,529,528,0,613,614,612,611,11,531,530,532,533,0,614,613,615,616,11,533,532,518,521,0,617,618,599,602,11,532,534,535,518,0,618,619,620,599,11,524,522,536,537,0,605,603,621,622,11,526,524,537,538,0,608,607,623,624,11,539,528,526,538,0,625,611,608,624,11,509,540,541,510,0,587,626,627,588,11,542,543,504,503,0,628,629,580,579,11,538,537,508,507,0,624,623,586,585,11,544,545,546,547,0,630,631,632,633,11,548,502,501,534,0,634,578,577,635,11,548,539,549,502,0,634,625,636,578,11,538,507,549,539,0,624,585,636,625,11,519,518,535,550,0,600,599,620,637,11,533,521,498,497,0,617,602,574,573,11,517,523,525,516,0,597,604,606,598,11,525,527,515,516,0,610,609,595,596,11,515,527,529,505,0,595,609,612,581,11,505,529,531,506,0,581,612,614,582,11,506,531,533,497,0,582,614,616,583,11,539,548,530,528,0,625,634,613,611,11,534,532,530,548,0,635,615,613,634,11,519,550,536,522,0,600,637,621,603,11,551,549,507,510,0,638,636,585,588,11,551,503,502,549,0,638,579,578,636,11,552,553,544,547,0,639,640,630,633,11,503,551,554,542,0,579,638,641,628,11,554,551,510,541,0,641,638,588,627,11,555,556,544,553,0,642,643,630,640,11,557,545,544,556,0,644,631,630,643,11,541,540,436,435,0,627,626,498,497,11,554,541,435,433,0,641,627,497,495,11,432,542,554,433,0,494,628,641,495,11,432,512,543,542,0,494,591,629,628,11,556,555,511,558,0,643,642,589,645,11,555,543,512,511,0,642,646,590,589,11,553,504,543,555,0,640,647,646,642,11,552,501,504,553,0,639,648,647,640,11,534,501,552,535,0,619,648,639,620,11,547,550,535,552,0,633,637,620,639,11,536,550,547,546,0,621,637,633,632,11,508,537,536,546,0,649,622,621,632,11,509,508,546,545,0,650,649,632,631,11,545,557,540,509,0,631,644,651,650,11,436,540,557,513,0,592,651,644,593,11,513,557,556,558,0,593,644,643,645,11,514,558,511,425,0,594,645,589,485,11,513,558,514,326,0,593,645,594,371,11,559,560,561,562,0,652,653,654,655,11,563,564,565,566,0,656,657,658,659,11,567,568,569,570,0,660,661,662,663,11,571,572,324,323,0,664,665,369,368,11,282,438,573,283,0,325,500,666,326,11,155,168,574,575,0,170,187,667,668,11,156,155,575,576,0,171,170,668,669,11,158,577,578,160,0,173,670,671,175,11,162,160,578,579,0,177,175,671,672,11,559,580,581,582,0,652,673,674,675,11,583,584,570,569,0,676,677,663,662,11,585,586,566,565,0,678,679,659,658,11,579,578,568,567,0,672,671,661,660,11,559,582,587,560,0,652,675,680,653,11,588,564,563,574,0,681,657,656,682,11,564,588,589,590,0,657,681,683,684,11,579,567,590,589,0,672,660,684,683,11,589,588,166,164,0,683,681,182,180,11,162,579,589,164,0,177,672,683,180,11,574,168,166,588,0,682,184,182,681,11,156,576,577,158,0,171,669,670,173,11,591,590,567,570,0,685,684,660,663,11,590,591,565,564,0,684,685,658,657,11,565,591,592,585,0,658,685,686,678,11,592,591,570,584,0,686,685,663,677,11,559,562,593,580,0,652,655,687,673,11,437,584,583,438,0,499,677,676,500,11,584,437,440,592,0,677,499,502,686,11,441,585,592,440,0,504,678,686,502,11,441,572,586,585,0,504,688,679,678,11,272,324,572,441,0,503,503,688,504,11,580,593,571,594,0,673,687,664,689,11,593,586,572,571,0,687,690,665,664,11,562,566,586,593,0,655,691,690,687,11,562,561,563,566,0,655,654,692,691,11,575,574,563,561,0,668,667,692,654,11,560,576,575,561,0,653,669,668,654,11,587,577,576,560,0,680,670,669,653,11,568,578,577,587,0,661,671,670,680,11,582,569,568,587,0,675,662,661,680,11,582,581,583,569,0,675,674,676,662,11,438,583,581,573,0,500,676,674,666,11,573,581,580,594,0,666,674,673,689,11,439,594,571,323,0,501,689,664,368,11,573,594,439,283,0,666,689,501,326,11,595,596,597,598,0,693,694,695,696,11,599,596,595,600,0,697,694,693,698,11,601,602,603,604,0,699,700,701,702,11,605,606,607,608,0,703,704,705,706,11,609,442,327,328,0,707,708,372,373,11,271,610,611,321,0,314,709,710,711,11,321,611,612,322,0,366,712,713,367,11,180,193,613,614,0,201,219,714,715,11,181,180,614,615,0,202,201,715,716,11,616,185,183,617,0,717,206,204,718,11,187,185,616,618,0,209,208,719,720,11,619,620,608,607,0,721,722,706,705,11,621,622,604,603,0,723,724,702,701,11,618,616,606,605,0,720,719,704,703,11,623,602,601,613,0,725,700,699,726,11,623,624,625,602,0,725,727,728,700,11,618,605,625,624,0,720,703,728,727,11,624,623,191,189,0,727,725,214,212,11,187,618,624,189,0,209,720,727,212,11,613,193,191,623,0,726,216,214,725,11,181,615,617,183,0,202,716,718,204,11,608,626,625,605,0,706,729,728,703,11,625,626,603,602,0,728,729,701,700,11,603,626,627,621,0,701,729,730,723,11,627,626,608,620,0,730,729,706,722,11,595,598,628,629,0,693,696,731,732,11,620,619,611,610,0,722,721,710,709,11,620,610,630,627,0,722,709,733,730,11,621,627,630,443,0,723,730,733,506,11,443,442,622,621,0,506,505,724,723,11,353,630,610,271,0,402,733,709,314,11,630,353,268,443,0,733,402,311,506,11,629,628,609,631,0,732,731,707,734,11,628,622,442,609,0,731,735,708,707,11,598,604,622,628,0,696,736,735,731,11,597,601,604,598,0,695,737,736,696,11,613,601,597,614,0,714,737,695,715,11,596,615,614,597,0,694,716,715,695,11,617,615,596,599,0,718,716,694,697,11,606,616,617,599,0,738,717,718,697,11,607,606,599,600,0,739,738,697,698,11,600,632,619,607,0,698,740,741,739,11,611,619,632,612,0,712,741,740,713,11,612,632,629,631,0,713,740,732,734,11,595,629,632,600,0,693,732,740,698,11,444,631,609,328,0,508,734,707,373,11,612,631,444,322,0,713,734,508,367,11,235,261,359,232,0,297,296,408,411,11,273,272,279,278,0,316,742,322,321,11,268,262,238,327,0,311,298,299,507,11,271,321,324,272,0,314,711,503,315,10,301,383,458,0,345,434,522,10,460,459,395,0,525,525,448,10,490,390,389,0,561,563,560,10,369,338,398,0,532,453,452,10,454,294,455,0,518,337,519,10,295,320,346,0,338,365,395,10,318,342,293,0,363,391,336,10,292,367,316,0,335,418,361,11,420,336,297,330,0,479,384,374,376,11,311,313,488,308,0,356,358,557,353,11,499,520,523,517,0,575,601,604,597,11,520,499,498,521,0,601,575,574,602,11,457,357,423,434,0,521,406,483,496,11,387,385,278,281,0,438,436,321,324,11,278,385,315,273,0,321,436,360,316,10,138,137,300,0,343,523,344,10,307,140,305,0,352,151,350,11,388,362,367,307,0,439,413,418,352,11,132,293,295,133,0,142,336,338,143,11,358,421,333,332,0,407,481,379,378,11,368,458,383,267,0,419,522,434,310,11,296,136,135,297,0,339,524,743,340,11,300,296,371,301,0,344,339,422,345,11,301,371,384,383,0,345,422,435,434,10,457,382,461,0,521,433,526,11,355,456,360,359,0,404,520,409,408,11,339,380,461,382,0,388,431,526,433,11,481,460,395,394,0,550,525,448,447,10,474,475,410,0,543,544,467,10,351,133,294,0,400,143,337,10,633,634,635,0,744,745,746,10,636,637,638,0,747,748,749,11,639,640,641,642,0,750,751,752,753,11,643,636,638,644,0,754,747,749,755,11,642,641,634,633,0,753,752,745,744,11,644,638,645,646,0,755,749,756,757,11,647,641,640,648,0,758,752,751,759,11,649,634,641,647,0,760,745,752,758,11,639,643,644,640,0,750,754,755,751,11,646,648,640,644,0,757,759,751,755,10,650,651,652,0,761,762,763,11,653,654,655,656,0,764,765,766,767,11,657,658,655,654,0,768,769,766,765,11,659,660,658,657,0,770,771,769,768,11,661,662,660,659,0,772,773,771,770,11,663,664,665,666,0,774,775,776,777,11,667,668,664,663,0,778,779,775,774,11,669,670,668,667,0,780,781,779,778,11,671,672,670,669,0,782,783,784,785,11,673,674,672,671,0,786,787,783,782,11,675,676,674,673,0,788,789,787,786,11,677,678,662,661,0,790,791,773,772,11,666,665,678,677,0,777,776,791,790,11,676,675,653,656,0,789,788,764,767,11,679,680,681,682,0,792,793,794,795,11,683,684,685,686,0,796,797,798,799,11,680,687,688,681,0,793,800,801,794,11,683,686,689,690,0,796,799,802,803,11,691,692,693,694,0,804,805,806,807,11,684,695,696,685,0,797,808,809,798,11,697,698,696,695,0,810,811,809,808,11,699,700,698,697,0,812,813,811,810,11,690,689,688,687,0,803,802,801,800,11,694,693,700,699,0,807,806,814,815,11,656,655,689,686,0,767,766,802,799,11,655,658,688,689,0,766,769,801,802,11,658,660,681,688,0,769,771,794,801,11,662,682,681,660,0,773,795,794,771,11,664,692,701,665,0,775,805,816,776,11,668,693,692,664,0,779,806,805,775,11,702,703,704,705,0,817,818,819,820,11,703,706,707,704,0,818,821,822,819,11,706,708,709,707,0,821,823,824,822,11,708,710,711,709,0,823,825,826,824,11,710,712,713,711,0,825,827,828,826,11,714,713,712,715,0,829,828,827,830,11,716,717,718,719,0,831,832,833,834,11,720,721,719,718,0,835,836,834,833,11,720,722,723,721,0,837,838,839,840,11,724,725,723,722,0,841,842,839,838,11,702,705,725,724,0,817,820,842,841,11,726,727,728,729,0,843,844,845,846,11,730,728,727,731,0,847,845,844,848,11,731,732,733,730,0,848,849,850,847,11,732,734,735,733,0,849,851,852,850,11,736,737,738,739,0,853,854,855,856,11,740,741,737,736,0,857,858,854,853,11,741,740,742,743,0,859,860,861,862,11,743,742,744,745,0,862,861,863,864,11,745,744,746,747,0,864,863,865,866,11,746,748,749,747,0,865,867,868,866,11,735,739,738,733,0,852,856,855,850,11,717,716,714,715,0,832,831,829,830,11,647,711,713,649,0,758,826,828,760,11,709,711,647,648,0,824,826,758,759,11,648,646,707,709,0,759,757,822,824,11,704,707,646,645,0,819,822,757,756,11,705,704,645,750,0,820,819,756,869,11,705,750,751,725,0,820,869,870,842,11,723,725,751,752,0,839,842,870,871,11,721,723,752,753,0,840,839,871,872,11,721,753,754,719,0,836,873,874,834,11,755,716,719,754,0,875,831,834,874,11,716,755,756,714,0,831,875,876,829,11,756,649,713,714,0,876,760,828,829,11,679,682,757,758,0,792,795,877,878,11,682,662,678,757,0,795,773,791,877,11,757,701,759,758,0,877,816,879,878,11,665,701,757,678,0,776,816,877,791,11,749,748,726,729,0,868,867,843,846,11,679,758,734,732,0,792,878,851,849,11,739,691,694,736,0,856,804,807,853,11,699,740,736,694,0,815,857,853,807,11,697,742,740,699,0,810,861,860,812,11,695,744,742,697,0,808,863,861,810,11,735,734,758,759,0,852,851,878,879,11,692,691,759,701,0,805,804,879,816,11,691,739,735,759,0,804,856,852,879,11,670,700,693,668,0,781,814,806,779,11,676,685,696,674,0,789,798,809,787,11,676,656,686,685,0,789,767,799,798,11,729,728,708,706,0,846,845,823,821,11,728,730,710,708,0,845,847,825,823,10,715,712,733,0,830,827,850,11,733,738,717,715,0,850,855,832,830,11,717,738,737,718,0,832,855,854,833,11,741,720,718,737,0,858,835,833,854,11,743,722,720,741,0,862,838,837,859,11,745,724,722,743,0,864,841,838,862,11,747,702,724,745,0,866,817,841,864,11,747,749,703,702,0,866,868,818,817,11,749,729,706,703,0,868,846,821,818,11,730,733,712,710,0,847,850,827,825,11,695,684,746,744,0,808,797,865,863,11,748,746,684,683,0,867,865,797,796,11,748,683,690,726,0,867,796,803,843,11,726,690,687,727,0,843,803,800,844,11,731,727,687,680,0,848,844,800,793,11,680,679,732,731,0,793,792,849,848,11,760,761,666,677,0,880,881,777,790,11,760,677,661,762,0,880,790,772,882,11,763,762,661,659,0,883,882,772,770,11,763,659,657,764,0,883,770,768,884,11,764,657,654,765,0,884,768,765,885,11,654,653,766,765,0,765,764,886,885,11,766,653,675,767,0,886,764,788,887,11,767,675,673,768,0,887,788,786,888,11,769,768,673,671,0,889,888,786,782,11,769,671,669,770,0,889,782,785,890,10,770,669,667,0,891,780,778,11,761,770,667,663,0,881,891,778,774,10,761,663,666,0,881,774,777,11,698,672,674,696,0,811,783,787,809,11,700,670,672,698,0,813,784,783,811,11,634,649,756,635,0,745,760,876,746,11,635,756,755,771,0,746,876,875,892,10,650,755,754,0,761,875,874,11,650,753,772,651,0,761,873,893,762,11,753,752,773,772,0,872,871,894,895,11,752,751,774,773,0,871,870,896,894,11,774,751,750,637,0,896,870,869,748,11,638,637,750,645,0,749,748,869,756,11,775,776,777,778,0,897,898,899,900,11,777,779,780,778,0,901,902,903,904,11,778,780,781,782,0,904,903,905,906,11,783,775,778,782,0,907,897,900,908,11,784,785,786,787,0,909,910,911,912,11,788,789,786,785,0,913,914,911,910,11,790,791,789,788,0,915,916,914,913,11,792,793,791,790,0,917,918,916,919,11,792,794,795,793,0,917,920,921,918,11,794,796,797,795,0,920,922,923,921,11,796,798,799,797,0,922,924,925,923,11,798,784,787,799,0,926,909,912,927,11,776,784,798,777,0,898,909,926,899,11,783,782,790,788,0,907,908,915,913,11,781,792,790,782,0,905,917,919,906,11,780,794,792,781,0,903,920,917,905,11,780,779,796,794,0,903,902,922,920,11,779,777,798,796,0,902,901,924,922,11,788,785,775,783,0,913,910,897,907,11,784,776,775,785,0,909,898,897,910,11,800,801,802,803,0,928,929,930,931,11,802,804,805,803,0,932,933,934,935,11,803,805,806,807,0,935,934,936,937,11,808,800,803,807,0,938,928,931,939,11,809,810,811,812,0,940,941,942,943,11,810,813,814,811,0,941,944,945,942,11,815,816,814,813,0,946,947,945,944,11,817,818,816,815,0,948,949,950,951,11,819,820,818,817,0,952,953,949,948,11,821,820,819,822,0,954,953,952,955,11,822,823,824,821,0,955,956,957,954,11,823,809,812,824,0,958,940,943,959,11,801,809,823,802,0,929,940,958,930,11,808,807,815,813,0,938,939,946,944,11,806,817,815,807,0,936,948,951,937,11,806,805,819,817,0,936,934,952,948,11,805,804,822,819,0,934,933,955,952,11,804,802,823,822,0,933,932,956,955,11,813,810,800,808,0,944,941,928,938,11,810,809,801,800,0,941,940,929,928,11,825,826,827,828,0,960,961,962,963,11,827,829,830,828,0,964,965,966,967,11,828,830,831,832,0,967,966,968,969,11,833,825,828,832,0,970,960,963,971,11,834,835,836,837,0,972,973,974,975,11,835,838,839,836,0,973,976,977,974,11,840,841,839,838,0,978,979,977,976,11,842,843,841,840,0,980,981,982,983,11,844,845,843,842,0,984,985,981,980,11,846,847,845,844,0,986,987,985,984,11,846,848,849,847,0,986,988,989,987,11,848,834,837,849,0,990,972,975,991,11,826,834,848,827,0,961,972,990,962,11,833,832,840,838,0,970,971,978,976,11,831,842,840,832,0,968,980,983,969,11,830,844,842,831,0,966,984,980,968,11,830,829,846,844,0,966,965,986,984,11,829,827,848,846,0,965,964,988,986,11,838,835,825,833,0,976,973,960,970,11,835,834,826,825,0,973,972,961,960,11,850,851,852,853,0,992,993,994,995,11,854,855,856,857,0,996,997,998,999,11,858,859,860,861,0,1000,1001,1002,1003,11,862,863,864,865,0,1004,1005,1006,1007,11,866,867,868,869,0,1008,1009,1010,1011,11,837,870,871,849,0,975,1012,1013,991,11,872,873,839,841,0,1014,1015,977,979,11,872,841,843,874,0,1016,982,981,1017,11,858,861,875,876,0,1000,1003,1018,1019,11,857,877,878,854,0,999,1020,1021,996,11,859,872,874,860,0,1001,1016,1017,1002,11,852,851,879,880,0,994,993,1022,1023,11,881,871,856,855,0,1024,1025,998,997,11,882,883,881,855,0,1026,1027,1024,997,11,874,883,882,860,0,1017,1027,1026,1002,11,836,884,870,837,0,974,1028,1012,975,11,847,881,883,845,0,987,1024,1027,985,11,843,845,883,874,0,981,985,1027,1017,11,847,849,871,881,0,987,989,1025,1024,11,873,884,836,839,0,1015,1028,974,977,11,860,882,885,861,0,1002,1026,1029,1003,11,855,854,885,882,0,997,996,1029,1026,11,878,886,885,854,0,1021,1030,1029,996,11,886,875,861,885,0,1030,1018,1003,1029,11,887,888,852,880,0,1031,1032,994,1023,11,889,867,876,875,0,1033,1034,1019,1018,11,890,889,875,886,0,1035,1033,1018,1030,11,890,886,878,891,0,1035,1030,1021,1036,11,877,865,891,878,0,1020,1037,1036,1021,11,867,889,892,868,0,1034,1033,1038,1039,11,890,893,892,889,0,1035,1040,1038,1033,11,862,894,888,895,0,1004,1041,1032,1042,11,865,877,894,862,0,1007,1043,1041,1004,11,877,857,853,894,0,1043,1044,995,1041,11,853,857,856,850,0,995,1044,1045,992,11,850,856,871,870,0,992,1045,1013,1012,11,851,850,870,884,0,993,992,1012,1028,11,851,884,873,879,0,993,1028,1015,1022,11,859,879,873,872,0,1046,1022,1015,1014,11,879,859,858,880,0,1022,1046,1047,1023,11,880,858,876,887,0,1023,1047,1048,1031,11,867,866,887,876,0,1009,1008,1031,1048,11,866,895,888,887,0,1008,1042,1032,1031,11,894,853,852,888,0,1041,995,994,1032,11,862,895,896,863,0,1004,1042,1049,1005,11,866,869,896,895,0,1008,1011,1049,1042,11,897,898,899,892,0,1050,1051,1052,1038,11,900,901,902,903,0,1053,1054,1055,1056,11,904,905,906,907,0,1057,1058,1059,1060,11,908,909,910,911,0,1061,1062,1063,1064,11,912,913,914,915,0,1065,1066,1067,1068,11,916,917,918,919,0,1069,1070,1071,1072,11,916,919,920,921,0,1069,1072,1073,1074,11,922,760,762,923,0,1075,880,882,1076,10,924,925,763,0,1077,1078,883,10,926,927,928,0,1079,1080,1081,11,929,930,931,768,0,1082,1083,1084,1085,11,932,933,769,770,0,1086,1087,1088,891,11,934,935,770,936,0,1089,1090,891,1091,10,937,770,761,0,1092,891,881,11,937,761,760,922,0,1092,881,880,1075,11,938,939,940,941,0,1093,1094,1095,1096,11,939,942,943,940,0,1094,1097,1098,1095,11,932,944,945,933,0,1086,1099,1100,1087,10,922,946,947,0,1075,1101,1102,11,922,923,948,946,0,1075,1076,1103,1101,11,923,925,949,950,0,1076,1078,1104,1105,11,951,952,953,954,0,1106,1107,1108,1109,11,864,863,955,956,0,1006,1005,1110,1111,11,957,958,869,868,0,1112,1113,1011,1010,10,928,959,960,0,1114,1115,1116,10,961,962,963,0,1117,1118,1119,11,964,962,961,965,0,1120,1121,1122,1123,11,927,966,967,928,0,1124,1125,1126,1114,11,968,969,970,971,0,1127,1128,1129,1130,10,972,923,950,0,1131,1076,1105,11,904,907,973,974,0,1057,1060,1132,1133,10,975,976,925,0,1134,1135,1078,11,977,978,979,980,0,1136,1137,1138,1139,11,965,961,981,982,0,1123,1122,1140,1141,11,898,983,984,899,0,1051,1142,1143,1052,11,897,892,893,985,0,1050,1038,1040,1144,11,986,987,988,963,0,1145,1146,1147,1119,11,989,864,956,990,0,1148,1149,1150,1151,11,915,914,910,909,0,1068,1067,1063,1062,11,989,893,890,891,0,1148,1040,1035,1036,10,896,991,863,0,1049,1152,1005,10,991,896,869,0,1152,1049,1011,11,979,906,905,980,0,1138,1059,1058,1139,11,917,974,973,918,0,1070,1133,1132,1071,11,920,992,993,921,0,1073,1153,1154,1074,11,978,977,994,995,0,1137,1136,1155,1156,11,924,996,975,925,0,1077,1157,1134,1078,10,937,922,997,0,1092,1075,1158,11,998,929,933,945,0,1159,1082,1087,1100,11,933,929,768,769,0,1087,1082,1085,1088,11,999,968,971,1000,0,1160,1127,1130,1161,10,926,1001,969,0,1079,1162,1128,11,983,900,903,984,0,1142,1053,1056,1143,11,1002,1003,1004,1005,0,1163,1164,1165,1166,11,1006,1007,1008,1009,0,1167,1168,1169,1170,10,971,1010,1000,0,1130,1171,1161,11,971,970,1011,1012,0,1130,1129,1172,1173,11,970,1013,1014,1011,0,1129,1174,1175,1172,10,898,897,998,0,1051,1050,1159,10,983,898,998,0,1142,1051,1159,11,983,998,945,900,0,1142,1159,1100,1053,11,900,945,944,901,0,1053,1100,1099,1054,11,944,932,935,1015,0,1099,1086,1090,1176,11,909,1016,1017,915,0,1062,1177,1178,1068,11,915,1017,1018,912,0,1068,1178,1179,1065,10,770,935,932,0,891,1090,1086,11,976,975,977,980,0,1135,1134,1136,1139,11,949,905,904,950,0,1104,1058,1057,1105,11,972,950,904,974,0,1131,1105,1057,1133,11,948,917,916,946,0,1103,1070,1069,1101,11,946,916,921,947,0,1101,1069,1074,1102,11,937,1018,1017,936,0,1092,1179,1178,1091,11,1016,934,936,1017,0,1177,1089,1091,1178,11,1015,935,934,1016,0,1176,1090,1089,1177,11,1019,1009,1008,1020,0,1180,1170,1169,1180,11,943,1021,1022,940,0,1181,1182,1183,1184,11,941,940,1022,1023,0,1185,1184,1183,1186,10,1024,1025,1026,0,1187,1188,1189,11,961,963,1027,981,0,1122,1190,1191,1140,11,996,994,977,975,0,1157,1155,1136,1134,11,905,949,976,980,0,1058,1104,1135,1139,11,917,948,972,974,0,1070,1103,1131,1133,11,993,997,947,921,0,1154,1158,1102,1074,11,927,926,969,968,0,1080,1079,1128,1127,11,968,1028,966,927,0,1192,1193,1125,1124,11,1029,1005,1004,1030,0,1194,1166,1165,1195,11,1026,1025,1031,1032,0,1189,1188,1196,1197,11,1033,1034,1035,1036,0,1198,1199,1200,1201,11,1036,1035,1037,1038,0,1202,1203,1204,1205,11,1038,1037,1039,1040,0,1205,1204,1206,1207,11,1040,1039,1041,1042,0,1207,1206,1208,1209,11,1041,1043,1044,1042,0,1208,1210,1211,1209,11,1045,1044,1043,1046,0,1212,1213,1214,1215,11,1047,1048,962,964,0,1216,1217,1121,1120,10,1049,1050,967,0,1218,1219,1126,11,1051,962,1048,1052,0,1220,1118,1221,1222,11,1053,1054,988,987,0,1223,1224,1147,1146,11,988,1054,1055,1056,0,1225,1226,1227,1228,11,863,978,995,955,0,1005,1137,1156,1110,11,991,1057,978,863,0,1152,1229,1137,1005,11,1057,991,869,906,0,1229,1152,1011,1059,11,906,869,958,907,0,1059,1011,1113,1060,11,1058,1059,907,958,0,1230,1231,1060,1113,11,1059,1058,952,918,0,1231,1230,1107,1071,11,918,952,951,919,0,1071,1107,1106,1072,11,1060,919,951,1061,0,1232,1072,1106,1233,11,1060,1061,913,992,0,1232,1233,1066,1153,10,913,912,992,0,1066,1065,1153,11,1062,1063,1064,1053,0,1234,1235,1236,1223,11,990,956,1065,1066,0,1151,1150,1237,1238,11,990,1066,1063,1062,0,1151,1238,1235,1234,11,1067,1068,910,914,0,1239,1240,1063,1067,10,1069,1061,951,0,1241,1233,1106,10,1061,1069,913,0,1233,1241,1066,11,1068,1070,911,910,0,1240,1242,1064,1063,11,1070,1071,902,911,0,1242,1243,1244,1064,11,899,1072,1073,957,0,1052,1245,1246,1247,10,1074,1058,958,0,1248,1230,1113,10,1058,1074,952,0,1230,1248,1107,11,1075,1056,1055,1076,0,1249,1228,1227,1250,11,1075,1076,955,995,0,1249,1250,1110,1156,11,1077,995,994,1078,0,1251,1156,1155,1252,11,1079,1056,1077,1078,0,1253,1228,1251,1252,10,1080,995,1077,0,1254,1156,1251,10,1081,906,979,0,1255,1059,1138,10,1057,906,1081,0,1229,1059,1255,10,1082,918,973,0,1256,1071,1132,10,1059,918,1082,0,1231,1071,1256,10,1083,992,920,0,1257,1153,1073,10,1060,992,1083,0,1232,1153,1257,11,1084,1079,1078,1085,0,1258,1253,1252,1259,11,1085,1078,994,996,0,1259,1252,1155,1157,11,982,763,764,960,0,1141,883,884,1116,10,985,893,989,0,1144,1040,1148,10,990,1062,1086,0,1151,1234,1260,11,985,1086,1012,1011,0,1144,1260,1173,1172,11,1011,1014,897,985,0,1172,1175,1050,1144,11,1087,1012,1086,1062,0,1261,1173,1260,1234,10,1027,1056,1079,0,1191,1228,1253,11,1084,981,1027,1079,0,1258,1140,1191,1253,11,924,982,981,1084,0,1077,1141,1140,1258,11,765,928,960,764,0,885,1114,1116,884,11,1088,930,929,998,0,1262,1083,1082,1159,11,766,767,931,926,0,1263,1264,1084,1079,11,969,1001,1013,970,0,1128,1162,1174,1129,11,1007,1006,1089,1090,0,1168,1167,1265,1265,11,986,1051,1010,1091,0,1145,1220,1171,1266,11,1091,1087,987,986,0,1266,1261,1146,1145,11,1092,1010,1051,1052,0,1267,1171,1220,1222,11,1010,1092,1093,1000,0,1171,1267,1268,1161,11,1000,1093,1094,999,0,1161,1268,1269,1160,11,999,1094,1095,1028,0,1270,1271,1272,1193,10,967,966,1049,0,1126,1125,1218,11,1092,1096,1097,1093,0,1267,1273,1274,1268,11,1098,1094,1093,1097,0,1275,1269,1268,1274,11,1095,1094,1098,1099,0,1272,1271,1276,1277,11,1049,1095,1099,1100,0,1218,1272,1277,1278,11,1047,1049,1100,1101,0,1216,1218,1278,1279,11,1048,1047,1101,1102,0,1217,1216,1279,1280,11,1052,1048,1102,1103,0,1222,1221,1281,1282,11,1052,1103,1096,1092,0,1222,1282,1273,1267,11,1095,1049,966,1028,0,1272,1218,1125,1193,11,1049,1047,964,1050,0,1218,1216,1120,1219,11,1050,964,965,959,0,1219,1120,1123,1115,11,965,982,960,959,0,1123,1141,1116,1115,11,1038,1040,1104,1032,0,1205,1207,1283,1197,11,1105,1040,1042,1106,0,1284,1207,1209,1285,11,1107,1106,1042,1044,0,1286,1285,1209,1211,11,1029,1108,1109,1005,0,1194,1287,1288,1166,11,1002,1005,1109,1110,0,1163,1166,1288,1289,11,1031,1036,1038,1032,0,1196,1202,1205,1197,11,1103,1102,1024,1111,0,1282,1281,1187,1290,11,1103,1111,1112,1096,0,1282,1290,1291,1273,11,1096,1112,1113,1097,0,1273,1291,1292,1274,11,1113,1114,1098,1097,0,1292,1293,1275,1274,11,1090,1026,1032,1104,0,1265,1189,1197,1283,11,1007,1090,1104,1105,0,1168,1265,1283,1284,11,1008,1007,1105,1106,0,1169,1168,1284,1285,11,1009,1019,1114,1113,0,1170,1180,1293,1292,11,1112,1006,1009,1113,0,1291,1167,1170,1292,11,1006,1112,1111,1089,0,1167,1291,1290,1265,11,1106,1107,1020,1008,0,1285,1286,1180,1169,11,1046,1115,1116,1045,0,1215,1294,1295,1212,11,1034,1033,1116,1115,0,1199,1198,1295,1294,10,1033,1117,1116,0,1198,1296,1295,10,1117,1045,1116,0,1296,1212,1295,11,1046,1043,943,942,0,1215,1214,1098,1097,11,1115,1046,942,1118,0,1294,1215,1097,1297,11,938,1034,1115,1118,0,1093,1199,1294,1297,11,1034,938,941,1035,0,1199,1093,1096,1200,11,1035,941,1023,1037,0,1203,1185,1186,1204,11,1039,1037,1023,1022,0,1206,1204,1186,1183,11,1039,1022,1021,1041,0,1206,1183,1182,1208,11,1043,1041,1021,943,0,1210,1208,1182,1181,11,1099,1098,1114,1119,0,1277,1276,1298,1299,11,1119,1114,1019,1120,0,1299,1298,1300,1301,11,1120,1020,1107,1108,0,1301,1302,1303,1287,11,1108,1107,1044,1045,0,1287,1303,1213,1212,11,1109,1108,1045,1117,0,1288,1287,1212,1296,11,1110,1109,1117,1033,0,1289,1288,1296,1198,11,1110,1033,1036,1031,0,1289,1198,1201,1304,11,1121,1110,1031,1025,0,1305,1289,1304,1306,11,1122,1121,1025,1024,0,1307,1305,1306,1308,11,1101,1122,1024,1102,0,1279,1307,1308,1280,11,1101,1100,1123,1122,0,1279,1278,1309,1307,11,1100,1099,1119,1123,0,1278,1277,1299,1309,11,1108,1029,1030,1120,0,1287,1194,1195,1301,11,1110,1121,1003,1002,0,1289,1305,1164,1163,11,1122,1124,1003,1121,0,1307,1310,1164,1305,11,1125,1119,1120,1030,0,1311,1299,1301,1195,11,988,1056,1027,963,0,1225,1228,1191,1190,10,1077,1056,1080,0,1251,1228,1254,10,1056,1075,1080,0,1228,1249,1254,10,1075,995,1080,0,1249,1156,1254,10,924,1085,996,0,1077,1259,1157,10,979,978,1081,0,1138,1137,1255,10,973,907,1082,0,1132,1060,1256,10,920,919,1083,0,1073,1072,1257,10,978,1057,1081,0,1137,1229,1255,10,907,1059,1082,0,1060,1231,1256,10,919,1060,1083,0,1072,1232,1257,11,912,1018,993,992,0,1065,1179,1154,1153,11,1122,1123,1126,1124,0,1307,1309,1312,1310,11,1119,1125,1126,1123,0,1299,1311,1312,1309,11,1004,1126,1125,1030,0,1165,1312,1311,1195,11,1004,1003,1124,1126,0,1165,1164,1310,1312,11,1127,1128,1129,1130,0,1313,1314,1315,1316,11,1131,1132,1133,1134,0,1317,1318,1319,1320,11,1129,1135,1136,1130,0,1321,1322,1323,1324,11,1137,1138,1139,1140,0,1325,1326,1327,1328,11,1054,1141,1142,1055,0,1226,1329,1330,1227,11,1053,1064,1141,1054,0,1223,1236,1331,1224,11,956,955,1143,1065,0,1111,1110,1332,1333,10,1144,1076,1055,0,1334,1250,1227,10,1076,1144,955,0,1250,1334,1110,11,1130,1136,1145,1146,0,1324,1323,1335,1336,11,1147,1127,1130,1146,0,1337,1313,1316,1338,11,1148,1149,1150,1151,0,1339,1340,1341,1342,11,1148,1152,1153,1149,0,1339,1343,1344,1340,11,1154,1155,1153,1152,0,1345,1346,1344,1343,11,1156,1157,1155,1154,0,1347,1348,1349,1350,11,1158,1159,1157,1156,0,1351,1352,1348,1347,11,1160,1159,1158,1161,0,1353,1352,1351,1354,11,1161,1162,1163,1160,0,1354,1355,1356,1353,11,1162,1151,1150,1163,0,1357,1342,1341,1358,11,1164,1165,1163,1150,0,1359,1360,1358,1341,11,1166,1153,1155,1167,0,1361,1344,1346,1362,11,1167,1155,1157,1168,0,1363,1349,1348,1364,11,1169,1168,1157,1159,0,1365,1364,1348,1352,11,1137,1140,1170,1171,0,1325,1328,1366,1367,11,1134,1172,1173,1131,0,1320,1368,1369,1317,11,1138,1167,1168,1139,0,1326,1363,1364,1327,11,1174,1175,1176,1177,0,1370,1371,1372,1373,11,1178,1165,1133,1132,0,1374,1375,1319,1318,11,1179,1169,1178,1132,0,1376,1365,1374,1318,11,1168,1169,1179,1139,0,1364,1365,1376,1327,11,1149,1180,1164,1150,0,1340,1377,1359,1341,11,1128,1151,1162,1129,0,1314,1342,1357,1315,11,1147,1146,1154,1152,0,1337,1338,1345,1343,11,1145,1156,1154,1146,0,1335,1347,1350,1336,11,1145,1136,1158,1156,0,1335,1323,1351,1347,11,1136,1135,1161,1158,0,1323,1322,1354,1351,11,1135,1129,1162,1161,0,1322,1321,1355,1354,11,1169,1159,1160,1178,0,1365,1352,1353,1374,11,1160,1163,1165,1178,0,1353,1356,1375,1374,11,1166,1180,1149,1153,0,1361,1377,1340,1344,11,1139,1179,1181,1140,0,1327,1376,1378,1328,11,1132,1131,1181,1179,0,1318,1317,1378,1376,11,1182,1177,1176,1183,0,1379,1373,1372,1380,11,1131,1173,1184,1181,0,1317,1369,1381,1378,11,1184,1170,1140,1181,0,1381,1366,1328,1378,11,1185,1183,1176,1186,0,1382,1380,1372,1383,11,1187,1186,1176,1175,0,1384,1383,1372,1371,11,1065,1171,1170,1066,0,1237,1367,1366,1238,11,1184,1063,1066,1170,0,1381,1235,1238,1366,11,1064,1063,1184,1173,0,1236,1235,1381,1369,11,1172,1141,1064,1173,0,1368,1331,1236,1369,11,1142,1185,1186,1188,0,1330,1382,1383,1385,11,1141,1172,1185,1142,0,1329,1386,1382,1330,11,1172,1134,1183,1185,0,1386,1387,1380,1382,11,1182,1183,1134,1133,0,1379,1380,1387,1388,11,1165,1164,1182,1133,0,1360,1359,1379,1388,11,1177,1182,1164,1180,0,1373,1379,1359,1377,11,1177,1180,1166,1174,0,1373,1377,1361,1370,11,1138,1174,1166,1167,0,1389,1370,1361,1362,11,1174,1138,1137,1175,0,1370,1389,1390,1371,11,1175,1137,1171,1187,0,1371,1390,1391,1384,11,1065,1143,1187,1171,0,1333,1332,1384,1391,11,1143,1188,1186,1187,0,1332,1385,1383,1384,11,1144,1055,1142,1188,0,1334,1227,1330,1385,11,1144,1188,1143,955,0,1334,1385,1332,1110,11,1189,1190,1191,1192,0,1392,1393,1394,1395,11,1193,1194,1195,1196,0,1396,1397,1398,1399,11,1197,1198,1199,1200,0,1400,1401,1402,1403,11,954,1201,1202,951,0,1109,1404,1405,1106,11,914,913,1203,1067,0,1067,1066,1406,1239,11,787,1204,1205,799,0,912,1407,1408,927,11,786,1206,1204,787,0,911,1409,1407,912,11,789,791,1207,1208,0,914,916,1410,1411,11,1207,791,793,1209,0,1410,916,918,1412,11,1210,1211,1191,1212,0,1413,1414,1394,1415,11,1200,1213,1214,1197,0,1403,1416,1417,1400,11,1196,1215,1216,1193,0,1399,1418,1419,1396,11,1198,1207,1209,1199,0,1401,1410,1412,1402,11,1217,1212,1191,1190,0,1420,1415,1394,1393,11,1218,1205,1195,1194,0,1421,1422,1398,1397,11,1194,1219,1220,1218,0,1397,1423,1424,1421,11,1209,1220,1219,1199,0,1412,1424,1423,1402,11,797,1218,1220,795,0,923,1421,1424,921,11,793,795,1220,1209,0,918,921,1424,1412,11,797,799,1205,1218,0,923,925,1422,1421,11,1208,1206,786,789,0,1411,1409,911,914,11,1199,1219,1221,1200,0,1402,1423,1425,1403,11,1219,1194,1193,1221,0,1423,1397,1396,1425,11,1193,1216,1222,1221,0,1396,1419,1426,1425,11,1222,1213,1200,1221,0,1426,1416,1403,1425,11,1223,1192,1191,1211,0,1427,1395,1394,1414,11,1068,1067,1214,1213,0,1240,1239,1417,1416,11,1070,1068,1213,1222,0,1242,1240,1416,1426,11,1071,1070,1222,1216,0,1243,1242,1426,1419,11,1215,1201,1071,1216,0,1418,1428,1243,1419,11,1201,954,902,1071,0,1428,1244,1244,1243,11,1202,1223,1211,1224,0,1405,1427,1414,1429,11,1201,1215,1223,1202,0,1404,1430,1427,1405,11,1192,1223,1215,1196,0,1395,1427,1430,1431,11,1192,1196,1195,1189,0,1395,1431,1432,1392,11,1195,1205,1204,1189,0,1432,1408,1407,1392,11,1190,1189,1204,1206,0,1393,1392,1407,1409,11,1217,1190,1206,1208,0,1420,1393,1409,1411,11,1198,1217,1208,1207,0,1401,1420,1411,1410,11,1212,1217,1198,1197,0,1415,1420,1401,1400,11,1212,1197,1214,1210,0,1415,1400,1417,1413,11,1067,1203,1210,1214,0,1239,1406,1413,1417,11,1203,1224,1211,1210,0,1406,1429,1414,1413,11,1069,951,1202,1224,0,1241,1106,1405,1429,11,1069,1224,1203,913,0,1241,1429,1406,1066,11,1225,1226,1227,1228,0,1433,1434,1435,1436,11,1229,1230,1227,1226,0,1437,1438,1435,1434,11,1231,1232,1233,1234,0,1439,1440,1441,1442,11,1235,1236,1237,1238,0,1443,1444,1445,1446,11,957,1073,1239,958,0,1112,1447,1448,1113,11,903,953,1240,1241,0,1056,1449,1450,1451,11,953,952,1242,1240,0,1108,1107,1452,1453,11,812,1243,1244,824,0,943,1454,1455,959,11,811,1245,1243,812,0,942,1456,1454,943,11,1246,1247,814,816,0,1457,1458,945,947,11,1246,816,818,1248,0,1459,950,949,1460,11,1238,1249,1250,1235,0,1446,1461,1462,1443,11,1234,1251,1252,1231,0,1442,1463,1464,1439,11,1236,1246,1248,1237,0,1444,1459,1460,1445,11,1253,1244,1233,1232,0,1465,1466,1441,1440,11,1254,1255,1253,1232,0,1467,1468,1465,1440,11,1248,1255,1254,1237,0,1460,1468,1467,1445,11,821,1253,1255,820,0,954,1465,1468,953,11,818,820,1255,1248,0,949,953,1468,1460,11,821,824,1244,1253,0,954,957,1466,1465,11,1247,1245,811,814,0,1458,1456,942,945,11,1238,1237,1254,1256,0,1446,1445,1467,1469,11,1254,1232,1231,1256,0,1467,1440,1439,1469,11,1231,1252,1257,1256,0,1439,1464,1470,1469,11,1257,1249,1238,1256,0,1470,1461,1446,1469,11,1258,1228,1227,1259,0,1471,1436,1435,1472,11,1240,1250,1249,1241,0,1450,1462,1461,1451,11,1260,1241,1249,1257,0,1473,1451,1461,1470,11,1260,1257,1252,1072,0,1473,1470,1464,1245,11,1251,1073,1072,1252,0,1463,1246,1245,1464,11,1241,1260,984,903,0,1451,1473,1143,1056,11,1260,1072,899,984,0,1473,1245,1052,1143,11,1239,1258,1259,1261,0,1448,1471,1472,1474,11,1073,1251,1258,1239,0,1447,1475,1471,1448,11,1228,1258,1251,1234,0,1436,1471,1475,1476,11,1225,1228,1234,1233,0,1433,1436,1476,1477,11,1244,1243,1225,1233,0,1455,1454,1433,1477,11,1226,1225,1243,1245,0,1434,1433,1454,1456,11,1226,1245,1247,1229,0,1434,1456,1458,1437,11,1236,1229,1247,1246,0,1478,1437,1458,1457,11,1229,1236,1235,1230,0,1437,1478,1479,1438,11,1230,1235,1250,1262,0,1438,1479,1480,1481,11,1240,1242,1262,1250,0,1453,1452,1481,1480,11,1242,1261,1259,1262,0,1452,1474,1472,1481,11,1227,1230,1262,1259,0,1435,1438,1481,1472,11,1074,958,1239,1261,0,1248,1113,1448,1474,11,1074,1261,1242,952,0,1248,1474,1452,1107,11,865,864,989,891,0,1037,1149,1148,1036,11,911,902,901,908,0,1064,1482,1054,1061,11,899,957,868,892,0,1052,1247,1039,1038,11,954,953,903,902,0,1244,1449,1056,1055,10,930,1088,1014,0,1083,1262,1175,10,1089,1026,1090,0,1265,1189,1265,10,1120,1019,1020,0,1301,1300,1302,10,999,1028,968,0,1270,1193,1192,10,1084,1085,924,0,1258,1259,1077,10,925,976,949,0,1078,1135,1104,10,948,923,972,0,1103,1076,1131,10,922,947,997,0,1075,1102,1158,11,1050,959,928,967,0,1219,1115,1114,1126,11,1118,942,939,938,0,1297,1097,1094,1093,11,1152,1148,1127,1147,0,1343,1339,1313,1337,11,1148,1151,1128,1127,0,1339,1342,1314,1313,11,1087,1062,1053,987,0,1261,1234,1223,1146,11,1016,909,908,1015,0,1177,1062,1061,1176,11,908,901,944,1015,0,1061,1054,1099,1176,10,768,931,767,0,1085,1084,1264,10,937,936,770,0,1092,1091,891,11,997,993,1018,937,0,1158,1154,1179,1092,11,925,923,762,763,0,1078,1076,882,883,11,962,1051,986,963,0,1118,1220,1145,1119,11,998,897,1014,1088,0,1159,1050,1175,1262,11,926,928,765,766,0,1079,1081,1483,1263,11,931,930,1001,926,0,1084,1083,1162,1079,11,930,1014,1013,1001,0,1083,1175,1174,1162,10,1087,1091,1012,0,1261,1266,1173,11,985,989,990,1086,0,1144,1148,1151,1260,11,971,1012,1091,1010,0,1130,1173,1266,1171,11,1026,1089,1111,1024,0,1189,1265,1290,1187,10,1104,1040,1105,0,1283,1207,1284,10,982,924,763,0,1141,1077,883,11,1263,1264,1265,1266,0,1484,1485,1486,1487,11,1267,1268,1263,1266,0,1488,1489,1484,1487,10,1269,1270,1271,0,1490,1491,1492,11,1272,1273,1271,1270,0,1493,1494,1495,1496,11,1267,1274,1275,1268,0,1488,1497,1498,1489,11,1276,1277,1275,1274,0,1499,1500,1498,1497,11,1277,1276,1273,1272,0,1500,1499,1494,1493,11,1278,1279,1280,1281,0,1501,1502,1503,1504,10,1282,0,1278,0,1505,1506,1501,11,1283,1284,1285,1286,0,1507,1508,1509,1510,11,1287,1288,1289,1290,0,1511,1512,1513,1514,11,1286,1291,1292,1283,0,1510,1515,1516,1507,11,1293,1291,1294,1295,0,1517,1515,1518,1519,11,1296,1297,1298,1299,0,1520,1521,1522,1523,11,1297,1300,1301,1298,0,1521,1524,1525,1522,11,1299,1302,1303,1296,0,1523,1526,1527,1520,11,1304,1305,1286,1285,0,1528,1529,1530,1531,11,1305,1306,1291,1286,0,1529,1532,1533,1530,11,1306,1307,1294,1291,0,1532,1534,1535,1533,11,1308,1290,1289,1309,0,1536,1537,1538,1539,11,1309,1289,1310,1311,0,1539,1538,1540,1541,11,1299,1298,1312,1313,0,1542,1543,1544,1545,11,1302,1314,1311,1310,0,1546,1547,1541,1540,11,1302,1299,1313,1314,0,1546,1542,1545,1547,11,1285,1290,1308,1304,0,1531,1537,1536,1528,11,1304,1315,1316,1305,0,1528,1548,1549,1529,10,1316,1306,1305,0,1549,1532,1529,11,1317,1318,1308,1309,0,1550,1551,1536,1539,11,1313,1312,1319,1320,0,1545,1544,1552,1553,11,1321,1311,1314,1322,0,1554,1541,1547,1555,11,1314,1313,1320,1322,0,1547,1545,1553,1555,11,1304,1308,1318,1315,0,1528,1536,1551,1548,11,1323,1324,1316,1315,0,1556,1557,1549,1548,11,1325,1306,1316,1324,0,1558,1532,1549,1557,11,1325,1326,1307,1306,0,1558,1559,1534,1532,11,1327,1328,1318,1317,0,1560,1561,1551,1550,11,1329,1320,1319,1330,0,1562,1553,1552,1563,11,1319,1331,1332,1330,0,1552,1564,1565,1563,11,1321,1322,1333,1334,0,1554,1555,1566,1567,11,1335,1336,1320,1329,0,1568,1569,1553,1562,11,1315,1318,1328,1323,0,1548,1551,1561,1556,11,1337,1329,1330,1338,0,1570,1562,1563,1571,11,1330,1332,1339,1338,0,1563,1565,1572,1571,11,1334,1333,1340,1341,0,1567,1566,1573,1574,11,1335,1329,1342,1343,0,1568,1562,1575,1576,11,1323,1328,1344,1345,0,1556,1561,1577,1578,11,1346,1344,1328,1327,0,1579,1577,1561,1560,11,1347,1348,1349,1350,0,1580,1581,1582,1583,11,1321,1334,1351,1347,0,1554,1567,1584,1580,11,1334,1341,1352,1351,0,1567,1574,1585,1584,11,1353,1354,1355,1356,0,1586,1587,1588,1589,11,1357,1358,1359,1355,0,1590,1591,1592,1588,11,1360,1361,1358,1357,0,1593,1594,1591,1590,11,1362,1352,1341,1363,0,1595,1585,1574,1596,11,1364,1365,1366,1367,0,1597,1598,1599,1600,11,1279,1278,2,1368,0,1502,1501,1601,1602,11,6,1359,1358,3,0,6,1592,1591,3,11,1363,8,7,1362,0,1596,1603,20,1595,11,3,1358,1361,11,0,3,1591,1594,11,11,1369,1370,1371,1372,0,1604,1605,1606,1607,11,1364,1367,1356,1355,0,1597,1600,1589,1588,11,1373,1346,1367,1366,0,1608,1579,1600,1599,11,1349,1348,1354,1353,0,1582,1581,1587,1586,11,1351,1352,1360,1357,0,1584,1585,1593,1590,11,1309,1349,1353,1317,0,1539,1582,1586,1550,11,1317,1353,1356,1327,0,1550,1586,1589,1560,11,1374,1343,1342,1375,0,1609,1576,1575,1610,11,1376,1377,1378,1379,0,1611,1612,1613,1614,10,1370,1337,1338,0,1605,1570,1571,11,1380,1381,1382,1383,0,1615,1616,1617,1618,11,1384,1385,1386,1387,0,1619,1620,1621,1622,11,1388,1389,1390,1391,0,1623,1624,1625,1626,10,1392,1393,1344,0,1627,1628,1577,11,1394,1370,1369,1395,0,1629,1605,1604,1630,11,1396,1397,1398,1391,0,1631,1632,1633,1626,11,1382,1399,1400,1401,0,1617,1634,1635,1636,11,1385,1384,1402,1403,0,1620,1619,1637,1638,11,1404,1405,1406,1407,0,1639,1640,1641,1642,11,1408,1409,1410,1411,0,1643,1644,1645,1646,10,1411,1412,1408,0,1646,1647,1643,11,1404,1413,1414,1415,0,1648,1649,1650,1651,11,1412,1416,1417,1418,0,1647,1652,1653,1654,10,1419,1420,1372,0,1655,1656,1607,11,1345,1344,1393,1379,0,1578,1577,1628,1614,11,1421,1422,1423,1424,0,1657,1658,1659,1660,10,1320,1336,1322,0,1553,1569,1555,11,1280,1279,1340,1333,0,1503,1502,1573,1566,11,1336,1335,1343,1425,0,1569,1568,1576,1661,11,1426,1425,1343,1374,0,1662,1661,1576,1609,11,2,8,1363,1368,0,1601,1603,1596,1602,11,1365,1427,1428,1366,0,1598,1663,1664,1599,11,1427,1429,1430,1428,0,1663,1665,1666,1664,11,1281,1280,1425,1426,0,1504,1503,1661,1662,11,1333,1336,1425,1280,0,1566,1569,1661,1503,11,1431,1432,1433,1434,0,1667,1668,1669,1670,11,1435,1436,1437,1438,0,1671,1672,1673,1674,11,1439,1435,1438,1429,0,1675,1671,1674,1665,11,1440,1429,1438,1441,0,1676,1665,1674,1677,10,1441,1438,1437,0,1677,1674,1673,11,1414,1441,1442,1415,0,1650,1677,1678,1651,10,1443,1390,1389,0,1679,1625,1624,11,1390,1444,1396,1391,0,1625,1680,1631,1626,11,1395,1397,1396,1394,0,1630,1632,1631,1629,11,1361,1360,1352,1362,0,1594,1593,1585,1595,11,11,1361,1362,7,0,11,1594,1595,20,11,1416,1445,1446,1417,0,1652,1681,1682,1653,11,1447,1448,1359,6,0,1683,1684,1592,6,11,6,5,1449,1447,0,6,5,1685,1683,11,1429,1427,1449,1439,0,1665,1663,1685,1675,11,1447,1449,1427,1365,0,1683,1685,1663,1598,11,1448,1447,1365,1364,0,1684,1683,1598,1597,11,1450,1451,1452,1453,0,1686,1687,1688,1689,11,1414,1454,1440,1441,0,1650,1690,1676,1677,11,1436,1455,1456,1437,0,1672,1691,1692,1673,11,1368,1363,1341,1340,0,1602,1596,1574,1573,10,1279,1368,1340,0,1502,1602,1573,11,1457,1458,1383,1401,0,1693,1694,1618,1636,11,1392,1459,1460,1461,0,1627,1695,1696,1697,11,1462,1463,1464,1465,0,1698,1699,1700,1701,11,1466,1467,1468,1469,0,1702,1703,1704,1705,11,1469,1468,1470,1471,0,1705,1704,1706,1707,11,1472,1473,1407,1474,0,1708,1709,1710,1711,11,1475,1418,1476,1477,0,1712,1654,1713,1714,11,1476,1418,1417,1478,0,1713,1654,1653,1715,11,1446,1479,1478,1417,0,1682,1716,1715,1653,11,1480,1462,1465,1481,0,1717,1698,1701,1718,10,1482,1483,1484,0,1719,1720,1721,11,1454,1451,1450,1440,0,1690,1687,1686,1676,11,1430,1429,1440,1450,0,1666,1665,1676,1686,10,1485,1459,1366,0,1722,1695,1599,11,1453,1428,1430,1450,0,1689,1664,1666,1686,11,1383,1458,1486,1380,0,1618,1694,1723,1615,11,1460,1459,1485,1487,0,1696,1695,1722,1724,11,1459,1392,1373,1366,0,1695,1627,1608,1599,11,1455,1432,1488,1456,0,1691,1725,1726,1692,11,1489,1490,1491,1492,0,1727,1728,1729,1730,11,1265,1493,1494,1495,0,1486,1731,1732,1733,11,1266,1496,1497,1267,0,1487,1734,1735,1488,11,1498,1274,1499,1500,0,1736,1497,1737,1738,11,1271,1501,1502,1269,0,1492,1739,1740,1490,11,1269,1502,1503,1504,0,1490,1740,1741,1742,11,1501,1271,1273,1505,0,1743,1495,1494,1744,11,1497,1499,1274,1267,0,1735,1737,1497,1488,11,1444,1506,1394,1396,0,1680,1745,1629,1631,11,1489,1374,1375,1443,0,1727,1609,1610,1679,10,1488,1432,1492,0,1746,1668,1730,11,1405,1388,1391,1410,0,1640,1623,1626,1645,11,1374,1489,1492,1426,0,1609,1727,1730,1662,11,1503,1477,1476,1507,0,1741,1714,1713,1747,11,1502,1409,1477,1503,0,1740,1644,1714,1741,10,1508,1509,1409,0,1748,1749,1644,11,1505,1510,1508,1501,0,1744,1750,1751,1743,11,1500,1499,1497,1511,0,1738,1737,1735,1752,11,1511,1496,1495,1463,0,1752,1734,1733,1699,11,1494,1464,1463,1495,0,1732,1700,1699,1733,11,1443,1512,1444,1390,0,1679,1753,1680,1625,11,1375,1513,1512,1443,0,1610,1754,1753,1679,11,1514,1513,1375,1342,0,1755,1754,1610,1575,11,1342,1329,1337,1514,0,1575,1562,1570,1755,11,1512,1513,1506,1444,0,1753,1754,1745,1680,11,1514,1337,1506,1513,0,1755,1570,1745,1754,11,1409,1408,1475,1477,0,1644,1643,1712,1714,11,1408,1412,1418,1475,0,1643,1647,1654,1712,11,1466,1469,1471,1498,0,1702,1705,1707,1736,11,1498,1515,1276,1274,0,1736,1756,1499,1497,11,1515,1471,1510,1505,0,1756,1707,1750,1744,11,1467,1483,1482,1516,0,1703,1720,1719,1757,11,1517,1516,1403,1402,0,1758,1757,1638,1637,11,1518,1402,1451,1454,0,1759,1637,1687,1690,11,1402,1518,1519,1517,0,1637,1759,1760,1758,11,1520,1483,1467,1466,0,1761,1720,1703,1702,11,1500,1520,1466,1498,0,1738,1761,1702,1736,11,1511,1521,1520,1500,0,1752,1762,1761,1738,11,1521,1511,1463,1462,0,1762,1752,1699,1698,11,1422,1421,1522,1523,0,1658,1657,1763,1764,11,1524,1525,1460,1487,0,1765,1766,1696,1724,11,1526,1461,1460,1525,0,1767,1697,1696,1766,11,1461,1526,1527,1528,0,1697,1767,1768,1769,11,1529,1530,1381,1380,0,1770,1771,1616,1615,11,1345,1531,1324,1323,0,1578,1772,1557,1556,11,144,1532,1449,5,0,1773,1774,1685,5,11,142,1533,1532,144,0,1775,1776,1774,1773,11,143,1534,1533,142,0,1777,1778,1776,1775,11,22,1535,1534,143,0,1779,1780,1781,1782,11,1410,1391,1398,1411,0,1645,1626,1633,1646,11,1398,1397,1412,1411,0,1633,1632,1647,1646,11,1397,1536,1416,1412,0,1632,1783,1652,1647,11,1395,1420,1536,1397,0,1630,1656,1783,1632,11,1369,1372,1420,1395,0,1604,1607,1656,1630,11,1491,1490,1389,1388,0,1729,1728,1624,1623,11,1415,1491,1388,1404,0,1784,1729,1623,1639,11,1479,1537,1538,1478,0,1716,1785,1786,1715,11,22,21,1433,1535,0,1779,1787,1669,1780,11,1282,1426,1431,1434,0,1505,1662,1667,1670,11,1282,1278,1281,1426,0,1505,1501,1504,1662,10,1439,1449,1532,0,1675,1685,1774,11,1533,1435,1439,1532,0,1776,1671,1675,1774,11,1436,1435,1533,1534,0,1672,1671,1776,1778,11,1534,1535,1455,1436,0,1781,1780,1788,1789,11,1535,1433,1432,1455,0,1780,1669,1668,1788,11,1492,1432,1431,1426,0,1730,1668,1667,1662,11,21,141,1434,1433,0,1787,1790,1670,1669,11,1516,1517,1468,1467,0,1757,1758,1704,1703,11,1517,1519,1470,1468,0,1758,1760,1706,1704,11,1470,1519,1473,1472,0,1706,1760,1709,1708,11,1488,1415,1442,1456,0,1726,1651,1678,1692,11,1491,1415,1488,1492,0,1729,1784,1746,1730,11,1407,1473,1413,1404,0,1710,1709,1649,1648,11,1451,1402,1384,1452,0,1687,1637,1619,1688,11,1422,1385,1403,1423,0,1658,1620,1638,1659,11,1452,1384,1387,1487,0,1688,1619,1622,1724,11,1385,1422,1523,1386,0,1620,1658,1764,1621,11,1495,1496,1266,1265,0,1733,1734,1487,1486,11,1486,1458,1376,1539,0,1723,1694,1611,1791,11,1377,1376,1458,1457,0,1612,1611,1694,1693,11,1540,1529,1380,1486,0,1792,1770,1615,1723,11,1541,1540,1486,1539,0,1793,1792,1723,1791,11,1524,1487,1387,1542,0,1765,1724,1622,1794,11,1542,1387,1386,1543,0,1794,1622,1621,1795,11,1386,1523,1544,1543,0,1621,1764,1796,1795,11,1545,1544,1523,1522,0,1797,1796,1764,1763,11,1546,1547,1530,1529,0,1798,1799,1771,1770,11,1547,1548,1545,1530,0,1799,1800,1797,1771,11,1548,1549,1544,1545,0,1800,1801,1796,1797,11,1549,1550,1543,1544,0,1801,1802,1795,1796,11,1550,1551,1542,1543,0,1802,1803,1794,1795,11,1542,1551,1552,1524,0,1794,1803,1804,1765,11,1524,1552,1553,1525,0,1765,1804,1805,1766,11,1525,1553,1554,1526,0,1766,1805,1806,1767,11,1526,1554,1555,1527,0,1767,1806,1807,1768,11,1540,1541,1556,1557,0,1792,1793,1808,1809,11,1557,1546,1529,1540,0,1809,1798,1770,1792,11,1393,1392,1461,1528,0,1628,1627,1697,1769,11,1541,1527,1555,1556,0,1793,1768,1807,1808,11,1541,1539,1528,1527,0,1793,1791,1769,1768,10,1528,1379,1393,0,1769,1614,1628,11,1338,1339,1371,1370,0,1571,1572,1606,1605,11,1538,1507,1476,1478,0,1786,1747,1713,1715,10,1324,1531,1325,0,1557,1772,1558,11,1521,1484,1483,1520,0,1762,1721,1720,1761,11,1530,1545,1522,1381,0,1771,1797,1763,1616,11,1381,1522,1421,1382,0,1616,1763,1657,1617,11,1424,1399,1382,1421,0,1660,1634,1617,1657,11,1424,1484,1480,1399,0,1660,1721,1717,1634,11,1462,1480,1484,1521,0,1698,1717,1721,1762,11,1276,1515,1505,1273,0,1499,1756,1744,1494,11,1519,1518,1413,1473,0,1760,1759,1649,1709,11,1413,1518,1454,1414,0,1649,1759,1690,1650,11,1481,1400,1399,1480,0,1718,1635,1634,1717,11,1409,1509,1406,1410,0,1644,1749,1641,1645,11,1539,1376,1379,1528,0,1791,1611,1614,1769,11,1536,1558,1445,1416,0,1783,1810,1681,1652,11,1558,1536,1420,1419,0,1810,1783,1656,1655,11,1424,1423,1482,1484,0,1660,1659,1719,1721,11,1423,1403,1516,1482,0,1659,1638,1757,1719,11,1406,1509,1474,1407,0,1641,1749,1811,1642,10,1410,1406,1405,0,1645,1641,1640,11,1325,1531,1559,1326,0,1558,1772,1812,1559,11,1560,1561,1562,1563,0,1813,1814,1815,1816,10,1564,1561,1565,0,1817,1814,1818,11,1566,1567,1568,1569,0,1819,1820,1821,1822,10,1570,1567,1571,0,1823,1820,1824,11,1572,1573,1574,1575,0,1825,1826,1827,1828,10,1576,1575,1577,0,1829,1828,1830,11,1567,1572,1575,1562,0,1820,1825,1828,1815,11,1563,1552,1551,1560,0,1816,1804,1803,1813,11,1569,1564,1549,1548,0,1822,1817,1801,1800,11,1546,1571,1566,1547,0,1798,1824,1819,1799,11,1556,1573,1570,1557,0,1808,1826,1823,1809,11,1555,1574,1573,1556,0,1807,1827,1826,1808,11,1574,1555,1554,1577,0,1827,1807,1806,1830,11,1554,1553,1576,1577,0,1806,1805,1829,1830,11,1576,1553,1552,1563,0,1829,1805,1804,1816,11,1560,1551,1550,1565,0,1813,1803,1802,1818,11,1546,1557,1570,1571,0,1798,1809,1823,1824,11,1548,1547,1566,1569,0,1800,1799,1819,1822,11,1550,1549,1564,1565,0,1802,1801,1817,1818,11,1437,1456,1442,1441,0,1673,1692,1678,1677,10,1497,1496,1511,0,1735,1734,1752,11,1284,1287,1290,1285,0,1508,1831,1832,1509,11,1578,1312,1298,1301,0,1833,1544,1543,1834,11,1312,1578,1331,1319,0,1544,1833,1564,1552,11,1302,1310,1579,1303,0,1526,1835,1836,1527,10,1474,1509,1508,0,1811,1749,1748,11,1493,1265,1264,1580,0,1731,1486,1485,1837,11,1581,1582,1583,1584,0,1838,1839,1840,1841,11,1585,1586,1284,1283,0,1842,1843,1508,1507,11,1587,1585,1283,1292,0,1844,1842,1507,1516,11,1588,1589,1292,1293,0,1845,1846,1516,1517,11,1586,1590,1287,1284,0,1843,1847,1831,1508,11,1288,1287,1590,1584,0,1512,1511,1848,1841,11,1589,1591,1587,1292,0,1846,1849,1844,1516,11,1288,1584,1303,1579,0,1512,1841,1527,1836,11,1297,1296,1583,1592,0,1521,1520,1840,1850,11,1592,1593,1300,1297,0,1850,1851,1524,1521,11,1594,1591,1589,1588,0,1852,1849,1846,1845,11,1595,1596,1585,1587,0,1853,1854,1842,1844,11,1597,1595,1587,1591,0,1855,1853,1844,1849,11,1586,1585,1596,1598,0,1843,1842,1854,1856,11,1590,1586,1598,1581,0,1847,1843,1856,1857,11,1594,1599,1597,1591,0,1852,1858,1855,1849,11,1582,1600,1592,1583,0,1839,1859,1850,1840,11,1599,1594,1601,1602,0,1858,1852,1860,1861,11,1588,1293,1295,1603,0,1845,1517,1519,1862,11,1601,1594,1588,1603,0,1860,1852,1845,1862,11,1593,1592,1600,1604,0,1851,1850,1859,1863,11,1296,1303,1584,1583,0,1520,1527,1841,1840,11,1327,1356,1367,1346,0,1560,1589,1600,1579,11,1355,1354,1605,1357,0,1588,1587,1864,1590,11,1605,1354,1348,1606,0,1864,1587,1581,1865,11,1606,1348,1347,1351,0,1865,1581,1580,1584,11,1605,1606,1351,1357,0,1864,1865,1584,1590,10,1322,1336,1333,0,1555,1569,1566,11,1310,1289,1288,1579,0,1835,1513,1512,1836,10,1347,1350,1311,0,1580,1583,1541,10,1347,1311,1321,0,1580,1541,1554,10,1507,1504,1503,0,1747,1742,1741,10,1355,1448,1364,0,1588,1684,1597,10,1448,1355,1359,0,1684,1588,1592,10,1350,1349,1309,0,1583,1582,1539,10,1311,1350,1309,0,1541,1583,1539,11,1568,1567,1562,1561,0,1821,1820,1815,1814,11,1392,1344,1346,1373,0,1627,1577,1579,1608,11,1487,1485,1453,1452,0,1724,1722,1689,1688,11,1485,1366,1428,1453,0,1722,1599,1664,1689,10,1291,1293,1292,0,1515,1517,1516,11,1472,1474,1508,1510,0,1708,1711,1751,1750,11,1470,1472,1510,1471,0,1706,1708,1750,1707,11,1409,1502,1501,1508,0,1644,1740,1739,1748,11,1379,1378,1531,1345,0,1614,1613,1772,1578,10,1378,1559,1531,0,1613,1812,1772,11,1607,1608,1609,1610,0,1866,1867,1868,1869,11,1609,1611,1612,1610,0,1868,1870,1871,1869,10,1613,1614,1615,0,1872,1873,1874,11,1616,1615,1614,1617,0,1875,1876,1877,1878,11,1618,1619,1612,1611,0,1879,1880,1871,1870,11,1618,1620,1621,1619,0,1879,1881,1882,1880,11,1620,1616,1617,1621,0,1881,1875,1878,1882,11,1622,1623,1624,1625,0,1883,1884,1885,1886,11,1626,635,771,1627,0,1887,1888,1889,1890,11,1628,1629,1630,1631,0,1891,1892,1893,1894,11,1632,1633,1634,1635,0,1895,1896,1897,1898,11,1629,1628,1636,1637,0,1892,1891,1899,1900,11,1638,1295,1294,1637,0,1901,1519,1518,1900,11,1639,1640,1641,1642,0,1902,1903,1904,1905,11,1640,1639,1301,1300,0,1903,1902,1525,1524,11,1643,1644,1642,1641,0,1906,1907,1905,1904,11,1629,1645,1646,1630,0,1908,1909,1910,1911,11,1645,1629,1637,1647,0,1909,1908,1912,1913,11,1647,1637,1294,1307,0,1913,1912,1535,1534,11,1634,1633,1648,1649,0,1914,1915,1916,1917,11,1649,1650,1651,1634,0,1917,1918,1919,1914,11,1652,1639,1642,1653,0,1920,1921,1922,1923,11,1644,1651,1650,1654,0,1924,1919,1918,1925,11,1653,1642,1644,1654,0,1923,1922,1924,1925,11,1648,1633,1630,1646,0,1916,1915,1911,1910,11,1646,1645,1655,1656,0,1910,1909,1926,1927,10,1655,1645,1647,0,1926,1909,1913,11,1657,1649,1648,1658,0,1928,1917,1916,1929,11,1659,1652,1653,1660,0,1930,1920,1923,1931,11,1661,1662,1654,1650,0,1932,1933,1925,1918,11,1660,1653,1654,1662,0,1931,1923,1925,1933,11,1658,1648,1646,1656,0,1929,1916,1910,1927,11,1655,1663,1664,1656,0,1926,1934,1935,1927,11,1655,1647,1665,1663,0,1926,1913,1936,1934,11,1665,1647,1307,1326,0,1936,1913,1534,1559,11,1666,1657,1658,1667,0,1937,1928,1929,1938,11,1668,1669,1659,1660,0,1939,1940,1930,1931,11,1659,1669,1332,1331,0,1930,1940,1565,1564,11,1670,1662,1661,1671,0,1941,1933,1932,1942,11,1672,1668,1660,1673,0,1943,1939,1931,1944,11,1667,1658,1656,1664,0,1938,1929,1927,1935,11,1674,1675,1669,1668,0,1945,1946,1940,1939,11,1669,1675,1339,1332,0,1940,1946,1572,1565,11,1671,1676,1677,1670,0,1942,1947,1948,1941,11,1678,1668,1672,1679,0,1949,1939,1943,1950,11,1680,1667,1664,1681,0,1951,1938,1935,1952,11,1667,1680,1682,1666,0,1938,1951,1953,1937,11,1683,1684,1685,1686,0,1954,1955,1956,1957,11,1661,1683,1687,1671,0,1932,1954,1958,1942,11,1688,1676,1671,1687,0,1959,1947,1942,1958,11,1689,1690,1691,1692,0,1960,1961,1962,1963,11,1693,1694,1695,1691,0,1964,1965,1966,1962,11,1694,1696,1697,1695,0,1965,1967,1968,1966,11,1676,1688,1698,1699,0,1947,1959,1969,1970,11,1700,1701,1702,1703,0,1971,1972,1973,1974,11,1704,633,1622,1625,0,1975,1976,1883,1886,11,1705,1706,1694,1693,0,1977,1978,1965,1964,11,1699,1698,639,642,0,1970,1969,1979,1980,11,1706,1707,1696,1694,0,1978,1981,1967,1965,11,1371,1708,1709,1372,0,1606,1982,1983,1607,11,1690,1701,1700,1691,0,1961,1972,1971,1962,11,1701,1682,1710,1702,0,1972,1953,1984,1973,11,1692,1686,1685,1689,0,1963,1957,1956,1960,11,1687,1695,1697,1688,0,1958,1966,1968,1959,11,1649,1657,1689,1685,0,1917,1928,1960,1956,11,1657,1666,1690,1689,0,1928,1937,1961,1960,11,1711,1712,1678,1679,0,1985,1986,1949,1950,11,1713,1714,1378,1377,0,1987,1988,1613,1612,11,1715,1716,1708,1674,0,1989,1990,1982,1945,11,1717,1718,1719,1720,0,1991,1992,1993,1994,11,1721,1722,1723,1724,0,1995,1996,1997,1998,11,1725,1726,1727,1728,0,1999,2000,2001,2002,10,1729,1680,1730,0,2003,1951,2004,11,1716,1731,1709,1708,0,1990,2005,1983,1982,11,1732,1733,1734,1726,0,2006,2007,2008,2000,10,1401,1719,1718,0,1636,1993,1992,11,1735,1723,1722,1736,0,2009,1997,1996,2010,11,1737,1738,1739,1740,0,2011,2012,2013,2014,11,1741,1742,1743,1744,0,2015,2016,2017,2018,10,1744,1743,1745,0,2018,2017,2019,11,1746,1747,1737,1748,0,2020,2021,2022,2023,11,1749,1750,1745,1751,0,2024,2025,2019,2026,10,1419,1372,1752,0,1655,1607,2027,11,1730,1680,1681,1714,0,2004,1951,1952,1988,11,1753,1754,1755,1756,0,2028,2029,2030,2031,10,1660,1662,1673,0,1931,1933,1944,11,1677,1625,1624,1670,0,1948,1886,1885,1941,11,1679,1672,1673,1757,0,1950,1943,1944,2032,11,1679,1757,1758,1711,0,1950,2032,2033,1985,11,633,1704,1699,642,0,1976,1975,1970,1980,11,1703,1702,1759,1760,0,1974,1973,2034,2035,11,1761,1762,1760,1759,0,2036,2037,2035,2034,11,1757,1624,1623,1758,0,2032,1885,1884,2033,11,1670,1624,1757,1673,0,1941,1885,2032,1944,11,1763,1764,1765,1627,0,2038,2039,2040,1890,11,1766,1767,1768,1769,0,2041,2042,2043,2044,11,1767,1766,1770,1762,0,2042,2041,2045,2037,11,1767,1762,1771,1772,0,2042,2037,2046,2047,10,1772,1768,1767,0,2047,2043,2042,11,1773,1772,1746,1748,0,2048,2047,2020,2023,11,1774,1775,1776,1728,0,2049,2050,2051,2002,11,1727,1726,1734,1777,0,2001,2000,2008,2052,11,1734,1733,1731,1716,0,2008,2007,2005,1990,11,1696,1698,1688,1697,0,1967,1969,1959,1968,11,1698,1696,1707,639,0,1969,1967,1981,1979,11,1750,1749,1446,1445,0,2025,2024,1682,1681,11,1778,1705,1693,1779,0,2053,1977,1964,2054,11,1705,1778,1780,637,0,1977,2053,2055,2056,11,1762,1770,1780,1760,0,2037,2045,2055,2035,11,1760,1780,1778,1703,0,2035,2055,2053,1974,11,1703,1778,1779,1700,0,1974,2053,2054,1971,11,1781,1782,1783,1784,0,2057,2058,2059,2060,11,1771,1785,1746,1772,0,2046,2061,2020,2047,11,1769,1768,1786,1787,0,2044,2043,2062,2063,11,1704,1677,1676,1699,0,1975,1948,1947,1970,10,1625,1677,1704,0,1886,1948,1975,11,1457,1401,1718,1788,0,1693,1636,1992,2064,11,1729,1789,1790,1791,0,2003,2065,2066,2067,11,1792,1465,1464,1793,0,2068,1701,1700,2069,11,1794,1795,1796,1797,0,2070,2071,2072,2073,11,1795,1798,1799,1796,0,2071,2074,2075,2072,11,1800,1801,1738,1802,0,2076,2077,2078,2079,11,1803,1751,1804,1805,0,2080,2026,2081,2082,11,1749,1751,1803,1806,0,2024,2026,2080,2083,11,1806,1479,1446,1749,0,2083,1716,1682,2024,11,1465,1792,1807,1481,0,1701,2068,2084,1718,10,1808,1809,1810,0,2085,2086,2087,11,1785,1771,1781,1784,0,2061,2046,2057,2060,11,1771,1762,1761,1781,0,2046,2037,2036,2057,10,1811,1702,1791,0,2088,1973,2067,11,1782,1781,1761,1759,0,2058,2057,2036,2034,11,1718,1717,1812,1788,0,1992,1991,2089,2064,11,1811,1791,1790,1813,0,2088,2067,2066,2090,11,1710,1729,1791,1702,0,1984,2003,2067,1973,11,1787,1786,1814,1764,0,2063,2062,2091,2092,11,1815,1776,1775,1816,0,2093,2051,2050,2094,11,1607,1817,1494,1493,0,1866,2095,1732,1731,11,1610,1612,1818,1819,0,1869,1871,2096,2097,11,1820,1821,1822,1619,0,2098,2099,2100,1880,11,1614,1613,1823,1824,0,1873,1872,2101,2102,11,1613,1825,1826,1823,0,1872,2103,2104,2101,11,1824,1827,1617,1614,0,2105,2106,1878,1877,11,1619,1822,1818,1612,0,1880,2100,2096,1871,11,1777,1734,1716,1715,0,2052,2008,1990,1989,11,1775,1774,1712,1711,0,2050,2049,1986,1985,10,1814,1816,1764,0,2107,2094,2039,11,1740,1741,1726,1725,0,2014,2015,2000,1999,11,1711,1758,1816,1775,0,1985,2033,2094,2050,11,1826,1828,1803,1805,0,2104,2108,2080,2082,11,1823,1826,1805,1742,0,2101,2104,2082,2016,10,1829,1742,1830,0,2109,2016,2110,11,1827,1824,1829,1831,0,2106,2105,2111,2112,11,1821,1832,1818,1822,0,2099,2113,2096,2100,11,1832,1793,1817,1819,0,2113,2069,2095,2097,11,1793,1464,1494,1817,0,2069,1700,1732,2095,11,1774,1727,1777,1833,0,2049,2001,2052,2114,11,1833,1834,1712,1774,0,2114,2115,1986,2049,11,1712,1834,1835,1678,0,1986,2115,2116,1949,11,1674,1668,1678,1835,0,1945,1939,1949,2116,11,1833,1777,1715,1834,0,2114,2052,1989,2115,11,1835,1834,1715,1674,0,2116,2115,1989,1945,11,1742,1805,1804,1743,0,2016,2082,2081,2017,11,1751,1745,1743,1804,0,2026,2019,2017,2081,10,1820,1836,1798,0,2098,2117,2074,11,1820,1619,1621,1836,0,2098,1880,1882,2117,11,1831,1798,1836,1827,0,2112,2074,2117,2106,11,1808,1810,1797,1837,0,2085,2087,2073,2118,11,1736,1837,1838,1735,0,2010,2118,2119,2009,11,1784,1735,1839,1785,0,2060,2009,2120,2061,11,1735,1838,1840,1839,0,2009,2119,2121,2120,11,1841,1794,1797,1810,0,2122,2070,2073,2087,11,1794,1841,1821,1820,0,2070,2122,2099,2098,11,1832,1821,1841,1842,0,2113,2099,2122,2123,11,1793,1832,1842,1792,0,2069,2113,2123,2068,11,1754,1843,1844,1755,0,2029,2124,2125,2030,11,1790,1845,1846,1813,0,2066,2126,2127,2090,11,1847,1845,1790,1789,0,2128,2126,2066,2065,11,1789,1848,1849,1847,0,2065,2129,2130,2128,11,1720,1850,1851,1717,0,1994,2131,2132,1991,11,1681,1664,1663,1852,0,1952,1935,1934,2133,11,1780,1853,774,637,0,2055,2134,2135,2056,11,1853,1854,773,774,0,2134,2136,2137,2135,11,772,773,1854,1855,0,2138,2137,2136,2139,11,1855,1856,651,772,0,2140,2141,2142,2143,11,1741,1744,1732,1726,0,2015,2018,2006,2000,11,1732,1744,1745,1733,0,2006,2018,2019,2007,11,1733,1745,1750,1857,0,2007,2019,2025,2144,11,1731,1733,1857,1752,0,2005,2007,2144,2027,11,1709,1731,1752,1372,0,1983,2005,2027,1607,11,1815,1725,1728,1776,0,2093,1999,2002,2051,10,1725,1737,1740,0,1999,2011,2014,11,1858,1537,1479,1806,0,2145,1785,1716,2083,11,651,1856,1763,652,0,2142,2141,2038,2146,11,1765,1758,1626,1627,0,2040,2033,1887,1890,11,1626,1758,1623,1622,0,1887,2033,1884,1883,10,1770,1853,1780,0,2045,2134,2055,11,1770,1766,1854,1853,0,2045,2041,2136,2134,11,1854,1766,1769,1855,0,2136,2041,2044,2139,11,1855,1769,1787,1856,0,2140,2147,2148,2141,11,1856,1787,1764,1763,0,2141,2148,2039,2038,11,1765,1764,1816,1758,0,2040,2039,2094,2033,11,652,1763,1627,771,0,2146,2038,1890,1889,11,1837,1797,1796,1838,0,2118,2073,2072,2119,11,1799,1840,1838,1796,0,2075,2121,2119,2072,11,1799,1800,1802,1840,0,2075,2076,2079,2121,11,1773,1748,1814,1786,0,2048,2023,2091,2062,11,1814,1748,1815,1816,0,2107,2149,2093,2094,11,1747,1802,1738,1737,0,2021,2079,2078,2022,11,1723,1735,1784,1783,0,1997,2009,2060,2059,11,1754,1753,1736,1722,0,2029,2028,2010,1996,11,1724,1723,1783,1813,0,1998,1997,2059,2090,11,1843,1754,1722,1721,0,2124,2029,1996,1995,11,1817,1607,1610,1819,0,2095,1866,1869,2097,11,1812,1859,1713,1788,0,2089,2150,1987,2064,11,1788,1713,1377,1457,0,2064,1987,1612,1693,11,1860,1812,1717,1851,0,2151,2089,1991,2132,11,1861,1859,1812,1860,0,2152,2150,2089,2151,11,1846,1862,1724,1813,0,2127,2153,1998,2090,11,1862,1863,1721,1724,0,2153,2154,1995,1998,11,1864,1843,1721,1863,0,2155,2124,1995,2154,11,1865,1844,1843,1864,0,2156,2125,2124,2155,11,1866,1851,1850,1867,0,2157,2132,2131,2158,11,1865,1868,1867,1850,0,2156,2159,2158,2131,11,1868,1865,1864,1869,0,2159,2156,2155,2160,11,1869,1864,1863,1870,0,2160,2155,2154,2161,11,1862,1871,1870,1863,0,2153,2162,2161,2154,11,1862,1846,1872,1871,0,2153,2127,2163,2162,11,1846,1845,1873,1872,0,2127,2126,2164,2163,11,1845,1847,1874,1873,0,2126,2128,2165,2164,11,1847,1849,1875,1874,0,2128,2130,2166,2165,11,1876,1861,1860,1877,0,2167,2152,2151,2168,11,1851,1866,1877,1860,0,2132,2157,2168,2151,11,1730,1848,1789,1729,0,2004,2129,2065,2003,11,1875,1849,1861,1876,0,2166,2130,2152,2167,11,1848,1859,1861,1849,0,2129,2150,2152,2130,10,1848,1730,1714,0,2129,2004,1988,11,1675,1708,1371,1339,0,1946,1982,1606,1572,11,1803,1828,1858,1806,0,2080,2108,2145,2083,10,1663,1665,1852,0,1934,1936,2133,11,1842,1841,1810,1809,0,2123,2122,2087,2086,11,1850,1720,1844,1865,0,2131,1994,2125,2156,11,1720,1719,1755,1844,0,1994,1993,2030,2125,11,1756,1755,1719,1878,0,2031,2030,1993,2169,11,1756,1878,1807,1809,0,2031,2169,2084,2086,11,1809,1807,1792,1842,0,2086,2084,2068,2123,11,1827,1836,1621,1617,0,2106,2117,1882,1878,11,1840,1802,1747,1839,0,2121,2079,2021,2120,11,1747,1746,1785,1839,0,2021,2020,2061,2120,11,1878,1400,1481,1807,0,2169,1635,1718,2084,11,1742,1741,1739,1830,0,2016,2015,2013,2110,11,1859,1848,1714,1713,0,2150,2129,1988,1987,11,1857,1750,1445,1558,0,2144,2025,1681,1810,11,1558,1419,1752,1857,0,1810,1655,2027,2144,11,1756,1809,1808,1753,0,2031,2086,2085,2028,11,1753,1808,1837,1736,0,2028,2085,2118,2010,11,1739,1738,1801,1830,0,2013,2012,2170,2110,10,1741,1740,1739,0,2015,2014,2013,11,1665,1326,1559,1852,0,1936,1559,1812,2133,10,1879,1880,1881,0,2171,2172,2173,11,1882,1880,1883,1884,0,2174,2172,2175,2176,10,1885,1886,1887,0,2177,2178,2179,11,1888,1886,1889,1890,0,2180,2178,2181,2182,10,1891,1892,1893,0,2183,2184,2185,11,1894,1891,1895,1896,0,2186,2183,2187,2188,11,1886,1895,1891,1889,0,2178,2187,2183,2181,11,1896,1879,1871,1872,0,2188,2171,2162,2163,11,1869,1882,1884,1868,0,2160,2174,2176,2159,11,1866,1867,1885,1887,0,2157,2158,2177,2179,11,1876,1877,1888,1890,0,2167,2168,2180,2182,11,1890,1893,1875,1876,0,2182,2185,2166,2167,11,1893,1892,1874,1875,0,2185,2184,2165,2166,11,1894,1873,1874,1892,0,2186,2164,2165,2184,11,1894,1896,1872,1873,0,2186,2188,2163,2164,11,1879,1881,1870,1871,0,2171,2173,2161,2162,11,1888,1877,1866,1887,0,2180,2168,2157,2179,11,1885,1867,1868,1884,0,2177,2158,2159,2176,11,1882,1869,1870,1881,0,2174,2160,2161,2173,11,1768,1772,1773,1786,0,2043,2047,2048,2062,10,1818,1832,1819,0,2096,2113,2097,11,1631,1630,1633,1632,0,1894,1893,1896,1895,11,1578,1301,1639,1652,0,1833,1834,1921,1920,11,1331,1578,1652,1659,0,1564,1833,1920,1930,11,1644,1643,1897,1651,0,1907,1906,2189,2190,10,1801,1829,1830,0,2170,2109,2110,11,1493,1580,1608,1607,0,1731,1837,1867,1866,10,1898,1899,1900,0,2191,2192,2193,11,1901,1628,1631,1902,0,2194,1891,1894,2195,11,1903,1636,1628,1901,0,2196,1899,1891,2194,11,1904,1638,1636,1905,0,2197,1901,1899,2198,11,1632,1900,1902,1631,0,1895,2193,2195,1894,11,1900,1632,1635,1898,0,2193,1895,1898,2191,11,1905,1636,1903,1906,0,2198,1899,2196,2199,11,1643,1898,1635,1897,0,1906,2191,1898,2189,11,1640,1907,1908,1641,0,1903,2200,2201,1904,11,1907,1640,1300,1593,0,2200,1903,1524,1851,11,1905,1906,1909,1904,0,2198,2199,2202,2197,11,1901,1910,1911,1903,0,2194,2203,2204,2196,11,1912,1906,1903,1911,0,2205,2199,2196,2204,11,1910,1901,1902,1913,0,2203,2194,2195,2206,11,1900,1899,1913,1902,0,2193,2192,2206,2195,11,1912,1914,1909,1906,0,2205,2207,2202,2199,11,1915,1908,1907,1916,0,2208,2201,2200,2209,11,1914,1602,1601,1909,0,2207,1861,1860,2202,11,1904,1603,1295,1638,0,2197,1862,1519,1901,11,1601,1603,1904,1909,0,1860,1862,2197,2202,11,1916,1907,1593,1604,0,2209,2200,1851,1863,11,1641,1908,1898,1643,0,1904,2201,2191,1906,11,1666,1682,1701,1690,0,1937,1953,1972,1961,11,1691,1695,1917,1692,0,1962,1966,2210,1963,11,1917,1918,1686,1692,0,2210,2211,1957,1963,11,1683,1686,1918,1687,0,1954,1957,2211,1958,11,1687,1918,1917,1695,0,1958,2211,2210,1966,10,1662,1670,1673,0,1933,1941,1944,11,1651,1897,1635,1634,0,2190,2189,1898,1897,10,1683,1650,1684,0,1954,1918,1955,10,1683,1661,1650,0,1954,1932,1918,10,1828,1826,1825,0,2108,2104,2103,10,1691,1700,1779,0,1962,1971,2054,10,1779,1693,1691,0,2054,1964,1962,10,1684,1649,1685,0,1955,1917,1956,10,1650,1649,1684,0,1918,1917,1955,11,1895,1886,1883,1880,0,2187,2178,2175,2172,11,1682,1680,1729,1710,0,1953,1951,2003,1984,11,1813,1783,1782,1811,0,2090,2059,2058,2088,11,1759,1702,1811,1782,0,2034,1973,2088,2058,10,1637,1636,1638,0,1900,1899,1901,11,1829,1801,1800,1831,0,2111,2077,2076,2112,11,1831,1800,1799,1798,0,2112,2076,2075,2074,11,1824,1823,1742,1829,0,2102,2101,2016,2109,11,1714,1681,1852,1378,0,1988,1952,2133,1613,10,1378,1852,1559,0,1613,2133,1812,11,1400,1878,1719,1401,0,1635,2169,1993,1636,10,1401,1383,1382,0,1636,1618,1617,11,1893,1890,1889,1891,0,2185,2182,2181,2183,10,1891,1894,1892,0,2183,2186,2184,11,1879,1896,1895,1880,0,2171,2188,2187,2172,10,1882,1881,1880,0,2174,2173,2172,11,1885,1884,1883,1886,0,2177,2176,2175,2178,10,1888,1887,1886,0,2180,2179,2178,10,1566,1571,1567,0,1819,1824,1820,11,1570,1573,1572,1567,0,1823,1826,1825,1820,10,1575,1574,1577,0,1828,1827,1830,11,1562,1575,1576,1563,0,1815,1828,1829,1816,10,1560,1565,1561,0,1813,1818,1814,11,1564,1569,1568,1561,0,1817,1822,1821,1814,10,1674,1708,1675,0,1945,1982,1946,11,1506,1337,1370,1394,0,1745,1570,1605,1629,10,1498,1471,1515,0,1736,1707,1756,11,1798,1795,1794,1820,0,2074,2071,2070,2098,11,1908,1915,1899,1898,0,2201,2208,2192,2191,10,1584,1590,1581,0,1841,1848,1838,11,141,0,1282,1434,0,1790,1506,1505,1670,10,635,1626,1622,0,1888,1887,1883,10,125,20,124,0,135,21,133,11,20,22,143,123,0,21,23,2212,134,11,771,755,650,652,0,892,875,761,763,10,650,754,753,0,761,874,873,10,1404,1388,1405,0,1639,1623,1640,11,1748,1737,1725,1815,0,2149,2011,1999,2093,11,1443,1389,1490,1489,0,1679,1624,1728,1727,10,1774,1728,1727,0,2049,2002,2001,11,7,10,13,12,0,7,10,13,2213,11,12,13,16,4,0,2213,13,16,2214,10,5,4,16,0,156,2214,16,10,639,1707,643,0,1979,1981,2215,11,1707,1706,636,643,0,1981,1978,2216,2215,11,1706,1705,637,636,0,1978,1977,2056,2216,10,0,2,1278,0,1506,1601,1501,10,633,635,1622,0,1976,1888,1883,10,2001,2000,1934,0,2217,2218,2219,11,1919,1920,1921,1922,0,2220,2221,2222,2223,11,1923,1924,1925,1926,0,2224,2225,2226,2227,11,1927,1928,1929,1930,0,2228,2229,2230,2231,11,1931,1932,1933,1934,0,2232,2233,2234,2219,11,1935,1936,1937,1938,0,2235,2236,2237,2238,11,1939,1940,1941,1942,0,2239,2240,2241,2242,11,1943,1944,1939,1942,0,2243,2244,2239,2242,11,1945,1946,1947,1948,0,2245,2246,2247,2248,11,1949,1945,1948,1950,0,2249,2250,2251,2252,11,1951,1952,1953,1954,0,2253,2254,2255,2256,11,1955,1956,1957,1958,0,2257,2258,2259,2260,11,1959,1960,1954,1953,0,2261,2262,2256,2255,11,1961,1962,1963,1964,0,2263,2264,2265,2266,11,1965,1966,1967,1968,0,2267,2268,2269,2270,11,1969,1970,1971,1972,0,2271,2272,2273,2274,11,1952,1973,1974,1953,0,2254,2275,2276,2255,11,1959,1953,1974,1975,0,2261,2255,2276,2277,11,1976,1977,1978,1979,0,2278,2279,2280,2281,11,1941,1940,1921,1920,0,2241,2240,2222,2221,11,1980,1981,1982,1983,0,2282,2283,2284,2285,11,1950,1948,1984,1985,0,2252,2251,2286,2287,11,1986,1987,1988,1989,0,2288,2289,2290,2291,11,1946,1990,1991,1992,0,2292,2293,2294,2295,11,1989,1988,1945,1949,0,2291,2290,2296,2297,11,1959,1993,1994,1960,0,2298,2299,2300,2301,11,1993,1959,1975,1995,0,2299,2298,2302,2303,11,1996,1997,1969,1972,0,2304,2305,2306,2307,11,1998,1999,2000,2001,0,2308,2309,2218,2217,11,1928,2002,1999,2003,0,2229,2310,2309,2311,11,1952,1939,1944,1973,0,2254,2239,2244,2275,11,1952,1951,1940,1939,0,2254,2253,2240,2239,11,1985,1921,1940,1951,0,2287,2222,2240,2253,11,2004,2005,2006,2007,0,2312,2313,2314,2315,11,2008,2009,2010,1947,0,2316,2317,2318,2247,11,2011,2012,1978,1977,0,2319,2320,2280,2279,11,2013,2014,2015,2016,0,2321,2322,2323,2324,11,2017,1919,1922,2018,0,2325,2220,2223,2326,11,1998,2001,2019,2020,0,2308,2217,2327,2328,11,1934,1933,2019,2001,0,2219,2234,2327,2217,11,1927,2000,2002,1928,0,2228,2218,2310,2229,11,1977,2014,2021,2011,0,2279,2322,2329,2319,11,1955,2014,1977,1976,0,2257,2322,2279,2278,11,1956,1955,1976,2022,0,2258,2257,2278,2330,11,1926,1932,1931,1923,0,2227,2233,2232,2224,11,2022,1976,1979,2023,0,2330,2278,2281,2331,11,2010,2009,2016,2015,0,2318,2317,2324,2323,11,1981,2010,2015,1958,0,2283,2318,2323,2260,11,1982,1981,1958,1957,0,2284,2283,2260,2259,11,1938,1925,1924,1935,0,2238,2226,2225,2235,11,1943,1930,1929,1944,0,2243,2231,2230,2244,11,1944,1929,2024,1973,0,2244,2230,2332,2275,11,1975,1974,1970,1969,0,2277,2276,2272,2271,11,1995,1975,1969,1997,0,2303,2302,2306,2305,11,1986,1993,1995,1997,0,2288,2299,2303,2305,11,1994,1993,1986,1989,0,2300,2299,2288,2291,11,1949,1960,1994,1989,0,2297,2301,2300,2291,11,1960,1949,1950,1954,0,2262,2249,2252,2256,11,1985,1951,1954,1950,0,2287,2253,2256,2252,11,1979,1978,2025,2026,0,2281,2280,2333,2334,11,2023,1979,2026,2020,0,2331,2281,2334,2328,11,2026,1962,2003,2020,0,2334,2264,2311,2328,11,1961,1928,2003,1962,0,2263,2229,2311,2264,11,2024,1929,1928,1961,0,2332,2230,2229,2263,11,1973,2024,2027,1974,0,2275,2332,2335,2276,10,1999,2002,2000,0,2309,2310,2218,11,2020,2003,1999,1998,0,2328,2311,2309,2308,11,1985,1984,2028,2029,0,2287,2286,2336,2337,11,2029,1922,1921,1985,0,2337,2223,2222,2287,11,2029,2028,2018,1922,0,2337,2336,2326,2223,11,1936,2017,2018,1937,0,2236,2338,2339,2237,11,1978,1967,1966,2025,0,2280,2269,2268,2333,11,1972,1971,1966,1965,0,2274,2273,2268,2267,11,1996,1972,1965,2030,0,2304,2307,2340,2341,11,1970,1964,1963,1971,0,2272,2266,2265,2273,11,2026,2025,1963,1962,0,2334,2333,2265,2264,11,1968,2031,2030,1965,0,2342,2343,2341,2340,11,2004,2032,2033,2034,0,2312,2344,2345,2346,11,2025,1966,1971,1963,0,2333,2268,2273,2265,11,2035,2036,2031,1968,0,2347,2348,2343,2342,11,1968,1967,2037,2035,0,2270,2269,2349,2350,11,2023,1933,1932,2022,0,2331,2234,2233,2330,11,1932,1926,1956,2022,0,2233,2227,2258,2330,11,1957,1956,1926,1925,0,2259,2258,2227,2226,11,1982,1957,1925,1938,0,2284,2259,2226,2238,11,1982,1938,1937,1983,0,2284,2238,2237,2285,11,2032,2031,2036,2033,0,2344,2343,2348,2345,11,2031,2032,2038,2030,0,2343,2344,2351,2341,11,1996,2030,2038,1987,0,2304,2341,2351,2289,11,1997,1996,1987,1986,0,2305,2304,2289,2288,11,2038,2032,2004,2007,0,2351,2344,2312,2315,11,2012,2037,1967,1978,0,2320,2349,2269,2280,11,2027,2024,1961,1964,0,2335,2332,2263,2266,11,1970,1974,2027,1964,0,2272,2276,2335,2266,11,1947,2010,1981,1980,0,2247,2318,2283,2282,11,1948,1947,1980,1984,0,2248,2247,2282,2352,11,1937,2018,2028,1983,0,2237,2339,2353,2285,11,2008,1947,1946,1992,0,2316,2247,2246,2354,11,1987,2038,2007,1988,0,2289,2351,2315,2290,11,1946,1945,1988,1990,0,2292,2296,2290,2293,11,2006,2005,1991,1990,0,2314,2313,2294,2293,11,1984,1980,1983,2028,0,2352,2282,2285,2353,11,1958,2015,2014,1955,0,2260,2323,2322,2257,11,2007,2006,1990,1988,0,2315,2314,2293,2290,11,1933,2023,2020,2019,0,2234,2331,2328,2327,11,2039,2040,2013,2016,0,2355,2356,2321,2324,11,2036,2035,2041,2042,0,2348,2347,2357,2358,11,2043,2041,2035,2037,0,2359,2360,2350,2349,11,2044,2045,2012,2011,0,2361,2362,2320,2319,11,1992,1991,2046,2047,0,2295,2294,2363,2364,11,2034,2048,2049,2004,0,2346,2365,2366,2312,11,2005,2004,2049,2050,0,2313,2312,2366,2367,11,2033,2036,2042,2051,0,2345,2348,2358,2368,11,2034,2033,2051,2048,0,2346,2345,2368,2365,11,2009,2008,2052,2053,0,2317,2316,2369,2370,11,2011,2021,2054,2044,0,2319,2329,2371,2361,11,2009,2053,2039,2016,0,2317,2370,2355,2324,11,2012,2045,2043,2037,0,2320,2362,2359,2349,11,2052,2008,1992,2047,0,2369,2316,2354,2372,11,1991,2005,2050,2046,0,2294,2313,2367,2363,10,2055,2056,2057,0,2373,2374,2375,11,2058,2059,2056,2055,0,2376,2377,2374,2373,10,2060,2061,2062,0,2378,2379,2380,11,2059,2058,2063,2064,0,2377,2376,2381,2382,11,2065,2061,2060,2066,0,2383,2379,2378,2384,11,2067,2065,2066,2068,0,2385,2383,2384,2386,11,2069,2070,2067,2068,0,2387,2388,2385,2386,11,2064,2063,2070,2069,0,2382,2381,2388,2387,11,2040,2054,2021,2013,0,2356,2371,2329,2321,10,2021,2014,2013,0,2329,2322,2321,11,2057,2056,2071,2072,0,2375,2374,2389,2390,11,2057,2072,2073,2055,0,2375,2390,2391,2373,11,2074,2071,2056,2059,0,2392,2389,2374,2377,11,2075,2058,2055,2073,0,2393,2394,2395,2396,11,2076,2077,2062,2061,0,2397,2398,2399,2400,11,2078,2060,2062,2077,0,2401,2378,2380,2402,11,2074,2059,2064,2079,0,2392,2377,2382,2403,11,2080,2063,2058,2075,0,2404,2405,2394,2393,11,2081,2076,2061,2065,0,2406,2397,2400,2407,11,2082,2066,2060,2078,0,2408,2384,2378,2401,11,2083,2081,2065,2067,0,2409,2406,2407,2410,11,2084,2068,2066,2082,0,2411,2386,2384,2408,11,2085,2083,2067,2070,0,2412,2409,2410,2413,11,2069,2068,2084,2086,0,2387,2386,2411,2414,11,2070,2063,2080,2085,0,2413,2405,2404,2412,11,2079,2064,2069,2086,0,2403,2382,2387,2414,11,2072,2087,2088,2073,0,2390,2415,2416,2391,11,2089,2087,2072,2071,0,2417,2415,2390,2389,11,2090,2089,2071,2074,0,2418,2417,2389,2392,11,2091,2090,2074,2079,0,2419,2418,2392,2403,11,2086,2092,2091,2079,0,2414,2420,2419,2403,11,2086,2084,2093,2092,0,2414,2411,2421,2420,11,2093,2084,2082,2094,0,2421,2411,2408,2422,11,2094,2082,2078,2095,0,2422,2408,2401,2423,11,2077,2096,2095,2078,0,2402,2424,2423,2401,11,2097,2096,2077,2076,0,2425,2426,2398,2397,11,2076,2081,2098,2097,0,2397,2406,2427,2425,11,2099,2098,2081,2083,0,2428,2427,2406,2409,11,2100,2099,2083,2085,0,2429,2428,2409,2412,11,2100,2085,2080,2101,0,2429,2412,2404,2430,11,2101,2080,2075,2102,0,2430,2404,2393,2431,11,2102,2075,2073,2088,0,2431,2393,2396,2432,11,2053,2052,2087,2089,0,2370,2369,2415,2417,11,2087,2052,2047,2088,0,2415,2369,2372,2416,11,2047,2046,2102,2088,0,2364,2363,2431,2432,11,2050,2101,2102,2046,0,2367,2430,2431,2363,11,2050,2049,2100,2101,0,2367,2366,2429,2430,11,2049,2048,2099,2100,0,2366,2365,2428,2429,11,2048,2051,2098,2099,0,2365,2368,2427,2428,11,2097,2098,2051,2042,0,2425,2427,2368,2358,11,2042,2041,2096,2097,0,2358,2357,2426,2425,11,2096,2041,2043,2095,0,2424,2360,2359,2423,11,2045,2094,2095,2043,0,2362,2422,2423,2359,11,2044,2093,2094,2045,0,2361,2421,2422,2362,11,2054,2092,2093,2044,0,2371,2420,2421,2361,11,2092,2054,2040,2091,0,2420,2371,2356,2419,11,2040,2039,2090,2091,0,2356,2355,2418,2419,11,2089,2090,2039,2053,0,2417,2418,2355,2370,11,2103,2104,2105,2106,0,2433,2434,2435,2436,11,2107,2108,2109,2110,0,2437,2438,2439,2440,11,2111,2112,2113,2114,0,2441,2442,2443,2444,11,2115,2116,2117,2118,0,2445,2446,2447,2448,11,2119,2120,2121,2122,0,2449,2450,2451,2452,11,2123,2124,2125,2126,0,2453,2454,2455,2456,11,2125,2127,2128,2126,0,2455,2457,2458,2456,11,2129,2130,2131,2132,0,2459,2460,2461,2462,11,2133,2134,2130,2129,0,2463,2464,2465,2466,11,2135,2136,2137,2138,0,2467,2468,2469,2470,11,2139,2140,2141,2142,0,2471,2472,2473,2474,11,2143,2137,2136,2144,0,2475,2469,2468,2476,11,2145,2146,2147,2148,0,2477,2478,2479,2480,11,2149,2150,2151,2152,0,2481,2482,2483,2484,11,2153,2154,2155,2156,0,2485,2486,2487,2488,11,2138,2137,2157,2158,0,2470,2469,2489,2490,11,2143,2159,2157,2137,0,2475,2491,2489,2469,11,2160,2161,2162,2163,0,2492,2493,2494,2495,11,2123,2106,2105,2124,0,2453,2436,2435,2454,11,2164,2165,2166,2167,0,2496,2497,2498,2499,11,2134,2168,2169,2130,0,2464,2500,2501,2465,11,2170,2171,2172,2173,0,2502,2503,2504,2505,11,2132,2174,2175,2176,0,2506,2507,2508,2509,11,2171,2133,2129,2172,0,2503,2510,2511,2504,11,2143,2144,2177,2178,0,2512,2513,2514,2515,11,2178,2179,2159,2143,0,2515,2516,2517,2512,11,2153,2180,2181,2154,0,2518,2519,2520,2521,11,2182,2183,2184,2185,0,2522,2523,2524,2525,11,2114,2186,2185,2187,0,2444,2526,2525,2527,11,2127,2125,2138,2158,0,2457,2455,2470,2490,11,2138,2125,2124,2135,0,2470,2455,2454,2467,11,2168,2135,2124,2105,0,2500,2467,2454,2435,11,2188,2189,2190,2191,0,2528,2529,2530,2531,11,2192,2131,2193,2194,0,2532,2461,2533,2534,11,2195,2161,2160,2196,0,2535,2493,2492,2536,11,2197,2198,2199,2200,0,2537,2538,2539,2540,11,2201,2202,2104,2103,0,2541,2542,2434,2433,11,2182,2203,2204,2183,0,2522,2543,2544,2523,11,2116,2183,2204,2117,0,2446,2523,2544,2447,11,2111,2114,2187,2184,0,2441,2444,2527,2524,11,2161,2195,2205,2200,0,2493,2535,2545,2540,11,2161,2200,2139,2162,0,2493,2540,2471,2494,11,2162,2139,2142,2206,0,2494,2471,2474,2546,11,2108,2107,2115,2118,0,2438,2437,2445,2448,11,2206,2207,2163,2162,0,2546,2547,2495,2494,11,2193,2199,2198,2194,0,2533,2539,2538,2534,11,2167,2140,2199,2193,0,2499,2472,2539,2533,11,2166,2141,2140,2167,0,2498,2473,2472,2499,11,2120,2119,2110,2109,0,2450,2449,2440,2439,11,2128,2127,2113,2112,0,2458,2457,2443,2442,11,2208,2113,2127,2158,0,2548,2443,2457,2490,11,2159,2153,2156,2157,0,2491,2485,2488,2489,11,2179,2180,2153,2159,0,2516,2519,2518,2517,11,2170,2180,2179,2178,0,2502,2519,2516,2515,11,2177,2171,2170,2178,0,2514,2503,2502,2515,11,2133,2171,2177,2144,0,2510,2503,2514,2513,11,2144,2136,2134,2133,0,2476,2468,2464,2463,11,2168,2134,2136,2135,0,2500,2464,2468,2467,11,2163,2209,2210,2160,0,2495,2549,2550,2492,11,2207,2203,2209,2163,0,2547,2543,2549,2495,11,2209,2203,2186,2148,0,2549,2543,2526,2480,11,2145,2148,2186,2114,0,2477,2480,2526,2444,11,2208,2145,2114,2113,0,2548,2477,2444,2443,11,2158,2157,2211,2208,0,2490,2489,2551,2548,10,2185,2184,2187,0,2525,2524,2527,11,2203,2182,2185,2186,0,2543,2522,2525,2526,11,2168,2212,2213,2169,0,2500,2552,2553,2501,11,2105,2104,2212,2168,0,2435,2434,2552,2500,11,2212,2104,2202,2213,0,2552,2434,2542,2553,11,2122,2121,2202,2201,0,2452,2451,2554,2555,11,2160,2210,2152,2151,0,2492,2550,2484,2483,11,2154,2149,2152,2155,0,2486,2481,2484,2487,11,2181,2214,2149,2154,0,2520,2556,2557,2521,11,2156,2155,2147,2146,0,2488,2487,2479,2478,11,2209,2148,2147,2210,0,2549,2480,2479,2550,11,2150,2149,2214,2215,0,2558,2557,2556,2559,11,2216,2217,2190,2218,0,2560,2561,2530,2562,11,2210,2147,2155,2152,0,2550,2479,2487,2484,11,2219,2150,2215,2220,0,2563,2558,2559,2564,11,2150,2219,2221,2151,0,2482,2565,2566,2483,11,2207,2206,2118,2117,0,2547,2546,2448,2447,11,2142,2108,2118,2206,0,2474,2438,2448,2546,11,2141,2109,2108,2142,0,2473,2439,2438,2474,11,2166,2120,2109,2141,0,2498,2450,2439,2473,11,2166,2165,2121,2120,0,2498,2497,2451,2450,11,2220,2215,2217,2216,0,2564,2559,2561,2560,11,2222,2217,2215,2214,0,2567,2561,2559,2556,11,2181,2173,2222,2214,0,2520,2505,2567,2556,11,2180,2170,2173,2181,0,2519,2502,2505,2520,11,2222,2191,2190,2217,0,2567,2531,2530,2561,11,2196,2160,2151,2221,0,2536,2492,2483,2566,11,2211,2146,2145,2208,0,2551,2478,2477,2548,11,2156,2146,2211,2157,0,2488,2478,2551,2489,11,2131,2164,2167,2193,0,2461,2496,2499,2533,11,2130,2169,2164,2131,0,2460,2568,2496,2461,11,2121,2165,2213,2202,0,2451,2497,2569,2554,11,2192,2174,2132,2131,0,2532,2570,2462,2461,11,2173,2172,2191,2222,0,2505,2504,2531,2567,11,2132,2176,2172,2129,0,2506,2509,2504,2511,11,2188,2176,2175,2189,0,2528,2509,2508,2529,11,2169,2213,2165,2164,0,2568,2569,2497,2496,11,2200,2199,2140,2139,0,2540,2539,2472,2471,11,2191,2172,2176,2188,0,2531,2504,2509,2528,11,2117,2204,2203,2207,0,2447,2544,2543,2547,11,2223,2198,2197,2224,0,2571,2538,2537,2572,11,2220,2225,2226,2219,0,2564,2573,2574,2563,11,2227,2221,2219,2226,0,2575,2566,2565,2576,11,2196,2228,2229,2195,0,2536,2577,2578,2535,11,2174,2230,2231,2175,0,2507,2579,2580,2508,11,2218,2190,2232,2233,0,2562,2530,2581,2582,11,2189,2234,2232,2190,0,2529,2583,2581,2530,11,2216,2235,2225,2220,0,2560,2584,2573,2564,11,2218,2233,2235,2216,0,2562,2582,2584,2560,11,2194,2236,2237,2192,0,2534,2585,2586,2532,11,2195,2229,2238,2205,0,2535,2578,2587,2545,11,2194,2198,2223,2236,0,2534,2538,2571,2585,11,2196,2221,2227,2228,0,2536,2566,2575,2577,11,2237,2230,2174,2192,0,2586,2588,2570,2532,11,2175,2231,2234,2189,0,2508,2580,2583,2529,10,2239,2240,2241,0,2589,2590,2591,11,2242,2239,2241,2243,0,2592,2589,2591,2593,10,2244,2245,2246,0,2594,2595,2596,11,2243,2247,2248,2242,0,2593,2597,2598,2592,11,2249,2250,2244,2246,0,2599,2600,2594,2596,11,2251,2252,2250,2249,0,2601,2602,2600,2599,11,2253,2252,2251,2254,0,2603,2602,2601,2604,11,2247,2253,2254,2248,0,2597,2603,2604,2598,11,2224,2197,2205,2238,0,2572,2537,2545,2587,10,2205,2197,2200,0,2545,2537,2540,11,2255,2241,2240,2256,0,2605,2591,2590,2606,11,2240,2239,2257,2256,0,2590,2589,2607,2606,11,2258,2243,2241,2255,0,2608,2593,2591,2605,11,2259,2257,2239,2242,0,2609,2610,2611,2612,11,2260,2246,2245,2261,0,2613,2614,2615,2616,11,2245,2244,2262,2261,0,2595,2594,2617,2618,11,2247,2243,2258,2263,0,2597,2593,2608,2619,11,2264,2259,2242,2248,0,2620,2609,2612,2621,11,2265,2249,2246,2260,0,2622,2623,2614,2613,11,2266,2262,2244,2250,0,2624,2617,2594,2600,11,2267,2251,2249,2265,0,2625,2626,2623,2622,11,2268,2266,2250,2252,0,2627,2624,2600,2602,11,2269,2254,2251,2267,0,2628,2629,2626,2625,11,2268,2252,2253,2270,0,2627,2602,2603,2630,11,2264,2248,2254,2269,0,2620,2621,2629,2628,11,2263,2270,2253,2247,0,2619,2630,2603,2597,11,2271,2272,2256,2257,0,2631,2632,2606,2607,11,2273,2255,2256,2272,0,2633,2605,2606,2632,11,2274,2258,2255,2273,0,2634,2608,2605,2633,11,2275,2263,2258,2274,0,2635,2619,2608,2634,11,2270,2263,2275,2276,0,2630,2619,2635,2636,11,2277,2268,2270,2276,0,2637,2627,2630,2636,11,2277,2278,2266,2268,0,2637,2638,2624,2627,11,2278,2279,2262,2266,0,2638,2639,2617,2624,11,2279,2280,2261,2262,0,2639,2640,2618,2617,11,2281,2260,2261,2280,0,2641,2613,2616,2642,11,2281,2282,2265,2260,0,2641,2643,2622,2613,11,2283,2267,2265,2282,0,2644,2625,2622,2643,11,2284,2269,2267,2283,0,2645,2628,2625,2644,11,2264,2269,2284,2285,0,2620,2628,2645,2646,11,2259,2264,2285,2286,0,2609,2620,2646,2647,11,2257,2259,2286,2271,0,2610,2609,2647,2648,10,2183,2116,2184,0,2523,2446,2524,11,2236,2273,2272,2237,0,2585,2633,2632,2586,11,2230,2237,2272,2271,0,2588,2586,2632,2631,11,2230,2271,2286,2231,0,2579,2648,2647,2580,11,2286,2285,2234,2231,0,2647,2646,2583,2580,11,2234,2285,2284,2232,0,2583,2646,2645,2581,11,2232,2284,2283,2233,0,2581,2645,2644,2582,11,2233,2283,2282,2235,0,2582,2644,2643,2584,11,2281,2225,2235,2282,0,2641,2573,2584,2643,11,2225,2281,2280,2226,0,2573,2641,2642,2574,11,2227,2226,2280,2279,0,2575,2576,2640,2639,11,2228,2227,2279,2278,0,2577,2575,2639,2638,11,2229,2228,2278,2277,0,2578,2577,2638,2637,11,2238,2229,2277,2276,0,2587,2578,2637,2636,11,2224,2238,2276,2275,0,2572,2587,2636,2635,11,2224,2275,2274,2223,0,2572,2635,2634,2571,11,2223,2274,2273,2236,0,2571,2634,2633,2585,11,2287,2288,2289,2290,0,2649,2650,2651,2652,11,2291,2292,2293,2294,0,2653,2654,2655,2656,11,2295,2296,2297,2298,0,2657,2658,2659,2660,11,2299,2300,2301,2302,0,2661,2662,2663,2664,11,2296,2303,2304,2297,0,2658,2665,2666,2659,11,2303,2300,2305,2306,0,2665,2662,2667,2668,11,2290,2291,2294,2287,0,2652,2653,2656,2649,11,2307,2308,2309,2310,0,2669,2670,2671,2672,11,2292,2311,2312,2293,0,2654,2673,2674,2655,11,2313,2288,2287,2314,0,2675,2650,2649,2676,11,2294,2293,2315,2316,0,2656,2655,2677,2678,11,2307,2317,2318,2319,0,2669,2679,2680,2681,11,2316,2314,2287,2294,0,2678,2676,2649,2656,11,2315,2293,2312,2320,0,2677,2655,2674,2682,11,2321,2316,2315,2320,0,2683,2678,2677,2682,11,2310,2322,2323,2307,0,2672,2684,2685,2669,11,2324,2325,2326,2327,0,2686,2687,2688,2689,11,2328,2329,2322,2310,0,2690,2691,2684,2672,11,2330,2329,2328,2331,0,2692,2691,2690,2693,11,2332,2333,2330,2334,0,2694,2695,2692,2696,11,2335,2336,2333,2337,0,2697,2698,2695,2699,11,1507,2794,2322,2329,0,2700,2701,2684,2691,11,2300,2303,1272,1270,0,2662,2665,2702,2703,11,1268,1275,2339,2340,0,2704,2705,2706,2707,11,2341,1263,1268,2340,0,2708,2709,2704,2707,11,2333,2342,2329,2330,0,2695,2710,2691,2692,10,2795,1537,2796,0,2711,2712,2713,11,2343,2328,2325,2324,0,2714,2690,2687,2686,11,2327,2344,2345,2324,0,2689,2715,2716,2686,11,2326,2310,2346,2327,0,2688,2672,2717,2689,11,2325,2328,2310,2326,0,2687,2690,2672,2688,11,2295,2298,2311,2339,0,2657,2660,2673,2706,11,2292,2340,2339,2311,0,2654,2707,2706,2673,11,2291,2341,2340,2292,0,2653,2708,2707,2654,11,2290,2347,2341,2291,0,2652,2718,2708,2653,11,2290,2289,2348,2347,0,2652,2651,2719,2718,11,2298,2297,2349,2350,0,2660,2659,2720,2721,11,2351,2352,2353,2354,0,2722,2723,2724,2725,11,2355,2356,2357,2358,0,2726,2727,2728,2729,11,2358,2357,2359,2360,0,2729,2728,2730,2731,11,2359,2361,2362,2360,0,2730,2732,2733,2731,11,2363,2364,2365,2366,0,2734,2735,2736,2737,11,2367,2368,2369,2370,0,2738,2739,2740,2741,11,2371,2372,2373,2374,0,2742,2743,2744,2745,11,2375,2376,2377,2378,0,2746,2747,2748,2749,11,2379,2380,2381,2382,0,2750,2751,2752,2753,11,2356,2355,2383,2384,0,2727,2726,2754,2755,11,2385,2386,2387,2388,0,2756,2757,2758,2759,11,2389,2385,2388,2390,0,2760,2756,2759,2761,11,2391,2389,2390,2392,0,2762,2760,2761,2763,11,2393,2394,2391,2392,0,2764,2765,2762,2763,11,2395,2396,2397,2398,0,2766,2767,2768,2769,11,2387,2386,2399,2400,0,2758,2757,2770,2771,11,2401,2402,2403,2404,0,2772,2773,2774,2775,11,2405,2406,2407,2408,0,2776,2777,2778,2779,11,2409,2410,2411,2412,0,2780,2781,2782,2783,11,2413,2414,2415,2416,0,2784,2785,2786,2787,11,2417,2418,2413,2416,0,2788,2789,2784,2787,11,2418,2417,2419,2420,0,2789,2788,2790,2791,11,2421,2422,2423,2424,0,2792,2793,2794,2795,11,2425,2426,2427,2428,0,2796,2797,2798,2799,11,2426,2429,2430,2427,0,2797,2800,2801,2798,11,2379,2431,2432,2380,0,2750,2802,2803,2751,11,2380,2432,2433,2434,0,2751,2803,2804,2805,11,2434,2433,2435,2364,0,2805,2804,2806,2735,11,2364,2435,2436,2365,0,2735,2806,2807,2736,11,2437,2356,2384,2438,0,2808,2727,2755,2809,11,2437,2439,2357,2356,0,2808,2810,2728,2727,11,2357,2439,2440,2359,0,2728,2810,2811,2730,11,2440,2441,2361,2359,0,2811,2812,2732,2730,11,2367,2442,2443,2444,0,2738,2813,2814,2815,11,2445,2441,2440,2439,0,2816,2812,2811,2810,11,2437,2438,2445,2439,0,2808,2809,2816,2810,11,2425,2446,2447,2448,0,2796,2817,2818,2819,11,2449,2450,2420,2451,0,2820,2821,2791,2822,11,2420,2450,2452,2418,0,2791,2821,2823,2789,11,2452,2453,2413,2418,0,2823,2824,2784,2789,11,2453,2454,2414,2413,0,2824,2825,2785,2784,11,2411,2410,2455,2456,0,2782,2781,2826,2827,11,2376,2375,2406,2405,0,2747,2746,2777,2776,11,2381,2380,2434,2457,0,2752,2751,2805,2828,11,2458,2444,2443,2459,0,2829,2815,2814,2830,11,2458,2460,2461,2462,0,2829,2831,2832,2833,11,2431,2379,2374,2463,0,2802,2750,2745,2834,11,2464,2460,2465,2466,0,2835,2836,2837,2838,11,2459,2465,2460,2458,0,2830,2839,2831,2829,11,2369,2376,2405,2467,0,2740,2747,2776,2840,11,2376,2369,2368,2377,0,2747,2740,2739,2748,11,2405,2408,2468,2467,0,2776,2779,2841,2840,11,2469,2470,2400,2399,0,2842,2843,2771,2770,11,2442,2361,2441,2443,0,2813,2732,2812,2814,11,2361,2442,2471,2362,0,2732,2813,2844,2733,11,2410,2409,2472,2455,0,2781,2780,2845,2826,11,2438,2384,2365,2436,0,2809,2755,2736,2807,11,2384,2383,2366,2365,0,2755,2754,2737,2736,11,2449,2451,2448,2447,0,2820,2822,2819,2818,11,2422,2473,2474,2423,0,2793,2846,2847,2794,11,2475,2476,2477,2478,0,2848,2849,2850,2851,11,2476,2475,2479,2480,0,2849,2848,2852,2853,11,2479,2481,2482,2480,0,2852,2854,2855,2853,11,2481,2412,2483,2482,0,2854,2783,2856,2855,11,2411,2456,2467,2468,0,2782,2827,2840,2841,11,2362,2471,2455,2454,0,2733,2844,2826,2825,11,2360,2362,2454,2453,0,2731,2733,2825,2824,11,2452,2358,2360,2453,0,2823,2729,2731,2824,11,2450,2355,2358,2452,0,2821,2726,2729,2823,11,2412,2481,2415,2409,0,2783,2854,2786,2780,11,2416,2415,2481,2479,0,2787,2786,2854,2852,11,2475,2417,2416,2479,0,2848,2788,2787,2852,11,2417,2475,2478,2419,0,2788,2848,2851,2790,11,2422,2448,2451,2473,0,2793,2819,2822,2846,11,2421,2425,2448,2422,0,2792,2796,2819,2793,11,2370,2471,2442,2367,0,2741,2844,2813,2738,11,2449,2383,2355,2450,0,2820,2754,2726,2821,11,2383,2449,2447,2366,0,2754,2820,2818,2737,11,2446,2363,2366,2447,0,2817,2734,2737,2818,11,2480,2385,2389,2476,0,2853,2756,2760,2849,11,2476,2391,2474,2477,0,2849,2762,2847,2850,11,2394,2423,2474,2391,0,2765,2794,2847,2762,11,2394,2484,2424,2423,0,2765,2857,2795,2794,11,2485,2421,2424,2396,0,2858,2792,2795,2767,11,2486,2487,2488,2485,0,2859,2860,2861,2858,11,2489,2490,2491,2492,0,2862,2863,2864,2865,11,2491,2493,2494,2492,0,2864,2866,2867,2865,11,2495,2469,2399,2483,0,2868,2842,2770,2856,11,2399,2386,2482,2483,0,2770,2757,2855,2856,11,2482,2386,2385,2480,0,2855,2757,2756,2853,11,2496,2491,2490,2497,0,2869,2864,2863,2870,11,2498,2430,2429,2499,0,2871,2801,2800,2872,11,2500,2501,2404,2403,0,2873,2874,2775,2774,11,2382,2381,2500,2502,0,2753,2752,2873,2875,11,2395,2398,2497,2490,0,2766,2769,2870,2863,11,2503,2504,2505,2506,0,2876,2877,2878,2879,11,2503,2507,2508,2504,0,2876,2880,2881,2877,11,2509,2506,2510,2511,0,2882,2879,2883,2884,11,2512,2128,2112,2513,0,2885,2886,2887,2888,11,2514,2515,2516,2517,0,2889,2890,2891,2892,11,2518,2123,2126,2519,0,2893,2894,2895,2896,11,2201,2103,2520,2521,0,2897,2898,2899,2900,11,2522,2523,2524,2513,0,2901,2902,2903,2888,11,2103,2106,2518,2520,0,2898,2904,2893,2899,11,2525,2503,2506,2509,0,2905,2876,2879,2882,11,2507,2526,2470,2508,0,2906,2907,2843,2908,11,2527,2400,2470,2526,0,2909,2771,2843,2907,11,2400,2527,2528,2387,0,2771,2909,2910,2758,11,2528,2529,2388,2387,0,2910,2911,2759,2758,11,2529,2530,2390,2388,0,2911,2912,2761,2759,11,2530,2531,2392,2390,0,2912,2913,2763,2761,11,2392,2531,2532,2393,0,2763,2913,2914,2764,11,2520,2518,2533,2534,0,2899,2893,2915,2916,11,2519,2535,2533,2518,0,2896,2917,2915,2893,11,2536,2535,2519,2512,0,2918,2917,2896,2885,11,2517,2516,2532,2537,0,2892,2891,2914,2919,11,2514,2511,2510,2515,0,2889,2884,2883,2890,11,2454,2455,2472,2414,0,2825,2826,2845,2785,11,2414,2472,2409,2415,0,2785,2845,2780,2786,11,2538,2539,2540,2541,0,2920,2921,2922,2923,11,2542,2543,2544,2545,0,2924,2925,2926,2927,11,2546,2547,2548,2549,0,2928,2929,2930,2931,11,2550,2551,2552,2553,0,2932,2933,2934,2935,11,2554,2555,2556,2557,0,2936,2937,2938,2939,11,2558,2559,2560,2561,0,2940,2941,2942,2943,11,2349,2562,2563,2564,0,2720,2944,2945,2946,11,2565,2566,2567,2568,0,2947,2948,2949,2950,11,2569,2570,2571,2572,0,2951,2952,2953,2954,11,2573,2574,2575,2576,0,2955,2956,2957,2958,11,2577,2578,2579,2580,0,2959,2960,2961,2962,11,2581,2582,2583,2584,0,2963,2964,2965,2966,11,2585,2586,2587,2588,0,2967,2968,2969,2970,11,2589,2590,2591,2592,0,2971,2972,2973,2974,11,2593,2594,2595,2596,0,2975,2976,2977,2978,11,2597,2598,2599,2600,0,2979,2980,2981,2982,11,2601,2602,2603,2604,0,2983,2984,2985,2986,11,2605,2606,2607,2608,0,2987,2988,2989,2990,11,2609,2590,2610,2611,0,2991,2972,2992,2993,11,2612,2610,2590,2613,0,2994,2992,2972,2995,11,2614,2615,2616,2617,0,2996,2997,2998,2999,11,2611,2618,2619,2609,0,2993,3000,3001,2991,11,2620,2621,2622,2623,0,3002,3003,3004,3005,11,2624,2625,2621,2626,0,3006,3007,3003,3008,11,2627,2625,2628,2629,0,3009,3007,3010,3011,11,2630,2627,2631,2632,0,3012,3009,3013,3014,11,2633,2634,2635,2636,0,3015,3016,3017,3018,11,2636,2635,2637,2638,0,3018,3017,3019,3020,11,2618,2611,2639,2640,0,3000,2993,3021,3022,11,2641,2610,2642,2643,0,3023,2992,3024,3025,11,2644,2645,2643,2646,0,3026,3027,3025,3028,11,2647,2634,2633,2648,0,3029,3030,3031,3032,11,2649,2650,2651,2652,0,3033,3034,3035,3036,11,2564,2653,2350,2349,0,2946,3037,2721,2720,11,2651,2650,2320,2312,0,3035,3034,2682,2674,11,2297,2654,2655,2349,0,2659,3038,3039,2720,11,2656,2657,2658,2659,0,3040,3041,3042,3043,11,2660,2661,2662,2663,0,3044,3045,3046,3047,11,2664,2665,2666,2667,0,3048,3049,3050,3051,11,2668,2669,2670,2671,0,3052,3053,3054,3055,11,2672,2673,2674,2675,0,3056,3057,3058,3059,11,2676,2677,2678,2679,0,3060,3061,3062,3063,11,2680,2681,2682,2683,0,3064,3065,3066,3067,11,2684,2685,2680,2683,0,3068,3069,3064,3067,11,2686,2687,2685,2684,0,3070,3071,3069,3068,11,2687,2686,2688,2689,0,3071,3070,3072,3073,11,2690,2691,2689,2688,0,3074,3075,3073,3072,11,2692,2693,2691,2690,0,3076,3077,3075,3074,11,2694,2639,2693,2692,0,3078,3021,3077,3076,11,2695,2640,2639,2694,0,3079,3022,3021,3078,11,2636,2638,2696,2697,0,3018,3020,3080,3081,11,2698,2633,2636,2697,0,3082,3015,3018,3081,11,2648,2633,2698,2699,0,3032,3031,3083,3084,11,2681,2648,2699,2682,0,3065,3032,3084,3066,11,2682,2699,2459,2443,0,3066,3084,2830,2814,11,2699,2698,2465,2459,0,3084,3083,2839,2830,11,2465,2698,2697,2466,0,2837,3082,3081,2838,11,2466,2697,2696,2463,0,2838,3081,3080,2834,11,2618,2637,2605,2619,0,3000,3019,2987,3001,11,2637,2618,2640,2638,0,3019,3000,3022,3020,11,2695,2696,2638,2640,0,3079,3080,3020,3022,11,2435,2690,2688,2436,0,2806,3074,3072,2807,11,2433,2692,2690,2435,0,2804,3076,3074,2806,11,2432,2694,2692,2433,0,2803,3078,3076,2804,11,2431,2695,2694,2432,0,2802,3079,3078,2803,11,2695,2431,2463,2696,0,3079,2802,2834,3080,11,2564,2700,2701,2591,0,2946,3085,3086,2973,11,2702,2703,2704,2705,0,3087,3088,3089,3090,11,2706,2707,2708,2709,0,3091,3092,3093,3094,11,2710,2711,2712,2713,0,3095,3096,3097,3098,11,2714,2715,2716,2717,0,3099,3100,3101,3102,11,2718,2719,2720,2721,0,3103,3104,3105,3106,11,2722,2723,2724,2725,0,3107,3108,3109,3110,11,2726,2727,2728,2729,0,3111,3112,3113,3114,11,2730,2653,2731,2732,0,3115,3037,3116,3117,11,2653,2564,2591,2731,0,3037,2946,2973,3116,11,2652,2730,2732,2649,0,3036,3115,3117,3033,11,2683,2682,2443,2441,0,3067,3066,2814,2812,11,2445,2684,2683,2441,0,2816,3068,3067,2812,11,2438,2686,2684,2445,0,2809,3070,3068,2816,11,2686,2438,2436,2688,0,3070,2809,2807,3072,11,2506,2505,2733,2510,0,2879,2878,3118,2883,11,2734,2515,2510,2733,0,3119,2890,2883,3118,11,2516,2515,2734,2484,0,2891,2890,3119,2857,11,2374,2379,2382,2371,0,2745,2750,2753,2742,11,2371,2382,2502,2735,0,2742,2753,2875,3120,11,2364,2363,2457,2434,0,2735,2734,2828,2805,11,2736,2737,2738,2739,0,3121,3122,3123,3124,11,2498,2402,2401,2430,0,2871,2773,2772,2801,11,2498,2737,2736,2402,0,2871,3122,3121,2773,11,2456,2370,2369,2467,0,2827,2741,2740,2840,11,2471,2370,2456,2455,0,2844,2741,2827,2826,11,2412,2411,2468,2483,0,2783,2782,2841,2856,11,2495,2483,2468,2408,0,2868,2856,2841,2779,11,2407,2740,2492,2494,0,3125,3126,2865,2867,11,2737,2741,2742,2738,0,3122,3127,3128,3123,11,2652,2350,2653,2730,0,3036,2721,3037,3115,11,2350,2652,2651,2298,0,2721,3036,3035,2660,11,2312,2311,2298,2651,0,2674,2673,2660,3035,11,2853,3318,1828,2859,0,3129,3130,3131,3132,10,1537,3319,2796,0,3133,3134,3135,11,2744,2745,2746,2747,0,3136,3137,3138,3139,11,2748,2749,2750,2751,0,3140,3141,3142,3143,11,2752,2753,2754,2755,0,3144,3145,3146,3147,11,2756,2757,2758,2759,0,3148,3149,3150,3151,11,2760,2761,2762,2763,0,3152,3153,3154,3155,11,2764,2765,2766,2767,0,3156,3157,3158,3159,11,2768,2769,2770,2771,0,3160,3161,3162,3163,11,2772,2773,2774,2650,0,3164,3165,3166,3034,11,2606,2775,2776,2607,0,2988,3167,3168,2989,11,2637,2635,2606,2605,0,3019,3017,2988,2987,11,2635,2634,2775,2606,0,3017,3016,3167,2988,11,2634,2647,2630,2775,0,3030,3029,3012,3169,11,2619,2605,2608,2649,0,3001,2987,2990,3033,11,2609,2619,2732,2731,0,2991,3001,3117,3116,11,2731,2591,2590,2609,0,3116,2973,2972,2991,11,2645,2777,2778,2622,0,3027,3170,3171,3004,11,2773,2772,2608,2607,0,3165,3164,2990,2989,11,2608,2772,2650,2649,0,2990,3164,3034,3033,11,2779,2780,2781,2782,0,3172,3173,3174,3175,11,2783,2784,2785,2786,0,3176,3177,3178,3179,11,2354,2787,2788,2789,0,2725,3180,3181,3182,11,2307,2323,2790,2791,0,2669,2685,3183,3184,11,2792,2317,2307,2791,0,3185,2679,2669,3184,11,2792,2353,2793,2317,0,3185,2724,3186,2679,11,1504,1507,2329,2342,0,3187,2700,2691,2710,10,2828,1618,2870,0,3188,3189,3190,11,2322,2794,2795,2323,0,2684,2701,2711,2685,11,1538,1537,2795,2794,0,3191,2712,2711,2701,10,1828,3318,1858,0,3131,3130,3192,11,2323,2795,2796,2790,0,2685,2711,2713,3183,11,2797,2116,2115,2798,0,3193,3194,3195,3196,11,2512,2519,2126,2128,0,2885,2896,2895,2886,11,2110,2119,2799,2800,0,3197,3198,3199,3200,11,2681,2680,2625,2627,0,3065,3064,3007,3009,11,2625,2680,2685,2621,0,3007,3064,3069,3003,11,2621,2685,2687,2622,0,3003,3069,3071,3004,11,2741,2737,2498,2499,0,3127,3122,2871,2872,11,2797,2517,2537,2801,0,3193,2892,2919,3201,11,2798,2514,2517,2797,0,3196,2889,2892,3193,11,2798,2802,2511,2514,0,3196,3202,2884,2889,11,2107,2110,2800,2802,0,3203,3197,3200,3202,11,2489,2803,2487,2486,0,2862,3204,2860,2859,11,2396,2395,2486,2485,0,2767,2766,2859,2858,11,2486,2395,2490,2489,0,2859,2766,2863,2862,11,2377,2368,2804,2462,0,2748,2739,3205,2833,11,2462,2461,2378,2377,0,2833,2832,2749,2748,11,2444,2458,2462,2804,0,2815,2829,2833,3205,11,2368,2367,2444,2804,0,2739,2738,2815,3205,11,2507,2503,2525,2805,0,2880,2876,2905,3206,11,2805,2534,2526,2507,0,3207,2916,2907,2906,11,2533,2527,2526,2534,0,2915,2909,2907,2916,11,2527,2533,2535,2528,0,2909,2915,2917,2910,11,2535,2536,2529,2528,0,2917,2918,2911,2910,11,2536,2524,2530,2529,0,2918,2903,2912,2911,11,2524,2523,2531,2530,0,2903,2902,2913,2912,11,2531,2523,2537,2532,0,2913,2902,2919,2914,11,2513,2524,2536,2512,0,2888,2903,2918,2885,11,2393,2532,2516,2484,0,2764,2914,2891,2857,11,2622,2687,2689,2645,0,3004,3071,3073,3027,11,2645,2689,2691,2643,0,3027,3073,3075,3025,11,2643,2691,2693,2641,0,3025,3075,3077,3023,11,2641,2693,2639,2611,0,3023,3077,3021,2993,11,2736,2739,2403,2402,0,3121,3124,2774,2773,11,2534,2805,2521,2520,0,2916,3207,2900,2899,11,2805,2525,2799,2521,0,3206,2905,3199,3208,11,2525,2509,2800,2799,0,2905,2882,3200,3199,11,2509,2511,2802,2800,0,2882,2884,3202,3200,11,2523,2522,2801,2537,0,2902,2901,3201,2919,11,2111,2522,2513,2112,0,3209,2901,2888,2887,11,2522,2111,2184,2801,0,2901,3209,3210,3201,11,2116,2797,2801,2184,0,3194,3193,3201,3210,11,2115,2107,2802,2798,0,3195,3203,3202,3196,11,2374,2373,2806,2463,0,2745,2744,3211,2834,11,2464,2466,2463,2806,0,2835,2838,2834,3211,11,2403,2739,2502,2500,0,2774,3124,2875,2873,11,2502,2739,2807,2735,0,2875,3124,3212,3120,11,2500,2381,2457,2501,0,2873,2752,2828,2874,11,2808,2406,2375,2372,0,3213,3214,3215,2743,11,2372,2375,2378,2373,0,2743,3215,3216,2744,11,2373,2378,2461,2806,0,2744,3216,3217,3211,11,2806,2461,2460,2464,0,3211,3217,2836,2835,11,2807,2740,2808,2735,0,3212,3126,3213,3120,11,2371,2735,2808,2372,0,2742,3120,3213,2743,11,2740,2407,2406,2808,0,3126,3125,3214,3213,11,2446,2809,2810,2363,0,2817,3218,3219,2734,11,2810,2501,2457,2363,0,3219,2874,2828,2734,11,2809,2404,2501,2810,0,3218,2775,2874,3219,11,2485,2488,2429,2426,0,2858,2861,2800,2797,11,2488,2487,2499,2429,0,2861,2860,2872,2800,11,2499,2487,2803,2741,0,2872,2860,3204,3127,11,2803,2489,2742,2741,0,3204,2862,3128,3127,11,2738,2742,2740,2807,0,3123,3128,3126,3212,11,2489,2492,2740,2742,0,2862,2865,3126,3128,11,2421,2485,2426,2425,0,2792,2858,2797,2796,11,2401,2404,2427,2430,0,2772,2775,2798,2801,11,2446,2425,2428,2809,0,2817,2796,2799,3218,11,2427,2404,2809,2428,0,2798,2775,3218,2799,11,2648,2681,2627,2647,0,3032,3065,3009,3029,11,2478,2477,2474,2473,0,2851,2850,2847,2846,11,2451,2419,2478,2473,0,2822,2790,2851,2846,11,2811,2812,2813,2814,0,3220,3221,3222,3223,11,2815,2816,2817,2818,0,3224,3225,3226,3227,11,2122,2201,2521,2799,0,3228,3229,3208,3199,11,2397,2424,2484,2734,0,2768,2795,2857,3119,11,2734,2733,2398,2397,0,3119,3118,2769,2768,11,2398,2733,2505,2497,0,2769,3118,2878,2870,11,2497,2505,2504,2496,0,2870,2878,2877,2869,11,2508,2470,2469,2819,0,2908,2843,2842,3230,11,2469,2495,2493,2819,0,2842,2868,3231,3230,11,2495,2408,2494,2493,0,2868,2779,3232,3231,11,2347,2348,1580,1264,0,2718,2719,3233,3234,11,2819,2493,2496,2504,0,3235,2866,2869,2877,11,2820,2821,2289,2288,0,3236,3237,2651,2650,11,2822,2823,2824,2825,0,3238,3239,3240,3241,11,2826,2827,2828,2829,0,3242,3243,3188,3244,11,2830,2831,2832,2833,0,3245,3246,3247,3248,11,2834,2835,2827,2826,0,3249,3250,3243,3242,11,2836,2833,2835,2837,0,3251,3248,3250,3252,11,2825,2824,2821,2820,0,3241,3240,3237,3236,11,2838,2839,2840,2841,0,3253,3254,3255,3256,11,2842,2843,2823,2822,0,3257,3258,3239,3238,11,2820,2288,2313,2844,0,3236,2650,2675,3259,11,2845,2822,2825,2846,0,3260,3238,3241,3261,11,2838,2847,2848,2849,0,3253,3262,3263,3264,11,2820,2844,2846,2825,0,3236,3259,3261,3241,11,2842,2822,2845,2850,0,3257,3238,3260,3265,11,2845,2846,2851,2850,0,3260,3261,3266,3265,11,2839,2838,2852,2853,0,3254,3253,3267,3129,11,2854,2855,2856,2857,0,3268,3269,3270,3271,11,2858,2839,2853,2859,0,3272,3254,3129,3132,11,2860,2861,2858,2859,0,3273,3274,3272,3132,11,2862,2863,2860,2864,0,3275,3276,3273,3277,11,2865,2866,2864,2867,0,3278,3279,3277,3280,10,3272,1620,1618,0,3281,3282,3189,11,2835,1616,3272,2827,0,3250,3283,3281,3243,11,1611,1609,2872,2871,0,3284,3285,3286,3287,11,2873,1608,1580,2348,0,3288,3289,3233,2719,11,2864,2860,2859,2874,0,3277,3273,3132,3290,11,2869,2867,1613,1615,0,3291,3280,3292,3293,11,2828,2827,3272,1618,0,3188,3243,3281,3189,11,2855,2858,2875,2856,0,3269,3272,3294,3270,11,2857,2856,2876,2877,0,3271,3270,3295,3296,11,2854,2857,2878,2839,0,3268,3271,3297,3254,11,2855,2854,2839,2858,0,3269,3268,3254,3272,11,2828,2870,2843,2829,0,3188,3190,3258,3244,11,2823,2843,2870,2871,0,3239,3258,3190,3287,11,2824,2823,2871,2872,0,3240,3239,3287,3286,11,2821,2824,2872,2873,0,3237,3240,3286,3288,11,2821,2873,2348,2289,0,3237,3288,2719,2651,11,2879,2826,2829,2880,0,3298,3242,3244,3299,11,2881,2353,2882,2883,0,3300,3301,3302,3303,11,2884,2885,2886,2887,0,3304,3305,3306,3307,11,2885,2888,2889,2886,0,3305,3308,3309,3306,11,2890,2891,2889,2888,0,3310,3311,3309,3308,11,2892,2893,2894,2895,0,3312,3313,3314,3315,11,2896,2897,2898,2899,0,3316,3317,3318,3319,11,2900,2901,2902,2903,0,3320,3321,3322,3323,11,2904,2905,2906,2907,0,3324,3325,3326,3327,11,2908,2909,2910,2911,0,3328,3329,3330,3331,11,2912,2884,2887,2913,0,3332,3304,3307,3333,11,2914,2915,2916,2917,0,3334,3335,3336,3337,11,2917,2916,2918,2919,0,3337,3336,3338,3339,11,2919,2918,2920,2921,0,3339,3338,3340,3341,11,2922,2921,2920,2923,0,3342,3341,3340,3343,11,2924,2925,2926,2927,0,3344,3345,3346,3347,11,2914,2928,2929,2915,0,3334,3348,3349,3335,11,2930,2931,2932,2933,0,3350,3351,3352,3353,11,2934,2935,2936,2937,0,3354,3355,3356,3357,11,2938,2939,2940,2941,0,3358,3359,3360,3361,11,2942,2943,2944,2945,0,3362,3363,3364,3365,11,2946,2945,2944,2947,0,3366,3365,3364,3367,11,2947,2948,2949,2946,0,3367,3368,3369,3366,11,2950,2951,2952,2953,0,3370,3371,3372,3373,11,2954,2955,2956,2957,0,3374,3375,3376,3377,11,2955,2954,2958,2959,0,3375,3374,3378,3379,11,2910,2909,2960,2961,0,3330,3329,3380,3381,11,2909,2962,2963,2960,0,3329,3382,3383,3380,11,2962,2895,2964,2963,0,3382,3315,3384,3383,11,2895,2894,2965,2964,0,3315,3314,3385,3384,11,2966,2967,2913,2887,0,3386,3387,3333,3307,11,2886,2968,2966,2887,0,3306,3388,3386,3307,11,2886,2889,2969,2968,0,3306,3309,3389,3388,11,2891,2970,2969,2889,0,3311,3390,3389,3309,11,2898,2971,2972,2973,0,3318,3391,3392,3393,11,2969,2970,2974,2968,0,3389,3390,3394,3388,11,2966,2968,2974,2967,0,3386,3388,3394,3387,11,2956,2975,2976,2977,0,3376,3395,3396,3397,11,2978,2979,2948,2980,0,3398,3399,3368,3400,11,2948,2947,2981,2980,0,3368,3367,3401,3400,11,2944,2982,2981,2947,0,3364,3402,3401,3367,11,2943,2983,2982,2944,0,3363,3403,3402,3364,11,2940,2984,2985,2941,0,3360,3404,3405,3361,11,2935,2904,2907,2936,0,3355,3324,3327,3356,11,2962,2909,2908,2986,0,3382,3329,3328,3406,11,2972,2971,2987,2988,0,3392,3391,3407,3408,11,2989,2990,2987,2991,0,3409,3410,3407,3411,11,2961,2992,2901,2910,0,3381,3412,3321,3330,11,2993,2994,2995,2990,0,3413,3414,3415,3416,11,2990,2995,2988,2987,0,3410,3417,3408,3407,11,2936,2907,2896,2996,0,3356,3327,3316,3418,11,2907,2906,2897,2896,0,3327,3326,3317,3316,11,2936,2996,2997,2937,0,3356,3418,3419,3357,11,2928,2998,2999,2929,0,3348,3420,3421,3349,11,2970,2891,2973,2972,0,3390,3311,3393,3392,11,2891,2890,3000,2973,0,3311,3310,3422,3393,11,2941,2985,3001,2938,0,3361,3405,3423,3358,11,2967,2965,2894,2913,0,3387,3385,3314,3333,11,2893,2912,2913,2894,0,3313,3332,3333,3314,11,2975,2979,2978,2976,0,3395,3399,3398,3396,11,3002,3003,2951,2950,0,3424,3425,3371,3370,11,3004,3005,3006,3007,0,3426,3427,3428,3429,11,3007,3008,3009,3004,0,3429,3430,3431,3426,11,3010,3011,3009,3008,0,3432,3433,3431,3430,11,3011,3010,3012,2939,0,3433,3432,3434,3359,11,2940,2997,2996,2984,0,3360,3419,3418,3404,11,2890,2983,2985,3000,0,3310,3403,3405,3422,11,2983,2890,2888,2982,0,3403,3310,3308,3402,11,2981,2982,2888,2885,0,3401,3402,3308,3305,11,2885,2884,2980,2981,0,3305,3304,3400,3401,11,2942,3011,2939,2938,0,3362,3433,3359,3358,11,3011,2942,2945,3009,0,3433,3362,3365,3431,11,3004,3009,2945,2946,0,3426,3431,3365,3366,11,2946,2949,3005,3004,0,3366,3369,3427,3426,11,2951,3003,2979,2975,0,3371,3425,3399,3395,11,2952,2951,2975,2956,0,3372,3371,3395,3376,11,2899,2898,2973,3000,0,3319,3318,3393,3422,11,2884,2912,2978,2980,0,3304,3332,3398,3400,11,2912,2893,2976,2978,0,3332,3313,3396,3398,11,2977,2976,2893,2892,0,3397,3396,3313,3312,11,3008,3007,2918,2916,0,3430,3429,3338,3336,11,3006,2920,2918,3007,0,3428,3340,3338,3429,11,2923,2920,3002,2950,0,3343,3340,3424,3370,11,2953,3013,2923,2950,0,3373,3435,3343,3370,11,3014,2927,2953,2952,0,3436,3347,3373,3372,11,3015,3014,3016,3017,0,3437,3436,3438,3439,11,3018,3019,3020,3021,0,3440,3441,3442,3443,11,3020,3019,3022,3023,0,3442,3441,3444,3445,11,3024,3012,2929,2999,0,3446,3434,3349,3421,11,3010,2915,2929,3012,0,3432,3335,3349,3434,11,3010,3008,2916,2915,0,3432,3430,3336,3335,11,3021,3020,3025,3026,0,3443,3442,3447,3448,11,3027,3028,2959,2958,0,3449,3450,3379,3378,11,2933,3029,3030,2930,0,3353,3451,3452,3350,11,2911,3031,3030,2908,0,3331,3453,3452,3328,11,2924,3021,3026,2925,0,3344,3443,3448,3345,11,3032,3033,3034,3035,0,3454,3455,3456,3457,11,3032,3035,3036,3037,0,3454,3457,3458,3459,11,3038,3033,3039,3040,0,3460,3455,3461,3462,11,3041,3042,1930,1943,0,3463,3464,3465,3466,11,3043,3044,3045,3046,0,3467,3468,3469,3470,11,3047,3048,1942,1941,0,3471,3472,3473,3474,11,3050,1919,2017,3049,0,3475,3476,3477,3478,11,3051,3052,3053,3042,0,3479,3480,3481,3464,11,1919,3047,1941,1920,0,3476,3471,3474,3482,11,3054,3039,3033,3032,0,3483,3461,3455,3454,11,3037,3036,2998,3055,0,3484,3485,3420,3486,11,3056,3055,2998,2928,0,3487,3486,3420,3348,11,2928,2914,3057,3056,0,3348,3334,3488,3487,11,3057,2914,2917,3058,0,3488,3334,3337,3489,11,2919,3059,3058,2917,0,3339,3490,3489,3337,11,2921,3060,3059,2919,0,3341,3491,3490,3339,11,2921,2922,3061,3060,0,3341,3342,3492,3491,11,3062,3047,3050,3063,0,3493,3471,3475,3494,11,3048,3047,3062,3064,0,3472,3471,3493,3495,11,3048,3064,3065,3041,0,3472,3495,3496,3463,11,3044,3066,3061,3045,0,3468,3497,3492,3469,11,3038,3040,3043,3046,0,3460,3462,3467,3470,11,2983,2943,3001,2985,0,3403,3363,3423,3405,11,2943,2942,2938,3001,0,3363,3362,3358,3423,11,3067,3068,3069,3070,0,3498,3499,3500,3501,11,3071,3072,3073,3074,0,3502,3503,3504,3505,11,3075,3076,3077,3078,0,3506,3507,3508,3509,11,3079,3080,3081,3082,0,3510,3511,3512,3513,11,3083,3084,3085,3086,0,3514,3515,3516,3517,11,3087,3088,3089,3090,0,3518,3519,3520,3521,11,3091,3092,2879,3093,0,3522,3523,3298,3524,11,3094,3095,3096,3097,0,3525,3526,3527,3528,11,3098,3099,3100,3101,0,3529,3530,3531,3532,11,3102,3103,3104,3105,0,3533,3534,3535,3536,11,3106,3107,3108,3109,0,3537,3538,3539,3540,11,3110,3111,3112,3113,0,3541,3542,3543,3544,11,3114,3115,3116,3117,0,3545,3546,3547,3548,11,3118,3119,3120,3121,0,3549,3550,3551,3552,11,3122,3123,3124,3125,0,3553,3554,3555,3556,11,3126,3127,3128,3129,0,3557,3558,3559,3560,11,3130,3131,3132,3133,0,3561,3562,3563,3564,11,3134,3135,3136,3137,0,3565,3566,3567,3568,11,3138,3119,3139,3140,0,3569,3550,3570,3571,11,3119,3138,3141,3142,0,3550,3569,3572,3573,11,3143,3144,3145,3146,0,3574,3575,3576,3577,11,3140,3139,3147,3148,0,3571,3570,3578,3579,11,3149,3150,3151,3152,0,3580,3581,3582,3583,11,3153,3154,3152,3155,0,3584,3585,3583,3586,11,3156,3157,3158,3155,0,3587,3588,3589,3586,11,3159,3160,3161,3156,0,3590,3591,3592,3587,11,3162,3163,3164,3165,0,3593,3594,3595,3596,11,3163,3166,3167,3164,0,3594,3597,3598,3595,11,3168,3140,3148,3169,0,3599,3571,3579,3600,11,3170,3138,3171,3172,0,3601,3569,3602,3603,11,3173,3174,3172,3175,0,3604,3605,3603,3606,11,3162,3165,3176,3177,0,3607,3608,3609,3610,11,3178,3179,3180,3181,0,3611,3612,3613,3614,11,3093,2879,2880,3182,0,3524,3298,3299,3615,11,2850,3181,3180,2842,0,3265,3614,3613,3257,11,3183,3184,2826,2879,0,3616,3617,3242,3298,11,3185,3186,3187,3188,0,3618,3619,3620,3621,11,3189,3190,3191,3192,0,3622,3623,3624,3625,11,3193,3194,3195,3196,0,3626,3627,3628,3629,11,3197,3198,3199,3200,0,3630,3631,3632,3633,11,3201,3202,3203,3204,0,3634,3635,3636,3637,11,3205,3206,3207,3208,0,3638,3639,3640,3641,11,3209,3210,3211,3212,0,3642,3643,3644,3645,11,3213,3212,3211,3214,0,3646,3645,3644,3647,11,3215,3213,3214,3216,0,3648,3646,3647,3649,11,3216,3217,3218,3215,0,3649,3650,3651,3648,11,3219,3218,3217,3220,0,3652,3651,3650,3653,11,3221,3219,3220,3222,0,3654,3652,3653,3655,11,3223,3221,3222,3168,0,3656,3654,3655,3599,11,3224,3223,3168,3169,0,3657,3656,3599,3600,11,3225,3166,3163,3226,0,3658,3597,3594,3659,11,3227,3226,3163,3162,0,3660,3659,3594,3593,11,3227,3162,3177,3228,0,3661,3607,3610,3662,11,3228,3177,3210,3209,0,3662,3610,3643,3642,11,2988,3228,3209,2972,0,3408,3662,3642,3392,11,2995,3227,3228,2988,0,3417,3661,3662,3408,11,2995,2994,3226,3227,0,3415,3414,3659,3660,11,2994,2992,3225,3226,0,3414,3412,3658,3659,11,3148,3147,3134,3167,0,3579,3578,3565,3598,11,3167,3166,3169,3148,0,3598,3597,3600,3579,11,3166,3225,3224,3169,0,3597,3658,3657,3600,11,2964,2965,3218,3219,0,3384,3385,3651,3652,11,2963,2964,3219,3221,0,3383,3384,3652,3654,11,2960,2963,3221,3223,0,3380,3383,3654,3656,11,2961,2960,3223,3224,0,3381,3380,3656,3657,11,3224,3225,2992,2961,0,3657,3658,3412,3381,11,3229,3230,3093,3118,0,3663,3664,3524,3549,11,3231,3232,3233,3234,0,3665,3666,3667,3668,11,3235,3236,3237,3238,0,3669,3670,3671,3672,11,3239,3240,3241,3242,0,3673,3674,3675,3676,11,3243,3244,3245,3246,0,3677,3678,3679,3680,11,3247,3248,3249,3250,0,3681,3682,3683,3684,11,3251,3252,3253,3254,0,3685,3686,3687,3688,11,3255,3256,3257,3258,0,3689,3690,3691,3692,11,3259,3260,3261,3182,0,3693,3694,3695,3615,11,3118,3093,3182,3261,0,3549,3524,3615,3695,11,3260,3259,3179,3178,0,3694,3693,3612,3611,11,2972,3209,3212,2970,0,3392,3642,3645,3390,11,2974,2970,3212,3213,0,3394,3390,3645,3646,11,2967,2974,3213,3215,0,3387,3394,3646,3648,11,3215,3218,2965,2967,0,3648,3651,3385,3387,11,3033,3038,3262,3034,0,3455,3460,3696,3456,11,3263,3262,3038,3046,0,3697,3696,3460,3470,11,3263,3046,3045,3013,0,3697,3470,3469,3435,11,2911,2910,2901,2900,0,3331,3330,3321,3320,11,3031,2911,2900,3264,0,3453,3331,3320,3698,11,2895,2962,2986,2892,0,3315,3382,3406,3312,11,3265,3266,3267,3268,0,3699,3700,3701,3702,11,2932,2931,3027,2958,0,3352,3351,3449,3378,11,3027,2931,3265,3268,0,3449,3351,3699,3702,11,2984,2996,2896,2899,0,3404,3418,3316,3319,11,2984,2899,3000,2985,0,3404,3319,3422,3405,11,2939,3012,2997,2940,0,3359,3434,3419,3360,11,2997,3012,3024,2937,0,3419,3434,3446,3357,11,2934,3022,3019,3269,0,3703,3444,3441,3704,11,3270,3271,3268,3267,0,3705,3706,3702,3701,11,3182,2880,3179,3259,0,3615,3299,3612,3693,11,2880,2829,3180,3179,0,3299,3244,3613,3612,11,2842,3180,2829,2843,0,3257,3613,3244,3258,11,2870,1618,1611,2871,0,3190,3189,3284,3287,11,3273,3274,3275,3276,0,3707,3708,3709,3710,11,3277,3278,3279,3280,0,3711,3712,3713,3714,11,3281,3282,3283,3284,0,3715,3716,3717,3718,11,3285,3286,3287,3288,0,3719,3720,3721,3722,11,3289,3290,3291,3292,0,3723,3724,3725,3726,11,3293,3294,3295,3296,0,3727,3728,3729,3730,11,3297,3298,3299,3300,0,3731,3732,3733,3734,11,3301,3302,3303,3181,0,3735,3736,3737,3614,11,3304,3305,3137,3136,0,3738,3739,3568,3567,11,3137,3164,3167,3134,0,3568,3595,3598,3565,11,3305,3165,3164,3137,0,3739,3596,3595,3568,11,3159,3176,3165,3305,0,3590,3609,3608,3740,11,3135,3134,3147,3178,0,3566,3565,3578,3611,11,3139,3261,3260,3147,0,3570,3695,3694,3578,11,3261,3139,3119,3118,0,3695,3570,3550,3549,11,3306,3307,3175,3151,0,3741,3742,3606,3582,11,3302,3136,3135,3303,0,3736,3567,3566,3737,11,3135,3178,3181,3303,0,3566,3611,3614,3737,11,3308,3309,3310,3311,0,3743,3744,3745,3746,11,3312,3313,3314,3315,0,3747,3748,3749,3750,11,3316,2787,2354,3317,0,3751,3752,3753,3754,11,2838,2791,2790,2852,0,3253,3755,3756,3267,11,2792,2791,2838,2849,0,3757,3755,3253,3264,11,2792,2849,2882,2353,0,3757,3264,3302,3301,10,1613,2874,1825,0,3292,3290,3758,11,1825,2874,2859,1828,0,3758,3290,3132,3131,11,2853,2852,3319,3318,0,3129,3267,3134,3130,11,1615,2833,2868,2869,0,3293,3248,3759,3291,11,1858,3318,3319,1537,0,3192,3130,3134,3133,11,2852,2790,2796,3319,0,3267,3756,3135,3134,11,3320,3321,1931,1934,0,3760,3761,3762,3763,11,1942,3048,3041,1943,0,3473,3472,3463,3466,11,1924,3322,3323,1935,0,3764,3765,3766,3767,11,3155,3211,3210,3156,0,3586,3644,3643,3587,11,3155,3152,3214,3211,0,3586,3583,3647,3644,11,3152,3151,3216,3214,0,3583,3582,3649,3647,11,3271,3028,3027,3268,0,3706,3450,3449,3702,11,3320,3324,3066,3044,0,3760,3768,3497,3468,11,3321,3320,3044,3043,0,3761,3760,3468,3467,11,3321,3043,3040,3325,0,3761,3467,3462,3769,11,3322,1924,1923,3325,0,3765,3764,3770,3769,11,3017,3326,3018,3015,0,3439,3771,3440,3437,11,2927,3014,3015,2924,0,3347,3436,3437,3344,11,3015,3018,3021,2924,0,3437,3440,3443,3344,11,3327,2897,2906,2991,0,3772,3317,3326,3411,11,2991,2906,2905,2989,0,3411,3326,3325,3409,11,2971,3327,2991,2987,0,3391,3772,3411,3407,11,2897,3327,2971,2898,0,3317,3772,3391,3318,11,3054,3032,3037,3328,0,3483,3454,3459,3773,11,3328,3037,3055,3063,0,3774,3484,3486,3494,11,3055,3056,3062,3063,0,3486,3487,3493,3494,11,3056,3057,3064,3062,0,3487,3488,3495,3493,11,3064,3057,3058,3065,0,3495,3488,3489,3496,11,3059,3051,3065,3058,0,3490,3479,3496,3489,11,3060,3052,3051,3059,0,3491,3480,3479,3490,11,3060,3061,3066,3052,0,3491,3492,3497,3480,11,3042,3041,3065,3051,0,3464,3463,3496,3479,11,2922,3013,3045,3061,0,3342,3435,3469,3492,11,3151,3175,3217,3216,0,3582,3606,3650,3649,11,3175,3172,3220,3217,0,3606,3603,3653,3650,11,3172,3171,3222,3220,0,3603,3602,3655,3653,11,3171,3140,3168,3222,0,3602,3571,3599,3655,11,2930,3266,3265,2931,0,3350,3700,3699,3351,11,3063,3050,3049,3328,0,3494,3475,3478,3774,11,3328,3049,3323,3054,0,3773,3775,3766,3483,11,3054,3323,3322,3039,0,3483,3766,3765,3461,11,3039,3322,3325,3040,0,3461,3765,3769,3462,11,3052,3066,3324,3053,0,3480,3497,3768,3481,11,3042,3053,1927,1930,0,3464,3481,3776,3465,11,3053,3324,2000,1927,0,3481,3768,3777,3776,11,3324,3320,1934,2000,0,3768,3760,3763,3777,11,1931,3321,3325,1923,0,3762,3761,3769,3770,11,2901,2992,3329,2902,0,3321,3412,3778,3322,11,2993,3329,2992,2994,0,3413,3778,3412,3414,11,2930,3030,3031,3266,0,3350,3452,3453,3700,11,3031,3264,3330,3266,0,3453,3698,3779,3700,11,3030,3029,2986,2908,0,3452,3451,3406,3328,11,3331,2903,2904,2935,0,3780,3323,3781,3782,11,2903,2902,2905,2904,0,3323,3322,3783,3781,11,2902,3329,2989,2905,0,3322,3778,3784,3783,11,3329,2993,2990,2989,0,3778,3413,3416,3784,11,3330,3264,3331,3269,0,3779,3698,3780,3704,11,3331,3264,2900,2903,0,3780,3698,3320,3323,11,3269,3331,2935,2934,0,3704,3780,3782,3703,11,2977,2892,3332,3333,0,3397,3312,3785,3786,11,3332,2892,2986,3029,0,3785,3312,3406,3451,11,3333,3332,3029,2933,0,3786,3785,3451,3353,11,3014,2955,2959,3016,0,3436,3375,3379,3438,11,3016,2959,3028,3017,0,3438,3379,3450,3439,11,3028,3271,3326,3017,0,3450,3706,3771,3439,11,3326,3271,3270,3018,0,3771,3706,3705,3440,11,3267,3330,3269,3270,0,3701,3779,3704,3705,11,3018,3270,3269,3019,0,3440,3705,3704,3441,11,2955,3014,2952,2956,0,3375,3436,3372,3376,11,2932,2958,2954,2933,0,3352,3378,3374,3353,11,2977,3333,2957,2956,0,3397,3786,3377,3376,11,3333,2933,2954,2957,0,3786,3353,3374,3377,11,3156,3210,3177,3176,0,3587,3643,3610,3609,11,3005,3003,3002,3006,0,3427,3425,3424,3428,11,3005,2949,2979,3003,0,3427,3369,3399,3425,11,3334,3335,3336,3337,0,3787,3788,3789,3790,11,3338,3339,3340,3341,0,3791,3792,3793,3794,11,3049,2017,1936,3323,0,3775,3795,3796,3766,11,3013,2953,2926,3263,0,3435,3373,3346,3697,11,3263,2926,2925,3262,0,3697,3346,3345,3696,11,2925,3026,3034,3262,0,3345,3448,3456,3696,11,3026,3025,3035,3034,0,3448,3447,3457,3456,11,3036,3342,2999,2998,0,3485,3797,3421,3420,11,2999,3342,3023,3024,0,3421,3797,3798,3446,11,3024,3023,3022,2937,0,3446,3798,3799,3357,10,2743,1277,1272,0,3800,3801,2702,11,3025,3023,3342,3035,0,3447,3445,3802,3457,11,3343,3344,3345,3346,0,3803,3804,3805,3806,11,3347,3348,3349,3350,0,3807,3808,3809,3810,11,2788,2601,2604,2789,0,3181,2983,2986,3182,11,2601,3351,3352,2602,0,2983,3811,3812,2984,11,3351,2601,2788,3353,0,3811,2983,3181,3813,11,2337,2540,2539,2335,0,2699,2922,2921,2697,11,2543,2332,2334,2544,0,2925,2694,2696,2926,11,2543,2542,2541,2540,0,2925,2924,2923,2922,11,2540,2337,2332,2543,0,2922,2699,2694,2925,11,2539,2538,2663,2662,0,2921,2920,3047,3046,11,2301,2662,2661,2302,0,2663,3046,3045,2664,11,2662,2301,2335,2539,0,3046,2663,2697,2921,11,2547,2345,2344,2548,0,2929,2716,2715,2930,11,2547,2546,2545,2544,0,2929,2928,2927,2926,11,2343,2345,2547,2544,0,2714,2716,2929,2926,11,2343,2544,2334,2331,0,2714,2926,2696,2693,11,2549,2548,2309,2308,0,2931,2930,2671,2670,11,2576,2319,2318,2573,0,2958,2681,2680,2955,11,2576,2575,2571,2570,0,2958,2957,2953,2952,11,2570,2569,2546,2549,0,2952,2951,2928,2931,11,2570,2549,2308,2319,0,2952,2931,2670,2681,11,2548,2344,2346,2309,0,2930,2715,2717,2671,11,2727,2352,2351,2728,0,3112,2723,2722,3113,11,2574,2727,2726,2575,0,2956,3112,3111,2957,11,2317,2352,2727,2574,0,2679,2723,3112,2956,11,2306,2305,2657,2656,0,2668,2667,3041,3040,11,2654,2656,2659,2655,0,3038,3040,3043,3039,11,2304,2306,2656,2654,0,2666,2668,3040,3038,11,2665,2299,2302,2666,0,3049,2661,2664,3050,11,2665,2664,2658,2657,0,3049,3048,3042,3041,11,2299,2665,2657,2305,0,2661,3049,3041,2667,11,2661,2660,2667,2666,0,3045,3044,3051,3050,11,2604,2603,2729,2728,0,2986,2985,3114,3113,11,2728,2351,2789,2604,0,3113,2722,3182,2986,11,2555,2538,2541,2556,0,2937,2920,2923,2938,11,2555,2554,2553,2552,0,2937,2936,2935,2934,11,2663,2552,2551,2660,0,3047,2934,2933,3044,11,2538,2555,2552,2663,0,2920,2937,2934,3047,11,2559,2542,2545,2560,0,2941,2924,2927,2942,11,2559,2558,2557,2556,0,2941,2940,2939,2938,11,2556,2541,2542,2559,0,2938,2923,2924,2941,11,2560,2569,2572,2561,0,2942,2951,2954,2943,11,2546,2569,2560,2545,0,2928,2951,2942,2927,11,2551,2550,2669,2668,0,2933,2932,3053,3052,11,2667,2668,2671,2664,0,3051,3052,3055,3048,11,2668,2667,2660,2551,0,3052,3051,3044,2933,11,2711,2550,2553,2712,0,3096,2932,2935,3097,11,2711,2710,2707,2706,0,3096,3095,3092,3091,11,2669,2706,2709,2670,0,3053,3091,3094,3054,11,2706,2669,2550,2711,0,3091,3053,2932,3096,11,2715,2554,2557,2716,0,3100,2936,2939,3101,11,2715,2714,2713,2712,0,3100,3099,3098,3097,11,2712,2553,2554,2715,0,3097,2935,2936,3100,11,2719,2558,2561,2720,0,3104,2940,2943,3105,11,2719,2718,2717,2716,0,3104,3103,3102,3101,11,2558,2719,2716,2557,0,2940,3104,3101,2939,11,2722,2572,2571,2723,0,3107,2954,2953,3108,11,2720,2722,2725,2721,0,3105,3107,3110,3106,11,2561,2572,2722,2720,0,2943,2954,3107,3105,11,2566,2659,2658,2567,0,2948,3043,3042,2949,11,2562,2566,2565,2563,0,2944,2948,2947,2945,11,2655,2659,2566,2562,0,3039,3043,2948,2944,11,2703,2565,2568,2704,0,3088,2947,2950,3089,11,2703,2702,2701,2700,0,3088,3087,3086,3085,11,2703,2700,2563,2565,0,3088,3085,2945,2947,11,2671,2670,2568,2567,0,3055,3054,2950,2949,11,2664,2671,2567,2658,0,3048,3055,2949,3042,11,2709,2708,2705,2704,0,3094,3093,3090,3089,11,2670,2709,2704,2568,0,3054,3094,3089,2950,11,2723,2726,2729,2724,0,3108,3111,3114,3109,11,2575,2726,2723,2571,0,2957,3111,3108,2953,11,2584,2714,2717,2581,0,2966,3099,3102,2963,11,2584,2583,2578,2577,0,2966,2965,2960,2959,11,2713,2577,2580,2710,0,3098,2959,2962,3095,11,2577,2713,2714,2584,0,2959,3098,3099,2966,11,2580,2579,2675,2674,0,2962,2961,3059,3058,11,2707,2674,2673,2708,0,3092,3058,3057,3093,11,2710,2580,2674,2707,0,3095,2962,3058,3092,11,2771,2579,2578,2768,0,3163,2961,2960,3160,11,2771,2770,2811,2814,0,3163,3162,3220,3223,11,2814,2813,2677,2676,0,3223,3222,3061,3060,11,2675,2676,2679,2672,0,3059,3060,3063,3056,11,2676,2579,2771,2814,0,3060,2961,3163,3223,11,2586,2718,2721,2587,0,2968,3103,3106,2969,11,2586,2585,2582,2581,0,2968,2967,2964,2963,11,2581,2717,2718,2586,0,2963,3102,3103,2968,11,2725,2724,2600,2599,0,3110,3109,2982,2981,11,2587,2599,2598,2588,0,2969,2981,2980,2970,11,2599,2587,2721,2725,0,2981,2969,3106,3110,11,2596,2702,2705,2593,0,2978,3087,3090,2975,11,2596,2595,2589,2592,0,2978,2977,2971,2974,11,2702,2596,2592,2701,0,3087,2978,2974,3086,11,2673,2672,2594,2593,0,3057,3056,2976,2975,11,2708,2673,2593,2705,0,3093,3057,2975,3090,11,2600,2603,2602,2597,0,2982,2985,2984,2979,11,2603,2600,2724,2729,0,2985,2982,3109,3114,11,2623,2813,2812,2620,0,3005,3222,3221,3002,11,2677,2778,2777,2678,0,3061,3171,3170,3062,11,2813,2623,2778,2677,0,3222,3005,3171,3061,11,2812,2811,2755,2754,0,3221,3220,3147,3146,11,2626,2754,2753,2624,0,3008,3146,3145,3006,11,2620,2812,2754,2626,0,3002,3221,3146,3008,11,2751,2753,2752,2748,0,3143,3145,3144,3140,11,2751,2750,2629,2628,0,3143,3142,3011,3010,11,2628,2624,2753,2751,0,3010,3006,3145,3143,11,2750,2749,2745,2744,0,3142,3141,3137,3136,11,2631,2744,2747,2632,0,3013,3136,3139,3014,11,2750,2744,2631,2629,0,3142,3136,3013,3011,11,3354,3355,2632,2747,0,3814,3815,3014,3139,11,2612,2613,2617,2616,0,2994,2995,2999,2998,11,2646,2616,2615,2644,0,3028,2998,2997,3026,11,2616,2646,2642,2612,0,2998,3028,3024,2994,11,2615,2614,2679,2678,0,2997,2996,3063,3062,11,2678,2777,2644,2615,0,3062,3170,3026,2997,11,2780,2746,2745,2781,0,3173,3138,3137,3174,11,2780,2779,3356,3354,0,3173,3172,3816,3814,11,2786,2749,2748,2783,0,3179,3141,3140,3176,11,2786,2785,2782,2781,0,3179,3178,3175,3174,11,2749,2786,2781,2745,0,3141,3179,3174,3137,11,2766,2752,2755,2767,0,3158,3144,3147,3159,11,2766,2765,2784,2783,0,3158,3157,3177,3176,11,2748,2752,2766,2783,0,3140,3144,3158,3176,11,2767,2770,2769,2764,0,3159,3162,3161,3156,11,2770,2767,2755,2811,0,3162,3159,3147,3220,11,3352,3357,2757,2756,0,3812,3817,3149,3148,11,2756,2759,2598,2597,0,3148,3151,2980,2979,11,2602,3352,2756,2597,0,2984,3812,3148,2979,11,2763,2759,2758,2760,0,3155,3151,3150,3152,11,2763,2762,2585,2588,0,3155,3154,2967,2970,11,2588,2598,2759,2763,0,2970,2980,3151,3155,11,2762,2761,2816,2815,0,3154,3153,3225,3224,11,2582,2815,2818,2583,0,2964,3224,3227,2965,11,2815,2582,2585,2762,0,3224,2964,2967,3154,11,2818,2817,2769,2768,0,3227,3226,3161,3160,11,2768,2578,2583,2818,0,3160,2960,2965,3227,11,2617,2595,2594,2614,0,2999,2977,2976,2996,11,2595,2617,2613,2589,0,2977,2999,2995,2971,11,2614,2594,2672,2679,0,2996,2976,3056,3063,11,2760,2785,2784,2761,0,3152,3178,3177,3153,11,2782,2758,2757,2779,0,3175,3150,3149,3172,11,2785,2760,2758,2782,0,3178,3152,3150,3175,11,2816,2765,2764,2817,0,3225,3157,3156,3226,11,2765,2816,2761,2784,0,3157,3225,3153,3177,11,3316,3317,3131,3130,0,3751,3754,3562,3561,11,3130,3133,3358,3359,0,3561,3564,3818,3819,11,3359,3360,3316,3130,0,3819,3820,3751,3561,11,2866,2865,3070,3069,0,3279,3278,3501,3500,11,3074,3069,3068,3071,0,3505,3500,3499,3502,11,3074,3073,2863,2862,0,3505,3504,3276,3275,11,3069,3074,2862,2866,0,3500,3505,3275,3279,11,2832,3361,2868,2833,0,3247,3821,3759,3248,11,2832,2831,3192,3191,0,3247,3246,3625,3624,11,3070,3191,3190,3067,0,3501,3624,3623,3498,11,3191,2865,3361,2832,0,3624,3278,3821,3247,11,3076,3073,3072,3077,0,3507,3504,3503,3508,11,3076,3075,2877,2876,0,3507,3506,3296,3295,11,2875,3073,3076,2876,0,3294,3504,3507,3295,11,2863,3073,2875,2861,0,3276,3504,3294,3274,11,3078,2841,2840,3075,0,3509,3256,3255,3506,11,3099,3078,3077,3100,0,3530,3509,3508,3531,11,3103,3099,3098,3104,0,3534,3530,3529,3535,11,3103,3102,2848,2847,0,3534,3533,3263,3262,11,2847,2841,3099,3103,0,3262,3256,3530,3534,11,2878,2877,3075,2840,0,3297,3296,3506,3255,11,3105,3104,3255,3258,0,3536,3535,3689,3692,11,3258,3257,2881,2883,0,3692,3691,3300,3303,11,2849,3105,3258,2883,0,3264,3536,3692,3303,11,3184,3183,3188,3187,0,3617,3616,3621,3620,11,2837,3187,3186,2836,0,3252,3620,3619,3251,11,2834,3184,3187,2837,0,3249,3617,3620,3252,11,3196,3186,3185,3193,0,3629,3619,3618,3626,11,3196,3195,2831,2830,0,3629,3628,3246,3245,11,3186,3196,2830,2836,0,3619,3629,3245,3251,11,3192,3195,3194,3189,0,3625,3628,3627,3622,11,3131,3257,3256,3132,0,3562,3691,3690,3563,11,3257,3131,3317,2881,0,3691,3562,3754,3300,11,3190,3189,3082,3081,0,3623,3622,3513,3512,11,3086,3081,3080,3083,0,3517,3512,3511,3514,11,3086,3085,3068,3067,0,3517,3516,3499,3498,11,3081,3086,3067,3190,0,3512,3517,3498,3623,11,3090,3085,3084,3087,0,3521,3516,3515,3518,11,3090,3089,3072,3071,0,3521,3520,3503,3502,11,3085,3090,3071,3068,0,3516,3521,3502,3499,11,3089,3088,3101,3100,0,3520,3519,3532,3531,11,3077,3072,3089,3100,0,3508,3503,3520,3531,11,3194,3193,3200,3199,0,3627,3626,3633,3632,11,3082,3199,3198,3079,0,3513,3632,3631,3510,11,3199,3082,3189,3194,0,3632,3513,3622,3627,11,3198,3197,3238,3237,0,3631,3630,3672,3671,11,3242,3237,3236,3239,0,3676,3671,3670,3673,11,3242,3241,3080,3079,0,3676,3675,3511,3510,11,3079,3198,3237,3242,0,3510,3631,3671,3676,11,3246,3241,3240,3243,0,3680,3675,3674,3677,11,3246,3245,3084,3083,0,3680,3679,3515,3514,11,3083,3080,3241,3246,0,3514,3511,3675,3680,11,3250,3245,3244,3247,0,3684,3679,3678,3681,11,3250,3249,3088,3087,0,3684,3683,3519,3518,11,3087,3084,3245,3250,0,3518,3515,3679,3684,11,3253,3249,3248,3254,0,3687,3683,3682,3688,11,3253,3252,3098,3101,0,3687,3686,3529,3532,11,3249,3253,3101,3088,0,3683,3687,3532,3519,11,3092,3091,3094,3097,0,3523,3522,3525,3528,11,3097,3096,3185,3188,0,3528,3527,3618,3621,11,3183,3092,3097,3188,0,3616,3523,3528,3621,11,3234,3230,3229,3231,0,3668,3664,3663,3665,11,3234,3233,3095,3094,0,3668,3667,3526,3525,11,3234,3094,3091,3230,0,3668,3525,3522,3664,11,3200,3096,3095,3197,0,3633,3527,3526,3630,11,3193,3185,3096,3200,0,3626,3618,3527,3633,11,3238,3233,3232,3235,0,3672,3667,3666,3669,11,3197,3095,3233,3238,0,3630,3526,3667,3672,11,3252,3251,3256,3255,0,3686,3685,3690,3689,11,3104,3098,3252,3255,0,3535,3529,3686,3689,11,3240,3239,3107,3106,0,3674,3673,3538,3537,11,3111,3106,3109,3112,0,3542,3537,3540,3543,11,3111,3110,3244,3243,0,3542,3541,3678,3677,11,3106,3111,3243,3240,0,3537,3542,3677,3674,11,3236,3235,3202,3201,0,3670,3669,3635,3634,11,3107,3201,3204,3108,0,3538,3634,3637,3539,11,3239,3236,3201,3107,0,3673,3670,3634,3538,11,3204,3203,3208,3207,0,3637,3636,3641,3640,11,3335,3207,3206,3336,0,3788,3640,3639,3789,11,3298,3335,3334,3299,0,3732,3788,3787,3733,11,3298,3297,3109,3108,0,3732,3731,3540,3539,11,3207,3335,3108,3204,0,3640,3788,3539,3637,11,3115,3110,3113,3116,0,3546,3541,3544,3547,11,3115,3114,3248,3247,0,3546,3545,3682,3681,11,3110,3115,3247,3244,0,3541,3546,3681,3678,11,3114,3117,3129,3128,0,3545,3548,3560,3559,11,3254,3128,3127,3251,0,3688,3559,3558,3685,11,3128,3254,3248,3114,0,3559,3688,3682,3545,11,3123,3121,3120,3124,0,3554,3552,3551,3555,11,3123,3122,3232,3231,0,3554,3553,3666,3665,11,3121,3123,3231,3229,0,3552,3554,3665,3663,11,3202,3122,3125,3203,0,3635,3553,3556,3636,11,3235,3232,3122,3202,0,3669,3666,3553,3635,11,3127,3126,3133,3132,0,3558,3557,3564,3563,11,3132,3256,3251,3127,0,3563,3690,3685,3558,11,3206,3205,3307,3306,0,3639,3638,3742,3741,11,3150,3149,3337,3336,0,3581,3580,3790,3789,11,3336,3206,3306,3150,0,3789,3639,3741,3581,11,3282,3154,3153,3283,0,3716,3585,3584,3717,11,3337,3282,3281,3334,0,3790,3716,3715,3787,11,3149,3154,3282,3337,0,3580,3585,3716,3790,11,3280,3158,3157,3277,0,3714,3589,3588,3711,11,3280,3279,3284,3283,0,3714,3713,3718,3717,11,3158,3280,3283,3153,0,3589,3714,3717,3584,11,3273,3161,3160,3274,0,3707,3592,3591,3708,11,3277,3273,3276,3278,0,3711,3707,3710,3712,11,3277,3157,3161,3273,0,3711,3588,3592,3707,11,3362,3274,3160,3363,0,3822,3708,3591,3823,11,3174,3173,3146,3145,0,3605,3604,3577,3576,11,3141,3145,3144,3142,0,3572,3576,3575,3573,11,3170,3174,3145,3141,0,3601,3605,3576,3572,11,3146,3205,3208,3143,0,3577,3638,3641,3574,11,3205,3146,3173,3307,0,3638,3577,3604,3742,11,3309,3362,3364,3310,0,3744,3822,3824,3745,11,3309,3308,3276,3275,0,3744,3743,3710,3709,11,3315,3308,3311,3312,0,3750,3743,3746,3747,11,3278,3315,3314,3279,0,3712,3750,3749,3713,11,3278,3276,3308,3315,0,3712,3710,3743,3750,11,3293,3314,3313,3294,0,3727,3749,3748,3728,11,3284,3293,3296,3281,0,3718,3727,3730,3715,11,3279,3314,3293,3284,0,3713,3749,3727,3718,11,3296,3295,3300,3299,0,3730,3729,3734,3733,11,3299,3334,3281,3296,0,3733,3787,3715,3730,11,3285,3126,3129,3286,0,3719,3557,3560,3720,11,3358,3285,3288,3365,0,3818,3719,3722,3825,11,3126,3285,3358,3133,0,3557,3719,3818,3564,11,3290,3117,3116,3291,0,3724,3548,3547,3725,11,3290,3289,3287,3286,0,3724,3723,3721,3720,11,3117,3290,3286,3129,0,3548,3724,3720,3560,11,3113,3112,3339,3338,0,3544,3543,3792,3791,11,3291,3338,3341,3292,0,3725,3791,3794,3726,11,3338,3291,3116,3113,0,3791,3725,3547,3544,11,3339,3297,3300,3340,0,3792,3731,3734,3793,11,3297,3339,3112,3109,0,3731,3792,3543,3540,11,3144,3143,3125,3124,0,3575,3574,3556,3555,11,3124,3120,3142,3144,0,3555,3551,3573,3575,11,3143,3208,3203,3125,0,3574,3641,3636,3556,11,3311,3310,3288,3287,0,3746,3745,3722,3721,11,3289,3292,3313,3312,0,3723,3726,3748,3747,11,3312,3311,3287,3289,0,3747,3746,3721,3723,11,3341,3340,3295,3294,0,3794,3793,3729,3728,11,3294,3313,3292,3341,0,3728,3748,3726,3794,11,3357,3366,2779,2757,0,3817,3826,3172,3149,11,3367,3365,3310,3364,0,3827,3825,3745,3824,11,2347,1264,1263,2341,0,2718,3234,2709,2708,11,2869,2868,3361,2867,0,3291,3759,3821,3280,11,2313,2314,3368,3369,0,2675,2676,3828,3829,11,3370,3371,3372,3373,0,3830,3831,3832,3833,11,3374,3371,3375,3368,0,3834,3831,3835,3828,11,3376,3375,3371,3370,0,3836,3835,3831,3830,11,3369,3368,3375,3376,0,3829,3828,3835,3836,11,3374,2320,2774,3377,0,3834,2682,3166,3837,11,3378,2776,3343,3379,0,3838,3168,3839,3840,11,2773,3378,3372,3377,0,3165,3838,3832,3837,11,3372,3378,3380,3373,0,3832,3838,3841,3833,11,2313,3369,3381,2844,0,2675,3829,3842,3259,11,3370,3373,3382,3383,0,3830,3833,3843,3844,11,3384,3381,3385,3383,0,3845,3842,3846,3844,11,3383,3385,3376,3370,0,3844,3846,3836,3830,11,3369,3376,3385,3381,0,3829,3836,3846,3842,11,3349,3304,3386,3387,0,3847,3738,3848,3849,11,3365,3388,3359,3358,0,3850,3851,3852,3853,11,3382,3386,3302,3389,0,3843,3848,3736,3854,11,3380,3386,3382,3373,0,3841,3848,3843,3833,11,2321,3374,3368,2314,0,2683,3834,3828,2676,11,3301,2850,3384,3389,0,3735,3265,3845,3854,11,2851,2844,3381,3384,0,3266,3259,3842,3845,11,3351,3353,3390,3391,0,3855,3856,3857,3858,11,3392,3393,3394,3395,0,3859,3860,3861,3862,11,3396,3392,3397,3391,0,3863,3859,3864,3858,11,3388,3398,3360,3359,0,3851,3865,3866,3852,11,3367,3399,3388,3365,0,3867,3868,3851,3850,11,3400,3388,3399,3401,0,3869,3851,3868,3870,11,3351,3391,3357,3352,0,3855,3858,3871,3872,11,3391,3397,3366,3357,0,3858,3864,3873,3871,11,3402,3403,3404,3405,0,3874,3874,3874,3874,11,3405,3404,3406,3407,0,3874,3874,3874,3874,11,3407,3406,3408,3409,0,3874,3874,3874,3874,11,3409,3408,3410,3411,0,3874,3874,3874,3874,11,3411,3410,3412,3413,0,3874,3874,3874,3874,11,3413,3412,3414,3415,0,3874,3874,3874,3874,11,3415,3414,3416,3417,0,3874,3874,3874,3874,11,3417,3416,3403,3402,0,3874,3874,3874,3874,11,3403,3418,3419,3404,0,3874,3874,3874,3874,11,3404,3419,3420,3406,0,3874,3874,3874,3874,11,3406,3420,3421,3408,0,3874,3874,3874,3874,11,3408,3421,3422,3410,0,3874,3874,3874,3874,11,3410,3422,3423,3412,0,3874,3874,3874,3874,11,3412,3423,3424,3414,0,3874,3874,3874,3874,11,3414,3424,3425,3416,0,3874,3874,3874,3874,11,3416,3425,3418,3403,0,3874,3874,3874,3874,11,3418,3426,3427,3419,0,3874,3874,3874,3874,11,3419,3427,3428,3420,0,3874,3874,3874,3874,11,3420,3428,3429,3421,0,3874,3874,3874,3874,11,3421,3429,3430,3422,0,3874,3874,3874,3874,11,3422,3430,3431,3423,0,3874,3874,3874,3874,11,3423,3431,3432,3424,0,3874,3874,3874,3874,11,3424,3432,3433,3425,0,3874,3874,3874,3874,11,3425,3433,3426,3418,0,3874,3874,3874,3874,11,3426,3434,3435,3427,0,3874,3874,3874,3874,11,3427,3435,3436,3428,0,3874,3874,3874,3874,11,3428,3436,3437,3429,0,3874,3874,3874,3874,11,3429,3437,3438,3430,0,3874,3874,3874,3874,11,3430,3438,3439,3431,0,3874,3874,3874,3874,11,3431,3439,3440,3432,0,3874,3874,3874,3874,11,3432,3440,3441,3433,0,3874,3874,3874,3874,11,3433,3441,3434,3426,0,3874,3874,3874,3874,11,3439,3437,3441,3440,0,3874,3874,3874,3874,11,3435,3441,3437,3436,0,3874,3874,3874,3874,11,3442,3443,3444,3445,0,3874,3874,3874,3874,11,3446,3442,3445,3447,0,3874,3874,3874,3874,11,3446,3447,3448,3449,0,3874,3874,3874,3874,11,3450,3451,3449,3448,0,3874,3874,3874,3874,11,3452,3453,3451,3450,0,3874,3874,3874,3874,11,3454,3453,3452,3455,0,3874,3874,3874,3874,11,3456,3454,3455,3457,0,3874,3874,3874,3874,11,3456,3457,3458,3459,0,3874,3874,3874,3874,11,3460,3461,3459,3458,0,3874,3874,3874,3874,11,3444,3443,3461,3460,0,3874,3874,3874,3874,11,3445,3444,3462,3463,0,3874,3874,3874,3874,11,3447,3445,3463,3464,0,3874,3874,3874,3874,11,3447,3464,3465,3448,0,3874,3874,3874,3874,11,3466,3450,3448,3465,0,3874,3874,3874,3874,11,3467,3452,3450,3466,0,3874,3874,3874,3874,11,3452,3467,3468,3455,0,3874,3874,3874,3874,11,3455,3468,3469,3457,0,3874,3874,3874,3874,11,3457,3469,3470,3458,0,3874,3874,3874,3874,11,3458,3470,3471,3460,0,3874,3874,3874,3874,11,3460,3471,3462,3444,0,3874,3874,3874,3874,11,3463,3462,3472,3473,0,3874,3874,3874,3874,11,3464,3463,3473,3474,0,3874,3874,3874,3874,11,3464,3474,3475,3465,0,3874,3874,3874,3874,11,3476,3466,3465,3475,0,3874,3874,3874,3874,11,3477,3467,3466,3476,0,3874,3874,3874,3874,11,3478,3468,3467,3477,0,3874,3874,3874,3874,11,3469,3468,3478,3479,0,3874,3874,3874,3874,11,3469,3479,3480,3470,0,3874,3874,3874,3874,11,3481,3471,3470,3480,0,3874,3874,3874,3874,11,3462,3471,3481,3472,0,3874,3874,3874,3874,11,3473,3472,3482,3483,0,3874,3874,3874,3874,11,3474,3473,3483,3484,0,3874,3874,3874,3874,11,3485,3475,3474,3484,0,3874,3874,3874,3874,11,3486,3476,3475,3485,0,3874,3874,3874,3874,11,3487,3477,3476,3486,0,3874,3874,3874,3874,11,3478,3477,3487,3488,0,3874,3874,3874,3874,11,3489,3479,3478,3488,0,3874,3874,3874,3874,11,3490,3491,3481,3480,0,3874,3874,3874,3874,11,3482,3472,3481,3491,0,3874,3874,3874,3874,11,3451,3443,3442,3446,0,3874,3874,3874,3874,11,3454,3443,3451,3453,0,3874,3874,3874,3874,11,3459,3443,3454,3456,0,3874,3874,3874,3874,11,2787,3492,3390,3353,0,3875,3876,3857,3856,11,3398,3492,2787,3360,0,3865,3876,3875,3866,11,3401,3493,3394,3494,0,3870,3877,3861,3878,11,3495,3496,3497,3498,0,3879,3879,3879,3879,11,3499,3497,3496,3500,0,3879,3879,3879,3879,10,2316,2321,2314,0,2678,2683,2676,10,1269,2336,1270,0,3880,2698,2703,10,2743,1275,1277,0,3800,2705,3801,10,2353,2352,2793,0,2724,2723,3186,10,2394,2393,2484,0,2765,2764,2857,10,2397,2396,2424,0,2768,2767,2795,10,2391,2476,2389,0,2762,2849,2760,10,2493,2491,2496,0,2866,2864,2869,10,2504,2508,2819,0,2877,2881,3235,10,2799,2119,2122,0,3199,3198,3228,10,2518,2106,2123,0,2893,2904,2894,10,2610,2641,2611,0,2992,3023,2993,10,2738,2807,2739,0,3123,3212,3124,10,2407,2494,2408,0,2778,3232,2779,11,2303,2296,2743,1272,0,2665,2658,3800,2702,10,2619,2649,2732,0,3001,3033,3117,11,2300,1270,2336,2338,0,2662,2703,2698,3881,10,1504,2342,1269,0,3187,2710,3880,10,1538,2794,1507,0,3191,2701,2700,10,2630,2647,2627,0,3012,3029,3009,10,2419,2451,2420,0,2790,2822,2791,10,2846,2844,2851,0,3261,3259,3266,10,2353,2881,2354,0,3301,3300,3753,10,2923,3013,2922,0,3343,3435,3342,10,2926,2953,2927,0,3346,3373,3347,10,2920,3006,3002,0,3340,3428,3424,10,3023,3025,3020,0,3445,3447,3442,10,3035,3342,3036,0,3457,3802,3458,10,3323,1936,1935,0,3766,3796,3767,10,3047,1919,3050,0,3471,3476,3475,10,3138,3140,3171,0,3569,3571,3602,10,2850,3301,3181,0,3265,3735,3614,10,3267,3266,3330,0,3701,3700,3779,10,2934,2937,3022,0,3354,3357,3799,10,3304,3136,3302,0,3738,3567,3736,10,3147,3260,3178,0,3578,3694,3611,11,1609,1608,2873,2872,0,3285,3289,3288,3286,11,1616,2835,2833,1615,0,3283,3250,3248,3293,11,2867,2864,2874,1613,0,3280,3277,3290,3292,10,3159,3156,3176,0,3590,3587,3609,10,2949,2948,2979,0,3369,3368,3399,10,3347,3350,3501,0,3807,3810,3882,10,2320,2650,2774,0,2682,3034,3166,10,2776,3344,3343,0,3168,3883,3839,10,3349,3348,3304,0,3847,3884,3738,10,2773,2607,2776,0,3165,2989,3168,10,3346,3345,3502,0,3806,3805,3885,10,3353,2788,2787,0,3813,3181,3180,10,2332,2337,2333,0,2694,2699,2695,10,2338,2301,2300,0,3881,2663,2662,10,2335,2338,2336,0,2697,3881,2698,10,2335,2301,2338,0,2697,2663,3881,10,2331,2334,2330,0,2693,2696,2692,10,2343,2331,2328,0,2714,2693,2690,10,2345,2343,2324,0,2716,2714,2686,10,2319,2308,2307,0,2681,2670,2669,10,2570,2319,2576,0,2952,2681,2958,10,2346,2344,2327,0,2717,2715,2689,10,2309,2346,2310,0,2671,2717,2672,10,2352,2317,2793,0,2723,2679,3186,10,2574,2318,2317,0,2956,2680,2679,10,2318,2574,2573,0,2680,2956,2955,10,2304,2654,2297,0,2666,3038,2659,10,2306,2304,2303,0,2668,2666,2665,10,2299,2305,2300,0,2661,2667,2662,10,2661,2666,2302,0,3045,3050,2664,10,2789,2351,2354,0,3182,2722,2725,10,2655,2562,2349,0,3039,2944,2720,10,2563,2700,2564,0,2945,3085,2946,10,2579,2676,2675,0,2961,3060,3059,10,2701,2592,2591,0,3086,2974,2973,10,2778,2623,2622,0,3171,3005,3004,10,2620,2626,2621,0,3002,3008,3003,10,2624,2628,2625,0,3006,3010,3007,10,2629,2631,2627,0,3011,3013,3009,10,3355,3354,3345,0,3815,3814,3805,10,2632,3355,2630,0,3014,3815,3012,10,2612,2642,2610,0,2994,3024,2992,10,2642,2646,2643,0,3024,3028,3025,10,2644,2777,2645,0,3026,3170,3027,10,2746,2780,3354,0,3138,3173,3814,10,2589,2613,2590,0,2971,2995,2972,10,2769,2817,2764,0,3161,3226,3156,10,3316,3360,2787,0,3751,3820,3752,10,2866,2862,2864,0,3279,3275,3277,10,3361,2865,2867,0,3821,3278,3280,10,2865,3191,3070,0,3278,3624,3501,10,2875,2876,2856,0,3294,3295,3270,10,2861,2875,2858,0,3274,3294,3272,10,2863,2861,2860,0,3276,3274,3273,10,2841,2847,2838,0,3256,3262,3253,10,3099,2841,3078,0,3530,3256,3509,10,2878,2840,2839,0,3297,3255,3254,10,2877,2878,2857,0,3296,3297,3271,10,2849,2883,2882,0,3264,3303,3302,10,2848,3105,2849,0,3263,3536,3264,10,3102,3105,2848,0,3533,3536,3263,10,3184,2834,2826,0,3617,3249,3242,10,2834,2837,2835,0,3249,3252,3250,10,2836,2830,2833,0,3251,3245,3248,10,2831,3195,3192,0,3246,3628,3625,10,2881,3317,2354,0,3300,3754,3753,10,3092,3183,2879,0,3523,3616,3298,10,3230,3091,3093,0,3664,3522,3524,10,3108,3335,3298,0,3539,3788,3732,10,3121,3229,3118,0,3552,3663,3549,10,3150,3306,3151,0,3581,3741,3582,10,3154,3149,3152,0,3585,3580,3583,10,3158,3153,3155,0,3589,3584,3586,10,3161,3157,3156,0,3592,3588,3587,10,3363,3160,3159,0,3823,3591,3590,10,3362,3363,3347,0,3822,3823,3807,10,3170,3141,3138,0,3601,3572,3569,10,3174,3170,3172,0,3605,3601,3603,10,3307,3173,3175,0,3742,3604,3606,10,3362,3309,3275,0,3822,3744,3709,10,3142,3120,3119,0,3573,3551,3550,10,3295,3340,3300,0,3729,3793,3734,10,3356,3366,3502,0,3816,3826,3885,10,2779,3366,3356,0,3172,3826,3816,10,3367,3364,3501,0,3827,3824,3882,10,3310,3365,3288,0,3745,3825,3722,10,3345,3354,3502,0,3805,3814,3885,10,3502,3354,3356,0,3885,3814,3816,10,3362,3501,3364,0,3822,3882,3824,10,3347,3501,3362,0,3807,3882,3822,10,3354,2747,2746,0,3814,3139,3138,10,3274,3362,3275,0,3708,3822,3709,10,3363,3159,3305,0,3823,3590,3740,10,2630,3355,2775,0,3012,3815,3169,10,2775,3344,2776,0,3167,3883,3168,10,2775,3355,3344,0,3169,3815,3804,10,3344,3355,3345,0,3805,3815,3805,10,3348,3305,3304,0,3884,3739,3738,10,3363,3305,3348,0,3823,3740,3808,10,3363,3348,3347,0,3823,3808,3807,10,3272,1616,1620,0,3281,3283,3282,10,3379,3343,3346,0,3840,3839,3886,10,2776,3378,2773,0,3168,3838,3165,10,3346,3502,3397,0,3886,3887,3864,10,3387,3350,3349,0,3849,3888,3847,10,2773,3377,2774,0,3165,3837,3166,10,2320,3374,2321,0,2682,3834,2683,10,3301,3389,3302,0,3735,3854,3736,10,2851,3384,2850,0,3266,3845,3265,10,3302,3386,3304,0,3736,3848,3738,10,3350,3399,3501,0,3888,3868,3889,10,3397,3395,3346,0,3864,3862,3886,10,3400,3401,3494,0,3869,3870,3878,10,3501,3399,3367,0,3889,3868,3867,10,3350,3493,3399,0,3888,3877,3868,10,3502,3366,3397,0,3887,3873,3864,10,3439,3438,3437,0,3874,3874,3874,10,3434,3441,3435,0,3874,3874,3874,10,3446,3449,3451,0,3874,3874,3874,10,3461,3443,3459,0,3874,3874,3874,10,3503,3479,3489,0,3874,3874,3874,10,3503,3480,3479,0,3874,3874,3874,10,3503,3490,3480,0,3874,3874,3874,10,3380,3485,3484,0,3841,3890,3891,10,3484,3386,3380,0,3891,3848,3841,10,3485,3380,3378,0,3890,3841,3838,10,3484,3387,3386,0,3891,3849,3848,10,3378,3379,3485,0,3838,3840,3890,10,3483,3387,3484,0,3892,3849,3891,10,3486,3485,3379,0,3892,3890,3840,10,3487,3486,3379,0,3893,3892,3840,10,3482,3387,3483,0,3893,3849,3892,10,3482,3350,3387,0,3893,3888,3849,10,3487,3379,3346,0,3893,3840,3886,10,3394,3503,3395,0,3861,3894,3862,10,3394,3493,3503,0,3861,3877,3894,10,3346,3488,3487,0,3886,3895,3893,10,3491,3350,3482,0,3895,3888,3893,10,3489,3488,3346,0,3896,3895,3886,10,3395,3503,3489,0,3862,3894,3896,10,3395,3489,3346,0,3862,3896,3886,10,3490,3350,3491,0,3896,3888,3895,10,3503,3493,3490,0,3894,3877,3896,10,3493,3350,3490,0,3877,3888,3896,10,3394,3504,3494,0,3861,3897,3878,10,3504,3394,3393,0,3897,3861,3860,10,3392,3396,3393,0,3859,3863,3860,10,3392,3395,3397,0,3859,3862,3864,10,3399,3493,3401,0,3868,3877,3870,10,3407,3492,3398,0,3898,3876,3865,10,3398,3405,3407,0,3865,3898,3898,10,3398,3388,3405,0,3865,3851,3898,10,3415,3494,3504,0,3898,3878,3897,10,3402,3400,3417,0,3898,3869,3898,10,3417,3494,3415,0,3898,3878,3898,10,3417,3400,3494,0,3898,3869,3878,10,3405,3388,3402,0,3898,3851,3898,10,3388,3400,3402,0,3851,3869,3898,10,3492,3407,3390,0,3876,3898,3857,10,3390,3407,3409,0,3857,3898,3898,10,3390,3409,3391,0,3857,3898,3858,10,3391,3409,3411,0,3858,3898,3898,10,3391,3411,3396,0,3858,3898,3863,10,3411,3413,3396,0,3898,3898,3863,10,3413,3393,3396,0,3898,3860,3863,10,3415,3504,3393,0,3898,3897,3860,10,3415,3393,3413,0,3898,3860,3898,10,3377,3371,3374,0,3837,3831,3834,10,3372,3371,3377,0,3832,3831,3837,10,3383,3389,3384,0,3844,3854,3845,10,3382,3389,3383,0,3843,3854,3844,10,3495,3505,3496,0,3879,3879,3879,10,3506,3497,3499,0,3879,3879,3879,11,2295,1275,2743,2296,0,2657,2705,3800,2658,11,2336,1269,2342,2333,0,2698,3880,2710,2695,10,2295,2339,1275,0,2657,2706,2705,11,1595,3760,3761,1596,0,3899,3900,3901,3902,11,3507,3508,3509,3510,0,3903,3904,3905,3906,11,3512,3507,3510,3511,0,3907,3903,3906,3908,11,3511,3513,3514,3512,0,3908,3909,3910,3907,11,3515,3516,3517,3518,0,3911,3912,3913,3914,11,3519,3520,3521,3522,0,3915,3916,3917,3918,11,3523,3522,3521,3524,0,3919,3918,3917,3920,11,3525,3526,3520,3519,0,3921,3922,3916,3915,11,3527,3528,3529,3530,0,3923,3924,3925,3926,10,3531,3532,3533,0,3927,3928,3929,11,3527,3534,3535,3528,0,3923,3930,3931,3924,11,3535,3534,3536,3537,0,3931,3930,3932,3933,11,3538,3539,3540,3541,0,3934,3935,3936,3937,11,3542,3540,3539,3543,0,3938,3936,3935,3939,11,3544,3545,3546,3547,0,3940,3941,3942,3943,11,3548,3549,3550,3551,0,3944,3945,3946,3947,11,3552,3553,3549,3548,0,3948,3949,3945,3944,11,3554,3555,3553,3552,0,3950,3951,3949,3948,11,3556,3557,3555,3554,0,3952,3953,3951,3950,11,3558,3559,3560,3561,0,3954,3955,3956,3957,11,3562,3563,3564,3565,0,3958,3959,3960,3961,11,3566,3567,3568,3569,0,3962,3963,3964,3965,11,3570,3571,3567,3566,0,3966,3967,3963,3962,11,3570,3572,3573,3571,0,3966,3968,3969,3967,11,3574,3575,3576,3577,0,3970,3971,3972,3973,11,3575,3578,3579,3576,0,3971,3974,3975,3972,11,3578,3580,3581,3579,0,3974,3976,3977,3975,11,3582,3583,3584,3585,0,3978,3979,3980,3981,11,3563,3518,3517,3564,0,3959,3914,3913,3960,11,3571,3519,3522,3567,0,3967,3915,3918,3963,11,3586,3587,3588,3589,0,3982,3983,3984,3985,11,3567,3522,3523,3568,0,3963,3918,3919,3964,11,3573,3525,3519,3571,0,3969,3921,3915,3967,11,3528,3590,3591,3529,0,3924,3986,3987,3925,10,3591,3590,3592,0,3987,3986,3988,11,3527,3530,3577,3576,0,3923,3926,3973,3972,11,3593,3594,3595,3596,0,3989,3990,3991,3992,11,3590,3528,3535,3597,0,3986,3924,3931,3993,10,3590,3597,3598,0,3986,3993,3994,11,3534,3527,3576,3579,0,3930,3923,3972,3975,11,3537,3599,3600,3597,0,3933,3995,3996,3993,10,3597,3600,3598,0,3993,3996,3994,11,3536,3534,3579,3581,0,3932,3930,3975,3977,11,3601,3602,3584,3583,0,3997,3998,3980,3979,11,3603,3541,3540,3604,0,3999,3937,3936,4000,11,3538,3605,3606,3539,0,3934,4001,4002,3935,11,3543,3539,3606,3607,0,3939,3935,4002,4003,11,3540,3542,3608,3604,0,3936,3938,4004,4000,11,3547,3546,3609,3610,0,3943,3942,4005,4006,11,3547,3610,3611,3544,0,3943,4006,4007,3940,11,3612,3545,3544,3613,0,4008,3941,3940,4009,11,3614,3615,3587,3586,0,4010,4011,3983,3982,11,3598,3600,3549,3553,0,3994,3996,3945,3949,11,3548,3616,3617,3552,0,3944,4012,4013,3948,11,3617,3618,3554,3552,0,4013,4014,3950,3948,11,3555,3590,3598,3553,0,3951,3986,3994,3949,11,3618,3619,3556,3554,0,4014,4015,3952,3950,11,3557,3592,3590,3555,0,3953,3988,3986,3951,11,3620,3621,3622,3623,0,4016,4017,4018,4019,11,3624,3625,3626,3627,0,4020,4021,4022,4023,10,3624,3627,3628,0,4020,4023,4024,11,3613,3618,3617,3616,0,4009,4014,4013,4012,11,3611,3619,3618,3613,0,4007,4015,4014,4009,11,3629,3607,3606,3605,0,4025,4003,4002,4001,11,3546,3543,3607,3609,0,3942,3939,4003,4005,11,3545,3542,3543,3546,0,3941,3938,3939,3942,11,3608,3542,3545,3612,0,4004,3938,3941,4008,11,3630,3603,3604,3631,0,4026,3999,4000,4027,11,3558,3604,3608,3559,0,3954,4000,4004,3955,11,3561,3631,3604,3558,0,3957,4027,4000,3954,11,3561,3625,3632,3631,0,3957,4021,4028,4027,11,3633,3634,3628,3627,0,4029,4030,4024,4023,11,3635,3636,3626,3560,0,4031,4032,4022,3956,11,3634,3595,3637,3628,0,4030,3991,4033,4024,11,3624,3628,3637,3638,0,4020,4024,4033,4034,11,3639,3616,3548,3551,0,4035,4012,3944,3947,11,3637,3595,3594,3640,0,4033,3991,3990,4036,11,3626,3636,3633,3627,0,4022,4032,4029,4023,11,3616,3639,3593,3641,0,4012,4035,3989,4037,11,3601,3513,3531,3533,0,3997,3909,3927,3929,11,3511,3510,3531,3513,0,3908,3906,3927,3909,11,3513,3601,3583,3514,0,3909,3997,3979,3910,11,3583,3582,3642,3514,0,4038,4039,4040,4041,11,3551,3550,3533,3532,0,3947,3946,3929,3928,11,3509,3637,3640,3532,0,3905,4033,4036,3928,11,3531,3510,3509,3532,0,3927,3906,3905,3928,11,3508,3638,3637,3509,0,3904,4034,4033,3905,11,3643,3644,3645,3646,0,4042,4043,4044,4045,11,3644,3643,3647,3648,0,4043,4042,4046,4047,11,3649,3650,3648,3647,0,4048,4049,4047,4046,11,3613,3616,3641,3612,0,4009,4012,4037,4008,11,3651,3652,3653,3654,0,4050,4051,4052,4053,11,3653,3655,3656,3654,0,4052,4054,4055,4053,11,3657,3656,3655,3658,0,4056,4055,4054,4057,11,3659,3657,3658,3660,0,4058,4056,4057,4059,11,3661,3662,3663,3664,0,4060,4061,4062,4063,11,3661,3665,3666,3662,0,4060,4064,4065,4061,11,3667,3668,3669,3670,0,4066,4067,4068,4069,11,3665,3670,3669,3666,0,4064,4069,4068,4065,11,3654,3645,3671,3651,0,4053,4044,4070,4050,11,3645,3654,3656,3646,0,4044,4053,4055,4045,11,3643,3646,3656,3657,0,4042,4045,4055,4056,11,3647,3643,3657,3659,0,4046,4042,4056,4058,11,3672,3673,3661,3664,0,4071,4072,4060,4063,11,3674,3665,3661,3673,0,4073,4064,4060,4072,11,3650,3649,3667,3670,0,4049,4048,4066,4069,11,3674,3650,3670,3665,0,4073,4049,4069,4064,11,3675,3676,3620,3623,0,4074,4075,4016,4019,11,3599,3537,3536,3677,0,3995,3933,3932,4076,11,3677,3536,3581,3678,0,4076,3932,3977,4077,11,3580,3679,3678,3581,0,3976,4078,4077,3977,11,3624,3638,3632,3625,0,4020,4034,4028,4021,10,3613,3544,3611,0,4009,3940,4007,11,3655,3612,3641,3658,0,4054,4008,4037,4057,11,3660,3658,3641,3593,0,4059,4057,4037,3989,11,3634,3666,3596,3595,0,4030,4065,3992,3991,11,3662,3666,3634,3633,0,4061,4065,4030,4029,11,3662,3633,3636,3663,0,4061,4029,4032,4062,11,3559,3608,3680,3560,0,3955,4004,4079,3956,10,3560,3680,3635,0,3956,4079,4031,11,3586,3620,3676,3614,0,3982,4016,4075,4010,11,3615,3614,3681,3682,0,4011,4010,4080,4081,11,3683,3675,3556,3684,0,4082,4074,3952,4083,11,3623,3557,3556,3675,0,4019,3953,3952,4074,11,3623,3622,3592,3557,0,4019,4018,3988,3953,11,3526,3525,3530,3529,0,3922,3921,3926,3925,11,3577,3530,3525,3573,0,3973,3926,3921,3969,11,3572,3574,3577,3573,0,3968,3970,3973,3969,11,3610,3685,3619,3611,0,4006,4084,4015,4007,11,3610,3609,3686,3685,0,4006,4005,4085,4084,11,3607,3629,3686,3609,0,4003,4025,4085,4005,11,3684,3687,3688,3683,0,4083,4086,4087,4082,11,3687,3689,3681,3688,0,4086,4088,4080,4087,11,3682,3681,3689,3690,0,4081,4080,4088,4089,11,3619,3685,3684,3556,0,4015,4084,4083,3952,11,3685,3686,3687,3684,0,4084,4085,4086,4083,11,3686,3629,3689,3687,0,4085,4025,4088,4086,11,3689,3629,3691,3690,0,4088,4025,4090,4089,11,3521,3520,3692,3693,0,3917,3916,4091,4092,11,3591,3592,3622,3694,0,3987,3988,4018,4093,10,3535,3537,3597,0,3931,3933,3993,11,3695,3538,3516,3515,0,4094,3934,3912,3911,11,3584,3602,3696,3678,0,3980,3998,4095,4077,10,3678,3696,3677,0,4077,4095,4076,11,3679,3585,3584,3678,0,4078,3981,3980,4077,11,3516,3538,3541,3517,0,3912,3934,3937,3913,11,3603,3564,3517,3541,0,3999,3960,3913,3937,11,3603,3630,3565,3564,0,3999,4026,3961,3960,11,3615,3682,3697,3587,0,4011,4081,4096,3983,11,3698,3588,3587,3697,0,4097,3984,3983,4096,11,3699,3523,3524,3700,0,4098,3919,3920,4099,11,3699,3701,3568,3523,0,4098,4100,3964,3919,11,3701,3702,3569,3568,0,4100,4101,3965,3964,11,3690,3698,3697,3682,0,4089,4097,4096,4081,11,3515,3700,3703,3704,0,3911,4099,4102,4103,11,3518,3699,3700,3515,0,3914,4098,4099,3911,11,3701,3699,3518,3563,0,4100,4098,3914,3959,11,3563,3562,3702,3701,0,3959,3958,4101,4100,11,3705,3570,3566,3706,0,4104,4105,4106,4107,11,3572,3570,3705,3707,0,4108,4105,4104,4109,11,3574,3572,3707,3708,0,4110,4108,4109,4111,11,3578,3575,3709,3710,0,4112,4113,4114,4115,11,3575,3574,3708,3709,0,4113,4110,4111,4114,11,3706,3566,3569,3711,0,4107,4106,4116,4117,11,3711,3569,3702,3712,0,4117,4116,4118,4119,11,3713,3714,3705,3706,0,4120,4121,4104,4107,11,3714,3715,3707,3705,0,4121,4122,4109,4104,11,3715,3716,3710,3709,0,4122,4123,4115,4114,11,3716,3717,3718,3710,0,4123,4124,4125,4115,11,3708,3707,3715,3709,0,4111,4109,4122,4114,10,3713,3706,3711,0,4120,4107,4117,10,3713,3711,3712,0,4120,4117,4119,11,3718,3717,3719,3720,0,4125,4124,4126,4127,10,3585,3720,3582,0,4128,4127,4039,10,3580,3578,3710,0,4129,4112,4115,11,3669,3668,3596,3666,0,4068,4067,3992,4065,11,3668,3660,3593,3596,0,4067,4059,3989,3992,11,3667,3659,3660,3668,0,4066,4058,4059,4067,11,3649,3647,3659,3667,0,4048,4046,4058,4066,11,3651,3664,3663,3652,0,4050,4063,4062,4051,11,3672,3664,3651,3671,0,4071,4063,4050,4070,11,3671,3645,3644,3672,0,4070,4044,4043,4071,11,3644,3648,3673,3672,0,4043,4047,4072,4071,11,3648,3650,3674,3673,0,4047,4049,4073,4072,11,3721,3722,3680,3723,0,4130,4131,4079,4132,11,3723,3680,3608,3612,0,4132,4079,4004,4008,11,3723,3612,3655,3721,0,4132,4008,4054,4130,11,3721,3655,3653,3722,0,4130,4054,4052,4131,11,3652,3663,3636,3635,0,4051,4062,4032,4031,11,3532,3640,3724,3551,0,3928,4036,4133,3947,11,3725,3724,3640,3594,0,4134,4133,4036,3990,11,3594,3593,3639,3725,0,3990,3989,4035,4134,11,3639,3551,3724,3725,0,4035,3947,4133,4134,11,3694,3526,3529,3591,0,4093,3922,3925,3987,11,3526,3694,3692,3520,0,3922,4093,4091,3916,11,3726,3693,3692,3694,0,4135,4092,4091,4093,11,3698,3690,3695,3704,0,4097,4089,4094,4103,11,3698,3704,3703,3588,0,4097,4103,4102,3984,11,3727,3586,3589,3728,0,4136,3982,3985,4137,11,3703,3700,3589,3588,0,4102,4099,3985,3984,11,3693,3728,3524,3521,0,4092,4137,3920,3917,11,3693,3726,3727,3728,0,4092,4135,4136,4137,11,3727,3726,3621,3586,0,4136,4135,4017,3982,11,3652,3680,3722,3653,0,4051,4079,4131,4052,11,3602,3601,3533,3696,0,3998,3997,3929,4095,11,3599,3533,3550,3600,0,3995,3929,3946,3996,11,3677,3696,3533,3599,0,4076,4095,3929,3995,10,3695,3691,3605,0,4094,4090,4001,10,3538,3695,3605,0,3934,4094,4001,10,3690,3691,3695,0,4089,4090,4094,10,3695,3515,3704,0,4094,3911,4103,10,3605,3691,3629,0,4001,4090,4025,10,3652,3635,3680,0,4051,4031,4079,10,3550,3549,3600,0,3946,3945,3996,11,3622,3621,3726,3694,0,4018,4017,4135,4093,11,3524,3728,3589,3700,0,3920,4137,3985,4099,11,3720,3719,3642,3582,0,4127,4126,4040,4039,11,3720,3585,3679,3718,0,4127,4128,4138,4125,11,3580,3710,3718,3679,0,4129,4115,4125,4138,11,3625,3561,3560,3626,0,4021,3957,3956,4022,11,3676,3675,3683,3688,0,4075,4074,4082,4087,11,3681,3614,3676,3688,0,4080,4010,4075,4087,10,3586,3621,3620,0,3982,4017,4016,11,3712,3702,3562,3565,0,4139,4101,3958,4140,11,3729,3730,3731,3732,0,4141,4142,4143,4144,11,1582,1581,3733,3734,0,4145,4146,4147,4148,11,3735,3736,3737,3738,0,4149,4150,4151,4152,11,3736,3739,3740,3737,0,4150,4153,4154,4151,11,3741,3742,3739,3736,0,4155,4156,4153,4150,11,3743,3744,3742,3741,0,4157,4158,4156,4155,11,3745,3746,3747,3748,0,4159,4160,4161,4162,11,3749,3750,3751,3752,0,4163,4164,4165,4166,11,3753,3754,3747,3752,0,4167,4168,4161,4166,11,3755,3756,3757,3758,0,4169,4170,4171,4172,11,3755,3759,3749,3746,0,4169,4173,4163,4160,11,3940,3733,1581,1598,0,4174,4147,4146,4175,11,3762,3763,3764,3765,0,4176,4177,4178,4179,11,3766,3767,3768,3769,0,4180,4181,4182,4183,11,3770,3766,3769,3771,0,4184,4180,4183,4185,11,3772,3773,3766,3770,0,4186,4187,4180,4184,11,3774,3775,3776,3767,0,4188,4189,4190,4181,11,3777,3778,3768,3767,0,4191,4192,4182,4181,11,3779,3780,3765,3764,0,4193,4194,4179,4178,11,3781,3782,3783,3784,0,4195,4196,4197,4198,10,3785,3786,3784,0,4199,4200,4198,11,3757,3756,3785,3787,0,4171,4170,4199,4201,11,3788,3789,3790,3791,0,4202,4203,4204,4205,11,3792,3793,3794,3795,0,4206,4207,4208,4209,11,3796,3797,3798,3799,0,4210,4211,4212,4213,11,3800,3788,3791,3801,0,4214,4202,4205,4215,11,3802,3803,3804,3805,0,4216,4217,4218,4219,11,3806,3807,3808,3809,0,4220,4221,4222,4223,11,3809,3808,3810,3811,0,4223,4222,4224,4225,11,3812,3813,3814,3815,0,4226,4227,4228,4229,11,3816,3817,3818,3819,0,4230,4231,4232,4233,11,3820,3821,3816,3819,0,4234,4235,4230,4233,11,3822,3823,3824,3825,0,4236,4237,4238,4239,11,3758,3826,3759,3755,0,4172,4240,4173,4169,11,3826,3827,3828,3759,0,4240,4241,4242,4173,11,3828,3829,3830,3750,0,4242,4243,4244,4164,11,3750,3830,3831,3751,0,4164,4244,4245,4165,11,3819,3818,3832,3833,0,4233,4232,4246,4247,11,3746,3745,3756,3755,0,4160,4159,4170,4169,11,3756,3745,3786,3785,0,4170,4159,4200,4199,11,3834,3835,3836,3837,0,4248,4249,4250,4251,11,3823,3838,3817,3824,0,4237,4252,4231,4238,11,3839,3832,3818,3840,0,4253,4246,4232,4254,11,3841,3832,3839,3842,0,4255,4246,4253,4256,11,3843,3844,3777,3845,0,4257,4258,4191,4259,11,3846,3847,3848,3849,0,4260,4261,4262,4263,11,3850,3851,3852,3853,0,4264,4265,4266,4267,11,3852,3797,3796,3853,0,4266,4211,4210,4267,11,3799,3798,3854,3855,0,4213,4212,4268,4269,11,3805,3804,3851,3850,0,4219,4218,4265,4264,11,3856,3857,3775,3858,0,4270,4271,4189,4272,11,3783,3788,3800,3859,0,4197,4202,4214,4273,11,3782,3789,3788,3783,0,4196,4203,4202,4197,11,3778,3779,3764,3768,0,4192,4193,4178,4182,11,3764,3763,3769,3768,0,4178,4177,4183,4182,11,3763,3760,3771,3769,0,4177,3900,4185,4183,11,3860,3807,3806,3861,0,4274,4221,4220,4275,11,3760,1595,1597,3771,0,3900,3899,4276,4185,11,3862,3857,3856,3863,0,4277,4271,4270,4278,11,3864,3865,3862,3863,0,4279,4280,4277,4278,11,3864,3866,3867,3865,0,4279,4281,4282,4280,11,3868,3869,3870,3871,0,4283,4284,4285,4286,11,3846,3849,3872,3873,0,4260,4263,4287,4288,11,3874,3870,3846,3873,0,4289,4285,4260,4288,11,3817,3838,3840,3818,0,4231,4252,4254,4232,11,3875,3843,3845,3876,0,4290,4257,4259,4291,11,3877,3878,3875,3879,0,4292,4293,4290,4294,11,3880,3881,3882,3883,0,4295,4296,4297,4298,11,3884,3883,3882,3885,0,4299,4298,4297,4300,11,3885,3886,3887,3884,0,4300,4301,4302,4299,11,3848,3888,3889,3890,0,4262,4303,4304,4305,11,3891,3888,3892,3893,0,4306,4303,4307,4308,10,3894,3893,3892,0,4309,4308,4307,11,3895,3868,3896,3897,0,4310,4283,4311,4312,11,3835,3841,3898,3899,0,4249,4255,4313,4314,11,3839,3900,3901,3842,0,4253,4315,4316,4256,11,3842,3901,3902,3903,0,4256,4316,4317,4318,11,3842,3903,3898,3841,0,4256,4318,4313,4255,11,3900,3888,3891,3901,0,4315,4303,4306,4316,11,3893,3904,3905,3891,0,4308,4319,4320,4306,11,3901,3891,3905,3902,0,4316,4306,4320,4317,11,3906,3771,1597,1599,0,4321,4185,4276,4322,11,3907,3908,3773,3772,0,4323,4324,4187,4186,11,3767,3766,3773,3774,0,4181,4180,4187,4188,11,3910,3911,3912,3913,0,4325,4326,4327,4328,11,3914,3915,3744,3754,0,4329,4330,4158,4168,11,3916,3742,3744,3915,0,4331,4156,4158,4330,11,3917,3740,3739,3918,0,4332,4154,4153,4333,11,3918,3739,3742,3916,0,4333,4153,4156,4331,11,3754,3753,3919,3914,0,4168,4167,4334,4329,11,3918,3920,3921,3917,0,4333,4335,4336,4332,11,3918,3916,3922,3920,0,4333,4331,4337,4335,11,3919,3923,3915,3914,0,4334,4338,4330,4329,11,3916,3915,3923,3922,0,4331,4330,4338,4337,11,3917,3921,3924,3740,0,4332,4336,4339,4154,11,3741,3736,3925,3926,0,4155,4150,4340,4341,11,3927,3928,3929,3930,0,4342,4343,4344,4345,11,3743,3741,3931,3932,0,4157,4155,4346,4347,11,3933,3934,3935,3931,0,4348,4349,4350,4346,11,3936,3932,3931,3935,0,4351,4347,4346,4350,11,3931,3741,3926,3933,0,4346,4155,4341,4348,11,3925,3736,3735,3937,0,4340,4150,4149,4352,11,3938,3939,3733,3940,0,4353,4354,4147,4174,11,3909,1600,1582,3734,0,4355,4356,4145,4148,11,4559,4391,1910,4560,0,4357,4358,4359,4360,10,3943,3944,3945,0,4361,4362,4363,11,3946,3947,3948,3949,0,4364,4365,4366,4367,11,3950,3951,3952,3953,0,4368,4369,4370,4371,11,3920,3922,3954,3955,0,4335,4337,4372,4373,11,3920,3955,3956,3921,0,4335,4373,4374,4336,11,3855,3854,3957,3958,0,4269,4268,4375,4376,11,3959,3960,3803,3810,0,4377,4378,4217,4224,11,3960,3961,3804,3803,0,4378,4379,4218,4217,11,3804,3961,3962,3851,0,4218,4379,4380,4265,11,3729,3794,3793,3730,0,4141,4208,4207,4142,11,3851,3962,3963,3852,0,4265,4380,4381,4266,10,3963,3962,3964,0,4381,4380,4382,11,3787,3965,3966,3967,0,4201,4383,4384,4385,10,3965,3859,3966,0,4383,4273,4384,11,3859,3965,3784,3783,0,4273,4383,4198,4197,11,3729,3732,3944,3943,0,4141,4144,4362,4361,11,3858,3775,3774,3968,0,4272,4189,4188,4386,11,3881,3969,3970,3882,0,4296,4387,4388,4297,11,3971,3885,3882,3970,0,4389,4300,4297,4388,11,3969,3881,3877,3972,0,4387,4296,4292,4390,11,3879,3973,3974,3975,0,4294,4391,4392,4393,11,3976,3765,3780,3929,0,4394,4179,4194,4344,11,3789,3778,3977,3790,0,4203,4192,4395,4204,11,3782,3781,3780,3779,0,4196,4195,4194,4193,11,3789,3782,3779,3778,0,4203,4196,4193,4192,11,3776,3845,3777,3767,0,4190,4259,4191,4181,10,3772,3770,3978,0,4186,4184,4396,11,3752,3751,3950,3753,0,4166,4165,4368,4167,11,3753,3950,3953,3919,0,4167,4368,4371,4334,11,3919,3953,3979,3923,0,4334,4371,4397,4338,11,3746,3749,3752,3747,0,4160,4163,4166,4161,11,3750,3749,3759,3828,0,4164,4163,4173,4242,10,3980,3860,3943,0,4398,4274,4361,11,3794,3729,3943,3981,0,4208,4141,4361,4399,11,3860,3861,3981,3943,0,4274,4275,4399,4361,11,3760,3763,3762,3761,0,3900,4177,4176,3901,11,3761,3762,3982,3941,0,3901,4176,4400,4401,11,3983,3984,3985,3871,0,4402,4403,4404,4286,11,3986,3987,3988,3979,0,4405,4406,4407,4397,11,3988,3922,3923,3979,0,4407,4337,4338,4397,11,3902,3989,3990,3903,0,4317,4408,4409,4318,11,3991,3898,3903,3990,0,4410,4313,4318,4409,11,3904,3992,3993,3994,0,4319,4411,4412,4413,11,3995,3905,3904,3994,0,4409,4320,4319,4413,11,3995,3989,3902,3905,0,4409,4408,4317,4320,11,3878,3996,3843,3875,0,4293,4414,4257,4290,11,3883,3873,3872,3880,0,4298,4288,4287,4295,11,3873,3883,3884,3874,0,4288,4298,4299,4289,11,3887,3997,3874,3884,0,4302,4415,4289,4299,11,3998,3999,3790,3977,0,4416,4417,4204,4395,11,4000,4001,3808,3807,0,4418,4419,4222,4221,11,4002,3812,3815,4003,0,4420,4226,4229,4421,11,3961,3960,3812,4002,0,4379,4378,4226,4420,11,3962,3961,4002,3964,0,4380,4379,4420,4382,11,3964,4002,4003,4004,0,4382,4420,4421,4422,11,3967,4004,3757,3787,0,4385,4422,4171,4201,11,3795,4005,4006,3792,0,4209,4423,4424,4206,11,4007,4008,3802,3805,0,4425,4426,4216,4219,11,3809,4009,4010,3806,0,4223,4427,4428,4220,11,3809,3811,4011,4009,0,4223,4225,4429,4427,11,4012,4013,3850,3853,0,4430,4431,4264,4267,11,3855,4014,4015,3799,0,4269,4432,4433,4213,11,4013,4007,3805,3850,0,4431,4425,4219,4264,11,3806,4010,4016,3861,0,4220,4428,4434,4275,11,3958,4017,4014,3855,0,4376,4435,4432,4269,11,3795,3981,4018,4005,0,4209,4399,4436,4423,11,4016,4018,3981,3861,0,4434,4436,4399,4275,11,3796,4019,4012,3853,0,4210,4437,4430,4267,11,4019,3796,3799,4015,0,4437,4210,4213,4433,11,3936,4020,3784,3786,0,4351,4438,4198,4200,11,3786,3745,3932,3936,0,4200,4159,4347,4351,11,3847,3892,3888,3848,0,4261,4307,4303,4262,11,3894,3869,3868,3895,0,4309,4284,4283,4310,11,4021,3927,3930,4022,0,4439,4342,4345,4440,11,4023,3867,4024,4025,0,4441,4282,4442,4443,10,4023,4025,3974,0,4441,4443,4392,11,4026,4027,3970,3969,0,4444,4445,4446,4447,11,4028,3971,3970,4027,0,4448,4449,4446,4445,11,4029,4026,3969,3972,0,4450,4444,4447,4451,11,4025,4030,3975,3974,0,4443,4452,4393,4392,11,4031,4032,4033,4034,0,4453,4454,4455,4456,11,4035,4036,4025,4024,0,4457,4458,4459,4460,11,4037,4038,4027,4026,0,4461,4462,4445,4444,10,4028,4027,4038,0,4448,4445,4462,11,4037,4026,4029,4039,0,4461,4444,4450,4463,10,4039,4029,4030,0,4463,4450,4464,11,4039,4030,4025,4036,0,4463,4464,4459,4458,11,4040,4036,4035,4041,0,4465,4458,4457,4466,10,4041,4035,4042,0,4466,4457,4467,11,4043,4038,4037,4044,0,4468,4462,4461,4469,11,4044,4037,4039,4045,0,4469,4461,4463,4470,11,4040,4045,4039,4036,0,4465,4470,4463,4458,11,4042,4046,4047,4048,0,4467,4471,4472,4473,10,4042,4048,4041,0,4467,4473,4466,11,4049,4040,4041,4050,0,4474,4465,4466,4475,11,4051,4043,4044,4052,0,4476,4468,4469,4477,11,4052,4044,4045,4053,0,4477,4469,4470,4478,11,4053,4045,4040,4049,0,4478,4470,4465,4474,11,4054,4049,4050,4055,0,4479,4480,4481,4482,10,4051,4052,4056,0,4483,4484,4485,11,4056,4052,4053,4057,0,4485,4484,4486,4487,11,4057,4053,4049,4054,0,4487,4486,4480,4479,11,4058,4059,4055,4050,0,4488,4489,4482,4481,11,4060,4054,4055,4061,0,4490,4479,4482,4491,11,4062,4056,4057,4063,0,4492,4485,4487,4493,11,4063,4057,4054,4060,0,4493,4487,4479,4490,11,4059,4064,4061,4055,0,4489,4494,4491,4482,11,4062,4063,4060,4061,0,4492,4493,4490,4491,11,3822,3825,3890,3889,0,4236,4239,4305,4304,11,3791,3790,3999,3731,0,4205,4204,4417,4143,11,3801,3791,3731,3730,0,4215,4205,4143,4142,11,4023,3974,3973,4065,0,4441,4392,4391,4495,11,3973,3876,4066,4065,0,4391,4291,4496,4495,11,3878,3877,3881,3880,0,4293,4292,4296,4295,11,3996,3878,3880,3872,0,4414,4293,4295,4287,11,3975,3972,3877,3879,0,4393,4390,4292,4294,11,3837,4067,4068,3833,0,4251,4497,4498,4247,11,3770,3771,3906,3978,0,4184,4185,4321,4396,11,4069,4021,3631,3632,0,4499,4439,4500,4501,11,4070,4069,3632,3638,0,4502,4499,4501,4503,11,3933,3926,3712,3565,0,4348,4341,4504,4505,11,3926,3925,4071,3713,0,4341,4340,4506,4507,10,3926,3713,3712,0,4341,4507,4504,11,3930,3929,3780,3781,0,4345,4344,4194,4195,11,3941,3982,3928,4072,0,4401,4400,4343,4508,11,3942,3941,4072,4073,0,4509,4401,4508,4510,11,4073,3938,3940,3942,0,4510,4353,4174,4509,11,3976,3929,3928,3982,0,4394,4344,4343,4400,11,3976,3982,3762,3765,0,4394,4400,4176,4179,11,3958,3957,3793,3792,0,4376,4375,4207,4206,11,4017,3958,3792,4006,0,4435,4376,4206,4424,11,3944,3732,3824,3817,0,4362,4144,4238,4231,11,3816,3945,3944,3817,0,4230,4363,4362,4231,11,3945,3816,3821,4074,0,4363,4230,4235,4511,11,3963,3964,4004,3967,0,4381,4382,4422,4385,11,3797,3963,3967,3966,0,4211,4381,4385,4384,11,3966,3859,3798,3797,0,4384,4273,4212,4211,11,3798,3859,3800,3854,0,4212,4273,4214,4268,11,3854,3800,3801,3957,0,4268,4214,4215,4375,11,3957,3801,3730,3793,0,4375,4215,4142,4207,11,3734,3733,3939,4075,0,4148,4147,4354,4512,11,3734,4075,4076,3909,0,4148,4512,4513,4355,11,4077,3909,4076,4078,0,4514,4355,4513,4515,11,3939,3938,4079,4080,0,4354,4353,4516,4517,11,4075,3939,4080,4081,0,4512,4354,4517,4518,11,4075,4081,4082,4076,0,4512,4518,4519,4513,11,4076,4082,4083,4078,0,4513,4519,4520,4515,11,4010,4009,4084,4016,0,4428,4427,4521,4434,11,4018,4016,4084,4005,0,4436,4434,4521,4423,11,4085,4086,3978,3906,0,4522,4523,4396,4321,11,3748,3743,3932,3745,0,4162,4157,4347,4159,11,3743,3748,3754,3744,0,4157,4162,4168,4158,10,3748,3747,3754,0,4162,4161,4168,11,3807,3860,3980,3949,0,4221,4274,4398,4367,11,3946,3949,3980,4087,0,4364,4367,4398,4524,11,4088,4089,3946,4087,0,4525,4526,4364,4524,11,3949,3948,4000,3807,0,4367,4366,4418,4221,10,3827,4090,3828,0,4241,4527,4242,11,4091,3814,3948,3947,0,4528,4228,4366,4365,11,4092,4093,4091,3947,0,4529,4530,4528,4365,11,3865,3867,4023,4065,0,4280,4282,4441,4495,11,3857,3862,4065,4066,0,4271,4277,4495,4496,11,4094,4024,3867,3866,0,4531,4442,4282,4281,11,4024,4094,4042,4035,0,4460,4532,4467,4457,11,3912,3911,3738,3737,0,4327,4326,4152,4151,11,3924,3912,3737,3740,0,4339,4327,4151,4154,11,3758,3757,4004,4003,0,4172,4171,4422,4421,11,3826,3758,4003,3815,0,4240,4172,4421,4229,11,3827,3826,3815,3814,0,4241,4240,4229,4228,11,4091,4090,3827,3814,0,4528,4527,4241,4228,11,4093,4095,4090,4091,0,4530,4533,4527,4528,11,3512,3514,4072,3927,0,4534,4535,4508,4342,11,4073,4072,3514,3642,0,4510,4508,4535,4536,11,3507,4070,3638,3508,0,4537,4502,4503,4538,11,4070,3507,3512,3927,0,4502,4537,4534,4342,11,4069,4070,3927,4021,0,4499,4502,4342,4439,11,3934,4021,4022,3935,0,4349,4439,4440,4350,11,3934,3630,3631,4021,0,4349,4539,4500,4439,11,3934,3933,3565,3630,0,4349,4348,4505,4539,11,4071,3925,3937,3715,0,4506,4340,4352,4540,10,3719,3717,3938,0,4541,4542,4353,11,4080,4079,3937,3735,0,4517,4516,4352,4149,11,3937,4079,3716,3715,0,4352,4516,4543,4540,11,3717,3716,4079,3938,0,4542,4543,4516,4353,11,4081,4080,3735,3738,0,4518,4517,4149,4152,11,4081,3738,3911,4082,0,4518,4152,4326,4519,11,4082,3911,3910,4083,0,4519,4326,4325,4520,11,4094,4034,4046,4042,0,4532,4544,4471,4467,11,3866,4031,4034,4094,0,4281,4453,4456,4531,11,4096,4031,3866,3864,0,4545,4453,4281,4279,11,4097,3825,3824,3732,0,4546,4239,4238,4144,11,3731,3999,4097,3732,0,4143,4417,4546,4144,11,3983,3871,3870,3874,0,4402,4286,4285,4289,11,3997,3984,3983,3874,0,4415,4403,4402,4289,11,3985,3896,3868,3871,0,4404,4311,4283,4286,11,3847,3846,3870,3869,0,4261,4260,4285,4284,11,3835,3899,4098,4099,0,4249,4314,4547,4548,11,3834,3837,3833,3832,0,4248,4251,4247,4246,11,4100,4101,4102,4103,0,4549,4550,4551,4552,11,4101,4100,3893,3894,0,4550,4549,4308,4309,11,4100,3992,3904,3893,0,4549,4411,4319,4308,11,4103,4104,3992,4100,0,4552,4553,4411,4549,11,3895,4102,4101,3894,0,4310,4551,4550,4309,11,4102,3895,4105,4099,0,4551,4310,4554,4548,11,3899,4106,4104,4103,0,4314,4555,4553,4552,10,3899,4103,4098,0,4314,4552,4547,11,3992,4104,4107,3993,0,4411,4553,4556,4412,10,4107,4104,4106,0,4556,4553,4555,11,3899,3898,3991,4106,0,4314,4313,4410,4555,11,3836,3835,4099,4105,0,4250,4249,4548,4554,11,3836,4105,4108,4109,0,4250,4554,4557,4558,11,3834,3832,3841,3835,0,4248,4246,4255,4249,11,4103,4102,4099,4098,0,4552,4551,4548,4547,11,3892,3847,3869,3894,0,4307,4261,4284,4309,11,4074,4088,4087,3945,0,4511,4525,4524,4363,11,3772,3978,4086,3907,0,4186,4396,4523,4323,11,3836,4109,4067,3837,0,4250,4558,4497,4251,11,4090,4095,3829,3828,0,4527,4533,4243,4242,11,3751,3831,3951,3950,0,4165,4245,4369,4368,11,4043,4051,4110,4111,0,4468,4476,4559,4560,11,4051,4056,4112,4110,0,4483,4485,4561,4562,11,3858,4113,4114,3856,0,4272,4563,4564,4270,11,3863,3856,4114,4115,0,4278,4270,4564,4565,11,3819,3833,4068,3820,0,4233,4247,4498,4234,11,3971,4028,4116,4117,0,4449,4448,4566,4567,11,4028,4038,4118,4116,0,4448,4462,4568,4566,11,4038,4043,4111,4118,0,4462,4468,4560,4568,11,4066,3776,3775,3857,0,4496,4190,4189,4271,11,4030,4029,3972,3975,0,4464,4450,4451,4569,11,3778,3777,3844,3977,0,4192,4191,4258,4395,10,3862,3865,4065,0,4277,4280,4495,11,3954,3922,3988,3987,0,4372,4337,4407,4406,11,3986,3979,3953,3952,0,4405,4397,4371,4370,11,4119,3924,3921,3956,0,4570,4339,4336,4374,11,3912,3924,4119,3913,0,4327,4339,4570,4328,11,4105,3895,3897,4108,0,4554,4310,4312,4557,11,3946,4089,4092,3947,0,4364,4526,4529,4365,11,1604,1600,3909,4077,0,4571,4356,4355,4514,11,4096,3864,3863,4115,0,4545,4279,4278,4565,10,4096,4115,4120,0,4545,4565,4572,11,4046,4034,4033,4047,0,4471,4544,4573,4472,11,4041,4048,4058,4050,0,4466,4473,4574,4475,11,4032,4031,4096,4120,0,4454,4453,4545,4572,11,4056,4062,4121,4112,0,4485,4492,4575,4561,11,4062,4061,4064,4121,0,4492,4491,4494,4575,11,3774,3773,3908,3968,0,4188,4187,4324,4386,11,3885,3971,4117,3886,0,4300,4389,4576,4301,11,1599,1602,4085,3906,0,4322,4577,4522,4321,11,3822,3889,4122,3823,0,4236,4304,4578,4237,11,3839,3840,4122,3900,0,4253,4254,4578,4315,11,3889,3888,3900,4122,0,4304,4303,4315,4578,11,4122,3840,3838,3823,0,4578,4254,4252,4237,11,4123,3890,3825,4097,0,4579,4305,4239,4546,11,3848,3890,4123,3849,0,4262,4305,4579,4263,11,3998,4123,4097,3999,0,4416,4579,4546,4417,11,3977,3844,4124,3998,0,4395,4258,4580,4416,11,3843,3996,3872,3849,0,4257,4414,4287,4263,11,3843,3849,4124,3844,0,4257,4263,4580,4258,11,4124,3849,4123,3998,0,4580,4263,4579,4416,11,3960,3959,3813,3812,0,4378,4377,4227,4226,11,3813,4000,3948,3814,0,4227,4418,4366,4228,11,4022,4020,3936,3935,0,4440,4438,4351,4350,11,3930,3781,4020,4022,0,4345,4195,4438,4440,10,4020,3781,3784,0,4438,4195,4198,11,3810,3808,4001,3959,0,4224,4222,4419,4377,11,4000,3813,3959,4001,0,4418,4227,4377,4419,11,3803,3802,3811,3810,0,4217,4216,4225,4224,11,3811,3802,4008,4011,0,4225,4216,4426,4429,10,4072,3928,3927,0,4508,4343,4342,11,3845,3776,4066,3876,0,4259,4190,4496,4291,11,4125,4126,4006,4005,0,4581,4582,4424,4423,11,4007,4127,4128,4008,0,4425,4583,4584,4426,11,4008,4128,4129,4011,0,4426,4584,4585,4429,11,4130,4131,4013,4012,0,4586,4587,4431,4430,11,4014,4132,4133,4015,0,4432,4588,4589,4433,11,4131,4127,4007,4013,0,4587,4583,4425,4431,11,4017,4134,4132,4014,0,4435,4590,4588,4432,11,4135,4130,4012,4019,0,4591,4586,4430,4437,11,4015,4133,4135,4019,0,4433,4589,4591,4437,11,4009,4136,4137,4084,0,4427,4592,4593,4521,11,4126,4134,4017,4006,0,4582,4590,4435,4424,11,4137,4125,4005,4084,0,4593,4581,4423,4521,11,4011,4129,4136,4009,0,4429,4585,4592,4427,11,3875,3876,3973,3879,0,4290,4291,4391,4294,10,3994,3989,3995,0,4413,4408,4409,11,3990,3989,3994,3993,0,4409,4408,4413,4412,11,4107,3991,3990,3993,0,4556,4410,4409,4412,10,4107,4106,3991,0,4556,4555,4410,10,3797,3852,3963,0,4211,4266,4381,10,3795,3794,3981,0,4209,4208,4399,11,3785,3784,3965,3787,0,4199,4198,4383,4201,11,3943,3945,4087,3980,0,4361,4363,4524,4398,11,3719,3938,4073,3642,0,4541,4353,4510,4536,11,4138,4139,4140,4141,0,4594,4595,4596,4597,11,4141,4140,4142,4143,0,4597,4596,4598,4599,11,4143,4142,4144,4145,0,4599,4598,4600,4601,11,4146,4147,4148,4149,0,4602,4603,4604,4605,11,4150,4151,4152,4153,0,4606,4607,4608,4609,11,4154,4155,4150,4153,0,4610,4611,4606,4609,11,4151,4156,4157,4152,0,4607,4612,4613,4608,11,4158,4159,4160,4161,0,4614,4615,4616,4617,10,4162,4163,4164,0,4618,4619,4620,11,4165,4166,4160,4159,0,4621,4622,4616,4615,11,4165,4167,4168,4166,0,4621,4623,4624,4622,11,4169,4170,4171,4172,0,4625,4626,4627,4628,11,4173,4174,4170,4169,0,4629,4630,4626,4625,11,4175,4176,4177,4178,0,4631,4632,4633,4634,11,4179,4180,4181,4182,0,4635,4636,4637,4638,11,4183,4179,4182,4184,0,4639,4635,4638,4640,11,4185,4183,4184,4186,0,4641,4639,4640,4642,11,4187,4185,4186,4188,0,4643,4641,4642,4644,11,4189,4190,4191,4192,0,4645,4646,4647,4648,11,4193,4194,4195,4196,0,4649,4650,4651,4652,11,4197,4198,4199,4200,0,4653,4654,4655,4656,11,4198,4201,4202,4199,0,4654,4657,4658,4655,11,4202,4201,4203,4204,0,4658,4657,4659,4660,11,4205,4206,4207,4208,0,4661,4662,4663,4664,11,4208,4207,4209,4210,0,4664,4663,4665,4666,11,4210,4209,4211,4212,0,4666,4665,4667,4668,11,4213,4214,4215,4216,0,4669,4670,4671,4672,11,4194,4193,4146,4149,0,4650,4649,4602,4605,11,4201,4198,4153,4152,0,4657,4654,4609,4608,11,4217,4218,4219,4220,0,4673,4674,4675,4676,11,4198,4197,4154,4153,0,4654,4653,4610,4609,11,4203,4201,4152,4157,0,4659,4657,4608,4613,11,4221,4222,4159,4223,0,4677,4678,4615,4679,10,4223,4159,4158,0,4679,4615,4614,11,4206,4161,4160,4207,0,4662,4617,4616,4663,11,4224,4225,4226,4227,0,4680,4681,4682,4683,11,4228,4229,4165,4222,0,4684,4685,4621,4678,10,4222,4165,4159,0,4678,4621,4615,11,4207,4160,4166,4209,0,4663,4616,4622,4665,11,4229,4228,4230,4231,0,4685,4684,4686,4687,10,4229,4231,4167,0,4685,4687,4623,11,4209,4166,4168,4211,0,4665,4622,4624,4667,11,4232,4214,4213,4233,0,4688,4670,4669,4689,11,4234,4235,4169,4172,0,4690,4691,4625,4628,11,4236,4237,4171,4170,0,4692,4693,4627,4626,11,4174,4238,4236,4170,0,4630,4694,4692,4626,11,4239,4173,4169,4235,0,4695,4629,4625,4691,11,4178,4240,4241,4175,0,4634,4696,4697,4631,11,4242,4240,4178,4177,0,4698,4696,4634,4633,11,4243,4244,4177,4176,0,4699,4700,4633,4632,11,4245,4217,4220,4246,0,4701,4673,4676,4702,11,4228,4184,4182,4230,0,4684,4640,4638,4686,11,4179,4183,4247,4248,0,4635,4639,4703,4704,11,4185,4249,4247,4183,0,4641,4705,4703,4639,11,4228,4222,4186,4184,0,4684,4678,4642,4640,11,4187,4250,4249,4185,0,4643,4706,4705,4641,11,4222,4221,4188,4186,0,4678,4677,4644,4642,11,4251,4252,4253,4254,0,4707,4708,4709,4710,11,4255,4256,4257,4258,0,4711,4712,4713,4714,10,4255,4258,4259,0,4711,4714,4715,11,4244,4248,4247,4249,0,4700,4704,4703,4705,11,4242,4244,4249,4250,0,4698,4700,4705,4706,11,4260,4237,4236,4238,0,4716,4693,4692,4694,11,4238,4174,4175,4241,0,4694,4630,4631,4697,11,4174,4173,4176,4175,0,4630,4629,4632,4631,11,4239,4243,4176,4173,0,4695,4699,4632,4629,11,4235,4234,4261,4262,0,4691,4690,4717,4718,11,4239,4235,4191,4190,0,4695,4691,4647,4646,11,4235,4262,4192,4191,0,4691,4718,4648,4647,11,4263,4259,4192,4262,0,4719,4715,4648,4718,11,4256,4264,4265,4257,0,4712,4720,4721,4713,11,4258,4266,4267,4189,0,4714,4722,4723,4645,11,4268,4224,4264,4256,0,4724,4680,4720,4712,11,4255,4269,4268,4256,0,4711,4725,4724,4712,11,4179,4248,4270,4180,0,4635,4704,4726,4636,11,4268,4271,4225,4224,0,4724,4727,4681,4680,11,4258,4257,4265,4266,0,4714,4713,4721,4722,11,4226,4270,4248,4272,0,4682,4726,4704,4728,11,4162,4145,4232,4163,0,4618,4601,4688,4619,11,4143,4145,4162,4141,0,4599,4601,4618,4597,11,4145,4144,4214,4232,0,4601,4600,4670,4688,11,4214,4144,4273,4215,0,4729,4730,4731,4732,11,4180,4164,4163,4181,0,4636,4620,4619,4637,11,4271,4268,4138,4164,0,4727,4724,4594,4620,11,4162,4164,4138,4141,0,4618,4620,4594,4597,11,4268,4269,4139,4138,0,4724,4725,4595,4594,11,4274,4275,4276,4277,0,4733,4734,4735,4736,11,4278,4276,4275,4279,0,4737,4735,4734,4738,11,4280,4278,4279,4281,0,4739,4737,4738,4740,11,4272,4248,4244,4243,0,4728,4704,4700,4699,11,4282,4283,4284,4285,0,4741,4742,4743,4744,11,4282,4285,4286,4287,0,4741,4744,4745,4746,11,4288,4289,4287,4286,0,4747,4748,4746,4745,11,4290,4291,4289,4288,0,4749,4750,4748,4747,11,4292,4293,4294,4295,0,4751,4752,4753,4754,11,4294,4293,4296,4297,0,4753,4752,4755,4756,11,4298,4299,4300,4301,0,4757,4758,4759,4760,11,4297,4296,4298,4301,0,4756,4755,4757,4760,11,4285,4284,4302,4274,0,4744,4743,4761,4733,11,4274,4277,4286,4285,0,4733,4736,4745,4744,11,4276,4288,4286,4277,0,4735,4747,4745,4736,11,4278,4290,4288,4276,0,4737,4749,4747,4735,11,4303,4295,4294,4304,0,4762,4754,4753,4763,11,4294,4297,4305,4304,0,4753,4756,4764,4763,11,4281,4301,4300,4280,0,4740,4760,4759,4739,11,4305,4297,4301,4281,0,4764,4756,4760,4740,11,4253,4306,4307,4254,0,4709,4765,4766,4710,11,4168,4167,4231,4308,0,4624,4623,4687,4767,11,4211,4168,4308,4309,0,4667,4624,4767,4768,11,4309,4310,4212,4211,0,4768,4769,4668,4667,11,4263,4269,4255,4259,0,4719,4725,4711,4715,10,4244,4242,4177,0,4700,4698,4633,11,4272,4243,4287,4289,0,4728,4699,4746,4748,11,4291,4226,4272,4289,0,4750,4682,4728,4748,11,4227,4296,4264,4224,0,4683,4755,4720,4680,11,4293,4265,4264,4296,0,4752,4721,4720,4755,11,4266,4265,4293,4292,0,4722,4721,4752,4751,11,4267,4311,4239,4189,0,4723,4770,4695,4645,10,4189,4239,4190,0,4645,4695,4646,11,4217,4245,4306,4253,0,4673,4701,4765,4709,11,4246,4312,4313,4245,0,4702,4771,4772,4701,11,4314,4315,4187,4307,0,4773,4774,4643,4766,11,4254,4307,4187,4188,0,4710,4766,4643,4644,11,4221,4251,4254,4188,0,4677,4707,4710,4644,11,4156,4158,4161,4157,0,4612,4614,4617,4613,11,4157,4161,4206,4203,0,4613,4617,4662,4659,11,4206,4205,4204,4203,0,4662,4661,4660,4659,11,4240,4242,4250,4316,0,4696,4698,4706,4775,11,4240,4316,4317,4241,0,4696,4775,4776,4697,11,4317,4260,4238,4241,0,4776,4716,4694,4697,11,4315,4314,4318,4319,0,4774,4773,4777,4778,11,4319,4318,4313,4320,0,4778,4777,4772,4779,11,4312,4321,4320,4313,0,4771,4780,4779,4772,11,4315,4316,4250,4187,0,4774,4775,4706,4643,11,4319,4317,4316,4315,0,4778,4776,4775,4774,11,4320,4260,4317,4319,0,4779,4716,4776,4778,11,4320,4321,4322,4260,0,4779,4780,4781,4716,11,4323,4151,4150,4324,0,4782,4607,4606,4783,11,4223,4325,4251,4221,0,4679,4784,4707,4677,10,4165,4229,4167,0,4621,4685,4623,11,4326,4148,4147,4171,0,4785,4604,4603,4627,11,4309,4308,4327,4233,0,4768,4767,4786,4689,10,4309,4233,4213,0,4768,4689,4669,11,4213,4216,4310,4309,0,4669,4672,4769,4768,11,4172,4171,4147,4146,0,4628,4627,4603,4602,11,4234,4172,4146,4193,0,4690,4628,4602,4649,11,4234,4193,4196,4261,0,4690,4649,4652,4717,11,4328,4312,4246,4220,0,4787,4771,4702,4676,11,4220,4219,4329,4328,0,4676,4675,4788,4787,11,4155,4154,4330,4331,0,4611,4610,4789,4790,11,4330,4154,4197,4332,0,4789,4610,4653,4791,11,4332,4197,4200,4333,0,4791,4653,4656,4792,11,4328,4329,4321,4312,0,4787,4788,4780,4771,11,4334,4331,4148,4335,0,4793,4790,4604,4794,11,4331,4330,4149,4148,0,4790,4789,4605,4604,11,4149,4330,4332,4194,0,4605,4789,4791,4650,11,4194,4332,4333,4195,0,4650,4791,4792,4651,11,4336,4337,4199,4202,0,4795,4796,4797,4798,11,4336,4202,4204,4338,0,4795,4798,4799,4800,11,4338,4204,4205,4339,0,4800,4799,4801,4802,11,4340,4208,4210,4341,0,4803,4804,4805,4806,11,4339,4205,4208,4340,0,4802,4801,4804,4803,11,4337,4342,4200,4199,0,4796,4807,4808,4797,11,4342,4343,4333,4200,0,4807,4809,4810,4808,11,4336,4344,4345,4337,0,4795,4811,4812,4796,11,4338,4346,4344,4336,0,4800,4813,4811,4795,11,4341,4347,4346,4340,0,4806,4814,4813,4803,11,4347,4341,4348,4349,0,4814,4806,4815,4816,11,4339,4340,4346,4338,0,4802,4803,4813,4800,10,4345,4342,4337,0,4812,4807,4796,10,4345,4343,4342,0,4812,4809,4807,11,4350,4349,4348,4351,0,4817,4816,4815,4818,10,4216,4215,4351,0,4819,4732,4818,10,4212,4341,4210,0,4820,4806,4805,11,4298,4296,4227,4299,0,4757,4755,4683,4758,11,4299,4227,4226,4291,0,4758,4683,4682,4750,11,4300,4299,4291,4290,0,4759,4758,4750,4749,11,4280,4300,4290,4278,0,4739,4759,4749,4737,11,4284,4283,4292,4295,0,4743,4742,4751,4754,11,4284,4295,4303,4302,0,4743,4754,4762,4761,11,4302,4303,4275,4274,0,4761,4762,4734,4733,11,4304,4279,4275,4303,0,4763,4738,4734,4762,11,4279,4304,4305,4281,0,4738,4763,4764,4740,11,4311,4352,4353,4354,0,4770,4821,4822,4823,11,4354,4243,4239,4311,0,4823,4699,4695,4770,11,4354,4353,4287,4243,0,4823,4822,4746,4699,11,4282,4287,4353,4352,0,4741,4746,4822,4821,11,4283,4267,4266,4292,0,4742,4723,4722,4751,11,4355,4271,4164,4180,0,4824,4727,4620,4636,11,4271,4355,4356,4225,0,4727,4824,4825,4681,11,4225,4356,4270,4226,0,4681,4825,4726,4682,11,4355,4180,4270,4356,0,4824,4636,4726,4825,11,4325,4223,4158,4156,0,4784,4679,4614,4612,11,4156,4151,4323,4325,0,4612,4607,4782,4784,11,4357,4325,4323,4324,0,4826,4784,4782,4783,11,4326,4321,4329,4335,0,4785,4780,4788,4794,11,4329,4219,4334,4335,0,4788,4675,4793,4794,11,4358,4359,4218,4217,0,4827,4828,4674,4673,11,4218,4331,4334,4219,0,4674,4790,4793,4675,11,4324,4150,4155,4359,0,4783,4606,4611,4828,11,4324,4359,4358,4357,0,4783,4828,4827,4826,11,4358,4217,4252,4357,0,4827,4673,4708,4826,11,4283,4282,4352,4311,0,4742,4741,4821,4770,11,4163,4232,4233,4327,0,4619,4688,4689,4786,11,4231,4230,4181,4163,0,4687,4686,4637,4619,11,4163,4327,4308,4231,0,4619,4786,4767,4687,10,4326,4237,4322,0,4785,4693,4781,10,4171,4237,4326,0,4627,4693,4785,10,4321,4326,4322,0,4780,4785,4781,10,4326,4335,4148,0,4785,4794,4604,10,4237,4260,4322,0,4693,4716,4781,10,4283,4311,4267,0,4742,4770,4723,10,4181,4230,4182,0,4637,4686,4638,11,4357,4252,4251,4325,0,4826,4708,4707,4784,11,4218,4359,4155,4331,0,4674,4828,4611,4790,11,4351,4215,4273,4350,0,4818,4732,4731,4817,11,4310,4216,4351,4348,0,4829,4819,4818,4815,11,4212,4310,4348,4341,0,4820,4829,4815,4806,11,4259,4258,4189,4192,0,4715,4714,4645,4648,11,4306,4318,4314,4307,0,4765,4777,4773,4766,11,4313,4318,4306,4245,0,4772,4777,4765,4701,10,4217,4253,4252,0,4673,4709,4708,11,4195,4333,4343,4196,0,4651,4792,4830,4831,11,4360,4361,4362,4363,0,4832,4833,4834,4835,11,1915,4364,4365,1899,0,4836,4837,4838,4839,11,4366,4367,4368,4369,0,4840,4841,4842,4843,11,4370,4371,4369,4368,0,4844,4845,4843,4842,11,4371,4372,4373,4369,0,4845,4846,4847,4843,11,4374,4373,4372,4375,0,4848,4847,4846,4849,11,4376,4377,4378,4379,0,4850,4851,4852,4853,11,4380,4381,4382,4383,0,4854,4855,4856,4857,11,4378,4384,4385,4381,0,4852,4858,4859,4855,11,4386,4387,4388,4389,0,4860,4861,4862,4863,11,4388,4379,4380,4390,0,4862,4853,4854,4864,11,4528,1914,1912,4402,0,4865,4866,4867,4868,11,4393,4394,4395,4396,0,4869,4870,4871,4872,11,4397,4398,4399,4400,0,4873,4874,4875,4876,11,4401,4402,4400,4399,0,4877,4868,4876,4875,11,4403,4401,4399,4404,0,4878,4877,4875,4879,11,4405,4406,4407,4398,0,4880,4881,4882,4874,11,4408,4398,4397,4409,0,4883,4874,4873,4884,11,4394,4410,4411,4395,0,4870,4885,4886,4871,11,4412,4413,4414,4415,0,4887,4888,4889,4890,10,4416,4415,4417,0,4891,4890,4892,11,4386,4418,4416,4387,0,4860,4893,4891,4861,11,4419,4420,4421,4422,0,4894,4895,4896,4897,11,4423,4424,4425,4426,0,4898,4899,4900,4901,11,4427,4428,4429,4430,0,4902,4903,4904,4905,11,4431,4432,4420,4419,0,4906,4907,4895,4894,11,4433,4434,4435,4436,0,4908,4909,4910,4911,11,4437,4438,4439,4440,0,4912,4913,4914,4915,11,4438,4441,4442,4439,0,4913,4916,4917,4914,11,4443,4444,4445,4446,0,4918,4919,4920,4921,11,4447,4448,4449,4450,0,4922,4923,4924,4925,11,3820,4448,4447,3821,0,4234,4923,4922,4235,11,4451,4452,4453,4454,0,4926,4927,4928,4929,11,4390,4455,4389,4388,0,4864,4930,4863,4862,11,4455,4390,4456,4457,0,4930,4864,4931,4932,11,4456,4383,3830,3829,0,4931,4857,4244,4243,11,4383,4382,3831,3830,0,4857,4856,4245,4244,11,4458,4449,4448,4459,0,4933,4924,4923,4934,11,4379,4388,4387,4376,0,4853,4862,4861,4850,11,4387,4416,4417,4376,0,4861,4891,4892,4850,11,4460,4461,4462,4463,0,4935,4936,4937,4938,11,4450,4464,4454,4453,0,4925,4939,4929,4928,11,4449,4458,4465,4466,0,4924,4933,4940,4941,11,4465,4458,4467,4468,0,4940,4933,4942,4943,11,4469,4408,4470,4471,0,4944,4883,4945,4946,11,4472,4473,4474,4475,0,4947,4948,4949,4950,11,4476,4477,4478,4479,0,4951,4952,4953,4954,11,4427,4430,4478,4477,0,4902,4905,4953,4952,11,4428,4480,4481,4429,0,4903,4955,4956,4904,11,4434,4476,4479,4435,0,4909,4951,4954,4910,11,4482,4483,4406,4484,0,4957,4958,4881,4959,11,4431,4419,4412,4485,0,4906,4894,4887,4960,11,4419,4422,4413,4412,0,4894,4897,4888,4887,11,4409,4397,4395,4411,0,4884,4873,4871,4886,11,4400,4396,4395,4397,0,4876,4872,4871,4873,11,4402,4392,4396,4400,0,4868,4961,4872,4876,11,4437,4440,4486,4487,0,4912,4915,4962,4963,11,1912,1911,4392,4402,0,4867,4964,4961,4868,11,4488,4489,4482,4484,0,4965,4966,4957,4959,11,4490,4489,4488,4491,0,4967,4966,4965,4968,11,4492,4493,4490,4491,0,4969,4970,4967,4968,11,4494,4495,4496,4497,0,4971,4972,4973,4974,11,4498,4475,4474,4499,0,4975,4950,4949,4976,11,4500,4499,4474,4496,0,4977,4976,4949,4973,11,4466,4464,4450,4449,0,4941,4939,4925,4924,11,4501,4502,4469,4471,0,4978,4979,4944,4946,11,4503,4504,4501,4505,0,4980,4981,4978,4982,11,4506,4507,4508,4509,0,4983,4984,4985,4986,11,4508,4507,4510,4511,0,4985,4984,4987,4988,11,4511,4510,3887,3886,0,4988,4987,4302,4301,11,4512,4513,4472,4514,0,4989,4990,4947,4991,11,4515,4516,4517,4513,0,4992,4993,4994,4990,10,4518,4517,4516,0,4995,4994,4993,11,4519,3897,3896,4494,0,4996,4312,4311,4971,11,4463,4520,4521,4467,0,4938,4997,4998,4942,11,4465,4468,4522,4523,0,4940,4943,4999,5000,11,4468,4524,4525,4522,0,4943,5001,5002,4999,11,4521,4524,4468,4467,0,4998,5001,4943,4942,11,4515,4513,4523,4522,0,4992,4990,5000,4999,11,4526,4527,4516,4515,0,5003,5004,4993,4992,11,4522,4525,4526,4515,0,4999,5002,5003,4992,11,1914,4528,4085,1602,0,4866,4865,4522,4577,11,4404,3908,3907,4403,0,4879,4324,4323,4878,11,4398,4407,4404,4399,0,4874,4882,4879,4875,11,4529,4364,1915,1916,0,5005,4837,4836,5006,11,4530,4531,3910,3913,0,5007,5008,5009,5010,11,4532,4384,4375,4533,0,5011,4858,4849,5012,11,4534,4533,4375,4372,0,5013,5012,4849,4846,11,4535,4536,4371,4370,0,5014,5015,4845,4844,11,4372,4371,4536,4534,0,4846,4845,5015,5013,11,4537,4385,4384,4532,0,5016,4859,4858,5011,11,4538,4539,4536,4535,0,5017,5018,5015,5014,11,4540,4534,4536,4539,0,5019,5013,5015,5018,11,4533,4541,4537,4532,0,5012,5020,5016,5011,11,4534,4540,4541,4533,0,5013,5019,5020,5012,11,4535,4370,4542,4538,0,5014,4844,5021,5017,11,4373,4543,4544,4369,0,4847,5022,5023,4843,11,4545,4546,4547,4548,0,5024,5025,5026,5027,11,4374,4549,4550,4373,0,4848,5028,5029,4847,11,4551,4550,4552,4553,0,5030,5029,5031,5032,11,4554,4552,4550,4549,0,5033,5031,5029,5028,11,4543,4373,4550,4551,0,5022,4847,5029,5030,11,4544,4555,4366,4369,0,5023,5034,4840,4843,11,4556,4557,4365,4558,0,5035,5036,4838,5037,11,4557,1913,1899,4365,0,5036,5038,4839,4838,11,4391,4392,1911,1910,0,4358,4961,4964,4359,10,4561,4562,4563,0,5039,5040,5041,11,4564,4565,4566,4567,0,5042,5043,5044,5045,11,4568,4569,3952,3951,0,5046,5047,4370,4369,11,4539,3955,3954,4540,0,5018,5048,5049,5019,11,3956,3955,4539,4538,0,5050,5048,5018,5017,11,4480,4570,4571,4481,0,4955,5051,5052,4956,11,4436,4572,4573,4442,0,4911,5053,5054,4917,11,4435,4574,4572,4436,0,4910,5055,5053,4911,11,4435,4479,4575,4574,0,4910,4954,5056,5055,11,4362,4361,4426,4425,0,4834,4833,4901,4900,11,4479,4478,4576,4575,0,4954,4953,5057,5056,10,4576,4577,4575,0,5057,5058,5056,11,4418,4578,4579,4580,0,4893,5059,5060,5061,10,4580,4579,4485,0,5061,5060,4960,11,4485,4412,4415,4580,0,4960,4887,4890,5061,11,4563,4363,4362,4561,0,5041,4835,4834,5039,11,4407,4406,4483,3968,0,4882,4881,4958,4386,10,3968,4483,4113,0,4386,4958,4563,11,4581,4582,4509,4508,0,5062,5063,4986,4985,11,4508,4511,4583,4581,0,4985,4988,5064,5062,11,4503,4509,4582,4584,0,4980,4986,5063,5065,11,4585,4586,4504,4587,0,5066,5067,4981,5068,11,4588,4547,4410,4394,0,5069,5026,4885,4870,11,4422,4421,4589,4409,0,4897,4896,5070,4884,11,4410,4414,4413,4411,0,4885,4889,4888,4886,11,4411,4413,4422,4409,0,4886,4888,4897,4884,11,4405,4398,4408,4469,0,4880,4874,4883,4944,10,4403,4590,4401,0,4878,5071,4877,11,4381,4385,4568,4382,0,4855,4859,5046,4856,11,4385,4537,4569,4568,0,4859,5016,5047,5046,11,4537,4541,4591,4569,0,5016,5020,5072,5047,11,4381,4380,4379,4378,0,4855,4854,4853,4852,11,4383,4456,4390,4380,0,4857,4931,4864,4854,10,4592,4561,4486,0,5073,5039,4962,11,4425,4593,4561,4362,0,4900,5074,5039,4834,11,4593,4487,4486,4561,0,5074,4963,4962,5039,11,4392,4391,4393,4396,0,4961,4358,4869,4872,11,4594,4393,4391,4559,0,5075,4869,4358,4357,11,4595,4495,3985,3984,0,5076,4972,4404,4403,11,4596,3987,3986,4591,0,5077,5078,5079,5072,11,1913,4557,4560,1910,0,5038,5036,4360,4359,11,4541,4540,4596,4591,0,5020,5019,5077,5072,11,4525,4524,4597,4598,0,5002,5001,5080,5081,11,4599,4597,4524,4521,0,5082,5080,5001,4998,11,4600,4601,4527,4602,0,5083,5084,5004,5085,11,4527,4526,4603,4602,0,5004,5003,5080,5085,11,4525,4598,4603,4526,0,5002,5081,5080,5003,11,4505,4501,4471,4604,0,4982,4978,4946,5086,11,4507,4506,4498,4499,0,4984,4983,4975,4976,11,4510,4507,4499,4500,0,4987,4984,4976,4977,11,4500,3997,3887,4510,0,4977,4415,4302,4987,11,4421,4605,4606,4589,0,4896,5087,5088,5070,11,4439,4607,4608,4440,0,4914,5089,5090,4915,11,4446,4445,4609,4610,0,4921,4920,5091,5092,11,4445,4572,4574,4609,0,4920,5053,5055,5091,11,4575,4577,4609,4574,0,5056,5058,5091,5055,11,4610,4609,4577,4611,0,5092,5091,5058,5093,11,4578,4418,4386,4611,0,5059,4893,4860,5093,11,4424,4423,4612,4613,0,4899,4898,5094,5095,11,4433,4614,4615,4434,0,4908,5096,5097,4909,11,4438,4437,4616,4617,0,4913,4912,5098,5099,11,4438,4617,4618,4441,0,4913,5099,5100,4916,11,4476,4619,4620,4477,0,4951,5101,5102,4952,11,4480,4428,4621,4622,0,4955,4903,5103,5104,11,4434,4615,4619,4476,0,4909,5097,5101,4951,11,4437,4487,4623,4616,0,4912,4963,5105,5098,11,4570,4480,4622,4624,0,5051,4955,5104,5106,11,4424,4613,4625,4593,0,4899,5095,5107,5074,11,4593,4625,4623,4487,0,5074,5107,5105,4963,11,4620,4626,4427,4477,0,5102,5108,4902,4952,11,4626,4621,4428,4427,0,5108,5103,4903,4902,11,4415,4627,4554,4417,0,4890,5109,5033,4892,11,4417,4554,4549,4376,0,4892,5033,5028,4850,11,4473,4472,4513,4517,0,4948,4947,4990,4994,11,4518,4519,4494,4497,0,4995,4996,4971,4974,11,4628,4629,4546,4545,0,5110,5111,5025,5024,11,4630,4585,4631,4632,0,5112,5066,5113,5114,10,4630,4632,4492,0,5112,5114,4969,11,4633,4582,4581,4634,0,5115,5116,5117,5118,11,4581,4583,4635,4634,0,5117,5119,5120,5118,11,4636,4584,4582,4633,0,5121,5122,5116,5115,11,4587,4637,4631,4585,0,5068,5123,5113,5066,11,4638,4639,4033,4032,0,5124,5125,4455,4454,11,4640,4632,4631,4641,0,5126,5127,5128,5129,11,4642,4633,4634,4643,0,5130,5115,5118,5131,10,4635,4643,4634,0,5120,5131,5118,11,4637,4636,4633,4644,0,5132,5121,5115,5133,10,4644,4633,4642,0,5133,5115,5130,11,4631,4637,4644,4641,0,5128,5132,5133,5129,11,4645,4640,4641,4646,0,5134,5126,5129,5135,10,4646,4641,4647,0,5135,5129,5136,11,4642,4643,4648,4649,0,5130,5131,5137,5138,11,4644,4642,4649,4650,0,5133,5130,5138,5139,11,4647,4641,4644,4650,0,5136,5129,5133,5139,11,4645,4646,4048,4047,0,5134,5135,5140,5141,10,4645,4047,4651,0,5134,5141,5142,11,4646,4647,4652,4653,0,5135,5136,5143,5144,11,4649,4648,4654,4655,0,5138,5137,5145,5146,11,4650,4649,4655,4656,0,5139,5138,5146,5147,11,4647,4650,4656,4652,0,5136,5139,5147,5143,11,4653,4652,4657,4658,0,5148,5149,5150,5151,10,4654,4659,4655,0,5152,5153,5154,11,4656,4655,4659,4660,0,5155,5154,5153,5156,11,4652,4656,4660,4657,0,5149,5155,5156,5150,11,4058,4653,4658,4661,0,5157,5148,5151,5158,11,4658,4657,4662,4663,0,5151,5150,5159,5160,11,4660,4659,4664,4665,0,5156,5153,5161,5162,11,4657,4660,4665,4662,0,5150,5156,5162,5159,11,4663,4064,4661,4658,0,5160,5163,5158,5151,11,4662,4665,4664,4663,0,5159,5162,5161,5160,11,4451,4512,4514,4452,0,4926,4989,4991,4927,11,4420,4360,4605,4421,0,4895,4832,5087,4896,11,4360,4420,4432,4361,0,4832,4895,4907,4833,11,4586,4585,4630,4666,0,5067,5066,5112,5164,11,4586,4666,4667,4502,0,5067,5164,5165,4979,11,4505,4506,4509,4503,0,4982,4983,4986,4980,11,4604,4498,4506,4505,0,5086,4975,4983,4982,11,4587,4504,4503,4584,0,5068,4981,4980,5065,11,4461,4459,4068,4067,0,4936,4934,4498,4497,11,4401,4590,4528,4402,0,4877,5071,4865,4868,11,4262,4628,4668,4263,0,5166,5110,5167,5168,11,4263,4668,4669,4269,0,5168,5167,5169,5170,11,4343,4543,4551,4196,0,5171,5022,5030,5172,11,4345,4670,4543,4343,0,5173,5174,5022,5171,10,4543,4670,4544,0,5022,5174,5023,11,4410,4547,4546,4414,0,4885,5026,5025,4889,11,4548,4594,4559,4671,0,5027,5075,4357,5175,11,4560,4672,4671,4559,0,4360,5176,5175,4357,11,4672,4560,4557,4556,0,5176,4360,5036,5035,11,4548,4547,4588,4594,0,5027,5026,5069,5075,11,4588,4394,4393,4594,0,5069,4870,4869,5075,11,4426,4571,4570,4423,0,4901,5052,5051,4898,11,4423,4570,4624,4612,0,4898,5051,5106,5094,11,4563,4450,4453,4363,0,5041,4925,4928,4835,11,4447,4450,4563,4562,0,4922,4925,5041,5040,11,4562,4074,3821,4447,0,5040,4511,4235,4922,11,4611,4577,4576,4578,0,5093,5058,5057,5059,11,4578,4576,4430,4579,0,5059,5057,4905,5060,11,4579,4430,4429,4485,0,5060,4905,4904,4960,11,4429,4481,4431,4485,0,4904,4956,4906,4960,11,4481,4571,4432,4431,0,4956,5052,4907,4906,11,4571,4426,4361,4432,0,5052,4901,4833,4907,11,4558,4365,4364,4673,0,5037,4838,4837,5177,11,4674,4673,4364,4529,0,5178,5177,4837,5005,11,4674,4529,4077,4078,0,5178,5005,5179,5180,11,4558,4675,4676,4556,0,5037,5181,5182,5035,11,4673,4677,4675,4558,0,5177,5183,5181,5037,11,4678,4677,4673,4674,0,5184,5183,5177,5178,11,4674,4078,4083,4678,0,5178,5180,5185,5184,11,4616,4623,4679,4617,0,5098,5105,5186,5099,11,4679,4623,4625,4613,0,5186,5105,5107,5095,11,4085,4528,4590,4086,0,4522,4865,5071,4523,11,4377,4376,4549,4374,0,4851,4850,5028,4848,11,4384,4377,4374,4375,0,4858,4851,4848,4849,10,4377,4384,4378,0,4851,4858,4852,11,4440,4567,4592,4486,0,4915,5045,5073,4962,11,4592,4567,4566,4680,0,5073,5045,5044,5187,11,4088,4680,4566,4089,0,4525,5187,5044,4526,11,4567,4440,4608,4564,0,5045,4915,5090,5042,10,4457,4456,4681,0,4932,4931,5188,11,4564,4443,4682,4565,0,5042,4918,5189,5043,11,4092,4565,4682,4093,0,4529,5043,5189,4530,11,4491,4666,4630,4492,0,4968,5164,5112,4969,11,4666,4488,4484,4667,0,5164,4965,4959,5165,11,4683,4493,4492,4632,0,5190,4970,4969,5114,11,4645,4683,4632,4640,0,5134,5191,5127,5126,11,4530,4368,4367,4531,0,5007,4842,4841,5008,11,4542,4370,4368,4530,0,5021,4844,4842,5007,11,4611,4386,4389,4610,0,5093,4860,4863,5092,11,4455,4446,4610,4389,0,4930,4921,5092,4863,11,4446,4455,4457,4443,0,4921,4930,4932,4918,11,4682,4443,4457,4681,0,5189,4918,4932,5188,11,4093,4682,4681,4095,0,4530,5189,5188,4533,11,4671,4144,4142,4545,0,5175,5192,5193,5024,11,4672,4273,4144,4671,0,5176,5194,5192,5175,11,4269,4669,4140,4139,0,5170,5169,5195,5196,11,4142,4140,4669,4545,0,5193,5195,5169,5024,11,4668,4628,4545,4669,0,5167,5110,5024,5169,11,4629,4628,4553,4552,0,5111,5110,5032,5031,11,4553,4628,4262,4261,0,5032,5110,5166,5197,11,4553,4261,4196,4551,0,5032,5197,5172,5030,11,4555,4544,4670,4346,0,5034,5023,5174,5198,10,4350,4556,4349,0,5199,5035,5200,11,4675,4366,4555,4676,0,5181,4840,5034,5182,11,4555,4346,4347,4676,0,5034,5198,5201,5182,11,4349,4556,4676,4347,0,5200,5035,5182,5201,11,4677,4367,4366,4675,0,5183,4841,4840,5181,11,4531,4367,4677,4678,0,5008,4841,5183,5184,11,4678,4083,3910,4531,0,5184,5185,5009,5008,11,4683,4645,4651,4639,0,5191,5134,5142,5202,11,4493,4683,4639,4638,0,4970,5190,5125,5124,11,4684,4490,4493,4638,0,5203,4967,4970,5124,11,4453,4452,4685,4363,0,4928,4927,5204,4835,11,4360,4363,4685,4605,0,4832,4835,5204,5087,11,4595,4500,4496,4495,0,5076,4977,4973,4972,11,4595,3984,3997,4500,0,5076,4403,4415,4977,11,3985,4495,4494,3896,0,4404,4972,4971,4311,11,4473,4497,4496,4474,0,4948,4974,4973,4949,11,4463,4686,4687,4520,0,4938,5205,5206,4997,11,4460,4458,4459,4461,0,4935,4933,4934,4936,11,4688,4689,4690,4691,0,5207,5208,5209,5210,11,4689,4518,4516,4690,0,5208,4995,4993,5209,11,4690,4516,4527,4601,0,5209,4993,5004,5084,11,4691,4690,4601,4692,0,5210,5209,5084,5211,11,4689,4688,4519,4518,0,5208,5207,4996,4995,11,4693,4519,4688,4686,0,5212,4996,5207,5205,11,4687,4691,4692,4520,0,5206,5210,5211,4997,10,4520,4692,4694,0,4997,5211,5213,11,4695,4692,4601,4600,0,5214,5211,5084,5083,10,4695,4694,4692,0,5214,5213,5211,11,4520,4694,4599,4521,0,4997,5213,5082,4998,11,4462,4693,4686,4463,0,4937,5212,5205,4938,11,4462,4109,4108,4693,0,4937,4558,4557,5212,11,4467,4458,4460,4463,0,4942,4933,4935,4938,11,4691,4687,4686,4688,0,5210,5206,5205,5207,11,4497,4473,4517,4518,0,4974,4948,4994,4995,11,4074,4562,4680,4088,0,4511,5040,5187,4525,11,4086,4590,4403,3907,0,4523,5071,4878,4323,11,4462,4461,4067,4109,0,4937,4936,4497,4558,11,3829,4095,4681,4456,0,4243,4533,5188,4931,11,4382,4568,3951,3831,0,4856,5046,4369,4245,11,4110,4654,4648,4111,0,5215,5145,5137,5216,11,4654,4110,4112,4659,0,5152,5217,5218,5153,11,4114,4113,4483,4482,0,4564,4563,4958,4957,11,4696,4115,4114,4489,0,5219,4565,4564,4966,10,4489,4114,4482,0,4966,4564,4957,11,4448,3820,4068,4459,0,4923,4234,4498,4934,11,4583,4117,4116,4635,0,5119,5220,5221,5120,11,4635,4116,4118,4643,0,5120,5221,5222,5131,11,4111,4648,4643,4118,0,5216,5137,5131,5222,11,4406,4405,4667,4484,0,4881,4880,5165,4959,11,4637,4587,4584,4636,0,5132,5223,5122,5121,11,4409,4589,4470,4408,0,4884,5070,4945,4883,10,4488,4666,4491,0,4965,5164,4968,11,3954,3987,4596,4540,0,5049,5078,5077,5019,11,3986,3952,4569,4591,0,5079,4370,5047,5072,11,4119,3956,4538,4542,0,5224,5050,5017,5021,11,4530,3913,4119,4542,0,5007,5010,5224,5021,11,4693,4108,3897,4519,0,5212,4557,4312,4996,11,4092,4089,4566,4565,0,4529,4526,5044,5043,11,4529,1916,1604,4077,0,5005,5006,5225,5179,11,4684,4696,4489,4490,0,5203,5219,4966,4967,11,4651,4047,4033,4639,0,5142,5141,5226,5202,11,4058,4048,4646,4653,0,5227,5140,5135,5144,11,4032,4120,4684,4638,0,4454,4572,5203,5124,11,4121,4664,4659,4112,0,5228,5161,5153,5218,11,4064,4663,4664,4121,0,5163,5160,5161,5228,11,3908,4404,4407,3968,0,4324,4879,4882,4386,11,4511,3886,4117,4583,0,4988,4301,4576,5064,11,3942,3940,1598,1596,0,4509,4174,4175,3902,11,4697,4512,4451,4454,0,5229,4989,4926,4929,11,4465,4523,4697,4466,0,4940,5000,5229,4941,11,4512,4697,4523,4513,0,4989,5229,5000,4990,11,4464,4466,4697,4454,0,4939,4941,5229,4929,11,4698,4685,4452,4514,0,5230,5204,4927,4991,11,4472,4475,4698,4514,0,4947,4950,5230,4991,11,4606,4605,4685,4698,0,5088,5087,5204,5230,11,4699,4470,4589,4606,0,5231,4945,5070,5088,11,4471,4475,4498,4604,0,4946,4950,4975,5086,11,4699,4475,4471,4470,0,5231,4950,4946,4945,11,4699,4606,4698,4475,0,5231,5088,5230,4950,11,4444,4573,4572,4445,0,4919,5054,5053,4920,11,4444,4443,4564,4608,0,4919,4918,5042,5090,11,4629,4552,4554,4627,0,5111,5031,5033,5109,11,4627,4414,4546,4629,0,5109,4889,5025,5111,10,4627,4415,4414,0,5109,4890,4889,11,4442,4573,4607,4439,0,4917,5054,5089,4914,11,4608,4607,4573,4444,0,5090,5089,5054,4919,11,4441,4433,4436,4442,0,4916,4908,4911,4917,11,4441,4618,4614,4433,0,4916,5100,5096,4908,10,4671,4545,4548,0,5175,5024,5027,11,4469,4502,4667,4405,0,4944,4979,5165,4880,11,4612,4700,4701,4613,0,5094,5232,5233,5095,11,4615,4614,4702,4703,0,5097,5096,5234,5235,11,4614,4618,4704,4702,0,5096,5100,5236,5234,11,4619,4705,4706,4620,0,5101,5237,5238,5102,11,4622,4621,4707,4708,0,5104,5103,5239,5240,11,4615,4703,4705,4619,0,5097,5235,5237,5101,11,4624,4622,4708,4709,0,5106,5104,5240,5241,11,4620,4706,4710,4626,0,5102,5238,5242,5108,11,4621,4626,4710,4707,0,5103,5108,5242,5239,11,4617,4679,4711,4712,0,5099,5186,5243,5244,11,4624,4709,4700,4612,0,5106,5241,5232,5094,11,4613,4701,4711,4679,0,5095,5233,5243,5186,11,4618,4617,4712,4704,0,5100,5099,5244,5236,11,4501,4504,4586,4502,0,4978,4981,5067,4979,10,4602,4603,4598,0,5085,5080,5081,11,4602,4598,4597,4600,0,5085,5081,5080,5083,11,4695,4600,4597,4599,0,5214,5083,5080,5082,10,4695,4599,4694,0,5214,5082,5213,10,4430,4576,4478,0,4905,5057,4953,10,4424,4593,4425,0,4899,5074,4900,11,4416,4418,4580,4415,0,4891,4893,5061,4890,11,4561,4592,4680,4562,0,5039,5073,5187,5040,11,4350,4273,4672,4556,0,5199,5194,5176,5035,11,4125,4713,4714,4126,0,5245,5246,5247,5248,11,4127,4715,4716,4128,0,5249,5250,5251,5252,11,4129,4128,4716,4717,0,5253,5252,5251,5254,11,4130,4718,4719,4131,0,5255,5256,5257,5258,11,4133,4132,4720,4721,0,5259,5260,5261,5262,11,4131,4719,4715,4127,0,5258,5257,5250,5249,11,4132,4134,4722,4720,0,5260,5263,5264,5261,11,4135,4723,4718,4130,0,5265,5266,5256,5255,11,4135,4133,4721,4723,0,5265,5259,5262,5266,11,4137,4136,4724,4725,0,5267,5268,5269,5270,11,4134,4126,4714,4722,0,5263,5248,5247,5264,11,4137,4725,4713,4125,0,5267,5270,5246,5245,11,4136,4129,4717,4724,0,5268,5253,5254,5269,11,4701,4700,4726,4727,0,5271,5272,5273,5274,11,4703,4702,4728,4729,0,5275,5276,5277,5278,11,4704,4730,4728,4702,0,5279,5280,5277,5276,11,4706,4705,4731,4732,0,5281,5282,5283,5284,11,4707,4733,4734,4708,0,5285,5286,5287,5288,11,4705,4703,4729,4731,0,5282,5275,5278,5283,11,4708,4734,4735,4709,0,5288,5287,5289,5290,11,4710,4706,4732,4736,0,5291,5281,5284,5292,11,4710,4736,4733,4707,0,5291,5292,5286,5285,11,4711,4737,4738,4712,0,5293,5294,5295,5296,11,4709,4735,4726,4700,0,5290,5289,5273,5272,11,4711,4701,4727,4737,0,5293,5271,5274,5294,11,4712,4738,4730,4704,0,5296,5295,5280,5279,11,4721,4719,4718,4723,0,5262,5257,5256,5266,11,4727,4730,4738,4737,0,5274,5280,5295,5294,11,4722,4715,4719,4720,0,5264,5250,5257,5261,11,4714,4713,4717,4716,0,5247,5246,5254,5251,11,4714,4716,4715,4722,0,5247,5251,5250,5264,11,4713,4725,4724,4717,0,5246,5270,5269,5254,10,4720,4719,4721,0,5261,5257,5262,11,4726,4728,4730,4727,0,5273,5277,5280,5274,11,4726,4735,4729,4728,0,5273,5289,5278,5277,11,4735,4734,4731,4729,0,5289,5287,5283,5278,10,4731,4734,4733,0,5283,5287,5286,11,4733,4736,4732,4731,0,5286,5292,5284,5283,11,4120,4115,4696,4684,0,4572,4565,5219,5203,10,3968,4113,3858,0,4386,4563,4272,11,3941,3942,1596,3761,0,4401,4509,3902,3901,10,4739,4740,4741,0,5297,5298,5299,11,4742,4739,4741,4743,0,5300,5297,5299,5301,11,4743,4741,4744,4745,0,5301,5299,5302,5303,10,4741,4740,4744,0,5299,5298,5302,10,4744,4740,4746,0,5302,5298,5304,11,4745,4744,4746,4747,0,5303,5302,5304,5305,11,4747,4746,4748,4749,0,5305,5304,5306,5307,10,4746,4740,4748,0,5304,5298,5306,10,4748,4740,4750,0,5306,5298,5308,11,4749,4748,4750,4751,0,5307,5306,5308,5309,11,4751,4750,4752,4753,0,5309,5308,5310,5311,10,4750,4740,4752,0,5308,5298,5310,10,4752,4740,4754,0,5310,5298,5312,11,4753,4752,4754,4755,0,5311,5310,5312,5313,11,4755,4754,4756,4757,0,5313,5312,5314,5315,10,4754,4740,4756,0,5312,5298,5314,10,4756,4740,4758,0,5314,5298,5316,11,4757,4756,4758,4759,0,5315,5314,5316,5317,11,4759,4758,4760,4761,0,5317,5316,5318,5319,10,4758,4740,4760,0,5316,5298,5318,10,4760,4740,4762,0,5318,5298,5320,11,4761,4760,4762,4763,0,5319,5318,5320,5321,11,4763,4762,4764,4765,0,5321,5320,5322,5323,10,4762,4740,4764,0,5320,5298,5322,10,4764,4740,4766,0,5322,5298,5324,11,4765,4764,4766,4767,0,5323,5322,5324,5325,11,4767,4766,4768,4769,0,5325,5324,5326,5327,10,4766,4740,4768,0,5324,5298,5326,10,4768,4740,4770,0,5326,5298,5328,11,4769,4768,4770,4771,0,5327,5326,5328,5329,11,4739,4742,4771,4770,0,5297,5300,5329,5328,10,4740,4739,4770,0,5298,5297,5328,10,4772,4773,4774,0,5297,5298,5299,11,4775,4772,4774,4776,0,5300,5297,5299,5301,11,4776,4774,4777,4778,0,5301,5299,5302,5303,10,4774,4773,4777,0,5299,5298,5302,10,4777,4773,4779,0,5302,5298,5304,11,4778,4777,4779,4780,0,5303,5302,5304,5305,11,4780,4779,4781,4782,0,5305,5304,5306,5307,10,4779,4773,4781,0,5304,5298,5306,10,4781,4773,4783,0,5306,5298,5308,11,4782,4781,4783,4784,0,5307,5306,5308,5309,11,4784,4783,4785,4786,0,5309,5308,5310,5311,10,4783,4773,4785,0,5308,5298,5310,10,4785,4773,4787,0,5310,5298,5312,11,4786,4785,4787,4788,0,5311,5310,5312,5313,11,4788,4787,4789,4790,0,5313,5312,5314,5315,10,4787,4773,4789,0,5312,5298,5314,10,4789,4773,4791,0,5314,5298,5316,11,4790,4789,4791,4792,0,5315,5314,5316,5317,11,4792,4791,4793,4794,0,5317,5316,5318,5319,10,4791,4773,4793,0,5316,5298,5318,10,4793,4773,4795,0,5318,5298,5320,11,4794,4793,4795,4796,0,5319,5318,5320,5321,11,4796,4795,4797,4798,0,5321,5320,5322,5323,10,4795,4773,4797,0,5320,5298,5322,10,4797,4773,4799,0,5322,5298,5324,11,4798,4797,4799,4800,0,5323,5322,5324,5325,11,4800,4799,4801,4802,0,5325,5324,5326,5327,10,4799,4773,4801,0,5324,5298,5326,10,4801,4773,4803,0,5326,5298,5328,11,4802,4801,4803,4804,0,5327,5326,5328,5329,11,4804,4803,4772,4775,0,5329,5328,5297,5300,10,4803,4773,4772,0,5328,5298,5297],\n    \"skinWeights\": [0.932569,0.057957,0,0,0.979951,0,0,0,0.933563,0.063185,0,0,0.675064,0.298031,0,0,0.907368,0.082847,0,0,0.90074,0.08011,0,0,0.634963,0.294778,0.05579,0,0.927936,0.068607,0,0,0.934086,0.063749,0,0,0.988924,0,0,0,0.989408,0,0,0,0.836743,0.15401,0,0,0.919713,0.07473,0,0,0.983791,0,0,0,0.998413,0,0,0,0.99759,0,0,0,0.966657,0.006951,0,0,0.998091,0,0,0,0.998387,0,0,0,0.997517,0,0,0,0.929345,0.050736,0,0,0.800631,0.141279,0.012128,0,0.776178,0.149373,0.036946,0,0.984546,0,0,0,0.997321,0,0,0,0.997689,0,0,0,0.982086,0,0,0,0.997731,0,0,0,0.988671,0,0,0,0.997708,0,0,0,0.986337,0,0,0,0.997653,0,0,0,0.982868,0,0,0,0.996818,0,0,0,0.996276,0,0,0,0.981176,0,0,0,0.987017,0,0,0,0.996091,0,0,0,0.983687,0,0,0,0.996155,0,0,0,0.989128,0,0,0,0.995898,0,0,0,0.990115,0,0,0,0.99585,0,0,0,0.99093,0,0,0,0.996465,0,0,0,0.987319,0,0,0,0.986324,0,0,0,0.997608,0,0,0,0.913991,0.085985,0,0,0.989824,0,0,0,0.987533,0,0,0,0.820972,0.179017,0,0,0.881201,0.118791,0,0,0.978674,0,0,0,0.961009,0.027888,0,0,0.770165,0.229823,0,0,0.979665,0,0,0,0.703892,0.296101,0,0,0.977315,0,0,0,0.769136,0.230858,0,0,0.973517,0.002739,0,0,0.979887,0,0,0,0.901639,0.098327,0,0,0.842828,0.15715,0,0,0.956264,0.037344,0,0,0.646972,0.353015,0,0,0.959246,0.031343,0,0,0.649468,0.350517,0,0,0.968397,0.013004,0,0,0.761191,0.238792,0,0,0.987575,0,0,0,0.989137,0,0,0,0.997507,0,0,0,0.997483,0,0,0,0.987683,0,0,0,0.996935,0,0,0,0.985541,0,0,0,0.997039,0,0,0,0.983244,0,0,0,0.995981,0,0,0,0.981334,0,0,0,0.996379,0,0,0,0.971417,0.007099,0,0,0.994461,0,0,0,0.939977,0.05999,0,0,0.995288,0,0,0,0.995146,0,0,0,0.956305,0.037264,0,0,0.953786,0.042332,0,0,0.996181,0,0,0,0.97244,0.004911,0,0,0.996195,0,0,0,0.973698,0.00241,0,0,0.99633,0,0,0,0.983173,0,0,0,0.606478,0.393516,0,0,0.926671,0.073317,0,0,0.874732,0.125258,0,0,0.625796,0.374198,0,0,0.770755,0.229236,0,0,0.728189,0.271802,0,0,0.543756,0.456238,0,0,0.843082,0.156903,0,0,0.879021,0.120955,0,0,0.902098,0.097882,0,0,0.664209,0.335781,0,0,0.650498,0.349489,0,0,0.753186,0.246798,0,0,0.857986,0.14199,0,0,0.745108,0.254877,0,0,0.673813,0.326171,0,0,0.531161,0.468827,0,0,0.86579,0.134184,0,0,0.613049,0.386941,0,0,0.907901,0.092072,0,0,0.557843,0.442149,0,0,0.926396,0.07358,0,0,0.90713,0.092856,0,0,0.732981,0.267013,0,0,0.995841,0,0,0,0.994178,0,0,0,0.992168,0,0,0,0.988699,0,0,0,0.991904,0,0,0,0.994487,0,0,0,0.997741,0,0,0,0.98898,0,0,0,0.919916,0.08006,0,0,0.937914,0.062044,0,0,0.534866,0.462283,0,0,0.731106,0.266177,0,0,0.824262,0.168938,0,0,0.906252,0.055395,0,0,0.78333,0.086057,0,0,0.667949,0.148677,0,0,0.616129,0.243735,0,0,0.507828,0.393175,0,0,0.651749,0.316277,0,0,0.716264,0.273167,0,0,0.730224,0.263813,0,0,0.874638,0.09868,0,0,0.919999,0.056987,0,0,0.891594,0.073074,0,0,0.917442,0.062758,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.810686,0,0,0,1,0,0,0,0.862491,0,0,0,0.912347,0,0,0,1,0,0,0,1,0,0,0,0.920547,0,0,0,0.988152,0,0,0,0.972754,0,0,0,0.956372,0,0,0,0.977723,0,0,0,0.936021,0,0,0,1,0,0,0,1,0,0,0,0.945521,0,0,0,1,0,0,0,1,0,0,0,0.951749,0,0,0,0.950155,0,0,0,0.981936,0,0,0,0.951688,0,0,0,0.967783,0,0,0,0.989907,0,0,0,0.976003,0,0,0,0.964981,0,0,0,0.929181,0.065028,0,0,0.966391,0,0,0,0.834111,0,0,0,0.943169,0,0,0,0.729662,0.197251,0.072724,0,0.932636,0,0,0,0.961829,0,0,0,0.690084,0.081646,0,0,0.285239,0.179766,0,0,0.343816,0.069214,0,0,0.848869,0.109535,0,0,0.782799,0.116799,0,0,0.88803,0.094431,0,0,0.902313,0.086761,0,0,0.876455,0.09561,0,0,0.901267,0.092404,0,0,0.997413,0,0,0,0.997862,0,0,0,0.998434,0,0,0,0.998636,0,0,0,0.996573,0,0,0,0.996562,0,0,0,0.915853,0,0,0,0.940837,0,0,0,0.965103,0.004703,0,0,0.971094,0,0,0,0.985301,0,0,0,0.983158,0,0,0,0.972896,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.234483,0.003293,0,0,0.914156,0,0,0,0.796915,0,0,0,0.796915,0,0,0,0.913166,0.027831,0,0,0.960832,0,0,0,0.892803,0,0,0,0.987126,0,0,0,0.986718,0,0,0,0.973985,0,0,0,0.860537,0,0,0,0.289711,0,0,0,0.900096,0.081582,0,0,0.986595,0,0,0,0.990318,0,0,0,0.983159,0,0,0,0.9117,0,0,0,0.954781,0,0,0,0.907818,0,0,0,0.953888,0,0,0,0.934269,0,0,0,0.79701,0,0,0,0.351677,0,0,0,0.391994,0,0,0,1,0,0,0,0.895934,0,0,0,0.666529,0,0,0,0.572959,0,0,0,0.516395,0,0,0,0.796915,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.973902,0,0,0,0.956055,0,0,0,0.848638,0,0,0,0.764493,0,0,0,0.861778,0,0,0,0.95203,0.030398,0,0,0.83807,0,0,0,0.963696,0,0,0,0.908046,0.057977,0,0,0.824907,0.141185,0.01537,0,0.609154,0.389963,0,0,0.617041,0.382143,0,0,0.813766,0.184489,0,0,0.745559,0.252326,0,0,0.924783,0.070817,0,0,0.926473,0.068058,0,0,0.952243,0.026026,0,0,0.954732,0.024494,0,0,0.886277,0.062529,0,0,0.390991,0,0,0,0.368768,0,0,0,0.643091,0,0,0,0.416708,0,0,0,0.949535,0,0,0,0.968895,0,0,0,0.961861,0,0,0,0.972609,0,0,0,0.937258,0.059373,0,0,0.91115,0.086435,0,0,0.990014,0,0,0,0.987768,0,0,0,0.991811,0,0,0,0.943887,0.025773,0,0,0.899255,0.093795,0,0,0.857105,0.137822,0,0,0.539797,0,0,0,0.980324,0,0,0,0.600005,0.399368,0,0,0.78719,0.211566,0,0,0.793526,0.203815,0,0,0.741989,0.255815,0,0,0.972692,0.004451,0,0,0.98313,0,0,0,0.926436,0.073348,0,0,0.893687,0.105985,0,0,0.971206,0.007412,0,0,0.842189,0.157301,0,0,0.978553,0,0,0,0.841539,0.158081,0,0,0.970222,0.009448,0,0,0.823703,0.175971,0,0,0.913719,0.086149,0,0,0.979366,0,0,0,0.950011,0.04983,0,0,0.988127,0,0,0,0.882572,0.108451,0,0,0.854979,0.122313,0,0,0.883809,0.113614,0,0,0.983474,0,0,0,0.832933,0.090199,0,0,0.719544,0.258825,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.63755,0,0,0,0.687465,0,0,0,1,0,0,0,0.939132,0,0,0,0.932834,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.635315,0,0,0,1,0,0,0,0.736948,0,0,0,0.769935,0,0,0,0.663777,0,0,0,0.691489,0,0,0,0.863419,0,0,0,0.968013,0,0,0,0.951668,0,0,0,0.645949,0,0,0,0.773047,0,0,0,0.5,0,0,0,0.485196,0,0,0,0.723043,0,0,0,0.91866,0.072194,0,0,0.930887,0.056923,0,0,0.364598,0,0,0,0.802889,0.180225,0,0,0.792632,0.195716,0,0,0.882065,0.110596,0,0,0.953203,0.035463,0,0,0.869782,0.126241,0,0,0.906917,0.088062,0,0,0.859713,0.138455,0,0,0.926286,0.072048,0,0,0.958573,0.024485,0,0,0.903436,0.091659,0,0,0.863499,0.129271,0,0,0.880886,0.109667,0,0,0.84767,0.149079,0,0,0.82349,0.174704,0,0,0.842439,0.155844,0,0,0.821249,0.177767,0,0,0.825266,0.174435,0,0,0.688696,0.310899,0,0,0.661001,0.337992,0,0,0.946646,0.006907,0,0,0.962917,0,0,0,0.959574,0.013824,0,0,0.971247,0,0,0,0.983994,0,0,0,0.995286,0,0,0,0.947859,0.052044,0,0,0.998069,0,0,0,0.957516,0.026147,0,0,0.861833,0.136633,0,0,0.750669,0.24671,0,0,0.922808,0.070447,0,0,0.965197,0,0,0,0.908148,0.087002,0,0,0.910232,0.087023,0,0,0.932082,0.063067,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.921564,0.075606,0,0,0.978834,0,0,0,0.931807,0.060592,0,0,0.907969,0.082525,0,0,0.900813,0.080542,0,0,0.966748,0.00702,0,0,0.927539,0.069092,0,0,0.989437,0,0,0,0.988817,0,0,0,0.934533,0.063412,0,0,0.924281,0.070531,0,0,0.983845,0,0,0,0.997597,0,0,0,0.998411,0,0,0,0.998067,0,0,0,0.998378,0,0,0,0.997452,0,0,0,0.93252,0.049404,0,0,0.777012,0.153971,0.035283,0,0.801357,0.145464,0.010891,0,0.984216,0,0,0,0.981757,0,0,0,0.997657,0,0,0,0.997283,0,0,0,0.988469,0,0,0,0.99771,0,0,0,0.986259,0,0,0,0.997703,0,0,0,0.982938,0,0,0,0.997667,0,0,0,0.981451,0,0,0,0.996322,0,0,0,0.996862,0,0,0,0.987299,0,0,0,0.983977,0,0,0,0.996135,0,0,0,0.989468,0,0,0,0.996192,0,0,0,0.990346,0,0,0,0.99591,0,0,0,0.990914,0,0,0,0.995836,0,0,0,0.987128,0,0,0,0.996436,0,0,0,0.986514,0,0,0,0.997633,0,0,0,0.914015,0.085961,0,0,0.820839,0.17915,0,0,0.987521,0,0,0,0.989837,0,0,0,0.880966,0.119026,0,0,0.770108,0.229881,0,0,0.960939,0.028028,0,0,0.978544,0,0,0,0.703683,0.29631,0,0,0.979603,0,0,0,0.977211,0,0,0,0.768872,0.231123,0,0,0.901847,0.09812,0,0,0.979987,0,0,0,0.973621,0.002536,0,0,0.843063,0.156916,0,0,0.647022,0.352966,0,0,0.956254,0.037363,0,0,0.64959,0.350396,0,0,0.959288,0.031261,0,0,0.761425,0.23856,0,0,0.968486,0.012828,0,0,0.987649,0,0,0,0.989138,0,0,0,0.987669,0,0,0,0.99748,0,0,0,0.997509,0,0,0,0.985509,0,0,0,0.996927,0,0,0,0.983203,0,0,0,0.997029,0,0,0,0.981292,0,0,0,0.995967,0,0,0,0.97138,0.007172,0,0,0.996364,0,0,0,0.994443,0,0,0,0.93998,0.059985,0,0,0.995255,0,0,0,0.953821,0.042257,0,0,0.956358,0.037154,0,0,0.995127,0,0,0,0.97249,0.004806,0,0,0.99619,0,0,0,0.973744,0.002318,0,0,0.996205,0,0,0,0.983194,0,0,0,0.996337,0,0,0,0.606242,0.393751,0,0,0.625611,0.374382,0,0,0.874544,0.125447,0,0,0.926556,0.073432,0,0,0.77058,0.229412,0,0,0.728073,0.271918,0,0,0.843108,0.156877,0,0,0.543787,0.456207,0,0,0.902168,0.097812,0,0,0.879173,0.120804,0,0,0.753386,0.2466,0,0,0.65063,0.349355,0,0,0.664334,0.335655,0,0,0.858198,0.141778,0,0,0.673995,0.32599,0,0,0.745297,0.254686,0,0,0.531241,0.468747,0,0,0.865938,0.134035,0,0,0.613201,0.386787,0,0,0.907989,0.091984,0,0,0.558032,0.441958,0,0,0.926416,0.073561,0,0,0.732805,0.267189,0,0,0.907078,0.092908,0,0,0.995858,0,0,0,0.994209,0,0,0,0.992237,0,0,0,0.988906,0,0,0,0.991885,0,0,0,0.99381,0,0,0,0.997632,0,0,0,0.989016,0,0,0,0.919992,0.079985,0,0,0.938067,0.061892,0,0,0.541006,0.45593,0,0,0.733369,0.263787,0,0,0.823778,0.16883,0,0,0.900989,0.056818,0,0,0.772569,0.086872,0,0,0.657578,0.148418,0,0,0.609027,0.24288,0,0,0.500766,0.394838,0,0,0.64861,0.318213,0,0,0.723026,0.266375,0,0,0.733651,0.260318,0,0,0.890252,0.088766,0,0,0.892503,0.074288,0,0,0.92029,0.057705,0,0,0.917573,0.06329,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.986126,0,0,0,0.980975,0,0,0,1,0,0,0,0.975808,0,0,0,0.989255,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.938007,0,0,0,0.949316,0,0,0,0.856719,0,0,0,0.804076,0,0,0,0.977666,0,0,0,0.85439,0,0,0,0.99176,0,0,0,0.826503,0,0,0,0.937604,0,0,0,0.981507,0.773512,0,0,0.912818,0,0,0,0.987616,0.76166,0,0,0.979313,0.761022,0,0,0.884995,0,0,0,0.918367,0,0,0,0.788799,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.994021,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.966896,0,0,0,0.992848,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.991627,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.951022,0,0,0,1,0,0,0,0.945859,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.783853,0,0,0,0.834093,0,0,0,1,0,0,0,0.855023,0,0,0,0.859858,0,0,0,1,0,0,0,1,0,0,0,0.979211,0,0,0,0.965797,0,0,0,0.895538,0,0,0,0.900745,0,0,0,0.882228,0,0,0,0.889311,0,0,0,1,0,0,0,1,0,0,0,0.884104,0,0,0,1,0.768814,0,0,1,0.80972,0,0,0.890721,0,0,0,0.955234,0,0,0,0.977365,0,0,0,0.876002,0,0,0,0.843176,0,0,0,0.906168,0,0,0,0.949267,0,0,0,0.927806,0.063577,0,0,0.964829,0,0,0,0.821063,0,0,0,0.938199,0,0,0,0.185498,0.068449,0,0,0.958302,0.013691,0,0,0.969628,0,0,0,0.691407,0.082109,0,0,0.351974,0.069748,0,0,0.278834,0.173208,0,0,0.850192,0.108108,0,0,0.783701,0.11668,0,0,0.889501,0.092011,0,0,0.877855,0.093628,0,0,0.903244,0.084193,0,0,0.902584,0.089837,0,0,0.9958,0,0,0,0.996268,0,0,0,0.995685,0,0,0,0.996062,0,0,0,0.99063,0,0,0,0.99044,0,0,0,0.936953,0,0,0,0.914074,0,0,0,0.966402,0,0,0,0.959062,0.002241,0,0,0.982889,0,0,0,0.968548,0,0,0,0.980478,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.961655,0.01804,0,0,0.184785,0,0,0,0.161686,0,0,0,0.909724,0.01815,0,0,0.262366,0,0,0,0.975263,0,0,0,0.925227,0.068636,0,0,0.988301,0,0,0,0.992197,0,0,0,0.962864,0.004753,0,0,0.878227,0.098844,0,0,0.658682,0.29933,0,0,0.820545,0.116211,0,0,0.983968,0,0,0,0.945084,0,0,0,0.98025,0,0,0,0.90218,0,0,0,0.947392,0,0,0,0.882928,0,0,0,0.71557,0,0,0,0.894468,0,0,0,0.936154,0,0,0,0.379717,0,0,0,0.31501,0,0,0,0.85833,0,0,0,1,0,0,0,0.615533,0,0,0,0.203544,0,0,0,0.451601,0,0,0,0.508982,0,0,0,1,0,0,0,1,0,0,0,1,0.41657,0,0,0.885373,0,0,0,0.948721,0,0,0,0.819705,0,0,0,0.689228,0,0,0,0.849348,0,0,0,0.947039,0.027374,0,0,0.835989,0,0,0,0.937012,0.002934,0,0,0.83718,0.025977,0,0,0.80356,0.158285,0.021396,0,0.803666,0.196073,0,0,0.935609,0.063788,0,0,0.929989,0.069225,0,0,0.812835,0.186768,0,0,0.940303,0.045349,0,0,0.912529,0.080487,0,0,0.907087,0.085645,0,0,0.938554,0.04775,0,0,0.781583,0.043938,0,0,0.379216,0,0,0,0.329453,0,0,0,0.538022,0.425139,0,0,0.641132,0,0,0,0.94177,0,0,0,0.947991,0,0,0,0.950489,0,0,0,0.952028,0,0,0,0.93784,0.05553,0,0,0.919268,0.075789,0,0,0.972338,0,0,0,0.975443,0,0,0,0.988203,0,0,0,0.981589,0,0,0,0.949256,0.047911,0,0,0.949169,0.045658,0,0,0.510501,0,0,0,0.968374,0,0,0,0.827884,0.171533,0,0,0.91347,0.085209,0,0,0.88448,0.11477,0,0,0.850231,0.148458,0,0,0.889147,0,0,0,0.979627,0,0,0,0.968811,0,0,0,0.885469,0,0,0,0.965199,0,0,0,0.842973,0,0,0,0.931102,0,0,0,0.824239,0,0,0,0.943498,0,0,0,0.786439,0,0,0,0.956509,0,0,0,0.850674,0,0,0,0.880312,0,0,0,0.971706,0,0,0,0.920552,0,0,0,0.819624,0,0,0,0.916619,0,0,0,0.992046,0,0,0,0.717047,0.059785,0,0,0.30926,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.574472,0,0,0,0.48728,0,0,0,1,0.691553,0,0,0.795445,0,0,0,0.800363,0,0,0,1,0.755726,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0.710411,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.551864,0,0,0,1,0.507196,0,0,0.686851,0,0,0,0.739491,0,0,0,0.631466,0,0,0,0.622313,0,0,0,0.77397,0,0,0,0.889735,0,0,0,0.859466,0,0,0,0.630243,0,0,0,0.757043,0,0,0,0.510194,0,0,0,0.42291,0,0,0,0.721032,0,0,0,0.948127,0.039021,0,0,0.93629,0.058101,0,0,0.309322,0,0,0,0.522783,0,0,0,0.678377,0,0,0,0.840378,0,0,0,0.937663,0,0,0,0.912017,0.080045,0,0,0.851191,0.141333,0,0,0.810728,0.185001,0,0,0.893902,0.103905,0,0,0.975446,0,0,0,0.956476,0.034856,0,0,0.93391,0.062315,0,0,0.938193,0.054576,0,0,0.86681,0.131007,0,0,0.804729,0.192785,0,0,0.824984,0.171894,0,0,0.855671,0.142094,0,0,0.802623,0.196742,0,0,0.711182,0.288678,0,0,0.846615,0.153148,0,0,0.96564,0,0,0,0.953771,0,0,0,0.712082,0.03967,0,0,0.963937,0,0,0,0.991134,0,0,0,0.971924,0,0,0,0.913946,0,0,0,0.995518,0,0,0,0.972974,0,0,0,0.930245,0.067397,0,0,0.944972,0.054337,0,0,0.983669,0,0,0,0.988308,0,0,0,0.973145,5.8e-05,0,0,0.961528,0.022334,0,0,0.977428,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0.601047,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.962971,0,0,0,0.973013,0,0,0,0.888396,0,0,0,0.901481,0,0,0,0.997457,0,0,0,0.922515,0,0,0,0.933394,0,0,0,1,0,0,0,0.951216,0,0,0,0.889499,0,0,0,0.941871,0,0,0,1,0,0,0,1,0,0,0,0.927423,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.964196,0,0,0,0.96747,0,0,0,0.95899,0,0,0,0.968953,0,0,0,0.973578,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.724378,0.144877,0.090509,0.046748,0.730993,0.154084,0.095814,0.024228,0.742067,0.29148,0.052297,0,0.73331,0.304124,0.040194,0.002999,0.731451,0.257186,0.040275,0.017445,0.711878,0.127438,0.082486,0.064266,0.705161,0.121971,0.068046,0.025002,0.670446,0.107426,0.095606,0.056866,0.718513,0.07993,0.071163,0.066586,0.674638,0.09972,0.081859,0.081024,0.717296,0.136013,0.0552,0.048948,0.718797,0.27562,0.021571,0.014365,0.702883,0.119833,0.075706,0.068866,0.713817,0.218161,0.031172,0.013007,0.688179,0.108308,0.088424,0.058797,0.781936,0.205823,0,0,0.56466,0.429633,0,0,0.806163,0.178419,0,0,0.519203,0.444271,0,0,0.646928,0.304444,0,0,0.792244,0.13135,0.066452,0.044272,0.813252,0.112066,0.089708,0.006567,0.666087,0.274542,0.178176,0,0.64892,0.267627,0.188707,0.034659,0.820851,0.11171,0.097598,0,0.803798,0.184816,0.076224,0,0.702693,0.57714,0.043029,0,0.637128,0.391106,0.124694,0,0.656063,0.288604,0.119632,0.073016,0.791374,0.11801,0.069087,0.059921,0.770432,0.117368,0.097093,0.052995,0.665435,0.280123,0.095936,0.08792,0.764283,0.128192,0.094643,0.032425,0.822281,0.164146,0.077596,0,0.829519,0.141753,0.079348,0.024147,0.65103,0.634576,0.075743,0,0.714243,0.593546,0.030243,0,0.834803,0.082134,0.081844,0.076239,0.720303,0.239361,0.21732,0,0.75109,0.470767,0,0,0.807889,0.185733,0.074662,0,0.481043,0.454825,0.381156,0.013583,0.653472,0.352567,0.281087,0.070601,0.783499,0.300998,0.14486,0.131283,0.789493,0.297521,0.146699,0.128943,0.618582,0.373547,0.213454,0,0.903884,0.244303,0.006431,0,0.749324,0.473952,0,0,0.925935,0.225588,0,0,0.758712,0.342016,0.091261,0.013389,0.873806,0.262737,0.013059,0,0.921344,0.22122,0,0,0.51013,0.507865,0.295971,0.007734,0.728388,0.276795,0.273942,0.067966,0.877671,0.196538,0.060678,0,0.629954,0.297662,0.28693,0.011311,0.76853,0.195089,0.09384,0.069896,0.895291,0.151137,0.010129,0.00277,0.948024,0.099051,0.003284,0,0.943463,0.108882,0,0,0.600313,0.479797,0.217717,0.035217,0.819174,0.22738,0.189824,0.078131,0.873929,0.211421,0.138911,0.130167,0.876065,0.211403,0.147174,0.123522,0.857137,0.162156,0.083674,0.01852,0.615954,0.385198,0.213616,0.047309,0.815559,0.10249,0.08226,0.041549,0.711893,0.131044,0.123917,0.094308,0.456961,0.276324,0.254257,0.166072,0.350433,0.319608,0.249127,0.166701,0.898687,0.084671,0.025992,0,0.903513,0.083137,0.029571,0,0.887466,0.077741,0.025892,0.010552,0.914527,0.069158,0.031042,0,0.698779,0.170366,0.065907,0.056187,0.624474,0.208536,0.089001,0.080045,0.427527,0.269437,0.21868,0.098502,0.715129,0.278058,0,0,0.76335,0.229363,0,0,0.787981,0.1003,0.057341,0.010644,0.864161,0.051113,0.043964,0.038513,0.551274,0.522863,0.157172,0.078577,0.702992,0.351227,0.153549,0.061936,0.819234,0.126441,0.113081,0.05975,0.946643,0.09964,0.002358,0,0.940592,0.092103,0.011653,0,0.935104,0.144007,0,0,0.935471,0.168933,0,0,0.911553,0.072621,0.040704,0,0.7981,0.192154,0,0,0.926044,0.131088,0,0,0.932605,0.085431,0.019294,0,0.913531,0.070373,0.03814,0,0.906911,0.116307,0.023064,0,0.894865,0.083783,0.033125,0,0.830065,0.141693,0,0,0.867608,0.082342,0.037019,0.011534,0.820271,0.165643,0,0,0.715016,0.271396,0,0,0.564837,0.429275,0,0,0.520968,0.475559,0,0,0.881875,0.072971,0.032478,0.030042,0.689287,0.149093,0.119795,0.025635,0.644555,0.215761,0.07112,0.069728,0.868086,0.098237,0.058648,0.043007,0.518187,0.478087,0,0,0.528192,0.147425,0.141182,0.099493,0.410316,0.355967,0.078906,0.076067,0.501661,0.205846,0.176183,0.060201,0.537954,0.135008,0.133538,0.116446,0.621144,0.21734,0.139399,0.060538,0.553326,0.149317,0.121438,0.054628,0.318096,0.302459,0.150829,0.073352,0.767059,0.163561,0.057616,0.020661,0.99345,0.048399,0.033522,0.016698,0.968906,0.079661,0.066471,0.065325,0.740098,0.165715,0.131377,0.052655,0.269168,0.251552,0.079046,0,0.163668,0.145895,0.062024,0,0.284809,0.073273,0.034669,0,0.416964,0.117392,0,0,0.592121,0.066832,0.052037,0.014253,0.380928,0.107463,0.041742,0,0.724024,0.043724,0,0,0.791723,0.068851,0.012107,0.003424,0.267804,0.155229,0.104849,0.086128,0.230247,0.210265,0.171337,0.089289,0.303903,0.195297,0.137605,0.055958,0.435445,0.109397,0.094263,0.077041,0.471337,0.281465,0.262583,0.061741,0.589066,0.239138,0.21834,0.065686,0.422498,0.241906,0.147881,0.035872,0.567824,0.190088,0.062984,0.032119,0.375863,0.2201,0.089237,0.036361,0.670345,0.085392,0.08497,0.021179,0.589456,0.104019,0.086434,0.052032,0.381816,0.071044,0.055177,0,0.323824,0.227404,0.020872,0,0.372296,0.18891,0,0,0.377352,0.093091,0.058195,0.048734,0.198856,0.084763,0,0,0.22778,0.099859,0.090288,0.066565,0.333143,0.115734,0.079164,0.050075,0.450291,0.326132,0.009446,0,0.448283,0.324637,0.004376,0,0.63689,0.250238,0,0,0.748573,0.176025,0,0,0.513973,0.180745,0.040685,0.02266,0.533656,0.272642,0.008695,0.004376,0.645427,0.237028,0,0,0.178796,0.088856,0.079126,0.056857,0.177812,0.144375,0.127307,0.095683,0.22154,0.185368,0.116698,0.042119,0.700312,0.226097,0,0,0.876254,0.097416,0,0,0.801386,0.139094,0,0,0.61707,0.167076,0.051151,0.039553,0.605351,0.174276,0.046981,0.034265,0.269588,0.06546,0,0,0.174756,0.072368,0.059986,0,0.26553,0.089197,0,0,0.305255,0.072933,0,0,0.872053,0.0876,0.025085,0,0.546577,0.338121,0.026311,0.020062,0.525139,0.262452,0.181264,0,0.485566,0.290212,0.180978,0,0.425164,0.33495,0.198138,0,0.435259,0.287646,0.229279,0,0.470955,0.416158,0.043734,0.003816,0.470388,0.361226,0.06718,0.008999,0.617604,0.271471,0.055473,0,0.709809,0.234376,0,0,0.483286,0.344764,0.130499,0,0.512292,0.302214,0.129338,0,0.442956,0.327288,0.163382,0,0.411466,0.361249,0.172543,0,0.456731,0.391469,0.121927,0,0.379854,0.308243,0.233245,0,0.321228,0.308368,0.217732,0.01499,0.317193,0.308732,0.075915,0.043163,0.255347,0.246331,0.183153,0.059678,0.323044,0.252536,0.117062,0.023947,0.696223,0.259329,0,0,0.894331,0.091699,0,0,0.675104,0.197311,0.101934,0,0.864444,0.061595,0.05559,0.040074,0.491318,0.391242,0.097681,0,0.467907,0.297719,0.163987,0,0.539022,0.161096,0.090257,0.026935,0.665232,0.178848,0.076082,0.001717,0.467261,0.343055,0.132018,0,0.365964,0.164487,0.109299,0.058522,0.519704,0.296249,0.111774,0,0.447214,0.318941,0.105716,0.010578,0.517284,0.058893,0.043921,0.012037,0.536582,0.105482,0.035187,0.01975,0.503135,0.352814,0.096619,0.050001,0.522187,0.339397,0.098771,0.029353,0.454872,0.295601,0.255296,0.034686,0.866046,0.199056,0,0,0.749841,0.579501,0,0,0.786796,0.57502,0,0,0.876923,0.17178,0,0,0.649545,0.37025,0,0,0.566896,0.242751,0,0,0.550869,0.295611,0,0,0.564627,0.439262,0,0,0.528559,0.366874,0,0,0.544133,0.475346,0,0,0.477827,0.451117,0,0,0.471925,0.282343,0.000185,0,0.53731,0.329877,0,0,0.790435,0.125316,0,0,0.911845,0.026759,0,0,0.847167,0.068611,0.001428,0,0.958014,0,0,0,0.985925,0,0,0,0.645697,0.098033,0.024132,0,0.565319,0.078504,0.069134,0,0.401665,0.129119,0,0,0.580254,0.205279,0,0,0.565023,0.131617,0,0,0.447357,0.397117,0.092503,0.045128,0.527588,0.28028,0.017272,0.014313,0.657835,0.221647,0.062554,0.009024,0.369207,0.368972,0.031817,0.024488,0.436438,0.146791,0.135099,0.104389,0.333032,0.159282,0.136777,0.13052,0.269325,0.163254,0.150628,0.091783,0.447339,0.293409,0.059591,0.042089,0.748232,0.277879,0.056552,0,0.693031,0.565866,0.009374,0,0.684931,0.556917,0.007344,0,0.680968,0.509544,0.005976,0,0.67774,0.450918,0.003761,0,0.665968,0.377836,0,0,0.672808,0.423112,0.001258,0,0.610721,0.536338,0,0,0.745901,0.12746,0.049065,0.025518,0.777598,0.068054,0.066097,0.02646,0.814885,0.086011,0.007579,0,0.767444,0.125056,0.028913,0,0.70677,0.198674,0.022422,0.019186,0.413745,0.195639,0.19235,0.03029,0.855694,0.086014,0,0,0.709989,0.200685,0.004752,0,0.635072,0.255245,0,0,0.651898,0.293581,0,0,0.693474,0.582142,0,0,0.289991,0.256506,0.171082,0.049131,0.373242,0.249631,0.169513,0.052314,0.686969,0.162374,0.054301,0.031003,0.671938,0.306655,0.00405,0,0.375148,0.137629,0,0,0.433139,0.173949,0,0,0.139429,0.136769,0.067687,0.065002,0.470057,0.219189,0,0,0.714365,0.32769,0,0,0.789562,0.279598,0,0,0.440214,0.106045,0.001466,0,0.624196,0.069794,0,0,0.784545,0.132537,0.020516,0.010374,0.668843,0.211985,0.090213,0.002323,0.629592,0.182579,0.180772,0,0.592836,0.297586,0.104637,0,0.554835,0.323305,0.138086,0.030907,0.615775,0.119756,0.044261,0,0.652869,0.056477,0.03445,0,0.922149,0.150493,0.132832,0.109494,0.587087,0.307581,0.083952,0,0.652945,0.238641,0.081444,0,0.640283,0.227726,0.08962,0,0.59824,0.256542,0.085578,0,0.72136,0.082007,0.077534,0,0.976112,0,0,0,0.943962,0.016053,0,0,0.593551,0.31361,0.065437,0.014526,0.653896,0.22572,0.00915,0.004331,0.639761,0.279471,0.052538,0,0.887588,0.05518,0,0,0.943979,0,0,0,0.965751,0,0,0,0.884942,0.015916,0,0,0.894282,0.062258,0,0,0.935357,0.010317,0,0,0.965429,0,0,0,0.969889,0,0,0,0.950275,0,0,0,0.913578,0.036721,0,0,0.865481,0.074215,0.023461,0,0.802823,0.109329,0.067921,0,0.781274,0.108556,0.097707,0,0.785768,0.138237,0.062692,0,0.80933,0.129913,0.031065,0,0.839673,0.106418,0,0,0.726948,0.092202,0.071687,0.00065,0.922172,0.15502,0.137024,0.112052,0.921935,0.020042,0.00667,0,0.927231,0.012151,0.007159,0,0.909159,0.028587,0.026208,0,0.900621,0.043312,0.024905,0,0.947716,0,0,0,0.936612,0.002355,0,0,0.93719,0.014128,0,0,0.918691,0.03665,0,0,0.933094,0.01368,0,0,0.946593,0,0,0,0.896365,0.061196,0.000759,0,0.916731,0.043173,0,0,0.896818,0.056308,0.01571,0,0.8729,0.076273,0.020747,0,0.859795,0.080023,0.043126,0,0.88879,0.054783,0.036292,0,0.871765,0.059739,0.053851,0,0.861348,0.069208,0.056168,0,0.462247,0.41452,0.351165,0.060999,0.77037,0.250748,0.065492,0,0.732087,0.147895,0.102441,0.00504,0.726114,0,0,0,0.719431,0,0,0,0.725954,0.23644,0.056543,0,0.792223,0.149612,0.090021,0,0.520744,0.464058,0,0,0.668299,0.307697,0.015472,0,0.508696,0.476277,0,0,0.688672,0.255901,0.03885,0.008522,0.681051,0.265313,0.031264,0.01874,0.676474,0.295225,0.032546,0,0.500415,0.481915,0,0,0.715879,0.251601,0.038044,0,0.694444,0.276351,0.007561,0.00361,0.490041,0.482035,0,0,0.648256,0,0,0,0.752152,0,0,0,0.573768,0,0,0,0.744207,0,0,0,0.550943,0,0,0,0.741296,0,0,0,0.488572,0.481236,0,0,0.546611,0,0,0,0.679657,0.26399,0.043339,0,0.7325,0,0,0,0.922283,0.061376,0.05443,0,0.925479,0.06371,0.053199,0,0.743364,0.283866,0.052161,0,0.732091,0.150151,0.095904,0.022909,0.727108,0.138461,0.090173,0.044403,0.735627,0.290132,0.039735,0.001376,0.716938,0.118555,0.081837,0.062284,0.735034,0.23941,0.039552,0.015139,0.708319,0.126221,0.065902,0.014818,0.723923,0.081675,0.064359,0.061864,0.674394,0.109831,0.092598,0.049553,0.682512,0.09602,0.080513,0.071407,0.724156,0.118213,0.05314,0.049058,0.711233,0.108472,0.072563,0.067731,0.723092,0.250587,0.020816,0.011929,0.697736,0.093829,0.085637,0.057781,0.720005,0.191097,0.027738,0.012014,0.784759,0.204437,0,0,0.519641,0.448257,0,0,0.808702,0.177321,0,0,0.570326,0.424292,0,0,0.646305,0.310449,0,0,0.708936,0.241012,0,0,0.783971,0.137485,0.071655,0.046602,0.647582,0.267838,0.201393,0.026191,0.663943,0.286532,0.178591,0,0.802842,0.119525,0.096416,0.008993,0.810238,0.119053,0.105278,0,0.635735,0.401977,0.124954,0,0.708134,0.579733,0.043119,0,0.796616,0.192748,0.082253,0,0.785537,0.122351,0.070014,0.064746,0.655623,0.28867,0.129737,0.066428,0.767442,0.119628,0.097566,0.057465,0.681657,0.645625,0.06588,0,0.830004,0.148203,0.081791,0.01849,0.820957,0.171154,0.081355,0,0.721614,0.617981,0.018801,0,0.803497,0.193438,0.07978,0,0.756005,0.484894,0,0,0.652474,0.353311,0.308657,0.061634,0.481886,0.479591,0.382651,0.005628,0.783342,0.301132,0.16391,0.11507,0.63647,0.375409,0.212286,0,0.90705,0.252822,0.005851,0,0.928255,0.242706,0,0,0.75376,0.481399,0,0,0.77779,0.448963,0.073093,0.012256,0.881482,0.317067,0,0,0.924646,0.250633,0,0,0.726573,0.317374,0.275126,0.058357,0.54765,0.507456,0.298182,0.012321,0.883552,0.202772,0.05989,0,0.657227,0.295314,0.289686,0.016427,0.797461,0.249162,0.068407,0.066523,0.903498,0.22976,0.007226,0,0.949471,0.113115,0.003146,0,0.945796,0.132055,0,0,0.816343,0.286324,0.190983,0.065606,0.595753,0.546344,0.220172,0.044529,0.873498,0.211644,0.166252,0.109702,0.865314,0.167344,0.082341,0.021059,0.655561,0.381168,0.216679,0.052763,0.830678,0.138957,0.078477,0.019099,0.739578,0.154625,0.127761,0.069893,0.900421,0.084267,0.04276,0,0.904637,0.082847,0.042053,0,0.894767,0.108658,0.01988,0.010752,0.918516,0.091479,0.030948,0,0.718189,0.162191,0.084027,0.039904,0.649345,0.201926,0.097789,0.070509,0.764482,0.228642,0,0,0.71719,0.276466,0,0,0.802245,0.092482,0.075905,0.011578,0.872344,0.069122,0.044314,0.028918,0.609252,0.515938,0.160162,0.085466,0.694997,0.484423,0.155858,0.070074,0.830527,0.130642,0.110807,0.061839,0.94798,0.109567,0.002264,0,0.937512,0.179181,0,0,0.937219,0.152499,0,0,0.941963,0.100126,0.011565,0,0.912508,0.072456,0.050543,0,0.798912,0.191783,0,0,0.9287,0.137953,0,0,0.910612,0.121572,0.021629,0.00066,0.915433,0.074712,0.038132,0,0.934141,0.091743,0.01923,0,0.869418,0.082372,0.041924,0.012056,0.831052,0.141651,0.001874,0,0.895854,0.083692,0.040342,0,0.715622,0.271241,0,0,0.821031,0.165438,0,0,0.565425,0.4289,0,0,0.521162,0.475534,0,0,0.885366,0.076292,0.03258,0.031387,0.873889,0.102103,0.057279,0.045349,0.651295,0.217811,0.070074,0.067716,0.693397,0.149622,0.120147,0.022109,0.51614,0.480477,0,0,0.636377,0.295003,0.055669,0,0.675264,0.298472,0,0,0.837265,0.153702,0,0,0.390693,0.385918,0.086151,0.064104,0.517421,0.170513,0.145785,0.085735,0.633191,0.222713,0.133098,0.062634,0.594596,0.15139,0.085785,0.066566,0.405663,0.220552,0.14522,0.078098,0.753647,0.182454,0.066984,0.01438,0.708614,0.198929,0.154418,0.053028,0.354842,0.256478,0.195251,0.039095,0.380819,0.250758,0.19118,0.024831,0.296462,0.245558,0.07638,0,0.414564,0.116503,0,0,0.272786,0.071951,0.033309,0,0.206262,0.138163,0.060022,0,0.753479,0.036346,0,0,0.41533,0.098978,0.047194,0.000924,0.611112,0.071382,0.046048,0.017151,0.806669,0.072609,0.00748,0.005594,0.203979,0.202163,0.091686,0.088061,0.319905,0.131835,0.122663,0.072049,0.257111,0.203414,0.124489,0.07719,0.280162,0.183491,0.109019,0.099903,0.492464,0.293649,0.249744,0.063451,0.55476,0.276224,0.253252,0.066754,0.568555,0.17111,0.086436,0.056367,0.506376,0.171835,0.075093,0.060206,0.631624,0.139262,0.068504,0.051566,0.399996,0.146036,0.142119,0.082517,0.401429,0.085623,0.063543,0.055166,0.182288,0.088917,0.002627,0,0.203054,0.125081,0.105715,0.069414,0.415307,0.34689,0.013901,0,0.409539,0.362897,0.022084,0,0.276726,0.159063,0.099154,0.053174,0.43163,0.257073,0.056877,0.006676,0.767069,0.1534,0,0,0.700345,0.185147,0,0,0.424482,0.39509,0.012275,0,0.464217,0.455277,0,0,0.192368,0.187572,0.147537,0.07824,0.164403,0.102718,0.088989,0.059368,0.251901,0.187896,0.089096,0.05482,0.896853,0.080372,0,0,0.530105,0.420729,0,0,0.841208,0.107413,0,0,0.607291,0.167852,0.063704,0.04661,0.243395,0.091016,0,0,0.160262,0.137407,0.061446,0,0.249955,0.065469,0,0,0.283404,0.072914,0,0,0.876077,0.087427,0.049332,0,0.560814,0.338697,0.019397,0.003686,0.49035,0.287582,0.182028,0,0.528572,0.263216,0.179396,0,0.440612,0.283939,0.230606,0,0.429965,0.336039,0.195161,0,0.618023,0.281114,0.054506,0,0.470969,0.376142,0.045025,0.009285,0.471133,0.428168,0.04235,0,0.484119,0.349904,0.128331,0,0.412561,0.367949,0.169596,0,0.44407,0.335984,0.160485,0,0.513226,0.309806,0.127055,0,0.457431,0.395008,0.120106,0,0.373103,0.317137,0.235567,0,0.332147,0.310135,0.211527,0.015291,0.325645,0.318855,0.06536,0.044661,0.262338,0.214954,0.195479,0.071202,0.488702,0.149984,0.096555,0.092693,0.393638,0.134871,0.127083,0.091414,0.334149,0.182678,0.177265,0.068117,0.677663,0.197636,0.101833,0,0.867187,0.061665,0.058309,0.041014,0.493533,0.391742,0.096508,0,0.4611,0.305502,0.166216,0,0.462222,0.349811,0.133725,0,0.665395,0.185824,0.0781,0,0.563757,0.169425,0.092816,0.018633,0.402952,0.174529,0.112203,0.046938,0.448261,0.33172,0.093548,0.012946,0.520563,0.307498,0.100004,0.002434,0.532218,0.143554,0.034527,0.007656,0.471238,0.313181,0.238024,0.036939,0.525473,0.348504,0.092709,0.030471,0.512044,0.355946,0.091492,0.050456,0.828065,0.198743,0,0,0.727528,0.58043,0,0,0.59001,0.37303,0,0,0.489518,0.4432,0,0,0.497552,0.300464,0,0,0.51742,0.245932,0,0,0.54918,0.378443,0,0,0.475403,0.374102,0,0,0.489086,0.40978,0,0,0.556507,0.299527,0,0,0.435022,0.29585,0.007494,0,0.92165,0.011439,0,0,0.825083,0.098709,0,0,0.861834,0.04817,0.003174,0,0.96272,0,0,0,0.618565,0.097356,0.02689,0,0.368309,0.130969,0,0,0.525852,0.131662,0,0,0.534207,0.207223,0,0,0.453833,0.39613,0.093422,0.040088,0.517079,0.308745,0.022714,0.015792,0.653855,0.228075,0.063939,0.005898,0.38982,0.370044,0.037546,0,0.334973,0.162235,0.114292,0.058663,0.475626,0.294288,0.052061,0.0308,0.686045,0.542776,0.007167,0,0.680472,0.422176,0.003361,0,0.682944,0.487096,0.005672,0,0.670439,0.328856,0,0,0.61373,0.495126,0,0,0.67612,0.389134,0.000792,0,0.783928,0.070387,0.043864,0.023669,0.753825,0.106385,0.050638,0.02274,0.766363,0.132089,0.025525,0,0.817202,0.090437,0.005069,0,0.714035,0.168825,0.019607,0.019451,0.854611,0.090828,0,0,0.722375,0.176979,0.005689,0,0.65457,0.228481,0,0,0.660321,0.253176,0,0,0.662049,0.583756,0,0,0.242655,0.23696,0.22291,0.058989,0.325607,0.300352,0.16899,0.056948,0.711491,0.145819,0.070327,0.035316,0.677538,0.261256,0.001837,0,0.34243,0.141237,0,0,0.396639,0.179981,0,0,0.175624,0.126061,0.074463,0.073116,0.43198,0.228253,0.001561,0,0.660636,0.329638,0,0,0.74016,0.280503,0,0,0.649526,0.064163,0,0,0.476416,0.098465,0.001566,0,0.672913,0.219562,0.083741,0.003329,0.783241,0.137544,0.016032,0.012035,0.644561,0.193321,0.165058,0.001129,0.464813,0.415011,0.15755,0.031813,0.632379,0.259567,0.114959,0,0.671289,0.05332,0.031025,0,0.645682,0.114666,0.039469,0,0.920951,0.164084,0.150846,0.090328,0.587538,0.310173,0.082752,0,0.653464,0.242097,0.080137,0,0.641023,0.23365,0.088043,0,0.598992,0.265993,0.084027,0,0.708322,0.103104,0.072627,0.016691,0.944315,0.017997,0,0,0.567231,0.345569,0.074946,0.003669,0.680415,0.215229,0.00976,0.006606,0.663216,0.259951,0.058005,0,0.886558,0.057698,0,0,0.944101,0,0,0,0.966657,0,0,0,0.905406,0.011349,0,0,0.900064,0.058567,0,0,0.938591,0.006921,0,0,0.966896,0,0,0,0.970759,0,0,0,0.95097,0,0,0,0.914372,0.040588,0,0,0.866928,0.077361,0.017855,0,0.806947,0.114128,0.062502,0,0.790748,0.103345,0.098811,0,0.800708,0.124331,0.067421,0,0.8217,0.119468,0.03753,0,0.849151,0.099549,0.002557,0,0.367614,0.070378,0.054482,0,0.92391,0.023438,0.002139,0,0.929762,0.010147,0.007178,0,0.938371,0.004966,0,0,0.949499,0,0,0,0.935904,0.00874,0,0,0.948847,0,0,0,0.940201,0.009497,0,0,0.922666,0.029887,0.000733,0,0.921062,0.036334,0,0,0.90206,0.056562,0.004173,0,0.90201,0.051671,0.019741,0,0.880145,0.069952,0.025519,0,0.893589,0.050123,0.041134,0,0.86747,0.063144,0.059357,0,0.867521,0.072851,0.049095,0,0.875926,0.062725,0.048642,0,0.912324,0.030162,0.022093,0,0.903259,0.047805,0.018793,0,0.765992,0.258496,0.070581,0,0.782442,0.15813,0.096128,0,0.725931,0,0,0,0.660987,0.308847,0.041267,0,0.511184,0.471946,0,0,0.651319,0.322647,0.023464,0,0.494366,0.489104,0,0,0.683075,0.260717,0.039827,0.013901,0.672008,0.273047,0.032843,0.025196,0.499796,0.481209,0,0,0.71313,0.254252,0.044202,0,0.719683,0.242154,0.060719,0,0.490866,0.480568,0,0,0.757954,0,0,0,0.672926,0,0,0,0.627133,0,0,0,0.74507,0,0,0,0.562438,0,0,0,0.717814,0,0,0,0.748723,0,0,0,0.923421,0.066753,0.054353,0,0.926581,0.069866,0.053101,0,0.995318,0,0,0,0.98722,0,0,0,0.966375,0.017227,0,0,0.964735,0.020504,0,0,0.971241,0.007436,0,0,0.977224,0,0,0,0.828666,0.17107,0,0,0.81256,0.187155,0,0,0.978039,0,0,0,0.86361,0.13634,0,0,0.908763,0.091206,0,0,0.978755,0,0,0,0.967744,0.014429,0,0,0.783862,0.215858,0,0,0.795953,0.203851,0,0,0.968372,0.013191,0,0,0.984388,0,0,0,0.992929,0,0,0,0.896204,0.103703,0,0,0.867224,0.132605,0,0,0.92674,0.073241,0,0,0.941824,0.05816,0,0,0.983616,0,0,0,0.979296,0,0,0,0.976836,0,0,0,0.899006,0.100964,0,0,0.918844,0.080487,0,0,0.982926,0,0,0,0.980252,0,0,0,0.874332,0.125352,0,0,0.833117,0.166354,0,0,0.660321,0.339517,0,0,0.84478,0.155182,0,0,0.833377,0.166585,0,0,0.550571,0.44934,0,0,0.513089,0.486799,0,0,0.740374,0.258197,0,0,0.682308,0.317174,0,0,0.690512,0.308973,0,0,0.757845,0.24069,0,0,0.54555,0.454264,0,0,0.619717,0.380046,0,0,0.702848,0.297055,0,0,0.548805,0.451041,0,0,0.752015,0.247679,0,0,0.558123,0.4417,0,0,0.974849,0,0,0,0.965542,0.012926,0,0,0.975952,0,0,0,0.97333,0,0,0,0.811244,0.18817,0,0,0.688337,0.311389,0,0,0.845318,0.154183,0,0,0.950183,0.04542,0,0,0.788933,0.211011,0,0,0.513504,0.486382,0,0,0.668176,0.331563,0,0,0.723126,0.27577,0,0,0.943143,0.052319,0,0,0.961139,0.021714,0,0,0.657377,0.342012,0,0,0.708701,0.290944,0,0,0.835192,0.163259,0,0,0.697789,0.301815,0,0,0.723262,0.276554,0,0,0.781753,0.218161,0,0,0.867621,0.132343,0,0,0.866553,0.132605,0,0,0.943995,0.054335,0,0,0.944751,0.053364,0,0,0.8606,0.13865,0,0,0.983326,0,0,0,0.876074,0.123238,0,0,0.843819,0.155537,0,0,0.576998,0.422732,0,0,0.613685,0.386011,0,0,0.725147,0.274464,0,0,0.946427,0.05131,0,0,0.850016,0.149135,0,0,0.815405,0.184485,0,0,0.776233,0.223673,0,0,0.973106,0.003741,0,0,0.925701,0.074245,0,0,0.875834,0.124115,0,0,0.63915,0.360714,0,0,0.973981,0,0,0,0.939573,0.059688,0,0,0.978762,0,0,0,0.984185,0,0,0,0.952933,0.039303,0,0,0.939211,0.057582,0,0,0.964037,0.006902,0,0,0.965852,0.007237,0,0,0.96239,0.017217,0,0,0.965996,0.000233,0,0,0.932192,0.062779,0,0,0.9344,0.060482,0,0,0.962654,0.008561,0,0,0.994405,0,0,0,0.956166,0.037621,0,0,0.83445,0.16543,0,0,0.692831,0.306985,0,0,0.967979,0,0,0,0.648294,0.351229,0,0,0.603777,0.395847,0,0,0.768459,0.231475,0,0,0.907946,0.090883,0,0,0.602622,0.397032,0,0,0.540314,0.459569,0,0,0.879581,0.120366,0,0,0.908625,0.091346,0,0,0.978399,0,0,0,0.960713,0.021635,0,0,0.960774,0.022717,0,0,0.891911,0.106806,0,0,0.853185,0.145904,0,0,0.935518,0.062151,0,0,0.90108,0.097505,0,0,0.968867,0.002733,0,0,0.979437,0,0,0,0.725087,0.27416,0,0,0.786434,0.212824,0,0,0.795097,0.204151,0,0,0.667976,0.331567,0,0,0.798881,0.200233,0,0,0.78252,0.216801,0,0,0.730744,0.268701,0,0,0.833892,0.165983,0,0,0.811409,0.188433,0,0,0.568413,0.431533,0,0,0.596749,0.403227,0,0,0.880911,0.119051,0,0,0.566412,0.433354,0,0,0.632661,0.366969,0,0,0.578437,0.420965,0,0,0.796458,0.202846,0,0,0.992305,0,0,0,0.991484,0,0,0,0.984522,0,0,0,0.99611,0,0,0,0.996911,0,0,0,0.795024,0.204853,0,0,0.677801,0.322043,0,0,0.663329,0.33649,0,0,0.997794,0,0,0,0.99617,0,0,0,0.896417,0.103533,0,0,0.910201,0.089741,0,0,0.972256,0.005457,0,0,0.956297,0.037345,0,0,0.979578,0,0,0,0.992424,0,0,0,0.974121,0.001707,0,0,0.964447,0.021036,0,0,0.982882,0,0,0,0.984792,0,0,0,0.990275,0,0,0,0.546089,0.45371,0,0,0.552266,0.447439,0,0,0.729889,0.269918,0,0,0.987544,0,0,0,0.995895,0,0,0,0.824899,0.175033,0,0,0.868234,0.131671,0,0,0.955438,0.039089,0,0,0.93459,0.065361,0,0,0.984558,0,0,0,0.93652,0.063428,0,0,0.889715,0.110176,0,0,0.934827,0.065111,0,0,0.861135,0.138724,0,0,0.856957,0.1429,0,0,0.910152,0.089764,0,0,0.828015,0.171836,0,0,0.851557,0.148322,0,0,0.740897,0.2589,0,0,0.564697,0.434958,0,0,0.666994,0.33256,0,0,0.527285,0.472479,0,0,0.696793,0.303089,0,0,0.887147,0.112828,0,0,0.969844,0.010291,0,0,0.985387,0,0,0,0.960904,0.028124,0,0,0.995378,0,0,0,0.965084,0.019803,0,0,0.967151,0.015674,0,0,0.990674,0,0,0,0.971245,0.007419,0,0,0.812573,0.187108,0,0,0.828681,0.171019,0,0,0.977228,0,0,0,0.978081,0,0,0,0.978836,0,0,0,0.90883,0.091138,0,0,0.863636,0.136312,0,0,0.967748,0.014413,0,0,0.968378,0.013173,0,0,0.795961,0.203827,0,0,0.783873,0.21582,0,0,0.984393,0,0,0,0.867241,0.132562,0,0,0.896226,0.103666,0,0,0.992939,0,0,0,0.984434,0,0,0,0.942258,0.057725,0,0,0.926972,0.073007,0,0,0.97965,0,0,0,0.899111,0.100858,0,0,0.976994,0,0,0,0.918807,0.08046,0,0,0.874306,0.125335,0,0,0.979891,0,0,0,0.981521,0,0,0,0.833096,0.166331,0,0,0.6603,0.339521,0,0,0.844905,0.155055,0,0,0.51306,0.486819,0,0,0.550599,0.449307,0,0,0.833487,0.166472,0,0,0.740165,0.258243,0,0,0.757554,0.240748,0,0,0.690536,0.308874,0,0,0.682327,0.317095,0,0,0.545535,0.454269,0,0,0.619701,0.380045,0,0,0.702858,0.297042,0,0,0.558122,0.441695,0,0,0.752031,0.247654,0,0,0.548803,0.451036,0,0,0.974797,0,0,0,0.973251,0,0,0,0.975883,0,0,0,0.965521,0.012887,0,0,0.811249,0.188146,0,0,0.950183,0.045361,0,0,0.845338,0.154152,0,0,0.688343,0.311374,0,0,0.513517,0.486364,0,0,0.788988,0.210954,0,0,0.668171,0.331559,0,0,0.961019,0.021724,0,0,0.942793,0.052344,0,0,0.723001,0.275802,0,0,0.657313,0.34203,0,0,0.70858,0.291002,0,0,0.723292,0.276493,0,0,0.697816,0.301722,0,0,0.834839,0.163326,0,0,0.86774,0.132222,0,0,0.781774,0.218126,0,0,0.866538,0.132579,0,0,0.860567,0.138626,0,0,0.944618,0.053337,0,0,0.943944,0.054304,0,0,0.833278,0.166079,0,0,0.86979,0.129524,0,0,0.982623,0,0,0,0.61367,0.386005,0,0,0.576986,0.422729,0,0,0.725143,0.274452,0,0,0.850015,0.14911,0,0,0.946415,0.05128,0,0,0.815412,0.184471,0,0,0.92571,0.074232,0,0,0.973122,0.003706,0,0,0.776243,0.223659,0,0,0.639152,0.360706,0,0,0.875853,0.124093,0,0,0.978133,0,0,0,0.938655,0.060609,0,0,0.973533,4.3e-05,0,0,0.98393,0,0,0,0.945792,0.051789,0,0,0.962357,0.006968,0,0,0.923735,0.073052,0,0,0.965361,0.008211,0,0,0.962132,0.017732,0,0,0.962961,0.006271,0,0,0.95633,0.021177,0,0,0.933482,0.060526,0,0,0.931628,0.062814,0,0,0.994426,0,0,0,0.956249,0.037448,0,0,0.692837,0.306967,0,0,0.834457,0.165415,0,0,0.966436,0,0,0,0.64831,0.351167,0,0,0.60379,0.395806,0,0,0.768492,0.23144,0,0,0.602596,0.397038,0,0,0.907929,0.090868,0,0,0.540325,0.459555,0,0,0.908779,0.091189,0,0,0.879624,0.120315,0,0,0.978317,0,0,0,0.960605,0.021864,0,0,0.891667,0.107054,0,0,0.960595,0.023089,0,0,0.852688,0.146405,0,0,0.935457,0.062216,0,0,0.900928,0.09766,0,0,0.968674,0.003124,0,0,0.979318,0,0,0,0.659921,0.339325,0,0,0.772213,0.227042,0,0,0.666071,0.333475,0,0,0.794629,0.204622,0,0,0.799344,0.19977,0,0,0.731428,0.268015,0,0,0.782283,0.217036,0,0,0.835938,0.163907,0,0,0.84916,0.150718,0,0,0.597006,0.402971,0,0,0.568539,0.431407,0,0,0.883408,0.116555,0,0,0.563553,0.436217,0,0,0.597065,0.402339,0,0,0.718032,0.281602,0,0,0.793111,0.20619,0,0,0.995474,0,0,0,0.990308,0,0,0,0.995004,0,0,0,0.997672,0,0,0,0.99764,0,0,0,0.789368,0.210504,0,0,0.660173,0.339642,0,0,0.674413,0.325428,0,0,0.993761,0,0,0,0.996887,0,0,0,0.89012,0.109826,0,0,0.903176,0.096761,0,0,0.967424,0.015115,0,0,0.949935,0.05003,0,0,0.974642,0.000679,0,0,0.989746,0,0,0,0.98292,0,0,0,0.975667,0,0,0,0.988704,0,0,0,0.990477,0,0,0,0.993714,0,0,0,0.544414,0.45538,0,0,0.55096,0.448746,0,0,0.724319,0.275483,0,0,0.983897,0,0,0,0.995356,0,0,0,0.819412,0.180518,0,0,0.86048,0.139418,0,0,0.950321,0.049318,0,0,0.926591,0.073353,0,0,0.981067,0,0,0,0.927583,0.072357,0,0,0.951322,0.047244,0,0,0.917885,0.082014,0,0,0.897002,0.102867,0,0,0.881248,0.118621,0,0,0.910195,0.089718,0,0,0.816918,0.182922,0,0,0.841414,0.158456,0,0,0.733685,0.266105,0,0,0.561295,0.438357,0,0,0.666151,0.333405,0,0,0.521017,0.478755,0,0,0.695671,0.304216,0,0,0.882079,0.117895,0,0,0.966468,0.01704,0,0,0.987243,0,0,0,0.970158,0.009625,0,0,0.523331,0.26719,0.097538,0.031962,0.54296,0.264203,0.063659,0.063596,0.592947,0.236446,0.063584,0.038774,0.587336,0.230225,0.06597,0.062334,0.55668,0.221237,0.099396,0.055538,0.504202,0.203149,0.145729,0.068677,0.334809,0.331128,0.178332,0.075219,0.450437,0.298752,0.133606,0.034116,0.568438,0.168451,0.097077,0.090001,0.565062,0.176795,0.102599,0.07937,0.473097,0.243278,0.126864,0.088488,0.449564,0.247222,0.119945,0.114031,0.509616,0.187788,0.171537,0.054067,0.602075,0.138133,0.133991,0.040427,0.457134,0.240148,0.163556,0.059027,0.468715,0.220108,0.172915,0.058772,0.596287,0.153061,0.112097,0.057238,0.540726,0.191971,0.12443,0.067809,0.546336,0.171251,0.1533,0.05342,0.550557,0.178575,0.135635,0.058888,0.577299,0.282166,0.131635,0,0.641181,0.202836,0.140227,0,0.620375,0.250207,0.111625,0,0.579328,0.334301,0.067291,0,0.485312,0.178022,0.168753,0.088133,0.333631,0.228482,0.214738,0.123166,0.661601,0.128728,0.077527,0.077022,0.604258,0.14994,0.146551,0.027703,0.4447,0.22275,0.211343,0.052038,0.57117,0.17867,0.152985,0.011522,0.657768,0.314471,0,0,0.730761,0.207269,0.053626,0,0.709853,0.171453,0.107579,0,0.434762,0.407925,0.08757,0,0.582489,0.198892,0.128314,0.010192,0.821429,0.129573,0.009852,0,0.666739,0.190397,0.133606,0,0.52908,0.383571,0.039761,0.012481,0.473465,0.443082,0.036292,0.006116,0.487091,0.427726,0.051483,0,0.576258,0.332231,0.06092,0,0.57616,0.341515,0.017725,0.012118,0.718481,0.200736,0.015878,0,0.535357,0.357315,0.053107,0.006975,0.49382,0.40811,0.044595,0.016853,0.496929,0.35175,0.092582,0.008133,0.539794,0.305787,0.079479,0.011035,0.528262,0.359193,0.061828,0.011853,0.421272,0.300009,0.133885,0.061633,0.593343,0.184481,0.105863,0.0316,0.424212,0.380825,0.11627,0.017506,0.506254,0.221011,0.141598,0.052725,0.609141,0.126021,0.118487,0.067055,0.630208,0.132357,0.102592,0.074741,0.662885,0.144042,0.091041,0.069549,0.694584,0.182316,0.053579,0,0.548987,0.356945,0.034588,0.025425,0.628592,0.276314,0.067013,0,0.600962,0.308025,0.034508,0.024838,0.590778,0.307174,0.078841,0,0.718359,0.132705,0.110233,0.032443,0.707368,0.129697,0.118168,0.013075,0.352635,0.336006,0.162964,0.087908,0.378056,0.304736,0.1526,0.10717,0.769234,0.212505,0,0,0.707105,0.27215,0,0,0.536421,0.449247,0,0,0.525892,0.456147,0,0,0.98269,0,0,0,0.996125,0,0,0,0.995376,0,0,0,0.979629,0,0,0,0.993999,0,0,0,0.972929,0.004102,0,0,0.993786,0,0,0,0.970996,0.00796,0,0,0.986414,0,0,0,0.996779,0,0,0,0.997397,0,0,0,0.988275,0,0,0,0.994764,0,0,0,0.995272,0,0,0,0.975593,0,0,0,0.981528,0,0,0,0.982201,0,0,0,0.984476,0,0,0,0.995772,0,0,0,0.996321,0,0,0,0.984986,0,0,0,0.979134,0,0,0,0.995516,0,0,0,0.995061,0,0,0,0.995838,0,0,0,0.995508,0,0,0,0.9845,0,0,0,0.983327,0,0,0,0.987364,0,0,0,0.996882,0,0,0,0.967277,0.015429,0,0,0.966737,0.016513,0,0,0.989876,0,0,0,0.990666,0,0,0,0.968401,0.013179,0,0,0.991291,0,0,0,0.970882,0.008217,0,0,0.993123,0,0,0,0.994148,0,0,0,0.974275,0.001433,0,0,0.907381,0.092618,0,0,0.860672,0.139327,0,0,0.954671,0.040654,0,0,0.984529,0,0,0,0.970783,0.008427,0,0,0.993765,0,0,0,0.912472,0.087502,0,0,0.910962,0.089001,0,0,0.942197,0.057745,0,0,0.95562,0.038667,0,0,0.90591,0.094065,0,0,0.934676,0.065283,0,0,0.678725,0.321267,0,0,0.641448,0.358546,0,0,0.872582,0.12741,0,0,0.89251,0.10748,0,0,0.880162,0.119828,0,0,0.835705,0.164289,0,0,0.884023,0.115972,0,0,0.882596,0.117397,0,0,0.838172,0.161822,0,0,0.83181,0.168186,0,0,0.857605,0.14239,0,0,0.895396,0.104599,0,0,0.876863,0.123133,0,0,0.912112,0.087881,0,0,0.77394,0.226056,0,0,0.72907,0.270927,0,0,0.789545,0.210453,0,0,0.828846,0.171153,0,0,0.911341,0.088647,0,0,0.850407,0.149583,0,0,0.904784,0.095201,0,0,0.931643,0.068337,0,0,0.801575,0.198415,0,0,0.859946,0.14004,0,0,0.991465,0,0,0,0.995253,0,0,0,0.997239,0,0,0,0.995758,0,0,0,0.998082,0,0,0,0.998459,0,0,0,0.99844,0,0,0,0.998593,0,0,0,0.998125,0,0,0,0.997571,0,0,0,0.997064,0,0,0,0.994695,0,0,0,0.995188,0,0,0,0.995824,0,0,0,0.997063,0,0,0,0.965061,0.019825,0,0,0.96077,0.028428,0,0,0.890197,0.109796,0,0,0.955215,0.039548,0,0,0.951141,0.047699,0,0,0.879281,0.120714,0,0,0.935359,0.064633,0,0,0.918991,0.081002,0,0,0.921099,0.07889,0,0,0.918335,0.081653,0,0,0.928204,0.071779,0,0,0.983049,0,0,0,0.992364,0,0,0,0.981411,0,0,0,0.990941,0,0,0,0.995063,0,0,0,0.995786,0,0,0,0.985169,0,0,0,0.985598,0,0,0,0.967996,0,0,0,0.978848,0,0,0,0.907071,0.092909,0,0,0.632278,0.367717,0,0,0.986082,0,0,0,0.997872,0,0,0,0.979415,0,0,0,0.894688,0.105303,0,0,0.747622,0.252375,0,0,0.792345,0.207654,0,0,0.749939,0.250058,0,0,0.795013,0.204985,0,0,0.773061,0.226937,0,0,0.749071,0.250926,0,0,0.725038,0.274959,0,0,0.806073,0.193925,0,0,0.767902,0.232094,0,0,0.8082,0.191798,0,0,0.775596,0.224402,0,0,0.992324,0,0,0,0.681263,0.318732,0,0,0.779993,0.220004,0,0,0.59762,0.402375,0,0,0.681941,0.318053,0,0,0.639049,0.360946,0,0,0.905804,0.094195,0,0,0.85203,0.147968,0,0,0.681419,0.318577,0,0,0.898236,0.101763,0,0,0.676124,0.323873,0,0,0.819995,0.180003,0,0,0.910008,0.08999,0,0,0.971897,0.006205,0,0,0.831378,0.168603,0,0,0.748197,0.25179,0,0,0.970948,0.007877,0,0,0.970634,0.008593,0,0,0.960399,0.029012,0,0,0.999818,0,0,0,0.996983,0,0,0,0.996449,0,0,0,0.999669,0,0,0,0.9997,0,0,0,0.998885,0,0,0,0.999793,0,0,0,0.999444,0,0,0,0.999605,0,0,0,0.997643,0,0,0,0.998036,0,0,0,0.999394,0,0,0,0.998981,0,0,0,0.998583,0,0,0,0.999184,0,0,0,0.998754,0,0,0,0.99969,0,0,0,0.999457,0,0,0,0.99977,0,0,0,0.998062,0,0,0,0.998707,0,0,0,0.998686,0,0,0,0.999928,0,0,0,0.999299,0,0,0,0.9981,0,0,0,0.996515,0,0,0,0.9965,0,0,0,0.997064,0,0,0,0.997575,0,0,0,0.997933,0,0,0,0.999424,0,0,0,0.999743,0,0,0,0.998986,0,0,0,0.998781,0,0,0,0.998875,0,0,0,0.507287,0.235549,0.196304,0.001633,0.408139,0.331215,0.166868,0.026909,0.522881,0.280017,0.136929,0.005107,0.615272,0.190902,0.149861,0,0.700544,0.16271,0.099208,0,0.601585,0.253824,0.096692,0.00353,0.645986,0.245958,0.06205,0.013608,0.750838,0.154012,0.053003,0.016688,0.765293,0.147253,0.051628,0.0099,0.661305,0.248358,0.040414,0.021652,0.684297,0.2157,0.074447,0,0.704223,0.184385,0.089934,0,0.408087,0.370916,0.168126,0,0.38683,0.313921,0.228519,0.012684,0.46733,0.283205,0.19377,0,0.50167,0.346627,0.117082,0,0.628769,0.258248,0.087506,0,0.58127,0.222871,0.155045,0,0.693891,0.158637,0.116747,0,0.758303,0.152078,0.068342,0,0.838906,0.086458,0.053742,0,0.779295,0.09744,0.094433,0,0.827654,0.087798,0.047962,0.009843,0.879585,0.044299,0.043951,0,0.378324,0.303672,0.164049,0.081602,0.382799,0.308403,0.180055,0.071363,0.499864,0.237826,0.140549,0.076241,0.359115,0.316012,0.203125,0.063744,0.386602,0.285038,0.181205,0.073971,0.37918,0.278732,0.219042,0.059067,0.367301,0.290371,0.239329,0.051822,0.835243,0.084623,0.049882,0.002402,0.794535,0.097643,0.089222,0,0.876116,0.069572,0.028036,0,0.891144,0.036942,0.024249,0.00088,0.786372,0.169502,0.021166,0,0.741663,0.225078,0.001382,0,0.854714,0.106586,0.006863,0,0.771573,0.140949,0.075926,0,0.52175,0.452753,0,0,0.5424,0.443465,0,0,0.688158,0.292662,0,0,0.656978,0.296003,0.017893,0,0.854725,0.135109,0,0,0.817787,0.173321,0,0,0.718972,0.270872,0,0,0.706317,0.277981,0,0,0.894607,0.096334,0,0,0.927503,0.064656,0,0,0.963811,0.005306,0,0,0.939222,0.047746,0,0,0.834577,0.06739,0.057743,0.0044,0.891182,0.02188,0.015449,0.009535,0.672179,0.13679,0.098917,0.062903,0.713016,0.114762,0.105216,0.036994,0.724983,0.141927,0.090955,0,0.84378,0.092461,0.031836,0,0.834199,0.079946,0.05323,0,0.715566,0.122504,0.107012,0.017599,0.925747,0.018125,0.0003,0,0.948411,0.010685,0,0,0.969264,0,0,0,0.951176,0.008828,0,0,0.824127,0.121085,0,0,0.885332,0.068663,0,0,0.917439,0.060997,0,0,0.863308,0.1129,0,0,0.703791,0.19839,0.064788,0,0.544899,0.217079,0.212204,0,0.475395,0.370544,0.115563,0,0.564246,0.337669,0.02155,0.016602,0.886265,0.045533,0.008526,0,0.952036,0,0,0,0.953072,0,0,0,0.935459,0.011244,0,0,0.901808,0.036713,0.006209,0,0.899403,0.066538,0,0,0.92592,0.054203,0,0,0.932644,0.029033,0,0,0.899146,0.054671,0.00186,0,0.913867,0.041446,0.000778,0,0.834152,0.104475,0,0,0.859058,0.134193,0,0,0.906451,0.087564,0,0,0.936412,0.05914,0,0,0.884261,0.109554,0,0,0.76332,0.222047,0,0,0.855344,0.13151,0,0,0.815726,0.175205,0,0,0.722553,0.231996,0.001573,0,0.68881,0.283955,0,0,0.637091,0.317022,0.001947,0,0.534528,0.223042,0.165,0.018537,0.553746,0.324998,0.076571,0.001296,0.505979,0.260367,0.158869,0.028559,0.738515,0.190188,0.032456,0,0.450678,0.439925,0.082642,0,0.716199,0.170716,0.095167,0,0.849558,0.092927,0.03713,0,0.847779,0.072403,0.065007,0,0.91222,0.038257,0.018293,0,0.976331,0,0,0,0.947178,0,0,0,0.971449,0,0,0,0.955394,0,0,0,0.973525,0,0,0,0.946607,0.032701,0,0,0.964121,0.010679,0,0,0.953124,0.009582,0,0,0.601526,0.190509,0.142429,0.006546,0.798868,0.091386,0.078464,0,0.590746,0.263709,0.076391,0.012686,0.502386,0.377959,0.061805,0,0.379721,0.262708,0.154438,0.136155,0.453663,0.226617,0.143509,0.118749,0.548541,0.202107,0.115642,0.090995,0.496303,0.222433,0.136853,0.071802,0.448948,0.255213,0.148358,0.076026,0.510768,0.204847,0.147935,0.062768,0.504075,0.196861,0.1699,0.056395,0.454896,0.228721,0.188101,0.058774,0.463735,0.235638,0.161613,0.066874,0.344914,0.31189,0.24555,0.035859,0.385832,0.295036,0.19833,0.052314,0.369093,0.328588,0.185733,0.049896,0.420782,0.271637,0.228021,0.017094,0.423315,0.229481,0.223681,0.055448,0.472324,0.202272,0.196766,0.055496,0.429199,0.237468,0.197436,0.05962,0.34996,0.29227,0.247333,0.048961,0.319728,0.309382,0.280463,0.033097,0.396305,0.323813,0.210273,0.015635,0.376931,0.279356,0.256283,0.035072,0.337633,0.288512,0.266026,0.050391,0.837639,0.116669,0.010663,0,0.732246,0.169278,0.069132,0,0.718343,0.209896,0.05131,0,0.791338,0.17999,0,0,0.832678,0.152291,0,0,0.879673,0.110771,0,0,0.909139,0.077201,0,0,0.885004,0.091802,0,0,0.950279,0.035588,0,0,0.905753,0.071617,0,0,0.980613,0,0,0,0.988939,0,0,0,0.992759,0,0,0,0.9684,0.006788,0,0,0.994175,0,0,0,0.975987,0,0,0,0.994741,0,0,0,0.983542,0,0,0,0.995119,0,0,0,0.987113,0,0,0,0.993816,0,0,0,0.986149,0,0,0,0.987911,0,0,0,0.970705,0,0,0,0.945982,0.010887,0,0,0.918662,0.050089,0,0,0.86882,0.086631,0,0,0.918095,0.023816,0.014576,0,0.479753,0.246335,0.164191,0.063523,0.587476,0.182045,0.141285,0.054171,0.577353,0.179301,0.164207,0.041055,0.47252,0.241544,0.187272,0.05423,0.478768,0.219945,0.2179,0.03759,0.59528,0.187806,0.153971,0.019151,0.511692,0.287033,0.149751,0,0.607496,0.258333,0.098599,0,0.605424,0.216983,0.128399,0.001603,0.495388,0.251897,0.185832,0.017513,0.586543,0.321998,0.067972,0,0.507319,0.351598,0.106291,0,0.466421,0.44002,0.070997,0,0.506981,0.444024,0.02215,0,0.678302,0.290628,0,0,0.662524,0.276448,0.04157,0,0.80254,0.151354,0.016708,0,0.839914,0.140432,0,0,0.918204,0.06694,0,0,0.886927,0.076408,0,0,0.923865,0.030167,0,0,0.957612,0.005603,0,0,0.935642,0.000778,0,0,0.923571,0.047392,0,0,0.946563,0.021952,0,0,0.964323,0,0,0,0.881065,0.094046,0,0,0.812408,0.165943,0,0,0.854807,0.127312,0,0,0.91339,0.069321,0,0,0.57399,0.177104,0.107472,0.098984,0.720659,0.106936,0.075629,0.070283,0.717331,0.10591,0.09429,0.054625,0.996469,0,0,0,0.995399,0,0,0,0.952275,0.045321,0,0,0.887465,0.112503,0,0,0.820367,0.179614,0,0,0.840241,0.159739,0,0,0.928618,0.07133,0,0,0.803312,0.196674,0,0,0.74464,0.255347,0,0,0.733512,0.266475,0,0,0.649779,0.114696,0.090387,0.071381,0.515197,0.366454,0.073234,0.002959,0.466851,0.425399,0.064199,0.002941,0.472543,0.302125,0.148034,0.035095,0.480228,0.286899,0.154639,0.034858,0.56558,0.404573,0,0,0.501879,0.447425,0.006144,0,0.556498,0.390687,0.009722,0,0.615571,0.35563,0,0,0.63195,0.351184,0,0,0.67228,0.311568,0,0,0.757912,0.232348,0,0,0.675445,0.314232,0,0,0.876304,0.05211,0.036135,0,0.726901,0.134423,0.063057,0.054415,0.785294,0.157416,0,0,0.890146,0.0733,0,0,0.762635,0.2045,0,0,0.72325,0.255689,0,0,0.81784,0.167698,0,0,0.879165,0.100076,0,0,0.525345,0.462161,0,0,0.561561,0.421639,0,0,0.527268,0.454767,0,0,0.592496,0.396562,0,0,0.53325,0.456363,0,0,0.507414,0.482393,0,0,0.622124,0.368345,0,0,0.675578,0.312581,0,0,0.508254,0.391815,0.030407,0.004842,0.437661,0.428499,0.09006,0,0.464551,0.433008,0.022031,0.01754,0.544125,0.339744,0.095743,0,0.59226,0.283217,0.107126,0,0.932453,0.058678,0,0,0.91341,0.080005,0,0,0.589038,0.232889,0.087541,0.061914,0.41081,0.381221,0.125163,0.049799,0.531472,0.372901,0.053183,0.00444,0.650977,0.271689,0.028225,0.001885,0.495653,0.474883,0,0,0.601433,0.372546,0,0,0.651936,0.306378,0,0,0.535393,0.416378,0.001571,0,0.436325,0.426267,0.062477,0.010146,0.721945,0.208713,0.00788,0,0.775554,0.197792,0,0,0.388901,0.303878,0.299287,0,0.431498,0.418558,0.141965,0,0.533548,0.429398,0.010226,0,0.582677,0.39827,0,0,0.908827,0.059951,0,0,0.922849,0.034142,0.005892,0,0.921607,0.022331,0.02136,0,0.998167,0,0,0,0.998371,0,0,0,0.99965,0,0,0,0.998997,0,0,0,0.998032,0,0,0,0.99855,0,0,0,0.548731,0.451262,0,0,0.996169,0,0,0,0.999901,0,0,0,0.992338,0,0,0,0.915886,0.084074,0,0,0.958849,0.032174,0,0,0.960769,0.028396,0,0,0.973503,0.002906,0,0,0.732623,0.258797,0,0,0.797285,0.194982,0,0,0.840361,0.15199,0,0,0.767728,0.221504,0,0,0.758077,0.230545,0,0,0.652149,0.332827,0,0,0.621102,0.367326,0,0,0.655001,0.334773,0,0,0.995159,0,0,0,0.523078,0.26762,0.097303,0.032046,0.588244,0.230091,0.065355,0.060971,0.336292,0.331017,0.177308,0.074881,0.506748,0.202983,0.144276,0.068126,0.558507,0.221032,0.098393,0.053098,0.450209,0.299642,0.133036,0.033659,0.47781,0.239599,0.125364,0.089203,0.572877,0.172545,0.100774,0.079211,0.575947,0.164718,0.096601,0.088374,0.453403,0.244524,0.120187,0.113064,0.515561,0.190601,0.167313,0.052535,0.474448,0.226649,0.169006,0.055134,0.46109,0.249005,0.159474,0.055138,0.609114,0.138265,0.130104,0.039438,0.546493,0.187635,0.122634,0.068705,0.603049,0.148902,0.110792,0.057507,0.55189,0.166763,0.152632,0.054078,0.556131,0.174105,0.134129,0.059888,0.56391,0.295425,0.131918,0,0.570513,0.338349,0.07343,0,0.623963,0.244276,0.114607,0,0.642364,0.199764,0.142496,0,0.335307,0.227166,0.214763,0.122811,0.48841,0.17617,0.168659,0.08745,0.603219,0.149828,0.147154,0.027701,0.444424,0.223634,0.210658,0.051832,0.570112,0.178643,0.153507,0.011534,0.703176,0.179219,0.106639,0,0.698214,0.240288,0.053312,0,0.582666,0.389934,0,0,0.434578,0.406672,0.088224,0,0.581016,0.198945,0.128879,0.010252,0.66529,0.190322,0.135369,0,0.818379,0.1332,0.011126,0,0.491054,0.422938,0.05452,0,0.472667,0.444729,0.041728,0.000896,0.532038,0.380764,0.044403,0.008572,0.579696,0.327536,0.063667,0,0.577354,0.344759,0.013816,0.010384,0.706442,0.216108,0.012469,0,0.493827,0.402467,0.050346,0.008291,0.504498,0.400149,0.038106,0.019435,0.515132,0.339351,0.087481,0.009169,0.541177,0.349855,0.057939,0.013927,0.526443,0.325142,0.075713,0.011015,0.418449,0.312307,0.128345,0.060129,0.440628,0.371977,0.110491,0.017463,0.594522,0.192193,0.101951,0.028762,0.563491,0.179132,0.134275,0.043844,0.620101,0.167657,0.100584,0.025407,0.614315,0.123572,0.118035,0.064583,0.634128,0.131965,0.10076,0.069686,0.665216,0.143764,0.087121,0.068427,0.719642,0.129704,0.110062,0.030953,0.689233,0.193333,0.051215,0,0.552355,0.355379,0.029251,0.028354,0.602648,0.306699,0.038867,0.020519,0.631252,0.272014,0.069718,0,0.595774,0.300054,0.081916,0,0.355341,0.332523,0.161828,0.089207,0.37553,0.306873,0.152031,0.107884,0.751317,0.230145,0,0,0.50907,0.471783,0,0,0.653329,0.32626,0,0,0.982573,0,0,0,0.979501,0,0,0,0.995354,0,0,0,0.996106,0,0,0,0.972809,0.004343,0,0,0.993978,0,0,0,0.970921,0.00811,0,0,0.993771,0,0,0,0.986371,0,0,0,0.988215,0,0,0,0.99739,0,0,0,0.996772,0,0,0,0.975572,0,0,0,0.99527,0,0,0,0.99476,0,0,0,0.981497,0,0,0,0.982192,0,0,0,0.996311,0,0,0,0.995767,0,0,0,0.984468,0,0,0,0.984978,0,0,0,0.995057,0,0,0,0.995514,0,0,0,0.979123,0,0,0,0.984484,0,0,0,0.995497,0,0,0,0.995824,0,0,0,0.983315,0,0,0,0.987285,0,0,0,0.996868,0,0,0,0.989942,0,0,0,0.966909,0.016169,0,0,0.967582,0.014819,0,0,0.990754,0,0,0,0.968816,0.012347,0,0,0.991398,0,0,0,0.971412,0.007155,0,0,0.993221,0,0,0,0.994232,0,0,0,0.974638,0.000706,0,0,0.907434,0.092565,0,0,0.984554,0,0,0,0.9548,0.040396,0,0,0.860925,0.139073,0,0,0.993791,0,0,0,0.970853,0.008286,0,0,0.942161,0.057781,0,0,0.910912,0.08905,0,0,0.912386,0.087588,0,0,0.955558,0.038792,0,0,0.678691,0.321301,0,0,0.934657,0.065301,0,0,0.905874,0.0941,0,0,0.6414,0.358595,0,0,0.872392,0.1276,0,0,0.835502,0.164492,0,0,0.880009,0.119981,0,0,0.892352,0.107638,0,0,0.837822,0.162173,0,0,0.882336,0.117657,0,0,0.883403,0.116591,0,0,0.830885,0.169111,0,0,0.856228,0.143767,0,0,0.894459,0.105535,0,0,0.911288,0.088706,0,0,0.87559,0.124405,0,0,0.792038,0.20796,0,0,0.727514,0.272483,0,0,0.773375,0.22662,0,0,0.829554,0.170444,0,0,0.904619,0.095366,0,0,0.850177,0.149813,0,0,0.911068,0.08892,0,0,0.931484,0.068496,0,0,0.859816,0.14017,0,0,0.801436,0.198554,0,0,0.995205,0,0,0,0.991349,0,0,0,0.99575,0,0,0,0.997228,0,0,0,0.998091,0,0,0,0.99848,0,0,0,0.998455,0,0,0,0.998618,0,0,0,0.998149,0,0,0,0.997594,0,0,0,0.997112,0,0,0,0.995851,0,0,0,0.995269,0,0,0,0.994688,0,0,0,0.997123,0,0,0,0.889539,0.110454,0,0,0.960536,0.028896,0,0,0.964941,0.020065,0,0,0.954864,0.040253,0,0,0.878097,0.121898,0,0,0.950741,0.048499,0,0,0.934862,0.065131,0,0,0.918583,0.08141,0,0,0.920911,0.079079,0,0,0.928101,0.071883,0,0,0.918196,0.081793,0,0,0.983018,0,0,0,0.992256,0,0,0,0.98106,0,0,0,0.995,0,0,0,0.990768,0,0,0,0.995754,0,0,0,0.984879,0,0,0,0.985272,0,0,0,0.978428,0,0,0,0.967334,0,0,0,0.907001,0.092979,0,0,0.63215,0.367846,0,0,0.997879,0,0,0,0.986099,0,0,0,0.979375,0,0,0,0.894511,0.10548,0,0,0.799064,0.200935,0,0,0.744794,0.255203,0,0,0.746995,0.253002,0,0,0.745517,0.25448,0,0,0.803806,0.196192,0,0,0.79945,0.200548,0,0,0.808057,0.191941,0,0,0.723656,0.276341,0,0,0.808921,0.191077,0,0,0.767502,0.232493,0,0,0.775811,0.224187,0,0,0.992422,0,0,0,0.681007,0.318989,0,0,0.780042,0.219955,0,0,0.681794,0.3182,0,0,0.597669,0.402326,0,0,0.639041,0.360954,0,0,0.681403,0.318593,0,0,0.852013,0.147985,0,0,0.905803,0.094196,0,0,0.676121,0.323876,0,0,0.898233,0.101766,0,0,0.820039,0.179959,0,0,0.909997,0.090002,0,0,0.9719,0.006199,0,0,0.831311,0.16867,0,0,0.748124,0.251864,0,0,0.970587,0.008685,0,0,0.970924,0.007923,0,0,0.960381,0.029046,0,0,0.999819,0,0,0,0.999671,0,0,0,0.996454,0,0,0,0.996985,0,0,0,0.998887,0,0,0,0.9997,0,0,0,0.999448,0,0,0,0.999793,0,0,0,0.999606,0,0,0,0.997634,0,0,0,0.998033,0,0,0,0.999397,0,0,0,0.99919,0,0,0,0.9986,0,0,0,0.998991,0,0,0,0.998786,0,0,0,0.999723,0,0,0,0.999771,0,0,0,0.999464,0,0,0,0.998695,0,0,0,0.998716,0,0,0,0.998061,0,0,0,0.999929,0,0,0,0.999303,0,0,0,0.998112,0,0,0,0.996542,0,0,0,0.996534,0,0,0,0.997097,0,0,0,0.997604,0,0,0,0.997959,0,0,0,0.999435,0,0,0,0.999747,0,0,0,0.999,0,0,0,0.998794,0,0,0,0.998883,0,0,0,0.523457,0.231582,0.184865,0.002086,0.62888,0.185924,0.141285,0,0.538634,0.272625,0.129402,0.005745,0.42236,0.32746,0.158602,0.025546,0.709456,0.158524,0.093725,0,0.754435,0.151092,0.050352,0.021182,0.651694,0.242715,0.058304,0.016994,0.615053,0.245798,0.091135,0.005315,0.686167,0.211893,0.077179,0,0.661447,0.247706,0.045416,0.018158,0.765273,0.145224,0.055043,0.007497,0.705097,0.181639,0.092176,0,0.42015,0.357241,0.169495,0,0.542568,0.306657,0.116258,0,0.492554,0.259444,0.192654,0,0.408428,0.291401,0.229507,0.012722,0.663012,0.225139,0.086126,0,0.768423,0.140502,0.06867,0,0.707261,0.14669,0.114777,0,0.599509,0.206398,0.153198,0,0.842349,0.080601,0.05427,0,0.879457,0.044886,0.036507,0.002498,0.828264,0.087187,0.042054,0.016098,0.784573,0.096269,0.088965,0,0.378118,0.310002,0.17869,0.07391,0.380819,0.298993,0.161742,0.084269,0.496702,0.239039,0.140444,0.077472,0.353066,0.317032,0.200642,0.067846,0.359673,0.290882,0.23881,0.055941,0.377879,0.269791,0.206239,0.071049,0.388262,0.279068,0.176537,0.078916,0.859916,0.086704,0.029024,0,0.786283,0.098052,0.097756,0,0.831263,0.08446,0.055744,0,0.886006,0.038557,0.037825,0,0.751869,0.204592,0.020554,0,0.755614,0.157399,0.075824,0,0.824759,0.13729,0.006864,0,0.687934,0.279747,0,0,0.504211,0.471527,0,0,0.640089,0.314067,0.015967,0,0.68156,0.300223,0,0,0.5652,0.421663,0,0,0.877251,0.113796,0,0,0.732566,0.25313,0,0,0.746465,0.244256,0,0,0.840656,0.151064,0,0,0.968262,0,0,0,0.941813,0.051055,0,0,0.909145,0.081924,0,0,0.943957,0.035937,0,0,0.670084,0.137146,0.099653,0.063482,0.890629,0.022522,0.015451,0.009921,0.833209,0.068351,0.057682,0.004998,0.710375,0.114835,0.106754,0.038198,0.720606,0.146097,0.090457,5e-05,0.712025,0.125192,0.106851,0.018785,0.832675,0.081271,0.053024,0,0.842673,0.093729,0.031065,0,0.91904,0.028098,0,0,0.943761,0.021485,0,0,0.967039,0,0,0,0.946054,0.007769,0,0,0.823989,0.120596,0,0,0.860976,0.114655,0,0,0.909838,0.067611,0,0,0.897175,0.059543,0,0,0.699745,0.204243,0.063135,0,0.561326,0.339646,0.022018,0.017784,0.463095,0.388585,0.110725,0,0.538785,0.221242,0.214286,0,0.951923,0,0,0,0.885764,0.046117,0.00873,0,0.952894,0,0,0,0.935406,0.011083,0,0,0.901349,0.037275,0.006102,0,0.899929,0.066114,0,0,0.898879,0.054875,0.001592,0,0.932968,0.028271,0,0,0.927265,0.052934,0,0,0.833285,0.105567,0,0,0.913361,0.043253,0,0,0.866825,0.126856,0,0,0.890694,0.103436,0,0,0.939605,0.056134,0,0,0.910647,0.083753,0,0,0.773815,0.212605,0,0,0.824985,0.166594,0,0,0.859763,0.127988,0,0,0.725387,0.233314,0,0,0.639547,0.317841,0,0,0.696217,0.278476,0,0,0.507838,0.22764,0.189357,0.013246,0.482299,0.285313,0.161458,0.01814,0.554409,0.330981,0.073522,0,0.736168,0.190179,0.033819,0,0.84818,0.09251,0.039799,0,0.713508,0.16973,0.098503,0,0.451153,0.437067,0.083579,0,0.911476,0.037426,0.020299,0,0.846297,0.07465,0.064162,0,0.976212,0,0,0,0.946835,0,0,0,0.955569,0,0,0,0.971437,0,0,0,0.973899,0,0,0,0.948052,0.029852,0,0,0.953721,0.008269,0,0,0.965463,0.008047,0,0,0.586416,0.191232,0.159739,0.004787,0.793462,0.091349,0.08517,0,0.590212,0.263356,0.076809,0.012774,0.452211,0.227857,0.143814,0.118539,0.378175,0.264176,0.154742,0.135875,0.501748,0.377413,0.0622,0,0.546463,0.203146,0.11563,0.091649,0.45261,0.250686,0.146117,0.078098,0.50095,0.218011,0.134816,0.073317,0.457635,0.222538,0.183785,0.063232,0.508501,0.191758,0.168171,0.058306,0.515338,0.200046,0.145739,0.064666,0.467133,0.230389,0.158441,0.069965,0.356114,0.31297,0.235244,0.03444,0.436112,0.269836,0.215812,0.01616,0.369074,0.339834,0.17835,0.046798,0.388694,0.304545,0.191925,0.049414,0.427415,0.224255,0.223457,0.0566,0.353322,0.299268,0.239498,0.047098,0.438142,0.245386,0.194119,0.053243,0.477691,0.204201,0.191921,0.054871,0.365592,0.285778,0.257904,0.038736,0.370725,0.345397,0.2131,0.016651,0.329681,0.296449,0.282834,0.034081,0.340497,0.279156,0.267503,0.053194,0.70571,0.223202,0.050681,0,0.725459,0.176286,0.068597,0,0.836905,0.117907,0.009638,0,0.790456,0.181819,0,0,0.912116,0.074457,0,0,0.885083,0.105706,0,0,0.835307,0.150283,0,0,0.887217,0.089962,0,0,0.981345,0,0,0,0.906231,0.07216,0,0,0.951459,0.033997,0,0,0.989193,0,0,0,0.992957,0,0,0,0.969467,0.004996,0,0,0.994346,0,0,0,0.976931,0,0,0,0.984078,0,0,0,0.994871,0,0,0,0.995179,0,0,0,0.987319,0,0,0,0.993806,0,0,0,0.986156,0,0,0,0.987823,0,0,0,0.970451,0,0,0,0.945542,0.010469,0,0,0.917947,0.049709,0,0,0.867374,0.086519,0,0,0.91665,0.023472,0.018624,0,0.583587,0.182504,0.142542,0.055415,0.475325,0.247317,0.164233,0.065462,0.57217,0.179495,0.166763,0.043808,0.588376,0.19332,0.153663,0.021098,0.471208,0.221636,0.220186,0.04158,0.466774,0.242163,0.188047,0.056644,0.593018,0.228259,0.128473,0.002738,0.583858,0.281272,0.098896,0,0.481283,0.314797,0.151506,0.000563,0.481178,0.263204,0.186808,0.019581,0.548444,0.360659,0.067439,0,0.477391,0.475013,0.019658,0,0.547225,0.360591,0.069726,0,0.465889,0.392435,0.106722,0,0.701821,0.268672,0,0,0.859109,0.12262,0,0,0.814833,0.13918,0.015157,0,0.696873,0.243685,0.038203,0,0.929802,0.05606,0,0,0.9619,0,0,0,0.926869,0.020304,0,0,0.893805,0.069015,0,0,0.937669,0.040855,0,0,0.910378,0.063515,0,0,0.932629,0.013729,0,0,0.962918,0,0,0,0.854276,0.121655,0,0,0.900082,0.08258,0,0,0.837652,0.144372,0,0,0.778117,0.200592,0,0,0.572522,0.177986,0.107843,0.098963,0.716628,0.105935,0.09467,0.054742,0.719494,0.107279,0.075892,0.070607,0.996482,0,0,0,0.995435,0,0,0,0.952258,0.045353,0,0,0.887428,0.112539,0,0,0.928591,0.071356,0,0,0.840205,0.159774,0,0,0.820325,0.179656,0,0,0.803277,0.196709,0,0,0.733477,0.266511,0,0,0.744592,0.255395,0,0,0.666968,0.108163,0.078211,0.068184,0.507347,0.377469,0.072406,0,0.441896,0.321352,0.159861,0.027118,0.413624,0.347387,0.157968,0.033581,0.45101,0.43757,0.066975,0.001082,0.553314,0.394554,0.010012,0,0.481281,0.464313,0.011401,0,0.553154,0.415183,0,0,0.618464,0.353659,0,0,0.67043,0.319336,0,0,0.765389,0.225362,0,0,0.682293,0.302184,0,0,0.626104,0.356403,0,0,0.875518,0.045158,0.042534,0,0.889879,0.069256,0,0,0.792332,0.145388,0.003077,0.000414,0.730806,0.120719,0.066155,0.056986,0.774157,0.190274,0,0,0.885908,0.091488,0,0,0.833203,0.151741,0,0,0.738994,0.238562,0,0,0.510654,0.470099,0,0,0.579903,0.402339,0,0,0.547115,0.440091,0,0,0.574925,0.413992,0,0,0.562822,0.42733,0,0,0.664306,0.324482,0,0,0.600462,0.390301,0,0,0.526513,0.463558,0,0,0.469545,0.425983,0.022275,0.021195,0.468642,0.398315,0.089996,0,0.506613,0.391795,0.031155,0.006879,0.592448,0.281913,0.107496,0,0.545161,0.336897,0.096732,0,0.917939,0.075688,0,0,0.935259,0.055995,0,0,0.555618,0.342083,0.056845,0.005658,0.448857,0.327106,0.133904,0.051565,0.60565,0.20423,0.091213,0.064769,0.666576,0.250241,0.033597,0.003994,0.667376,0.287354,0,0,0.617865,0.353999,0,0,0.512185,0.455538,0,0,0.554726,0.392302,0.007323,0,0.729177,0.201467,0.008101,0,0.783118,0.189976,0,0,0.908228,0.061632,0,0,0.922647,0.035404,0.005538,0,0.998167,0,0,0,0.998371,0,0,0,0.998997,0,0,0,0.99965,0,0,0,0.998033,0,0,0,0.99855,0,0,0,0.548692,0.451301,0,0,0.996173,0,0,0,0.999902,0,0,0,0.992201,0,0,0,0.915861,0.084098,0,0,0.958834,0.032204,0,0,0.97343,0.003051,0,0,0.960674,0.028587,0,0,0.728214,0.263535,0,0,0.768821,0.221052,0,0,0.846544,0.146195,0,0,0.804162,0.188518,0,0,0.77961,0.209004,0,0,0.684107,0.306018,0,0,0.647227,0.341166,0,0,0.672251,0.312111,0,0,0.995162,0,0,0,0.722471,0.172321,0.068156,0,0.588927,0.268002,0.089316,0.019349,0.490067,0.29283,0.099063,0.06264,0.611707,0.167362,0.082118,0.072225,0.49516,0.278373,0.113065,0.06357,0.588439,0.263468,0.090642,0.030181,0.724693,0.16814,0.06858,0.00125,0.624029,0.15821,0.082914,0.075367,0.694493,0.194683,0.040804,0.026625,0.805764,0.10292,0.035798,0.013102,0.599202,0.279641,0.053101,0.01713,0.377667,0.250404,0.243671,0.068562,0.409376,0.361341,0.128699,0.049072,0.452033,0.231525,0.163122,0.099821,0.607925,0.138614,0.114191,0.095736,0.847179,0.07594,0.026807,0,0.728056,0.170699,0.032004,0.017553,0.609971,0.268888,0.053292,0.011681,0.508149,0.229521,0.137145,0.050411,0.30896,0.302991,0.260489,0.062291,0.391938,0.360998,0.15044,0.050165,0.464733,0.196336,0.175076,0.099943,0.690876,0.108622,0.09467,0.071412,0.506591,0.175578,0.138818,0.12506,0.518177,0.151573,0.139242,0.125745,0.686836,0.157408,0.054728,0.039274,0.715241,0.08452,0.082533,0.055234,0.543731,0.3783,0.019976,0.019485,0.603021,0.21083,0.152064,0,0.505584,0.445833,0.034568,0,0.518149,0.461815,0,0,0.573376,0.318103,0.029496,0.006593,0.688665,0.143416,0.095072,0.024696,0.705519,0.122104,0.073343,0.068453,0.504086,0.382412,0.061258,0,0.680507,0.176054,0.130834,0,0.847303,0.079487,0.052746,0,0.883536,0.089294,0,0,0.678614,0.16087,0.055712,0.039651,0.505462,0.446364,0.033444,0,0.600323,0.21284,0.151425,0,0.569553,0.316752,0.031569,0.012833,0.64138,0.165408,0.110444,0.032889,0.677756,0.177703,0.131296,0,0.847451,0.078694,0.053052,0,0.524561,0.2016,0.121595,0.083235,0.517682,0.370011,0.060277,0,0.416943,0.31425,0.130647,0.061621,0.507626,0.210731,0.12382,0.094467,0.280494,0.246256,0.24311,0.106539,0.286477,0.276664,0.226576,0.088718,0.272667,0.266884,0.230194,0.090047,0.347764,0.208173,0.190565,0.108128,0.392594,0.257105,0.173091,0.085618,0.27254,0.264242,0.209574,0.128302,0.431709,0.300923,0.130177,0.055038,0.360161,0.219828,0.185951,0.112044,0.412432,0.245928,0.168859,0.074146,0.322569,0.232351,0.221623,0.093181,0.336949,0.315373,0.185347,0.05645,0.337043,0.279407,0.221715,0.082865,0.343513,0.285684,0.210477,0.081556,0.33769,0.316208,0.184333,0.056314,0.332026,0.300414,0.207501,0.081135,0.336833,0.317772,0.183868,0.056424,0.320135,0.308986,0.210752,0.081285,0.335347,0.318459,0.184361,0.056706,0.313639,0.302619,0.222207,0.082459,0.334592,0.317595,0.185386,0.056934,0.309781,0.287571,0.240729,0.083178,0.334506,0.316669,0.186134,0.056912,0.310843,0.278174,0.249367,0.083287,0.335075,0.315583,0.186538,0.056781,0.320921,0.276682,0.240172,0.083513,0.336119,0.315089,0.186163,0.056575,0.336753,0.267705,0.228966,0.095048,0.347519,0.2733,0.215475,0.092358,0.338994,0.285879,0.212151,0.091409,0.318463,0.302413,0.215881,0.091787,0.308721,0.296026,0.229497,0.094099,0.302725,0.277381,0.252877,0.095927,0.303018,0.265927,0.26424,0.096346,0.315447,0.264445,0.25247,0.096623,0.332963,0.259718,0.229785,0.11088,0.345877,0.264593,0.21779,0.105146,0.339225,0.275744,0.215128,0.103011,0.317878,0.292604,0.218662,0.104013,0.306817,0.287012,0.230666,0.108607,0.299395,0.26889,0.251636,0.113931,0.299071,0.262101,0.257899,0.115433,0.311049,0.256343,0.251072,0.115538,0.322262,0.255927,0.224831,0.133013,0.335901,0.2603,0.2194,0.120153,0.332913,0.267712,0.218747,0.115896,0.320146,0.27457,0.221958,0.118335,0.308339,0.273786,0.226566,0.126844,0.299522,0.261871,0.23116,0.144049,0.300232,0.255262,0.234385,0.14695,0.306794,0.252095,0.230049,0.147977,0.707179,0.173087,0.026879,0.012008,0.63666,0.204942,0.050537,0.037727,0.56575,0.25162,0.080259,0.03187,0.685857,0.201145,0.04008,0.002108,0.756717,0.147601,0.008056,0,0.803163,0.133093,0,0,0.803403,0.132816,0,0,0.75393,0.149438,0.003451,0.002039,0.686584,0.200426,0.031389,0,0.708213,0.173125,0.017853,0.009988,0.567159,0.250596,0.071454,0.029966,0.638328,0.205564,0.036654,0.027527,0.579132,0.230957,0.050043,0.045445,0.500829,0.277459,0.06423,0.062246,0.544986,0.242188,0.060362,0.055367,0.472137,0.288499,0.06614,0.060597,0.471048,0.288772,0.070257,0.066899,0.54148,0.242026,0.068996,0.054739,0.498772,0.278469,0.082705,0.057001,0.572787,0.230095,0.06142,0.055743,0.483962,0.330194,0.085693,0.029015,0.621274,0.277405,0.035764,0,0.829783,0.134776,0,0,0.829652,0.134688,0,0,0.621891,0.275821,0.030549,0,0.485125,0.327421,0.080583,0.025662,0.42459,0.341536,0.083153,0.053888,0.394445,0.350841,0.066832,0.064962,0.393818,0.352059,0.073166,0.070406,0.423356,0.344874,0.090217,0.055769,0.454975,0.393056,0.064102,0.019498,0.469857,0.443056,0.024555,0,0.765101,0.210517,0,0,0.765587,0.209852,0,0,0.470195,0.440871,0.02238,0,0.450409,0.394301,0.062214,0.015098,0.430197,0.326402,0.089263,0.054286,0.408418,0.316825,0.072861,0.068902,0.409691,0.315606,0.076729,0.072718,0.438719,0.323536,0.091207,0.056979,0.783577,0.105507,0.054311,0.002766,0.892049,0.076403,0,0,0.884657,0.088471,0,0,0.884654,0.088478,0,0,0.891072,0.076435,0,0,0.773067,0.107639,0.057665,0.001306,0.600173,0.133414,0.099644,0.060908,0.55137,0.139569,0.092281,0.083232,0.578058,0.135583,0.08612,0.076464,0.643345,0.122498,0.088604,0.061002,0.383915,0.36965,0.11977,0.048136,0.331181,0.263123,0.159292,0.105312,0.314738,0.25518,0.221646,0.078162,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,0.345756,0.273051,0.156237,0.117018,0.333338,0.241619,0.17646,0.141807,0.499354,0.129326,0.119381,0.095322,0.301243,0.278978,0.217427,0.079312,1.00001,0,0,0,1.00001,0,0,0,0.94632,0,0,0,0.949118,0,0,0,0.948618,0,0,0,0.940266,0,0,0,0.932978,0,0,0,0.939095,0,0,0,0.923451,0,0,0,0.916377,0,0,0,0.963933,0,0,0,0.9638,0,0,0,0.964426,0,0,0,0.964282,0,0,0,0.961496,0,0,0,0.961515,0,0,0,0.961919,0,0,0,0.961933,0,0,0,0.962947,0,0,0,0.962796,0,0,0,0.961149,0,0,0,0.961017,0,0,0,0.95901,0,0,0,0.959092,0,0,0,0.960109,0,0,0,0.960364,0,0,0,0.944118,0,0,0,0.949043,0,0,0,0.945757,0,0,0,0.955115,0,0,0,0.955486,0,0,0,0.949872,0,0,0,0.94996,0,0,0,0.963123,0,0,0,0.962437,0,0,0,0.962766,0,0,0,0.963914,0,0,0,0.961646,0,0,0,0.961606,0,0,0,0.960163,0,0,0,0.960644,0,0,0,0.960964,0,0,0,0.960563,0,0,0,0.952055,0,0,0,0.949958,0,0,0,0.94876,0,0,0,0.950688,0,0,0,0.954538,0,0,0,0.956378,0,0,0,0.956975,0,0,0,0.957941,0,0,0,0.959748,0,0,0,0.9599,0,0,0,0.96128,0,0,0,0.960558,0,0,0,0.959723,0,0,0,0.960591,0,0,0,0.967157,0,0,0,0.966308,0,0,0,0.966985,0,0,0,0.968614,0,0,0,0.962505,0,0,0,0.962273,0,0,0,0.963339,0,0,0,0.963805,0,0,0,0.961763,0,0,0,0.961663,0,0,0,0.961086,0,0,0,0.961263,0,0,0,0.959936,0,0,0,0.958118,0,0,0,0.958789,0,0,0,0.960209,0,0,0,0.953707,0,0,0,0.954581,0,0,0,0.946483,0,0,0,0.948166,0,0,0,0.927845,0,0,0,0.926206,0,0,0,0.937421,0,0,0,0.936416,0,0,0,0.962821,0,0,0,0.963075,0,0,0,0.963199,0,0,0,0.963093,0,0,0,0.958663,0,0,0,0.960037,0,0,0,0.960008,0,0,0,0.95634,0,0,0,0.953466,0,0,0,0.954076,0,0,0,0.95639,0,0,0,0.955496,0,0,0,0.95606,0,0,0,0.947162,0,0,0,0.949117,0,0,0,0.930641,0,0,0,0.938617,0,0,0,0.966667,0,0,0,0.963024,0,0,0,0.963112,0,0,0,0.961748,0,0,0,0.961665,0,0,0,0.961013,0,0,0,0.961248,0,0,0,0.960727,0,0,0,0.959861,0,0,0,0.959554,0,0,0,0.958491,0,0,0,0.962801,0,0,0,0.962984,0,0,0,0.954594,0,0,0,0.956315,0,0,0,0.958451,0,0,0,0.959952,0,0,0,0.961697,0,0,0,0.962055,0,0,0,0.960894,0,0,0,0.960827,0,0,0,0.956283,0,0,0,0.958034,0,0,0,0.958272,0,0,0,0.95745,0,0,0,0.956653,0,0,0,0.962395,0,0,0,0.967312,0,0,0,0.961723,0,0,0,0.95646,0,0,0,0.957667,0,0,0,0.956449,0,0,0,0.959389,0,0,0,0.958485,0,0,0,0.952048,0,0,0,0.951179,0,0,0,0.953988,0,0,0,0.950704,0,0,0,0.957664,0,0,0,0.913896,0,0,0,0.959054,0,0,0,0.959143,0,0,0,0.959098,0,0,0,0.959091,0,0,0,0.958748,0,0,0,0.958932,0,0,0,0.958653,0,0,0,0.958731,0,0,0,0.959017,0,0,0,0.959065,0,0,0,0.959278,0,0,0,0.95915,0,0,0,0.959079,0,0,0,0.958916,0,0,0,0.958333,0,0,0,0.958096,0,0,0,0.957796,0,0,0,0.957492,0,0,0,0.957946,0,0,0,0.957489,0,0,0,0.958663,0,0,0,0.958963,0,0,0,0.957665,0,0,0,0.956759,0,0,0,0.957684,0,0,0,0.957089,0,0,0,0.956814,0,0,0,0.957704,0,0,0,0.959133,0,0,0,0.959054,0,0,0,0.958965,0,0,0,0.958739,0,0,0,0.961327,0,0,0,0.961758,0,0,0,0.945677,0,0,0,0.943567,0,0,0,0.941715,0,0,0,0.960058,0,0,0,0.962587,0,0,0,0.963066,0,0,0,0.961181,0,0,0,0.960713,0,0,0,0.961001,0,0,0,0.961437,0,0,0,0.961557,0,0,0,0.961668,0,0,0,0.962519,0,0,0,0.963254,0,0,0,0.963158,0,0,0,0.961675,0,0,0,0.962032,0,0,0,0.960816,0,0,0,0.963411,0,0,0,0.942097,0,0,0,0.963215,0,0,0,0.963356,0,0,0,0.963761,0,0,0,0.963501,0,0,0,0.965032,0,0,0,0.965727,0,0,0,0.963453,0,0,0,0.963447,0,0,0,0.961062,0,0,0,0.963429,0,0,0,0.96061,0,0,0,0.959487,0,0,0,0.957783,0,0,0,0.953478,0,0,0,0.965588,0,0,0,0.967986,0,0,0,0.967399,0,0,0,0.961668,0,0,0,0.960632,0,0,0,0.95222,0,0,0,0.934453,0,0,0,0.94082,0,0,0,0.930258,0,0,0,0.932613,0,0,0,0.95964,0,0,0,0.95947,0,0,0,0.9599,0,0,0,0.950732,0,0,0,0.953623,0,0,0,0.962079,0,0,0,0.962571,0,0,0,0.962679,0,0,0,0.946937,0,0,0,0.944567,0,0,0,0.932583,0,0,0,0.933732,0,0,0,0.852938,0,0,0,0.853963,0,0,0,0.964461,0,0,0,0.981532,0,0,0,0.979471,0,0,0,0.964947,0,0,0,0.987464,0,0,0,0.985594,0,0,0,0.984706,0,0,0,0.989291,0,0,0,0.988646,0,0,0,0.99067,0,0,0,0.985191,0,0,0,0.985652,0,0,0,0.988861,0,0,0,0.988482,0,0,0,0.985931,0,0,0,0.986389,0,0,0,0.988968,0,0,0,0.988931,0,0,0,0.990758,0,0,0,0.990765,0,0,0,0.98126,0,0,0,0.98041,0,0,0,0.974105,0,0,0,0.9739,0,0,0,0.981486,0,0,0,0.747676,0,0,0,0.810216,0,0,0,0.836684,0,0,0,0.796943,0,0,0,0.8447,0,0,0,0.869511,0,0,0,0.782497,0,0,0,0.814762,0,0,0,0.825438,0,0,0,0.800566,0,0,0,0.748017,0,0,0,0.74962,0,0,0,0.772818,0,0,0,0.787042,0,0,0,0.805129,0,0,0,0.817335,0,0,0,0.834158,0,0,0,0.850377,0,0,0,0.882694,0,0,0,0.894793,0,0,0,0.916009,0,0,0,0.947827,0,0,0,0.926409,0,0,0,0.943594,0,0,0,0.961068,0,0,0,0.973466,0,0,0,0.975213,0,0,0,0.969994,0,0,0,0.9315,0,0,0,0.913875,0,0,0,0.91884,0,0,0,0.931335,0,0,0,0.952567,0,0,0,0.949318,0,0,0,0.951666,0,0,0,0.954777,0,0,0,0.9612,0,0,0,0.962731,0,0,0,0.958716,0,0,0,0.958968,0,0,0,0.949159,0,0,0,0.944312,0,0,0,0.963924,0,0,0,0.965773,0,0,0,0.967117,0,0,0,0.965253,0,0,0,0.95698,0,0,0,0.958972,0,0,0,0.960765,0,0,0,0.958755,0,0,0,0.96288,0,0,0,0.961627,0,0,0,0.968511,0,0,0,0.966441,0,0,0,0.971557,0,0,0,0.971842,0,0,0,0.92628,0,0,0,0.924689,0,0,0,0.92137,0,0,0,0.922692,0,0,0,0.923237,0,0,0,0.926766,0,0,0,0.919665,0,0,0,0.921765,0,0,0,0.924339,0,0,0,0.921749,0,0,0,0.974526,0,0,0,0.974724,0,0,0,0.979664,0,0,0,0.980238,0,0,0,0.985359,0,0,0,0.988945,0,0,0,0.918228,0,0,0,0.919822,0,0,0,0.915989,0,0,0,0.914555,0,0,0,0.915142,0,0,0,0.917348,0,0,0,0.922644,0,0,0,0.917093,0,0,0,0.920902,0,0,0,0.915504,0,0,0,0.914901,0,0,0,0.865196,0,0,0,0.870174,0,0,0,0.845773,0,0,0,0.894904,0,0,0,0.903145,0,0,0,0.905379,0,0,0,0.899634,0,0,0,0.963631,0,0,0,0.966176,0,0,0,0.96484,0,0,0,0.961989,0,0,0,0.954228,0,0,0,0.956105,0,0,0,0.819548,0,0,0,0.82633,0,0,0,0.811818,0,0,0,0.95673,0,0,0,0.955389,0,0,0,0.955484,0,0,0,0.827551,0,0,0,0.820957,0,0,0,0.822546,0,0,0,0.829588,0,0,0,0.824738,0,0,0,0.830306,0,0,0,0.903538,0,0,0,0.903347,0,0,0,0.898261,0,0,0,0.898673,0,0,0,0.878391,0,0,0,0.885342,0,0,0,0.888326,0,0,0,0.855709,0,0,0,0.845827,0,0,0,0.86054,0,0,0,0.863919,0,0,0,0.852022,0,0,0,0.877222,0,0,0,0.871522,0,0,0,0.874254,0,0,0,0.881542,0,0,0,0.883999,0,0,0,0.87639,0,0,0,0.877051,0,0,0,0.884267,0,0,0,0.906179,0,0,0,0.913753,0,0,0,0.91439,0,0,0,0.909891,0,0,0,0.905399,0,0,0,0.908033,0,0,0,0.905102,0,0,0,0.906402,0,0,0,0.903862,0,0,0,0.906339,0,0,0,0.914581,0,0,0,0.913415,0,0,0,0.913039,0,0,0,0.912806,0,0,0,0.912301,0,0,0,0.913434,0,0,0,0.910491,0,0,0,0.911379,0,0,0,0.641375,0,0,0,0.771998,0,0,0,0.779912,0,0,0,0.859007,0,0,0,0.961302,0,0,0,0.962281,0,0,0,0.977851,0,0,0,0.977722,0,0,0,0.991728,0,0,0,0.991754,0,0,0,0.99119,0,0,0,0.987955,0,0,0,0.989927,0,0,0,0.992249,0,0,0,0.99111,0,0,0,0.988788,0,0,0,0.992075,0,0,0,0.992546,0,0,0,0.985607,0,0,0,0.974349,0,0,0,0.976701,0,0,0,0.943979,0,0,0,0.908081,0,0,0,0.913562,0,0,0,0.946449,0,0,0,0.979908,0,0,0,0.983415,0,0,0,0.97267,0,0,0,0.96827,0,0,0,0.970583,0,0,0,0.972126,0,0,0,0.962695,0,0,0,0.908236,0,0,0,0.907494,0,0,0,0.850884,0,0,0,0.85948,0,0,0,0.848649,0,0,0,0.950941,0,0,0,0.937983,0,0,0,0.940978,0,0,0,0.961229,0,0,0,0.96724,0,0,0,0.965662,0,0,0,0.960667,0,0,0,0.990777,0,0,0,0.990744,0,0,0,0.992655,0,0,0,0.992626,0,0,0,0.992462,0,0,0,0.991585,0,0,0,0.989493,0,0,0,0.950094,0,0,0,0.953274,0,0,0,0.963455,0,0,0,0.966167,0,0,0,0.967727,0,0,0,0.967159,0,0,0,0.966498,0,0,0,0.969222,0,0,0,0.963834,0,0,0,0.963723,0,0,0,0.967958,0,0,0,0.801913,0,0,0,0.864085,0,0,0,0.870526,0,0,0,0.873007,0,0,0,0.857792,0,0,0,0.846279,0,0,0,0.846759,0,0,0,0.849476,0,0,0,0.882237,0,0,0,0.902863,0,0,0,0.698713,0,0,0,0.993086,0,0,0,0.955905,0,0,0,0.954641,0,0,0,0.870125,0,0,0,0.890578,0,0,0,0.890158,0,0,0,0.89869,0,0,0,0.99321,0,0,0,0.993001,0,0,0,0.992929,0,0,0,0.912389,0,0,0,0.912425,0,0,0,0.912496,0,0,0,0.91145,0,0,0,0.912115,0,0,0,0.912301,0,0,0,0.912367,0,0,0,0.867545,0,0,0,0.888564,0,0,0,0.911447,0,0,0,0.924383,0,0,0,0.963388,0,0,0,0.962243,0,0,0,0.969668,0,0,0,0.971515,0,0,0,0.970659,0,0,0,0.955759,0,0,0,0.953444,0,0,0,0.964591,0,0,0,0.963361,0,0,0,0.958123,0,0,0,0.956759,0,0,0,0.96107,0,0,0,0.961359,0,0,0,0.963108,0,0,0,0.9566,0,0,0,0.959325,0,0,0,0.955967,0,0,0,0.953982,0,0,0,0.955816,0,0,0,0.960852,0,0,0,0.963593,0,0,0,0.961223,0,0,0,0.962721,0,0,0,0.838966,0,0,0,0.831594,0,0,0,0.842379,0,0,0,0.862051,0,0,0,0.865587,0,0,0,0.867687,0,0,0,0.857893,0,0,0,0.849167,0,0,0,0.82376,0,0,0,0.823699,0,0,0,0.825063,0,0,0,0.825144,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.837225,0,0,0,0.83759,0,0,0,0.917202,0,0,0,0.920509,0,0,0,0.955649,0,0,0,0.949949,0,0,0,0.968016,0,0,0,0.904076,0,0,0,0.901054,0,0,0,0.941971,0,0,0,0.910025,0,0,0,0.909525,0,0,0,0.870357,0,0,0,0.904286,0,0,0,0.945237,0,0,0,0.944735,0,0,0,0.946328,0,0,0,0.942854,0,0,0,0.940089,0,0,0,0.956904,0,0,0,0.627502,0,0,0,0.691246,0,0,0,0.954879,0,0,0,0.955676,0,0,0,0.961482,0,0,0,0.974729,0,0,0,0.971156,0,0,0,0.967776,0,0,0,0.971332,0,0,0,0.826647,0,0,0,0.97495,0,0,0,0.820934,0,0,0,0.924489,0,0,0,0.912884,0,0,0,0.913121,0,0,0,0.910992,0,0,0,0.908649,0,0,0,0.908087,0,0,0,0.912351,0,0,0,0.912242,0,0,0,0.912209,0,0,0,0.912406,0,0,0,0.912313,0,0,0,0.912286,0,0,0,0.915284,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.809624,0,0,0,0.816858,0,0,0,0.818427,0,0,0,0.869398,0,0,0,0.874458,0,0,0,1,0,0,0,0.985896,0,0,0,0.820761,0,0,0,1,0,0,0,0.916392,0,0,0,0.91252,0,0,0,0.900671,0,0,0,0.955596,0,0,0,0.953669,0,0,0,0.964071,0,0,0,0.962994,0,0,0,0.960966,0,0,0,0.960912,0,0,0,0.962821,0,0,0,0.957065,0,0,0,0.959386,0,0,0,0.954193,0,0,0,0.960261,0,0,0,0.958539,0,0,0,0.957595,0,0,0,0.950974,0,0,0,0.951505,0,0,0,0.948754,0,0,0,0.942725,0,0,0,0.941604,0,0,0,0.935531,0,0,0,0.919152,0,0,0,0.926106,0,0,0,0.967255,0,0,0,0.966711,0,0,0,0.966776,0,0,0,0.967098,0,0,0,0.964703,0,0,0,0.964279,0,0,0,0.964266,0,0,0,0.964724,0,0,0,0.965766,0,0,0,0.96561,0,0,0,0.963752,0,0,0,0.963899,0,0,0,0.962788,0,0,0,0.961743,0,0,0,0.961635,0,0,0,0.963061,0,0,0,0.94651,0,0,0,0.948173,0,0,0,0.95127,0,0,0,0.958021,0,0,0,0.957617,0,0,0,0.95205,0,0,0,0.952053,0,0,0,0.965734,0,0,0,0.965618,0,0,0,0.96619,0,0,0,0.966799,0,0,0,0.964598,0,0,0,0.964674,0,0,0,0.963844,0,0,0,0.963453,0,0,0,0.962902,0,0,0,0.963347,0,0,0,0.954436,0,0,0,0.953029,0,0,0,0.951125,0,0,0,0.95228,0,0,0,0.957014,0,0,0,0.958924,0,0,0,0.959545,0,0,0,0.960542,0,0,0,0.962444,0,0,0,0.96258,0,0,0,0.962282,0,0,0,0.963176,0,0,0,0.963843,0,0,0,0.963081,0,0,0,0.96956,0,0,0,0.968977,0,0,0,0.969786,0,0,0,0.971037,0,0,0,0.96618,0,0,0,0.965091,0,0,0,0.965347,0,0,0,0.966667,0,0,0,0.964452,0,0,0,0.964582,0,0,0,0.964031,0,0,0,0.96387,0,0,0,0.9626,0,0,0,0.962898,0,0,0,0.961391,0,0,0,0.96066,0,0,0,0.957042,0,0,0,0.956113,0,0,0,0.950429,0,0,0,0.948775,0,0,0,0.939775,0,0,0,0.928738,0,0,0,0.930326,0,0,0,0.93878,0,0,0,0.965667,0,0,0,0.965936,0,0,0,0.966059,0,0,0,0.965956,0,0,0,0.962701,0,0,0,0.961293,0,0,0,0.96271,0,0,0,0.956459,0,0,0,0.955826,0,0,0,0.958769,0,0,0,0.958823,0,0,0,0.958598,0,0,0,0.957967,0,0,0,0.951401,0,0,0,0.949711,0,0,0,0.933158,0,0,0,0.941106,0,0,0,0.969155,0,0,0,0.965572,0,0,0,0.965449,0,0,0,0.96616,0,0,0,0.964804,0,0,0,0.963664,0,0,0,0.963513,0,0,0,0.964142,0,0,0,0.962571,0,0,0,0.962229,0,0,0,0.961086,0,0,0,0.965664,0,0,0,0.965887,0,0,0,0.958841,0,0,0,0.957007,0,0,0,0.961079,0,0,0,0.962667,0,0,0,0.963619,0,0,0,0.964842,0,0,0,0.964459,0,0,0,0.963545,0,0,0,0.958729,0,0,0,0.959111,0,0,0,0.959934,0,0,0,0.960783,0,0,0,0.960495,0,0,0,0.965572,0,0,0,0.969603,0,0,0,0.964082,0,0,0,0.958871,0,0,0,0.9589,0,0,0,0.960159,0,0,0,0.961017,0,0,0,0.961987,0,0,0,0.954424,0,0,0,0.953587,0,0,0,0.956378,0,0,0,0.953015,0,0,0,0.960156,0,0,0,0.916467,0,0,0,0.961625,0,0,0,0.961663,0,0,0,0.961577,0,0,0,0.961614,0,0,0,0.961251,0,0,0,0.961431,0,0,0,0.961148,0,0,0,0.961221,0,0,0,0.961844,0,0,0,0.961624,0,0,0,0.961563,0,0,0,0.961699,0,0,0,0.961458,0,0,0,0.961648,0,0,0,0.960839,0,0,0,0.960599,0,0,0,0.960279,0,0,0,0.959938,0,0,0,0.961194,0,0,0,0.959971,0,0,0,0.960432,0,0,0,0.961509,0,0,0,0.959213,0,0,0,0.960133,0,0,0,0.959258,0,0,0,0.959534,0,0,0,0.960153,0,0,0,0.96017,0,0,0,0.961663,0,0,0,0.961581,0,0,0,0.961469,0,0,0,0.96123,0,0,0,0.964538,0,0,0,0.964082,0,0,0,0.948164,0,0,0,0.945922,0,0,0,0.944054,0,0,0,0.962673,0,0,0,0.966,0,0,0,0.965502,0,0,0,0.963951,0,0,0,0.963472,0,0,0,0.963802,0,0,0,0.964308,0,0,0,0.964484,0,0,0,0.964393,0,0,0,0.965475,0,0,0,0.966209,0,0,0,0.966159,0,0,0,0.964444,0,0,0,0.964819,0,0,0,0.963539,0,0,0,0.966352,0,0,0,0.94461,0,0,0,0.966109,0,0,0,0.966247,0,0,0,0.966582,0,0,0,0.966334,0,0,0,0.967825,0,0,0,0.968515,0,0,0,0.966308,0,0,0,0.966338,0,0,0,0.964004,0,0,0,0.966534,0,0,0,0.963361,0,0,0,0.962051,0,0,0,0.960216,0,0,0,0.95582,0,0,0,0.969091,0,0,0,0.970791,0,0,0,0.964431,0,0,0,0.970169,0,0,0,0.962815,0,0,0,0.954353,0,0,0,0.943093,0,0,0,0.936615,0,0,0,0.932575,0,0,0,0.934987,0,0,0,0.96205,0,0,0,0.962246,0,0,0,0.962536,0,0,0,0.953058,0,0,0,0.955997,0,0,0,0.964868,0,0,0,0.965386,0,0,0,0.965496,0,0,0,0.933412,0,0,0,0.945364,0,0,0,0.947458,0,0,0,0.934271,0,0,0,0.853542,0,0,0,0.8531,0,0,0,0.96582,0,0,0,0.96595,0,0,0,0.980221,0,0,0,0.982436,0,0,0,0.986108,0,0,0,0.988002,0,0,0,0.98979,0,0,0,0.985644,0,0,0,0.989223,0,0,0,0.991067,0,0,0,0.985758,0,0,0,0.988911,0,0,0,0.989197,0,0,0,0.986062,0,0,0,0.986201,0,0,0,0.989165,0,0,0,0.989089,0,0,0,0.986508,0,0,0,0.991067,0,0,0,0.99095,0,0,0,0.974887,0,0,0,0.981093,0,0,0,0.981772,0,0,0,0.974548,0,0,0,0.981776,0,0,0,0.8172,0,0,0,0.7617,0,0,0,0.843191,0,0,0,0.874603,0,0,0,0.851323,0,0,0,0.807003,0,0,0,0.83138,0,0,0,0.818166,0,0,0,0.786858,0,0,0,0.808656,0,0,0,0.753251,0,0,0,0.762205,0,0,0,0.774685,0,0,0,0.788827,0,0,0,0.838963,0,0,0,0.818829,0,0,0,0.806408,0,0,0,0.852978,0,0,0,0.885982,0,0,0,0.919225,0,0,0,0.898712,0,0,0,0.945527,0,0,0,0.929031,0,0,0,0.950059,0,0,0,0.962728,0,0,0,0.974491,0,0,0,0.976375,0,0,0,0.970991,0,0,0,0.933383,0,0,0,0.932701,0,0,0,0.920358,0,0,0,0.916273,0,0,0,0.953304,0,0,0,0.9553,0,0,0,0.952205,0,0,0,0.950075,0,0,0,0.962233,0,0,0,0.960056,0,0,0,0.959872,0,0,0,0.963798,0,0,0,0.950509,0,0,0,0.945433,0,0,0,0.964469,0,0,0,0.965943,0,0,0,0.967756,0,0,0,0.966275,0,0,0,0.957406,0,0,0,0.959216,0,0,0,0.961154,0,0,0,0.959299,0,0,0,0.962135,0,0,0,0.963309,0,0,0,0.971831,0,0,0,0.966798,0,0,0,0.968971,0,0,0,0.97228,0,0,0,0.926356,0,0,0,0.922759,0,0,0,0.921528,0,0,0,0.92495,0,0,0,0.920135,0,0,0,0.922245,0,0,0,0.924759,0,0,0,0.922145,0,0,0,0.974932,0,0,0,0.979798,0,0,0,0.974964,0,0,0,0.91835,0,0,0,0.919873,0,0,0,0.916059,0,0,0,0.917377,0,0,0,0.91517,0,0,0,0.914641,0,0,0,0.92292,0,0,0,0.917288,0,0,0,0.921108,0,0,0,0.915629,0,0,0,0.915083,0,0,0,0.848783,0,0,0,0.871787,0,0,0,0.868067,0,0,0,0.905921,0,0,0,0.903442,0,0,0,0.895339,0,0,0,0.900332,0,0,0,0.964489,0,0,0,0.962966,0,0,0,0.96577,0,0,0,0.96698,0,0,0,0.957131,0,0,0,0.955378,0,0,0,0.820328,0,0,0,0.812537,0,0,0,0.827502,0,0,0,0.958061,0,0,0,0.955724,0,0,0,0.955911,0,0,0,0.828684,0,0,0,0.821657,0,0,0,0.823169,0,0,0,0.830726,0,0,0,0.831353,0,0,0,0.82518,0,0,0,0.903585,0,0,0,0.898732,0,0,0,0.898386,0,0,0,0.903486,0,0,0,0.881734,0,0,0,0.885849,0,0,0,0.888542,0,0,0,0.858314,0,0,0,0.848405,0,0,0,0.862388,0,0,0,0.854446,0,0,0,0.865824,0,0,0,0.878099,0,0,0,0.882032,0,0,0,0.874668,0,0,0,0.8723,0,0,0,0.88423,0,0,0,0.876531,0,0,0,0.914275,0,0,0,0.90664,0,0,0,0.914949,0,0,0,0.910156,0,0,0,0.908212,0,0,0,0.905668,0,0,0,0.905233,0,0,0,0.906441,0,0,0,0.913516,0,0,0,0.914707,0,0,0,0.91304,0,0,0,0.913391,0,0,0,0.913604,0,0,0,0.912493,0,0,0,0.911573,0,0,0,0.910655,0,0,0,0.651528,0,0,0,0.865358,0,0,0,0.978247,0,0,0,0.962977,0,0,0,0.991984,0,0,0,0.992037,0,0,0,0.991503,0,0,0,0.988317,0,0,0,0.990272,0,0,0,0.99243,0,0,0,0.989023,0,0,0,0.991298,0,0,0,0.992247,0,0,0,0.992728,0,0,0,0.98593,0,0,0,0.978402,0,0,0,0.975829,0,0,0,0.946468,0,0,0,0.948886,0,0,0,0.916755,0,0,0,0.911249,0,0,0,0.984393,0,0,0,0.981294,0,0,0,0.97475,0,0,0,0.972468,0,0,0,0.970436,0,0,0,0.973758,0,0,0,0.964429,0,0,0,0.909744,0,0,0,0.851711,0,0,0,0.908443,0,0,0,0.863692,0,0,0,0.851885,0,0,0,0.951295,0,0,0,0.941087,0,0,0,0.938233,0,0,0,0.965892,0,0,0,0.967378,0,0,0,0.961345,0,0,0,0.960915,0,0,0,0.990864,0,0,0,0.992692,0,0,0,0.954197,0,0,0,0.951087,0,0,0,0.966667,0,0,0,0.963869,0,0,0,0.968359,0,0,0,0.967943,0,0,0,0.967403,0,0,0,0.969972,0,0,0,0.968913,0,0,0,0.964858,0,0,0,0.965046,0,0,0,0.870935,0,0,0,0.86465,0,0,0,0.873169,0,0,0,0.859616,0,0,0,0.848963,0,0,0,0.848629,0,0,0,0.85182,0,0,0,0.886504,0,0,0,0.904446,0,0,0,0.702406,0,0,0,0.993155,0,0,0,0.956165,0,0,0,0.955116,0,0,0,0.874553,0,0,0,0.890644,0,0,0,0.992978,0,0,0,0.912577,0,0,0,0.912539,0,0,0,0.912643,0,0,0,0.912265,0,0,0,0.91157,0,0,0,0.912452,0,0,0,0.912519,0,0,0,0.869532,0,0,0,0.925239,0,0,0,0.912371,0,0,0,0.962612,0,0,0,0.963692,0,0,0,0.970288,0,0,0,0.972145,0,0,0,0.971434,0,0,0,0.954178,0,0,0,0.956288,0,0,0,0.963921,0,0,0,0.965282,0,0,0,0.957229,0,0,0,0.958621,0,0,0,0.961595,0,0,0,0.963956,0,0,0,0.962331,0,0,0,0.960372,0,0,0,0.957597,0,0,0,0.956434,0,0,0,0.954884,0,0,0,0.956302,0,0,0,0.961871,0,0,0,0.965431,0,0,0,0.963447,0,0,0,0.964797,0,0,0,0.840703,0,0,0,0.844147,0,0,0,0.832537,0,0,0,0.862621,0,0,0,0.865973,0,0,0,0.867889,0,0,0,0.857647,0,0,0,0.850827,0,0,0,0.823875,0,0,0,0.825238,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.822765,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.839066,0,0,0,0.839822,0,0,0,0.958024,0,0,0,0.952367,0,0,0,0.97026,0,0,0,0.907096,0,0,0,0.903737,0,0,0,0.910726,0,0,0,0.910448,0,0,0,0.946132,0,0,0,0.947076,0,0,0,0.947386,0,0,0,0.94365,0,0,0,0.957409,0,0,0,0.955006,0,0,0,0.974833,0,0,0,0.971292,0,0,0,0.827171,0,0,0,0.821058,0,0,0,0.925145,0,0,0,0.913195,0,0,0,0.913024,0,0,0,0.908143,0,0,0,0.908726,0,0,0,0.911078,0,0,0,0.912408,0,0,0,0.912366,0,0,0,0.912234,0,0,0,0.912553,0,0,0,0.91246,0,0,0,0.818436,0,0,0,0.91679,0,0,0,0.913208,0,0,0,0.901669,0,0,0,0.954408,0,0,0,0.956196,0,0,0,0.963571,0,0,0,0.964767,0,0,0,0.961512,0,0,0,0.963649,0,0,0,0.961849,0,0,0,0.96037,0,0,0,0.958034,0,0,0,0.955086,0,0,0,0.961223,0,0,0,0.958157,0,0,0,0.959089,0,0,0,0.957677,0,0,0,0.95703,0,0,0,0.961744,0,0,0,0.961012,0,0,0,0.959579,0,0,0,0.960269,0,0,0,0.960856,0,0,0,0.959478,0,0,0,0.960137,0,0,0,0.957703,0,0,0,0.960208,0,0,0,0.958546,0,0,0,0.958265,0,0,0,0.957752,0,0,0,0.95831,0,0,0,0.961662,0,0,0,0.962516,0,0,0,0.960198,0,0,0,0.961735,0,0,0,0.961177,0,0,0,0.961048,0,0,0,0.960391,0,0,0,0.95856,0,0,0,0.961115,0,0,0,0.958883,0,0,0,0.95916,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n    \"vertices\": [-3.03278,23.0541,-0.790304,-3.68158,23.0751,-0.583009,-3.28493,23.3999,-0.614148,-2.9125,23.637,0.431002,-3.22166,23.2849,0.397267,-3.00182,22.9603,0.410347,-2.59325,23.6701,0.588452,-3.47312,23.5887,0.004702,-3.49043,23.5629,-0.298153,-3.94943,23.1177,-0.257809,-3.93346,23.0894,0.036976,-3.20967,23.6439,0.242117,-3.36662,23.4713,0.236337,-3.74614,23.054,0.222362,-4.36661,22.5674,0.198516,-4.12632,22.5359,0.414331,-3.46037,23.0131,0.371222,-4.5156,22.6226,-0.227849,-4.48024,22.5901,0.031811,-4.33767,22.598,-0.510204,-2.86125,22.4244,-0.505994,-2.59292,22.6631,-0.597604,-2.5322,22.6212,-0.448229,-7.74282,19.2779,1.20341,-6.80703,20.1345,0.97738,-7.11861,20.3034,0.932345,-7.82782,19.4443,1.22001,-7.23233,20.3436,0.786305,-7.92452,19.61,1.14739,-7.3495,20.3544,0.618195,-8.02801,19.6699,0.996185,-7.36655,20.2783,0.41879,-8.0999,19.6436,0.81487,-7.1152,19.9434,0.009765,-6.88802,19.7152,-0.001755,-7.96856,19.1826,0.40033,-8.05218,19.4033,0.45825,-6.74687,19.5768,0.15246,-7.87415,19.0498,0.45001,-6.66849,19.499,0.31695,-7.78334,18.9469,0.548595,-6.57216,19.5099,0.60882,-7.70189,18.9089,0.727055,-6.5696,19.689,0.86141,-7.66606,18.9939,0.93977,-6.654,19.8954,0.95635,-7.65649,19.1216,1.14062,-8.12071,19.5959,0.6409,-7.2898,20.1938,0.25206,-6.23274,20.8365,-0.156055,-6.91523,20.6091,0.14031,-6.87978,20.7273,0.296735,-6.16775,21.1648,-0.042709,-5.89102,20.8537,0.62838,-6.27252,20.5553,0.77835,-6.05935,20.3279,0.81085,-5.6796,20.6557,0.688531,-6.73807,20.8433,0.53922,-6.00676,21.2763,0.312581,-6.53928,20.7683,0.719715,-5.956,21.1338,0.491706,-6.15186,19.8821,0.02527,-6.34018,19.9449,-0.1255,-5.91633,20.304,-0.207005,-5.69422,20.3026,-0.13753,-5.94388,20.0916,0.758185,-5.44165,20.5435,0.60683,-5.90486,19.8861,0.553935,-5.35332,20.386,0.369475,-6.02915,19.8371,0.21196,-5.46728,20.3168,0.09807,-6.67084,20.1692,-0.156685,-4.75365,21.6734,0.651436,-4.39946,22.0074,0.558441,-4.61757,22.1877,0.459636,-4.97217,21.8509,0.565056,-4.80342,22.2223,0.232926,-5.17872,21.9046,0.337471,-4.84983,22.2612,0.069776,-5.28886,21.8932,0.135041,-4.93821,22.2338,-0.165929,-5.35034,21.8363,-0.115084,-4.80344,22.1472,-0.430604,-5.33453,21.5934,-0.322024,-4.66034,21.8832,-0.565134,-5.23897,21.308,-0.458849,-4.40557,21.7034,-0.563719,-4.24044,21.5439,-0.424119,-4.91053,21.017,-0.283649,-5.05621,21.1327,-0.442934,-3.98323,21.4722,-0.110494,-4.68596,20.9761,0.017716,-4.08532,21.5253,0.254496,-4.66463,21.0643,0.329901,-4.25422,21.6838,0.503381,-4.62552,21.3139,0.581676,-5.84787,21.2253,0.452616,-5.52689,21.5802,0.409111,-5.69854,21.5213,0.140291,-5.89329,21.3536,0.256546,-5.803,21.3333,-0.138139,-6.08462,21.2033,-0.066504,-5.80786,20.8013,-0.299974,-6.10465,20.8431,-0.196845,-6.06334,20.5738,-0.26204,-6.12877,20.7466,-0.125015,-5.65334,20.5316,-0.290795,-5.38746,20.5678,-0.188744,-5.60141,20.3778,-0.153375,-5.8248,20.3552,-0.2064,-5.19895,20.5394,0.065801,-5.40054,20.3631,0.09387,-5.28919,20.4476,0.375991,-5.00324,20.715,0.351476,-5.35014,20.6338,0.589311,-5.02914,20.9399,0.590856,-5.55877,20.7715,0.686721,-5.17639,21.2144,0.715861,-5.41001,21.4123,0.637611,-5.78474,20.9792,0.619721,-3.83505,22.387,0.484681,-3.65173,22.1472,0.391401,-3.50627,22.0021,0.227641,-3.38716,21.9155,-0.121539,-3.56662,21.9318,-0.452959,-3.77737,22.1369,-0.633399,-4.10464,22.3858,-0.657459,-6.86176,20.4761,-0.0016,-6.17341,20.7331,-0.134305,-6.17632,20.4851,-0.22112,-9.09591,18.6825,0.98544,-9.06369,18.5616,0.87475,-9.10586,18.728,1.14566,-9.01529,18.7577,1.45747,-8.82419,18.643,1.64871,-8.71885,18.5166,1.66128,-8.67016,18.4851,1.57351,-8.7043,18.4176,1.43697,-8.79692,18.3953,1.25028,-8.78834,18.3726,1.11477,-8.96474,18.3635,0.92508,-2.75623,22.8301,-0.739269,-2.79935,22.588,0.138566,-2.67717,22.5092,-0.157689,-2.89106,22.7376,0.299561,-10.7199,16.9876,1.16329,-10.7233,17.0145,1.14142,-10.744,16.9993,1.09048,-10.7598,16.9562,1.096,-10.6507,16.9423,1.11348,-10.6678,16.9544,1.14837,-10.6496,16.9494,1.06708,-10.7121,16.9718,1.01276,-10.725,16.9964,1.03764,-10.6254,17.1103,1.13985,-10.5168,17.2007,1.15968,-10.5443,17.2012,1.06909,-10.6182,17.1342,1.07967,-10.5042,17.1594,0.995574,-10.6212,17.0953,1.02541,-10.4443,17.1278,0.990664,-10.598,17.0403,1.0003,-10.3838,17.1221,1.03828,-10.4931,17.0081,1.05519,-10.3741,17.1192,1.11439,-10.4864,17.0102,1.12759,-10.386,17.1357,1.17524,-10.5123,17.04,1.17096,-10.4637,17.1802,1.197,-10.609,17.0717,1.19333,-11.1928,16.8036,1.66693,-11.202,16.8394,1.64359,-11.2416,16.823,1.58659,-11.2613,16.7677,1.59355,-11.1241,16.7545,1.6035,-11.1348,16.767,1.65022,-11.135,16.7662,1.5481,-11.2245,16.7932,1.48401,-11.2327,16.8229,1.51892,-11.0797,16.9595,1.62608,-10.9362,17.0686,1.63168,-10.9865,17.0883,1.53381,-11.086,16.9925,1.55462,-10.9605,17.0422,1.43599,-11.1058,16.9474,1.48747,-10.9096,16.9876,1.41424,-11.0864,16.8811,1.44735,-10.8272,16.9502,1.46925,-10.9426,16.8455,1.49157,-10.8085,16.9509,1.55829,-10.9205,16.841,1.57752,-10.814,16.97,1.6286,-10.9427,16.873,1.63764,-10.8822,17.0212,1.66129,-11.0465,16.908,1.68284,-11.1625,16.7787,2.15749,-11.176,16.82,2.1373,-11.2273,16.8094,2.08012,-11.2469,16.7495,2.08475,-11.1029,16.7273,2.05433,-11.1063,16.7371,2.10835,-11.1235,16.7455,1.99725,-11.2261,16.7861,1.9629,-11.2292,16.8156,2.00537,-11.0499,16.9458,2.11157,-10.9075,17.0473,2.10779,-10.9747,17.0792,2.01514,-11.0686,16.9884,2.03858,-10.9621,17.0423,1.90604,-11.1007,16.9472,1.9643,-10.904,16.9853,1.87213,-11.0868,16.8785,1.91069,-10.8314,16.9227,1.90164,-10.9289,16.8292,1.93132,-10.7858,16.9198,2.00173,-10.8911,16.8154,2.02018,-10.7708,16.9431,2.07481,-10.9044,16.845,2.0924,-10.8386,16.9927,2.12747,-11.0054,16.8838,2.16241,-10.6426,17.462,1.92956,-10.7766,17.3241,1.95741,-10.6718,17.3416,2.0378,-10.5725,17.4099,2.0296,-10.5706,17.2492,2.0785,-10.519,17.1721,2.04824,-10.4748,17.2508,2.02651,-10.4906,17.3243,2.06439,-10.5858,17.1987,1.80468,-10.6878,17.23,1.7899,-10.5844,17.3274,1.75296,-10.5305,17.2707,1.81022,-10.0098,17.7173,1.91511,-9.98672,17.8605,1.90482,-10.3334,17.6488,1.95923,-10.2983,17.4978,2.01004,-10.389,17.6515,1.73948,-10.064,17.8372,1.61881,-10.088,17.6169,1.61478,-10.4085,17.4806,1.70074,-10.7875,17.0661,2.1319,-10.8777,17.1138,2.09133,-10.8801,17.0072,1.86008,-10.927,17.1113,1.89935,-10.7291,17.0024,1.87453,-10.4796,17.4109,1.73043,-10.4495,17.3244,1.76876,-10.3931,17.3061,2.00778,-10.4002,17.4071,2.02755,-10.7255,17.3357,1.8477,-10.6404,17.4195,1.81921,-10.6728,17.022,2.07129,-10.7057,16.9719,1.98256,-10.5489,17.1464,1.92705,-10.9058,17.1649,1.99854,-10.4896,17.2325,1.91401,-10.4204,17.2935,1.88332,-10.5419,17.5041,1.79905,-10.5183,17.5944,1.88787,-10.3264,17.3769,1.73629,-10.2791,17.3414,1.85225,-10.2627,17.3648,1.98168,-10.0678,17.5466,1.66221,-10.023,17.5498,1.78719,-10.4907,17.5141,1.98057,-10.3988,17.6987,1.85181,-10.1871,17.889,1.79092,-9.79625,17.6277,1.63769,-10.0746,17.5406,1.56968,-9.78917,17.6296,1.51208,-9.7967,17.6084,1.28445,-10.0361,17.5742,1.31784,-10.0195,17.5782,1.24846,-9.80007,17.6219,1.21877,-9.80852,18.1752,1.45383,-10.0164,18.008,1.52447,-9.98224,18.0177,1.58348,-9.80706,18.1916,1.53391,-9.7552,17.6614,1.10553,-9.93402,17.6139,1.11987,-9.92063,17.6672,1.00717,-9.78122,17.7326,0.98462,-9.96858,17.7275,0.964885,-10.0626,17.775,0.984345,-9.88504,17.8783,0.94342,-9.8249,17.8083,0.94265,-9.82451,18.1289,1.18758,-9.9717,17.9818,1.16186,-10.0014,18.013,1.33718,-9.80559,18.1597,1.31561,-9.77666,18.1273,1.04707,-9.88724,18.0413,1.05878,-9.42705,18.4436,0.99807,-9.3928,18.5263,1.3033,-9.29637,18.5405,1.60719,-9.36444,18.5596,1.44516,-8.704,18.331,1.67647,-8.79453,18.3765,1.86348,-8.69682,18.2282,1.83953,-8.88481,18.143,1.34627,-8.78964,18.3233,1.54103,-8.80626,18.163,1.48176,-8.96031,18.1088,1.03909,-8.89463,18.1197,1.21012,-9.06771,18.1804,0.902375,-9.15422,18.251,0.85641,-9.01273,18.1257,0.968505,-9.22831,18.3673,0.85339,-9.23028,17.4308,3.13443,-9.24652,17.4265,3.14417,-9.18894,17.3706,3.16458,-9.15771,17.4082,3.15627,-9.0894,17.3567,3.12862,-9.09159,17.3742,3.11719,-9.18886,17.9603,1.2358,-9.25755,17.9609,1.10322,-9.55242,18.3273,1.02561,-9.55477,18.3438,1.09583,-9.56518,18.3708,1.25191,-9.55263,18.3858,1.36224,-9.54026,18.3912,1.45494,-10.0563,17.6654,1.30337,-10.0979,17.8561,1.34282,-10.0207,17.8462,1.19535,-10.0463,17.6365,1.26267,-10.0013,17.7048,1.96995,-9.97155,17.839,1.95599,-10.089,17.6179,1.58539,-10.0559,17.8397,1.554,-8.9153,18.4813,1.80248,-8.89613,18.3973,1.86413,-9.23828,18.2299,2.07933,-9.40303,18.028,2.21608,-9.17225,17.9882,2.3404,-9.04703,18.0997,2.31258,-9.01074,18.4001,1.9138,-8.86013,18.063,2.25193,-8.82128,18.0251,2.23918,-8.7028,18.0222,1.92638,-9.14174,17.7623,2.02504,-9.16332,17.8418,1.76087,-8.68825,18.0987,1.69462,-9.58323,18.3723,1.30844,-9.8127,18.1726,1.38636,-9.93935,18.0861,1.41102,-9.50735,18.3836,1.60865,-9.57851,18.3673,1.54449,-9.7606,18.1664,1.72624,-9.80187,18.2108,1.6296,-9.89315,18.1221,1.6682,-9.92013,17.992,1.83702,-9.05077,18.5102,1.7488,-9.32997,18.311,1.93285,-10.0446,17.5356,1.46626,-9.77834,17.6152,1.40428,-9.77937,17.5821,1.85977,-9.68113,17.8613,2.25869,-9.59671,17.7716,2.25377,-9.3638,17.8798,2.2572,-10.0287,17.5745,1.91376,-10.0129,17.5696,1.99784,-10.1212,17.9502,1.76041,-9.73806,18.0927,0.96767,-9.90438,17.9559,0.997935,-9.725,18.164,1.81291,-9.8899,17.9903,1.8913,-9.4964,18.3624,1.67854,-9.50048,18.3344,0.943455,-9.17232,17.9973,1.41501,-8.88613,17.8471,2.08327,-9.08415,17.7374,2.18259,-8.71509,18.1258,1.61642,-9.1053,17.6281,2.8489,-9.05321,17.6204,2.84061,-9.05397,17.6431,2.79706,-9.11732,17.6629,2.80874,-9.11313,17.4681,2.62862,-9.17806,17.4937,2.6315,-9.16858,17.5161,2.5999,-9.10396,17.4902,2.59594,-9.16065,17.7627,2.24875,-9.34915,17.8359,1.83872,-9.42823,17.765,2.06043,-9.21739,17.9495,1.60339,-9.13673,17.9215,1.65464,-9.32514,17.9304,1.02616,-9.61219,18.0093,0.88708,-9.49348,17.9692,0.937125,-9.67188,18.0483,0.90373,-9.01755,17.511,2.65874,-9.01669,17.4987,2.67548,-9.2079,17.3349,3.07396,-9.10457,17.3169,3.05746,-9.27116,17.4,3.07377,-9.19944,17.6844,2.69101,-9.23427,17.6249,2.72056,-9.21255,17.6402,2.75481,-9.54104,18.0906,2.09651,-8.77202,17.91,2.11786,-9.02434,17.5788,2.81912,-9.00259,17.5868,2.77427,-9.25223,17.5733,2.75323,-9.22762,17.6129,2.78891,-9.29167,17.4706,2.98786,-9.25101,17.4905,3.02693,-9.22787,17.5491,2.93177,-9.27227,17.5269,2.90183,-9.30026,17.4321,2.97226,-9.28389,17.4913,2.85369,-9.21532,17.3418,2.94643,-9.2246,17.3803,2.80206,-9.0992,17.3203,2.93265,-9.10169,17.3527,2.79195,-9.03889,17.3844,2.86657,-9.05664,17.34,2.97006,-9.01932,17.4536,2.92996,-9.04993,17.3843,3.02429,-9.06257,17.9711,2.4535,-9.17703,17.9106,2.41408,-8.91397,17.9322,2.42926,-8.90972,18.0904,2.27446,-9.25479,17.8485,2.34448,-9.23941,17.7855,2.42387,-9.83574,17.6399,2.26537,-9.90038,17.7193,2.27029,-9.91706,17.8574,2.21902,-9.78516,17.9635,2.17552,-10.0865,17.9801,1.74531,-10.1329,17.9302,1.43785,-10.091,17.9716,1.43685,-10.0167,17.9254,1.06683,-10.0625,17.8712,1.06565,-10.0067,17.4814,2.29929,-10.0184,17.453,2.1784,-9.85869,17.5753,2.12565,-10.113,17.4631,2.07145,-10.2047,17.5482,2.04961,-10.0608,17.4734,1.01228,-10.0883,17.5507,0.96513,-10.1157,17.8047,1.0707,-10.0421,17.4368,1.12108,-10.112,17.4501,1.2385,-10.3492,17.5216,1.62231,-10.3145,17.39,1.61112,-10.2276,17.8492,1.44328,-9.96324,17.9477,2.07677,-10.019,17.8817,2.11359,-9.78363,18.0915,1.98294,-9.67169,18.1692,1.90782,-9.62041,18.1274,2.01207,-9.88528,18.0232,2.03279,-9.99887,18.0581,1.71273,-10.036,18.0295,1.4249,-9.95772,17.985,1.06692,-9.43783,18.3159,1.84936,-9.50806,18.3205,1.78461,-9.76693,17.5676,2.07314,-9.54997,17.7162,2.17249,-9.17681,17.9885,1.51876,-9.24048,17.5757,2.6711,-9.23678,17.5858,2.65843,-9.43333,17.754,2.16406,-9.15646,17.7078,2.3209,-9.07245,17.6813,2.27505,-8.90908,17.7449,2.21252,-8.81915,17.8388,2.23489,-9.07197,17.6105,2.41926,-9.14729,17.6248,2.47522,-8.97363,17.6667,2.39227,-8.94899,17.7144,2.48993,-9.0148,17.7592,2.60473,-9.10455,17.8006,2.59129,-9.18127,17.7726,2.5583,-9.22978,17.6974,2.54149,-9.25099,17.5356,2.71147,-9.18303,17.4525,2.68915,-9.11449,17.4389,2.67663,-9.02714,17.478,2.7176,-9.0821,17.5793,2.89068,-9.01486,17.5346,2.81021,-9.17109,17.6305,2.84755,-9.23241,17.6235,2.61309,-9.15788,17.5544,2.55566,-9.07837,17.5537,2.51244,-8.99449,17.54,2.61693,-9.11677,17.5097,2.99452,-9.12967,17.4791,3.07055,-9.10278,17.5458,2.94699,-9.14424,17.4385,3.13385,-8.97956,17.6059,2.6928,-8.99931,17.5545,2.73241,-9.16338,17.6599,2.79969,-9.13643,17.6975,2.7477,-9.0365,17.7187,2.67813,-9.09529,17.6968,2.75902,-9.0073,17.6249,2.74016,-9.0366,17.6815,2.74451,-10.9228,16.8476,2.55008,-10.9357,16.8889,2.52994,-10.9851,16.8793,2.47143,-11.0045,16.8196,2.47502,-10.326,17.3199,2.43985,-10.256,17.244,2.39027,-10.2027,17.3282,2.36634,-10.2316,17.3976,2.41472,-10.8601,16.7974,2.44787,-10.8654,16.8064,2.50202,-10.3445,17.2632,2.17196,-10.4434,17.3234,2.15543,-10.3689,17.3915,2.1192,-10.2871,17.3395,2.15665,-10.0881,17.7248,2.2791,-10.0571,17.5916,2.33467,-10.1525,17.7335,2.0922,-10.1111,17.8147,2.14825,-10.8788,16.8164,2.39051,-10.9804,16.8576,2.35399,-10.9849,16.8865,2.39671,-10.6703,17.1091,2.5002,-10.7345,17.1461,2.41138,-10.8268,17.0577,2.43535,-10.8102,17.0142,2.50852,-10.7271,17.1116,2.30276,-10.8561,17.0178,2.35987,-10.6514,17.0854,2.25798,-10.8403,16.9499,2.30612,-10.562,17.0269,2.3006,-10.6847,16.8998,2.31325,-10.5319,17.0059,2.3798,-10.6499,16.8849,2.40267,-10.5307,17.0241,2.44852,-10.6656,16.9135,2.47493,-10.5827,17.0836,2.50767,-10.7674,16.9517,2.55993,-10.5391,17.1201,2.50799,-10.6405,17.174,2.48432,-10.692,17.1781,2.29672,-10.6289,17.1063,2.24593,-10.4859,17.1028,2.25822,-10.4708,17.0524,2.34564,-10.2826,17.4625,2.0854,-10.2309,17.3956,2.1162,-10.1254,17.3834,2.35376,-10.1419,17.4753,2.37749,-10.4024,17.5465,2.28812,-10.4098,17.506,2.19238,-10.4882,17.416,2.22521,-10.5223,17.4123,2.33983,-10.4509,17.0839,2.44045,-10.2886,17.2168,2.28344,-10.6645,17.229,2.39456,-10.2291,17.3039,2.26654,-10.412,17.4307,2.40656,-10.3288,17.509,2.38646,-10.1327,17.3569,2.23026,-10.2396,17.5954,2.3262,-10.2801,17.676,2.23069,-10.3132,17.5781,2.15044,-10.1643,17.7607,2.17514,-10.3548,17.4804,1.0818,-10.4563,17.3638,1.0702,-10.4037,17.3843,1.15392,-10.3308,17.4496,1.1705,-10.3372,17.3134,1.20643,-10.2712,17.2517,1.20737,-10.2258,17.3356,1.19778,-10.2765,17.3794,1.2212,-10.2463,17.275,1.00494,-10.3146,17.3176,0.9639,-10.25,17.3848,0.958145,-10.201,17.355,1.02262,-10.1584,17.6559,1.1765,-10.1246,17.5044,1.23873,-10.1176,17.6746,0.98432,-10.4505,17.1965,1.19862,-10.4979,17.2538,1.14198,-10.4971,17.2762,1.05448,-10.4817,17.2161,0.984684,-10.4089,17.1631,0.986939,-10.3251,17.1719,1.02128,-10.2478,17.6217,1.07377,-10.2382,17.5392,0.98582,-10.31,17.448,0.99754,-10.1799,17.4543,0.96522,-10.1402,17.4045,1.00348,-10.1643,17.3852,1.21717,-10.2044,17.4539,1.20883,-10.3853,17.3808,0.99945,-10.3303,17.1833,1.19421,-10.3188,17.1673,1.11115,-10.2279,17.2562,1.11213,-10.1891,17.319,1.11236,-10.1453,17.3571,1.11328,-10.2615,17.5433,1.16749,-10.1966,17.705,1.0695,-10.6637,17.4679,1.48587,-10.7873,17.3357,1.49131,-10.7155,17.3556,1.58462,-10.6192,17.4251,1.59378,-10.7243,17.342,1.39714,-10.6293,17.4202,1.37021,-10.6386,17.2633,1.64076,-10.5734,17.1846,1.62898,-10.5151,17.2795,1.60734,-10.5574,17.3388,1.63717,-10.6023,17.1923,1.39144,-10.6746,17.2371,1.35037,-10.5779,17.3324,1.32978,-10.5214,17.2918,1.39512,-10.3738,17.6688,1.55048,-10.3203,17.3973,1.37312,-10.3831,17.4921,1.30838,-10.371,17.6663,1.34526,-10.8245,17.0917,1.67473,-10.9076,17.1331,1.61273,-10.9195,17.1746,1.51715,-10.8856,16.9985,1.4018,-10.9285,17.1102,1.42662,-10.7349,17.0315,1.43564,-10.4806,17.4162,1.31987,-10.4237,17.3466,1.37078,-10.4119,17.3458,1.61886,-10.4453,17.4309,1.6275,-10.7189,17.0458,1.63252,-10.7359,16.9992,1.54473,-10.5453,17.1836,1.50933,-10.504,17.2691,1.50597,-10.4402,17.3171,1.50109,-10.5295,17.531,1.55794,-10.5308,17.5876,1.4588,-10.2992,17.3632,1.49403,-10.4118,17.7117,1.44783,-10.5394,17.5147,1.37682,3.30468,23.4761,-0.616613,3.68158,23.0751,-0.583008,3.0297,23.1205,-0.771493,3.22283,23.2836,0.397142,3.00182,22.9603,0.410347,3.46037,23.0131,0.371222,3.46186,23.5887,0.004702,3.93346,23.0894,0.036977,3.94943,23.1177,-0.257808,3.47917,23.5629,-0.298153,3.38104,23.4555,0.235807,3.74614,23.054,0.222362,4.12632,22.5359,0.414331,4.36661,22.5674,0.198516,4.51559,22.6226,-0.227849,4.48024,22.5901,0.031811,4.33767,22.598,-0.510204,2.86125,22.4244,-0.505994,2.5322,22.6212,-0.448229,2.59292,22.6631,-0.597604,7.74282,19.2779,1.20341,7.82782,19.4443,1.22001,7.11861,20.3034,0.932346,6.80703,20.1345,0.977381,7.92452,19.61,1.14739,7.23233,20.3436,0.786306,8.02801,19.6699,0.996185,7.3495,20.3544,0.618196,8.0999,19.6436,0.814871,7.36655,20.2783,0.418791,7.96856,19.1826,0.40033,6.88802,19.7152,-0.001755,7.1152,19.9434,0.009766,8.05218,19.4033,0.45825,7.87415,19.0497,0.45001,6.74686,19.5768,0.15246,7.78334,18.9469,0.548595,6.66849,19.499,0.31695,7.70189,18.9089,0.727055,6.57216,19.5099,0.608821,7.66606,18.9939,0.93977,6.5696,19.689,0.861411,7.65648,19.1216,1.14062,6.654,19.8954,0.956351,8.12071,19.5959,0.6409,7.2898,20.1938,0.252061,6.23274,20.8365,-0.156054,6.16775,21.1648,-0.042709,6.87978,20.7273,0.296736,6.91523,20.6091,0.140311,5.89102,20.8537,0.628381,5.6796,20.6557,0.688531,6.05935,20.3279,0.810851,6.27252,20.5553,0.778351,6.00676,21.2763,0.312581,6.73807,20.8433,0.539221,6.53928,20.7683,0.719716,5.95599,21.1338,0.491706,5.91633,20.304,-0.207004,6.34018,19.9449,-0.125499,6.15186,19.8821,0.025271,5.69421,20.3026,-0.137529,5.44165,20.5435,0.606831,5.94388,20.0916,0.758186,5.35332,20.3859,0.369476,5.90486,19.8861,0.553936,5.46727,20.3168,0.098071,6.02915,19.8371,0.211961,6.67084,20.1692,-0.156684,4.75365,21.6734,0.651436,4.97217,21.8509,0.565056,4.61756,22.1877,0.459636,4.39946,22.0074,0.558441,5.17872,21.9046,0.337471,4.80342,22.2223,0.232926,5.28885,21.8932,0.135041,4.84983,22.2612,0.069776,5.35034,21.8363,-0.115084,4.93821,22.2338,-0.165929,5.33453,21.5934,-0.322024,4.80344,22.1471,-0.430604,4.66033,21.8832,-0.565134,5.23897,21.308,-0.458849,4.40556,21.7034,-0.563719,5.05621,21.1327,-0.442934,4.91053,21.017,-0.283649,4.24043,21.5439,-0.424119,4.68596,20.9761,0.017716,3.98323,21.4722,-0.110494,4.66462,21.0643,0.329901,4.08532,21.5253,0.254496,4.62552,21.3139,0.581676,4.25421,21.6838,0.503381,5.84786,21.2253,0.452616,5.89329,21.3535,0.256546,5.69853,21.5213,0.140291,5.52688,21.5802,0.409111,5.803,21.3333,-0.138139,6.08462,21.2033,-0.066504,6.10465,20.8431,-0.196844,5.80785,20.8013,-0.299974,6.12877,20.7466,-0.125014,6.06334,20.5738,-0.262039,5.60141,20.3778,-0.153374,5.38746,20.5678,-0.188744,5.65334,20.5316,-0.290794,5.82479,20.3552,-0.206399,5.40053,20.3631,0.093871,5.19895,20.5394,0.065801,5.28919,20.4476,0.375991,5.00324,20.715,0.351476,5.35014,20.6338,0.589311,5.02914,20.9399,0.590856,5.55876,20.7715,0.686721,5.17639,21.2144,0.715861,5.78474,20.9792,0.619721,5.41001,21.4123,0.637611,3.83505,22.387,0.484681,3.65172,22.1472,0.391401,3.50627,22.0021,0.227641,3.38715,21.9155,-0.121539,3.56662,21.9318,-0.452959,3.77737,22.1369,-0.633399,4.10463,22.3857,-0.657459,6.86175,20.4761,-0.001599,6.17341,20.7331,-0.134304,6.17632,20.4851,-0.221119,9.09591,18.6825,0.98544,9.06369,18.5616,0.87475,9.10586,18.728,1.14566,9.01529,18.7577,1.45747,8.82419,18.643,1.64871,8.71885,18.5166,1.66128,8.67016,18.4851,1.57351,8.7043,18.4176,1.43697,8.79692,18.3953,1.25028,8.78834,18.3726,1.11477,8.96474,18.3635,0.92508,2.78735,22.8231,-0.740448,2.67717,22.5092,-0.157689,2.79935,22.588,0.138566,2.89106,22.7376,0.299562,10.744,16.9993,1.09048,10.7233,17.0145,1.14142,10.7199,16.9876,1.16329,10.7598,16.9562,1.096,10.6678,16.9544,1.14837,10.6507,16.9423,1.11348,10.6496,16.9494,1.06709,10.7121,16.9718,1.01276,10.725,16.9964,1.03764,10.6254,17.1103,1.13986,10.6182,17.1342,1.07967,10.5443,17.2012,1.06909,10.5168,17.2007,1.15968,10.6211,17.0953,1.02541,10.5042,17.1594,0.995575,10.598,17.0404,1.0003,10.4443,17.1278,0.990665,10.4931,17.0081,1.0552,10.3838,17.1221,1.03828,10.4864,17.0102,1.12759,10.3741,17.1192,1.11439,10.5123,17.04,1.17096,10.386,17.1357,1.17524,10.609,17.0717,1.19334,10.4637,17.1802,1.197,11.2416,16.823,1.58659,11.202,16.8394,1.64359,11.1928,16.8037,1.66694,11.2613,16.7677,1.59355,11.1348,16.767,1.65022,11.1241,16.7545,1.6035,11.135,16.7662,1.5481,11.2245,16.7932,1.48401,11.2327,16.8229,1.51892,11.0797,16.9595,1.62609,11.086,16.9925,1.55462,10.9865,17.0883,1.53381,10.9362,17.0686,1.63168,11.1058,16.9474,1.48747,10.9605,17.0422,1.43599,11.0864,16.8811,1.44735,10.9096,16.9876,1.41424,10.9426,16.8455,1.49157,10.8272,16.9503,1.46925,10.9205,16.841,1.57752,10.8085,16.9509,1.55829,10.814,16.97,1.6286,10.9427,16.873,1.63764,11.0465,16.908,1.68284,10.8822,17.0212,1.66129,11.2273,16.8094,2.08012,11.176,16.82,2.1373,11.1625,16.7787,2.15749,11.2469,16.7495,2.08475,11.1063,16.7371,2.10835,11.1029,16.7273,2.05434,11.1235,16.7455,1.99726,11.2261,16.7861,1.9629,11.2292,16.8156,2.00537,11.0499,16.9458,2.11158,11.0686,16.9884,2.03858,10.9747,17.0792,2.01514,10.9075,17.0473,2.10779,11.1007,16.9472,1.9643,10.9621,17.0423,1.90604,11.0868,16.8785,1.9107,10.904,16.9853,1.87213,10.9289,16.8292,1.93132,10.8314,16.9227,1.90165,10.8911,16.8154,2.02018,10.7858,16.9198,2.00173,10.9044,16.845,2.0924,10.7708,16.9431,2.07482,11.0054,16.8838,2.16241,10.8386,16.9927,2.12748,10.6718,17.3416,2.03781,10.7766,17.3241,1.95741,10.6426,17.462,1.92956,10.5724,17.4099,2.02961,10.4748,17.2508,2.02651,10.519,17.1721,2.04825,10.5706,17.2492,2.0785,10.4906,17.3243,2.0644,10.5843,17.3274,1.75297,10.6878,17.23,1.78991,10.5858,17.1987,1.80469,10.5305,17.2707,1.81022,10.3334,17.6488,1.95923,9.98672,17.8605,1.90482,10.0098,17.7173,1.91511,10.2983,17.4978,2.01004,10.389,17.6514,1.73948,10.4085,17.4806,1.70074,10.088,17.6169,1.61478,10.064,17.8372,1.61881,10.8777,17.1138,2.09133,10.7875,17.0661,2.1319,10.8801,17.0072,1.86008,10.927,17.1113,1.89935,10.7291,17.0024,1.87454,10.4495,17.3244,1.76876,10.4796,17.4109,1.73043,10.4002,17.4071,2.02755,10.3931,17.3061,2.00778,10.7255,17.3357,1.8477,10.6404,17.4195,1.81922,10.6728,17.022,2.07129,10.5489,17.1464,1.92705,10.7057,16.9719,1.98256,10.9058,17.1649,1.99855,10.4896,17.2325,1.91402,10.4204,17.2935,1.88332,10.5419,17.5041,1.79905,10.5183,17.5944,1.88787,10.3264,17.3769,1.73629,10.2791,17.3414,1.85225,10.2627,17.3648,1.98168,10.0678,17.5466,1.66221,10.023,17.5498,1.78719,10.4907,17.5141,1.98057,10.3988,17.6987,1.85181,10.1871,17.889,1.79092,9.79625,17.6277,1.63769,9.78917,17.6295,1.51208,10.0746,17.5406,1.56968,9.7967,17.6084,1.28445,9.80006,17.6219,1.21877,10.0195,17.5782,1.24846,10.0361,17.5742,1.31784,9.80852,18.1752,1.45383,9.80706,18.1916,1.53391,9.98224,18.0177,1.58348,10.0164,18.008,1.52447,9.7552,17.6614,1.10553,9.78122,17.7326,0.98462,9.92063,17.6672,1.00717,9.93402,17.6139,1.11987,9.88504,17.8783,0.94342,10.0626,17.775,0.984345,9.96858,17.7275,0.964885,9.8249,17.8083,0.94265,9.82451,18.1289,1.18758,9.80558,18.1597,1.31561,10.0014,18.013,1.33718,9.9717,17.9818,1.16186,9.88724,18.0413,1.05878,9.77666,18.1272,1.04707,9.42705,18.4436,0.99807,9.3928,18.5263,1.30331,9.29637,18.5405,1.60719,9.36444,18.5596,1.44516,8.704,18.331,1.67647,8.69682,18.2282,1.83953,8.79452,18.3765,1.86348,8.88481,18.143,1.34627,8.80626,18.163,1.48176,8.78964,18.3233,1.54103,8.96031,18.1088,1.03909,8.89463,18.1197,1.21012,9.06771,18.1804,0.902375,9.01273,18.1257,0.968505,9.15422,18.251,0.85641,9.22831,18.3673,0.85339,9.23029,17.4308,3.13443,9.15771,17.4082,3.15627,9.18894,17.3706,3.16458,9.24652,17.4265,3.14417,9.09159,17.3742,3.11719,9.0894,17.3567,3.12862,9.25755,17.9609,1.10322,9.18886,17.9603,1.2358,9.55476,18.3438,1.09583,9.55242,18.3273,1.02561,9.56518,18.3708,1.25191,9.54026,18.3912,1.45494,9.55263,18.3858,1.36224,10.0207,17.8462,1.19535,10.0979,17.8561,1.34282,10.0563,17.6654,1.30337,10.0463,17.6365,1.26267,9.97155,17.839,1.95599,10.0013,17.7048,1.96995,10.089,17.6179,1.58539,10.0559,17.8397,1.554,8.89613,18.3973,1.86414,8.91529,18.4813,1.80248,9.23828,18.2299,2.07933,9.17224,17.9882,2.3404,9.40303,18.028,2.21609,9.04703,18.0997,2.31258,9.01074,18.4001,1.9138,8.82128,18.0251,2.23918,8.86013,18.063,2.25193,8.70279,18.0222,1.92638,8.68825,18.0987,1.69463,9.16332,17.8418,1.76087,9.14174,17.7623,2.02504,9.58323,18.3723,1.30844,9.93935,18.0861,1.41102,9.8127,18.1726,1.38636,9.50735,18.3836,1.60865,9.57851,18.3673,1.54449,9.76059,18.1664,1.72624,9.92013,17.992,1.83702,9.89315,18.1221,1.6682,9.80187,18.2108,1.6296,9.32996,18.311,1.93285,9.05076,18.5102,1.7488,9.77834,17.6152,1.40428,10.0446,17.5356,1.46626,9.77936,17.5821,1.85977,9.3638,17.8798,2.2572,9.59671,17.7716,2.25377,9.68114,17.8613,2.25869,10.0287,17.5745,1.91376,10.0129,17.5696,1.99784,10.1212,17.9502,1.76041,9.90438,17.9559,0.997935,9.73806,18.0927,0.96767,9.725,18.164,1.81291,9.8899,17.9902,1.8913,9.4964,18.3623,1.67854,9.50048,18.3344,0.943455,9.17231,17.9973,1.41501,8.88612,17.8471,2.08327,9.08414,17.7374,2.18259,8.71509,18.1258,1.61642,9.1053,17.6281,2.84889,9.11732,17.6629,2.80874,9.05397,17.6431,2.79706,9.05321,17.6204,2.84061,9.16858,17.5161,2.59989,9.17806,17.4937,2.63149,9.11313,17.4681,2.62862,9.10396,17.4902,2.59594,9.16065,17.7627,2.24875,9.34915,17.8359,1.83872,9.42823,17.765,2.06043,9.13672,17.9215,1.65464,9.21738,17.9495,1.60339,9.32514,17.9304,1.02616,9.49348,17.9692,0.937125,9.61219,18.0093,0.88708,9.67188,18.0483,0.90373,9.01755,17.511,2.65873,9.01669,17.4987,2.67548,9.10457,17.3169,3.05746,9.20791,17.3349,3.07396,9.27116,17.4,3.07377,9.19944,17.6844,2.691,9.21255,17.6402,2.75481,9.23427,17.6249,2.72056,9.54103,18.0906,2.09651,8.77201,17.91,2.11786,9.02434,17.5788,2.81911,9.00259,17.5868,2.77427,9.22762,17.6129,2.7889,9.25223,17.5733,2.75323,9.22787,17.5491,2.93177,9.25101,17.4905,3.02693,9.29167,17.4706,2.98786,9.27227,17.5269,2.90183,9.30026,17.4321,2.97226,9.28389,17.4913,2.85369,9.21532,17.3418,2.94643,9.22461,17.3803,2.80205,9.0992,17.3203,2.93265,9.10169,17.3527,2.79195,9.05664,17.34,2.97006,9.03889,17.3844,2.86656,9.01933,17.4536,2.92996,9.04993,17.3843,3.02429,9.06257,17.9711,2.4535,9.17702,17.9106,2.41408,8.91397,17.9322,2.42926,8.90972,18.0904,2.27446,9.25479,17.8485,2.34448,9.23941,17.7855,2.42387,9.83574,17.6399,2.26537,9.90038,17.7193,2.27029,9.91706,17.8574,2.21902,9.78516,17.9635,2.17552,10.0865,17.9801,1.74531,10.1329,17.9302,1.43785,10.091,17.9716,1.43685,10.0167,17.9254,1.06683,10.0625,17.8712,1.06565,9.85869,17.5753,2.12565,10.0184,17.453,2.1784,10.0067,17.4814,2.2993,10.2047,17.5482,2.04962,10.113,17.4631,2.07145,10.0883,17.5507,0.96513,10.0608,17.4734,1.01228,10.1157,17.8047,1.0707,10.0421,17.4368,1.12108,10.112,17.4501,1.2385,10.3145,17.39,1.61112,10.3492,17.5216,1.62231,10.2276,17.8492,1.44328,9.96324,17.9477,2.07677,10.019,17.8817,2.11359,9.78363,18.0915,1.98294,9.67169,18.1692,1.90782,9.62041,18.1274,2.01207,9.88528,18.0231,2.03279,9.99886,18.0581,1.71273,10.036,18.0295,1.4249,9.95771,17.985,1.06692,9.43783,18.3159,1.84936,9.50806,18.3205,1.78461,9.76692,17.5676,2.07314,9.54997,17.7161,2.17249,9.17681,17.9885,1.51876,9.23678,17.5858,2.65843,9.24048,17.5757,2.6711,9.43332,17.754,2.16406,9.15646,17.7078,2.3209,9.07244,17.6813,2.27505,8.90908,17.7449,2.21252,8.81914,17.8388,2.23489,9.14729,17.6248,2.47522,9.07197,17.6105,2.41926,8.97363,17.6667,2.39227,8.94899,17.7144,2.48993,9.0148,17.7592,2.60472,9.10455,17.8006,2.59129,9.18127,17.7726,2.5583,9.22978,17.6974,2.54149,9.25099,17.5356,2.71147,9.18303,17.4525,2.68915,9.11449,17.4389,2.67662,9.02714,17.478,2.71759,9.01486,17.5346,2.81021,9.0821,17.5793,2.89068,9.1711,17.6305,2.84754,9.23241,17.6235,2.61309,9.15788,17.5544,2.55566,9.07837,17.5537,2.51244,8.99449,17.54,2.61693,9.12967,17.4791,3.07054,9.11678,17.5097,2.99452,9.10278,17.5458,2.94698,9.14424,17.4385,3.13385,8.97956,17.6059,2.6928,8.99931,17.5545,2.73241,9.16338,17.6599,2.79969,9.13643,17.6975,2.74769,9.0365,17.7187,2.67813,9.09529,17.6968,2.75902,9.0073,17.6249,2.74016,9.0366,17.6815,2.7445,10.9851,16.8793,2.47143,10.9357,16.8889,2.52995,10.9228,16.8476,2.55008,11.0045,16.8196,2.47502,10.2027,17.3282,2.36634,10.256,17.244,2.39027,10.326,17.3199,2.43985,10.2316,17.3976,2.41473,10.8654,16.8065,2.50203,10.8601,16.7974,2.44787,10.3689,17.3915,2.1192,10.4434,17.3234,2.15543,10.3445,17.2632,2.17197,10.2871,17.3395,2.15665,10.0571,17.5916,2.33468,10.0881,17.7248,2.2791,10.1525,17.7335,2.0922,10.1111,17.8147,2.14825,10.8788,16.8164,2.39052,10.9804,16.8576,2.35399,10.9849,16.8865,2.39671,10.8268,17.0577,2.43535,10.7345,17.1461,2.41139,10.6703,17.1091,2.5002,10.8102,17.0142,2.50852,10.8561,17.0178,2.35988,10.7271,17.1116,2.30276,10.8403,16.9499,2.30612,10.6514,17.0854,2.25799,10.6847,16.8998,2.31325,10.562,17.0269,2.30061,10.6499,16.8849,2.40267,10.5319,17.0059,2.37981,10.5307,17.0241,2.44853,10.6656,16.9135,2.47493,10.7674,16.9517,2.55993,10.5827,17.0836,2.50767,10.6405,17.174,2.48432,10.5391,17.1201,2.508,10.692,17.1781,2.29672,10.6289,17.1063,2.24593,10.4859,17.1029,2.25822,10.4708,17.0524,2.34565,10.2309,17.3956,2.1162,10.2826,17.4625,2.0854,10.1419,17.4753,2.37749,10.1254,17.3834,2.35376,10.4882,17.416,2.22521,10.4098,17.506,2.19238,10.4024,17.5465,2.28812,10.5223,17.4123,2.33983,10.4509,17.0839,2.44045,10.2886,17.2168,2.28344,10.6645,17.229,2.39457,10.2291,17.3039,2.26654,10.412,17.4307,2.40656,10.3288,17.509,2.38646,10.1327,17.3569,2.23026,10.2396,17.5954,2.3262,10.2801,17.676,2.23069,10.3132,17.5781,2.15044,10.1643,17.7606,2.17514,10.4037,17.3843,1.15392,10.4563,17.3638,1.0702,10.3548,17.4803,1.0818,10.3308,17.4496,1.1705,10.2258,17.3356,1.19778,10.2712,17.2517,1.20737,10.3372,17.3134,1.20643,10.2765,17.3794,1.2212,10.25,17.3848,0.958145,10.3146,17.3176,0.9639,10.2463,17.275,1.00494,10.201,17.355,1.02262,10.1246,17.5044,1.23873,10.1584,17.6559,1.1765,10.1176,17.6746,0.98432,10.4979,17.2538,1.14199,10.4505,17.1965,1.19863,10.4971,17.2762,1.05448,10.4089,17.1631,0.98694,10.4817,17.2161,0.984685,10.3251,17.1719,1.02128,10.2382,17.5392,0.98582,10.2478,17.6217,1.07377,10.31,17.448,0.99754,10.1402,17.4045,1.00348,10.1799,17.4543,0.96522,10.2044,17.4539,1.20883,10.1643,17.3852,1.21717,10.3853,17.3808,0.99945,10.3303,17.1833,1.19422,10.2279,17.2562,1.11213,10.3188,17.1673,1.11115,10.1891,17.319,1.11236,10.1453,17.3571,1.11328,10.2615,17.5433,1.16749,10.1966,17.705,1.0695,10.7155,17.3556,1.58462,10.7873,17.3357,1.49131,10.6637,17.4679,1.48587,10.6192,17.4251,1.59378,10.7243,17.342,1.39715,10.6293,17.4202,1.37021,10.5151,17.2795,1.60734,10.5734,17.1846,1.62898,10.6386,17.2633,1.64077,10.5574,17.3388,1.63717,10.5779,17.3324,1.32978,10.6746,17.2371,1.35037,10.6023,17.1923,1.39144,10.5214,17.2918,1.39512,10.3738,17.6688,1.55048,10.3831,17.4921,1.30838,10.3203,17.3973,1.37312,10.371,17.6663,1.34526,10.9076,17.1331,1.61274,10.8245,17.0917,1.67474,10.9195,17.1746,1.51716,10.8856,16.9985,1.4018,10.9284,17.1102,1.42662,10.7349,17.0315,1.43564,10.4237,17.3465,1.37078,10.4806,17.4162,1.31987,10.4453,17.4309,1.6275,10.4119,17.3458,1.61886,10.7189,17.0458,1.63252,10.5453,17.1836,1.50933,10.7359,16.9992,1.54473,10.504,17.2691,1.50598,10.4402,17.3171,1.50109,10.5295,17.531,1.55794,10.5308,17.5875,1.4588,10.2992,17.3632,1.49403,10.4118,17.7117,1.44783,10.5394,17.5147,1.37682,-0.70151,18.3672,1.97079,-0.36869,18.3517,2.09445,-0.4007,18.9406,2.16974,-0.679185,19.049,2.06328,-0.908605,19.0098,1.86427,-1.00245,18.3826,1.73975,-1.53222,18.6861,0.17188,-1.79191,18.6252,0.5717,-1.6967,18.8758,0.57405,-1.79235,18.566,1.0376,-1.70817,19.0444,1.10805,-1.12722,19.1674,1.82474,-1.29274,18.4491,1.61175,-1.46979,19.1627,1.56065,-1.55647,18.5086,1.4324,-2.79541,23.44,-0.859873,-2.68086,24.0661,-0.677908,-2.29745,24.0605,-0.789438,-2.48297,23.2769,-0.969108,-2.53026,23.0709,-0.899914,-0.488795,25.2876,0.965083,-0.63066,25.3495,0.700673,-0.529445,24.7405,0.817717,-0.35292,24.7109,1.06158,-0.65482,25.3622,0.554708,-0.765925,25.3565,0.230383,-0.86103,24.7928,0.312757,-0.67932,24.7344,0.665922,-0.116885,24.7031,1.07991,-0.30896,25.2137,1.01371,-0.17655,25.1389,1.11437,0,24.7146,1.08517,-0,25.1441,1.16793,-0.496375,25.4202,-0.145922,-0.36104,25.4425,-0.272922,-0.49809,24.9226,-0.433323,-0.676235,24.9174,-0.298693,-0,25.4528,-0.381907,0,24.941,-0.564343,-0.81232,24.8834,-0.082148,-0.63398,25.3829,0.029253,-0.56159,24.4473,0.958817,-0.289385,24.3989,1.12283,-0.04773,24.2862,1.05692,0,24.2826,1.07299,-0.80316,24.4898,0.768667,-1.33384,24.5249,0.259017,-0.885125,24.8414,0.111352,-1.33422,24.625,-0.050393,-0.587795,24.6422,-0.613578,-0.982445,24.6595,-0.544858,-1.25472,24.6639,-0.306518,-0.6769,24.4189,1.05557,-0.337295,24.3431,1.24392,-1.39729,24.4431,0.497052,-0.86987,24.4435,0.921952,-0.655905,24.3493,-0.808583,-1.14464,24.3921,-0.764533,-1.76962,24.5032,-0.252923,-1.62475,24.48,-0.492643,-0.677905,24.2466,1.11095,-0.312785,24.1452,1.31087,-0.05305,24.147,1.22882,0,24.1418,1.22352,-1.44026,24.3386,0.627407,-0.88846,24.2779,1.00191,-0.98202,24.0811,-0.983643,-0.655715,24.0711,-0.940008,0,24.3513,-0.827518,0,24.1424,-0.944083,-2.11011,24.3021,-0.616913,-2.19159,24.4157,-0.360483,-1.41078,24.1291,-0.958978,-1.65407,24.2395,-0.835738,-0.866815,23.7792,-1.1185,-0.643245,23.804,-1.05806,0,23.8349,-1.06902,-2.6135,24.2124,-0.566083,-2.6097,24.3152,-0.368423,-1.16507,23.7851,-1.10786,-1.53182,23.9406,-1.046,-0.881525,24.0997,1.10806,-0.63905,24.0515,1.20818,-1.48272,24.1995,0.769207,-1.8066,24.4817,-0.042358,-1.86324,24.4786,0.051117,-1.63312,24.4728,0.192577,-1.54667,24.5054,0.123342,-2.18687,24.4397,-0.113813,-2.5717,24.3444,-0.142473,-1.67187,24.4375,0.308252,-1.9083,24.4491,0.171272,-1.98387,24.3374,0.337447,-1.69984,24.3465,0.454567,-2.25136,24.3734,0.122112,-2.45809,24.1999,0.312717,-2.20101,24.1994,0.477202,-2.52901,24.3276,0.040467,-2.71007,24.1888,0.133907,-2.85465,24.1892,-0.095738,-2.90919,24.1661,-0.344283,-1.90853,24.2078,0.567362,-2.2275,23.6392,0.870822,-1.99555,23.6666,1.07237,-1.71073,24.2137,0.636522,-2.85304,24.1053,-0.555143,-0.20424,22.9432,-1.15504,-0.57969,23.3026,-1.14656,0,23.5063,-1.15195,0,22.9911,-1.12604,-1.67253,23.7942,1.1786,-1.75278,22.8443,-1.12172,-1.24528,22.5973,-1.14548,-0.264085,23.2059,1.863,0,23.1769,1.80996,0,23.525,1.68058,-0.567995,23.4745,1.6893,-0.43195,22.5338,2.38768,-0.69257,22.0141,2.56008,-0.465255,21.8627,2.39841,-0.14172,22.481,2.21389,-2.14035,22.0589,1.31535,-1.95631,21.6855,1.66373,-2.07178,21.9229,1.87876,-2.19916,22.2564,1.53277,-1.67102,21.8797,-0.722464,-1.57447,22.1402,-0.884629,-1.36381,21.9877,-0.897894,-1.37166,21.6647,-0.748089,-1.37437,23.7094,1.38406,-0.87175,23.6184,1.5555,-0.647805,22.5106,-1.13134,-0.395465,22.0251,-0.999378,-1.04495,21.9262,-0.931414,-0.5893,21.5145,-0.849859,-1.02039,21.4467,-0.780784,-0.383035,21.7864,2.32354,0,22.0714,2.22598,0,22.3073,2.14933,-1.99542,21.8711,1.13669,-1.79791,21.5172,1.54151,-1.92484,21.5714,0.023206,-1.74332,21.4199,-0.347174,-1.65935,20.652,0.038721,-1.76758,20.6496,0.403801,-1.12804,20.2522,-0.372144,-1.40484,19.8012,0.148746,-1.50086,21.0791,-0.420829,-1.15545,20.8287,-0.547234,-0.68734,20.7987,-0.662974,-2.0453,21.6518,0.513331,-2.14918,22.1695,0.263206,-2.07579,22.1853,-0.282739,-0.342235,20.7949,-0.705869,-0.34686,19.9859,-0.540764,-0.737105,20.0199,-0.496739,0,22.0596,-0.898873,-0.147165,22.05,-0.959773,-1.08658,21.4715,2.33731,-1.64027,21.4577,2.0194,-1.51103,21.3959,1.96678,-1.04834,21.4819,2.3025,-1.87787,24.0261,-0.931338,-2.255,23.0029,-0.951033,-2.39385,23.1346,0.545292,-2.33235,23.0812,0.751057,-2.34132,22.9451,0.334692,-2.33072,22.9461,0.575502,-2.36575,22.8712,-0.783198,-2.30935,22.7396,-0.615029,-2.42543,22.7621,-0.622124,-2.56883,22.9075,-0.798019,-2.34746,22.9007,0.055122,-2.31406,22.7811,-0.132434,-2.26182,22.7593,-0.084353,-2.26947,22.8462,0.071907,-2.41555,22.996,0.204737,-2.22861,22.6743,0.402997,-2.19444,22.6278,0.089112,-2.18596,22.5205,-0.174694,-1.29504,22.2249,-1.00631,-1.08868,22.0625,-0.960834,0,20.7972,-0.576839,0,20.1251,-0.440449,-2.41779,23.593,0.703282,-2.06087,24.1694,0.590887,-2.5122,23.0824,0.359067,-2.25887,22.704,0.688952,-2.15665,22.3502,0.851276,-2.20435,22.5325,1.08036,-2.27357,22.8833,0.900112,-2.15501,22.2643,0.640036,-2.31397,22.7233,-0.368243,-2.26632,22.6809,-0.299248,0,22.794,1.97347,-0.085915,22.8574,2.03689,-1.86203,23.524,1.28031,-1.82237,23.3569,1.46635,-1.34403,23.5149,1.58567,-0.387875,21.0104,2.42214,-0.41768,19.9801,2.31038,0,20.0455,2.28252,0,21.1291,2.38782,-1.24168,20.3776,2.03593,-1.49309,20.7836,2.01136,-1.67945,20.5979,1.77303,-1.39678,20.1966,1.87455,-1.80991,20.4222,1.42652,-1.47748,19.9551,1.69692,-1.79112,20.29,0.995271,-1.89609,20.743,0.862291,-1.6614,20.2513,0.420921,-0.95967,19.9359,-0.339589,-0.688565,19.4431,-0.376619,-1.05964,19.5394,-0.187144,-0.308155,19.362,-0.481275,0,19.2555,-0.28681,-0.368805,21.4953,2.35158,0,21.7055,2.29049,-1.42308,21.2481,2.07137,-1.29143,20.9493,2.16681,-0.925745,21.2417,2.36529,-2.08162,23.1821,1.07744,-0.3874,22.9197,2.15966,-2.16968,22.8351,1.30406,-2.23415,22.6108,-0.523204,-1.74542,22.568,-0.993688,-1.73647,22.348,-0.912883,-1.90711,22.2409,-0.702734,-2.11775,22.6656,-0.772539,0,18.8951,2.07655,0,19.5038,2.17465,-0.39883,19.5144,2.20045,-0.67304,19.506,2.13564,-0.86169,19.5126,2.0052,-1.28525,19.5613,1.79144,-1.00103,19.5251,1.92171,-1.0029,19.7837,1.95819,-1.5815,19.2526,0.543265,-1.44688,19.0645,0.184085,-1.13788,18.8832,-0.16167,-1.19205,18.706,-0.189955,-1.64497,19.3624,1.10021,-0.87037,22.5577,-1.1804,-0.79324,18.711,-0.340255,-1.5891,19.67,0.52521,-1.53126,20.0371,0.287166,-1.66358,19.7224,1.08685,-0.660495,19.9366,2.20467,-1.16054,22.2505,-1.0198,-1.03894,22.595,-1.18897,-1.00896,23.6211,-1.14811,-1.47422,19.5066,1.59689,-1.67325,21.2273,1.81449,-1.83479,21.0704,1.5392,-2.05817,21.7857,0.925661,-1.91355,20.9199,1.22188,-1.0803,20.5088,2.19518,-0.799825,20.6951,2.35419,-1.26568,21.6954,2.51321,-1.74386,21.6655,2.24357,-2.04137,22.8233,1.65747,-1.78658,23.2036,1.69166,-1.41354,23.31,1.78839,-1.03499,23.2459,1.95435,-0.80904,23.405,1.77343,-0.79445,22.5366,2.54678,-1.00626,22.2056,2.65433,-0.09006,24.0102,1.36081,-2.50473,22.9539,0.211327,-2.46212,22.8417,0.067271,-2.3976,22.737,-0.166999,-2.37657,22.7182,-0.419199,-0.1841,21.5672,-0.868054,0,18.7087,-0.30311,-0.316995,18.7162,-0.42517,-0.50367,23.1847,1.95873,-0.734975,22.8582,2.37291,-0.839125,23.0625,2.16349,-2.11441,22.45,1.82862,-2.03997,22.1797,2.1154,-1.78876,22.0025,2.40005,-1.43089,21.9923,2.59235,-1.18273,22.6426,2.54795,-1.30989,22.4474,2.6239,-1.55918,22.3587,2.56022,-1.75045,22.3518,2.44181,-1.90546,22.4782,2.24183,-1.93552,22.6437,2.08587,-1.89361,22.8268,1.98212,-1.72907,23.0184,1.94394,-1.49072,23.0993,2.02669,-1.27066,23.0703,2.17914,-1.16266,22.9619,2.30476,-1.09708,22.8174,2.44669,0,21.5631,-0.818709,0,24.0132,1.33582,-1.79281,22.7298,2.24242,-1.71814,22.7477,2.35566,-1.70734,22.833,2.28615,-1.76797,22.8247,2.19122,-1.70966,22.6065,2.39972,-1.78149,22.6617,2.31223,-1.51042,22.6502,2.50827,-1.52168,22.7796,2.44982,-1.63201,22.7225,2.44589,-1.60921,22.6109,2.47978,-1.37885,22.8157,2.43965,-1.43489,22.7426,2.48449,-1.49859,22.8673,2.37733,-1.38357,22.9023,2.35505,-1.44043,22.9508,2.26772,-1.59255,22.9076,2.28194,-1.66166,22.9047,2.14603,-1.55293,22.9605,2.204,0,24.6298,-0.712373,-0.746475,25.2997,0.139413,0,18.3354,1.94207,-0.756155,26.223,0.235327,-0.57717,26.2338,-0.045998,-0.498355,25.7965,-0.093512,-0.66499,25.6224,0.089443,-0.591365,25.8093,0.910338,-0.722295,25.8226,0.577338,-0.466445,25.7693,1.0604,-0.192175,25.4059,1.14651,-0.301895,25.4487,1.05866,-0.72628,25.8401,0.395453,-0.31205,25.7602,1.07691,-0.30789,25.8492,-0.200432,-0,25.8967,-0.295212,-0.17772,25.6209,1.22433,-0.493035,25.9935,1.18073,-0.702225,26.2121,0.902167,-0.337055,25.8799,1.22968,-0.75994,26.2454,0.451667,-0.134065,25.7413,1.35618,-0.296065,26.2851,-0.131428,-0,25.5977,1.25365,0,25.7218,1.35654,-0,25.3911,1.20555,0,26.2923,-0.260183,-2.08114,24.4587,0.077677,-2.0604,24.4809,-0.008658,0.4007,18.9406,2.16974,0.368865,18.349,2.09409,0.70151,18.3672,1.97079,0.679185,19.049,2.06328,1.00245,18.3826,1.73975,0.908605,19.0098,1.86427,1.53222,18.6861,0.17188,1.6967,18.8758,0.57405,1.79191,18.6252,0.5717,1.79318,18.5683,1.03549,1.70817,19.0444,1.10805,1.29274,18.4491,1.61175,1.12722,19.1674,1.82474,1.55841,18.4939,1.42954,1.46979,19.1627,1.56065,2.79541,23.44,-0.859873,2.48297,23.2769,-0.969108,2.29745,24.0605,-0.789438,2.68086,24.0661,-0.677908,2.53026,23.0709,-0.899913,2.56883,22.9075,-0.798018,0.488795,25.2876,0.965083,0.35292,24.7109,1.06158,0.529445,24.7405,0.817717,0.63066,25.3495,0.700673,0.65482,25.3622,0.554708,0.67932,24.7344,0.665922,0.86103,24.7928,0.312757,0.765925,25.3565,0.230383,0.30896,25.2137,1.01371,0.116885,24.7031,1.07991,0.17655,25.1389,1.11437,0.49809,24.9226,-0.433323,0.36104,25.4425,-0.272922,0.496375,25.4202,-0.145922,0.676235,24.9174,-0.298693,0.63398,25.3829,0.029253,0.81232,24.8834,-0.082148,0.289385,24.3989,1.12283,0.56159,24.4473,0.958817,0.04773,24.2863,1.05692,0.80316,24.4898,0.768667,1.33384,24.5249,0.259017,1.33423,24.625,-0.050393,0.885125,24.8414,0.111352,0.587795,24.6422,-0.613578,0.982445,24.6595,-0.544858,1.25472,24.6639,-0.306518,0.337295,24.3431,1.24392,0.6769,24.4189,1.05557,1.39729,24.4431,0.497052,0.86987,24.4435,0.921952,0.655905,24.3493,-0.808583,1.14465,24.3921,-0.764533,1.76962,24.5032,-0.252923,1.62475,24.48,-0.492643,0.312785,24.1452,1.31087,0.677905,24.2466,1.11095,0.05305,24.147,1.22882,1.44026,24.3386,0.627407,0.88846,24.2779,1.00191,0.982021,24.0811,-0.983643,0.655715,24.0711,-0.940008,2.11011,24.3022,-0.616913,2.1916,24.4157,-0.360483,1.41079,24.1291,-0.958978,1.65407,24.2395,-0.835738,0.866816,23.7792,-1.1185,0.643245,23.804,-1.05806,2.6097,24.3152,-0.368423,2.6135,24.2124,-0.566083,1.16507,23.7851,-1.10786,1.53182,23.9406,-1.046,0.881525,24.0997,1.10806,0.63905,24.0515,1.20818,1.48272,24.1995,0.769207,1.8066,24.4817,-0.042358,1.54667,24.5054,0.123342,1.63312,24.4728,0.192577,1.86324,24.4787,0.051117,2.18687,24.4397,-0.113813,2.5717,24.3444,-0.142473,1.67187,24.4375,0.308252,1.69984,24.3465,0.454567,1.98387,24.3374,0.337447,1.9083,24.4491,0.171272,2.20102,24.1994,0.477202,2.45809,24.1999,0.312717,2.25136,24.3734,0.122112,2.71007,24.1888,0.133907,2.52901,24.3276,0.040467,2.85465,24.1892,-0.095738,2.90919,24.1661,-0.344283,1.90853,24.2078,0.567362,1.71073,24.2137,0.636522,1.99555,23.6666,1.07237,2.2275,23.6392,0.870822,2.85304,24.1053,-0.555143,2.59325,23.6701,0.588452,2.9125,23.637,0.431002,3.20967,23.6439,0.242117,0.57969,23.3026,-1.14656,0.20424,22.9432,-1.15504,1.67253,23.7942,1.1786,1.75278,22.8443,-1.12172,1.24528,22.5973,-1.14548,0.264085,23.2059,1.863,0.567995,23.4745,1.6893,0.87037,22.5577,-1.1804,0.647805,22.5106,-1.13134,0.43195,22.5338,2.38768,0.14172,22.481,2.21389,0.465255,21.8627,2.39841,0.69257,22.0141,2.56008,2.07179,21.9229,1.87876,1.95631,21.6855,1.66373,2.14035,22.0589,1.31535,2.19916,22.2564,1.53277,1.67102,21.8797,-0.722464,1.37166,21.6647,-0.748089,1.36381,21.9877,-0.897894,1.57447,22.1402,-0.884629,1.37437,23.7094,1.38406,0.87175,23.6184,1.5555,0.395465,22.0252,-0.999378,1.02039,21.4467,-0.780784,0.5893,21.5145,-0.849859,1.04495,21.9262,-0.931414,1.99542,21.8711,1.13669,1.79791,21.5172,1.54151,1.92484,21.5714,0.023206,1.76758,20.6496,0.403801,1.65935,20.652,0.038721,1.74332,21.4199,-0.347174,1.50086,21.0791,-0.420829,1.40484,19.8012,0.148746,1.12804,20.2522,-0.372144,1.15545,20.8287,-0.547234,0.68734,20.7987,-0.662974,2.14918,22.1695,0.263206,2.0453,21.6518,0.513331,2.07579,22.1853,-0.282739,0.34686,19.9859,-0.540764,0.342235,20.7949,-0.705869,0.737105,20.0199,-0.496739,0.147165,22.05,-0.959774,1.51103,21.3959,1.96678,1.64027,21.4577,2.0194,1.08658,21.4715,2.33731,1.04834,21.4819,2.3025,1.87787,24.0261,-0.931338,2.255,23.0029,-0.951033,2.33235,23.0812,0.751057,2.39385,23.1346,0.545292,2.33072,22.9461,0.575502,2.34132,22.9451,0.334692,2.42543,22.7621,-0.622123,2.30935,22.7396,-0.615029,2.36575,22.8712,-0.783198,2.34746,22.9007,0.055122,2.26947,22.8462,0.071907,2.26182,22.7593,-0.084353,2.31406,22.7811,-0.132433,2.41555,22.996,0.204737,2.22861,22.6743,0.402997,2.19444,22.6278,0.089112,2.18596,22.5205,-0.174694,1.29504,22.2249,-1.00631,1.74542,22.568,-0.993688,1.73647,22.348,-0.912884,1.08868,22.0625,-0.960834,2.41779,23.593,0.703282,2.06087,24.1694,0.590887,2.5122,23.0825,0.359067,2.25887,22.704,0.688952,2.27357,22.8833,0.900112,2.20435,22.5325,1.08036,2.15665,22.3502,0.851277,2.15501,22.2643,0.640037,2.26632,22.6809,-0.299248,2.31397,22.7233,-0.368243,0.085915,22.8574,2.03689,1.34403,23.5149,1.58567,1.82237,23.3569,1.46635,1.86203,23.524,1.28031,0.387875,21.0104,2.42214,0.41768,19.9801,2.31038,1.24168,20.3776,2.03593,1.39678,20.1966,1.87455,1.67945,20.5979,1.77303,1.49309,20.7836,2.01136,1.47748,19.9551,1.69692,1.80991,20.4222,1.42652,1.79112,20.29,0.995271,1.6614,20.2513,0.420921,1.89609,20.743,0.862291,0.688565,19.4431,-0.376619,0.95967,19.9359,-0.339589,1.05964,19.5394,-0.187144,0.308155,19.362,-0.481275,0.368805,21.4953,2.35158,1.42308,21.2481,2.07137,0.925745,21.2417,2.36529,1.29143,20.9493,2.16681,2.08162,23.1821,1.07744,0.3874,22.9197,2.15966,2.16968,22.8351,1.30406,2.23415,22.6108,-0.523204,1.90711,22.2409,-0.702734,2.11775,22.6656,-0.772539,0.39883,19.5144,2.20045,0.86169,19.5126,2.0052,0.67304,19.506,2.13564,1.28525,19.5613,1.79144,1.0029,19.7837,1.95819,1.00103,19.5251,1.9217,1.44688,19.0645,0.184085,1.5815,19.2526,0.543265,1.19205,18.706,-0.189955,1.13788,18.8832,-0.16167,1.64497,19.3624,1.10021,0.794285,18.7129,-0.33946,1.5891,19.67,0.52521,1.53126,20.0371,0.287166,1.66358,19.7224,1.08685,0.660495,19.9366,2.20467,1.16054,22.2505,-1.0198,1.03894,22.595,-1.18897,1.00896,23.6211,-1.14811,1.47422,19.5066,1.59689,1.67325,21.2273,1.81449,1.83479,21.0704,1.5392,2.05817,21.7857,0.925661,1.91355,20.9199,1.22188,1.0803,20.5088,2.19518,0.799825,20.6951,2.35419,1.74386,21.6655,2.24357,1.26568,21.6954,2.51321,1.78658,23.2037,1.69166,2.04137,22.8233,1.65747,1.41354,23.31,1.78839,0.80904,23.405,1.77343,1.03499,23.2458,1.95435,1.00626,22.2057,2.65433,0.79445,22.5366,2.54678,0.09006,24.0102,1.36081,2.50473,22.9539,0.211327,2.46212,22.8417,0.067272,2.3976,22.737,-0.166998,2.37657,22.7182,-0.419198,0.1841,21.5672,-0.868054,0.316995,18.7162,-0.42517,0.50367,23.1847,1.95873,0.734975,22.8582,2.37291,0.839125,23.0625,2.16349,2.11442,22.45,1.82862,2.03997,22.1797,2.1154,1.78876,22.0025,2.40005,1.43089,21.9923,2.59235,1.18273,22.6426,2.54795,1.30989,22.4474,2.6239,1.55918,22.3587,2.56022,1.75045,22.3518,2.44181,1.90546,22.4782,2.24183,1.93552,22.6437,2.08587,1.89361,22.8268,1.98212,1.72907,23.0184,1.94394,1.49072,23.0993,2.02669,1.27066,23.0703,2.17914,1.16266,22.9619,2.30476,1.09708,22.8174,2.44669,0.383035,21.7864,2.32354,1.79281,22.7298,2.24242,1.71814,22.7477,2.35566,1.78149,22.6617,2.31223,1.70966,22.6065,2.39972,1.63201,22.7225,2.44589,1.60921,22.6109,2.47978,1.51042,22.6502,2.50827,1.52168,22.7796,2.44982,1.43489,22.7426,2.48449,1.37885,22.8157,2.43965,1.49859,22.8674,2.37733,1.38357,22.9023,2.35505,1.59255,22.9076,2.28194,1.55293,22.9605,2.204,1.44043,22.9508,2.26772,1.66166,22.9047,2.14603,1.70734,22.833,2.28615,1.76797,22.8247,2.19122,0.746475,25.2997,0.139413,0.66499,25.6224,0.089443,0.756155,26.223,0.235327,0.72628,25.8401,0.395453,0.591365,25.8093,0.910338,0.722295,25.8226,0.577338,0.466445,25.7693,1.0604,0.192175,25.4059,1.14651,0.301895,25.4487,1.05866,0.31205,25.7602,1.07691,0.30789,25.8492,-0.200432,0.498355,25.7965,-0.093512,0.17772,25.6209,1.22433,0.702225,26.2121,0.902167,0.493035,25.9935,1.18073,0.337055,25.8799,1.22968,0.75994,26.2454,0.451667,0.134065,25.7413,1.35618,0.57717,26.2338,-0.045998,0.296065,26.2994,-0.131428,2.08115,24.4587,0.077677,2.0604,24.4809,-0.008658,2.68531,2.73502,-1.1582,2.84669,2.63985,-1.25789,2.7197,2.46051,-1.29874,2.60182,2.43619,-1.24873,3.17783,2.86878,-0.241954,2.9229,2.8442,-0.322199,2.97153,2.33215,-0.177049,3.25812,2.36307,-0.170999,3.4155,2.70866,-1.25025,3.49808,2.31426,-1.30424,3.37511,2.43011,-1.4597,3.30064,2.68275,-1.34269,3.42909,2.84291,-0.386359,3.49701,2.34325,-0.307179,3.63286,2.35806,-0.554079,3.53389,2.78482,-0.697819,2.7672,2.79217,-0.526419,2.65579,2.72829,-0.803784,2.67242,2.30167,-0.582699,2.74547,2.32976,-0.351264,3.04094,2.45682,-1.59447,2.80864,2.41888,-1.44537,2.87294,2.63831,-1.45224,3.04994,2.64702,-1.58516,3.25781,2.66588,-1.49903,3.25739,2.40024,-1.55553,2.82322,1.07191,-1.1677,2.81103,0.45515,-0.651135,2.80981,0.95521,-0.580145,2.73433,1.40274,-0.99511,2.68963,1.0782,-1.40724,2.60985,1.59195,-1.40691,2.76601,2.16833,-1.54876,2.96003,2.25071,-1.71771,2.8853,1.87344,-1.99315,2.60994,1.71219,-1.74785,3.33874,1.8171,-0.04445,3.30787,2.17942,-0.163854,3.00444,2.1239,-0.166369,3.01997,1.74164,-0.077155,2.91002,1.50431,-2.05933,2.59024,1.36493,-1.84285,3.49189,2.03276,-1.3916,3.68703,1.98826,-1.11645,3.61368,1.70218,-1.16338,3.46163,1.76893,-1.49458,3.74055,0.600325,-0.84105,3.73486,1.03646,-0.7818,3.79356,0.826675,-0.568065,3.81539,0.439475,-0.61421,3.49136,1.26235,-1.65477,3.51837,1.62634,-1.56453,3.62471,1.52408,-1.18278,3.68915,1.04163,-1.03587,3.31412,2.20595,-1.66353,3.3437,1.87726,-1.93722,3.40719,1.52404,-1.96777,3.59725,1.85776,-0.222625,3.60435,1.24528,-0.092785,3.70211,1.16819,-0.42464,3.69174,1.94378,-0.457214,2.74344,1.78746,-0.607175,2.84514,1.59635,-0.24692,2.79295,2.06412,-0.325379,2.68325,2.02245,-0.603055,2.6153,1.87661,-0.983985,2.71544,2.15019,-1.41187,3.18016,1.00801,-1.55353,3.22926,0.87543,-1.27307,2.96084,0.85236,-1.18965,2.82044,0.96612,-1.4468,2.94539,0.44287,-0.760305,2.92706,-0.139775,-0.419135,2.82479,-0.15547,-0.347555,2.97598,1.35241,-1.99236,2.69013,1.24323,-1.84862,3.34463,1.31833,-1.91284,3.56025,0.87311,-1.25849,3.45833,1.08751,-1.63432,3.73594,2.34846,-0.888514,3.69653,2.2212,-1.14288,3.5575,2.73991,-1.01285,3.67336,2.64976,-0.881699,3.61097,2.39708,-1.28088,3.69648,2.06505,-1.09505,3.5374,0.0691,-0.63983,3.31854,-0.052985,-0.570825,3.19571,0.25595,-0.70602,3.41705,0.273255,-0.77637,2.74193,0.28741,-0.255865,2.85637,0.36453,-0.03719,2.82176,1.041,-0.1025,3.7396,0.564685,-0.098615,3.82607,0.50012,-0.210485,3.3088,0.678125,0.143515,3.42516,1.29665,0.099225,3.04754,1.26556,0.05475,3.04294,0.645015,0.15477,2.62221,2.70461,-0.931484,2.52522,2.34856,-1.0021,3.68261,2.40129,-0.780419,3.70469,2.20179,-0.816219,3.51142,0.70885,0.13443,3.52204,2.1764,-0.264994,3.66839,2.14561,-0.477199,3.41542,2.15212,-1.55875,3.74193,1.39942,-0.77135,3.73795,1.99073,-0.741549,3.43598,1.90695,-1.67274,2.58922,2.04619,-1.011,2.61793,2.19191,-1.31218,3.75257,0.44403,-0.79663,3.82648,0.25349,-0.635125,3.74758,0.186055,-0.653775,3.85108,-0.03896,-0.54962,3.6994,-0.146495,-0.53424,3.90783,0.18211,-0.50955,3.9056,-0.007225,-0.562775,3.8895,0.53935,-0.29416,3.70791,0.32931,-0.800395,3.10574,-0.07706,0.337865,3.41773,-0.049865,0.329675,3.94394,-0.177365,-0.337865,3.97989,-0.37927,-0.37465,3.99784,-0.018485,-0.062505,3.8019,-0.063235,0.132015,3.8996,-0.08214,0.1062,2.95632,-0.66791,0.03336,2.83981,-0.615405,0.091315,3.74893,-0.671785,-0.095465,3.60455,-0.6974,-0.084995,3.35958,-0.67861,-0.01091,3.94795,-0.522285,-0.34899,2.80959,-0.27282,0.255465,2.92707,-0.149315,0.318105,3.62076,-0.0473,0.270845,3.15758,-0.617195,1.13522,3.2141,-0.40475,1.11041,3.07065,-0.529795,1.01354,3.31717,-0.63773,1.13102,3.44043,-0.417855,1.15701,4.10142,-0.51078,0.227425,4.05907,-0.563415,-0.024285,4.0609,-0.489925,-0.00711,3.57733,-0.663925,1.07619,3.64162,-0.456345,1.01711,4.10278,-0.71442,0.40511,4.05211,-0.51471,0.540605,3.90418,-0.711645,0.78829,3.95203,-0.492595,0.7608,3.8213,-0.48743,0.88547,3.72473,-0.705065,0.98368,3.16785,-0.37757,0.891425,3.01698,-0.462355,0.863505,3.10482,-0.667725,0.87877,3.34463,-0.382145,0.846825,3.23368,-0.705715,0.87723,4.01096,-0.56524,-0.205125,4.00167,-0.41781,-0.227785,4.05065,-0.373025,0.19114,3.5698,-0.351515,0.82349,3.50298,-0.691265,0.790035,4.0142,-0.69461,0.21334,4.00012,-0.41512,0.469265,3.84781,-0.71192,0.59345,3.89755,-0.41426,0.650265,3.7396,-0.72132,0.80148,3.77345,-0.32176,0.65791,2.9425,-0.469585,0.56462,2.95863,-0.620425,0.598855,3.03106,-0.367275,0.58512,3.23197,-0.275825,0.56424,3.46442,-0.24651,0.56638,3.66768,-0.26411,0.474085,3.82646,-0.322285,0.456225,3.9741,-0.25761,0.343855,3.98105,-0.23749,0.106585,3.99896,-0.32589,-0.279215,4.01844,-0.494145,-0.27928,4.01135,-0.655895,0.01184,3.77549,-0.70356,0.33009,3.64057,-0.71916,0.4991,3.38159,-0.686425,0.52787,3.09482,-0.70816,0.57575,-2.68531,2.73502,-1.1582,-2.60182,2.43619,-1.24873,-2.7197,2.46051,-1.29874,-2.84669,2.63985,-1.25789,-3.17783,2.86878,-0.241954,-3.25812,2.36307,-0.170999,-2.97153,2.33215,-0.177049,-2.9229,2.8442,-0.322199,-3.4155,2.70867,-1.25025,-3.30064,2.68275,-1.34269,-3.3751,2.43011,-1.4597,-3.49808,2.31426,-1.30424,-3.42909,2.84291,-0.386359,-3.53389,2.78482,-0.697819,-3.63286,2.35806,-0.554079,-3.49701,2.34325,-0.307179,-2.7672,2.79217,-0.526419,-2.74547,2.32976,-0.351264,-2.67242,2.30167,-0.582699,-2.65579,2.72829,-0.803784,-2.87294,2.63831,-1.45224,-2.80864,2.41888,-1.44537,-3.04094,2.45682,-1.59448,-3.04994,2.64702,-1.58516,-3.25739,2.40024,-1.55553,-3.25781,2.66588,-1.49903,-2.82322,1.07191,-1.1677,-2.73433,1.40274,-0.99511,-2.80981,0.95521,-0.580145,-2.81103,0.45515,-0.651135,-2.68963,1.0782,-1.40724,-2.60985,1.59195,-1.40691,-2.76601,2.16833,-1.54876,-2.60994,1.71219,-1.74785,-2.8853,1.87344,-1.99315,-2.96003,2.25071,-1.71771,-3.33874,1.8171,-0.044449,-3.01997,1.74164,-0.077154,-3.00444,2.1239,-0.166369,-3.30787,2.17942,-0.163854,-2.91002,1.50431,-2.05933,-2.59024,1.36493,-1.84285,-3.49189,2.03276,-1.3916,-3.46163,1.76893,-1.49458,-3.61368,1.70218,-1.16338,-3.68703,1.98826,-1.11645,-3.74055,0.600325,-0.84105,-3.81539,0.439475,-0.61421,-3.79356,0.826675,-0.568065,-3.73486,1.03646,-0.7818,-3.49136,1.26235,-1.65477,-3.68915,1.04163,-1.03587,-3.62471,1.52408,-1.18278,-3.51837,1.62635,-1.56453,-3.3437,1.87726,-1.93722,-3.31412,2.20596,-1.66353,-3.40719,1.52404,-1.96778,-3.70212,1.16819,-0.42464,-3.60435,1.24528,-0.092785,-3.59725,1.85776,-0.222624,-3.69174,1.94378,-0.457214,-2.74344,1.78746,-0.607174,-2.68325,2.02245,-0.603054,-2.79295,2.06412,-0.325379,-2.84514,1.59635,-0.246919,-2.71544,2.15019,-1.41187,-2.6153,1.87661,-0.983985,-3.18016,1.00801,-1.55353,-2.82044,0.96612,-1.4468,-2.96084,0.85236,-1.18965,-3.22926,0.87543,-1.27307,-2.82479,-0.15547,-0.347555,-2.92706,-0.139775,-0.419135,-2.94539,0.44287,-0.760305,-2.69013,1.24323,-1.84862,-2.97598,1.35241,-1.99236,-3.34463,1.31833,-1.91284,-3.45833,1.08751,-1.63432,-3.56025,0.87311,-1.25849,-3.73594,2.34846,-0.888514,-3.67336,2.64976,-0.881699,-3.5575,2.73991,-1.01285,-3.69653,2.2212,-1.14288,-3.69648,2.06505,-1.09505,-3.61097,2.39708,-1.28088,-3.19571,0.25595,-0.70602,-3.31854,-0.052985,-0.570825,-3.5374,0.0691,-0.63983,-3.41705,0.273255,-0.77637,-2.74193,0.28741,-0.255865,-2.82176,1.041,-0.1025,-2.85637,0.36453,-0.03719,-3.7396,0.564685,-0.098615,-3.82607,0.50012,-0.210485,-3.3088,0.678125,0.143515,-3.04294,0.645015,0.15477,-3.04754,1.26556,0.05475,-3.42516,1.29665,0.099225,-2.62221,2.70461,-0.931484,-2.52522,2.34856,-1.0021,-3.70468,2.20179,-0.816219,-3.68261,2.40129,-0.780419,-3.51142,0.70885,0.13443,-3.52204,2.1764,-0.264994,-3.66839,2.14561,-0.477199,-3.41542,2.15212,-1.55875,-3.73795,1.99073,-0.741549,-3.74193,1.39942,-0.77135,-3.43598,1.90695,-1.67274,-2.61793,2.19191,-1.31218,-2.58922,2.04619,-1.011,-3.75258,0.44403,-0.79663,-3.82648,0.25349,-0.635125,-3.85108,-0.03896,-0.54962,-3.74758,0.186055,-0.653775,-3.69941,-0.146495,-0.53424,-3.90783,0.18211,-0.50955,-3.9056,-0.007225,-0.562775,-3.8895,0.53935,-0.29416,-3.70791,0.32931,-0.800395,-3.10574,-0.07706,0.337865,-3.41773,-0.049865,0.329675,-3.97989,-0.37927,-0.37465,-3.94394,-0.177365,-0.337865,-3.99784,-0.018485,-0.062505,-3.8996,-0.08214,0.1062,-3.8019,-0.063235,0.132015,-2.83981,-0.615405,0.091315,-2.95632,-0.66791,0.03336,-3.60455,-0.6974,-0.084995,-3.74893,-0.671785,-0.095465,-3.35958,-0.67861,-0.01091,-3.94795,-0.522285,-0.34899,-2.92707,-0.149315,0.318105,-2.80959,-0.27282,0.255465,-3.62077,-0.0473,0.270845,-3.15758,-0.617195,1.13522,-3.07065,-0.529795,1.01354,-3.2141,-0.40475,1.11041,-3.31717,-0.63773,1.13102,-3.44043,-0.417855,1.15701,-4.10142,-0.51078,0.227425,-4.0609,-0.489925,-0.00711,-4.05907,-0.563415,-0.024285,-3.64162,-0.456345,1.01711,-3.57733,-0.663925,1.07619,-4.10278,-0.71442,0.40511,-4.05211,-0.51471,0.540605,-3.90418,-0.711645,0.78829,-3.95203,-0.492595,0.7608,-3.8213,-0.48743,0.88547,-3.72473,-0.705065,0.98368,-3.16785,-0.37757,0.891425,-3.01698,-0.462355,0.863505,-3.10482,-0.667725,0.87877,-3.34463,-0.382145,0.846825,-3.23368,-0.705715,0.87723,-4.01096,-0.56524,-0.205125,-4.00167,-0.41781,-0.227785,-4.05065,-0.373025,0.19114,-3.5698,-0.351515,0.82349,-3.50298,-0.691265,0.790035,-4.0142,-0.69461,0.21334,-4.00012,-0.41512,0.469265,-3.84781,-0.71192,0.59345,-3.89755,-0.41426,0.650265,-3.7396,-0.72132,0.80148,-3.77345,-0.32176,0.65791,-2.95863,-0.620425,0.598855,-2.9425,-0.469585,0.56462,-3.03106,-0.367275,0.58512,-3.23197,-0.275825,0.56424,-3.46442,-0.24651,0.56638,-3.66768,-0.26411,0.474085,-3.82646,-0.322285,0.456225,-3.9741,-0.25761,0.343855,-3.98105,-0.23749,0.106585,-3.99896,-0.32589,-0.279215,-4.01844,-0.494145,-0.27928,-4.01135,-0.655895,0.01184,-3.77549,-0.70356,0.33009,-3.64057,-0.71916,0.4991,-3.38159,-0.686425,0.52787,-3.09482,-0.70816,0.57575,-0.34601,16.9635,1.67832,-0,16.9569,1.68578,-0,17.6082,1.92288,-0.383525,17.6074,1.86704,-0.74055,17.5876,1.69827,-1.0351,17.5291,1.49185,-0.988085,17.1783,1.47196,-0.65881,17.0608,1.60638,-1.58268,17.8878,1.37387,-1.77709,17.9851,1.2672,-1.87263,17.7239,1.23435,-1.63177,17.5253,1.37588,-1.9402,18.1723,0.4253,-1.91799,18.3912,0.5598,-1.8336,18.1244,0.14752,-1.90688,18.1377,0.26152,-1.88836,18.2331,0.97337,-1.91206,18.0242,1.01576,-1.95558,18.1859,0.640515,-1.94185,18.1296,0.83911,-0.11676,17.5888,-0.95226,-0.38417,17.6744,-0.918625,-0.444425,17.7193,-0.86791,-0.461765,18.0064,-0.682915,-1.25204,17.5202,1.45257,-1.24015,17.2089,1.36003,-0,16.4575,1.53885,-0.46501,16.5302,1.5452,-0.85514,16.8466,1.41766,-0.59714,16.5684,1.48395,-0.025545,17.0343,-1.20647,-0.18119,17.2338,-1.1493,-0.283985,17.4922,-1.03782,-0.895345,16.3353,1.12273,-0.597655,16.4712,1.43455,-0.45555,18.3398,-0.45623,-0.151295,18.0195,-0.578275,-0.77426,17.8848,-0.63582,-0.732095,17.9532,-0.5378,-0.670695,17.9099,-0.633685,-0.636125,17.791,-0.699565,-0.850215,18.0869,-0.42478,-0.928545,18.3937,-0.358575,-1.06589,18.1357,-0.47092,-0.971265,17.9502,-0.571875,-1.33872,17.9694,-0.551725,-1.34093,18.2295,-0.33922,-1.09936,17.915,-0.59601,-1.66118,18.1085,-0.11207,-1.6506,18.3915,0.130995,-1.50899,18.0329,-0.39392,-1.77233,18.2158,0.14643,-1.25579,17.9029,1.53801,-1.02407,17.9275,1.59269,-0.71787,17.9571,1.8636,-1.25191,18.5102,-0.221225,-0.91014,17.875,-0.62585,-0.62256,17.7514,-0.791895,-0.85643,17.8053,-0.699445,-0.54344,17.7748,-0.788955,-0.37756,18.2223,2.07592,0,18.1367,1.96469,-1.97957,17.4869,1.11947,-1.81878,17.2697,1.20437,-0.0133,16.6143,-1.25598,-0.03013,16.8306,-1.18307,-0,16.6402,-0.909505,-0,16.5037,-0.90416,-2.64791,10.0606,-0.900877,-2.55218,10.5758,-0.863317,-2.4867,10.5423,-1.06307,-2.51555,10.0129,-1.11184,-2.12648,10.4778,-1.22843,-2.2336,9.92129,-1.26262,-1.86343,10.4645,-1.22722,-1.91925,9.89839,-1.27223,-2.88925,10.1659,-0.117727,-2.87817,10.9032,-0.005192,-2.81015,10.8513,-0.462172,-2.87134,10.2254,-0.554222,-1.51768,10.6381,-1.10383,-1.29324,10.7847,-0.986062,-1.33408,9.97932,-1.09373,-1.67386,10.0737,-1.19938,-1.25375,9.97923,0.141073,-1.19374,10.0778,-0.102022,-1.1087,10.8468,0.055953,-1.12971,10.9466,0.389563,-1.12841,10.1051,-0.288177,-1.13707,10.0096,-0.692632,-1.0635,10.8187,-0.537347,-1.09814,10.743,-0.224937,-1.48579,10.9756,0.820488,-2.1567,10.9302,0.920183,-2.24717,10.1382,0.707528,-1.52907,10.0329,0.549508,-2.72001,10.1726,-0.811737,-2.64608,10.6824,-0.777627,-2.75202,7.39382,-1.93396,-2.20247,7.3419,-1.98145,-2.38013,6.49544,-2.16783,-2.93479,6.50424,-2.17537,-3.16752,7.41887,-1.72216,-3.39093,6.5224,-1.93199,-3.47822,7.40799,-1.33367,-3.6218,6.44376,-1.55756,-3.64827,6.42469,-1.20253,-3.48651,7.34436,-0.994378,-2.49749,7.98475,0.055107,-2.82251,8.20164,-0.136483,-2.89003,7.7017,-0.241963,-2.61327,7.27829,-0.028458,-1.83577,7.20557,-1.57385,-1.98655,6.25004,-1.73906,-2.64846,9.2998,0.318088,-2.3177,9.28627,0.515938,-2.24147,9.48872,0.530623,-2.73008,9.64386,0.294598,-1.27456,9.27228,-0.904502,-1.28649,9.40287,-0.296132,-1.56271,8.68619,-0.321323,-1.56391,8.64327,-0.813938,-1.90851,9.22539,-1.2318,-1.85506,9.29596,-1.22637,-1.81621,9.23997,-1.24259,-1.87684,9.12353,-1.27932,-2.40905,9.39088,-1.31432,-2.02033,9.3197,-1.33583,-2.06682,9.21487,-1.37037,-2.47762,9.27648,-1.35458,-2.66145,9.32686,-1.16341,-2.61928,9.41971,-1.12701,-2.76434,9.38511,-1.06163,-2.69591,9.47518,-1.01132,-2.99139,9.00629,-0.321012,-3.08078,9.07572,-0.755387,-3.16233,8.6071,-0.737668,-2.98395,8.43344,-0.358758,-2.93856,9.39208,-0.237307,-2.81453,9.09795,-0.041952,-2.82465,9.29303,0.010598,-2.83373,9.47839,-0.074867,-2.66825,8.93005,0.161777,-2.72833,9.08554,0.204123,-1.34154,12.4848,1.23765,-2.03749,12.2932,1.22689,-2.68372,12.1436,0.833658,-2.70647,10.9056,0.586168,-2.96588,12.0351,0.231018,-2.88992,11.9566,-0.340207,-2.44108,11.603,-1.00109,-2.61092,11.862,-0.813242,-2.2108,11.6731,-1.16046,-1.93688,11.5375,-1.25671,-1.63966,11.7998,-1.33961,-1.62218,10.5826,-1.15067,-1.11569,11.9834,-1.01796,-0.9889,11.8479,-0.802432,-2.17225,12.0495,-1.18399,-2.8826,9.76993,-0.206867,-2.91947,9.78162,-0.634527,-3.00012,9.40901,-0.670827,-2.75106,9.71238,-0.876007,-2.68744,9.67459,-0.931147,-2.85195,9.39704,-0.986812,-2.59183,9.58623,-1.14819,-2.35078,9.50491,-1.31524,-1.98446,9.45996,-1.32634,-1.86609,9.40185,-1.23992,-1.76239,9.46778,-1.26228,-2.76794,10.0868,0.375208,-0.808835,12.1342,-0.346777,-0.61644,12.6688,-0.439362,-0.74531,12.2366,0.037613,-0.915985,11.6997,-0.040267,-0.925985,11.7194,-0.380067,-0.872775,12.7778,0.822274,-0.70818,12.5216,0.348408,-0.551585,13.0374,0.150214,-0.70991,12.8647,0.600269,-1.48128,9.31953,-1.20444,-1.70131,8.74193,-1.18086,-1.77761,7.01072,-1.01347,-1.93777,6.0567,-1.10779,-1.74351,10.0271,-1.18336,-1.90249,9.31323,-1.25361,-2.92761,9.12976,-1.03726,-3.06644,8.6432,-1.10432,-2.75834,9.12923,-1.19865,-2.85365,8.63391,-1.37079,-2.92186,8.62152,-1.19086,-2.85405,9.12861,-1.11302,-2.53098,9.08957,-1.40457,-2.58508,8.57385,-1.53284,-2.05077,9.08088,-1.41811,-2.16497,8.5067,-1.60393,-1.75928,8.43301,-1.30421,-3.28831,7.0994,-0.586178,-2.75816,8.73592,-0.076623,-2.42476,8.25003,0.131967,-2.35894,8.4682,0.203912,-2.64524,8.70457,0.150632,-1.94607,8.50236,0.054152,-2.06313,7.99611,-0.018883,-1.76849,8.21718,-0.322623,-1.71648,8.44292,-0.226788,-1.73848,8.16118,-0.519758,-1.65093,8.45419,-0.488913,-1.62957,8.30804,-0.826543,-1.81265,8.11676,-0.355873,-2.16285,7.48194,-0.076093,-2.35642,8.98125,0.416668,-2.36859,8.80691,0.351437,-2.2449,9.83094,0.637358,-2.73786,9.83806,0.343528,-1.61522,9.60387,0.438988,-2.34965,5.78236,-0.523033,-2.09172,6.8775,-0.469048,-2.33439,6.82308,-0.102898,-2.62332,5.80638,-0.247318,-2.18232,5.69885,-0.779833,-2.0804,6.14595,-0.790723,-2.75382,5.0991,-0.264859,-3.01317,5.83821,-0.182318,-3.1238,5.14872,-0.245104,-3.12043,4.29526,-1.82697,-3.35566,4.41423,-1.64214,-3.41878,5.20078,-0.494319,-3.32498,5.91315,-0.480363,-3.45923,5.89722,-0.723603,-3.55336,5.21092,-0.758509,-2.59401,4.27034,-1.58671,-2.78094,4.50148,-1.79118,-2.43253,4.2296,-1.26963,-2.45753,4.30628,-0.897889,-3.60606,4.46748,-1.47516,-3.62378,5.06574,-1.49885,-3.44526,4.97303,-1.77834,-2.50496,5.03608,-0.531539,-2.10053,5.51304,-1.20291,-2.17162,5.52782,-1.78572,-2.5671,5.78126,-2.13781,-3.04359,5.81157,-2.13572,-3.42912,5.75099,-1.92857,-3.64432,5.72578,-1.57867,-3.69866,5.80675,-1.13431,-2.42405,4.78538,-1.62799,-2.276,4.7474,-1.22735,-2.69117,4.96899,-1.94022,-3.08862,4.9656,-2.02075,-3.70193,5.15858,-1.13023,-1.71477,17.7149,-0.45449,-1.69668,17.9243,-0.253955,-1.54449,17.8491,-0.53626,-1.54545,17.6376,-0.700665,-1.33481,17.5978,-0.874975,-1.33094,17.805,-0.706195,-1.09205,17.7544,-0.75436,-1.03971,17.6256,-0.980135,-0.787095,17.6175,-1.02444,-0.83926,17.7356,-0.78844,-0.604525,17.686,-0.88577,-0.54047,17.6594,-0.954455,-2.04675,17.4079,-0.27335,-1.99494,17.6165,-0.169445,-1.88417,17.5551,-0.391485,-1.9283,17.2683,-0.60646,-1.78076,17.2012,-0.87135,-1.73442,17.4867,-0.6548,-1.56818,17.4136,-0.90505,-1.58102,17.2049,-1.1221,-1.35254,17.2042,-1.30082,-1.33536,17.4074,-1.0778,-1.04293,17.4408,-1.18821,-1.08949,17.2328,-1.39666,-2.04034,17.6702,0.895295,-2.08814,17.5017,0.824985,-2.05466,17.2096,0.942235,-2.11401,17.5962,0.665475,-2.0637,17.7642,0.73508,-2.06672,17.8123,0.53985,-2.14148,17.6072,0.447275,-0.76719,17.4582,-1.21475,-0.52445,17.4911,-1.13519,-0.51119,17.2347,-1.41148,-0.81392,17.2518,-1.42437,-0.21851,17.1426,-1.26356,-0.11268,17.0633,-1.25069,-0.313185,17.1319,-1.41359,-0.3224,17.3977,-1.14867,-2.05662,16.2366,-1.05211,-2.03272,15.8746,-1.19925,-2.25006,15.9725,-0.889156,-2.18515,16.4973,-0.6936,-1.71218,16.0914,-1.67427,-1.6883,15.6944,-1.72714,-1.84632,15.7593,-1.49144,-1.88868,16.1244,-1.35757,-1.42054,15.6836,-1.90775,-1.45558,16.0807,-1.87207,-1.11222,16.0994,-2.00495,-1.06757,15.7086,-2.01483,-2.44452,16.4147,0.571835,-2.41047,16.0625,0.817295,-2.13033,16.8686,0.851275,-2.28633,16.8257,0.631045,-2.37959,16.8322,0.199855,-2.49094,16.3658,0.119245,-2.48409,16.4408,0.37191,-2.33386,16.8538,0.43304,-0.372605,15.7888,-1.86611,-0.72211,15.7517,-1.99451,-0.76505,16.1403,-2.0067,-0.417935,16.2047,-1.88759,-0.056905,15.8978,-1.46511,-0.154095,15.847,-1.68383,-0.183565,16.2604,-1.72426,-0.05845,16.3122,-1.50452,-0.949465,15.4442,1.13587,-0.584935,15.1924,0.829959,-0.659915,15.4966,0.981014,-0.88445,15.8774,1.0732,-2.06225,15.8647,1.0473,-2.52549,15.2891,0.803589,-2.22167,14.9755,1.09307,-2.64427,15.6463,0.522879,-2.55052,16.0196,0.54437,-2.58187,15.9611,0.060745,-2.63342,15.6054,-0.019601,-2.67622,15.6647,0.290174,-2.58772,16.0392,0.3127,-1.50731,14.843,1.32871,-1.4633,15.5846,1.23582,-2.26546,14.7506,-1.05966,-2.23691,14.3535,-1.16229,-2.54145,14.5468,-0.795791,-2.40542,14.879,-0.877241,-1.74296,14.5583,-1.30364,-1.68646,14.2175,-1.35345,-2.0484,14.6535,-1.20196,-1.00635,14.3998,-1.25931,-1.44257,14.5417,-1.3283,-1.16074,14.5502,-1.26161,-0.43504,14.7916,-0.511466,-0.862945,14.6663,-1.06128,-0.59028,14.8096,-0.737916,-0.34829,14.4109,0.309694,-0.37157,14.8498,0.320424,-0.53949,14.7666,0.858634,-0.55475,14.3071,0.895844,-0.983345,14.7665,1.22935,-0.97612,14.2687,1.22639,-2.20637,14.1564,1.20016,-1.44727,14.2497,1.37275,-2.60404,14.7842,0.775939,-2.7013,15.2959,0.498329,-2.81769,14.7349,0.309224,-2.69229,15.2332,-0.065421,-2.77963,14.6576,-0.259506,-2.73858,15.2931,0.243629,-0.41647,14.6924,-0.518891,-0.47068,14.2689,-0.499496,-1.17229,16.2671,1.12912,-0.94407,16.1878,1.10865,-1.54021,17.0683,1.27553,-1.59794,16.9716,1.20708,-1.93501,17.0094,1.05561,-1.95393,17.9117,0.98437,-1.99493,17.8036,0.95629,-1.97606,18.0224,0.81742,-1.99242,18.0799,0.618095,-2.01928,17.9622,0.59366,-2.016,17.914,0.788985,-1.95236,17.8331,-0.01639,-1.89823,17.9956,0.07498,-1.82037,17.9789,-0.03568,-1.84069,17.7711,-0.23782,-2.01398,17.96,0.39647,-1.98368,18.0762,0.421185,-1.95432,18.0432,0.257105,-2.00821,17.8805,0.16583,-2.06087,17.7074,0.087475,-2.1158,17.5002,-0.01784,-2.13975,17.5812,0.22571,-2.06695,17.7869,0.31819,-2.46048,16.2772,-0.16656,-2.36342,16.7472,-0.08835,-2.30258,16.6477,-0.35875,-2.38272,16.1267,-0.56218,-2.44055,15.696,-0.642106,-2.4827,15.3281,-0.622176,-2.57412,15.4917,-0.329971,-2.53352,15.8498,-0.2521,-1.74449,13.6146,-1.37338,-0.97535,13.7721,-1.26964,-1.0288,12.7225,-1.17681,-1.62712,12.6079,-1.38317,-2.324,12.6855,-1.17113,-2.35376,13.6776,-1.19897,-2.72012,12.828,-0.809551,-2.68527,13.845,-0.802866,-2.96407,13.0051,-0.349506,-2.8879,13.9473,-0.321771,-2.99057,13.1054,0.195719,-2.90824,14.0093,0.224769,-2.74951,13.2055,0.803369,-2.70125,14.051,0.750834,-2.10701,13.3584,1.26032,-1.32741,13.5789,1.36841,-0.89197,13.7654,1.08511,-0.544635,13.8437,0.876029,-0.35093,14.0081,0.275794,-0.437445,13.6881,-0.466221,-2.13558,17.3311,0.75592,-2.19245,17.1246,0.681345,-2.23218,17.1842,0.50815,-2.17632,17.3911,0.58305,-2.2046,17.4022,0.365555,-2.28747,17.1652,0.275195,-2.17662,17.2724,-0.11794,-2.23172,17.0203,-0.23939,-2.28045,17.1162,0.034475,-2.20534,17.3554,0.124025,-2.14507,16.8737,-0.53899,-2.09911,17.1292,-0.42178,-1.97886,16.9889,-0.75445,-2.02763,16.6164,-0.9036,-1.86916,16.5085,-1.21705,-1.82414,16.8817,-1.0702,-1.62789,16.8881,-1.32442,-1.70101,16.4785,-1.541,-1.45444,16.483,-1.7391,-1.38243,16.8921,-1.52399,-1.12123,16.9222,-1.62172,-1.11454,16.505,-1.88281,-0.80755,16.9468,-1.64925,-0.506915,16.9256,-1.63027,-0.44834,16.5958,-1.79982,-0.800375,16.5273,-1.90289,-0.262895,16.938,-1.51755,-0.087975,16.8674,-1.37718,-0.07615,16.6565,-1.46343,-0.211825,16.6022,-1.67243,-1.80961,16.8564,1.11206,-2.00636,16.6186,0.98405,-1.78158,16.4775,1.06872,-2.75007,6.82665,-0.081868,-3.06046,6.92787,-0.355563,-1.44277,9.52414,0.055168,-1.95053,9.16319,0.339163,-2.01585,8.98369,0.235057,-1.81065,9.01247,0.126313,-1.79201,9.3601,0.348713,-1.67188,8.89966,-0.099433,-2.08456,8.83813,0.210313,-1.9001,8.83799,0.089122,-1.58153,18.3194,1.39531,-0.867585,14.7073,-1.08811,-0.86217,14.7228,-1.16148,-0.599675,14.8456,-0.791056,-0.584245,14.838,-0.767871,-1.40343,14.6751,-1.38854,-1.13925,14.6706,-1.35301,-1.13884,14.6441,-1.2857,-1.42166,14.6369,-1.34808,-1.68631,14.7621,-1.35993,-1.70768,14.7174,-1.32902,-2.01238,14.8131,-1.22382,-1.97976,14.9823,-1.2864,-0.376085,15.4989,-1.72512,-0.374945,15.1413,-1.41604,-0.763175,15.0793,-1.68745,-0.712935,15.3929,-1.87848,-1.10038,15.042,-1.77525,-1.39257,15.095,-1.73742,-1.41716,15.3426,-1.85954,-1.0582,15.3729,-1.9382,-1.81036,15.1336,-1.47784,-1.65221,14.9967,-1.55455,-1.64651,14.8556,-1.44734,-1.93416,15.0827,-1.36403,-1.98805,15.5256,-1.33787,-1.96358,15.3501,-1.37474,-2.09032,15.2984,-1.26395,-2.22769,15.6269,-1.04266,-0.848215,15.9502,1.03969,-0.64682,15.5874,1.02733,-0.75034,15.8895,1.07623,-0.36715,14.9347,0.329484,-0.35769,14.9721,0.346119,-2.62581,15.1543,-0.354341,-2.52704,14.9894,-0.643276,-0.433345,14.9551,-1.18084,-0.56375,14.8919,-0.922741,-0.83079,14.7793,-1.28861,-0.808475,14.8719,-1.46919,-1.39291,14.7568,-1.47973,-1.40469,14.8879,-1.60035,-1.11522,14.852,-1.61857,-1.12704,14.7361,-1.45551,4e-05,15.7167,-0.948016,0.001095,15.924,-1.24377,-0.01046,16.3391,-1.28425,-0,17.8156,-0.70173,-0,17.5765,-0.88377,-0,17.0745,-1.10184,-0.001,16.7504,-1.00232,-0.364905,18.5562,-0.430045,-0.101385,18.4108,-0.41799,-0,18.3664,-0.419015,-3.5833,4.54225,-0.758734,-3.45384,4.54849,-0.481904,-2.59485,4.38659,-0.608554,-2.81749,4.44155,-0.306934,-3.7008,4.51763,-1.08485,-3.15515,4.49763,-0.267299,-2.14251,8.61244,0.143927,-0.99163,11.5765,-0.689097,-2.31422,4.88821,-0.853514,-0.89694,12.0271,0.308483,-1.64749,9.33628,0.045238,-1.35853,9.58526,-0.118757,-2.81615,9.70675,-0.000332,-2.84605,9.88283,-0.026067,-2.1938,15.1767,-1.13641,-2.22983,15.0067,-1.07757,-2.36495,15.1344,-0.891951,-2.32945,15.5035,-0.915596,-1.65205,15.3989,-1.73998,-1.63879,15.1462,-1.63781,-1.79372,15.287,-1.55445,-1.83134,15.464,-1.52748,-1.98211,6.87894,-0.610098,0.34601,16.9635,1.67832,0.38352,17.6074,1.86704,0.988085,17.1783,1.47196,1.0351,17.5291,1.49185,0.74055,17.5876,1.69827,0.658805,17.0608,1.60638,1.87263,17.7239,1.23435,1.77708,17.9851,1.2672,1.58268,17.8878,1.37386,1.63177,17.5253,1.37587,1.9402,18.1723,0.4253,1.90688,18.1377,0.26152,1.8336,18.1244,0.147515,1.91799,18.3912,0.5598,1.91206,18.0242,1.01576,1.88836,18.2331,0.97337,1.95558,18.1859,0.640515,1.94185,18.1296,0.83911,0.11676,17.5888,-0.95226,0.4483,17.993,-0.682915,0.45206,17.7121,-0.86758,0.396515,17.6715,-0.919435,1.24023,17.2089,1.36003,1.25204,17.5202,1.45257,0.46413,16.5309,1.54593,0.85528,16.8466,1.41766,0.597275,16.5684,1.48395,0.297225,17.4904,-1.03729,0.18379,17.2336,-1.1493,0.02574,17.0336,-1.20669,0.896135,16.3366,1.12292,0.59796,16.4715,1.43466,0.151295,18.0195,-0.578275,0.45555,18.3398,-0.45623,0.66435,17.9138,-0.633685,0.715455,17.9616,-0.5378,0.76961,17.8972,-0.63582,0.63952,17.7924,-0.699565,0.825205,18.1046,-0.42478,0.92854,18.3937,-0.358575,1.06588,18.1357,-0.47092,0.964545,17.9711,-0.57205,1.33799,17.973,-0.551685,1.09583,17.9337,-0.596385,1.34092,18.2295,-0.33922,1.66118,18.1085,-0.11207,1.509,18.033,-0.39396,1.6506,18.3915,0.13099,1.85178,18.3114,0.3719,1.68402,18.4468,0.235225,1.25579,17.9029,1.53801,1.02407,17.9275,1.59269,0.71787,17.9571,1.8636,0.37756,18.2223,2.07592,1.25191,18.5102,-0.221225,0.900855,17.8975,-0.62529,0.85414,17.8245,-0.69964,0.62841,17.7515,-0.79157,0.54841,17.7692,-0.789285,1.97971,17.4869,1.11947,1.81919,17.2697,1.20436,0.011615,16.6143,-1.25602,0.000995,16.7504,-1.00232,0.024975,16.831,-1.18264,2.64791,10.0606,-0.900882,2.51555,10.0129,-1.11184,2.48669,10.5423,-1.06308,2.55218,10.5758,-0.863317,2.2336,9.92129,-1.26262,2.12647,10.4778,-1.22844,1.91925,9.89839,-1.27223,1.86343,10.4645,-1.22722,2.88925,10.1659,-0.117732,2.87134,10.2254,-0.554222,2.81015,10.8513,-0.462172,2.87816,10.9032,-0.005197,1.33408,9.97932,-1.09373,1.29324,10.7847,-0.986062,1.51768,10.6381,-1.10383,1.67385,10.0737,-1.19938,1.25375,9.97922,0.141073,1.12971,10.9466,0.389563,1.1087,10.8467,0.055953,1.19373,10.0778,-0.102027,1.1284,10.1051,-0.288182,1.09814,10.743,-0.224937,1.06349,10.8187,-0.537347,1.13706,10.0096,-0.692637,2.24717,10.1382,0.707528,2.1567,10.9301,0.920183,1.48579,10.9756,0.820488,1.52906,10.0329,0.549508,2.72001,10.1726,-0.811737,2.64607,10.6824,-0.777627,2.38012,6.49543,-2.16783,2.20247,7.3419,-1.98145,2.75201,7.39382,-1.93396,2.93479,6.50425,-2.17537,3.16751,7.41887,-1.72216,3.39093,6.5224,-1.932,3.47822,7.40799,-1.33367,3.62179,6.44376,-1.55756,3.64826,6.42469,-1.20253,3.48651,7.34436,-0.994378,2.49748,7.98475,0.055107,2.61326,7.27829,-0.028458,2.89003,7.7017,-0.241968,2.8225,8.20164,-0.136488,1.98654,6.25003,-1.73906,1.83576,7.20557,-1.57385,2.24146,9.48872,0.530623,2.3177,9.28627,0.515938,2.64845,9.29979,0.318088,2.73008,9.64386,0.294598,1.56271,8.68619,-0.321323,1.28649,9.40287,-0.296132,1.27456,9.27228,-0.904507,1.56391,8.64327,-0.813937,1.9085,9.22539,-1.2318,1.87684,9.12354,-1.27932,1.8162,9.23997,-1.24259,1.85505,9.29596,-1.22637,2.06681,9.21487,-1.37038,2.02032,9.3197,-1.33583,2.40904,9.39088,-1.31432,2.47761,9.27648,-1.35459,2.66144,9.32686,-1.16341,2.61927,9.4197,-1.12702,2.69591,9.47518,-1.01133,2.76433,9.38511,-1.06163,3.16233,8.60709,-0.737673,3.08077,9.07571,-0.755392,2.99138,9.00629,-0.321017,2.98395,8.43344,-0.358763,2.82464,9.29303,0.010598,2.81452,9.09795,-0.041957,2.93856,9.39208,-0.237312,2.83372,9.47839,-0.074867,2.72833,9.08554,0.204118,2.66825,8.93005,0.161773,2.03803,12.2932,1.22688,1.34136,12.4848,1.23765,2.70646,10.9056,0.586163,2.68417,12.1436,0.833653,2.96625,12.0351,0.231013,2.88984,11.9566,-0.340212,2.44104,11.603,-1.0011,2.61017,11.862,-0.813247,2.21071,11.6731,-1.16046,1.93688,11.5375,-1.25671,1.63963,11.7998,-1.33961,0.9889,11.8479,-0.802432,1.11614,11.9834,-1.01796,1.62218,10.5826,-1.15067,2.17098,12.0495,-1.18399,3.00012,9.409,-0.670832,2.91947,9.78162,-0.634527,2.8826,9.76992,-0.206872,2.75105,9.71238,-0.876012,2.85194,9.39703,-0.986812,2.68744,9.67459,-0.931152,2.59183,9.58623,-1.14819,2.35077,9.50491,-1.31524,1.98446,9.45996,-1.32634,1.76238,9.46778,-1.26228,1.86609,9.40185,-1.23992,2.76794,10.0868,0.375208,0.807275,12.1342,-0.346777,0.606185,12.6688,-0.439361,0.915985,11.6997,-0.040267,0.7416,12.2366,0.037608,0.925985,11.7194,-0.380067,0.863,12.7778,0.822274,0.697995,12.5216,0.348409,0.69991,12.8647,0.600269,0.54142,13.0374,0.150214,1.48128,9.31953,-1.20444,1.70131,8.74193,-1.18086,1.93776,6.0567,-1.10779,1.77761,7.01072,-1.01347,1.7435,10.0271,-1.18336,1.90248,9.31323,-1.25361,3.06644,8.64319,-1.10433,2.92761,9.12976,-1.03727,2.75834,9.12923,-1.19865,2.85404,9.1286,-1.11302,2.92185,8.62151,-1.19086,2.85364,8.6339,-1.37079,2.58508,8.57384,-1.53284,2.53098,9.08957,-1.40457,2.16497,8.50669,-1.60393,2.05076,9.08088,-1.41812,1.75927,8.43301,-1.30421,3.2883,7.0994,-0.586178,2.75816,8.73592,-0.076628,2.42476,8.25003,0.131967,2.64524,8.70457,0.150627,2.35894,8.4682,0.203907,1.94606,8.50236,0.054147,1.71647,8.44292,-0.226788,1.76849,8.21718,-0.322628,2.06313,7.99612,-0.018888,1.65092,8.45419,-0.488918,1.73847,8.16118,-0.519758,1.62957,8.30804,-0.826548,1.81265,8.11676,-0.355878,2.16285,7.48194,-0.076098,2.35642,8.98125,0.416663,2.36858,8.80691,0.351433,2.73786,9.83806,0.343528,2.2449,9.83094,0.637358,1.61522,9.60387,0.438983,2.34965,5.78236,-0.523038,2.62331,5.80638,-0.247323,2.33439,6.82308,-0.102898,2.09172,6.8775,-0.469048,2.0804,6.14595,-0.790728,2.1823,5.69885,-0.779838,3.01316,5.83821,-0.182323,2.75382,5.0991,-0.264864,3.1238,5.14872,-0.245104,3.12043,4.29526,-1.82697,3.35566,4.41423,-1.64215,3.41878,5.20078,-0.494319,3.55336,5.21092,-0.758509,3.45922,5.89723,-0.723608,3.32497,5.91315,-0.480363,2.59401,4.27034,-1.58671,2.78093,4.50148,-1.79119,2.45752,4.30628,-0.897889,2.43252,4.22961,-1.26963,3.44525,4.97302,-1.77834,3.62377,5.06574,-1.49885,3.60606,4.46748,-1.47516,2.50496,5.03608,-0.531539,2.10052,5.51304,-1.20291,2.17162,5.52782,-1.78573,2.5671,5.78127,-2.13781,3.04359,5.81156,-2.13573,3.42911,5.751,-1.92858,3.64432,5.72577,-1.57867,3.69865,5.80675,-1.13431,2.42404,4.78538,-1.628,2.27599,4.7474,-1.22735,2.69116,4.96899,-1.94022,3.08861,4.9656,-2.02075,3.70193,5.15857,-1.13023,1.71484,17.7149,-0.45453,1.54568,17.6381,-0.701035,1.54446,17.8491,-0.53622,1.69668,17.9243,-0.253955,1.33386,17.601,-0.87461,1.03901,17.6294,-0.980165,1.08854,17.7723,-0.75396,1.33025,17.8087,-0.706235,0.613445,17.6849,-0.8861,0.83965,17.7531,-0.78866,0.790355,17.6199,-1.02442,0.55446,17.6601,-0.95374,1.98508,17.4077,-0.27301,1.86706,17.2682,-0.606375,1.86387,17.5552,-0.391525,1.97521,17.6168,-0.169715,1.72491,17.2012,-0.86563,1.5452,17.2049,-1.09303,1.55264,17.4131,-0.898875,1.71904,17.4867,-0.64895,1.32181,17.2041,-1.26599,1.05883,17.2328,-1.36182,1.03269,17.4407,-1.17657,1.32536,17.4079,-1.06655,2.08841,17.5017,0.824985,2.04048,17.6702,0.89529,2.05549,17.2096,0.942235,2.11414,17.5962,0.66547,2.14258,17.6076,0.447105,2.06571,17.812,0.53991,2.06375,17.7642,0.73508,0.48319,17.2345,-1.37654,0.527035,17.4905,-1.12405,0.759585,17.4581,-1.20315,0.78589,17.2515,-1.38949,0.21234,17.1408,-1.25656,0.326675,17.3949,-1.14162,0.286565,17.1301,-1.38342,0.109405,17.0578,-1.24697,1.97626,16.2365,-1.052,2.10495,16.4973,-0.69365,2.17212,15.9723,-0.88874,1.95221,15.8746,-1.1993,1.62987,16.0915,-1.6744,1.80749,16.1244,-1.35769,1.7646,15.7593,-1.4914,1.60569,15.6944,-1.72715,1.02999,16.0993,-2.00505,1.37281,16.0807,-1.87194,1.33768,15.6836,-1.90775,0.98516,15.7086,-2.01484,2.13248,16.8686,0.851275,2.41697,16.0625,0.817289,2.44912,16.4147,0.57183,2.28892,16.8257,0.63104,2.38235,16.8322,0.200035,2.33628,16.8538,0.43304,2.48848,16.4408,0.37191,2.49419,16.3655,0.11936,0.293005,15.7899,-1.86411,0.336595,16.2044,-1.88711,0.68317,16.1404,-2.00661,0.640045,15.7517,-1.99451,0.035245,15.8976,-1.46541,0.03875,16.3121,-1.50457,0.121885,16.2607,-1.72474,0.130345,15.8459,-1.77199,0.953025,15.4442,1.13587,0.886845,15.8774,1.0732,0.66219,15.4966,0.981014,0.587295,15.1924,0.829959,2.53543,15.2891,0.803584,2.069,15.8647,1.0473,2.23154,14.9755,1.09307,2.65257,15.6463,0.522874,2.55704,16.0196,0.544365,2.58967,15.9614,0.06063,2.59404,16.0392,0.312695,2.68432,15.6647,0.290174,2.64049,15.6052,-0.019316,1.46876,15.5846,1.23582,1.51404,14.843,1.32871,2.26884,14.7506,-1.06011,2.40979,14.8789,-0.876661,2.54776,14.5468,-0.795791,2.23812,14.3535,-1.1623,1.7434,14.5583,-1.30376,2.04951,14.6535,-1.20151,1.68606,14.2175,-1.35345,1.00681,14.3998,-1.25931,1.16176,14.5508,-1.26107,1.44271,14.5418,-1.32818,0.43607,14.8025,-0.511466,0.589515,14.8078,-0.738406,0.863105,14.6657,-1.06181,0.34953,14.4109,0.309694,0.5569,14.3071,0.895844,0.54182,14.7666,0.858634,0.373005,14.8498,0.320424,0.979945,14.2687,1.22639,0.9876,14.7665,1.22935,2.215,14.1564,1.20015,1.45304,14.2497,1.37275,2.71082,15.2959,0.498329,2.61481,14.7842,0.775939,2.82845,14.7349,0.309219,2.70288,15.2334,-0.065711,2.74798,15.2931,0.243624,2.7904,14.6576,-0.259506,0.417485,14.6924,-0.518896,0.4717,14.2689,-0.499496,1.17457,16.2671,1.12912,1.59888,16.9716,1.20708,1.54079,17.0683,1.27553,0.94587,16.1878,1.10865,1.93633,17.0094,1.05561,1.99496,17.8036,0.95629,1.95395,17.9116,0.984365,2.02032,17.9625,0.593595,1.99242,18.0799,0.618095,1.97606,18.0224,0.817415,2.01599,17.914,0.78898,1.95172,17.8328,-0.01612,1.84062,17.7711,-0.23778,1.82037,17.9789,-0.03568,1.89823,17.9956,0.07498,2.01293,17.9596,0.39653,2.00883,17.8808,0.165555,1.95431,18.0432,0.257105,1.98368,18.0762,0.421185,2.12866,17.5809,0.225875,2.06547,17.5003,-0.01818,2.05007,17.7072,0.087745,2.05782,17.7872,0.318125,2.24419,16.6477,-0.358705,2.34495,16.7471,-0.08853,2.44597,16.2774,-0.166675,2.32547,16.1268,-0.562325,2.57294,15.4919,-0.330261,2.47818,15.328,-0.621596,2.39617,15.696,-0.642251,2.52823,15.8496,-0.251986,1.07864,12.7225,-1.17681,0.975245,13.7721,-1.26964,1.74309,13.6146,-1.37338,1.63329,12.6079,-1.38317,2.32198,12.6855,-1.17113,2.35328,13.6776,-1.19897,2.7203,12.828,-0.809551,2.68965,13.845,-0.802871,2.89712,13.9473,-0.321776,2.96847,13.0051,-0.349506,2.99529,13.1054,0.195719,2.9174,14.0093,0.224769,2.75447,13.2055,0.803369,2.71039,14.051,0.750829,2.11192,13.3584,1.26031,1.33084,13.5789,1.36841,0.894565,13.7654,1.08511,0.546135,13.8437,0.876029,0.35183,14.0081,0.275794,0.43795,13.6881,-0.466221,2.19372,17.1246,0.681345,2.13624,17.3311,0.75591,2.23323,17.1842,0.508145,2.28804,17.1651,0.275015,2.20405,17.4018,0.36572,2.17682,17.3911,0.58305,2.26149,17.1162,0.03465,2.17132,17.0203,-0.23944,2.1153,17.2722,-0.117605,2.18638,17.3557,0.12386,2.0649,16.8738,-0.53895,1.94699,16.6165,-0.90372,1.89785,16.9889,-0.754535,2.01848,17.1294,-0.42212,1.79287,16.5084,-1.21113,1.62376,16.4785,-1.53507,1.57164,16.8881,-1.2954,1.74753,16.8817,-1.06431,1.38233,16.483,-1.7276,1.04278,16.505,-1.87111,1.06998,16.9222,-1.58683,1.33109,16.8921,-1.48911,0.376415,16.5961,-1.78869,0.45581,16.9256,-1.59549,0.75648,16.9469,-1.61441,0.72876,16.5272,-1.89136,0.22719,16.938,-1.48843,0.156105,16.6019,-1.66614,0.06014,16.6566,-1.45757,0.073055,16.867,-1.3718,1.8113,16.8564,1.11206,1.78479,16.4775,1.06872,2.00942,16.6186,0.984045,2.75007,6.82665,-0.081873,3.06046,6.92787,-0.355568,1.44277,9.52414,0.055168,1.95053,9.16319,0.339158,1.79201,9.3601,0.348713,1.81065,9.01247,0.126313,2.01585,8.98369,0.235058,1.67188,8.89966,-0.099437,1.90009,8.83799,0.089118,2.08456,8.83812,0.210308,1.58153,18.3194,1.39531,0.848465,14.7079,-1.08757,0.566385,14.8398,-0.767376,0.53929,14.8456,-0.791056,0.801705,14.7228,-1.16116,1.11834,14.6434,-1.28624,1.07817,14.6706,-1.35333,1.34232,14.6753,-1.38865,1.40148,14.6368,-1.3482,1.91928,14.9825,-1.28601,1.99375,14.8131,-1.22426,1.68779,14.7174,-1.32891,1.62563,14.7619,-1.35983,0.29229,15.5305,-1.72706,0.63098,15.3928,-1.87842,0.68136,15.0792,-1.68738,0.292055,15.1393,-1.41618,1.01812,15.042,-1.77525,0.975825,15.373,-1.9382,1.33431,15.3426,-1.85954,1.31008,15.095,-1.73741,1.56492,14.8558,-1.44744,1.57022,14.9967,-1.55454,1.72873,15.1335,-1.47784,1.85386,15.0825,-1.36442,1.90739,15.5256,-1.33783,2.15001,15.6273,-1.04331,2.00982,15.2986,-1.26357,1.88274,15.3501,-1.37474,0.74476,15.8782,1.075,0.639105,15.5941,1.01673,0.85032,15.9502,1.03968,0.35715,14.9694,0.345814,0.368565,14.9347,0.329484,2.53578,14.9895,-0.643861,2.63339,15.1541,-0.354056,0.749395,14.7793,-1.28886,0.482825,14.8918,-0.922671,0.354195,14.9562,-1.18019,0.7269,14.8718,-1.46911,1.0333,14.852,-1.61857,1.32253,14.8879,-1.60036,1.31126,14.7566,-1.47963,1.0457,14.736,-1.45519,0.0002,15.9241,-1.24346,0.010945,16.3391,-1.28421,0.364905,18.5562,-0.430045,0.101385,18.4108,-0.41799,3.58329,4.54225,-0.758739,3.45384,4.54849,-0.481909,2.81748,4.44155,-0.306939,2.59484,4.38659,-0.608559,3.70079,4.51763,-1.08486,3.15515,4.49763,-0.267304,2.14251,8.61243,0.143922,0.991625,11.5765,-0.689097,2.31421,4.88821,-0.853514,0.894805,12.0271,0.308483,1.64749,9.33627,0.045238,1.35853,9.58526,-0.118757,2.84605,9.88282,-0.026072,2.81615,9.70675,-0.000332,2.13581,15.1765,-1.13679,2.27212,15.5032,-0.915086,2.35111,15.1345,-0.892536,2.21213,15.0067,-1.07712,1.56935,15.3989,-1.73998,1.74954,15.464,-1.52753,1.71172,15.287,-1.55445,1.55644,15.1462,-1.63782,1.9821,6.87894,-0.610098,-0.29644,14.9693,0.155419,-0.372985,15.0113,0.139574,-0.316355,14.9482,-0.257641,-0.16589,14.9282,-0.242131,0.31714,14.9482,-0.257641,0.37423,15.0113,0.139574,0.29578,14.9684,0.155769,0.166645,14.9282,-0.242161,-0.0514,15.6788,-1.24737,-0.14021,15.6148,-1.47538,-0.009735,15.7129,-1.12621,-0.39119,14.9513,-0.622316,-0.41067,14.9172,-0.336806,-0.2532,15.0006,-0.898706,-0.152795,15.249,-1.15469,0.149765,15.6098,-1.61269,0.036855,15.6903,-1.29673,0.00859,15.7127,-1.12653,1.77233,18.2158,0.14643,0.36247,14.9543,-0.606161,0.413285,14.9187,-0.336361,0.19741,15.0039,-0.875006,0.158585,15.1745,-1.32032,-0.175525,15.0921,-0.987721,0.160565,15.1051,-0.978911,-0.31132,16.0451,1.25056,-0,16.0351,1.29921,0.000165,15.2001,1.08489,-0.363445,15.345,1.01897,-0.24108,14.9836,0.687824,0.00021,14.919,0.738614,-0.60058,15.921,1.15476,-0.289835,15.6983,1.14848,7e-05,15.6322,1.17373,-0.62079,15.69,1.05456,-0.293625,14.9727,0.380879,-0.199985,14.9163,0.175384,0.000185,14.8791,0.409829,0.311645,16.0451,1.25056,0.242175,14.9836,0.687824,0.364725,15.345,1.01897,0.60184,15.921,1.15475,0.2905,15.6983,1.14848,0.294795,14.9728,0.380879,0.20074,14.9163,0.175384,0.074375,15.3398,-1.00707,0.622565,15.69,1.05456,-0.03024,15.4631,-0.911786,-0.07267,15.3293,-1.01558,-0.05322,15.2831,-0.740601,-0.015955,15.2931,-0.786381,0.00019,15.2259,-0.744406,-0.0707,15.1778,-0.632281,-0.037005,15.3523,-0.888646,-0.08997,15.2926,-0.673571,0.032885,15.4646,-0.909571,0.083955,15.2449,-0.777441,0.040775,15.3556,-0.886681,0.052955,15.3011,-0.747476,0.00398,15.4264,-0.821126,0.132065,15.5003,-0.739666,0.093565,15.5692,-0.802111,0.002995,15.4281,-0.823171,0.000625,15.5977,-0.827976,0.00062,15.4288,-0.824041,-0.092315,15.5692,-0.802111,-0.00175,15.4281,-0.823236,-0.130815,15.5003,-0.739666,-0.00273,15.4263,-0.821211,-0.092315,15.4315,-0.677221,-0.00174,15.4246,-0.819246,0.000625,15.403,-0.651356,0.00063,15.4238,-0.818386,0.093565,15.4315,-0.677221,0.003005,15.4246,-0.819186,0.132065,15.5743,-0.658101,0.093565,15.6432,-0.720546,0.000625,15.6717,-0.746411,-0.092315,15.6432,-0.720546,-0.130815,15.5743,-0.658101,-0.092315,15.5055,-0.595656,0.000625,15.477,-0.569791,0.093565,15.5055,-0.595656,0.132065,15.6483,-0.576536,0.093565,15.7172,-0.638981,0.000625,15.7457,-0.664846,-0.092315,15.7172,-0.638981,-0.130815,15.6483,-0.576536,-0.092315,15.5795,-0.514091,0.000625,15.551,-0.488226,0.093565,15.5795,-0.514091,0.10883,15.7223,-0.494971,0.077135,15.779,-0.546375,0.000625,15.8025,-0.567671,-0.075885,15.779,-0.546375,-0.10758,15.7223,-0.494971,-0.075885,15.6656,-0.443566,0.000625,15.6422,-0.422271,0.077135,15.6656,-0.443566,0.090155,15.6433,-0.010891,0.111345,15.6433,-0.119161,0.182115,15.4849,-0.119161,0.14741,15.4849,0.028714,0.03468,15.6433,0.056024,0.05655,15.4849,0.141194,-0.05576,15.4849,0.141194,-0.03389,15.6433,0.056024,-0.14662,15.4849,0.028714,-0.089365,15.6433,-0.010891,-0.181325,15.4849,-0.119161,-0.110555,15.6433,-0.119161,-0.089365,15.6433,-0.227436,-0.14662,15.4849,-0.267041,-0.03389,15.6433,-0.294351,-0.05576,15.4849,-0.358436,0.05655,15.4849,-0.358436,0.03468,15.6433,-0.294351,0.14741,15.4849,-0.267041,0.090155,15.6433,-0.227436,0.182115,15.3265,-0.119161,0.14741,15.3265,0.055334,0.05655,15.3265,0.242469,-0.05576,15.3265,0.242469,-0.14662,15.3265,0.055334,-0.181325,15.3265,-0.119161,-0.14662,15.3265,-0.267041,-0.05576,15.3265,-0.358436,0.05655,15.3265,-0.358436,0.14741,15.3265,-0.267041,0.182115,15.1681,-0.081701,0.14741,15.1681,0.082089,0.05655,15.1681,0.295934,-0.05576,15.1681,0.295934,-0.14662,15.1681,0.082089,-0.181325,15.1681,-0.081701,-0.116405,15.1681,-0.267041,-0.02487,15.218,-0.380546,0.025665,15.218,-0.380546,0.1172,15.1681,-0.267041,0.000355,14.8705,-0.048411,0.001145,14.8581,0.197804,0.001205,14.879,0.386299,-0.00024,14.879,0.386299,-0.00061,14.8581,0.197804,-0.000315,14.8705,-0.048401,0.002335,14.8817,-0.287386,0.00345,14.9417,-0.367311,0.00517,14.9424,-0.367311,0.003365,14.8817,-0.287386,0.0001,15.5297,-0.870485,0.06869,15.194,-0.629056,0.018635,15.2978,-0.787456,-0.075885,15.6803,-0.443566,-0.075885,15.7937,-0.546376,0.077135,15.6803,-0.443566,0.000625,15.6568,-0.422271,0.077135,15.7937,-0.546376,0.000625,15.8171,-0.567671,0.165995,15.1455,-0.565031,-0.162125,15.1499,-0.571866,0.00979,15.0086,-0.458311,0.000165,15.3188,-0.782976,-0.10758,15.737,-0.494971,0.10883,15.737,-0.494971,-1.11157,26.9604,0.805668,-1.1802,26.9835,0.788848,-1.20788,26.9711,0.749783,-1.17888,26.8702,0.792673,-1.12227,26.805,0.826523,-1.09488,26.8857,0.868608,-1.10021,26.6926,0.844668,-1.02638,26.7021,0.842408,-1.30454,27.5033,0.637328,-1.26446,27.4499,0.658883,-1.2857,27.4617,0.682983,-1.32258,27.5181,0.659013,-1.47338,27.5159,0.386463,-1.42818,27.504,0.397673,-1.41819,27.5391,0.419443,-1.46354,27.5623,0.421378,-1.40285,27.5899,0.527288,-1.37878,27.5706,0.509963,-1.47041,27.476,0.366273,-1.41872,27.4518,0.376788,-1.45016,27.2804,0.338423,-1.40402,27.28,0.349828,-1.40455,27.3628,0.358248,-1.45219,27.3966,0.343923,-1.24186,26.8903,0.709128,-1.26361,26.9812,0.722778,-1.27343,26.9071,0.621508,-1.41624,27.1016,0.380838,-1.39029,27.1153,0.387653,-1.34092,26.9813,0.474658,-1.31946,26.9869,0.493558,-1.2408,27.3976,0.662708,-1.23252,27.3587,0.649513,-1.2522,27.35,0.666563,-1.26802,27.4022,0.689383,-1.23445,27.3023,0.630548,-1.21056,27.3096,0.620368,-1.20172,27.2429,0.509693,-1.2029,27.2533,0.576053,-1.19398,27.2731,0.569983,-1.18884,27.2629,0.506868,-1.28314,27.0372,0.585208,-1.30382,26.9922,0.556078,-1.30001,26.9703,0.587558,-1.29771,27.0347,0.644913,-1.32785,27.1099,0.541903,-1.37814,27.1438,0.429593,-1.3335,27.1783,0.495583,-1.39118,27.2066,0.401648,-1.3447,27.2999,0.466573,-1.39403,27.3208,0.385818,-1.21036,27.2615,0.740003,-1.22068,27.2348,0.712043,-1.23968,27.2047,0.713573,-1.19801,27.2312,0.777093,-1.17797,27.5555,0.699573,-1.22999,27.5585,0.720933,-1.21084,27.5128,0.745998,-1.17433,27.4928,0.731368,-1.33135,27.6263,0.412408,-1.40563,27.6351,0.404058,-1.34702,27.6677,0.519303,-1.28028,27.6539,0.522283,-1.35687,27.5635,0.370883,-1.44569,27.5653,0.355768,-1.3593,27.4897,0.345043,-1.44786,27.5142,0.325668,-1.37397,27.3762,0.312458,-1.36924,27.2548,0.314893,-1.43338,27.2746,0.299828,-1.43235,27.396,0.300398,-1.334,27.0958,0.350488,-1.39593,27.0869,0.343148,-1.26414,26.9616,0.433738,-1.31991,26.9472,0.434068,-1.11973,26.7469,0.664598,-1.11616,26.714,0.709098,-1.21942,26.7815,0.562458,-1.19232,26.7882,0.556968,-1.25158,27.5672,0.552788,-1.2153,27.5346,0.621593,-1.25513,27.5741,0.623363,-1.27902,27.5941,0.587903,-1.35722,27.2447,0.367023,-1.40239,27.3545,0.345228,-1.34976,27.3399,0.362283,-1.16907,27.0497,0.642613,-1.16982,26.9471,0.674233,-1.14003,26.994,0.701023,-1.15609,27.0613,0.683778,-1.37279,27.1162,0.396818,-1.36974,27.1355,0.414828,-1.29651,26.9359,0.532223,-1.30144,26.9723,0.549413,-1.18435,26.7147,0.723008,-1.25106,26.7877,0.578888,-1.18763,27.4358,0.765573,-1.16355,27.3048,0.735878,-1.2277,27.4358,0.708288,-1.19521,27.3427,0.672418,-1.16559,27.2874,0.632413,-1.21163,27.252,0.679818,-1.13963,27.2726,0.544863,-1.17928,27.2824,0.476398,-1.20947,27.2389,0.468923,-1.16863,27.2134,0.577673,-1.18192,27.1611,0.512303,-1.23481,27.5264,0.569003,-1.21659,27.4798,0.616663,-1.22031,26.9974,0.526903,-1.26042,27.1115,0.496203,-1.25991,27.1885,0.443238,-1.23427,27.2677,0.412103,-1.36094,27.4723,0.440793,-1.32822,27.5345,0.438168,-1.34876,27.4217,0.365208,-1.3805,27.3905,0.406543,-1.18991,27.0995,0.763058,-1.20208,27.1511,0.784408,-1.22595,27.1402,0.713358,-1.20671,27.1067,0.715673,-1.18569,27.0997,0.736298,-1.13478,27.3997,0.628218,-1.13715,27.423,0.819093,-1.11563,27.2541,0.833338,-1.16027,27.1233,0.826313,-1.1859,27.1157,0.701088,-1.17404,27.0857,0.721043,-1.22311,27.194,0.679153,-1.21947,27.1483,0.689293,-1.18921,27.0084,0.741083,-1.13593,27.0254,0.787438,-1.19327,26.9512,0.578903,-1.23381,26.9875,0.702898,-1.16321,27.1018,0.599288,-0.988955,26.7556,0.712758,-1.14592,27.1996,0.563043,-1.10519,27.2118,0.588713,-1.14794,27.2455,0.606933,-1.16827,27.2307,0.555598,-1.11904,27.1258,0.580748,-1.07736,27.1481,0.604468,-1.10006,27.1116,0.597633,-1.07406,27.1265,0.636543,-1.19121,27.2332,0.739928,-1.20581,27.2111,0.718733,-1.1685,27.2121,0.696898,-1.15072,27.2302,0.713978,-1.15783,27.1823,0.644443,-1.12952,27.1792,0.642763,-1.13019,27.1282,0.640053,-1.16062,27.123,0.637768,-1.13785,27.1017,0.649118,-1.15475,27.0934,0.647268,-1.13811,27.114,0.732813,-1.17145,27.1102,0.712333,-1.18142,27.1905,0.739948,-1.19394,27.2275,0.777463,-1.12125,27.0849,0.708628,-1.16303,27.082,0.714683,-1.12966,27.0865,0.664083,-1.15147,27.0774,0.664108,-1.14837,27.0691,0.688123,-1.11759,27.0806,0.684078,-1.13076,27.2301,0.649233,-1.12456,27.2268,0.700143,-1.07841,27.1752,0.672108,-1.08068,27.1381,0.656083,-1.34403,27.4003,0.472123,-1.31951,27.43,0.480453,-1.29052,26.908,0.526798,-1.27204,26.8734,0.488853,-1.235,26.8765,0.497693,-1.19328,27.2257,0.659808,-1.23157,27.4234,0.591943,-1.2369,27.4639,0.644743,-1.31608,27.3673,0.500358,-1.3024,27.3277,0.497368,-1.20249,27.3496,0.459393,-1.16613,27.3266,0.510243,-1.258,27.3511,0.540388,-1.27641,27.3814,0.518028,-1.22268,27.4055,0.604313,-1.24296,27.4676,0.680898,-1.22015,27.4634,0.692068,-1.39309,27.5203,0.397978,-1.38508,27.5516,0.414713,-1.41265,27.4311,0.362053,-1.24991,27.4784,0.695278,-1.26988,26.846,0.576773,-1.22617,27.5231,0.655263,-1.24757,27.5298,0.672173,-1.36196,27.5645,0.609933,-1.31834,27.544,0.593753,-1.27117,27.6272,0.642583,-1.21618,27.6224,0.629903,-1.28988,27.5526,0.635053,-1.26158,27.5216,0.674628,-1.26042,27.457,0.436128,-1.24564,27.4777,0.507943,-1.26591,27.3964,0.410008,-1.28889,27.3198,0.365508,-1.28629,27.2437,0.360053,-1.28044,27.1377,0.399343,-1.21181,27.4768,0.559238,-1.1765,27.5051,0.576158,-1.18331,27.4895,0.538348,-1.15634,27.4487,0.396458,-1.16305,27.2511,0.321753,-1.13062,27.1301,0.346343,-1.05489,26.9412,0.472798,-1.17532,26.9675,0.505468,-1.03731,26.9243,0.581093,-1.13675,26.854,0.608613,-1.17029,27.2142,0.646573,-1.18765,27.2174,0.691368,-1.17974,27.2222,0.632993,-1.26348,27.0325,0.666248,-1.17891,26.9325,0.623653,-1.36271,27.5643,0.409638,-1.31886,27.6164,0.486303,-1.33715,27.6411,0.499368,-0.29426,27.289,2.23391,-0.47046,27.2486,2.20674,-0.440855,27.0675,2.27609,-0.271085,27.0854,2.29833,-0.778565,26.4988,0.144063,-0.655255,26.5098,-0.080508,-1.05632,27.2607,-0.074467,-1.11397,27.8373,-0.146382,-0.97947,27.7234,-0.403477,-0.935685,27.2417,-0.393072,-1.041,28.3067,-0.243582,-0.877385,28.1092,-0.422827,-1.22202,28.1037,0.251178,-1.09655,28.5655,0.039608,-1.15258,28.5821,0.711723,-1.03291,28.8705,0.560028,-1.01021,28.4238,1.47784,-0.85623,28.56,1.71236,-0.83055,28.8225,1.40101,-0.991125,28.731,1.25953,-0.62722,28.6548,1.90376,-0.30839,28.765,2.0563,-0.36604,29.0205,1.78359,-0.643105,28.9264,1.60399,-0.578255,29.0948,1.30158,-0.84488,28.9864,0.991418,-0.867535,28.2573,1.90637,-0.968575,28.1413,1.69887,-0.908275,27.8607,1.88922,-0.82196,27.8861,2.05489,-0.53297,28.3266,2.11725,-0.701,26.0259,1.31955,-0.83818,26.2309,1.1046,-0.853615,26.2929,1.22868,-0.727025,26.1309,1.43818,-0.77863,26.2934,1.54483,-0.851655,26.4284,1.32607,-0.42504,25.9349,2.00501,-0.488155,26.109,2.14143,-0.641575,26.1673,1.85486,-0.62487,26.0747,1.73999,-0.353915,25.8533,1.87955,-0.55146,25.9443,1.60243,-0.205685,25.8174,2.16078,-0.24833,25.8902,2.23636,-0.23237,26.0702,2.30755,-0.263115,26.1856,2.32603,-0.40314,26.2858,2.24509,-0.543375,26.3506,2.18159,-0.73665,26.5165,1.94836,-0.835975,26.5916,1.60494,-0.90401,26.7373,1.35552,-0.997225,27.0925,1.36668,-0.92777,26.87,1.66082,-0.987855,27.0991,1.75049,-1.02413,27.353,1.49134,-0.98445,27.7586,1.64321,-1.0387,27.7495,1.42179,-0.933035,27.6894,1.80153,-0.880065,26.9753,1.98738,-0.829585,26.7742,1.96187,-0.70246,26.8638,2.22946,-0.725585,27.0234,2.20845,-0.477075,27.4301,2.20941,-0.47542,27.3494,2.22035,-0.31575,27.3644,2.18043,-0.308645,27.4278,2.15846,-0.804625,27.5088,1.9928,-0.844245,27.5255,1.93284,-0.841485,27.4444,1.96064,-0.78298,27.4837,2.0304,-0.84232,27.2665,2.01142,-0.678155,27.2233,2.15622,-0.47811,27.6169,2.22152,-0.47567,27.6742,2.19091,-0.637695,27.681,2.15357,-0.65396,27.6211,2.16379,-0.26162,27.4705,2.18748,-0.203015,27.5285,2.20044,-0.267505,27.5636,2.16171,-0.30897,27.5032,2.17755,-0.338135,27.6193,2.15244,-0.387395,27.5697,2.20064,-0.490665,27.7486,2.23291,-0.338395,27.7095,2.23557,-0.341115,27.867,2.347,-0.541575,27.859,2.25255,-0.082075,27.0387,2.6327,-0.176125,26.9835,2.49688,-0.170005,26.9308,2.60672,-0.097195,26.9634,2.69438,0,26.9717,2.7076,0,27.0529,2.65154,-0.2421,26.9211,2.366,-0.22079,26.944,2.424,-0.19555,26.9638,2.38589,-0.22108,26.9413,2.34846,-0.57312,27.9686,2.26943,-0.343225,28.0048,2.35345,-0.233445,28.2398,2.26174,0,28.2797,2.26328,0,28.6831,2.15885,0,29.022,1.84259,-0.151845,26.8493,2.64486,-0.08623,26.8772,2.72944,-0.076625,26.7995,2.65135,-0.083115,26.7822,2.62228,-0.031875,26.7729,2.65383,-0.04136,26.8047,2.7012,-0.19655,26.9549,2.49894,-0.18234,26.8453,2.56493,-0.17477,26.9177,2.5583,-0.1237,26.8108,2.61014,-0.161805,26.8064,2.55871,-0.39821,26.4727,2.30031,-0.51976,26.4888,2.23684,-0.389125,26.3757,2.25038,-0.176785,26.6558,2.40243,-0.13146,26.7307,2.4195,-0.234085,26.7587,2.35753,-0.298915,26.7153,2.34548,-0.76004,27.5622,2.08339,-0.747125,27.6314,2.06174,-0.797305,27.5889,1.98786,-0.810225,27.5208,2.02427,-0.786265,27.3816,2.04292,-0.74241,27.4469,2.08675,-0.167935,26.2688,2.40031,-0.26706,26.311,2.3622,-0.13819,26.1631,2.36941,-0.904825,27.3761,1.88095,-0.189865,27.4495,2.22086,-0.249345,27.4427,2.19144,-0.266265,26.3448,2.37547,-0.163825,26.2959,2.42568,-0.15844,26.3371,2.44554,-0.257855,26.3852,2.35849,-0.12444,26.4413,2.43313,-0.23054,26.4309,2.33324,-0.02285,26.7228,2.46394,-0.06718,26.725,2.45417,-0.052495,26.6785,2.44219,-0.02596,26.6817,2.43471,-0.27224,26.5277,2.40317,-0.178085,26.5679,2.45042,-0.088435,26.5916,2.49282,-0.373235,26.4391,2.27698,-0.361875,26.3967,2.26192,-0.318825,26.4444,2.30095,-0.335345,26.4582,2.31666,-0.358105,26.4377,2.26398,-0.268295,26.5125,2.4098,-0.247655,26.438,2.40533,-0.15194,26.432,2.45141,-0.18049,26.5264,2.4696,-0.09884,26.5416,2.5201,-0.05807,26.4311,2.49077,0,26.4354,2.49728,0,26.5373,2.52673,-0.20103,26.7644,2.37205,-0.25348,26.8479,2.3388,-0.2387,26.8551,2.31867,-0.16601,26.7742,2.46669,-0.133335,26.7452,2.43748,-0.102605,26.7677,2.46502,-0.068125,26.7391,2.46511,-0.02292,26.7366,2.49234,0,26.7261,2.46536,0,26.7273,2.49405,-0.11151,26.8084,2.59906,-0.056675,26.8319,2.61699,-0.241025,26.8059,2.44885,-0.17459,26.7951,2.50328,-0.147055,26.7987,2.50813,-0.13535,26.8144,2.53931,-0.099875,26.7948,2.47762,-0.141025,26.7892,2.48858,-0.1895,25.8599,1.55994,0,25.8101,2.21095,0,25.8645,2.33831,-0.377375,26.5421,-0.219148,0,27.1916,-0.668397,-0.561225,27.2096,-0.565907,-0.49755,27.628,-0.709287,0,27.6157,-0.795842,-0.7521,29.0618,0.704368,-0.843325,29.0384,0.438808,-0.896085,28.8784,-0.047832,-0.76633,28.3301,-0.511582,-0.85647,28.6092,-0.310047,-0.58489,29.1983,0.748758,-0.52378,28.7709,-0.412297,-0.541845,28.4141,-0.632867,-0.5342,28.988,-0.191457,-0.615815,29.2119,0.319473,-0.604915,28.0933,-0.672697,-1.10455,27.5644,0.155993,-1.20983,27.7007,0.442913,-1.04343,26.961,0.933368,-0.985295,26.6594,1.01868,-0.991805,26.6955,1.14324,-1.05793,27.0093,1.05747,-1.22055,27.8551,0.788888,-1.17497,28.1168,0.989233,-1.15377,27.5952,0.737238,-1.12511,27.4401,0.862953,-1.16077,27.4892,0.983123,-1.09702,27.5528,1.11785,-1.08838,27.2623,0.153568,-0.93164,26.7253,0.337833,-0.827095,26.7231,0.082463,-0.816735,26.4863,0.393387,-0.91894,26.4202,0.979053,-0.81637,26.4563,0.818578,-0.197365,27.366,2.25032,-0.14366,27.1834,2.40177,-0.077875,27.257,2.45104,-0.099,27.6007,2.32933,-0.13898,27.7537,2.3338,-0.19968,27.7096,2.26832,-0.15609,27.582,2.23197,-0.287655,29.2,1.47734,0,29.2214,1.54274,0,29.3413,0.904873,-0.230165,29.3217,0.855883,0,29.0376,-0.293627,0,28.816,-0.474822,0,28.4735,-0.692747,-0.65425,27.3403,2.15733,-0.64131,27.4186,2.15583,-0.333695,27.6428,2.14141,-0.48196,27.6829,2.19812,-0.64736,27.6973,2.15604,-0.754055,27.6596,2.06106,-0.82172,27.6276,1.98128,-0.777445,27.7205,2.05716,-0.93418,27.5105,1.79282,-0.90195,27.5275,1.86173,-0.88119,27.6517,1.90554,0,26.0622,2.39875,-0.218865,26.4189,2.32065,-0.139075,26.4264,2.40628,-0.05843,26.4151,2.4411,-0.30106,26.4493,2.28385,-0.349145,26.4162,2.26149,-0.339795,26.4336,2.24996,-0.342125,26.4432,2.25347,-0.936315,26.496,1.18933,-0.62284,26.7129,2.24419,-0.15075,25.8632,1.77928,-0.247735,29.3106,0.335013,-0.14873,27.4708,2.25257,-0.27644,27.4244,2.17807,-0.927585,26.447,1.09947,-0.02898,26.595,2.46599,0,26.5918,2.47251,0,26.6813,2.43266,0,29.3113,0.352693,0,29.1847,-0.033752,-0.163995,29.1657,-0.034422,-0.107,26.9394,2.38218,-0.06944,26.9401,2.43287,-0.045605,26.9408,2.50024,-0.071725,26.8157,2.5279,-0.049305,26.8903,2.41945,-0.07822,26.9064,2.38055,-0.105025,26.9269,2.38026,-0.34803,26.478,2.32959,0,26.5805,2.48879,-0.40796,26.8259,2.31757,-0.42264,26.9648,2.30488,-0.234455,27.6424,2.21557,-0.264335,27.609,2.16485,-0.690255,27.7498,2.16388,-0.746255,27.8068,2.12848,-0.82817,27.7582,2.00343,-0.316635,27.4375,2.13761,-0.478155,27.4335,2.18609,-0.634115,27.6128,2.15139,-0.475525,27.6097,2.20071,-0.312835,27.5136,2.14475,-0.25482,27.4805,2.14033,-0.388455,27.5651,2.18113,-0.783365,27.52,2.01951,-0.73534,27.565,2.07363,-0.72386,27.4494,2.07521,-0.767995,27.4845,2.02407,-0.245845,27.441,2.14759,-0.627945,27.4245,2.14145,-0.268765,27.4333,2.1357,-0.783425,27.5087,1.99326,-1.05944,27.3519,1.23965,-1.08025,27.2468,0.938263,-1.08019,27.2922,1.03537,-0.31312,26.4414,2.29103,-0.217085,26.422,2.25778,-0.313665,26.4506,2.22671,-0.21276,26.4328,2.29469,-0.127025,26.5027,2.37594,-0.062915,26.4863,2.38933,-0.263375,26.4511,2.27494,-0.320555,26.4733,2.24476,-0.03311,26.4343,2.45512,0,26.4327,2.45806,0,26.4217,2.37737,-0.02273,26.4302,2.3751,-0.247425,26.3822,2.21874,-0.39411,26.4217,2.10115,-0.246205,26.5221,2.27702,-0.13656,26.5834,2.34275,-0.32439,26.5198,2.19719,-0.519055,26.4132,1.96339,-0.27519,26.0662,1.96645,-0.211585,26.2738,2.24007,-0.13522,26.7909,2.23082,-0.26194,26.8245,2.1782,-0.451455,26.7305,2.07002,-0.040015,26.2117,2.32081,0,26.2108,2.32415,0,25.9847,1.93743,-0.44735,26.3903,1.78004,-0.384815,26.0736,1.7224,-0.105005,26.7788,1.97499,-0.239615,26.8725,1.96432,-0.362765,26.7655,1.9093,-0.46392,26.3107,1.58211,-0.28172,26.1079,1.52658,-0.179235,26.8171,1.62241,-0.447915,26.6403,1.65137,0,26.0271,1.70943,-0.01389,26.0073,1.47141,-0.35936,26.3948,1.37506,-0.115445,26.1677,1.35144,-0.191355,26.6328,1.39659,-0.35927,26.5223,1.36084,0,26.1249,1.33723,-0.31253,26.4082,2.30279,-0.329745,26.3624,2.27551,0,26.7989,2.70182,0,26.8916,2.73235,-1.1115,27.1228,0.854833,-1.1083,27.0185,0.827958,-1.16019,27.4384,0.416213,-0.968025,26.6428,0.896648,-0.913555,26.6895,0.762763,0,27.2801,2.46306,-0.71409,26.7281,-0.148957,-0.438605,26.7337,-0.324507,0,26.603,-0.319087,0,26.7342,-0.382622,-1.04492,27.022,0.238973,-0.96797,26.9898,-0.005767,-0.859255,26.9691,-0.286572,-0.50692,26.9603,-0.458637,0,26.9436,-0.544782,-0.30165,27.475,2.13943,0,25.8298,1.5529,0,25.8487,1.76849,-0.09165,27.4733,2.34109,0,27.4934,2.3558,0,27.609,2.32885,-0.149795,28.0147,2.37244,-0.164885,27.8738,2.3695,0,27.7699,2.36078,0,27.8832,2.39171,-0.126015,26.3948,2.31998,0,28.0318,2.39605,-0.03618,26.334,2.48766,-0.31875,26.968,2.32531,-0.062115,26.8129,2.59093,-0.06173,26.7874,2.59591,-0.075545,26.7936,2.54229,-0.052375,26.7641,2.51367,-0.03782,26.7491,2.51289,-0.069105,26.8074,2.57138,-0.058,26.8377,2.5513,-0.025645,26.7445,2.59298,-0.02632,26.9434,2.50197,-0.030605,26.9162,2.4523,0,26.7416,2.59615,0,26.7709,2.6597,0,26.7744,1.9747,0,26.7905,2.28061,0,26.7591,1.68267,0,26.1516,2.38968,0,26.2417,2.4706,0,26.2742,2.48735,0,26.4694,2.41812,0,26.4048,2.46777,0,26.6008,2.42174,0,28.0915,-0.768877,0,26.3309,2.49328,0,26.7106,1.40972,-0.262335,26.8681,2.42291,-0.30417,26.8382,2.33602,-0.406625,26.7292,2.31306,-0.373015,27.4439,2.14522,-0.48354,27.4333,2.1786,-0.624875,27.5975,2.14762,-0.48188,27.5968,2.189,-0.40491,27.558,2.17309,-0.75009,27.5187,2.0326,-0.7087,27.5574,2.0792,-0.70934,27.4652,2.07345,-0.749295,27.4929,2.03535,-0.621665,27.4257,2.13721,-0.754165,27.5068,2.02616,-0.36014,27.5115,2.14753,-0.36046,27.4899,2.14376,1.20788,26.9711,0.749783,1.1802,26.9835,0.788848,1.11157,26.9604,0.805668,1.17888,26.8702,0.792673,1.09488,26.8857,0.868608,1.12227,26.805,0.826523,1.02638,26.7021,0.842408,1.10021,26.6926,0.844668,1.2857,27.4617,0.682983,1.26446,27.4499,0.658883,1.30454,27.5033,0.637328,1.32258,27.5181,0.659013,1.41819,27.5391,0.419443,1.42818,27.504,0.397673,1.47338,27.5159,0.386463,1.46354,27.5623,0.421378,1.40285,27.5899,0.527288,1.37878,27.5706,0.509963,1.41872,27.4518,0.376788,1.47041,27.476,0.366273,1.40455,27.3628,0.358248,1.40402,27.28,0.349828,1.45016,27.2804,0.338423,1.45219,27.3966,0.343923,1.24186,26.8903,0.709128,1.27343,26.9071,0.621508,1.26361,26.9812,0.722778,1.39029,27.1153,0.387653,1.41624,27.1016,0.380838,1.31946,26.9869,0.493558,1.34092,26.9813,0.474658,1.2522,27.35,0.666563,1.23252,27.3586,0.649513,1.2408,27.3976,0.662708,1.26802,27.4022,0.689383,1.23445,27.3023,0.630548,1.21056,27.3096,0.620368,1.19398,27.2731,0.569983,1.2029,27.2533,0.576053,1.20172,27.2429,0.509693,1.18884,27.2629,0.506868,1.28314,27.0372,0.585208,1.29771,27.0347,0.644913,1.30001,26.9703,0.587558,1.30382,26.9922,0.556078,1.32785,27.1099,0.541903,1.37814,27.1438,0.429593,1.3335,27.1783,0.495583,1.39118,27.2066,0.401648,1.3447,27.2999,0.466573,1.39403,27.3208,0.385818,1.23968,27.2047,0.713573,1.22068,27.2348,0.712043,1.21036,27.2615,0.740003,1.19801,27.2312,0.777093,1.21084,27.5128,0.745998,1.22999,27.5585,0.720933,1.17797,27.5555,0.699573,1.17433,27.4928,0.731368,1.34702,27.6677,0.519303,1.40563,27.6351,0.404058,1.33135,27.6263,0.412408,1.28028,27.6539,0.522283,1.44569,27.5653,0.355768,1.35687,27.5635,0.370883,1.44786,27.5142,0.325668,1.3593,27.4897,0.345043,1.37397,27.3762,0.312458,1.43235,27.396,0.300398,1.43338,27.2746,0.299828,1.36924,27.2548,0.314893,1.39593,27.0869,0.343148,1.334,27.0958,0.350488,1.31991,26.9472,0.434068,1.26414,26.9616,0.433738,1.21942,26.7815,0.562458,1.11616,26.714,0.709098,1.11973,26.7469,0.664598,1.19232,26.7882,0.556968,1.25158,27.5672,0.552788,1.27902,27.5941,0.587903,1.25513,27.5741,0.623363,1.2153,27.5346,0.621593,1.34976,27.3399,0.362283,1.35722,27.2447,0.367023,1.40239,27.3545,0.345228,1.14003,26.994,0.701023,1.16982,26.9471,0.674233,1.16907,27.0497,0.642613,1.15609,27.0613,0.683778,1.36974,27.1355,0.414828,1.37279,27.1162,0.396818,1.30144,26.9723,0.549413,1.29651,26.9359,0.532223,1.18435,26.7147,0.723008,1.25106,26.7877,0.578888,1.18763,27.4358,0.765573,1.16355,27.3048,0.735878,1.19521,27.3427,0.672418,1.2277,27.4358,0.708288,1.16559,27.2874,0.632413,1.21163,27.252,0.679818,1.17928,27.2824,0.476398,1.13963,27.2726,0.544863,1.20947,27.2389,0.468923,1.16863,27.2134,0.577673,1.18192,27.1611,0.512303,1.23481,27.5264,0.569003,1.21659,27.4798,0.616663,1.26042,27.1115,0.496203,1.22031,26.9974,0.526903,1.25991,27.1885,0.443238,1.23427,27.2677,0.412103,1.34876,27.4217,0.365208,1.32822,27.5345,0.438168,1.36094,27.4723,0.440793,1.3805,27.3905,0.406543,1.18991,27.0995,0.763058,1.18569,27.0997,0.736298,1.20671,27.1067,0.715673,1.22595,27.1402,0.713358,1.20208,27.1511,0.784408,1.13478,27.3997,0.628218,1.13715,27.423,0.819093,1.11563,27.2541,0.833338,1.16027,27.1233,0.826313,1.17404,27.0857,0.721043,1.1859,27.1157,0.701088,1.21947,27.1483,0.689293,1.22311,27.194,0.679153,1.18921,27.0084,0.741083,1.13593,27.0254,0.787438,1.19327,26.9512,0.578903,1.23381,26.9875,0.702898,1.16321,27.1018,0.599288,0.988955,26.7556,0.712758,1.14794,27.2455,0.606933,1.10519,27.2118,0.588713,1.14592,27.1996,0.563043,1.16827,27.2307,0.555598,1.11904,27.1258,0.580748,1.07736,27.1481,0.604468,1.10006,27.1116,0.597633,1.07406,27.1265,0.636543,1.1685,27.2121,0.696898,1.20581,27.2111,0.718733,1.19121,27.2332,0.739928,1.15072,27.2302,0.713978,1.12952,27.1792,0.642763,1.15783,27.1823,0.644443,1.13019,27.1282,0.640053,1.16062,27.123,0.637768,1.13785,27.1017,0.649118,1.15475,27.0934,0.647268,1.18142,27.1905,0.739948,1.17145,27.1102,0.712333,1.13811,27.114,0.732813,1.19394,27.2275,0.777463,1.16303,27.082,0.714683,1.12125,27.0849,0.708628,1.14837,27.0691,0.688123,1.15147,27.0774,0.664108,1.12966,27.0865,0.664083,1.11759,27.0806,0.684078,1.13076,27.2301,0.649233,1.12456,27.2268,0.700143,1.07841,27.1752,0.672108,1.08068,27.1381,0.656083,1.31951,27.43,0.480453,1.34403,27.4003,0.472123,1.29052,26.908,0.526798,1.27204,26.8734,0.488853,1.235,26.8765,0.497693,1.19328,27.2257,0.659808,1.2369,27.4639,0.644743,1.23157,27.4234,0.591943,1.31608,27.3673,0.500358,1.3024,27.3277,0.497368,1.20249,27.3496,0.459393,1.16613,27.3266,0.510243,1.27641,27.3814,0.518028,1.258,27.3511,0.540388,1.22268,27.4055,0.604313,1.24296,27.4676,0.680898,1.22015,27.4634,0.692068,1.39309,27.5203,0.397978,1.38508,27.5516,0.414713,1.41265,27.4311,0.362053,1.24991,27.4784,0.695278,1.26988,26.846,0.576773,1.22617,27.5231,0.655263,1.24757,27.5298,0.672173,1.36196,27.5645,0.609933,1.31834,27.544,0.593753,1.27117,27.6272,0.642583,1.21618,27.6224,0.629903,1.28988,27.5526,0.635053,1.26158,27.5216,0.674628,1.26042,27.457,0.436128,1.24564,27.4777,0.507943,1.26591,27.3964,0.410008,1.28889,27.3198,0.365508,1.28629,27.2437,0.360053,1.28044,27.1377,0.399343,1.21181,27.4768,0.559238,1.1765,27.5051,0.576158,1.15634,27.4487,0.396458,1.18331,27.4895,0.538348,1.16305,27.2511,0.321753,1.13062,27.1301,0.346343,1.17532,26.9675,0.505468,1.05489,26.9412,0.472798,1.03731,26.9243,0.581093,1.13675,26.854,0.608613,1.18765,27.2174,0.691368,1.17029,27.2142,0.646573,1.17974,27.2222,0.632993,1.26348,27.0325,0.666248,1.17891,26.9325,0.623653,1.36271,27.5643,0.409638,1.31886,27.6164,0.486303,1.33715,27.6411,0.499368,0.440855,27.0675,2.27609,0.47046,27.2486,2.20674,0.29426,27.289,2.23391,0.271085,27.0854,2.29833,0.655255,26.5098,-0.080508,0.778565,26.4988,0.144063,1.05632,27.2607,-0.074467,0.935685,27.2417,-0.393072,0.97947,27.7234,-0.403477,1.11397,27.8373,-0.146382,0.877385,28.1092,-0.422827,1.041,28.3067,-0.243582,1.09655,28.5655,0.039608,1.22202,28.1037,0.251178,1.15258,28.5821,0.711723,1.03291,28.8705,0.560028,1.01021,28.4238,1.47784,0.991125,28.731,1.25953,0.83055,28.8225,1.40101,0.85623,28.56,1.71236,0.62722,28.6548,1.90376,0.643105,28.9264,1.60399,0.36604,29.0205,1.78359,0.30839,28.765,2.0563,0.84488,28.9864,0.991418,0.578255,29.0948,1.30158,0.908275,27.8607,1.88922,0.968575,28.1413,1.69887,0.867535,28.2573,1.90637,0.82196,27.8861,2.05489,0.53297,28.3266,2.11725,0.83818,26.2309,1.1046,0.701,26.0259,1.31955,0.853615,26.2929,1.22868,0.851655,26.4284,1.32607,0.778635,26.2934,1.54483,0.72703,26.1309,1.43818,0.64158,26.1673,1.85486,0.488155,26.109,2.14143,0.42504,25.9349,2.00501,0.62487,26.0747,1.73999,0.353915,25.8533,1.87955,0.55146,25.9443,1.60243,0.205685,25.8174,2.16078,0.24833,25.8902,2.23636,0.40314,26.3101,2.24509,0.263115,26.1856,2.31448,0.23237,26.0702,2.30755,0.543375,26.3506,2.18159,0.736655,26.5165,1.94836,0.904015,26.7373,1.35552,0.83598,26.5916,1.60494,0.987855,27.0991,1.75049,0.927775,26.87,1.66082,0.99723,27.0925,1.36668,1.02413,27.353,1.49134,0.98445,27.7586,1.64321,1.0387,27.7495,1.42179,0.933035,27.6894,1.80153,0.880065,26.9753,1.98738,0.725585,27.0234,2.20845,0.70246,26.8638,2.22946,0.829585,26.7742,1.96187,0.477075,27.4301,2.20941,0.308645,27.4278,2.15846,0.31575,27.3644,2.18043,0.47542,27.3494,2.22035,0.804625,27.5088,1.9928,0.78298,27.4837,2.0304,0.841485,27.4444,1.96064,0.844245,27.5255,1.93284,0.84232,27.2665,2.01142,0.678155,27.2233,2.15622,0.47811,27.6169,2.22153,0.65396,27.6211,2.16379,0.637695,27.681,2.15357,0.47567,27.6742,2.19091,0.26162,27.4705,2.18748,0.30897,27.5032,2.17755,0.267505,27.5636,2.16171,0.203015,27.5285,2.20044,0.387395,27.5697,2.20064,0.338135,27.6193,2.15244,0.341115,27.867,2.347,0.338395,27.7095,2.23557,0.490665,27.7486,2.23291,0.541575,27.859,2.25255,0.082075,27.0387,2.6327,0.097195,26.9634,2.69438,0.170005,26.9308,2.60672,0.176125,26.9835,2.49688,0.2421,26.9211,2.366,0.22108,26.9413,2.34846,0.19555,26.9638,2.38589,0.22079,26.944,2.424,0.57312,27.9686,2.26943,0.233445,28.2398,2.26174,0.343225,28.0048,2.35345,0.151845,26.8493,2.64486,0.08623,26.8772,2.72944,0.076625,26.7995,2.65135,0.04136,26.8047,2.7012,0.031875,26.7729,2.65383,0.083115,26.7822,2.62228,0.19655,26.9549,2.49894,0.18234,26.8453,2.56493,0.17477,26.9177,2.5583,0.1237,26.8108,2.61014,0.161805,26.8064,2.55871,0.394035,26.3855,2.25038,0.51976,26.4888,2.23684,0.394625,26.4829,2.30031,0.234085,26.7587,2.35753,0.13146,26.7307,2.4195,0.176785,26.6558,2.40243,0.298915,26.7153,2.34548,0.76004,27.5622,2.08339,0.810225,27.5208,2.02427,0.797305,27.5889,1.98786,0.747125,27.6314,2.06174,0.74241,27.4469,2.08675,0.786265,27.3816,2.04292,0.167935,26.2688,2.40031,0.13819,26.1631,2.36941,0.26706,26.311,2.3622,0.904825,27.3761,1.88095,0.189865,27.4495,2.22086,0.249345,27.4427,2.19144,0.266265,26.3448,2.37547,0.163825,26.2959,2.42568,0.15844,26.3371,2.44554,0.257855,26.3852,2.35849,0.23054,26.4309,2.33324,0.12444,26.4413,2.43314,0.02285,26.7228,2.46394,0.02596,26.6817,2.43471,0.052495,26.6785,2.44219,0.06718,26.725,2.45417,0.27224,26.552,2.40317,0.178085,26.5679,2.45042,0.088435,26.5916,2.49282,0.372675,26.4473,2.27698,0.365055,26.404,2.26192,0.31801,26.4478,2.30095,0.357725,26.4446,2.26398,0.333265,26.463,2.31666,0.268295,26.5125,2.4098,0.18049,26.5263,2.4696,0.15194,26.432,2.45141,0.247655,26.438,2.40533,0.09884,26.5416,2.5201,0.05807,26.4311,2.49077,0.25348,26.8479,2.3388,0.20103,26.7644,2.37205,0.2387,26.8551,2.31867,0.16601,26.7742,2.46669,0.102605,26.7677,2.46502,0.133335,26.7452,2.43748,0.068125,26.7391,2.46511,0.02292,26.7366,2.49234,0.056675,26.8319,2.61699,0.11151,26.8084,2.59906,0.17459,26.7951,2.50328,0.241025,26.8059,2.44885,0.13535,26.8144,2.53931,0.147055,26.7987,2.50813,0.141025,26.7892,2.48858,0.099875,26.7948,2.47762,0.1895,25.8599,1.55994,0.377375,26.5664,-0.219147,0.49755,27.628,-0.709287,0.561225,27.2096,-0.565907,0.7521,29.0618,0.704368,0.843325,29.0384,0.438808,0.896085,28.8784,-0.047832,0.76633,28.3301,-0.511582,0.85647,28.6092,-0.310047,0.58489,29.1983,0.748758,0.541845,28.4141,-0.632867,0.52378,28.7709,-0.412297,0.5342,28.988,-0.191457,0.615815,29.2119,0.319473,0.604915,28.0933,-0.672697,1.20983,27.7007,0.442913,1.10455,27.5644,0.155993,1.04343,26.961,0.933368,1.05793,27.0093,1.05747,0.991805,26.6955,1.14324,0.985295,26.6594,1.01868,1.17497,28.1168,0.989233,1.22055,27.8551,0.788888,1.15377,27.5952,0.737238,1.16077,27.4892,0.983123,1.12511,27.4401,0.862953,1.09702,27.5528,1.11785,1.08838,27.2623,0.153568,0.93164,26.7253,0.337833,0.816735,26.4863,0.393387,0.827095,26.7231,0.082463,0.91894,26.4202,0.979053,0.81637,26.4563,0.818578,0.197365,27.366,2.25032,0.077875,27.257,2.45104,0.14366,27.1834,2.40177,0.19968,27.7096,2.26832,0.13898,27.7537,2.3338,0.099,27.6007,2.32933,0.15609,27.582,2.23197,0.287655,29.2,1.47734,0.230165,29.3217,0.855883,0.64131,27.4186,2.15583,0.65425,27.3403,2.15733,0.48196,27.6829,2.19812,0.333695,27.6428,2.14141,0.64736,27.6973,2.15604,0.754055,27.6596,2.06105,0.82172,27.6276,1.98128,0.777445,27.7205,2.05716,0.88119,27.6517,1.90554,0.90195,27.5275,1.86173,0.934175,27.5105,1.79282,0.139075,26.4264,2.40628,0.218865,26.4189,2.32065,0.05843,26.4151,2.4411,0.29837,26.4325,2.28385,0.339845,26.4388,2.24996,0.35067,26.4224,2.26149,0.341325,26.4486,2.25347,0.936315,26.496,1.18933,0.62284,26.7129,2.24419,0.15075,25.8632,1.77928,0.247735,29.3106,0.335013,0.14873,27.4708,2.25257,0.27644,27.4244,2.17807,0.927585,26.447,1.09947,0.02898,26.595,2.46599,0.163995,29.1657,-0.034422,0.06944,26.9401,2.43287,0.107,26.9394,2.38218,0.045605,26.9408,2.50024,0.049305,26.8903,2.41945,0.071725,26.8157,2.5279,0.07822,26.9064,2.38055,0.105025,26.9269,2.38026,0.34418,26.4838,2.32959,0.42264,26.9648,2.30488,0.40796,26.8259,2.31757,0.264335,27.609,2.16485,0.234455,27.6424,2.21557,0.690255,27.7498,2.16388,0.746255,27.8068,2.12848,0.82817,27.7582,2.00343,0.478155,27.4335,2.18609,0.316635,27.4375,2.13761,0.475525,27.6097,2.20071,0.634115,27.6128,2.15139,0.25482,27.4805,2.14033,0.312835,27.5136,2.14475,0.388455,27.5651,2.18113,0.73534,27.565,2.07363,0.783365,27.52,2.01951,0.767995,27.4845,2.02407,0.72386,27.4494,2.07521,0.245845,27.441,2.14759,0.627945,27.4245,2.14145,0.268765,27.4333,2.1357,0.783425,27.5087,1.99326,1.05944,27.3519,1.23965,1.08025,27.2468,0.938263,1.08019,27.2922,1.03537,0.31259,26.4443,2.29103,0.31233,26.4535,2.22671,0.217085,26.422,2.25778,0.21276,26.4328,2.29469,0.127025,26.5027,2.37594,0.062915,26.4863,2.38933,0.263375,26.4511,2.27493,0.317215,26.4767,2.24476,0.03311,26.4343,2.45512,0.02273,26.4302,2.3751,0.247425,26.3821,2.21874,0.39374,26.4317,2.10115,0.246205,26.5221,2.27702,0.13656,26.5834,2.34275,0.32439,26.5441,2.19719,0.211585,26.2738,2.24007,0.27519,26.0662,1.96645,0.51906,26.4132,1.96339,0.13522,26.7909,2.23082,0.26194,26.8245,2.1782,0.451455,26.7305,2.07002,0.040015,26.2117,2.32081,0.44735,26.3804,1.78004,0.384815,26.0736,1.7224,0.10501,26.7788,1.97499,0.23962,26.8725,1.96432,0.36277,26.7655,1.9093,0.46392,26.3008,1.58211,0.28172,26.1079,1.52658,0.17924,26.8171,1.62241,0.44792,26.6403,1.65137,0.01389,26.0073,1.47141,0.36129,26.4036,1.37506,0.11545,26.1677,1.35144,0.19136,26.6328,1.39659,0.359275,26.5466,1.36084,0.3149,26.4112,2.30279,0.336035,26.367,2.27551,1.1115,27.1228,0.854833,1.1083,27.0185,0.827958,1.16019,27.4384,0.416213,0.968025,26.6428,0.896648,0.913555,26.6895,0.762763,0.71409,26.7281,-0.148957,0.438605,26.7337,-0.324507,0.96797,26.9898,-0.005767,1.04492,27.022,0.238973,0.859255,26.9691,-0.286572,0.50692,26.9603,-0.458637,0.30165,27.475,2.13943,0.09165,27.4733,2.34109,0.149795,28.0147,2.37244,0.164885,27.8738,2.3695,0.126015,26.3948,2.31998,0.03618,26.334,2.48767,0.31875,26.968,2.32531,0.06173,26.7874,2.59591,0.062115,26.8129,2.59093,0.03782,26.7491,2.51289,0.052375,26.7641,2.51367,0.075545,26.7936,2.54229,0.069105,26.8074,2.57138,0.058,26.8377,2.5513,0.025645,26.7445,2.59298,0.02632,26.9434,2.50197,0.030605,26.9162,2.4523,0.001435,26.2744,2.48687,0.262335,26.8681,2.42291,0.30417,26.8382,2.33602,0.406625,26.7292,2.31306,0.48354,27.4333,2.1786,0.373015,27.4439,2.14522,0.48188,27.5968,2.189,0.624875,27.5975,2.14762,0.40491,27.558,2.17309,0.7087,27.5574,2.0792,0.75009,27.5187,2.0326,0.749295,27.4929,2.03535,0.70934,27.4652,2.07345,0.621665,27.4257,2.13721,0.754165,27.5068,2.02616,0.36046,27.4899,2.14376,0.36014,27.5115,2.14753,-0.373015,27.4439,2.04833,-0.48354,27.4333,2.08171,-0.624875,27.5975,2.05073,-0.48188,27.5968,2.09211,-0.40491,27.558,2.0762,-0.75009,27.5187,1.93571,-0.7087,27.5574,1.98231,-0.70934,27.4652,1.97656,-0.749295,27.4929,1.93846,-0.621665,27.4257,2.04032,-0.754165,27.5068,1.92927,-0.36014,27.5115,2.05064,-0.36046,27.4899,2.04687,0.48354,27.4333,2.08171,0.373015,27.4439,2.04833,0.48188,27.5968,2.09211,0.624875,27.5975,2.05073,0.40491,27.558,2.0762,0.7087,27.5574,1.98231,0.75009,27.5187,1.93571,0.749295,27.4929,1.93846,0.70934,27.4652,1.97656,0.621665,27.4257,2.04032,0.754165,27.5068,1.92927,0.36046,27.4899,2.04687,0.36014,27.5115,2.05064,-0.407536,27.5094,2.15759,-0.513692,27.5094,2.1787,-0.415616,27.4687,2.15759,-0.317541,27.5094,2.09745,-0.332472,27.4343,2.09745,-0.438628,27.4343,2.15759,-0.374992,27.3707,2.09745,-0.473068,27.4113,2.15759,-0.438628,27.3281,2.09745,-0.513692,27.4032,2.15759,-0.513692,27.3132,2.09745,-0.554316,27.4113,2.15759,-0.588756,27.3281,2.09745,-0.588756,27.4343,2.15759,-0.652392,27.3707,2.09745,-0.611768,27.4687,2.15759,-0.694912,27.4343,2.09745,-0.619848,27.5094,2.15759,-0.709843,27.5094,2.09745,-0.611768,27.55,2.15759,-0.694912,27.5844,2.09745,-0.588756,27.5844,2.15759,-0.652392,27.6481,2.09745,-0.554316,27.6074,2.15759,-0.588756,27.6906,2.09745,-0.513692,27.6155,2.15759,-0.513692,27.7055,2.09745,-0.473068,27.6074,2.15759,-0.438628,27.6906,2.09745,-0.438628,27.5844,2.15759,-0.374992,27.6481,2.09745,-0.415616,27.55,2.15759,-0.332472,27.5844,2.09745,0.619924,27.5094,2.15759,0.513768,27.5094,2.1787,0.611843,27.4687,2.15759,0.709919,27.5094,2.09745,0.694988,27.4343,2.09745,0.588832,27.4343,2.15759,0.652468,27.3707,2.09745,0.554392,27.4113,2.15759,0.588832,27.3281,2.09745,0.513768,27.4032,2.15759,0.513768,27.3132,2.09745,0.473144,27.4113,2.15759,0.438704,27.3281,2.09745,0.438704,27.4343,2.15759,0.375068,27.3707,2.09745,0.415692,27.4687,2.15759,0.332548,27.4343,2.09745,0.407612,27.5094,2.15759,0.317617,27.5094,2.09745,0.415692,27.55,2.15759,0.332548,27.5844,2.09745,0.438704,27.5844,2.15759,0.375068,27.6481,2.09745,0.473144,27.6074,2.15759,0.438704,27.6906,2.09745,0.513768,27.6155,2.15759,0.513768,27.7055,2.09745,0.554392,27.6074,2.15759,0.588832,27.6906,2.09745,0.588832,27.5844,2.15759,0.652468,27.6481,2.09745,0.611843,27.55,2.15759,0.694988,27.5844,2.09745],\n    \"skinIndices\": [19,18,0,0,19,0,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,18,19,31,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,18,0,0,19,18,31,0,19,18,31,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,20,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,19,20,0,0,20,19,0,0,20,19,0,0,19,20,0,0,20,19,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,20,19,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,21,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,20,21,0,0,21,20,0,0,20,21,0,0,21,20,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,24,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,20,0,0,21,0,0,0,21,0,0,0,21,0,0,0,26,21,20,0,26,0,0,0,26,0,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,21,0,0,0,21,0,0,0,21,20,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,20,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,27,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,21,0,0,0,26,21,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,26,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,20,0,0,21,0,0,0,26,0,0,0,26,27,0,0,26,21,20,0,28,27,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,26,27,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,27,28,0,0,27,28,0,0,28,0,0,0,28,0,0,0,28,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,21,0,0,0,26,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,28,27,0,0,28,0,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,0,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,0,0,0,28,27,0,0,28,0,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,0,0,0,26,27,0,0,26,27,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,27,28,0,0,27,28,0,0,21,0,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,28,27,0,0,28,27,0,0,28,27,0,0,27,26,0,0,27,0,0,0,27,26,0,0,27,0,0,0,28,0,0,0,28,0,0,0,28,27,0,0,28,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,29,0,8,7,29,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,8,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,9,8,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,10,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,9,10,0,0,10,9,0,0,9,10,0,0,10,9,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,13,0,0,13,0,0,0,12,13,0,0,12,13,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,11,10,0,0,11,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,15,10,0,0,15,0,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,15,10,0,0,10,0,0,0,10,0,0,0,15,10,0,0,10,0,0,0,15,0,0,0,15,10,0,0,15,0,0,0,15,0,0,0,15,10,0,0,15,10,0,0,15,10,0,0,15,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,11,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,10,0,0,0,15,10,0,0,15,10,0,0,15,10,9,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,15,10,0,0,10,0,0,0,10,0,0,0,15,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,16,17,0,0,16,17,0,0,17,0,0,0,17,0,0,0,17,0,0,0,16,0,0,0,16,17,0,0,16,17,0,0,10,0,0,0,15,0,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,10,0,0,15,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,11,10,0,0,10,0,0,0,10,0,0,0,11,10,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,10,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,11,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,16,17,0,0,16,17,0,0,10,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,16,15,0,0,16,15,0,0,16,15,0,0,16,15,0,0,16,0,0,0,16,15,0,0,16,15,0,0,16,15,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,17,16,0,0,16,17,0,0,16,0,0,0,16,0,0,0,16,15,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,16,0,0,0,16,17,0,0,16,17,0,0,16,0,0,0,16,0,0,0,16,17,0,0,16,17,0,0,16,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,13,0,0,13,0,0,0,12,13,0,0,12,13,0,0,13,0,0,0,13,0,0,0,13,12,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,2,3,1,35,2,3,1,35,2,3,1,0,2,3,1,35,2,3,1,35,2,3,1,35,2,34,35,3,2,34,35,3,2,34,3,35,2,35,3,34,2,3,35,34,2,3,1,35,2,3,35,1,2,3,35,1,2,3,35,34,19,18,0,0,18,19,0,0,18,19,0,0,19,18,0,0,19,18,0,0,5,6,18,4,5,6,18,4,5,18,4,0,5,4,18,7,5,18,6,0,5,18,6,0,18,5,4,0,5,18,4,0,5,4,18,7,5,6,4,18,5,6,4,18,5,4,7,18,5,6,4,7,5,18,6,0,5,18,6,7,5,18,7,0,18,5,7,0,5,6,7,18,5,7,18,0,18,5,0,0,5,18,6,0,4,18,5,7,4,5,18,7,4,5,18,7,4,5,7,18,18,5,4,0,18,5,4,0,18,5,0,0,18,5,0,0,18,5,7,4,18,5,7,0,18,5,0,0,4,18,5,7,4,18,5,7,18,5,4,0,18,4,5,31,18,5,7,4,18,5,4,7,18,5,19,0,18,5,0,0,4,18,5,31,4,18,5,7,4,5,18,7,4,5,7,18,18,5,4,31,18,4,5,31,18,5,4,7,18,4,5,7,7,18,5,4,7,4,18,5,18,19,5,0,18,19,5,0,18,5,4,19,18,5,19,0,18,4,5,7,18,4,7,5,4,7,18,5,18,19,0,0,18,19,0,0,18,4,5,19,18,5,19,4,18,4,5,31,4,18,5,31,18,5,4,31,18,5,19,0,18,5,19,0,18,5,0,0,18,5,0,0,18,19,5,0,18,19,0,0,18,5,0,0,18,5,19,0,18,5,19,0,18,5,4,0,18,19,5,0,18,19,0,0,18,19,5,31,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,5,19,31,18,31,19,4,18,31,4,19,18,5,4,31,18,19,0,0,4,18,3,7,4,18,3,7,4,7,18,3,4,7,3,18,18,31,4,5,18,19,4,3,4,18,3,19,4,31,18,7,4,7,18,5,4,7,18,5,4,31,18,5,31,4,3,29,31,3,4,29,3,4,2,31,4,3,29,31,31,18,3,19,31,3,2,0,31,3,0,0,31,18,3,19,3,18,4,19,3,18,4,19,3,4,18,19,3,4,18,2,18,31,4,5,4,18,31,5,4,3,18,7,3,4,18,2,3,4,18,2,3,2,4,18,3,2,4,18,3,4,2,31,3,4,2,29,4,3,29,31,31,3,18,2,3,2,31,0,3,2,18,19,3,2,18,19,3,2,18,31,3,2,18,31,2,3,31,0,2,3,31,0,3,2,18,4,3,2,4,18,3,2,31,0,3,2,18,19,18,19,31,3,18,19,3,4,3,2,0,0,2,3,0,0,2,3,0,0,3,4,7,2,3,4,18,2,3,2,31,0,3,31,2,0,3,2,31,0,3,2,31,0,18,19,5,0,18,19,4,31,18,19,31,0,18,31,19,0,18,19,31,0,18,31,19,0,19,18,31,4,19,18,31,4,19,18,31,0,19,18,0,0,19,18,31,0,19,18,31,0,19,18,31,0,19,18,31,0,19,18,31,0,31,18,19,0,18,19,31,3,19,18,31,3,4,3,18,19,3,4,18,19,3,2,0,0,2,3,0,0,18,19,31,0,18,19,5,31,18,19,31,0,31,18,19,0,31,18,19,3,31,18,19,3,31,18,19,0,31,18,19,3,19,18,31,0,19,18,31,3,4,29,3,31,4,31,3,29,18,31,4,19,31,18,4,19,31,18,4,5,3,2,31,0,3,2,31,0,3,2,29,0,3,2,31,29,3,2,31,0,3,2,31,0,3,2,31,0,3,2,31,0,3,2,31,0,2,3,31,0,2,3,31,0,3,2,18,31,2,3,31,0,2,3,31,0,2,3,0,0,2,3,34,0,2,0,0,0,2,0,0,0,3,2,4,31,3,4,2,29,3,2,31,0,3,2,31,0,3,2,31,0,18,31,19,4,4,31,3,18,31,18,19,4,19,18,3,4,18,19,4,3,18,3,4,19,18,19,3,4,18,19,4,3,2,3,1,0,2,3,1,0,2,3,1,31,2,3,1,31,2,3,1,31,2,3,31,0,2,3,1,31,2,3,31,0,2,3,34,35,2,34,3,35,2,34,35,0,2,34,35,0,2,3,35,34,4,18,3,19,2,34,0,0,2,3,34,31,2,3,31,0,2,3,31,0,3,2,31,0,4,3,18,19,4,18,3,19,18,4,5,7,2,3,35,31,3,2,31,0,3,2,31,0,31,3,18,2,3,2,31,0,3,2,31,0,3,2,31,0,31,3,2,0,31,3,0,0,31,18,4,19,31,18,4,19,31,18,4,0,31,4,18,0,4,31,18,5,31,4,3,29,31,3,4,0,4,5,18,7,19,18,31,0,19,18,31,0,19,18,31,0,19,18,31,0,3,2,4,31,2,0,0,0,2,34,0,0,4,31,18,29,31,4,3,18,31,4,18,0,31,18,0,0,31,0,0,0,31,0,0,0,31,3,0,0,31,4,0,0,31,4,0,0,31,0,0,0,31,0,0,0,31,0,0,0,31,18,0,0,31,18,4,0,31,18,4,0,31,4,18,0,31,4,18,0,31,4,18,0,31,4,0,0,3,2,4,7,4,5,7,18,31,18,4,0,31,4,18,0,31,4,18,0,31,18,4,0,31,0,0,0,31,18,0,0,31,4,0,0,31,4,0,0,31,4,0,0,31,0,0,0,31,4,18,0,31,4,0,0,31,4,18,0,31,4,18,0,31,4,18,0,31,4,18,0,31,18,4,0,31,4,18,0,5,7,18,4,5,18,6,0,2,3,1,35,6,0,0,0,6,0,0,0,5,6,18,0,5,6,18,0,5,6,0,0,5,6,18,0,5,6,0,0,5,6,4,18,5,6,4,18,5,6,18,0,5,6,0,0,5,6,18,0,5,6,7,18,5,6,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,5,6,0,0,6,0,0,0,5,6,4,0,6,0,0,0,18,5,19,0,18,5,19,0,2,3,1,0,2,3,1,41,2,3,1,41,2,3,1,41,2,3,1,41,2,3,1,41,2,40,41,3,2,40,41,3,2,40,41,3,2,41,40,3,2,3,41,40,2,3,41,1,2,3,1,41,2,3,41,40,2,3,41,1,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,5,6,7,4,5,4,7,18,5,7,4,0,5,6,7,4,5,7,6,0,5,7,4,0,7,5,4,0,5,7,6,0,5,6,4,7,5,4,7,18,5,6,4,7,5,7,18,0,5,7,6,18,5,7,6,0,7,5,18,0,5,7,6,0,7,5,0,0,4,5,7,18,7,4,5,18,4,5,7,18,7,5,4,0,7,5,4,0,7,5,0,0,7,5,0,0,7,5,18,4,7,5,0,0,7,5,0,0,4,7,5,18,7,4,5,29,7,5,4,0,7,4,5,29,7,5,4,18,7,5,4,0,7,5,8,0,7,5,0,0,4,7,5,18,4,7,5,29,4,5,7,18,7,5,4,29,7,4,5,29,7,5,4,18,7,5,4,18,7,8,5,0,7,8,5,0,7,5,4,8,7,5,8,0,7,4,5,18,7,4,5,18,7,8,0,0,7,8,0,0,7,4,5,8,7,5,8,4,7,4,5,29,4,7,5,29,7,5,4,29,7,5,8,0,7,5,0,0,7,5,0,0,7,5,8,0,7,8,5,0,7,8,0,0,7,5,0,0,7,5,4,29,7,5,8,0,7,5,8,0,7,8,5,29,7,8,5,0,7,8,5,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,5,8,29,7,5,4,29,7,29,8,4,7,29,8,4,7,8,0,0,7,8,29,0,8,7,0,0,8,7,0,0,4,7,3,18,4,7,3,18,7,29,4,5,7,8,4,3,7,4,3,8,4,29,7,5,4,29,7,5,4,7,3,8,4,3,7,18,29,4,3,31,4,3,29,31,3,4,2,31,29,3,4,31,29,3,0,0,29,3,2,7,29,7,3,8,29,7,3,8,3,7,8,2,3,7,2,4,3,7,4,2,7,3,4,8,7,29,4,5,4,7,29,5,3,4,7,2,3,2,7,4,3,2,4,7,3,7,4,2,29,3,7,2,3,2,7,29,3,2,7,8,3,2,7,29,3,2,7,29,3,2,7,8,3,2,7,8,2,3,29,0,2,3,29,0,2,3,7,29,3,2,29,0,7,29,8,3,3,2,7,8,7,8,3,2,2,3,0,0,3,2,0,0,2,3,0,0,3,4,7,2,3,2,29,0,3,29,2,0,3,2,29,0,3,2,29,0,7,8,5,0,7,8,29,4,7,29,8,0,7,8,29,0,7,29,8,0,7,8,29,0,8,7,29,0,8,7,29,3,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,29,7,8,0,7,8,29,3,7,8,29,3,7,3,4,8,7,8,3,4,7,8,3,4,3,4,7,2,7,8,29,0,7,8,5,29,7,8,29,0,29,7,8,0,29,7,8,0,29,7,8,0,29,7,8,3,29,7,8,3,8,7,29,3,8,7,29,3,4,29,3,7,29,7,4,5,29,7,4,8,7,29,4,8,3,2,29,0,3,2,29,0,3,2,29,0,3,2,29,0,3,2,29,0,3,2,29,0,2,3,29,0,3,2,29,0,2,3,29,0,2,3,29,0,3,2,7,29,2,3,0,0,2,3,29,0,2,3,40,0,2,0,0,0,3,2,4,31,3,2,29,0,3,2,29,0,3,2,29,0,7,29,8,4,4,29,7,3,29,7,8,4,7,8,3,29,7,8,3,4,7,8,3,4,2,3,1,29,2,3,1,29,2,3,1,29,2,3,29,0,2,3,29,0,2,3,1,29,2,40,3,41,2,3,40,41,2,40,41,0,2,40,41,0,2,3,41,40,2,40,0,0,2,3,40,29,2,3,29,0,2,3,29,0,3,2,29,0,7,3,4,8,7,4,3,8,7,4,5,3,2,3,41,29,3,2,29,0,3,2,29,0,29,3,7,2,3,2,7,29,3,2,29,0,3,2,29,0,29,3,0,0,29,3,2,0,29,7,4,8,29,7,4,8,29,7,4,5,4,29,7,5,29,4,7,0,29,3,4,0,29,4,3,31,4,7,5,18,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,3,2,4,7,2,40,0,0,4,29,7,31,29,4,7,3,29,4,7,0,29,7,0,0,29,0,0,0,29,0,0,0,29,3,0,0,29,4,0,0,29,4,0,0,29,0,0,0,29,0,0,0,29,0,0,0,29,7,0,0,29,7,4,0,29,7,4,0,29,7,4,0,29,4,7,0,29,4,7,0,29,4,7,0,3,4,2,31,29,7,4,0,29,7,4,0,29,7,0,0,29,0,0,0,29,4,0,0,29,0,0,0,29,4,0,0,29,4,7,0,29,4,0,0,29,4,7,0,29,4,7,0,29,4,7,0,29,4,7,0,29,4,7,0,29,4,7,0,29,7,4,0,29,7,4,0,29,7,4,0,5,7,6,0,5,6,7,0,6,0,0,0,5,6,7,0,5,6,0,0,5,6,7,0,5,6,0,0,5,6,4,7,5,6,4,7,6,5,0,0,5,6,7,0,5,6,7,0,6,5,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,5,8,0,7,5,8,0,42,0,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,43,0,0,43,42,0,0,43,0,0,0,43,0,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,0,0,0,43,42,0,0,43,0,0,0,43,0,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,0,0,0,43,44,0,0,43,0,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,42,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,42,0,0,43,42,0,0,43,44,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,43,44,0,0,44,43,0,0,43,44,0,0,43,44,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,43,0,0,43,44,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,43,44,0,0,43,44,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,43,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,37,0,0,36,0,0,0,37,36,0,0,37,36,0,0,37,0,0,0,37,0,0,0,37,36,0,0,37,36,0,0,36,37,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,38,0,0,37,38,0,0,37,0,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,0,0,0,37,38,0,0,37,38,0,0,37,0,0,0,37,38,0,0,37,36,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,36,0,0,37,36,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,0,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,0,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,37,38,0,0,38,37,0,0,38,37,0,0,37,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,37,0,0,37,38,0,0,38,37,0,0,38,0,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,37,38,0,0,37,38,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,37,0,0,1,2,35,41,1,2,35,41,2,1,3,35,2,1,35,3,2,1,35,3,2,1,35,34,2,1,35,34,1,2,35,34,2,35,1,34,2,35,34,1,2,35,34,1,2,35,1,34,2,34,35,1,2,34,35,3,2,34,35,1,2,34,35,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,34,40,2,0,34,2,40,0,34,2,40,0,2,34,40,0,2,35,1,34,2,35,1,34,1,2,41,35,1,35,2,41,1,2,35,34,1,35,2,41,34,40,0,0,34,40,2,0,34,40,2,0,1,35,2,0,1,35,2,41,2,34,40,0,2,34,40,0,34,2,40,35,2,34,40,35,34,2,40,0,34,2,40,0,2,34,35,40,2,34,35,0,2,34,35,40,34,2,35,40,34,2,35,40,2,34,35,40,34,2,35,40,2,34,35,1,2,34,35,1,34,2,35,40,2,34,35,1,2,35,1,3,2,1,35,3,2,1,3,35,2,34,35,0,34,2,35,40,34,2,40,0,34,2,40,35,34,2,40,0,2,3,1,35,2,1,3,35,2,35,34,1,35,2,34,1,34,40,0,0,34,40,0,0,34,40,0,0,40,34,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,36,0,0,35,0,0,0,35,36,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,36,35,0,0,36,35,0,0,36,0,0,0,36,0,0,0,36,35,0,0,36,0,0,0,36,35,0,0,36,0,0,0,36,0,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,0,0,0,36,35,0,0,36,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,36,35,0,0,36,35,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,36,0,0,0,36,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,36,35,0,0,35,36,0,0,36,35,0,0,36,35,0,0,35,36,0,0,35,36,0,0,36,35,0,0,35,36,0,0,36,35,0,0,36,35,0,0,36,0,0,0,35,36,0,0,36,35,0,0,36,35,0,0,35,36,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,34,2,35,40,34,2,35,1,34,2,35,40,34,2,35,0,34,2,35,0,34,2,35,40,34,2,35,40,34,2,35,40,34,2,40,35,34,2,40,35,34,2,40,0,34,2,40,0,35,34,2,0,34,35,2,1,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,2,35,0,34,2,35,40,34,35,2,0,2,35,34,1,35,2,34,1,35,2,34,1,35,2,34,1,2,35,34,1,2,35,34,1,35,2,34,1,34,2,40,35,34,2,40,0,34,40,2,0,34,2,40,35,34,40,2,0,34,40,2,0,34,40,2,0,34,40,2,0,35,34,0,0,34,35,0,0,35,34,0,0,35,34,2,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,35,34,2,1,35,34,2,1,35,2,34,1,35,2,34,1,35,34,2,0,35,34,2,0,35,34,2,0,35,34,2,1,34,40,35,0,34,35,0,0,34,0,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,40,0,0,35,1,0,0,35,0,1,0,35,1,0,0,35,1,2,0,35,1,2,0,35,0,0,0,35,0,0,0,35,34,0,0,35,34,2,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,2,0,35,1,0,0,35,1,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,0,34,40,35,34,0,40,35,34,0,40,35,0,1,0,0,35,1,0,35,0,1,0,35,0,1,0,35,1,0,0,35,0,1,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,0,34,40,35,0,34,0,35,1,2,34,35,1,2,0,35,2,1,34,35,2,1,34,35,2,34,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,34,2,35,1,2,34,35,1,2,34,35,1,34,2,35,1,2,35,34,1,2,34,35,1,2,34,35,1,2,34,35,1,34,35,2,1,35,34,2,1,35,34,2,1,2,35,34,1,35,34,2,0,35,34,2,0,35,34,2,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,34,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,34,0,35,2,34,1,35,2,34,1,35,2,34,1,35,2,34,1,35,2,34,1,35,34,2,1,35,34,2,0,35,34,2,0,35,34,2,1,35,34,2,1,35,34,2,0,35,34,2,0,34,35,2,0,35,34,2,0,34,35,0,0,34,35,2,0,34,35,2,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,0,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,40,0,0,35,2,1,34,35,2,1,34,35,1,2,34,36,0,0,0,36,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,2,35,3,34,35,34,0,40,35,34,0,40,35,34,0,40,35,34,0,40,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,34,35,40,0,34,35,40,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,35,34,0,0,35,34,0,0,34,35,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,1,2,0,1,35,0,0,1,35,2,0,0,35,1,0,0,35,1,0,35,34,0,0,35,34,0,0,34,35,0,40,34,35,0,40,34,35,0,40,34,35,0,40,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,40,34,0,35,34,40,0,0,34,40,0,0,2,34,40,0,34,40,2,0,34,40,2,0,34,40,0,0,2,34,0,0,2,34,40,0,2,40,34,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,35,36,0,0,35,0,0,0,36,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,36,0,0,0,1,2,41,35,2,1,41,3,2,1,41,40,2,1,41,40,2,1,41,3,1,2,41,40,2,41,40,1,2,41,40,1,2,41,1,40,2,41,1,40,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,40,34,2,0,2,40,34,0,40,2,34,0,40,2,34,0,2,41,1,40,2,41,1,40,1,41,2,35,1,2,41,40,1,41,2,35,40,34,2,0,40,34,2,0,40,34,0,0,1,41,2,0,1,41,2,35,2,40,34,0,2,40,34,0,40,2,34,0,2,40,34,41,40,2,34,41,40,2,34,0,2,40,34,41,2,40,41,0,2,40,41,34,40,2,41,34,40,2,41,34,40,2,41,34,2,40,41,34,2,40,41,1,40,2,41,34,2,40,41,1,2,40,41,1,2,40,41,1,2,41,1,40,2,1,41,3,2,1,3,41,2,3,1,41,2,40,41,0,40,2,34,41,40,2,34,41,40,2,34,0,40,2,34,0,2,41,40,1,41,2,40,1,40,34,0,0,40,34,0,0,40,34,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,42,0,0,41,0,0,0,41,42,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,42,0,0,0,42,41,0,0,42,41,0,0,42,0,0,0,42,41,0,0,42,0,0,0,42,41,0,0,42,0,0,0,42,0,0,0,42,41,0,0,42,41,0,0,42,0,0,0,42,41,0,0,42,41,0,0,42,0,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,42,41,0,0,41,42,0,0,41,42,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,42,0,0,41,42,0,0,42,0,0,0,42,0,0,0,41,0,0,0,41,42,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,42,41,0,0,42,41,0,0,42,41,0,0,41,42,0,0,42,41,0,0,41,42,0,0,42,41,0,0,42,0,0,0,41,42,0,0,42,41,0,0,41,42,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,40,2,41,34,40,2,41,0,40,2,41,34,40,2,41,34,40,2,41,0,40,2,41,34,40,2,41,34,40,2,41,34,40,2,34,0,40,2,34,41,40,2,34,41,40,2,34,0,40,41,2,0,40,41,2,0,40,41,2,0,40,41,2,1,40,41,2,0,40,41,2,0,40,41,2,0,40,41,2,0,40,41,2,0,40,2,41,34,40,2,41,34,40,2,41,0,41,2,40,1,2,41,40,1,41,2,40,1,41,2,40,1,41,2,40,1,2,41,40,1,2,41,40,1,40,34,2,0,40,2,34,0,40,2,34,0,40,34,2,0,40,34,2,0,40,34,2,0,40,34,2,0,40,34,0,0,41,40,0,0,41,40,2,0,41,40,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,0,0,0,40,41,0,0,40,41,0,0,40,41,0,0,41,2,40,1,41,40,2,1,41,40,2,1,41,2,40,1,41,40,2,1,41,40,2,1,41,40,2,0,41,40,2,0,40,34,0,0,40,34,0,0,40,0,0,0,40,41,0,0,40,34,0,0,40,34,0,0,40,34,0,0,40,34,0,0,41,1,0,0,41,1,2,0,41,1,0,0,41,1,0,0,41,0,0,0,41,1,2,0,41,0,0,0,41,40,0,0,41,40,2,0,41,40,0,0,41,40,2,0,41,40,0,0,41,40,0,0,41,1,0,0,41,1,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,0,40,1,41,40,0,34,41,40,0,0,41,0,1,0,41,0,1,0,41,0,1,0,0,41,1,0,41,0,1,0,41,1,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,0,40,1,41,0,40,0,41,1,2,40,41,2,1,40,41,2,1,40,41,1,2,0,41,2,40,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,40,2,41,1,40,2,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,41,40,2,1,41,40,2,1,40,41,2,1,2,41,40,1,41,40,2,0,41,40,2,0,41,40,2,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,0,0,0,41,40,0,0,41,40,0,0,41,0,0,0,41,0,0,0,41,40,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,40,0,41,2,40,1,41,2,40,1,41,2,40,1,41,40,2,1,41,40,2,1,41,2,40,1,41,40,2,1,41,40,2,0,41,40,2,1,41,40,2,1,41,40,2,0,41,40,2,0,40,41,2,0,41,40,2,0,40,41,0,0,40,41,0,0,40,41,2,0,40,41,2,0,40,41,0,0,40,0,0,0,40,41,0,0,40,41,0,0,40,34,0,0,40,34,0,0,40,34,0,0,40,0,0,0,40,34,0,0,40,34,0,0,40,34,0,0,40,34,0,0,41,2,1,40,41,1,2,40,41,2,1,40,42,0,0,0,42,0,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,2,41,3,40,41,40,0,0,41,40,0,34,41,40,0,34,40,41,0,34,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,40,34,41,0,40,41,0,0,40,41,0,34,40,41,34,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,41,40,0,0,40,41,0,0,40,41,0,0,41,40,0,0,40,41,0,0,41,40,0,0,41,40,0,0,40,41,0,0,1,41,0,2,1,41,0,0,41,1,2,0,0,41,1,0,0,41,1,0,41,40,0,0,41,40,0,0,40,41,0,34,40,41,0,34,40,41,0,34,40,41,0,34,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,34,0,0,40,34,0,0,2,40,0,0,2,40,34,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,41,42,0,0,41,0,0,0,42,0,0,0,41,0,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,42,0,0,0,0,35,1,0,0,35,1,34,0,35,34,1,0,35,1,34,0,41,40,1,0,41,1,40,0,41,1,40,0,41,1,40,34,40,0,35,34,40,35,0,34,40,0,35,35,34,0,40,35,0,34,1,34,35,0,40,34,40,35,0,40,34,41,0,40,34,0,41,40,34,0,41,2,40,41,1,41,40,0,34,41,0,40,1,40,41,0,34,40,41,34,0,34,35,0,40,40,41,0,34,1,35,2,41,1,41,35,2,1,0,41,35,1,0,35,0,0,1,35,0,0,1,0,0,1,35,2,0,1,35,0,41,1,0,41,35,1,35,0,0,0,35,1,0,0,35,1,0,0,1,0,0,1,41,2,35,0,1,41,0,1,0,41,0,1,41,2,0,1,41,0,35,0,41,1,0,0,41,1,0,40,34,0,41,1,41,0,0,34,40,0,35,34,40,0,35,34,0,40,35,34,40,0,35,0,40,34,35,0,34,40,35,34,40,0,35,34,0,40,35,40,34,0,41,40,0,34,41,40,34,0,41,40,0,34,41,40,34,0,35,40,34,0,1,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,0,34,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,1,0,41,40,1,0,41,40,1,0,41,40,1,0,41,40,1,0,41,0,1,0,0,0,1,0,0,0,1,0,41,35,1,0,35,0,1,0,35,41,1,0,35,34,1,0,35,40,1,0,40,34,1,0,35,34,1,0,40,34,1,0,34,40,1,0,40,41,1,0,40,41,1,0,41,40,1,0,40,41,1,0,41,40,1,0,41,0,1,0,0,0,1,0,0,0,1,0,35,0,1,0,35,34,1,0,35,34,1,0,35,34,1,0,41,40,1,0,41,40,0,1,41,40,1,0,41,0,1,0,0,0,1,0,0,0,1,0,35,0,0,1,35,34,0,1,35,40,0,1,40,35,0,1,40,41,0,1,41,40,0,1,41,40,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,35,34,0,1,35,34,0,1,35,40,0,1,41,40,0,1,41,40,40,34,0,35,0,40,34,41,40,34,0,41,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,40,41,34,0,34,35,40,0,1,40,34,40,34,0,35,1,0,0,0,1,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0],\n    \"uvs\": [[0.0674,0.75925,0.06255,0.75965,0.0604,0.7548,0.1702,0.7169,0.1553,0.708,0.15385,0.69145,0.1837,0.7082,0.049,0.755,0.0542,0.7548,0.0548,0.76045,0.0484,0.761,0.16285,0.73015,0.154,0.72105,0.0431,0.7616,0.0442,0.7768,0.0377,0.7766,0.0385,0.7605,0.05515,0.7778,0.04955,0.7773,0.0613,0.77765,0.15925,0.74365,0.08375,0.7652,0.0795,0.76325,0.0857,0.76285,0.03595,0.88735,0.03825,0.8572,0.04485,0.8603,0.04,0.8871,0.04815,0.861,0.0444,0.88625,0.05205,0.8619,0.0487,0.88635,0.05615,0.86205,0.0531,0.8868,0.0685,0.8595,0.07495,0.85795,0.06925,0.8878,0.06345,0.8869,0.08045,0.8594,0.0732,0.88885,0.0849,0.86065,0.0772,0.88995,0.0171,0.8604,0.02195,0.8592,0.0235,0.8888,0.0215,0.88915,0.0274,0.8579,0.0266,0.88825,0.03245,0.85725,0.03185,0.8874,0.0571,0.8867,0.06,0.8609,0.06465,0.8302,0.05915,0.8472,0.0558,0.8459,0.05825,0.8254,0.03875,0.8282,0.03835,0.84035,0.0321,0.8394,0.03175,0.8279,0.05035,0.84335,0.04955,0.8229,0.04495,0.84195,0.0448,0.82475,0.0818,0.8422,0.0775,0.84325,0.07645,0.8328,0.07975,0.8299,0.0262,0.83985,0.0255,0.8258,0.02015,0.84125,0.0185,0.8264,0.0144,0.8428,0.0133,0.8286,0.0865,0.8443,0.0856,0.82875,0.0701,0.8468,0.03245,0.7958,0.03295,0.7865,0.04,0.78655,0.03905,0.7957,0.0466,0.78815,0.04575,0.79725,0.05025,0.78775,0.05045,0.79845,0.0556,0.78885,0.056,0.7993,0.06195,0.78705,0.0623,0.80215,0.06825,0.7887,0.06865,0.80485,0.07495,0.78815,0.0811,0.7894,0.0798,0.80665,0.07435,0.8053,0.0873,0.7897,0.086,0.80905,0.0128,0.80865,0.01085,0.7903,0.0168,0.7904,0.01815,0.806,0.02485,0.79,0.02455,0.80035,0.0452,0.821,0.0455,0.80915,0.05195,0.81165,0.05,0.8192,0.05885,0.815,0.05805,0.82285,0.06805,0.82195,0.0651,0.8269,0.06955,0.83075,0.06655,0.82965,0.0737,0.82395,0.0782,0.82095,0.0793,0.8273,0.07675,0.83045,0.0854,0.82255,0.08545,0.8263,0.0187,0.82475,0.0131,0.82705,0.01235,0.8221,0.0182,0.81665,0.0253,0.82305,0.025,0.81315,0.0316,0.8241,0.0322,0.81075,0.0391,0.8109,0.03915,0.82425,0.0297,0.7763,0.0221,0.77645,0.01525,0.7768,0.01035,0.77655,0.0836,0.7773,0.0898,0.7765,0.077,0.77645,0.06755,0.77665,0.0627,0.8472,0.0672,0.8315,0.0699,0.8348,0.05445,0.91505,0.06075,0.9146,0.05065,0.9159,0.04425,0.91595,0.03885,0.9157,0.0353,0.9155,0.032,0.91495,0.02975,0.914,0.0271,0.91305,0.02505,0.913,0.0224,0.91395,0.06755,0.91625,0.07475,0.7628,0.0119,0.7582,0.00655,0.75875,0.02115,0.7575,0.02785,0.7573,0.0622,0.97605,0.06285,0.9753,0.06415,0.97565,0.0643,0.9768,0.07015,0.97385,0.0711,0.9737,0.07215,0.97485,0.07035,0.97625,0.069,0.9737,0.06785,0.97515,0.06535,0.9748,0.0665,0.975,0.06225,0.9728,0.0616,0.9673,0.06325,0.96685,0.0636,0.97205,0.06495,0.96665,0.06505,0.97215,0.06615,0.966,0.06645,0.9723,0.0679,0.9655,0.0685,0.9708,0.0671,0.9724,0.06905,0.9653,0.06975,0.9705,0.0703,0.96525,0.071,0.9708,0.07165,0.9652,0.0727,0.9719,0.06085,0.9736,0.0603,0.9671,0.05235,0.9882,0.0533,0.9873,0.0549,0.98795,0.05495,0.9894,0.0776,0.98295,0.07875,0.9829,0.07985,0.9843,0.0777,0.9858,0.0763,0.98265,0.0748,0.9843,0.0566,0.98705,0.05805,0.9874,0.05285,0.984,0.0525,0.9801,0.0546,0.97965,0.0547,0.9832,0.0568,0.9795,0.0566,0.98355,0.0584,0.97885,0.0584,0.9839,0.07385,0.97625,0.07565,0.97575,0.07595,0.97925,0.0742,0.981,0.07735,0.9758,0.07745,0.979,0.07885,0.9759,0.0789,0.9794,0.0805,0.9763,0.0808,0.9809,0.05095,0.9848,0.05085,0.9799,0.0406,0.9914,0.04165,0.9904,0.04335,0.99105,0.0434,0.9926,0.0894,0.9857,0.09055,0.9856,0.09175,0.9871,0.0895,0.98865,0.08795,0.98545,0.08645,0.98715,0.0451,0.99005,0.04665,0.99045,0.0411,0.98695,0.0407,0.98275,0.04295,0.9823,0.04305,0.98605,0.0452,0.98205,0.04505,0.9864,0.0469,0.98135,0.04695,0.9867,0.08515,0.97865,0.08705,0.97825,0.08755,0.98185,0.08575,0.98375,0.08885,0.97815,0.08915,0.98155,0.09045,0.9782,0.09065,0.98195,0.0922,0.97865,0.0927,0.9835,0.0391,0.9878,0.03895,0.98255,0.04315,0.9709,0.04315,0.9748,0.04105,0.97445,0.0404,0.9716,0.09225,0.96915,0.09055,0.9698,0.0906,0.96665,0.09245,0.9662,0.08615,0.9696,0.08435,0.9699,0.08395,0.9662,0.08595,0.9663,0.037,0.95805,0.03825,0.9558,0.04105,0.96485,0.03815,0.9668,0.04585,0.9641,0.0454,0.9554,0.04695,0.9576,0.04815,0.96595,0.0387,0.9817,0.04085,0.9797,0.04715,0.98035,0.0451,0.97905,0.08495,0.9766,0.08675,0.97455,0.0839,0.9635,0.08575,0.9639,0.09035,0.96425,0.09205,0.9637,0.0452,0.974,0.0457,0.9708,0.0906,0.9745,0.09235,0.9768,0.0888,0.97445,0.0884,0.9699,0.04295,0.9791,0.0883,0.96655,0.08805,0.9642,0.04545,0.9678,0.04335,0.9672,0.08555,0.9616,0.0835,0.96155,0.08795,0.96185,0.0902,0.96185,0.09225,0.9611,0.0834,0.95475,0.0824,0.95525,0.087,0.95485,0.04115,0.9684,0.0435,0.96415,0.0385,0.9695,0.0382,0.9722,0.0385,0.97445,0.0475,0.97405,0.04785,0.9709,0.0478,0.9681,0.0416,0.95665,0.08375,0.9503,0.08095,0.95465,0.0804,0.94975,0.0749,0.9493,0.0744,0.9534,0.073,0.9526,0.07305,0.9489,0.0478,0.94455,0.0478,0.95095,0.04545,0.9511,0.0456,0.94485,0.0706,0.948,0.06985,0.95145,0.0672,0.95085,0.06705,0.9483,0.0648,0.94965,0.06225,0.94995,0.0627,0.9466,0.06445,0.9465,0.0548,0.94295,0.0562,0.94795,0.0521,0.9494,0.0511,0.94375,0.05765,0.9421,0.05815,0.945,0.05535,0.9321,0.0491,0.9332,0.04065,0.93415,0.04515,0.93355,0.08865,0.92265,0.09395,0.9185,0.09485,0.9213,0.0786,0.9285,0.0779,0.9206,0.08435,0.92545,0.08325,0.92805,0.0712,0.92905,0.07435,0.9206,0.0755,0.92805,0.06685,0.9308,0.0613,0.9289,0.06945,0.92985,0.05865,0.92935,0.00985,0.95595,0.00995,0.9573,0.0045,0.9567,0.0069,0.9552,0.0056,0.9531,0.00675,0.95315,0.0757,0.93495,0.07245,0.9349,0.05635,0.93605,0.0543,0.93665,0.0504,0.9374,0.0481,0.9379,0.0459,0.9383,0.0559,0.95385,0.0534,0.9535,0.057,0.95125,0.05695,0.95385,0.0357,0.9578,0.03535,0.95645,0.04715,0.9573,0.04815,0.9553,0.0302,0.92855,0.03465,0.9282,0.03165,0.93025,0.1028,0.95455,0.1046,0.94615,0.10705,0.94885,0.0246,0.93835,0.03175,0.9318,0.02755,0.9389,0.02405,0.94225,0.02395,0.9346,0.02275,0.9335,0.025,0.92925,0.09505,0.92575,0.09735,0.93385,0.0909,0.93385,0.08975,0.9255,0.04925,0.93835,0.04955,0.94465,0.04965,0.94805,0.0424,0.93895,0.04405,0.9394,0.04085,0.94575,0.0433,0.94565,0.0429,0.9488,0.0393,0.95195,0.0366,0.9303,0.03295,0.9387,0.078,0.9543,0.07765,0.9495,0.0886,0.9505,0.1023,0.94785,0.1011,0.94585,0.1042,0.9442,0.09045,0.9551,0.0922,0.9544,0.0918,0.9557,0.09095,0.9561,0.0419,0.95535,0.05965,0.9408,0.0606,0.9461,0.03845,0.9463,0.0367,0.95215,0.04025,0.9395,0.0583,0.93495,0.07945,0.93545,0.10225,0.93015,0.1038,0.9356,0.0869,0.92655,0.01535,0.94805,0.0144,0.94715,0.0151,0.9463,0.016,0.94755,0.1148,0.9374,0.11505,0.93975,0.1142,0.9395,0.11395,0.9371,0.10515,0.93845,0.091,0.937,0.0967,0.93905,0.08555,0.9369,0.0872,0.93485,0.06995,0.9375,0.06235,0.93975,0.06735,0.9412,0.0604,0.9407,0.1144,0.93415,0.1222,0.94205,0.12185,0.9403,0.123,0.9396,0.12425,0.94135,0.12385,0.94525,0.1221,0.9443,0.11365,0.94875,0.11535,0.9465,0.11515,0.94885,0.02955,0.9462,0.02515,0.94575,0.0217,0.93205,0.0217,0.92885,0.0134,0.9462,0.0138,0.94535,0.117,0.94595,0.117,0.9483,0.01425,0.9553,0.01285,0.9546,0.01435,0.95215,0.01555,0.95405,0.12065,0.9444,0.1208,0.9466,0.1191,0.9468,0.1188,0.94405,0.1204,0.942,0.1184,0.9415,0.12,0.93985,0.11815,0.93905,0.11775,0.9374,0.1196,0.93835,0.01005,0.94865,0.00785,0.95075,0.00735,0.9495,0.0088,0.9472,0.0215,0.9418,0.0226,0.9441,0.0212,0.9373,0.02435,0.9359,0.11015,0.9488,0.10755,0.9438,0.10995,0.9443,0.0979,0.95125,0.09975,0.954,0.0292,0.95685,0.02595,0.95825,0.0255,0.95285,0.03005,0.9522,0.0421,0.9541,0.05055,0.95375,0.0501,0.9522,0.0591,0.9486,0.0597,0.94985,0.09955,0.9585,0.0972,0.9588,0.095,0.953,0.0949,0.9594,0.09345,0.95975,0.0674,0.95535,0.06545,0.9531,0.06015,0.9511,0.0691,0.9561,0.0722,0.95315,0.0711,0.9564,0.0813,0.9589,0.0796,0.9594,0.0814,0.9552,0.051,0.95565,0.0328,0.9549,0.03215,0.9567,0.0344,0.94965,0.03565,0.9461,0.03245,0.9466,0.03355,0.9525,0.0424,0.9517,0.0499,0.9505,0.0585,0.947,0.0358,0.94,0.03785,0.9406,0.0936,0.95095,0.0981,0.9431,0.08275,0.9359,0.08305,0.92055,0.0868,0.92055,0.1152,0.94395,0.1005,0.943,0.10815,0.9389,0.1072,0.9358,0.1061,0.9321,0.01935,0.93615,0.0175,0.9354,0.0205,0.9322,0.1097,0.9364,0.1109,0.93915,0.10935,0.93375,0.0168,0.9394,0.0149,0.9379,0.0182,0.94175,0.0194,0.94385,0.02065,0.94595,0.11235,0.9443,0.11245,0.9488,0.1165,0.944,0.11645,0.94025,0.11615,0.938,0.1156,0.93495,0.01365,0.9482,0.01215,0.94635,0.0156,0.94955,0.11405,0.9438,0.11295,0.93935,0.1122,0.93695,0.11245,0.9332,0.01115,0.9513,0.01025,0.95265,0.01255,0.9498,0.00875,0.9542,0.0145,0.94335,0.013,0.94235,0.01225,0.94355,0.01295,0.9445,0.01085,0.9449,0.012,0.94385,0.0167,0.9514,0.0167,0.9486,0.0176,0.94995,0.01745,0.94675,0.01865,0.9485,0.0166,0.94425,0.0165,0.9466,0.0146,0.94475,0.01585,0.94525,0.02835,0.9889,0.0294,0.98795,0.03105,0.9886,0.0311,0.9901,0.10265,0.96545,0.10075,0.96605,0.10025,0.9634,0.1022,0.96305,0.1017,0.97965,0.10285,0.9795,0.10415,0.98095,0.102,0.9826,0.09675,0.96635,0.0949,0.96645,0.0941,0.9644,0.09585,0.9639,0.0301,0.9631,0.0267,0.96525,0.1017,0.958,0.03695,0.9646,0.0348,0.9623,0.03165,0.95825,0.1003,0.97945,0.09885,0.98125,0.03285,0.98755,0.0344,0.98795,0.0286,0.9808,0.0308,0.98035,0.03085,0.98355,0.0289,0.98445,0.0331,0.98005,0.03285,0.9839,0.03475,0.979,0.03475,0.9842,0.09715,0.973,0.099,0.97245,0.09965,0.9759,0.09795,0.97785,0.10075,0.9724,0.1012,0.97555,0.10225,0.9724,0.1027,0.9759,0.10405,0.9726,0.10485,0.9773,0.02685,0.98535,0.02685,0.98025,0.02665,0.9796,0.02875,0.9783,0.033,0.97755,0.0349,0.97815,0.09695,0.97225,0.09835,0.97025,0.1002,0.9703,0.0935,0.9622,0.095,0.9618,0.09955,0.9611,0.10145,0.96065,0.03165,0.9689,0.03395,0.969,0.0334,0.9723,0.0312,0.97285,0.10195,0.9703,0.10415,0.97195,0.0988,0.9663,0.03085,0.9777,0.0981,0.96355,0.02905,0.97265,0.0291,0.96935,0.0973,0.9613,0.02985,0.96615,0.0323,0.96525,0.0343,0.9659,0.0325,0.9626,0.02715,0.9674,0.02675,0.97,0.0267,0.9726,0.03565,0.97175,0.03615,0.96945,0.03645,0.967,0.06235,0.95995,0.0629,0.96255,0.0613,0.9625,0.0604,0.96065,0.0718,0.9613,0.0705,0.96145,0.0706,0.9598,0.07195,0.95975,0.06755,0.9613,0.06645,0.9614,0.06635,0.9596,0.06755,0.95955,0.0593,0.9541,0.05795,0.9561,0.0634,0.95285,0.06025,0.9662,0.0617,0.96505,0.0633,0.9646,0.0649,0.9645,0.0663,0.9647,0.0679,0.96395,0.06175,0.95705,0.0638,0.9574,0.0645,0.9597,0.0661,0.95795,0.0678,0.9579,0.071,0.9581,0.07185,0.95785,0.06445,0.9618,0.07025,0.96365,0.0715,0.9646,0.0689,0.9635,0.0688,0.96125,0.06885,0.95995,0.0692,0.95815,0.06025,0.95825,0.0722,0.9559,0.06125,0.95315,0.059,0.9595,0.0589,0.9615,0.0596,0.96305,0.054,0.96915,0.05435,0.97265,0.0524,0.97245,0.05145,0.96985,0.05625,0.97175,0.05665,0.96875,0.0806,0.9661,0.0789,0.96635,0.0791,0.9639,0.0808,0.964,0.07485,0.966,0.07305,0.9659,0.0729,0.9633,0.07485,0.9633,0.05065,0.9599,0.0488,0.96205,0.075,0.95905,0.0727,0.95915,0.07315,0.95335,0.05835,0.95935,0.05505,0.9583,0.05055,0.9792,0.0525,0.9773,0.0545,0.9767,0.0586,0.97795,0.0566,0.97665,0.0737,0.9746,0.07545,0.9725,0.073,0.9609,0.07495,0.96095,0.07935,0.9615,0.081,0.9613,0.07905,0.97275,0.0807,0.9748,0.07735,0.9725,0.07695,0.9661,0.07705,0.9636,0.0772,0.96155,0.05175,0.9669,0.0537,0.9658,0.0775,0.9595,0.0528,0.959,0.0493,0.96785,0.04965,0.97065,0.05005,0.9728,0.05865,0.9715,0.0587,0.96875,0.05585,0.9661,0.0584,0.96625,0.0726,0.9529,0.0794,0.9176,0.07455,0.5086,0.07265,0.51395,0.0656,0.51065,0.09625,0.5102,0.10355,0.51055,0.0964,0.51245,0.0859,0.5086,0.08635,0.51265,0.07995,0.51215,0.08075,0.5086,0.0914,0.50955,0.0922,0.51275,0.0975,0.52835,0.0909,0.52965,0.08,0.5306,0.08555,0.53085,0.074,0.52935,0.05225,0.51635,0.05045,0.5108,0.05635,0.5098,0.0992,0.64665,0.0952,0.6464,0.0904,0.6203,0.0969,0.6173,0.0908,0.6456,0.0871,0.62095,0.08655,0.64565,0.08325,0.62185,0.08215,0.6461,0.07915,0.622,0.0661,0.6471,0.062,0.618,0.0684,0.6195,0.07185,0.64625,0.06215,0.6481,0.05655,0.61945,0.0582,0.6492,0.0521,0.6206,0.109,0.64805,0.1105,0.6192,0.1153,0.6204,0.11095,0.6484,0.1085,0.64755,0.1077,0.61795,0.1033,0.6467,0.1027,0.61735,0.0782,0.64605,0.0753,0.62085,0.0707,0.59095,0.07705,0.5863,0.0795,0.60625,0.07615,0.6075,0.09645,0.589,0.1034,0.5887,0.10305,0.59995,0.0968,0.60085,0.0857,0.5838,0.0849,0.6038,0.0903,0.6024,0.09045,0.58565,0.05895,0.5935,0.05945,0.6037,0.05515,0.60265,0.05565,0.59065,0.1096,0.58665,0.1089,0.60035,0.11395,0.58725,0.11225,0.6017,0.11905,0.5894,0.118,0.60325,0.0505,0.6047,0.04985,0.58955,0.0668,0.6071,0.1027,0.5574,0.09615,0.55735,0.0952,0.54535,0.1022,0.5453,0.0895,0.55885,0.08865,0.5469,0.0848,0.56,0.085,0.5465,0.07925,0.5608,0.0797,0.5476,0.073,0.5636,0.0734,0.54585,0.06715,0.54745,0.06675,0.56625,0.06155,0.5469,0.06105,0.56665,0.0556,0.568,0.05545,0.54815,0.0495,0.5703,0.04925,0.54845,0.1225,0.56995,0.11425,0.56735,0.1156,0.5491,0.1224,0.549,0.1079,0.56185,0.11025,0.5487,0.09,0.582,0.08525,0.58025,0.0833,0.5729,0.08975,0.57045,0.07645,0.5761,0.07725,0.5838,0.07025,0.5877,0.06735,0.5829,0.0688,0.59045,0.06585,0.59145,0.05615,0.58815,0.05725,0.5819,0.0617,0.58485,0.0587,0.59115,0.05,0.58715,0.0501,0.5835,0.12005,0.5831,0.1193,0.5879,0.11375,0.5856,0.1142,0.57775,0.1098,0.584,0.1101,0.5743,0.10355,0.585,0.10295,0.572,0.096,0.58515,0.0961,0.57215,0.10505,0.5286,0.11035,0.529,0.11715,0.5301,0.12375,0.52975,0.04675,0.5298,0.05195,0.5312,0.0595,0.52975,0.0678,0.52995,0.07265,0.60755,0.06815,0.59225,0.06545,0.5954,0.0753,0.6733,0.06905,0.67285,0.0791,0.6741,0.08545,0.67415,0.09085,0.67395,0.09435,0.6737,0.09765,0.6732,0.09985,0.67225,0.1043,0.6713,0.10635,0.67125,0.109,0.6722,0.0623,0.67445,0.0595,0.50955,0.04245,0.5127,0.1198,0.51195,0.12615,0.5123,0.11105,0.5113,0.0679,0.73215,0.06915,0.7318,0.06985,0.73255,0.06775,0.7332,0.05995,0.73135,0.061,0.73025,0.06195,0.73035,0.0617,0.7327,0.0631,0.7302,0.06425,0.73165,0.0667,0.7313,0.06555,0.7315,0.06975,0.72935,0.06845,0.7286,0.0688,0.7235,0.0704,0.7239,0.067,0.72875,0.0671,0.72325,0.0656,0.72885,0.0659,0.7227,0.0636,0.7274,0.0642,0.7222,0.06495,0.72895,0.06235,0.7271,0.06305,0.722,0.0611,0.72735,0.0618,0.72195,0.0594,0.7285,0.06045,0.72185,0.07115,0.7301,0.07175,0.72375,0.0769,0.74415,0.0785,0.74355,0.07945,0.7444,0.0769,0.7456,0.05225,0.74055,0.0534,0.73915,0.0545,0.73925,0.05445,0.742,0.05585,0.73895,0.0573,0.74055,0.07525,0.74325,0.0738,0.74365,0.07895,0.7403,0.0771,0.7395,0.0772,0.7361,0.0793,0.7365,0.07525,0.7399,0.07505,0.73595,0.07345,0.7402,0.07345,0.7353,0.05615,0.7356,0.05645,0.73225,0.05825,0.7327,0.0579,0.7373,0.05465,0.73535,0.05475,0.73225,0.0533,0.73235,0.05325,0.7358,0.05135,0.73725,0.0516,0.73275,0.08085,0.7411,0.08095,0.7363,0.08845,0.7471,0.09015,0.7465,0.09115,0.74745,0.0884,0.74865,0.04045,0.7433,0.04165,0.74185,0.0428,0.74195,0.04265,0.74485,0.0442,0.74165,0.0457,0.74335,0.0867,0.74615,0.08515,0.7465,0.09065,0.7431,0.08875,0.7422,0.08885,0.73855,0.09105,0.739,0.08675,0.74255,0.0866,0.73835,0.08485,0.7429,0.0849,0.73765,0.04465,0.7382,0.04515,0.73465,0.047,0.73505,0.0464,0.74,0.04305,0.7379,0.0433,0.73455,0.04155,0.7383,0.04175,0.7346,0.03955,0.73975,0.04,0.73505,0.09265,0.74395,0.0928,0.7388,0.0907,0.73095,0.08865,0.7313,0.08865,0.72745,0.09135,0.72815,0.0416,0.72335,0.04165,0.72645,0.03995,0.7258,0.03975,0.7229,0.0482,0.7229,0.0478,0.7265,0.046,0.72625,0.0462,0.723,0.09075,0.72155,0.09365,0.7127,0.0949,0.7149,0.0936,0.72345,0.086,0.72085,0.0837,0.72265,0.085,0.71445,0.08655,0.7123,0.0909,0.73605,0.09305,0.73795,0.08465,0.7367,0.0867,0.7354,0.0472,0.73305,0.0454,0.73105,0.04645,0.7207,0.04825,0.7203,0.04015,0.72045,0.04185,0.721,0.08665,0.73045,0.08615,0.7274,0.0416,0.731,0.03985,0.73325,0.04375,0.72655,0.0434,0.731,0.08885,0.73545,0.04385,0.72325,0.0441,0.721,0.08635,0.72445,0.08845,0.7239,0.04665,0.71845,0.04865,0.7184,0.0442,0.7187,0.04195,0.7187,0.03995,0.71795,0.04875,0.7117,0.04975,0.7122,0.0452,0.7118,0.09065,0.725,0.0883,0.72085,0.0933,0.7261,0.0936,0.72875,0.0933,0.73095,0.0843,0.73055,0.08395,0.7275,0.08405,0.72475,0.0903,0.71355,0.0484,0.70735,0.05175,0.70685,0.0512,0.7116,0.05725,0.7064,0.05905,0.70595,0.0591,0.7096,0.0577,0.71035,0.08415,0.70175,0.08635,0.70205,0.0865,0.70815,0.08415,0.70795,0.0615,0.70515,0.065,0.7054,0.06485,0.7079,0.06225,0.7085,0.06935,0.70375,0.0698,0.707,0.06725,0.7067,0.0676,0.70365,0.0772,0.70015,0.08085,0.70095,0.0799,0.70645,0.0758,0.70505,0.07385,0.7022,0.07435,0.69935,0.07665,0.6896,0.08285,0.6907,0.09125,0.6916,0.0868,0.69105,0.04355,0.6804,0.0374,0.6791,0.0383,0.6764,0.05355,0.6861,0.04895,0.68565,0.0478,0.68315,0.0542,0.6784,0.0609,0.68665,0.0566,0.6857,0.05775,0.6784,0.0652,0.68835,0.0626,0.6874,0.07075,0.6865,0.07335,0.68695,0.12185,0.71275,0.1248,0.712,0.12715,0.71345,0.1218,0.71405,0.12495,0.71,0.12605,0.70995,0.05965,0.69235,0.0564,0.6924,0.07765,0.69405,0.07565,0.6935,0.0816,0.6948,0.08605,0.69565,0.08385,0.69525,0.075,0.70825,0.07855,0.71045,0.0761,0.7108,0.07505,0.7108,0.09655,0.71335,0.0962,0.71465,0.0848,0.7142,0.0838,0.7122,0.10165,0.68615,0.1002,0.6878,0.09725,0.68585,0.02935,0.7115,0.02515,0.70595,0.02755,0.70335,0.1072,0.69565,0.10775,0.6994,0.10425,0.69625,0.1001,0.68935,0.1068,0.68685,0.10905,0.6909,0.10785,0.692,0.0372,0.6834,0.04245,0.68315,0.0413,0.69135,0.0349,0.69135,0.08275,0.6957,0.0823,0.70515,0.0824,0.70185,0.08955,0.6963,0.0879,0.6967,0.0911,0.7029,0.0926,0.709,0.08905,0.7059,0.0886,0.70285,0.0989,0.69605,0.0953,0.6879,0.05445,0.70655,0.05415,0.7113,0.0436,0.70755,0.028,0.70145,0.03105,0.703,0.02985,0.705,0.0418,0.71205,0.04125,0.713,0.0404,0.71265,0.04,0.71135,0.09,0.71225,0.07145,0.70325,0.07235,0.6981,0.09345,0.70345,0.09515,0.70915,0.0917,0.6968,0.0737,0.6924,0.05265,0.6929,0.0337,0.6848,0.0284,0.69305,0.0453,0.6842,0.1164,0.70505,0.11575,0.7046,0.11665,0.70335,0.11735,0.70415,0.01805,0.69685,0.0172,0.6971,0.01745,0.6948,0.0183,0.69455,0.02705,0.69585,0.04125,0.6944,0.03555,0.6964,0.045,0.6923,0.0466,0.6943,0.06215,0.69485,0.0647,0.69845,0.0697,0.6971,0.07165,0.698,0.01785,0.69165,0.0093,0.69695,0.01045,0.69765,0.0101,0.69935,0.00805,0.6987,0.0084,0.7025,0.0102,0.70155,0.0186,0.70585,0.0171,0.706,0.0169,0.70365,0.1067,0.7029,0.1023,0.70335,0.1101,0.68645,0.1101,0.6895,0.1183,0.70325,0.1179,0.70245,0.0152,0.70545,0.01525,0.70315,0.1174,0.70905,0.1189,0.71145,0.1175,0.7121,0.1162,0.7109,0.01315,0.704,0.01145,0.7038,0.01165,0.70165,0.01345,0.7013,0.01185,0.6993,0.01385,0.6988,0.0123,0.69725,0.01415,0.6964,0.0127,0.69575,0.0145,0.69485,0.12165,0.7056,0.1229,0.7042,0.1243,0.70645,0.12385,0.7077,0.1103,0.699,0.1092,0.7012,0.11055,0.6946,0.10745,0.69325,0.0246,0.70105,0.02205,0.7059,0.02225,0.7015,0.03435,0.70825,0.0324,0.71095,0.10635,0.70985,0.1059,0.7151,0.10265,0.71375,0.1018,0.70925,0.0898,0.71105,0.08145,0.7107,0.08185,0.7092,0.07295,0.7057,0.07235,0.7069,0.03725,0.71,0.0352,0.71535,0.03255,0.7153,0.0387,0.7169,0.03715,0.7162,0.0666,0.7101,0.0647,0.7123,0.07185,0.70815,0.063,0.713,0.06095,0.7133,0.0599,0.71015,0.05255,0.71625,0.05085,0.7157,0.05075,0.71215,0.081,0.7126,0.0991,0.71185,0.09975,0.7136,0.0975,0.7067,0.0962,0.70325,0.0994,0.70375,0.09835,0.70955,0.0895,0.70875,0.08205,0.7076,0.0735,0.70415,0.0961,0.6973,0.094,0.6979,0.0386,0.708,0.03415,0.70035,0.0494,0.6933,0.0454,0.67835,0.0491,0.6784,0.01705,0.7012,0.03165,0.70025,0.02405,0.69625,0.025,0.69325,0.0261,0.6896,0.11125,0.68965,0.11425,0.69275,0.11245,0.6935,0.0213,0.6965,0.0225,0.69385,0.0229,0.6912,0.11685,0.69515,0.11495,0.6966,0.11355,0.6989,0.11235,0.70095,0.11115,0.703,0.01975,0.7059,0.01985,0.7015,0.0157,0.70125,0.0158,0.6976,0.0161,0.6954,0.01665,0.6924,0.11955,0.70335,0.1181,0.7052,0.11615,0.7065,0.0182,0.70105,0.01925,0.6967,0.02005,0.69435,0.0198,0.6907,0.12145,0.70955,0.12055,0.7082,0.11915,0.70675,0.12295,0.71105,0.11875,0.6995,0.1172,0.7005,0.11945,0.70065,0.1188,0.7016,0.11975,0.70095,0.12085,0.702,0.11505,0.7083,0.11505,0.7056,0.11415,0.7069,0.1143,0.7038,0.1131,0.70545,0.11515,0.70135,0.11525,0.70365,0.11715,0.70185,0.11585,0.70235,0.101,0.7447,0.10265,0.74405,0.1037,0.74505,0.10095,0.7462,0.03185,0.72015,0.0313,0.7227,0.0294,0.7221,0.0299,0.71975,0.0279,0.7372,0.0292,0.73585,0.03035,0.736,0.03005,0.73885,0.03795,0.7211,0.03715,0.72305,0.0353,0.72295,0.0362,0.7206,0.1053,0.72195,0.1019,0.7199,0.0304,0.71485,0.0972,0.71905,0.0951,0.72135,0.1002,0.7151,0.03175,0.73575,0.03315,0.7375,0.09925,0.7437,0.0977,0.74405,0.1012,0.7398,0.10125,0.7367,0.10345,0.7371,0.1031,0.7407,0.0992,0.74015,0.09895,0.7364,0.09735,0.74045,0.0973,0.73535,0.0324,0.7323,0.03305,0.72895,0.0349,0.72945,0.03405,0.7342,0.03085,0.73195,0.0313,0.7289,0.0298,0.7289,0.02935,0.7323,0.02725,0.7337,0.028,0.7291,0.10515,0.74155,0.10515,0.7366,0.10325,0.73465,0.10535,0.736,0.09905,0.73395,0.09715,0.73455,0.0351,0.72875,0.0337,0.72675,0.0319,0.72685,0.037,0.71855,0.03855,0.7189,0.03065,0.71745,0.0325,0.71785,0.0986,0.72885,0.09805,0.7256,0.1004,0.72555,0.1008,0.7294,0.0301,0.72685,0.02795,0.72845,0.03325,0.72295,0.1012,0.7341,0.03395,0.7203,0.10295,0.7292,0.10295,0.72595,0.03475,0.7181,0.10215,0.72285,0.09975,0.72195,0.0977,0.7226,0.0995,0.7194,0.10485,0.72405,0.1052,0.7266,0.1053,0.72915,0.0964,0.72825,0.0959,0.72605,0.0956,0.72365,0.0707,0.71925,0.0691,0.7193,0.06965,0.71675,0.0716,0.71745,0.0615,0.7166,0.06155,0.71825,0.06025,0.7181,0.06015,0.71655,0.0657,0.71645,0.06565,0.7182,0.06455,0.7181,0.0645,0.7164,0.07405,0.713,0.07275,0.71105,0.06865,0.70985,0.07035,0.7217,0.0718,0.72285,0.06875,0.72125,0.0658,0.7214,0.06715,0.7212,0.0642,0.72065,0.06825,0.7143,0.0703,0.7139,0.06755,0.7165,0.0643,0.71475,0.06595,0.7148,0.06025,0.71475,0.0611,0.71495,0.0676,0.71855,0.0618,0.72035,0.0606,0.72125,0.0633,0.718,0.0632,0.7202,0.0632,0.7168,0.06285,0.715,0.07175,0.7151,0.0599,0.7128,0.07075,0.71015,0.07305,0.71635,0.0731,0.71825,0.07245,0.7198,0.07945,0.72905,0.07745,0.72925,0.07785,0.72585,0.08035,0.72655,0.0756,0.72835,0.07525,0.72545,0.053,0.72065,0.05325,0.723,0.05155,0.72275,0.05135,0.7207,0.0592,0.72005,0.05905,0.72255,0.05725,0.72265,0.05725,0.72,0.08315,0.7188,0.08135,0.7167,0.05895,0.71035,0.0594,0.716,0.0571,0.7159,0.07695,0.71515,0.07365,0.7162,0.0793,0.7338,0.08125,0.73565,0.0773,0.7332,0.07325,0.7344,0.07525,0.73315,0.0584,0.7311,0.0567,0.72905,0.0572,0.71775,0.0591,0.7177,0.05115,0.7181,0.0528,0.71825,0.05305,0.72925,0.05145,0.7313,0.05515,0.72275,0.05475,0.72905,0.05505,0.72035,0.0549,0.7183,0.08005,0.7236,0.07815,0.72255,0.05465,0.71635,0.0792,0.71585,0.0825,0.72455,0.08215,0.7273,0.0818,0.7294,0.07325,0.72815,0.0732,0.72545,0.07345,0.72305,0.07605,0.72285,0.0595,0.7099,0.0409,0.6755,0.28105,0.50295,0.29375,0.5048,0.2909,0.52365,0.279,0.5256,0.2677,0.52245,0.26825,0.50195,0.2517,0.9901,0.23255,0.9948,0.2339,0.9861,0.2194,0.50225,0.22025,0.5189,0.2054,0.51345,0.206,0.5029,0.25555,0.52685,0.25155,0.50185,0.23795,0.52455,0.236,0.50235,0.18485,0.7922,0.1988,0.7727,0.2133,0.77845,0.198,0.80475,0.19275,0.8111,0.17275,0.79885,0.46635,0.9705,0.46755,0.98035,0.45435,0.9744,0.4541,0.9645,0.4682,0.8395,0.46745,0.8453,0.45115,0.8422,0.4504,0.83835,0.45465,0.9563,0.4645,0.9645,0.4628,0.95845,0.4552,0.95125,0.4634,0.95125,0.46845,0.86015,0.46825,0.8665,0.4525,0.865,0.45285,0.8592,0.46725,0.8766,0.45185,0.8768,0.45275,0.8526,0.46805,0.85295,0.28125,0.7243,0.292,0.72165,0.29105,0.73425,0.2787,0.7364,0.3027,0.7184,0.29905,0.7333,0.30535,0.71775,0.30535,0.7338,0.27105,0.7262,0.27085,0.73765,0.26635,0.74185,0.24705,0.73615,0.26555,0.74465,0.24905,0.74665,0.2771,0.74905,0.2848,0.7507,0.28155,0.76295,0.2663,0.7613,0.2688,0.74685,0.25445,0.75475,0.27775,0.71895,0.29045,0.71575,0.24595,0.72815,0.2699,0.72035,0.2787,0.7756,0.25955,0.773,0.2334,0.7545,0.2404,0.76295,0.2771,0.71235,0.2923,0.70815,0.3021,0.7104,0.30535,0.71035,0.24455,0.72285,0.26845,0.7141,0.2653,0.7865,0.27855,0.7867,0.30535,0.77585,0.30535,0.7847,0.2216,0.769,0.2179,0.7585,0.24855,0.78385,0.2393,0.7778,0.26965,0.79845,0.279,0.7974,0.30535,0.7969,0.2022,0.76695,0.2023,0.759,0.2573,0.79755,0.24315,0.7907,0.2684,0.7071,0.2785,0.70485,0.2428,0.716,0.23065,0.74675,0.2279,0.74285,0.236,0.7379,0.23955,0.74065,0.21675,0.7489,0.20265,0.7504,0.2346,0.7335,0.22585,0.73795,0.22225,0.73035,0.23345,0.7273,0.21315,0.73955,0.204,0.7313,0.2132,0.72385,0.2032,0.7433,0.1953,0.7393,0.19115,0.74885,0.1904,0.75865,0.22445,0.72015,0.2088,0.6931,0.22075,0.68745,0.2328,0.71895,0.16685,0.7754,0.19265,0.76695,0.1595,0.75845,0.2955,0.8298,0.2813,0.81605,0.30535,0.8093,0.30535,0.82735,0.23515,0.6911,0.22915,0.8282,0.25065,0.8394,0.29405,0.6661,0.30535,0.66585,0.30535,0.68095,0.2818,0.6768,0.28715,0.6376,0.2811,0.6196,0.28625,0.61955,0.29635,0.63875,0.2142,0.623,0.22905,0.6098,0.22995,0.6175,0.2184,0.6293,0.23765,0.86785,0.24105,0.8569,0.24795,0.8632,0.24905,0.87665,0.24825,0.68525,0.26925,0.6821,0.2777,0.8446,0.2879,0.8637,0.26235,0.86645,0.28035,0.88305,0.2639,0.88505,0.28945,0.6174,0.30535,0.6253,0.30535,0.6333,0.21195,0.617,0.22965,0.60525,0.21795,0.8889,0.23455,0.88935,0.23795,0.9194,0.2252,0.92535,0.2587,0.9311,0.24335,0.95085,0.2441,0.901,0.25865,0.9095,0.27655,0.91005,0.18365,0.61365,0.19515,0.6147,0.18095,0.6358,0.1657,0.64465,0.28975,0.91,0.2894,0.9395,0.27765,0.93865,0.30535,0.86405,0.298,0.8638,0.26755,0.60775,0.24685,0.6043,0.24875,0.60305,0.26805,0.60665,0.2296,0.7848,0.2057,0.81865,0.19155,0.6742,0.19905,0.66695,0.184,0.6636,0.19205,0.66125,0.1969,0.8234,0.19675,0.833,0.18995,0.82795,0.1873,0.8164,0.17675,0.6653,0.1692,0.6653,0.17145,0.66275,0.1768,0.66305,0.1792,0.66775,0.1874,0.65585,0.1777,0.65545,0.16895,0.6598,0.249,0.85325,0.2592,0.86095,0.30535,0.91095,0.30535,0.93515,0.1986,0.6988,0.21845,0.71865,0.18225,0.6775,0.19565,0.64955,0.2001,0.6339,0.2056,0.64045,0.203,0.65685,0.19345,0.63195,0.1628,0.6664,0.1655,0.66315,0.30535,0.6504,0.2989,0.6522,0.2277,0.67795,0.23075,0.6685,0.2505,0.6742,0.29065,0.5926,0.2874,0.55655,0.30535,0.55885,0.30535,0.597,0.2552,0.5687,0.24875,0.58265,0.2379,0.57555,0.2469,0.56165,0.22475,0.56855,0.24,0.5525,0.2116,0.5644,0.20845,0.5826,0.19765,0.5831,0.2004,0.56435,0.26465,0.9428,0.2839,0.96015,0.26315,0.95625,0.29525,0.9623,0.30535,0.96625,0.29055,0.6078,0.30535,0.6138,0.253,0.59815,0.25795,0.58895,0.27245,0.59925,0.213,0.66665,0.2888,0.6514,0.2142,0.65035,0.15475,0.6672,0.1615,0.66185,0.229,0.83945,0.23055,0.8483,0.22355,0.8541,0.20945,0.83625,0.30535,0.5216,0.30535,0.54155,0.2871,0.5417,0.27625,0.54045,0.2673,0.5397,0.2491,0.5397,0.2608,0.53945,0.26115,0.54805,0.2323,0.9722,0.25185,0.9759,0.2675,0.9787,0.2675,0.98565,0.20445,0.5289,0.21935,0.5302,0.26805,0.84205,0.20315,0.83995,0.2868,0.98265,0.2327,0.9566,0.23775,0.94325,0.21775,0.54185,0.20295,0.5444,0.27695,0.5545,0.2553,0.85335,0.26045,0.8401,0.26365,0.8039,0.23705,0.53655,0.2398,0.59605,0.2283,0.5911,0.2041,0.61465,0.21855,0.5873,0.26335,0.57425,0.27505,0.5815,0.26355,0.60945,0.24615,0.6093,0.2257,0.64705,0.2349,0.66,0.24975,0.66425,0.265,0.66115,0.27225,0.6701,0.2763,0.63305,0.27115,0.62185,0.30045,0.7031,0.1513,0.6861,0.1765,0.67105,0.1484,0.6788,0.1698,0.6734,0.1456,0.6736,0.16475,0.66895,0.182,0.83285,0.18915,0.83595,0.1877,0.8408,0.1773,0.8411,0.2962,0.882,0.2171,0.8586,0.30715,0.98205,0.2969,0.9816,0.1811,0.8264,0.1931,0.838,0.1913,0.84065,0.1793,0.8146,0.2849,0.6621,0.27795,0.6441,0.2735,0.6529,0.22715,0.6337,0.23505,0.6241,0.2462,0.61795,0.2583,0.6161,0.26375,0.63305,0.26075,0.6264,0.25295,0.6241,0.24635,0.6249,0.2388,0.63045,0.2356,0.63695,0.2353,0.64375,0.2402,0.65105,0.2495,0.6529,0.2584,0.64995,0.2629,0.6453,0.26585,0.63945,0.30535,0.8828,0.2294,0.9374,0.30535,0.70385,0.2428,0.63875,0.24525,0.6366,0.2451,0.64025,0.24265,0.6419,0.2466,0.6338,0.24345,0.63595,0.25285,0.63385,0.2525,0.6367,0.249,0.6348,0.2501,0.63275,0.25615,0.63905,0.25485,0.63635,0.2526,0.64035,0.2558,0.6425,0.2533,0.645,0.24875,0.64275,0.24505,0.64545,0.24925,0.64595,0.4677,0.9849,0.4536,0.9809,0.30535,0.7646,0.30535,0.75075,0.4521,0.8475,0.4656,0.8481,0.30535,0.505,0.49315,0.8472,0.4927,0.85785,0.4796,0.85985,0.4751,0.8513,0.47975,0.9749,0.4814,0.98575,0.4791,0.96895,0.4706,0.95865,0.47135,0.96415,0.48155,0.99125,0.4821,0.8413,0.47815,0.96485,0.4804,0.8675,0.48055,0.8766,0.4755,0.95835,0.4865,0.96725,0.49025,0.9775,0.48325,0.96305,0.49205,0.98775,0.491,0.9943,0.48035,0.9559,0.49265,0.86795,0.47505,0.95125,0.47965,0.95125,0.47065,0.95125,0.4923,0.8766,0.2198,0.7416,0.2209,0.7449,0.31995,0.52315,0.31785,0.50475,0.32895,0.5028,0.3317,0.5251,0.3431,0.502,0.3418,0.52305,0.3601,0.99085,0.37845,0.9867,0.3788,0.996,0.3915,0.50205,0.4085,0.50325,0.4079,0.51355,0.38925,0.5186,0.36105,0.5035,0.35375,0.52685,0.3747,0.5027,0.37135,0.52475,0.42705,0.79235,0.41155,0.80475,0.3964,0.77845,0.41075,0.7727,0.4167,0.8111,0.4399,0.79885,0.43455,0.81435,0.4221,0.8164,0.46635,0.9319,0.4541,0.93795,0.45435,0.928,0.46755,0.92205,0.4677,0.9175,0.4536,0.9215,0.4545,0.91045,0.46695,0.90715,0.4645,0.93795,0.45465,0.94615,0.4628,0.944,0.452,0.8878,0.46775,0.88595,0.46795,0.89225,0.45235,0.8936,0.46755,0.8995,0.45225,0.9002,0.3195,0.73425,0.3186,0.72165,0.3292,0.7243,0.3317,0.7364,0.3116,0.7333,0.30795,0.7184,0.3439,0.74185,0.3395,0.73765,0.33925,0.7262,0.36305,0.73615,0.36105,0.74665,0.3447,0.74465,0.3289,0.76295,0.3257,0.7507,0.3333,0.74905,0.34395,0.7613,0.3415,0.74685,0.3557,0.75475,0.3201,0.71575,0.33265,0.71895,0.3641,0.72815,0.3404,0.72035,0.3317,0.7756,0.35065,0.773,0.37655,0.7545,0.3696,0.76295,0.31825,0.70815,0.3333,0.71235,0.30855,0.7104,0.3655,0.72285,0.34185,0.7141,0.345,0.7865,0.33185,0.7867,0.3882,0.769,0.39185,0.7585,0.36155,0.78385,0.3707,0.7778,0.3407,0.79845,0.3314,0.7974,0.40725,0.759,0.4074,0.76695,0.35285,0.79755,0.3669,0.7907,0.3419,0.7071,0.3319,0.70485,0.3672,0.716,0.37925,0.74675,0.37045,0.74065,0.37395,0.7379,0.38195,0.74285,0.393,0.7489,0.4069,0.7504,0.3753,0.7335,0.37645,0.7273,0.38755,0.73035,0.384,0.73795,0.3965,0.72385,0.4056,0.7313,0.39655,0.73955,0.41425,0.7393,0.40635,0.7433,0.4183,0.74885,0.41905,0.75865,0.38535,0.72015,0.37715,0.71895,0.389,0.68745,0.40085,0.6931,0.4168,0.76695,0.4429,0.77555,0.42915,0.7087,0.43915,0.7174,0.4484,0.74385,0.44815,0.7586,0.4432,0.7303,0.32915,0.81605,0.3151,0.8298,0.3748,0.6911,0.3807,0.8282,0.35945,0.8394,0.3165,0.6661,0.32865,0.6768,0.34225,0.84205,0.3327,0.8446,0.32335,0.6376,0.31425,0.63875,0.32425,0.61955,0.32935,0.6196,0.37995,0.6175,0.38085,0.6098,0.3955,0.623,0.39135,0.6293,0.3747,0.86785,0.36105,0.87665,0.36215,0.8632,0.37135,0.8569,0.36185,0.68525,0.34105,0.6821,0.32265,0.8637,0.34635,0.88505,0.3301,0.88305,0.3479,0.86645,0.39775,0.617,0.3802,0.60525,0.39605,0.8889,0.38995,0.9267,0.3773,0.92075,0.3797,0.88935,0.3659,0.901,0.3689,0.95145,0.3515,0.9311,0.35155,0.9095,0.33385,0.91005,0.4284,0.6358,0.41955,0.61455,0.43475,0.61625,0.44935,0.64055,0.32115,0.9395,0.3208,0.91,0.33585,0.93865,0.3126,0.8638,0.36135,0.60305,0.3632,0.6043,0.34275,0.60775,0.34225,0.60665,0.3803,0.7848,0.4039,0.81865,0.4133,0.66695,0.42075,0.6742,0.4202,0.66125,0.4282,0.6636,0.4195,0.82795,0.41275,0.833,0.4126,0.8234,0.4358,0.66675,0.4358,0.66455,0.44105,0.66425,0.44325,0.6668,0.4334,0.66925,0.4248,0.65585,0.43485,0.65695,0.4439,0.6551,0.3611,0.85325,0.3809,0.83945,0.37935,0.8483,0.351,0.86095,0.4109,0.6988,0.39135,0.71865,0.42995,0.6775,0.45155,0.6952,0.4167,0.64955,0.4094,0.65685,0.404,0.64045,0.4095,0.6339,0.41605,0.63195,0.44835,0.66335,0.45105,0.6666,0.3117,0.6522,0.3596,0.6742,0.37915,0.6685,0.38215,0.67795,0.3199,0.5926,0.32315,0.55655,0.35495,0.5687,0.3632,0.56165,0.37205,0.57555,0.3613,0.58265,0.37,0.5525,0.38505,0.56855,0.3981,0.5644,0.41405,0.5618,0.416,0.58075,0.4025,0.5821,0.3263,0.9615,0.3456,0.9428,0.35005,0.95805,0.31425,0.9617,0.32,0.6078,0.35715,0.59815,0.3379,0.59925,0.35225,0.58895,0.3967,0.66665,0.32175,0.6514,0.39555,0.65035,0.45445,0.6614,0.45655,0.66855,0.3886,0.8541,0.4002,0.83625,0.3234,0.5417,0.34205,0.5398,0.33415,0.54045,0.361,0.5397,0.3491,0.54805,0.3494,0.53945,0.3641,0.9762,0.38085,0.9731,0.34585,0.9867,0.3469,0.98005,0.4083,0.5271,0.38935,0.5302,0.40655,0.8401,0.32625,0.9819,0.38315,0.95915,0.37755,0.9446,0.41155,0.5439,0.39105,0.5395,0.3334,0.5545,0.35485,0.85335,0.34975,0.8401,0.3466,0.8039,0.37225,0.53675,0.3702,0.59605,0.3816,0.5911,0.4055,0.61465,0.39325,0.58635,0.34685,0.57425,0.33535,0.5815,0.36395,0.6093,0.3467,0.60945,0.375,0.66,0.38415,0.64705,0.3603,0.66425,0.3381,0.6701,0.34525,0.66115,0.3392,0.62185,0.3341,0.63305,0.3102,0.7031,0.4361,0.67255,0.45615,0.6888,0.44265,0.6749,0.4599,0.68365,0.46265,0.67945,0.4477,0.67045,0.4217,0.8408,0.4203,0.83595,0.4296,0.8323,0.43425,0.84055,0.3144,0.882,0.31455,0.9822,0.4305,0.82585,0.41815,0.84065,0.4164,0.838,0.397,0.86055,0.32555,0.6621,0.33245,0.6441,0.33685,0.6529,0.3827,0.6337,0.3749,0.6241,0.36385,0.61795,0.3519,0.6161,0.3465,0.63305,0.34945,0.6264,0.35715,0.6241,0.3637,0.6249,0.3712,0.63045,0.37435,0.63695,0.37465,0.64375,0.3698,0.65105,0.3606,0.6529,0.3518,0.64995,0.34735,0.6453,0.34445,0.63945,0.3211,0.6174,0.3858,0.93875,0.3672,0.63875,0.3648,0.6366,0.3666,0.63595,0.36345,0.6338,0.3611,0.6348,0.36,0.63275,0.3573,0.63385,0.3576,0.6367,0.3553,0.63635,0.35405,0.63905,0.35755,0.64035,0.35435,0.6425,0.3613,0.64275,0.36085,0.64595,0.3568,0.645,0.365,0.64545,0.36495,0.64025,0.36735,0.6419,0.4651,0.90435,0.45545,0.9051,0.4746,0.90115,0.492,0.90525,0.48025,0.91115,0.47975,0.9275,0.47985,0.91665,0.4791,0.93345,0.4706,0.9438,0.47135,0.9383,0.47815,0.9376,0.4799,0.8849,0.4791,0.8926,0.4755,0.9441,0.4904,0.92475,0.4848,0.935,0.48155,0.9392,0.49305,0.9118,0.48035,0.94655,0.4922,0.8946,0.49215,0.8845,0.38995,0.7416,0.3889,0.7449,0.09015,0.7637,0.04385,0.7557,0.03935,0.75605,0.44775,0.72685,0.45015,0.7135,0.3787,0.08155,0.3831,0.0912,0.36945,0.0905,0.4721,0.1001,0.46205,0.1008,0.4569,0.0888,0.46615,0.0868,0.34365,0.09125,0.333,0.0925,0.33775,0.0801,0.3507,0.08265,0.39305,0.0906,0.39475,0.07565,0.3986,0.0787,0.402,0.09155,0.3551,0.09045,0.36085,0.0829,0.3688,0.0825,0.32115,0.0947,0.31175,0.09645,0.3112,0.0842,0.32325,0.08345,0.426,0.08625,0.4431,0.08875,0.45145,0.1015,0.4326,0.0997,0.41725,0.0962,0.41,0.08245,0.28685,0.05155,0.30005,0.04665,0.30605,0.0593,0.2876,0.0648,0.46965,0.0651,0.47245,0.06745,0.47305,0.07125,0.4632,0.0722,0.4437,0.08045,0.42775,0.08135,0.42965,0.07445,0.44475,0.07165,0.3518,0.0681,0.35135,0.0752,0.3374,0.0716,0.3385,0.06395,0.43095,0.06715,0.4433,0.06695,0.3967,0.0704,0.38815,0.06795,0.39015,0.06415,0.3978,0.0612,0.3897,0.0465,0.3864,0.05185,0.38145,0.04785,0.3866,0.0446,0.4011,0.0525,0.39905,0.05845,0.3908,0.06005,0.3941,0.05035,0.4045,0.0701,0.40995,0.06335,0.41165,0.0567,0.36165,0.07125,0.36165,0.0644,0.3703,0.0636,0.36925,0.07165,0.3088,0.0688,0.32705,0.06485,0.32325,0.0723,0.3089,0.07285,0.4747,0.07555,0.45595,0.08035,0.45125,0.09335,0.45105,0.0845,0.459,0.0837,0.4619,0.09215,0.4657,0.06665,0.4615,0.06815,0.46365,0.05565,0.46685,0.0544,0.4628,0.08655,0.46565,0.09335,0.4565,0.11375,0.45505,0.10965,0.4638,0.1064,0.4669,0.1091,0.4422,0.10945,0.4449,0.1052,0.4417,0.08225,0.443,0.09465,0.43915,0.09635,0.43675,0.08285,0.3804,0.0784,0.3873,0.07295,0.3911,0.07735,0.3874,0.06895,0.4457,0.0567,0.45235,0.0549,0.4549,0.0628,0.4483,0.06335,0.3113,0.05185,0.3192,0.05045,0.32675,0.0575,0.36055,0.0579,0.37045,0.0564,0.3436,0.055,0.35105,0.06055,0.33795,0.0585,0.3284,0.052,0.4831,0.0977,0.4802,0.0844,0.37725,0.0794,0.3792,0.0733,0.3514,0.05645,0.36095,0.0771,0.3689,0.077,0.4003,0.0681,0.37955,0.0597,0.37795,0.0699,0.40245,0.06375,0.47755,0.07985,0.46345,0.0829,0.30535,0.09825,0.289,0.0903,0.43285,0.06645,0.4342,0.0637,0.4305,0.0594,0.43235,0.0581,0.43755,0.058,0.43575,0.05185,0.4418,0.0506,0.42945,0.05245,0.43135,0.0518,0.3809,0.0443,0.38325,0.0424,0.4399,0.06305,0.28765,0.07015,0.2866,0.07725,0.3018,0.0439,0.3243,0.04195,0.33935,0.0439,0.4291,0.04345,0.43045,0.0416,0.3793,0.03805,0.38145,0.0358,0.3615,0.04945,0.37085,0.048,0.4655,0.0327,0.46895,0.0326,0.4429,0.0317,0.44705,0.0319,0.4542,0.03195,0.43535,0.0372,0.30915,0.042,0.3147,0.0412,0.34945,0.0456,0.30245,0.0384,0.30805,0.0057,0.3137,0.00915,0.30725,0.01005,0.32605,0.0041,0.32255,0.0091,0.37305,0.0203,0.3743,0.0165,0.3771,0.01935,0.33835,0.0039,0.3388,0.0105,0.36465,0.01405,0.3659,0.0177,0.35755,0.00885,0.35805,0.0137,0.34835,0.0117,0.3486,0.0048,0.3134,0.0219,0.3075,0.0207,0.30315,0.0171,0.3233,0.02265,0.4671,0.01275,0.4647,0.0062,0.46925,0.0071,0.47075,0.01365,0.4297,0.03275,0.4288,0.0356,0.42775,0.03115,0.42865,0.0283,0.377,0.0302,0.38065,0.03025,0.3382,0.02225,0.4558,0.01205,0.4534,0.0055,0.43495,0.02445,0.4339,0.02,0.36765,0.0298,0.4438,0.01525,0.44275,0.01085,0.35815,0.02405,0.4482,0.01035,0.44715,0.00595,0.3478,0.0226,0.30815,0.02885,0.3029,0.02525,0.3139,0.0293,0.3237,0.03005,0.33865,0.03055,0.34845,0.0314,0.35945,0.03375,0.36885,0.03675,0.3779,0.0332,0.38095,0.03235,0.43,0.03615,0.4289,0.0386,0.4351,0.0293,0.44345,0.02155,0.44775,0.0186,0.4552,0.01965,0.4665,0.0204,0.47005,0.0209,0.0265,0.1001,0.03245,0.0868,0.0417,0.0888,0.03655,0.1008,0.15495,0.09125,0.1479,0.08265,0.16085,0.0801,0.1656,0.0925,0.10555,0.0906,0.0966,0.09155,0.1,0.0787,0.10385,0.07565,0.1435,0.09045,0.12915,0.0905,0.1298,0.0825,0.13775,0.0829,0.17745,0.0947,0.17535,0.08345,0.1874,0.0842,0.18685,0.09645,0.04715,0.1015,0.0555,0.08875,0.0726,0.08625,0.066,0.0997,0.0886,0.08245,0.08135,0.0962,0.21175,0.05155,0.211,0.0648,0.19255,0.0593,0.19855,0.04665,0.02895,0.0651,0.0354,0.0722,0.02555,0.07125,0.02615,0.06745,0.0549,0.08045,0.05385,0.07165,0.06895,0.07445,0.07085,0.08135,0.1468,0.0681,0.1601,0.06395,0.1612,0.0716,0.14725,0.0752,0.06765,0.06715,0.0553,0.06695,0.1019,0.0704,0.1008,0.0612,0.10845,0.06415,0.11045,0.06795,0.1089,0.0465,0.112,0.0446,0.11715,0.04785,0.1122,0.05185,0.0975,0.0525,0.1045,0.05035,0.1078,0.06005,0.09955,0.05845,0.08865,0.06335,0.0941,0.0701,0.08695,0.0567,0.1283,0.0636,0.13695,0.0644,0.13695,0.07125,0.12935,0.07165,0.1898,0.0688,0.1897,0.07285,0.17535,0.0723,0.17155,0.06485,0.04265,0.08035,0.0239,0.07555,0.04735,0.09335,0.0367,0.09215,0.0396,0.0837,0.04755,0.0845,0.0329,0.06665,0.03175,0.0544,0.03495,0.05565,0.0371,0.06815,0.03295,0.09335,0.0358,0.08655,0.0421,0.11375,0.0317,0.1091,0.0348,0.1064,0.04355,0.10965,0.0537,0.1052,0.0564,0.10945,0.05945,0.09635,0.0556,0.09465,0.0569,0.08225,0.06185,0.08285,0.1182,0.0784,0.1199,0.08155,0.1155,0.0912,0.1113,0.07295,0.1112,0.06895,0.1075,0.07735,0.0437,0.0628,0.04625,0.0549,0.0529,0.0567,0.0503,0.06335,0.1873,0.05185,0.17185,0.0575,0.1794,0.05045,0.13805,0.0579,0.12815,0.0564,0.155,0.055,0.1702,0.052,0.16065,0.0585,0.14755,0.06055,0.0155,0.0977,0.0184,0.0844,0.1194,0.0733,0.12135,0.0794,0.1472,0.05645,0.13765,0.0771,0.1297,0.077,0.0983,0.0681,0.12065,0.0699,0.11905,0.0597,0.09615,0.06375,0.03515,0.0829,0.02105,0.07985,0.2096,0.0903,0.19325,0.09825,0.0644,0.0637,0.06575,0.06645,0.0681,0.0594,0.06625,0.0581,0.06285,0.05185,0.06105,0.058,0.0568,0.0506,0.06915,0.05245,0.06725,0.0518,0.11535,0.0424,0.1177,0.0443,0.0587,0.06305,0.21095,0.07015,0.212,0.07725,0.1968,0.0439,0.1743,0.04195,0.15925,0.0439,0.06815,0.0416,0.0695,0.04345,0.1193,0.03805,0.11715,0.0358,0.12775,0.048,0.1371,0.04945,0.02965,0.0326,0.0331,0.0327,0.05155,0.0319,0.0557,0.0317,0.0444,0.03195,0.06325,0.0372,0.1839,0.0412,0.18945,0.042,0.14915,0.0456,0.19615,0.0384,0.19055,0.0057,0.19135,0.01005,0.1849,0.00915,0.17255,0.0041,0.17605,0.0091,0.12555,0.0203,0.1215,0.01935,0.1243,0.0165,0.1598,0.0105,0.16025,0.0039,0.13395,0.01405,0.1327,0.0177,0.14105,0.00885,0.14055,0.0137,0.15025,0.0117,0.15,0.0048,0.1852,0.0219,0.1911,0.0207,0.19545,0.0171,0.1753,0.02265,0.0315,0.01275,0.02785,0.01365,0.02935,0.0071,0.0339,0.0062,0.0689,0.03275,0.06995,0.0283,0.07085,0.03115,0.0698,0.0356,0.1216,0.0302,0.11795,0.03025,0.1604,0.02225,0.0428,0.01205,0.0452,0.0055,0.06365,0.02445,0.0647,0.02,0.13095,0.0298,0.0548,0.01525,0.05585,0.01085,0.14045,0.02405,0.0504,0.01035,0.05145,0.00595,0.1508,0.0226,0.1957,0.02525,0.19045,0.02885,0.1847,0.0293,0.1749,0.03005,0.15995,0.03055,0.15015,0.0314,0.13915,0.03375,0.1297,0.03675,0.1207,0.0332,0.1176,0.03235,0.0686,0.03615,0.06965,0.0386,0.0635,0.0293,0.0551,0.02155,0.0508,0.0186,0.0434,0.01965,0.0321,0.0204,0.0285,0.0209,0.237,0.45995,0.2496,0.45955,0.2498,0.47925,0.23555,0.4789,0.22095,0.47765,0.2077,0.47495,0.2117,0.46515,0.2248,0.4626,0.1794,0.48205,0.16615,0.48225,0.16635,0.4749,0.18275,0.4728,0.1249,0.47835,0.12595,0.4861,0.1121,0.4765,0.11775,0.47655,0.14805,0.4854,0.1531,0.4801,0.1334,0.4805,0.14415,0.4808,0.02125,0.46545,0.0305,0.46685,0.03375,0.4679,0.03665,0.4769,0.1977,0.47445,0.20135,0.46505,0.2491,0.4444,0.23245,0.4465,0.21675,0.45585,0.22695,0.4484,0.01355,0.4495,0.01905,0.45525,0.025,0.462,0.2128,0.4396,0.22635,0.44465,0.0395,0.4877,0.0259,0.4801,0.04685,0.4724,0.04665,0.47565,0.043,0.4737,0.04145,0.47025,0.05225,0.47965,0.05825,0.48755,0.06305,0.4788,0.0564,0.4737,0.07295,0.47205,0.07785,0.4804,0.0623,0.4721,0.0961,0.4767,0.1007,0.4866,0.0826,0.47375,0.05405,0.49745,0.0374,0.49415,0.1487,0.4961,0.1204,0.49445,0.20375,0.4996,0.18575,0.49995,0.1934,0.4849,0.2053,0.48625,0.22115,0.4889,0.2206,0.49955,0.07535,0.48985,0.02665,0.49155,0.02525,0.4994,0.0222,0.4909,0.0517,0.4716,0.0405,0.46805,0.0489,0.46975,0.0376,0.4692,0.2358,0.49715,0.25,0.4944,0.1645,0.4677,0.1767,0.46445,0.00945,0.4394,0.00995,0.4452,0.00305,0.4431,0.0019,0.43855,0.0969,0.27035,0.09515,0.2836,0.08545,0.2826,0.0849,0.2689,0.0701,0.28135,0.07125,0.26665,0.0596,0.281,0.059,0.26665,0.1397,0.27455,0.13775,0.2933,0.1196,0.29085,0.1205,0.27455,0.0417,0.2867,0.0334,0.2923,0.03375,0.2699,0.04565,0.2717,0.21395,0.27275,0.22215,0.27485,0.2235,0.29475,0.21525,0.29815,0.0145,0.2751,0.02285,0.271,0.0203,0.29515,0.01065,0.29315,0.20255,0.29995,0.1811,0.29815,0.1793,0.27815,0.2002,0.2758,0.10585,0.27335,0.10375,0.2862,0.07275,0.2055,0.05485,0.2053,0.05655,0.18555,0.0732,0.1837,0.0898,0.20535,0.09005,0.18325,0.1094,0.20525,0.10585,0.18125,0.1202,0.18135,0.12385,0.20535,0.17735,0.2274,0.1609,0.23175,0.16055,0.21915,0.1773,0.2091,0.0404,0.20365,0.04155,0.18045,0.1695,0.2577,0.1816,0.25945,0.1823,0.2641,0.1631,0.26585,0.0308,0.25495,0.02155,0.25945,0.01955,0.2395,0.0283,0.2376,0.0507,0.25185,0.0488,0.2529,0.04575,0.2519,0.04775,0.2505,0.0739,0.25375,0.05875,0.2527,0.0589,0.2509,0.07495,0.2518,0.087,0.2541,0.0865,0.25515,0.0963,0.2553,0.0952,0.25705,0.1423,0.24975,0.12255,0.24905,0.1256,0.23925,0.146,0.23745,0.1425,0.2577,0.15665,0.2515,0.15715,0.25545,0.15065,0.2599,0.1683,0.2489,0.1671,0.25185,0.20335,0.3414,0.18395,0.3346,0.1616,0.32845,0.1598,0.29565,0.14035,0.32375,0.12075,0.32045,0.09105,0.312,0.10035,0.31785,0.0796,0.3142,0.06825,0.31075,0.05795,0.31715,0.048,0.28435,0.03695,0.3225,0.02795,0.321,0.0788,0.3234,0.1399,0.2657,0.12075,0.26405,0.12225,0.2561,0.105,0.26225,0.0969,0.261,0.1043,0.2547,0.0854,0.25825,0.0728,0.2557,0.0587,0.2555,0.0512,0.2547,0.04595,0.25675,0.15855,0.27465,0.0145,0.3289,0.01725,0.3425,0.0069,0.3315,0.0085,0.3181,0.0149,0.31865,0.21825,0.3487,0.2295,0.3399,0.2359,0.3324,0.2394,0.35115,0.22585,0.34915,0.0049,0.3522,0.03835,0.2546,0.0375,0.2404,0.0278,0.1995,0.02515,0.1759,0.05025,0.2707,0.05235,0.2532,0.1064,0.2496,0.1083,0.23845,0.08895,0.2502,0.0882,0.23805,0.09805,0.2374,0.09775,0.2497,0.07525,0.2489,0.0743,0.237,0.05675,0.2491,0.057,0.2355,0.04065,0.23475,0.14255,0.20225,0.16045,0.24415,0.17875,0.2332,0.18105,0.23825,0.1703,0.24425,0.1963,0.2395,0.1937,0.2277,0.20555,0.23315,0.20525,0.2369,0.212,0.23145,0.21365,0.2357,0.02805,0.23365,0.2058,0.23235,0.1931,0.2153,0.1814,0.25145,0.1812,0.2478,0.18045,0.27225,0.1615,0.2698,0.20175,0.26635,0.1923,0.1714,0.2006,0.1992,0.18815,0.1995,0.1779,0.17265,0.1997,0.16935,0.2012,0.179,0.1739,0.15565,0.1662,0.1725,0.1626,0.15595,0.0714,0.1342,0.0726,0.08975,0.08455,0.08985,0.08605,0.1368,0.15065,0.1565,0.1531,0.17325,0.13995,0.1716,0.13695,0.156,0.0454,0.13475,0.0468,0.09105,0.0588,0.0901,0.05775,0.14075,0.0286,0.09345,0.0338,0.09285,0.03005,0.13325,0.02245,0.1349,0.1005,0.1386,0.10365,0.15105,0.0887,0.14875,0.03995,0.0916,0.18735,0.15395,0.0168,0.16325,0.02495,0.16325,0.01565,0.1774,0.0418,0.1645,0.0579,0.17,0.07375,0.16895,0.089,0.1663,0.1045,0.1654,0.12165,0.16795,0.04315,0.1462,0.02925,0.14475,0.057,0.1508,0.0721,0.14975,0.12,0.1539,0.08925,0.4641,0.0936,0.4707,0.0809,0.46795,0.0778,0.4618,0.06705,0.4609,0.06975,0.4669,0.0595,0.4671,0.05525,0.4622,0.04505,0.46265,0.04875,0.46775,0.03905,0.46615,0.0364,0.46585,0.10515,0.455,0.1064,0.4607,0.0966,0.4591,0.0927,0.45075,0.082,0.44885,0.0854,0.4572,0.0745,0.45495,0.07105,0.44885,0.0612,0.44905,0.064,0.4551,0.05285,0.45665,0.05175,0.4505,0.1533,0.4693,0.1529,0.46455,0.16215,0.4592,0.1446,0.4651,0.1449,0.46985,0.13575,0.46925,0.135,0.4634,0.0428,0.45795,0.0342,0.46085,0.03235,0.4524,0.0425,0.45185,0.01985,0.45195,0.0166,0.45015,0.02485,0.4499,0.02605,0.45905,0.08525,0.4245,0.0807,0.4162,0.093,0.4188,0.09825,0.432,0.06385,0.42095,0.06155,0.4124,0.0698,0.4135,0.0744,0.42155,0.05295,0.41315,0.05515,0.42135,0.04565,0.42295,0.04365,0.41525,0.1508,0.43535,0.16095,0.4276,0.16145,0.45015,0.15195,0.44655,0.1333,0.44355,0.1327,0.4315,0.14265,0.43465,0.14315,0.4458,0.02605,0.41825,0.03525,0.4172,0.037,0.42495,0.02785,0.42745,0.0129,0.41975,0.0192,0.4192,0.02085,0.42915,0.01445,0.43075,0.21135,0.4169,0.22615,0.41145,0.22125,0.4196,0.2116,0.4282,0.1756,0.42515,0.1608,0.40735,0.174,0.401,0.15,0.41555,0.15075,0.42485,0.132,0.4214,0.13005,0.4131,0.14145,0.41515,0.1418,0.4244,0.19615,0.3996,0.1954,0.41915,0.08605,0.3923,0.0833,0.38235,0.10075,0.38695,0.0955,0.3952,0.06565,0.3882,0.06435,0.3795,0.0768,0.39045,0.0433,0.3834,0.05585,0.3875,0.0461,0.38685,0.01045,0.39055,0.03455,0.387,0.02225,0.3877,0.23985,0.39055,0.23965,0.4022,0.2272,0.3996,0.2267,0.38765,0.21135,0.3988,0.2123,0.3865,0.17685,0.3807,0.1989,0.38515,0.1589,0.39465,0.1491,0.40675,0.14195,0.39205,0.12855,0.4043,0.1219,0.3895,0.1401,0.4062,0.0161,0.38745,0.00625,0.3918,0.00535,0.38365,0.0187,0.38105,0.2015,0.43845,0.20885,0.43535,0.19105,0.461,0.18735,0.45775,0.1727,0.4562,0.15375,0.4766,0.1537,0.4734,0.1446,0.4776,0.1349,0.47695,0.13575,0.4736,0.1449,0.47425,0.1095,0.467,0.11145,0.472,0.10505,0.47185,0.0995,0.4656,0.127,0.472,0.1264,0.47525,0.11895,0.47365,0.1177,0.4686,0.1168,0.46375,0.11545,0.45805,0.12545,0.46125,0.1263,0.467,0.12135,0.42815,0.122,0.44,0.11105,0.43655,0.10655,0.42335,0.10515,0.4137,0.106,0.40545,0.11805,0.40975,0.1199,0.4179,0.06615,0.36385,0.04425,0.3682,0.0416,0.34105,0.06025,0.3373,0.08365,0.33895,0.08555,0.365,0.1023,0.3428,0.1029,0.36935,0.12,0.3479,0.1206,0.37205,0.13785,0.35135,0.1388,0.3743,0.158,0.35535,0.1568,0.3764,0.1809,0.3614,0.20285,0.36915,0.21685,0.3746,0.22725,0.37655,0.24065,0.3795,0.00545,0.37675,0.0179,0.3697,0.15265,0.45985,0.15195,0.45455,0.1436,0.4544,0.1441,0.4596,0.13445,0.458,0.13365,0.452,0.11445,0.45215,0.11275,0.4459,0.1236,0.4494,0.12435,0.4553,0.1013,0.4414,0.1029,0.4476,0.09065,0.4434,0.08845,0.4338,0.0772,0.4308,0.07905,0.4402,0.06865,0.4404,0.0663,0.42965,0.05735,0.43025,0.05875,0.4408,0.0502,0.4423,0.0472,0.4316,0.0406,0.44395,0.0312,0.44415,0.0291,0.4362,0.03885,0.4331,0.02305,0.44555,0.01595,0.44465,0.01555,0.4395,0.02195,0.43695,0.17975,0.4534,0.1723,0.44525,0.1821,0.4428,0.17515,0.1985,0.1583,0.1995,0.2112,0.26175,0.19425,0.2557,0.19375,0.2504,0.2012,0.2503,0.19875,0.26085,0.21305,0.24065,0.20645,0.2468,0.19175,0.24745,0.1992,0.24665,0.4594,0.48725,0.4614,0.4937,0.4446,0.4964,0.44075,0.487,0.4731,0.49955,0.4722,0.4912,0.4765,0.49065,0.03395,0.38665,0.03505,0.388,0.02245,0.38755,0.0223,0.38775,0.0537,0.3888,0.04525,0.3885,0.0449,0.3878,0.0545,0.38855,0.06265,0.39185,0.0636,0.39165,0.0747,0.3941,0.0725,0.3977,0.02515,0.41185,0.02315,0.40175,0.03595,0.4019,0.0347,0.40955,0.0446,0.40075,0.0521,0.40065,0.05245,0.40625,0.0433,0.4086,0.0657,0.4001,0.06,0.39735,0.06065,0.39355,0.0703,0.39935,0.0751,0.40835,0.07235,0.40495,0.0774,0.40395,0.0872,0.41125,0.2122,0.4293,0.2211,0.4239,0.2173,0.42975,0.239,0.40555,0.2389,0.4083,0.0066,0.3967,0.1177,0.4021,0.1055,0.39775,0.02445,0.39655,0.02395,0.39005,0.0359,0.3912,0.03665,0.39565,0.0527,0.3915,0.0527,0.39535,0.0451,0.3957,0.0452,0.3913,0.0005,0.41545,0.0066,0.42045,0.00865,0.432,0.01955,0.47395,0.0175,0.4661,0.01165,0.45105,0.00415,0.4446,0.07365,0.49595,0.31895,0.4815,0.3132,0.4997,0.30515,0.48485,0.03655,0.498,0.4621,0.49845,0.13405,0.1409,0.13025,0.09415,0.14705,0.09575,0.1484,0.1416,0.16665,0.09745,0.17605,0.09655,0.1852,0.13945,0.1706,0.1404,0.1182,0.13995,0.1598,0.1408,0.15795,0.097,0.18965,0.2418,0.0235,0.3146,0.19695,0.14955,0.01925,0.14675,0.19415,0.13635,0.0963,0.09105,0.1124,0.0931,0.2264,0.3284,0.2061,0.2577,0.21735,0.2636,0.22115,0.2584,0.22765,0.2748,0.23055,0.29095,0.2341,0.3185,0.1509,0.2652,0.14835,0.2679,0.0824,0.40175,0.0847,0.3984,0.09415,0.4008,0.09305,0.4095,0.05935,0.40665,0.0593,0.4008,0.06485,0.40405,0.06735,0.40725,0.1819,0.0954,0.18465,0.09425,0.01695,0.1975,0.0207,0.23035,0.02075,0.23575,0.25015,0.49975,0.23475,0.49965,0.2064,0.1974,0.2624,0.4599,0.26395,0.479,0.28695,0.46475,0.29145,0.4745,0.27855,0.47755,0.27425,0.4625,0.3323,0.4741,0.332,0.48165,0.31615,0.4723,0.37375,0.4772,0.38155,0.47585,0.38755,0.4763,0.3714,0.4844,0.34505,0.47915,0.3497,0.48445,0.3648,0.47905,0.35395,0.47965,0.4779,0.4652,0.4629,0.47635,0.46535,0.4675,0.46825,0.46645,0.29635,0.46545,0.30055,0.47405,0.26575,0.44635,0.28175,0.45535,0.2717,0.4479,0.47355,0.4613,0.47965,0.4548,0.4853,0.4493,0.2865,0.43975,0.27215,0.44415,0.4734,0.4799,0.45615,0.4735,0.45265,0.4755,0.452,0.4722,0.4575,0.4701,0.4475,0.47965,0.43625,0.47875,0.44255,0.47375,0.42685,0.4719,0.4372,0.4724,0.4218,0.48045,0.4043,0.47655,0.41735,0.4737,0.3986,0.4854,0.32855,0.4929,0.32875,0.49805,0.3491,0.4955,0.29575,0.49975,0.2793,0.49975,0.27855,0.4887,0.294,0.4863,0.26445,0.4971,0.26545,0.49985,0.42315,0.48915,0.3895,0.48715,0.40245,0.4945,0.3759,0.493,0.4472,0.47135,0.4502,0.4692,0.45855,0.46795,0.46135,0.46885,0.33485,0.46685,0.32335,0.4638,0.4893,0.43905,0.49795,0.44165,0.4945,0.4442,0.4889,0.445,0.4024,0.27015,0.4143,0.26885,0.41355,0.2824,0.4032,0.28345,0.4278,0.2665,0.42855,0.28105,0.4405,0.2664,0.44,0.28065,0.35895,0.2741,0.3783,0.27455,0.3793,0.2905,0.361,0.29315,0.46325,0.269,0.466,0.292,0.45745,0.28655,0.45365,0.2711,0.28635,0.27325,0.28695,0.29845,0.2785,0.29475,0.27855,0.27525,0.48175,0.2734,0.48925,0.29305,0.47935,0.2947,0.4738,0.26985,0.3195,0.27805,0.31845,0.2981,0.2969,0.29995,0.2957,0.27575,0.3934,0.2732,0.3952,0.28595,0.44295,0.18515,0.44475,0.2049,0.427,0.20515,0.4264,0.18335,0.4102,0.20525,0.4096,0.18315,0.39035,0.2053,0.39375,0.18135,0.3793,0.1813,0.37525,0.2052,0.3213,0.2272,0.322,0.20915,0.3386,0.2191,0.33805,0.2316,0.45705,0.18065,0.45815,0.2038,0.31675,0.26395,0.3176,0.25915,0.3299,0.25755,0.33595,0.2656,0.47865,0.2428,0.479,0.25735,0.47175,0.2535,0.47255,0.23965,0.44845,0.25255,0.4517,0.2512,0.45415,0.25255,0.45035,0.25335,0.4403,0.25115,0.44015,0.25315,0.42505,0.25345,0.42435,0.251,0.4121,0.25345,0.4124,0.2548,0.4036,0.25695,0.4029,0.255,0.37335,0.2391,0.3766,0.2487,0.3568,0.24945,0.3533,0.23735,0.34215,0.25485,0.34255,0.25115,0.35685,0.25735,0.3487,0.25935,0.3321,0.25175,0.3308,0.2488,0.3157,0.33445,0.2962,0.34115,0.33975,0.29535,0.33815,0.32835,0.35905,0.32365,0.3787,0.3204,0.40815,0.3117,0.3986,0.3177,0.4195,0.31395,0.43125,0.3104,0.44075,0.31695,0.47085,0.32105,0.4614,0.3226,0.45145,0.2842,0.4199,0.32325,0.37685,0.25575,0.37825,0.26405,0.3594,0.2654,0.39395,0.26215,0.39475,0.2546,0.4021,0.26095,0.4135,0.258,0.4261,0.2555,0.44035,0.25545,0.45365,0.2568,0.4481,0.2544,0.33975,0.2738,0.4826,0.32865,0.482,0.34245,0.49235,0.31825,0.49395,0.33125,0.48255,0.3187,0.28345,0.34915,0.27135,0.34045,0.27545,0.3494,0.2615,0.3534,0.2643,0.3321,0.49435,0.35215,0.46185,0.2549,0.4612,0.24035,0.4719,0.17595,0.47245,0.20005,0.44925,0.2705,0.44655,0.2532,0.39085,0.2383,0.39255,0.24955,0.4103,0.24985,0.4011,0.24965,0.401,0.23725,0.41095,0.23785,0.4252,0.23665,0.42405,0.24805,0.44265,0.23535,0.44225,0.24965,0.4584,0.2347,0.3568,0.2021,0.33865,0.24385,0.3199,0.23305,0.32885,0.2443,0.31795,0.2384,0.3029,0.23935,0.2937,0.23685,0.29285,0.23305,0.30465,0.22715,0.2856,0.2357,0.28655,0.2311,0.4738,0.23395,0.2921,0.23185,0.30595,0.21505,0.3178,0.2516,0.318,0.24775,0.33705,0.26915,0.31835,0.2721,0.2968,0.26665,0.30895,0.1711,0.318,0.17245,0.30905,0.19915,0.29955,0.2015,0.2988,0.18005,0.30245,0.1691,0.3306,0.17295,0.3225,0.1558,0.33325,0.15615,0.42765,0.13425,0.41255,0.13665,0.4146,0.0898,0.4259,0.08975,0.349,0.15635,0.3628,0.15575,0.35955,0.1715,0.3466,0.1731,0.45155,0.1347,0.4421,0.13655,0.4394,0.09005,0.4509,0.0909,0.46535,0.1331,0.46525,0.0931,0.47035,0.0926,0.476,0.1358,0.40995,0.1486,0.3954,0.151,0.39825,0.13825,0.4587,0.09185,0.3142,0.1537,0.48125,0.16765,0.48125,0.1779,0.46865,0.1632,0.4549,0.16425,0.44145,0.1695,0.42575,0.1686,0.41015,0.1662,0.39485,0.16545,0.37775,0.16805,0.4553,0.14595,0.46865,0.14475,0.4426,0.1505,0.42705,0.14945,0.37955,0.1538,0.40995,0.46375,0.4214,0.4614,0.4186,0.46765,0.40615,0.4706,0.4322,0.46035,0.44395,0.46165,0.44,0.4671,0.42975,0.46665,0.45995,0.4656,0.45065,0.46745,0.45395,0.4619,0.4623,0.46525,0.39475,0.45515,0.4069,0.4508,0.40275,0.4589,0.39325,0.46055,0.41735,0.44885,0.42755,0.4489,0.42445,0.4546,0.41355,0.45695,0.4375,0.449,0.44715,0.4503,0.44625,0.456,0.43495,0.4547,0.3465,0.46385,0.346,0.4684,0.33745,0.45855,0.35495,0.46425,0.36465,0.4625,0.36375,0.4682,0.3545,0.4687,0.4669,0.45215,0.4648,0.46035,0.45625,0.4573,0.4566,0.4516,0.4793,0.45145,0.4728,0.4582,0.4744,0.44955,0.4824,0.4497,0.41415,0.4244,0.4014,0.4321,0.406,0.41855,0.4187,0.41605,0.43565,0.42075,0.42515,0.4215,0.4295,0.41325,0.4378,0.41205,0.4538,0.42235,0.44425,0.42105,0.44625,0.4128,0.4556,0.4147,0.33795,0.45,0.3387,0.4276,0.3487,0.4356,0.3475,0.4466,0.3662,0.44355,0.35635,0.4458,0.35695,0.43495,0.36685,0.4317,0.4741,0.418,0.47205,0.42695,0.4625,0.42435,0.46435,0.4167,0.4869,0.41915,0.48495,0.4304,0.47905,0.42885,0.47885,0.4192,0.2877,0.417,0.28735,0.4286,0.2781,0.41935,0.27315,0.4109,0.33885,0.4075,0.32405,0.42505,0.32535,0.40105,0.34955,0.41605,0.34885,0.4252,0.36755,0.42175,0.3578,0.42485,0.35815,0.41565,0.3695,0.4134,0.30355,0.41945,0.303,0.39965,0.41225,0.3918,0.4032,0.39475,0.3982,0.3868,0.41545,0.38205,0.4325,0.3878,0.42155,0.38985,0.43445,0.37925,0.45515,0.38485,0.4519,0.3875,0.4424,0.3872,0.48295,0.38995,0.47655,0.39025,0.46355,0.38785,0.25955,0.391,0.2729,0.3873,0.27205,0.39925,0.26015,0.40225,0.2871,0.3863,0.28795,0.39865,0.3225,0.38065,0.30045,0.38505,0.3504,0.4071,0.34045,0.39475,0.3573,0.39225,0.3708,0.40455,0.35925,0.4066,0.3772,0.3896,0.4942,0.3861,0.49555,0.39335,0.48165,0.38975,0.48015,0.38145,0.29725,0.43925,0.3126,0.4576,0.30775,0.46125,0.29065,0.436,0.3271,0.45555,0.34525,0.4724,0.3448,0.4755,0.3635,0.47235,0.36385,0.47575,0.354,0.47625,0.35415,0.47305,0.39005,0.4667,0.39985,0.4653,0.39475,0.472,0.388,0.4717,0.3725,0.471,0.38195,0.468,0.3804,0.47285,0.3728,0.47425,0.3744,0.4607,0.3846,0.45805,0.38295,0.4633,0.37345,0.46625,0.3885,0.43675,0.37755,0.4401,0.378,0.42835,0.3928,0.4236,0.38135,0.4099,0.39315,0.4053,0.3945,0.41395,0.37945,0.41805,0.45605,0.34065,0.4554,0.3684,0.4333,0.36355,0.4383,0.3372,0.41495,0.33895,0.4136,0.36485,0.3966,0.34285,0.39625,0.3694,0.3786,0.37225,0.37915,0.34795,0.3615,0.3514,0.3604,0.37445,0.34145,0.3553,0.34245,0.37645,0.3185,0.36125,0.2966,0.36905,0.2829,0.3743,0.27285,0.376,0.2593,0.37915,0.49405,0.3785,0.482,0.36825,0.34745,0.4544,0.34685,0.4593,0.356,0.45415,0.366,0.45165,0.3652,0.45745,0.3555,0.45895,0.37605,0.4493,0.38705,0.4461,0.38555,0.4523,0.37545,0.45505,0.3984,0.4415,0.41115,0.43385,0.409,0.4435,0.397,0.44785,0.42215,0.43075,0.4331,0.4296,0.4301,0.4405,0.42045,0.4403,0.44185,0.43,0.45205,0.4311,0.4488,0.4421,0.44005,0.4408,0.4705,0.43565,0.4682,0.4438,0.4586,0.44365,0.46055,0.43245,0.4763,0.4453,0.4776,0.4365,0.4835,0.4392,0.483,0.4443,0.3198,0.45285,0.31695,0.44275,0.3271,0.4451,0.3244,0.1984,0.3409,0.19945,0.2884,0.26185,0.3049,0.2557,0.30035,0.26085,0.2982,0.25025,0.30555,0.25035,0.2867,0.24045,0.29265,0.24695,0.30025,0.2468,0.30745,0.2474,0.46385,0.3879,0.47705,0.38965,0.47725,0.3892,0.4642,0.38945,0.4533,0.3884,0.45395,0.38925,0.44555,0.38895,0.4439,0.38885,0.42625,0.3971,0.42355,0.39345,0.43455,0.3913,0.43625,0.3912,0.4749,0.4125,0.4647,0.4093,0.463,0.40145,0.47475,0.4004,0.4544,0.40025,0.4559,0.40815,0.4467,0.4057,0.4469,0.40015,0.4386,0.39305,0.439,0.39675,0.4332,0.39965,0.4287,0.3987,0.4242,0.40825,0.41215,0.41085,0.4217,0.4036,0.42665,0.40455,0.28415,0.4284,0.2779,0.424,0.28735,0.42985,0.25995,0.4082,0.26055,0.40475,0.4963,0.39395,0.39345,0.39755,0.38155,0.40215,0.4638,0.39135,0.47665,0.39135,0.47445,0.3951,0.4626,0.39475,0.454,0.3953,0.44635,0.3948,0.4466,0.39115,0.4543,0.39135,0.49255,0.41955,0.49955,0.41465,0.4995,0.43765,0.4902,0.43145,0.4831,0.4663,0.48085,0.47415,0.4872,0.45125,0.42465,0.49495,0.38225,0.4821,0.36535,0.14075,0.35075,0.14145,0.35145,0.09575,0.3681,0.09405,0.3285,0.09715,0.32585,0.1404,0.31725,0.13945,0.32345,0.09755,0.3817,0.1398,0.33555,0.1408,0.33695,0.0969,0.30945,0.2417,0.4751,0.3146,0.30635,0.1493,0.4802,0.1481,0.30955,0.1365,0.4026,0.0907,0.3862,0.0929,0.2743,0.32955,0.2929,0.2576,0.2818,0.2632,0.27305,0.27525,0.27765,0.2576,0.2713,0.2905,0.2653,0.3202,0.35075,0.2674,0.3483,0.2647,0.4164,0.4012,0.4063,0.40915,0.40455,0.40045,0.41365,0.39775,0.43985,0.4062,0.4318,0.40685,0.4342,0.40355,0.43965,0.40025,0.31235,0.0945,0.31485,0.0957,0.4824,0.1974,0.4812,0.2318,0.4796,0.23595,0.1695,0.4932,0.16945,0.49875,0.2944,0.19975,0.00955,0.3991,0.00785,0.3975,0.0109,0.39265,0.0084,0.3957,0.4867,0.3941,0.4944,0.39535,0.4938,0.39665,0.48845,0.39845,0.00735,0.4136,0.0153,0.41325,0.0031,0.4147,0.01575,0.39075,0.0103,0.39125,0.01845,0.39695,0.0124,0.4024,0.4801,0.4135,0.49025,0.41205,0.4959,0.41315,0.3925,0.4796,0.4841,0.39085,0.4873,0.3913,0.47995,0.3951,0.47735,0.3996,0.01505,0.4003,0.4794,0.39635,0.23695,0.4355,0.24945,0.43575,0.24935,0.4215,0.2352,0.42275,0.23955,0.4147,0.24915,0.415,0.22525,0.4328,0.23795,0.4293,0.24925,0.4285,0.22375,0.42815,0.24065,0.41065,0.2408,0.40675,0.24375,0.4075,0.2495,0.4113,0.26205,0.43555,0.2582,0.4149,0.26365,0.4228,0.2739,0.43285,0.2611,0.42935,0.2578,0.40735,0.2576,0.4109,0.2549,0.4078,0.2579,0.384,0.2547,0.3858,0.2531,0.37855,0.2554,0.3758,0.27545,0.42805,0.24575,0.3783,0.24775,0.37955,0.2479,0.38565,0.2443,0.3857,0.2473,0.3903,0.2486,0.38955,0.24945,0.39095,0.2473,0.3929,0.24695,0.38715,0.24565,0.39125,0.2508,0.38565,0.2512,0.37945,0.2562,0.3901,0.2537,0.39125,0.25205,0.3874,0.2519,0.3902,0.24175,0.3844,0.24335,0.3758,0.24215,0.39,0.252,0.2124,0.2495,0.3817,0.2494,0.3849,0.25195,0.39285,0.2504,0.38955,0.504,0.4248,0.09535,0.4958,0.10815,0.4801,0.4858,0.3994,0.2403,0.4049,0.2566,0.4048,0.01085,0.39665,0.24505,0.4008,0.2434,0.39465,0.2535,0.4011,0.2557,0.3952,0.2495,0.4109,0.24955,0.4109,0.2495,0.408,0.24945,0.40415,0.24945,0.3973,0.24945,0.40045,0.2494,0.39905,0.24945,0.3892,0.24945,0.3868,0.6437,0.62155,0.65325,0.6469,0.6297,0.67265,0.61115,0.667,0.6131,0.6183,0.6045,0.6227,0.6024,0.61975,0.6163,0.61065,0.6274,0.61555,0.62645,0.6049,0.63415,0.5913,0.6409,0.5868,0.5433,0.67595,0.5514,0.67065,0.55305,0.67365,0.5444,0.67925,0.5108,0.65575,0.51365,0.65565,0.51335,0.66175,0.5111,0.66425,0.5218,0.6768,0.5217,0.6733,0.51185,0.6493,0.51575,0.6477,0.52685,0.6248,0.52875,0.6261,0.52315,0.63685,0.51805,0.63935,0.604,0.608,0.59765,0.61965,0.592,0.60315,0.5458,0.60575,0.54575,0.6082,0.5678,0.59955,0.5698,0.60195,0.5566,0.66445,0.5581,0.6593,0.5606,0.6593,0.55915,0.66655,0.5602,0.6518,0.5587,0.65215,0.55155,0.6352,0.55835,0.64185,0.5561,0.64385,0.5497,0.6375,0.58,0.6171,0.5768,0.6078,0.58235,0.60775,0.57995,0.61995,0.56495,0.62065,0.5484,0.61515,0.5509,0.6235,0.5397,0.62035,0.5371,0.63575,0.5282,0.63285,0.57735,0.6532,0.5757,0.649,0.57815,0.64565,0.58435,0.6523,0.55115,0.6917,0.55085,0.6875,0.5586,0.6826,0.5603,0.689,0.5022,0.66945,0.5073,0.6692,0.51705,0.68315,0.5175,0.68645,0.50065,0.6556,0.50615,0.65785,0.50105,0.6472,0.5062,0.6492,0.50885,0.6323,0.51935,0.61795,0.52305,0.6211,0.5133,0.6359,0.5395,0.5964,0.54295,0.60105,0.5647,0.5885,0.56625,0.5923,0.6135,0.5846,0.62045,0.5875,0.59685,0.58315,0.59665,0.57975,0.5286,0.67745,0.54035,0.67855,0.5365,0.68355,0.53045,0.6828,0.53435,0.6236,0.52235,0.6348,0.52625,0.6349,0.5837,0.623,0.59605,0.6124,0.59565,0.6197,0.5877,0.62715,0.547,0.6092,0.5475,0.613,0.5789,0.5991,0.57775,0.6049,0.62115,0.58855,0.5983,0.5864,0.56815,0.67315,0.57455,0.65705,0.5598,0.67095,0.563,0.6583,0.56255,0.6504,0.57055,0.64895,0.5539,0.6422,0.5446,0.63745,0.54705,0.63135,0.56235,0.6375,0.559,0.6257,0.5341,0.674,0.54435,0.67155,0.57405,0.6068,0.56035,0.6177,0.5477,0.6227,0.5377,0.62995,0.5222,0.6559,0.51635,0.66455,0.51785,0.64375,0.5249,0.64305,0.59345,0.63585,0.5915,0.64335,0.5837,0.6385,0.587,0.6345,0.5903,0.63455,0.5537,0.6631,0.57075,0.6783,0.58555,0.66165,0.59545,0.64605,0.5848,0.6348,0.5898,0.6321,0.5752,0.64225,0.58025,0.6378,0.5985,0.62375,0.6001,0.62915,0.5843,0.6057,0.5952,0.61905,0.57435,0.6258,0.59745,0.67545,0.59465,0.6783,0.5922,0.67195,0.5998,0.66295,0.5621,0.63485,0.56455,0.63875,0.5633,0.64395,0.55835,0.6378,0.5707,0.6276,0.5721,0.6326,0.5741,0.6274,0.5777,0.63265,0.5797,0.6504,0.5787,0.64675,0.5765,0.6456,0.57725,0.64885,0.5729,0.63895,0.57335,0.6387,0.57725,0.6326,0.57705,0.63155,0.58045,0.6301,0.58075,0.6288,0.58935,0.63605,0.5868,0.6346,0.5832,0.64615,0.5847,0.65195,0.5891,0.63155,0.5895,0.63135,0.5836,0.6294,0.5841,0.6281,0.58765,0.62845,0.5866,0.62985,0.5698,0.64495,0.5762,0.6478,0.57775,0.64065,0.57895,0.6355,0.53215,0.6499,0.5309,0.6544,0.5807,0.59535,0.5794,0.58825,0.5795,0.5842,0.57065,0.6447,0.5455,0.66345,0.54895,0.6713,0.53855,0.6485,0.5393,0.64495,0.5367,0.644,0.545,0.6457,0.54285,0.65165,0.5399,0.65195,0.5487,0.6622,0.55325,0.67395,0.55555,0.6736,0.5128,0.6579,0.51275,0.66355,0.51605,0.64405,0.55405,0.67605,0.59195,0.59215,0.54555,0.67905,0.54675,0.681,0.53405,0.68085,0.53445,0.67745,0.53505,0.68995,0.5355,0.6953,0.53905,0.6818,0.54745,0.6802,0.5458,0.71095,0.5449,0.72175,0.5395,0.72215,0.5404,0.7085,0.5496,0.71955,0.5504,0.70955,0.55715,0.7171,0.5569,0.7091,0.57335,0.7063,0.56425,0.71315,0.5617,0.70645,0.56865,0.70215,0.5322,0.71815,0.53665,0.70555,0.52725,0.7106,0.53395,0.70325,0.53925,0.70445,0.5456,0.7025,0.55595,0.69935,0.562,0.6953,0.57235,0.6848,0.578,0.6888,0.57835,0.6812,0.5876,0.6825,0.5919,0.68705,0.58015,0.697,0.57035,0.64265,0.57515,0.64575,0.56795,0.64265,0.5857,0.6235,0.59125,0.6072,0.5116,0.6633,0.5159,0.67735,0.51605,0.6799,0.58545,0.69225,0.5401,0.70115,0.55455,0.693,0.7182,0.76255,0.70445,0.75775,0.70995,0.74145,0.72265,0.7431,0.586,0.69345,0.5926,0.6829,0.57935,0.7113,0.56955,0.7168,0.55915,0.78585,0.5617,0.8316,0.54875,0.82525,0.54685,0.7879,0.5655,0.8673,0.55055,0.856,0.58685,0.8472,0.58705,0.88255,0.62365,0.87815,0.626,0.9015,0.66125,0.86085,0.68075,0.8685,0.67495,0.89155,0.65935,0.8847,0.7019,0.87355,0.72785,0.87895,0.72175,0.899,0.6962,0.89595,0.6937,0.9151,0.6595,0.9089,0.6818,0.84525,0.6663,0.8383,0.67035,0.81595,0.6814,0.81795,0.70895,0.85015,0.59065,0.7039,0.60035,0.67605,0.6375,0.6797,0.6579,0.66245,0.66,0.6792,0.64155,0.6923,0.7165,0.6493,0.7058,0.66465,0.6877,0.66835,0.6878,0.6536,0.721,0.6368,0.68765,0.639,0.7362,0.6413,0.73435,0.6477,0.734,0.65465,0.72465,0.6622,0.7098,0.67,0.699,0.68295,0.6818,0.6988,0.6573,0.70585,0.63945,0.7205,0.63795,0.75235,0.65625,0.7303,0.65945,0.7492,0.64475,0.77405,0.65545,0.80825,0.64405,0.80895,0.66245,0.80155,0.6746,0.73685,0.67635,0.72055,0.6944,0.72605,0.69105,0.73845,0.7009,0.7725,0.70275,0.7662,0.7148,0.77055,0.71385,0.7773,0.6722,0.78325,0.6686,0.78555,0.67025,0.7772,0.6745,0.77905,0.67485,0.7606,0.68945,0.7554,0.70185,0.79595,0.7032,0.8002,0.69,0.8014,0.6876,0.7959,0.7189,0.78165,0.72455,0.7862,0.7188,0.78985,0.71515,0.7852,0.7137,0.79445,0.7082,0.7913,0.7052,0.8076,0.71675,0.80335,0.721,0.81215,0.70365,0.81235,0.74575,0.73805,0.7356,0.7344,0.7417,0.7303,0.7467,0.7324,0.75075,0.73325,0.75075,0.739,0.7284,0.727,0.7313,0.72965,0.72875,0.73165,0.72685,0.72885,0.70425,0.8201,0.7226,0.8216,0.7319,0.8444,0.7499,0.8475,0.7499,0.8731,0.7499,0.8994,0.744,0.72595,0.7478,0.7283,0.747,0.7228,0.74615,0.7209,0.74925,0.7216,0.7492,0.72455,0.73555,0.73155,0.7405,0.72465,0.7393,0.7295,0.74405,0.72235,0.7415,0.72185,0.7096,0.69065,0.7002,0.69725,0.70635,0.6799,0.73455,0.70575,0.7391,0.71155,0.72925,0.71455,0.7247,0.71075,0.67715,0.7903,0.67825,0.79665,0.6725,0.79185,0.6732,0.7853,0.67665,0.7699,0.6792,0.7743,0.7371,0.66615,0.7264,0.6675,0.7381,0.6595,0.6657,0.77205,0.72585,0.7787,0.71965,0.7785,0.67405,0.59365,0.7268,0.67265,0.7383,0.6711,0.7383,0.6742,0.72705,0.6778,0.73925,0.6792,0.72705,0.68025,0.7488,0.71055,0.745,0.71085,0.74575,0.7073,0.74815,0.70725,0.72395,0.6947,0.7339,0.69815,0.74235,0.6999,0.7102,0.68545,0.70865,0.68055,0.71395,0.68415,0.71405,0.6867,0.7106,0.68405,0.72465,0.6917,0.72575,0.6855,0.73575,0.6868,0.7345,0.6951,0.7421,0.6968,0.74475,0.68695,0.7499,0.68725,0.7499,0.6963,0.73215,0.71485,0.72805,0.7216,0.72655,0.7222,0.73895,0.7171,0.73965,0.7132,0.74275,0.7148,0.74515,0.7121,0.749,0.7127,0.75075,0.7107,0.75075,0.7126,0.74405,0.72115,0.74495,0.7195,0.7347,0.72055,0.73965,0.71975,0.74145,0.7189,0.7422,0.72,0.7429,0.7168,0.74155,0.7179,0.72215,0.6076,0.7187,0.58175,0.7499,0.64135,0.7499,0.64765,0.52125,0.7748,0.53525,0.78415,0.5286,0.82175,0.5063,0.8254,0.6512,0.9232,0.62935,0.91965,0.5935,0.9076,0.55095,0.87435,0.56965,0.8917,0.6699,0.9374,0.5683,0.9121,0.54675,0.8851,0.5916,0.92915,0.63705,0.9401,0.5377,0.8585,0.5715,0.8075,0.5885,0.81605,0.6128,0.74535,0.61935,0.71645,0.6268,0.7183,0.6202,0.7483,0.61025,0.82375,0.62665,0.84155,0.60325,0.8037,0.60995,0.78885,0.6166,0.7924,0.6254,0.79545,0.56885,0.78305,0.58185,0.73055,0.5697,0.7337,0.5586,0.7166,0.57205,0.69655,0.8781,0.6907,0.8671,0.6697,0.88105,0.6601,0.8881,0.69015,0.72625,0.77025,0.73565,0.75025,0.74345,0.7561,0.7399,0.79235,0.73725,0.80245,0.72875,0.8002,0.72955,0.7904,0.7243,0.9195,0.74995,0.9198,0.74985,0.98035,0.71475,0.9624,0.57995,0.9582,0.55275,0.93335,0.537,0.9107,0.6889,0.76495,0.68815,0.7711,0.71445,0.79585,0.7042,0.8022,0.6899,0.803,0.67855,0.79925,0.67195,0.79575,0.67875,0.80465,0.6607,0.7853,0.6642,0.78635,0.6675,0.79795,0.7499,0.6536,0.7244,0.6797,0.7345,0.6819,0.74355,0.6828,0.7139,0.6818,0.71145,0.6819,0.71145,0.68325,0.71005,0.68335,0.6317,0.69915,0.70035,0.71355,0.73495,0.6216,0.6629,0.9714,0.7307,0.7801,0.71715,0.7765,0.6267,0.69525,0.61965,0.69315,0.7474,0.7028,0.7499,0.7024,0.7503,0.70715,0.6862,0.9977,0.62025,0.98625,0.61685,0.9678,0.7433,0.71845,0.74325,0.71845,0.74345,0.71855,0.7446,0.7174,0.7433,0.71815,0.74325,0.71835,0.7142,0.6895,0.7499,0.69945,0.7145,0.72005,0.7123,0.73165,0.7236,0.79635,0.71925,0.79335,0.6889,0.8079,0.6859,0.81225,0.67535,0.8076,0.71305,0.77905,0.70025,0.7743,0.68815,0.79415,0.70095,0.79435,0.7132,0.78355,0.7163,0.7807,0.7075,0.79,0.67385,0.78405,0.678,0.7892,0.6795,0.7755,0.67475,0.77985,0.71695,0.77975,0.68825,0.7726,0.7159,0.77875,0.673,0.7827,0.63085,0.77655,0.6131,0.771,0.61895,0.77385,0.71605,0.68235,0.72325,0.68885,0.7122,0.6863,0.8945,0.5597,0.89995,0.563,0.8998,0.5566,0.8949,0.55525,0.9032,0.56085,0.90375,0.5557,0.8914,0.5591,0.89035,0.5561,0.70975,0.68695,0.7468,0.67845,0.7497,0.67835,0.74985,0.6901,0.746,0.68995,0.89,0.5509,0.88375,0.5571,0.8879,0.5566,0.8932,0.5567,0.89245,0.56515,0.8993,0.5708,0.8867,0.56575,0.8886,0.5586,0.8758,0.5571,0.88105,0.5268,0.89285,0.5445,0.89845,0.58095,0.8909,0.5813,0.88115,0.57485,0.90375,0.54135,0.90625,0.54115,0.90625,0.51365,0.8683,0.5537,0.86595,0.53335,0.88725,0.59175,0.8793,0.5877,0.8741,0.5797,0.98085,0.5509,0.9879,0.5537,0.98375,0.53335,0.97295,0.53815,0.9952,0.59175,0.99475,0.5877,0.97215,0.58345,0.99355,0.5797,0.9828,0.5693,0.95915,0.5199,0.95985,0.53245,0.97305,0.5549,0.96375,0.5439,0.9676,0.56915,0.97265,0.56195,0.95915,0.5414,0.71645,0.67955,0.7135,0.6742,0.75075,0.7243,0.75075,0.7291,0.60675,0.7617,0.6069,0.7735,0.60295,0.76295,0.6049,0.7527,0.60135,0.75425,0.5912,0.80055,0.6014,0.79555,0.5821,0.79645,0.58885,0.80125,0.61175,0.71675,0.60895,0.69395,0.6025,0.71875,0.74985,0.75765,0.5589,0.73785,0.5487,0.7362,0.5478,0.7078,0.5392,0.7215,0.5729,0.7607,0.56205,0.76155,0.5506,0.7645,0.54,0.7602,0.5254,0.74915,0.71385,0.78075,0.7499,0.60185,0.7499,0.61915,0.7405,0.7785,0.74985,0.78015,0.74985,0.79295,0.73845,0.82205,0.7362,0.81135,0.7505,0.80395,0.75055,0.81205,0.7346,0.6899,0.89945,0.5563,0.75055,0.82305,0.60785,0.74145,0.6075,0.7261,0.5978,0.7285,0.60375,0.74795,0.5988,0.74985,0.6076,0.788,0.57695,0.78105,0.5901,0.745,0.583,0.7504,0.5777,0.7692,0.9051,0.5572,0.7472,0.67385,0.71965,0.7319,0.74545,0.7188,0.74675,0.71905,0.7456,0.71685,0.7468,0.7147,0.748,0.71415,0.74565,0.7181,0.74485,0.7182,0.74945,0.71805,0.7435,0.71845,0.74345,0.7183,0.75075,0.7181,0.75075,0.72175,0.90625,0.59485,0.90625,0.5798,0.95915,0.5874,0.95915,0.5953,0.7499,0.65925,0.7499,0.66555,0.75,0.66985,0.90625,0.5601,0.90625,0.5549,0.90625,0.5693,0.88795,0.55645,0.5103,0.8662,0.5521,0.6957,0.74985,0.67375,0.90625,0.5564,0.8657,0.52095,0.95915,0.57405,0.74985,0.6827,0.74985,0.57725,0.73205,0.724,0.7217,0.7209,0.7155,0.712,0.70805,0.7793,0.69945,0.77545,0.68825,0.79265,0.6998,0.79325,0.7059,0.7897,0.67535,0.7833,0.6792,0.78875,0.67975,0.7767,0.6756,0.7802,0.6882,0.77385,0.6748,0.78185,0.7093,0.7843,0.7091,0.78205,0.60455,0.6205,0.60665,0.62345,0.61545,0.61905,0.6187,0.61145,0.63005,0.61635,0.6291,0.60565,0.6438,0.5876,0.63695,0.59205,0.55425,0.6744,0.55255,0.6714,0.54425,0.6767,0.5454,0.68,0.51375,0.6625,0.51405,0.6564,0.51115,0.6565,0.51145,0.665,0.52235,0.6776,0.52225,0.67405,0.5162,0.64845,0.5122,0.6501,0.52375,0.63765,0.52945,0.62685,0.5275,0.62555,0.5185,0.64015,0.60615,0.6088,0.5939,0.6039,0.5997,0.62045,0.5468,0.60895,0.54685,0.6065,0.5713,0.6027,0.56925,0.6003,0.5619,0.66005,0.55935,0.66005,0.55785,0.6652,0.5604,0.66735,0.5615,0.6526,0.55995,0.6529,0.55735,0.64465,0.55965,0.64265,0.5527,0.636,0.5508,0.6383,0.5817,0.61785,0.5817,0.62075,0.5841,0.60855,0.57845,0.6086,0.56635,0.62145,0.54945,0.61595,0.552,0.6243,0.5406,0.6211,0.538,0.6365,0.52885,0.6336,0.5798,0.64645,0.57735,0.6498,0.579,0.65395,0.58615,0.65305,0.5599,0.68335,0.552,0.68825,0.5523,0.69245,0.5616,0.6898,0.5175,0.68395,0.50755,0.67,0.50235,0.6702,0.51795,0.6872,0.5064,0.6586,0.50075,0.6564,0.50645,0.64995,0.50115,0.64795,0.5091,0.63305,0.51365,0.6367,0.52365,0.62185,0.51985,0.6187,0.5439,0.60185,0.5404,0.59715,0.56765,0.59305,0.5661,0.58925,0.59885,0.58395,0.62295,0.58825,0.61585,0.5854,0.5987,0.58055,0.52925,0.67825,0.53115,0.68355,0.5373,0.6843,0.5413,0.6793,0.5269,0.6357,0.53515,0.6244,0.52295,0.6356,0.59765,0.62045,0.5981,0.6132,0.5855,0.6238,0.58955,0.62795,0.54855,0.6138,0.54805,0.60995,0.5794,0.60565,0.58055,0.5999,0.62365,0.5893,0.60035,0.5872,0.5696,0.67395,0.57615,0.65785,0.5644,0.65905,0.5611,0.6717,0.56395,0.6512,0.5721,0.64975,0.54565,0.63825,0.5551,0.643,0.5481,0.6321,0.5637,0.63825,0.5603,0.6265,0.5349,0.6748,0.54535,0.67235,0.56165,0.6185,0.5756,0.60755,0.54875,0.62345,0.53855,0.63075,0.5183,0.6445,0.5168,0.6653,0.52275,0.65665,0.5255,0.64385,0.5954,0.63665,0.5922,0.6353,0.58885,0.63525,0.58545,0.63925,0.59345,0.64415,0.55485,0.66385,0.5723,0.67905,0.58735,0.66245,0.5975,0.64685,0.5917,0.6329,0.5866,0.63555,0.58195,0.63855,0.5768,0.643,0.60055,0.62455,0.6022,0.62995,0.5861,0.60645,0.5972,0.61985,0.57595,0.6266,0.5995,0.6762,0.6019,0.66375,0.59415,0.6727,0.59665,0.6791,0.5647,0.6447,0.56595,0.63955,0.56345,0.6356,0.5596,0.63855,0.57225,0.62835,0.57365,0.63335,0.5757,0.6282,0.57935,0.6334,0.57815,0.64635,0.58035,0.6475,0.5814,0.6512,0.5789,0.6496,0.5749,0.6395,0.5745,0.63975,0.5789,0.6334,0.5787,0.6323,0.5822,0.63085,0.58245,0.62955,0.58495,0.6469,0.5886,0.6354,0.59125,0.6368,0.5865,0.65275,0.5914,0.63215,0.591,0.6323,0.5895,0.6292,0.5859,0.6289,0.58535,0.63015,0.58845,0.63065,0.57135,0.6457,0.57785,0.64855,0.57945,0.64145,0.5806,0.63625,0.53165,0.65515,0.5329,0.6507,0.5824,0.59615,0.5811,0.589,0.5812,0.58495,0.57215,0.64545,0.55005,0.6721,0.54655,0.66425,0.5394,0.64925,0.5402,0.6457,0.53755,0.64475,0.546,0.64645,0.5408,0.65275,0.54385,0.65245,0.5498,0.66295,0.5544,0.6747,0.55675,0.6744,0.51315,0.6587,0.5131,0.6643,0.5165,0.64485,0.55525,0.67685,0.5939,0.5929,0.54655,0.67985,0.5478,0.68175,0.53485,0.6816,0.53525,0.6782,0.53585,0.6907,0.53635,0.6961,0.53995,0.6826,0.54855,0.68095,0.54685,0.7117,0.54135,0.70925,0.5404,0.72295,0.5459,0.7225,0.5507,0.7203,0.5515,0.7103,0.5584,0.71785,0.55815,0.70985,0.56305,0.7072,0.56565,0.7139,0.5749,0.70705,0.57015,0.70295,0.5375,0.70635,0.53295,0.71895,0.53475,0.70405,0.5279,0.7114,0.5466,0.7033,0.54015,0.7052,0.55715,0.7001,0.5633,0.69605,0.57965,0.6896,0.5739,0.68555,0.58,0.682,0.58945,0.68325,0.59385,0.6878,0.58185,0.6978,0.57675,0.64655,0.57185,0.64345,0.5694,0.64345,0.5875,0.6243,0.5932,0.608,0.51195,0.66405,0.51635,0.6781,0.51645,0.6807,0.58725,0.693,0.541,0.70195,0.55575,0.6938,0.78985,0.74145,0.79535,0.75775,0.78155,0.76255,0.77715,0.7431,0.92275,0.6911,0.93515,0.71545,0.9229,0.70925,0.90855,0.6804,0.9422,0.78565,0.9553,0.7875,0.9531,0.8244,0.93955,0.83115,0.95165,0.8551,0.93605,0.86685,0.91395,0.88235,0.9138,0.84705,0.8766,0.8781,0.87435,0.9015,0.83875,0.8609,0.84065,0.88475,0.825,0.89155,0.8192,0.86855,0.798,0.87355,0.8037,0.89595,0.7781,0.899,0.772,0.87895,0.8406,0.9089,0.8062,0.9151,0.8296,0.8161,0.83365,0.83835,0.8181,0.8453,0.81855,0.81815,0.7909,0.8502,0.77765,0.60755,0.7811,0.58175,0.82585,0.59365,0.812,0.6388,0.8607,0.678,0.85745,0.6914,0.83945,0.6787,0.84135,0.66175,0.812,0.6682,0.7938,0.6636,0.78325,0.64925,0.8119,0.6534,0.77875,0.63675,0.7636,0.6413,0.7654,0.6477,0.79065,0.6708,0.77505,0.66115,0.7668,0.6545,0.8016,0.68285,0.81795,0.6987,0.8602,0.72015,0.84235,0.70555,0.84045,0.74915,0.84355,0.7302,0.86195,0.75225,0.85525,0.77405,0.8445,0.80835,0.856,0.809,0.8375,0.80165,0.82525,0.7368,0.8088,0.73845,0.80545,0.726,0.82345,0.7205,0.7989,0.7725,0.78595,0.7773,0.785,0.77055,0.7971,0.7662,0.82775,0.78335,0.82545,0.7791,0.82965,0.7773,0.83135,0.7857,0.82505,0.76065,0.8104,0.7554,0.798,0.79595,0.8126,0.7965,0.81005,0.8018,0.79665,0.8003,0.7809,0.78165,0.78465,0.7852,0.781,0.78985,0.7752,0.7862,0.7916,0.7913,0.7861,0.79445,0.7788,0.8122,0.78305,0.8034,0.7947,0.80775,0.79625,0.81245,0.7558,0.73805,0.7548,0.7324,0.7598,0.7303,0.7659,0.7344,0.77315,0.727,0.7747,0.72885,0.7728,0.73165,0.77025,0.72965,0.7956,0.8202,0.7679,0.8444,0.7772,0.82165,0.7575,0.72595,0.7537,0.7283,0.75455,0.7228,0.7523,0.72455,0.7523,0.7216,0.75535,0.7209,0.766,0.73155,0.761,0.72465,0.76225,0.7295,0.75745,0.72235,0.76,0.72185,0.7951,0.67995,0.80055,0.69725,0.79205,0.6909,0.7723,0.71455,0.76245,0.71155,0.7652,0.70575,0.77595,0.71075,0.82285,0.79075,0.82675,0.78545,0.82745,0.7921,0.82175,0.79705,0.8207,0.77435,0.82325,0.7699,0.7627,0.666,0.76175,0.65935,0.774,0.66675,0.8342,0.7721,0.846,0.64625,0.7739,0.7787,0.7801,0.7785,0.8563,0.62155,0.77305,0.67265,0.7617,0.6711,0.76145,0.6742,0.77225,0.6778,0.7724,0.68025,0.7602,0.6792,0.7527,0.71055,0.75245,0.70725,0.7549,0.7073,0.7565,0.71085,0.77585,0.6947,0.7659,0.69815,0.7574,0.6999,0.79145,0.6857,0.79285,0.6806,0.7877,0.68435,0.7911,0.68425,0.7876,0.68695,0.77515,0.6917,0.7653,0.6951,0.76405,0.6868,0.7741,0.6855,0.75765,0.6968,0.755,0.68695,0.77355,0.7216,0.7694,0.71485,0.775,0.7222,0.7626,0.7171,0.75875,0.7148,0.76185,0.7132,0.75635,0.7121,0.75255,0.7127,0.75655,0.7195,0.7575,0.72115,0.7619,0.71975,0.7668,0.72055,0.7593,0.72,0.76005,0.7189,0.76,0.7179,0.75865,0.7168,0.9467,0.7159,0.93295,0.69265,0.9746,0.81905,0.9679,0.78375,0.98425,0.78025,0.99655,0.81655,0.849,0.9232,0.8711,0.9197,0.90765,0.9076,0.9518,0.87335,0.93235,0.8913,0.83025,0.93745,0.9574,0.8836,0.93515,0.91165,0.9101,0.9294,0.8635,0.9402,0.966,0.8567,0.91185,0.816,0.92925,0.80735,0.8872,0.7453,0.87975,0.7482,0.87275,0.7177,0.8801,0.71575,0.8735,0.84155,0.88995,0.8237,0.8969,0.8037,0.8835,0.7924,0.89015,0.78885,0.8747,0.79545,0.9319,0.78295,0.91885,0.7291,0.9088,0.69995,0.9325,0.73265,0.89585,0.66665,0.7735,0.77025,0.7563,0.7561,0.7641,0.75025,0.77105,0.80025,0.7638,0.80245,0.75985,0.79235,0.7702,0.7904,0.77555,0.9195,0.78515,0.9624,0.9558,0.9326,0.9222,0.9605,0.97125,0.90735,0.8117,0.77115,0.81095,0.76495,0.79565,0.80225,0.78535,0.7959,0.81015,0.80335,0.82145,0.79955,0.828,0.79595,0.8212,0.80495,0.83245,0.7981,0.83575,0.78645,0.83925,0.78535,0.76525,0.6819,0.77335,0.6818,0.7562,0.6828,0.78775,0.68205,0.7902,0.6835,0.7902,0.68215,0.7916,0.68355,0.86725,0.69805,0.7995,0.71355,0.7648,0.6216,0.83755,0.97135,0.76905,0.7801,0.78265,0.7765,0.8718,0.69365,0.75235,0.7028,0.88325,0.96895,0.8784,0.98795,0.81455,0.9971,0.7583,0.71845,0.75825,0.71845,0.7581,0.71855,0.7582,0.71815,0.7569,0.7174,0.75825,0.71835,0.78745,0.6897,0.7875,0.73165,0.7853,0.72,0.78055,0.79335,0.7762,0.79635,0.81105,0.80815,0.81405,0.81245,0.82455,0.8078,0.7996,0.7743,0.7867,0.77905,0.7989,0.79435,0.8121,0.7948,0.78345,0.7807,0.7866,0.78355,0.7923,0.79,0.82205,0.78975,0.8261,0.78415,0.82515,0.7799,0.8204,0.7755,0.78285,0.77975,0.8116,0.7726,0.78385,0.77875,0.8269,0.78275,0.86915,0.77655,0.88695,0.77095,0.8811,0.77385,0.7856,0.6826,0.78945,0.68655,0.7766,0.68885,0.8943,0.5602,0.8947,0.55545,0.8996,0.5569,0.89975,0.56375,0.9035,0.5559,0.90295,0.5614,0.89125,0.55955,0.8902,0.55635,0.7919,0.6872,0.7526,0.67845,0.75375,0.68995,0.88985,0.55085,0.893,0.55695,0.8878,0.5569,0.8836,0.55745,0.8923,0.56595,0.8991,0.572,0.88845,0.559,0.88655,0.5666,0.8927,0.544,0.881,0.52515,0.87575,0.55745,0.89825,0.5828,0.89075,0.58315,0.8811,0.57635,0.906,0.5112,0.906,0.54045,0.9035,0.54065,0.8683,0.55385,0.86595,0.53215,0.88715,0.5943,0.87925,0.59,0.87405,0.5815,0.984,0.52995,0.98815,0.55165,0.98115,0.54865,0.9733,0.5351,0.9954,0.5921,0.9725,0.5833,0.995,0.58785,0.9938,0.5793,0.9831,0.56825,0.9596,0.5156,0.9603,0.529,0.97345,0.5529,0.9642,0.5412,0.968,0.56805,0.973,0.5604,0.9596,0.5385,0.7852,0.6798,0.788,0.675,0.8932,0.7735,0.89335,0.76165,0.8972,0.76295,0.8952,0.7527,0.89875,0.75425,0.90895,0.80055,0.89875,0.79555,0.91135,0.80125,0.9181,0.79645,0.8877,0.71595,0.89695,0.71775,0.94455,0.7371,0.95575,0.73585,0.9599,0.71,0.9685,0.72375,0.9396,0.76115,0.92785,0.76045,0.9519,0.76405,0.96315,0.75955,0.97505,0.7454,0.78595,0.78075,0.75925,0.7785,0.76265,0.82205,0.76485,0.81135,0.7652,0.6899,0.8992,0.5566,0.8926,0.7261,0.8923,0.74145,0.90235,0.7285,0.8964,0.74795,0.90135,0.74985,0.8925,0.788,0.92325,0.78105,0.9101,0.745,0.91715,0.7504,0.9225,0.7692,0.90485,0.5575,0.7525,0.67385,0.78015,0.7319,0.7548,0.71905,0.75605,0.7188,0.7535,0.71415,0.7547,0.7147,0.7559,0.71685,0.75585,0.7181,0.75665,0.7182,0.75205,0.71805,0.758,0.71845,0.7581,0.7183,0.906,0.5976,0.906,0.5816,0.9596,0.5959,0.9596,0.5875,0.7501,0.66985,0.906,0.5551,0.906,0.5606,0.906,0.5704,0.88785,0.55675,0.99805,0.8628,0.9528,0.69525,0.906,0.5567,0.86575,0.51895,0.9596,0.5733,0.7695,0.724,0.7781,0.7209,0.7843,0.712,0.8004,0.77545,0.79175,0.7793,0.80005,0.79325,0.8121,0.79335,0.7939,0.7897,0.82095,0.7895,0.82455,0.7833,0.82425,0.7802,0.8201,0.7767,0.81165,0.77385,0.8251,0.78185,0.7907,0.78205,0.7905,0.7843,0.705,0.7873,0.7031,0.78665,0.69645,0.78725,0.6972,0.788,0.6873,0.7773,0.688,0.7781,0.69655,0.77815,0.69735,0.77735,0.70275,0.77985,0.7012,0.7803,0.6785,0.78245,0.6805,0.7825,0.68295,0.78035,0.6814,0.7799,0.67855,0.7841,0.68135,0.7859,0.6829,0.78545,0.6805,0.7839,0.6875,0.7885,0.6882,0.78765,0.6782,0.7832,0.68025,0.78315,0.70585,0.7843,0.7059,0.7829,0.70385,0.7829,0.70385,0.7841,0.7947,0.78785,0.8025,0.7885,0.80355,0.7875,0.7973,0.78695,0.8125,0.7778,0.8024,0.77785,0.80345,0.77895,0.81155,0.7789,0.79695,0.78035,0.7991,0.78095,0.8213,0.78295,0.8184,0.7804,0.81625,0.781,0.8186,0.78305,0.82125,0.7846,0.81855,0.7844,0.8163,0.78585,0.81845,0.78645,0.81135,0.7879,0.81225,0.789,0.8216,0.7837,0.81885,0.78365,0.79385,0.7848,0.7966,0.78455,0.7966,0.7834,0.7938,0.7834,0.802754,0.273678,0.746834,0.25192,0.806435,0.250717,0.86171,0.29682,0.868951,0.24947,0.801745,0.227938,0.859774,0.202307,0.788494,0.208554,0.832628,0.161766,0.768607,0.1957,0.790983,0.136379,0.745332,0.192066,0.743506,0.129185,0.72233,0.196917,0.696027,0.13847,0.703387,0.210824,0.656706,0.167396,0.690738,0.230522,0.63132,0.208745,0.686644,0.253647,0.623807,0.256128,0.692326,0.276389,0.635115,0.302588,0.705667,0.295571,0.663008,0.341187,0.725621,0.307685,0.703328,0.365877,0.7485,0.311273,0.749927,0.373277,0.770823,0.305932,0.795491,0.362198,0.78989,0.293072,0.834821,0.336362]]\n};"
			},
			{
				"name": "hfBodyLoader.js",
				"source": "female = {};\t//\timportant!\n\n\tvar json = hfBody;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFBody_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n\tvar map = textureLoader.load(\"https://i.imgur.com/nUWcc7I.jpg\");\n\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/Fpr7OSs.jpg\");\n\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/nUWcc7I.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/VGW8BZ2.jpg\");\n//\tvar url = \"/skinned/rlc/RLC_SDK_HFBody_v6.json\";\n//\tvar loader = new THREE.XHRLoader();\n//\tloader.setResponseType( \"json\" );\n//\tloader.load(url, function( json ){\n//\tdebugMode && console.log( json );\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FemaleBodyMaterial\",\n\t\tmap: map,\n\t\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(1,1,1),\n\t\tskinning: true,\t//\timportant!\n\t});\n\n/*\n\tvar material;\n\tfor (var i = 0; i < object.materials.length; i++ ){\n\t\tobject.materials[i].skinning = true; // important!\n\t}\n\n\tif ( object.materials.length > 1 ) {\n\t\tmaterial = new THREE.MultiMaterial(object.materials);\n\t} else if ( object.materials.length == 1 ) {\n\t\tmaterial = object.materials[0];\n\t} \n*/\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.body = skinned;\n\t\n\tlocalPlayer.outfit.setGender(\"female\");\n\tlocalPlayer.outfit.add({\"body\":female.body});\n\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n//\t});\n\n"
			}],
		"E6A25D04-08FC-473B-AF43-0CE1C1E64A70": [
			{
				"name": "hfFemaleHairs.js",
				"source": "//\tRLC_SDK_HFHairs_v6.json\n\nhfHairs = {\n    \"bones\": [{\n        \"name\": \"Genitals\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": -1,\n        \"pos\": [-2.7e-05,15.0028,0.169405]\n    },{\n        \"name\": \"1.Hips\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 0,\n        \"pos\": [2.7e-05,0.144162,0.321899]\n    },{\n        \"name\": \"2.LowerBack\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 1,\n        \"pos\": [-0,2.30816,-0.491099]\n    },{\n        \"name\": \"3.Spine\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 2,\n        \"pos\": [0.008712,3.25595,0.069768]\n    },{\n        \"name\": \"4.Chest\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 3,\n        \"pos\": [-0.072112,1.56253,0.174991]\n    },{\n        \"name\": \"5.Neck\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 4,\n        \"pos\": [0.063054,2.16348,-0.12585]\n    },{\n        \"name\": \"6.Head\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 5,\n        \"pos\": [-0.023034,1.46401,0.411038]\n    },{\n        \"name\": \"7.LeftScapula\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 4,\n        \"pos\": [0.063054,2.16348,-0.12585]\n    },{\n        \"name\": \"8.LeftArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 7,\n        \"pos\": [2.52983,-0.937077,-0.361347]\n    },{\n        \"name\": \"9.LeftForeArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 8,\n        \"pos\": [3.19505,-2.63784,0.444198]\n    },{\n        \"name\": \"10.LeftHand\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 9,\n        \"pos\": [3.19611,-2.32051,1.02422]\n    },{\n        \"name\": \"11.LeftHandFinger\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 10,\n        \"pos\": [1.0844,-0.702997,0.311596]\n    },{\n        \"name\": \"12.LeftHandFinger1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 11,\n        \"pos\": [0.476265,-0.405676,0.16763]\n    },{\n        \"name\": \"13.LeftHandFinger2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 12,\n        \"pos\": [0.366805,-0.348112,0.094266]\n    },{\n        \"name\": \"14.LeftThumbBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 10,\n        \"pos\": [1.0844,-0.702997,0.311596]\n    },{\n        \"name\": \"15.LeftThumb\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 14,\n        \"pos\": [-1.1345,0.465408,0.302213]\n    },{\n        \"name\": \"16.LeftThumb1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 15,\n        \"pos\": [0.180056,-0.478939,0.60054]\n    },{\n        \"name\": \"17.LeftThumb2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 16,\n        \"pos\": [0.092886,-0.289543,0.386178]\n    },{\n        \"name\": \"18.RightScapula\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 4,\n        \"pos\": [0.063054,2.16348,-0.12585]\n    },{\n        \"name\": \"19.RightArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 18,\n        \"pos\": [-2.52867,-0.937096,-0.361214]\n    },{\n        \"name\": \"20.RightForeArm\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 19,\n        \"pos\": [-3.19598,-2.63734,0.444101]\n    },{\n        \"name\": \"21.RightHand\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 20,\n        \"pos\": [-3.196,-2.32064,1.032]\n    },{\n        \"name\": \"22.RightHandFinger\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 21,\n        \"pos\": [-1.14875,-0.745953,0.339327]\n    },{\n        \"name\": \"23.RightHandFinger1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 22,\n        \"pos\": [-0.499381,-0.387148,0.109694]\n    },{\n        \"name\": \"24.RightHandFinger2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 23,\n        \"pos\": [-0.373054,-0.338717,0.107148]\n    },{\n        \"name\": \"25.RightThumbBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 21,\n        \"pos\": [-1.14875,-0.745953,0.339327]\n    },{\n        \"name\": \"26.RightThumb\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 25,\n        \"pos\": [1.19745,0.436272,0.257659]\n    },{\n        \"name\": \"27.RightThumb1\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 26,\n        \"pos\": [-0.176136,-0.458651,0.585481]\n    },{\n        \"name\": \"28.RightThumb2\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 27,\n        \"pos\": [-0.070728,-0.239492,0.362029]\n    },{\n        \"name\": \"29.LeftBoob\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 3,\n        \"pos\": [-0.072112,1.56253,0.174991]\n    },{\n        \"name\": \"30.LeftBoobBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 29,\n        \"pos\": [1.79366,0.798965,-0.440115]\n    },{\n        \"name\": \"31.RightBoob\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 3,\n        \"pos\": [-0.072112,1.56253,0.174991]\n    },{\n        \"name\": \"32.RightBoobBone\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 31,\n        \"pos\": [-1.73021,0.798965,-0.440115]\n    },{\n        \"name\": \"33.RightHip\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 1,\n        \"pos\": [-0,2.30816,-0.491099]\n    },{\n        \"name\": \"34.RightButt\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 33,\n        \"pos\": [-1.43938,-1.60251,0.041129]\n    },{\n        \"name\": \"35.RightUpLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 33,\n        \"pos\": [-1.43938,-1.60251,0.041129]\n    },{\n        \"name\": \"36.RightLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 35,\n        \"pos\": [-0.851619,-7.12582,-0.664236]\n    },{\n        \"name\": \"37.RightFoot\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 36,\n        \"pos\": [-0.7531,-6.81598,-0.370799]\n    },{\n        \"name\": \"38.RightToeBase\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 37,\n        \"pos\": [-0.3779,-2.27964,0.987525]\n    },{\n        \"name\": \"39.LeftHip\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 1,\n        \"pos\": [-0,2.30816,-0.491099]\n    },{\n        \"name\": \"40.LeftButt\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 39,\n        \"pos\": [1.439,-1.60251,0.04113]\n    },{\n        \"name\": \"41.LeftUpLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 39,\n        \"pos\": [1.439,-1.60251,0.04113]\n    },{\n        \"name\": \"42.LeftLeg\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 41,\n        \"pos\": [0.852048,-7.1256,-0.664335]\n    },{\n        \"name\": \"43.LeftFoot\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 42,\n        \"pos\": [0.753052,-6.8162,-0.3707]\n    },{\n        \"name\": \"44.LeftToeBase\",\n        \"rotq\": [0,0,0,1],\n        \"parent\": 43,\n        \"pos\": [0.377549,-2.27926,0.988361]\n    }],\n    \"name\": \"rlc_female_hairsGeometry.v6\",\n    \"influencesPerVertex\": 4,\n    \"metadata\": {\n        \"materials\": 1,\n        \"bones\": 45,\n        \"vertices\": 292,\n        \"generator\": \"io_three\",\n        \"version\": 3,\n        \"type\": \"Geometry\",\n        \"faces\": 379,\n        \"uvs\": 1\n    },\n    \"materials\": [{\n        \"colorSpecular\": [0.5,0.5,0.5],\n        \"visible\": true,\n        \"colorEmissive\": [0,0,0],\n        \"DbgColor\": 15658734,\n        \"transparent\": false,\n        \"DbgName\": \"HFHairsMaterial\",\n        \"depthTest\": true,\n        \"depthWrite\": true,\n        \"opacity\": 1,\n        \"shading\": \"standard\",\n        \"blending\": \"NormalBlending\",\n        \"wireframe\": false,\n        \"colorDiffuse\": [1,1,1],\n        \"DbgIndex\": 0,\n        \"specularCoef\": 50\n    }],\n    \"faces\": [10,75,76,77,0,0,1,2,10,210,211,212,0,3,4,5,10,221,222,223,0,6,7,8,10,275,276,277,0,9,10,11,10,3,39,38,0,12,13,14,10,0,2,1,0,15,16,17,10,2,23,1,0,16,18,17,10,3,40,42,0,12,19,20,10,22,2,5,0,21,16,22,10,2,0,5,0,16,15,22,10,19,29,4,0,23,24,25,10,30,22,6,0,26,21,27,10,22,5,6,0,21,22,27,10,12,7,29,0,28,29,24,10,7,4,29,0,29,25,24,10,14,30,15,0,30,26,31,10,30,6,15,0,26,27,31,10,35,8,9,0,32,33,34,10,8,20,9,0,33,35,34,10,9,20,10,0,34,35,36,10,20,16,10,0,35,37,36,10,18,11,12,0,38,39,28,10,11,7,12,0,39,29,28,10,17,14,13,0,40,30,41,10,14,15,13,0,30,31,41,10,16,21,18,0,37,42,38,10,21,11,18,0,42,39,38,10,10,17,27,0,36,40,43,10,17,13,27,0,40,41,43,10,17,18,14,0,40,38,30,10,18,12,14,0,38,28,30,10,30,29,22,0,26,24,21,10,29,19,22,0,24,23,21,10,20,28,16,0,35,44,37,10,28,21,16,0,44,42,37,10,2,22,25,0,16,21,45,10,22,19,25,0,21,23,45,10,23,2,24,0,18,16,46,10,2,25,24,0,16,45,46,10,37,26,35,0,47,48,32,10,26,8,35,0,48,33,32,10,10,16,17,0,36,37,40,10,16,18,17,0,37,38,40,10,9,10,31,0,34,36,49,10,10,27,31,0,36,43,49,10,8,34,20,0,33,50,35,10,34,28,20,0,50,44,35,10,14,12,30,0,30,28,26,10,12,29,30,0,28,24,26,10,35,9,36,0,32,34,51,10,9,31,36,0,34,49,51,10,8,26,32,0,33,48,52,10,26,33,32,0,48,53,52,10,34,8,32,0,50,33,52,10,37,35,41,0,47,32,54,10,35,36,41,0,32,51,54,10,26,37,38,0,48,47,14,10,37,40,38,0,47,19,14,10,33,26,39,0,53,48,13,10,26,38,39,0,48,14,13,10,37,41,40,0,47,54,19,10,41,42,40,0,54,20,19,10,3,38,40,0,12,14,19,10,43,44,48,0,55,56,57,10,44,46,48,0,56,58,57,10,44,45,46,0,56,59,58,10,45,47,46,0,60,61,62,10,46,47,48,0,62,61,57,10,47,49,48,0,61,63,57,10,48,49,53,0,57,63,64,10,49,79,53,0,63,65,64,10,65,114,285,0,66,67,68,10,114,113,285,0,67,69,68,10,101,51,61,0,70,71,72,10,51,62,61,0,71,73,72,10,63,62,50,0,74,73,75,10,62,51,50,0,73,71,75,10,52,43,53,0,76,55,64,10,43,48,53,0,55,57,64,10,55,56,52,0,77,78,76,10,56,54,52,0,78,79,76,10,53,55,52,0,64,77,76,10,54,56,74,0,79,78,80,10,56,291,74,0,78,81,80,10,74,291,270,0,80,81,82,10,291,57,270,0,81,83,82,10,289,58,72,0,84,85,86,10,58,59,72,0,85,87,86,10,286,60,271,0,88,89,90,10,60,67,271,0,89,91,90,10,67,60,62,0,91,89,73,10,60,61,62,0,89,72,73,10,67,62,64,0,91,73,92,10,62,63,64,0,73,74,92,10,70,65,287,0,93,66,94,10,65,285,287,0,66,68,94,10,64,66,67,0,92,95,91,10,66,271,67,0,95,90,91,10,287,69,68,0,94,96,97,10,69,288,68,0,96,98,97,10,70,287,68,0,93,94,97,10,59,71,72,0,87,99,86,10,71,272,72,0,99,100,86,10,288,290,73,0,98,101,102,10,290,77,73,0,101,2,102,10,68,288,73,0,97,98,102,10,273,74,270,0,103,80,82,10,76,73,77,0,1,102,2,10,75,55,76,0,0,77,1,10,55,78,76,0,77,104,1,10,55,53,78,0,77,64,104,10,53,79,78,0,64,65,104,10,93,80,91,0,105,106,107,10,80,277,91,0,106,11,107,10,277,81,91,0,11,108,107,10,81,90,91,0,108,109,107,10,90,81,83,0,109,108,110,10,81,82,83,0,108,111,110,10,84,282,86,0,112,113,114,10,282,85,86,0,113,115,114,10,284,278,85,0,116,117,115,10,278,86,85,0,117,114,115,10,87,88,284,0,118,119,116,10,88,278,284,0,119,117,116,10,51,89,50,0,120,121,122,10,89,280,50,0,121,123,122,10,281,63,280,0,124,125,123,10,63,50,280,0,125,122,123,10,90,98,91,0,109,126,107,10,98,92,91,0,126,127,107,10,100,93,92,0,128,105,127,10,93,91,92,0,105,107,127,10,83,94,90,0,110,129,109,10,94,98,90,0,129,126,109,10,99,95,96,0,130,131,132,10,96,97,99,0,133,134,130,10,94,95,98,0,129,131,126,10,95,99,98,0,131,130,126,10,100,92,99,0,128,127,130,10,92,98,99,0,127,126,130,10,97,100,99,0,134,128,130,10,89,51,283,0,121,120,135,10,51,101,283,0,120,136,135,10,102,115,103,0,137,138,139,10,115,106,103,0,138,140,139,10,105,106,104,0,141,140,142,10,106,115,104,0,140,138,142,10,106,105,109,0,140,141,143,10,105,108,109,0,141,144,143,10,103,106,107,0,139,140,145,10,106,109,107,0,140,143,145,10,109,108,111,0,143,144,146,10,108,112,111,0,144,147,146,10,107,109,110,0,145,143,148,10,109,111,110,0,143,146,148,10,111,112,113,0,146,147,149,10,112,101,113,0,147,150,149,10,110,111,114,0,148,146,151,10,111,113,114,0,146,149,151,10,104,115,123,0,142,138,152,10,115,122,123,0,138,153,152,10,115,102,122,0,138,137,153,10,102,116,122,0,137,154,153,10,117,124,118,0,155,156,157,10,124,121,118,0,156,158,157,10,124,119,121,0,156,159,158,10,119,120,121,0,159,160,158,10,118,121,116,0,157,158,154,10,121,122,116,0,158,153,154,10,121,120,122,0,158,160,153,10,120,123,122,0,160,152,153,10,119,124,125,0,159,156,161,10,117,125,124,0,155,161,156,10,137,138,126,0,162,163,164,10,138,128,126,0,163,165,164,10,126,144,137,0,164,166,162,10,144,129,137,0,166,167,162,10,131,127,138,0,168,169,163,10,127,128,138,0,169,165,163,10,129,130,137,0,167,170,162,10,130,134,137,0,170,171,162,10,131,138,132,0,168,163,172,10,138,149,132,0,163,173,172,10,130,133,134,0,170,174,171,10,133,140,134,0,174,175,171,10,132,149,135,0,172,173,176,10,149,136,135,0,173,177,176,10,137,134,138,0,162,171,163,10,134,149,138,0,171,173,163,10,133,139,140,0,174,178,175,10,139,155,140,0,178,179,175,10,141,135,156,0,180,176,181,10,135,136,156,0,176,177,181,10,142,147,162,0,182,183,184,10,143,144,146,0,185,166,186,10,144,126,146,0,166,164,186,10,150,128,152,0,187,165,188,10,128,127,152,0,165,169,188,10,146,126,150,0,186,164,187,10,126,128,150,0,164,165,187,10,153,145,146,0,189,190,186,10,145,143,146,0,190,185,186,10,142,158,147,0,182,191,183,10,140,155,136,0,175,179,177,10,155,156,136,0,179,181,177,10,141,156,148,0,180,181,192,10,156,157,148,0,181,193,192,10,134,140,149,0,171,175,173,10,140,136,149,0,175,177,173,10,154,150,151,0,194,187,195,10,150,152,151,0,187,188,195,10,153,146,154,0,189,186,194,10,146,150,154,0,186,187,194,10,160,155,161,0,196,179,197,10,155,139,161,0,179,178,197,10,156,155,157,0,181,179,193,10,155,160,157,0,179,196,193,10,159,158,142,0,198,191,182,10,158,159,157,0,191,198,193,10,159,148,157,0,198,192,193,10,157,160,158,0,193,196,191,10,160,147,158,0,196,183,191,10,160,161,147,0,196,197,183,10,161,162,147,0,197,184,183,10,167,184,171,0,199,200,201,10,184,163,171,0,200,202,201,10,181,178,164,0,203,204,205,10,178,165,164,0,204,206,205,10,170,166,180,0,207,208,209,10,166,163,180,0,208,202,209,10,178,184,165,0,204,200,206,10,184,167,165,0,200,199,206,10,177,181,168,0,210,203,211,10,181,164,168,0,203,205,211,10,169,174,170,0,212,213,207,10,174,166,170,0,213,208,207,10,163,166,171,0,202,208,201,10,166,187,171,0,208,214,201,10,168,176,177,0,211,215,210,10,172,173,174,0,216,217,213,10,173,186,174,0,217,218,213,10,172,174,175,0,216,213,219,10,174,169,175,0,213,212,219,10,176,182,177,0,215,220,210,10,185,178,179,0,221,204,222,10,178,181,179,0,204,203,222,10,183,180,184,0,223,209,200,10,180,163,184,0,209,202,200,10,179,181,182,0,222,203,220,10,181,177,182,0,203,210,220,10,183,184,185,0,223,200,221,10,184,178,185,0,200,204,221,10,166,174,187,0,208,213,214,10,174,186,187,0,213,218,214,10,197,190,188,0,224,225,226,10,190,189,188,0,225,227,226,10,189,190,191,0,227,225,228,10,193,196,192,0,229,230,231,10,196,198,192,0,230,232,231,10,193,194,196,0,229,233,230,10,194,195,196,0,233,234,230,10,195,191,196,0,234,228,230,10,191,190,196,0,228,225,230,10,197,198,190,0,224,232,225,10,198,196,190,0,232,230,225,10,199,194,200,0,235,233,236,10,194,193,200,0,233,229,236,10,193,192,200,0,229,231,236,10,192,201,200,0,231,237,236,10,202,203,209,0,238,239,240,10,203,204,209,0,239,241,240,10,205,204,203,0,242,241,239,10,215,208,210,0,243,244,3,10,208,206,210,0,244,245,3,10,210,206,211,0,3,245,4,10,206,207,211,0,245,246,4,10,206,204,207,0,245,241,246,10,204,205,207,0,241,242,246,10,204,206,209,0,241,245,240,10,206,208,209,0,245,244,240,10,213,210,212,0,247,3,5,10,213,214,210,0,247,248,3,10,214,215,210,0,248,243,3,10,216,217,221,0,249,250,6,10,217,222,221,0,250,7,6,10,218,219,220,0,251,252,253,10,219,223,220,0,252,8,253,10,219,221,223,0,252,6,8,10,224,227,225,0,254,255,256,10,225,227,226,0,256,255,257,10,228,229,230,0,258,259,260,10,230,229,231,0,260,259,261,10,230,231,226,0,260,261,257,10,226,231,225,0,257,261,256,10,235,238,232,0,57,262,55,10,232,238,239,0,55,262,263,10,233,235,232,0,264,57,55,10,234,235,233,0,265,57,264,10,236,238,234,0,266,262,265,10,234,238,235,0,265,262,57,10,253,237,236,0,267,268,266,10,236,237,238,0,266,268,262,10,238,237,239,0,262,268,263,10,239,237,240,0,263,268,76,10,237,252,240,0,268,269,76,10,240,252,241,0,76,269,79,10,252,242,241,0,269,270,79,10,241,242,243,0,79,270,80,10,242,244,243,0,270,271,80,10,243,244,245,0,80,271,82,10,244,247,245,0,271,272,82,10,245,247,246,0,82,272,273,10,248,247,249,0,274,272,275,10,249,247,244,0,275,272,271,10,249,244,250,0,275,271,276,10,250,244,242,0,276,271,270,10,251,250,252,0,277,276,269,10,252,250,242,0,269,276,270,10,253,251,237,0,267,277,268,10,237,251,252,0,268,277,269,10,256,254,258,0,278,279,280,10,258,254,260,0,280,279,281,10,258,255,256,0,280,282,278,10,256,255,257,0,278,282,283,10,261,259,258,0,284,285,280,10,258,259,255,0,280,285,282,10,267,261,260,0,286,284,281,10,260,261,258,0,281,284,280,10,266,263,265,0,287,288,289,10,265,263,262,0,289,288,290,10,268,266,264,0,291,287,292,10,264,266,265,0,292,287,289,10,261,267,266,0,284,286,287,10,266,267,263,0,287,286,288,10,259,261,268,0,285,284,291,10,268,261,266,0,291,284,287,10,265,269,264,0,289,293,292,10,269,265,262,0,293,289,290,10,289,72,57,0,84,86,83,10,72,270,57,0,86,82,83,10,286,271,58,0,88,90,85,10,271,59,58,0,90,87,85,10,271,66,59,0,90,95,87,10,66,71,59,0,95,99,87,10,72,272,270,0,86,100,82,10,272,273,270,0,100,103,82,10,81,274,82,0,108,294,111,10,274,279,82,0,294,295,111,10,277,276,81,0,11,10,108,10,276,274,81,0,10,294,108,10,80,275,277,0,106,9,11,10,86,276,84,0,114,10,112,10,276,275,84,0,10,9,112,10,278,274,86,0,117,294,114,10,274,276,86,0,294,10,114,10,88,279,278,0,119,295,117,10,279,274,278,0,295,294,117,10,280,85,281,0,123,115,124,10,85,282,281,0,115,113,124,10,89,284,280,0,121,116,123,10,284,85,280,0,116,115,123,10,283,87,89,0,135,118,121,10,87,284,89,0,118,116,121,10,61,285,101,0,72,68,70,10,285,113,101,0,68,69,70,10,61,60,285,0,72,89,68,10,60,287,285,0,89,94,68,10,60,286,287,0,89,88,94,10,286,69,287,0,88,96,94,10,58,288,286,0,85,98,88,10,288,69,286,0,98,96,88,10,58,289,288,0,85,84,98,10,289,290,288,0,84,101,98,10,57,77,289,0,83,2,84,10,77,290,289,0,2,101,84,10,291,75,57,0,81,0,83,10,75,77,57,0,0,2,83,10,56,55,291,0,78,77,81,10,55,75,291,0,77,0,81],\n    \"skinWeights\": [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n    \"vertices\": [0.594845,23.4459,-1.40249,0.57224,22.975,-1.36533,1.16581,23.7005,-1.16802,-0.09784,29.511,0.949749,1.86847,25.0094,-0.343367,0.48124,24.1694,-1.38526,0.3496,24.9932,-1.1944,1.75987,25.6976,0.089243,1.04198,29.193,0.056189,0.866845,28.4417,-0.594297,1.0018,27.6819,-0.762607,1.70049,26.4794,0.380988,1.65139,25.7699,-0.295297,0.12277,26.6871,-0.820017,1.1279,25.8722,-0.943437,0.243735,25.7548,-0.997067,1.48514,27.4689,-0.204752,1.11446,26.8339,-0.840897,1.57799,26.6615,-0.230792,1.75194,24.46,-0.768487,1.34418,28.33,-0.153362,1.65741,27.2575,0.533503,1.17381,24.4221,-1.07988,1.14084,23.1255,-1.08837,1.47009,23.4109,-1.25293,1.56328,23.8288,-1.02847,0.5766,29.6111,0.639389,0.05156,27.5361,-0.765022,1.51845,28.1627,0.715978,1.68417,24.9834,-0.656487,1.21925,25.14,-1.1204,-0.04722,28.3769,-0.626152,1.01284,29.3148,0.865689,0.55455,29.5883,0.996509,1.3426,28.9049,0.738438,0.65136,29.188,-0.346956,-0.190915,28.9284,-0.486781,0.36436,29.5529,0.311919,0.292505,29.6754,0.823504,0.361,29.5912,1.00598,0.12184,29.6499,0.657544,-0.135735,29.5318,0.000934,-0.028095,29.543,0.573259,1.53971,24.9793,0.269588,1.62197,24.3748,-0.621382,1.5309,23.6901,-1.25371,1.8424,24.5301,-0.734367,1.68905,24.6512,-0.800562,1.86665,25.2759,0.045508,1.68305,25.5388,-0.353642,-0.334535,28.8888,2.02548,-0.26522,29.1946,1.79747,1.42839,25.7006,0.977073,1.84431,25.93,0.488003,1.27419,26.4196,1.50285,1.7914,26.8296,0.975458,1.5479,26.6295,1.24824,1.24616,28.1319,2.02186,0.830235,28.8734,2.1311,0.649505,28.5377,2.39628,0.25264,29.294,2.14318,-0.109,29.3636,1.87307,-0.22356,29.0524,2.1806,-0.314135,28.647,2.14014,-0.16967,28.5717,2.20652,0.242135,29.6895,0.863254,0.192595,28.4186,2.22429,0.07208,28.9817,2.39048,1.01679,29.3148,0.865689,0.75177,29.2819,1.84299,0.55847,29.6298,0.913109,0.45074,28.2268,2.24206,0.840805,28.2531,2.3168,1.34461,28.9047,0.728639,1.10597,27.0638,1.85044,1.70607,27.5899,1.35397,1.6136,28.0085,0.431318,1.50659,28.4177,1.66215,1.64623,27.2338,0.196813,1.68439,26.4719,-0.065972,-0.977325,27.7515,1.67758,-1.38472,28.365,1.58672,-1.32671,28.7838,0.973818,-1.61006,28.1449,0.683828,-0.747065,28.3001,1.97958,-0.638965,28.7817,2.22026,-0.80637,28.6708,2.1893,-0.480485,29.4988,1.41547,-0.747965,29.4186,1.33965,-0.449655,29.162,2.00051,-1.59629,27.7054,1.20211,-1.36695,27.5413,1.48389,-1.53818,26.3641,0.915993,-1.10437,27.3772,1.45586,-1.85065,26.5863,0.128863,-1.89489,25.4117,-0.177777,-1.78937,24.2985,-0.690577,-1.4874,24.9755,-0.013482,-1.8194,26.5306,0.655673,-1.82405,25.1461,-0.097367,-1.31533,26.1854,0.882733,-0.188625,29.3866,1.48194,-1.48671,27.8337,-0.134332,-1.1908,28.8665,0.225723,-1.60012,27.5515,0.904798,-1.21715,28.6806,1.18682,-1.28825,28.8117,0.791729,-0.86064,29.4377,0.417024,-0.93664,29.194,1.40749,-0.909845,29.3823,0.951254,-0.399445,29.6531,0.564454,-0.437395,29.5997,1.11868,-0.493685,29.4227,1.52849,-0.162545,29.5418,1.23483,0.05777,29.5783,0.817884,-1.64694,27.6677,0.440133,-1.63636,26.6123,-0.469087,-1.56973,24.6449,-0.933917,-1.60552,25.1359,-0.819072,-1.78591,24.4692,-0.628392,-1.79017,25.1529,-0.123072,-1.84024,25.074,-0.547977,-1.72596,26.531,0.024923,-1.75297,26.4804,0.495333,-1.74266,24.5947,-0.881402,-1.61557,24.1466,-0.976037,-0.272565,25.4319,-1.24006,1.17347,25.1879,-1.09694,0.555045,25.4491,-1.33712,-0.96339,26.7077,-0.910637,-0.777525,28.0018,-0.779522,1.16009,27.0693,-0.814292,0.963515,28.4891,-0.549292,-0.696955,28.7706,-0.566122,-0.155215,28.1127,-1.0897,0.711185,29.1948,-0.359611,0.438185,29.0471,-0.596677,-0.243665,26.8756,-1.21935,0.55681,26.9504,-1.19125,-0.692635,29.1893,-0.266966,-0.20517,28.9779,-0.773942,0.610165,29.4219,0.033854,0.11705,29.4807,0.847344,-0.95541,23.8942,-1.1945,-1.11778,25.125,-1.14717,-0.85409,23.3248,-1.2605,-0.118185,23.887,-1.555,-0.12372,29.6066,0.558049,0.537445,29.6091,0.434594,0.549795,28.1968,-0.997677,0.572525,23.9025,-1.45987,1.18061,23.0404,-1.09685,1.23575,23.9198,-1.23751,0.01628,22.9952,-1.51701,0.559855,22.9485,-1.4286,-0.257295,29.4907,-0.290811,0.299675,29.5001,-0.173076,0.237795,29.6173,0.165269,0.200805,29.6158,0.548159,0.38951,29.5809,0.682699,-0.242725,29.6397,0.177569,-0.597695,29.4005,0.022619,-0.395025,29.4894,0.455654,-1.30296,26.6248,-0.771152,-0.855785,29.3272,0.972979,-1.19332,28.9001,0.772474,-1.30165,25.6532,-0.872987,-1.46319,28.0831,0.321998,-0.341795,29.5078,1.06655,-0.313285,24.7765,-1.24507,-0.18257,25.5136,-1.18226,-1.64445,27.0344,0.002753,-1.18552,23.6464,-1.14816,-1.59354,24.3176,-0.888977,-1.28694,24.7098,-1.07943,-0.58686,23.3412,-1.18217,0.119065,29.4781,0.858784,-0.26641,29.5871,0.505749,-0.98632,29.0587,-0.227026,-0.05218,29.3989,-0.233936,-0.050165,26.3844,-1.10253,-0.70317,29.4914,0.115894,0.000115,29.5241,0.358504,-0.140935,27.9701,-0.950262,-1.14464,28.0253,-0.590912,-0.09901,28.9057,-0.704091,-1.59214,24.9191,-0.836802,-1.70442,25.87,-0.285127,1.30822,24.3394,-0.475207,0.55439,24.7662,-0.509352,1.01791,25.8996,0.599028,0.55156,25.993,0.569898,1.48218,28.3684,0.772138,1.46989,28.1523,1.15751,1.13766,27.5195,1.21297,1.14596,26.7398,0.479353,1.16258,27.0992,1.00694,1.63312,25.8804,0.239258,1.64266,27.3132,0.561558,0.98674,28.1872,1.89232,1.19094,28.7351,1.59801,1.28106,28.9225,0.841409,-0.85673,23.2973,-1.12764,-0.412345,23.3373,-1.25045,-1.09964,24.6711,-0.852397,-0.600025,24.5597,-0.609022,-1.24598,25.6587,0.030923,-0.683925,25.2995,-0.389642,-1.2267,26.1659,-0.576677,-1.21516,24.5628,-0.970997,-1.17908,26.8264,0.402043,-0.583515,26.0699,0.191138,-0.820545,26.7842,1.01318,-0.923955,27.0165,0.824733,-0.7257,27.5939,0.219128,-1.04418,27.2446,-0.252562,-1.48562,24.567,-0.711527,-1.06054,24.632,-0.641172,-1.00422,28.5328,0.542708,-1.50674,26.9753,0.781308,-1.01404,27.8816,1.46285,-1.54198,25.7423,0.403788,-1.07939,25.5453,0.206178,-1.18186,26.6512,0.685383,1.53634,23.9989,-1.20649,1.6278,25.1203,0.134728,1.23465,25.0707,0.205673,1.37911,24.3163,-0.822197,1.07548,28.4953,1.67789,1.33769,28.6838,1.31428,1.13091,26.4297,0.928438,1.62887,26.4731,0.758908,1.58273,24.5585,-0.549777,1.47445,23.8816,-1.06501,1.64932,24.8342,-0.753182,1.78717,24.6926,-0.615822,1.6434,25.6522,-0.270837,1.79906,26.0221,0.526013,1.81793,25.4067,0.090908,1.5076,25.1225,0.320868,1.40521,25.8052,0.988243,1.25557,26.4832,1.48346,1.49714,27.5915,1.31838,1.13603,27.1213,1.8101,1.34404,28.3939,1.63199,1.00767,27.8874,2.12932,0.694805,28.5059,2.35619,0.997425,28.9428,1.8281,1.0238,29.1232,0.882974,1.34312,28.8462,0.753449,1.56916,28.0067,0.472443,1.61181,27.2544,0.250808,1.54695,26.8723,1.1132,1.64788,26.5343,0.002473,-1.14958,28.4277,0.236428,-1.56479,27.284,0.844843,-1.29896,28.4704,0.783053,-1.10996,28.2498,1.2876,-1.60673,27.3881,0.428523,-1.70175,26.3243,0.477963,-1.46324,27.5368,-0.086187,-1.67754,26.3696,0.056498,-1.52513,24.7103,-0.933157,-1.5661,25.1276,-0.742137,-1.72914,24.5244,-0.552977,-1.68798,24.6434,-0.804447,-1.77781,25.0674,-0.482447,-1.59726,26.4424,-0.386127,-1.7342,25.1351,-0.086892,-1.57664,24.2367,-0.861097,1.01005,27.9053,2.18438,0.390485,28.7961,2.40745,0.64785,28.0409,2.1807,0.826355,27.7856,2.11934,-1.05035,28.8927,1.95236,-0.85029,28.1257,1.89932,-0.973785,28.5092,2.08073,-1.17033,28.0253,1.78227,-0.85409,29.0475,2.03979,-0.99173,29.2524,1.26381,-0.48675,28.8452,2.1749,-0.47843,28.5316,2.09999,-0.64384,28.4162,2.05984,-0.307245,29.4427,1.4487,-0.63411,29.1066,2.08016,0.02647,29.5901,1.43253,0.571125,29.0999,2.16159,0.4332,29.4858,1.7033,0.951985,29.0861,1.81271,1.13005,28.4986,2.04036,1.27539,28.7449,1.76391,1.43655,27.3438,1.63401],\n    \"skinIndices\": [6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0],\n    \"uvs\": [[0.826719,0.580212,0.634819,0.574512,0.783919,0.683212,0.90019,0.730614,0.99449,0.709514,0.99699,0.942414,0.8062,0.332192,0.9911,0.366992,0.9914,0.598492,0.9933,0.8402,0.9403,0.8421,0.9339,0.739,0.8737,0.9874,0.7416,0.9697,0.8374,0.9739,0.9357,0.2545,0.7717,0.2638,0.9364,0.0124,0.7938,0.0132,0.8984,0.9728,0.9586,0.9722,0.7681,0.3539,0.9469,0.3479,0.6435,0.3623,0.6567,0.427,0.5491,0.4377,0.7951,0.4373,0.9882,0.4328,0.6581,0.5216,0.4975,0.531,0.8171,0.5297,0.9832,0.5098,0.9113,0.8598,0.7629,0.8654,0.8852,0.7954,0.7499,0.7905,0.8572,0.7158,0.7151,0.7033,0.659,0.6173,0.469,0.6233,0.8215,0.6318,0.9923,0.6068,0.4842,0.7083,0.9955,0.6925,0.5072,0.8065,0.6646,0.264,0.7103,0.014,0.9378,0.9229,0.7922,0.9347,1.0203,0.7834,0.5537,0.868,1.0458,0.8518,0.6049,0.9124,0.6509,0.9393,1.069,0.9217,0.989119,0.255412,0.989819,0.125712,0.870869,0.259812,0.910419,0.130912,0.969219,0.013312,0.842319,0.013312,0.764519,0.130612,0.887819,0.130912,0.731819,0.256512,0.850319,0.400312,0.696019,0.385712,0.590719,0.942812,0.594019,0.995012,0.743119,0.945512,0.730719,0.992112,0.781119,0.991512,0.831519,0.991012,0.821619,0.936912,0.900119,0.928412,0.984119,0.919312,0.912019,0.983812,0.991519,0.394812,0.849519,0.481712,0.919919,0.481712,0.991519,0.481612,0.991419,0.550712,0.908519,0.565412,0.930869,0.672812,0.874219,0.677212,0.851219,0.737012,0.841219,0.790012,0.929819,0.737712,0.921019,0.790512,0.837119,0.826312,0.833019,0.862612,0.918919,0.825812,0.916819,0.861212,0.990419,0.871012,0.593219,0.869912,0.749219,0.864012,0.990419,0.824612,0.755319,0.826712,0.601919,0.802512,0.761319,0.789512,0.990419,0.778212,0.990419,0.719312,0.772619,0.736312,0.607019,0.696512,0.990419,0.660412,0.664619,0.485812,0.9927,0.6362,0.993,0.7382,0.9276,0.6359,0.8774,0.7425,0.8624,0.6357,0.7442,0.6368,0.7544,0.741,0.9931,0.8912,0.9934,0.9422,0.946,0.8916,0.9473,0.9411,0.8909,0.94,0.8918,0.892,0.7623,0.9358,0.7634,0.8904,0.8395,0.9866,0.8754,0.9633,0.9415,0.9846,0.9466,0.9628,0.9939,0.964,0.9885,0.9858,0.8753,0.3842,0.9338,0.3874,0.9923,0.3906,0.7994,0.392,0.8937,0.1718,0.8448,0.1736,0.8956,0.0114,0.9571,0.0114,0.9922,0.17,0.7624,0.9605,0.7624,0.9853,0.109513,0.4993,0.218713,0.5073,0.105213,0.7223,0.215913,0.7344,0.310113,0.728,0.308213,0.5083,0.210213,0.8061,0.308213,0.8149,0.098913,0.8065,0.212313,0.8997,0.307813,0.9038,0.096813,0.8995,0.204413,0.9987,0.307813,0.9985,0.088213,0.9983,0.306213,0.2938,0.220813,0.3044,0.129113,0.3065,0.195513,0.0272,0.263413,0.0394,0.166013,0.1224,0.242013,0.1344,0.313013,0.0549,0.308113,0.1256,0.309313,0.0005,0.1822,0.593601,0.3381,0.595101,0.1734,0.436501,0.3543,0.438501,0.0039,0.416001,0.0036,0.582201,0.5035,0.602901,0.5585,0.427101,0.0448,0.720401,0.2023,0.720101,0.4635,0.756001,0.3244,0.723201,0.0826,0.801401,0.2095,0.803501,0.4264,0.832401,0.3259,0.803801,0.0999,0.881801,0.2103,0.866601,0.4477,0.871701,0.326,0.869201,0.2661,0.977101,0.2234,0.956901,0.1123,0.950901,0.004,0.272101,0.1857,0.274101,0.3963,0.274401,0.5543,0.258101,0.2121,0.006201,0.0042,0.005601,0.336,0.957201,0.4478,0.916201,0.3299,0.916901,0.4118,0.005901,0.535,0.003101,0.2155,0.919201,0.1002,0.920401,0.4366,0.966301,0.855113,0.694,0.645113,0.6888,0.860513,0.5557,0.643613,0.5369,0.643413,0.8639,0.645013,0.791,0.835713,0.873,0.858913,0.7919,0.419113,0.4391,0.633613,0.4129,0.418413,0.5399,0.641013,0.9315,0.792313,0.9303,0.433813,0.3407,0.627613,0.2958,0.824013,0.4113,0.637613,0.9818,0.635013,0.0233,0.797613,0.024,0.820613,0.2626,0.464013,0.0267,0.476713,0.9276,0.432713,0.794,0.438413,0.8651,0.416513,0.6872,0.1783,0.373792,0.0859,0.409192,0.1361,0.191492,0.0095,0.210892,0.0126,0.456392,0.1222,0.727392,0.1174,0.545092,0.2227,0.662592,0.203,0.508092,0.0114,0.733992,0.0098,0.598392,0.0099,0.901992,0.1247,0.876892,0.2212,0.850592,0.91739,0.022914,1.00119,0.049714,0.87589,0.260714,0.95289,0.282514,0.99829,0.284414,0.83449,0.750914,0.84639,0.545014,0.91489,0.509114,0.99439,0.483614,0.90479,0.940614,0.84049,0.942314,0.7815,0.040692,0.9908,0.111292,0.7678,0.930192,0.7692,0.632192,0.9913,0.925492,0.796,0.005792,0.991,0.004392,0.7836,0.237192,0.9917,0.264392,0.9895,0.801292,0.797,0.835792,0.9914,0.572492,0.7743,0.575492,0.870619,0.319412,0.992619,0.315212,0.992519,0.208712,0.781819,0.255312,0.680319,0.315912,0.591519,0.385712,0.838019,0.409712,0.789719,0.481712,0.756919,0.580212,0.695319,0.683212,0.662819,0.789512,0.892619,0.790512,0.433219,0.802512,0.440619,0.696512,0.480519,0.574512,0.523519,0.485812,0.141113,0.7596,0.305613,0.7488,0.137013,0.5267,0.299113,0.5185,0.004113,0.528,0.001313,0.752,0.133813,0.3442,0.007113,0.3295,0.270013,0.3476,0.102513,0.2124,0.215213,0.2013,0.070713,0.1315,0.171513,0.1186,0.004313,0.1959,-0.002987,0.1456,0.002513,0.1044,0.8917,0.844,0.7645,0.8451]]\n};\n"
			},
			{
				"name": "hfHairsLoader.js",
				"source": "\n\tvar json = hfHairs;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFHairs_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n\tvar map = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FemaleHairsMaterial\",\n\t\tmap: map,\n\t\tbumpMap: bumpMap,\n\t\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(1,1,1),\n\t\tbumpScale: 0.05,\n\t\tskinning: true,\t//\timportant!\n\t});\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.hairs = skinned;\n\t\n\tlocalPlayer.outfit.setGender(\"female\");\n\tlocalPlayer.outfit.add({\"hairs\":female.hairs});\n\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n//\t});\n\n"
			}]
	}
}