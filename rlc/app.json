{
	"metadata": {},
	"project": {
		"shadows": true,
		"editable": false,
		"vr": false,
		"debugMode": true
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "F559E374-8299-418A-9C42-88DDF3DEE789",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [0.6368842124938965,1.0103968772767757e-9,-0.7709589600563049,0,-0.19521641731262207,0.9674107432365417,-0.16126702725887299,0,0.7458341717720032,0.2532123327255249,0.6161288022994995,0,388.87078857421875,132.22799682617188,307.9837951660156,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 10000,
			"focus": 10,
			"aspect": 1.849770642201835,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"geometries": [
			{
				"uuid": "274556E7-4673-4904-85B1-2072DA20B20D",
				"type": "Geometry",
				"data": {
					"vertices": [2.91073,3.27768,5.48034,-3.28926,3.27768,5.48034,2.91073,3.27768,-1.51966,-4.78928,3.27768,-5.11965,-4.78928,3.27768,9.18034,20.5107,3.27768,-5.11965,4.01072,3.27768,-1.51966,9.71074,3.27768,1.38033,4.01072,3.27768,5.48034,6.01072,3.27768,5.48034,6.01072,3.27768,5.58034,15.9107,3.27768,1.38033,15.9107,3.27768,1.48033,20.5107,3.27768,8.38034,20.5107,3.27768,-4.31965,-3.28926,3.27768,5.58034,20.5107,3.27768,9.18034,9.71074,3.27768,1.48033,15.9107,3.27768,1.38033,9.71074,3.27768,1.48033,9.71074,3.27768,1.38033,15.9107,3.27768,1.48033,2.91073,3.27768,5.48034,-3.28926,3.27768,5.58034,-3.28926,3.27768,5.48034,6.01072,3.27768,5.58034,4.01072,3.27768,5.48034,6.01072,3.27768,5.48034,2.91073,3.57768,-1.51966,4.01072,3.27768,-1.51966,2.91073,3.27768,-1.51966,4.01072,3.57768,-1.51966,24.2498,-0.222318,-3.63441,24.2498,-0.722318,-3.63441,24.2498,-0.222318,-2.73442,24.2498,-0.722318,-2.73442,-2.28926,3.27768,-3.01966,-22.9893,3.27768,-2.91966,-22.9893,3.27768,-3.01966,-2.28926,3.27768,-2.91966,-2.28926,3.27768,-2.91966,-2.28926,3.27768,-3.01966,-22.9893,3.27768,-2.91966,-22.9893,3.27768,-3.01966,-22.9893,3.27768,-2.91966,-2.28926,-0.022318,-2.91966,-22.9893,-0.022318,-2.91966,-2.28926,3.27768,-2.91966,-2.28926,3.27768,-2.91966,-22.9893,3.27768,-2.91966,-2.28926,-0.022318,-2.91966,-22.9893,-0.022318,-2.91966,-22.9893,-0.022318,-3.01966,-22.9893,3.27768,-2.91966,-22.9893,-0.022318,-2.91966,-22.9893,3.27768,-3.01966,-22.9893,3.27768,-3.01966,-22.9893,-0.022318,-3.01966,-22.9893,3.27768,-2.91966,-22.9893,-0.022318,-2.91966,-2.28926,3.27768,-3.01966,-22.9893,-0.022318,-3.01966,-2.28926,-0.022318,-3.01966,-22.9893,3.27768,-3.01966,-22.9893,3.27768,-3.01966,-2.28926,3.27768,-3.01966,-22.9893,-0.022318,-3.01966,-2.28926,-0.022318,-3.01966,-2.28926,3.27768,-3.01966,-2.28926,-0.022318,-2.91966,-2.28926,3.27768,-2.91966,-2.28926,-0.022318,-3.01966,-2.28926,-0.022318,-3.01966,-2.28926,3.27768,-3.01966,-2.28926,-0.022318,-2.91966,-2.28926,3.27768,-2.91966,20.5107,3.57768,-5.11965,-4.78928,3.57768,-5.11965,20.5107,3.27768,-5.11965,-4.78928,3.27768,-5.11965,20.5107,3.27768,-5.11965,20.5107,3.27768,-4.31965,20.5107,3.57768,-5.11965,20.5107,3.27768,8.38034,20.5107,3.57768,9.18034,20.5107,3.27768,9.18034,20.5107,3.57768,9.18034,20.5107,3.27768,9.18034,-4.78928,3.57768,9.18034,-4.78928,3.27768,9.18034,-4.78928,3.27768,-5.11965,-4.78928,3.57768,-5.11965,-4.78928,3.27768,9.18034,-4.78928,3.57768,9.18034,-30.0893,-0.722318,2.58033,-30.0893,-1.82232,11.3803,-30.0893,-0.722319,11.3803,-30.0893,-1.82232,2.58033,-8.08927,-0.722318,2.58033,-30.0893,-0.722319,11.3803,-30.0893,-0.722318,2.58033,-30.0893,-0.722319,12.4803,-8.08927,-0.722319,12.4803,24.9107,-1.82232,-4.01966,24.9107,-0.722319,6.98034,24.9107,-1.82232,6.98034,24.9107,-0.722318,-4.01966,20.5107,-0.722318,-4.01966,24.9107,-1.82232,-4.01966,20.5107,-1.82232,-4.01966,24.9107,-0.722318,-4.01966,20.5107,-0.722318,-4.01966,23.3498,-0.722318,-3.63441,20.5107,-0.722319,8.08034,24.9107,-0.722318,-4.01966,24.2498,-0.722318,-3.63441,24.2498,-0.722318,-2.73442,23.3498,-0.722318,-2.73442,24.9107,-0.722319,8.08034,24.9107,-0.722319,6.98034,-3.28926,3.27768,5.58034,6.01072,-0.022319,5.58034,-3.28926,-0.022319,5.58034,6.01072,3.27768,5.58034,-3.28926,-0.022319,5.48034,-3.28926,3.27768,5.58034,-3.28926,-0.022319,5.58034,-3.28926,3.27768,5.48034,6.01072,3.27768,5.48034,6.01072,-0.022319,5.58034,6.01072,3.27768,5.58034,6.01072,-0.022319,5.48034,9.71074,3.27768,1.48033,15.9107,-0.022318,1.48033,9.71074,-0.022318,1.48033,15.9107,3.27768,1.48033,15.9107,3.27768,1.38033,15.9107,-0.022318,1.48033,15.9107,3.27768,1.48033,15.9107,-0.022318,1.38033,9.71074,-0.022318,1.38033,9.71074,3.27768,1.48033,9.71074,-0.022318,1.48033,9.71074,3.27768,1.38033,15.9107,3.27768,1.38033,9.71074,-0.022318,1.38033,15.9107,-0.022318,1.38033,9.71074,3.27768,1.38033,-20.5893,3.57768,-11.1197,-30.5893,3.57768,-11.1197,-20.5893,3.27768,-11.1197,-30.5893,3.27768,-11.1197,-30.5893,3.27768,-11.1197,-30.5893,3.57768,-11.1197,-30.5893,3.27768,-1.11966,-30.5893,3.57768,-1.11966,-20.5893,3.57768,-11.1197,-20.5893,3.27768,-11.1197,-20.5893,3.57768,-1.11966,-20.5893,3.27768,-1.11966,-30.5893,3.57768,-1.11966,-20.5893,3.57768,-1.11966,-30.5893,3.27768,-1.11966,-20.5893,3.27768,-1.11966,-20.5893,3.57768,-11.1197,-20.5893,3.57768,-1.11966,-30.5893,3.57768,-11.1197,-30.5893,3.57768,-1.11966,-20.5893,3.27768,-11.1197,-30.5893,3.27768,-1.11966,-30.5893,3.27768,-11.1197,-20.5893,3.27768,-1.11966,-20.5893,3.27768,-1.11966,-20.5893,3.27768,-11.1197,-30.5893,3.27768,-1.11966,-30.5893,3.27768,-11.1197,10.2107,3.27768,-4.01966,20.5107,-0.022318,-4.01966,10.2107,-0.022318,-4.01966,24.9107,-0.222318,-4.01966,20.5107,-0.222318,-4.01966,24.9107,3.27768,-4.01966,24.9107,-0.222318,-4.01966,24.9107,3.27768,8.08034,24.9107,-0.222319,8.08034,24.9107,3.27768,-4.01966,24.9107,-0.722318,-4.01966,20.5107,-0.722318,-4.01966,10.2107,-0.022317,-4.31965,10.2107,3.27768,-4.01966,10.2107,-0.022318,-4.01966,10.2107,3.27768,-4.31965,20.5107,3.27768,-4.31965,10.2107,3.27768,-4.01966,10.2107,3.27768,-4.31965,24.9107,3.27768,-4.01966,25.2107,3.27768,-4.31965,24.9107,3.27768,8.08034,25.2107,3.27768,8.38034,14.5107,3.27768,8.38034,14.5107,3.27768,8.08034,20.5107,3.27768,8.38034,24.9107,3.27768,8.08034,20.5107,-0.222319,8.08034,24.9107,-0.222319,8.08034,20.5107,-0.022319,8.08034,14.5107,-0.022319,8.08034,14.5107,3.27768,8.08034,24.9107,-0.722319,6.98034,24.9107,-0.722319,8.08034,24.9107,-0.722318,-4.01966,25.2107,3.27768,-4.31965,11.7107,-1.82232,-4.31965,25.2107,-1.82232,-4.31965,11.7107,-0.022317,-4.31965,10.2107,-0.022317,-4.31965,10.2107,3.27768,-4.31965,20.5107,3.27768,-4.31965,25.2107,3.27768,-4.31965,25.2107,-0.022319,8.38034,25.2107,3.27768,8.38034,25.2107,-0.022319,6.98034,25.2107,-1.82232,6.98034,25.2107,-1.82232,-4.31965,14.5107,3.27768,8.38034,25.2107,-0.022319,8.38034,14.5107,-0.022319,8.38034,25.2107,3.27768,8.38034,20.5107,3.27768,8.38034,14.5107,-0.022319,8.08034,14.5107,3.27768,8.38034,14.5107,-0.022319,8.38034,14.5107,3.27768,8.08034,20.5107,-0.722319,8.08034,24.9107,-0.722319,8.08034,25.2107,-1.82232,6.98034,24.9107,-1.82232,-4.01966,24.9107,-1.82232,6.98034,20.5107,-1.82232,-4.01966,11.7107,-1.82232,-4.31965,11.7107,-1.82232,-4.01966,25.2107,-1.82232,-4.31965,25.2107,-1.82232,6.98034,24.9107,-1.82232,-4.01966,25.2107,-1.82232,-4.31965,20.5107,-1.82232,-4.01966,11.7107,-1.82232,-4.31965,11.7107,-1.82232,-4.01966,24.9107,-1.82232,6.98034,8.82324,-0.222319,9.18034,8.41072,-0.222319,12.4803,8.41072,-0.222319,9.18034,8.82324,-0.222319,12.4803,8.82324,-0.222319,12.4803,8.82324,-0.222319,9.18034,8.41072,-0.222319,12.4803,8.41072,-0.222319,9.18034,11.2982,-1.42232,9.18034,11.7107,-1.62232,9.18034,11.2982,-1.62232,9.18034,10.8857,-1.22232,9.18034,10.8857,-1.42232,9.18034,10.4732,-1.02232,9.18034,10.4732,-1.22232,9.18034,10.0607,-0.822319,9.18034,10.0607,-1.02232,9.18034,9.64823,-0.622319,9.18034,9.64823,-0.822319,9.18034,9.23574,-0.422319,9.18034,9.23574,-0.622319,9.18034,8.82324,-0.222319,9.18034,8.82324,-0.422319,9.18034,8.41072,-0.022319,9.18034,8.41072,-0.222319,9.18034,26.0107,-1.82232,9.18034,11.7107,-1.82232,9.18034,26.0107,-0.022319,9.18034,8.41072,-0.022319,9.18034,8.82324,-0.222319,9.18034,26.0107,-0.022319,9.18034,9.23574,-0.422319,9.18034,9.64823,-0.622319,9.18034,10.0607,-0.822319,9.18034,10.4732,-1.02232,9.18034,10.8857,-1.22232,9.18034,11.2982,-1.42232,9.18034,11.7107,-1.62232,9.18034,26.0107,-1.82232,9.18034,11.7107,-1.82232,9.18034,8.41072,-0.222319,9.18034,8.82324,-0.422319,9.18034,9.23574,-0.622319,9.18034,9.64823,-0.822319,9.18034,10.0607,-1.02232,9.18034,10.4732,-1.22232,9.18034,10.8857,-1.42232,9.18034,11.2982,-1.62232,9.18034,8.82324,-0.222319,9.18034,8.82324,-0.42232,12.4803,8.82324,-0.222319,12.4803,8.82324,-0.422319,9.18034,8.82324,-0.422319,9.18034,8.82324,-0.222319,9.18034,8.82324,-0.42232,12.4803,8.82324,-0.222319,12.4803,11.7107,-0.022319,12.4803,11.2982,-1.62232,12.4803,11.7107,-1.62232,12.4803,11.2982,-1.42232,12.4803,10.8857,-1.42232,12.4803,10.8857,-1.22232,12.4803,10.4732,-1.22232,12.4803,10.4732,-1.02232,12.4803,10.0607,-1.02232,12.4803,10.0607,-0.82232,12.4803,9.64823,-0.82232,12.4803,9.64823,-0.62232,12.4803,9.23574,-0.62232,12.4803,9.23574,-0.42232,12.4803,8.82324,-0.42232,12.4803,8.82324,-0.222319,12.4803,8.41072,-0.222319,12.4803,8.41072,-0.022319,12.4803,8.41072,-0.022319,12.4803,11.7107,-0.022319,12.4803,8.41072,-0.222319,12.4803,8.82324,-0.222319,12.4803,8.82324,-0.42232,12.4803,9.23574,-0.42232,12.4803,9.23574,-0.62232,12.4803,9.64823,-0.62232,12.4803,9.64823,-0.82232,12.4803,10.0607,-0.82232,12.4803,10.0607,-1.02232,12.4803,10.4732,-1.02232,12.4803,10.4732,-1.22232,12.4803,10.8857,-1.22232,12.4803,10.8857,-1.42232,12.4803,11.2982,-1.42232,12.4803,11.2982,-1.62232,12.4803,11.7107,-1.62232,12.4803,8.41072,-0.022319,9.18034,8.41072,-0.222319,12.4803,8.41072,-0.022319,12.4803,8.41072,-0.222319,9.18034,8.41072,-0.222319,9.18034,8.41072,-0.022319,9.18034,8.41072,-0.222319,12.4803,8.41072,-0.022319,12.4803,-8.08927,-0.022319,12.4803,-22.3893,-0.02232,12.7803,-22.3893,-0.022319,12.4803,-21.2893,-0.022317,-10.6197,-22.9893,-0.022318,-3.01966,-25.6893,-0.022317,-10.6197,-21.2893,-0.022317,-9.31967,11.7107,-0.022317,-5.11965,-20.9893,-0.022317,-4.81965,-20.9893,-0.022317,-5.11965,-2.28926,-0.022318,-3.01966,-2.28926,-0.022318,-2.91966,10.2107,-0.022317,-4.31965,2.91073,-0.022319,5.48034,4.01072,-0.022319,5.48034,6.01072,-0.022319,5.48034,6.01072,-0.022319,5.58034,8.41072,-0.022319,9.18034,9.71074,-0.022318,1.38033,11.7107,-0.022317,-4.31965,10.2107,-0.022318,-4.01966,15.9107,-0.022318,1.38033,20.5107,-0.022318,-4.01966,15.9107,-0.022318,1.48033,14.5107,-0.022319,8.08034,9.71074,-0.022318,1.48033,20.5107,-0.022319,8.08034,26.0107,-0.022319,6.98034,25.2107,-0.022319,8.38034,25.2107,-0.022319,6.98034,14.5107,-0.022319,8.38034,26.0107,-0.022319,9.18034,-30.3893,-0.022319,11.3803,-31.1893,-0.02232,13.5803,-31.1893,-0.022319,11.3803,-30.3893,-0.02232,12.7803,11.7107,-0.02232,13.5803,8.41072,-0.022319,12.4803,-3.28926,-0.022319,5.58034,-3.28926,-0.022319,5.48034,11.7107,-0.022319,12.4803,-30.0893,-0.022317,-5.11965,-30.0893,-0.022317,-10.6197,-30.0893,-0.022318,2.58033,-22.9893,-0.022318,-2.91966,-8.08927,-0.022318,2.58033,-21.2893,-0.022317,-4.81965,-21.2893,-0.022317,-5.11965,-20.9893,-0.022317,-4.81965,-21.2893,-0.022317,-4.81965,-2.28926,-0.022318,-3.01966,-21.2893,-0.022317,-9.31967,-22.9893,-0.022318,-3.01966,-21.2893,-0.022317,-5.11965,2.91073,-0.022319,5.48034,-2.28926,-0.022318,-2.91966,-3.28926,-0.022319,5.48034,-8.08927,-0.022319,12.4803,-8.08927,-0.022318,2.58033,-22.9893,-0.022318,-2.91966,-25.6893,-0.022317,-10.6197,-30.0893,-0.022318,2.58033,-30.0893,-0.022317,-5.11965,-30.0893,-0.022317,-10.6197,11.7107,-0.022319,12.4803,8.41072,-0.022319,12.4803,11.7107,-0.02232,13.5803,8.41072,-0.022319,9.18034,6.01072,-0.022319,5.58034,-3.28926,-0.022319,5.58034,-22.3893,-0.02232,12.7803,-30.3893,-0.02232,12.7803,-31.1893,-0.02232,13.5803,-30.3893,-0.022319,11.3803,-31.1893,-0.022319,11.3803,26.0107,-0.022319,6.98034,25.2107,-0.022319,8.38034,26.0107,-0.022319,9.18034,14.5107,-0.022319,8.38034,14.5107,-0.022319,8.08034,9.71074,-0.022318,1.48033,9.71074,-0.022318,1.38033,25.2107,-0.022319,6.98034,20.5107,-0.022318,-4.01966,15.9107,-0.022318,1.48033,20.5107,-0.022319,8.08034,15.9107,-0.022318,1.38033,10.2107,-0.022318,-4.01966,10.2107,-0.022317,-4.31965,11.7107,-0.022317,-4.31965,11.7107,-0.022317,-5.11965,6.01072,-0.022319,5.48034,4.01072,-0.022319,5.48034,-20.9893,-0.022317,-5.11965,-21.2893,-0.022317,-10.6197,-22.3893,-0.022319,12.4803,26.0107,-0.022319,6.98034,26.0107,-1.82232,9.18034,26.0107,-0.022319,9.18034,26.0107,-1.82232,6.98034,26.0107,-1.82232,6.98034,26.0107,-0.022319,6.98034,26.0107,-1.82232,9.18034,26.0107,-0.022319,9.18034,11.7107,-1.62232,9.18034,11.7107,-1.82232,12.4803,11.7107,-1.62232,12.4803,11.7107,-1.82232,9.18034,11.7107,-1.82232,9.18034,11.7107,-1.62232,9.18034,11.7107,-1.82232,12.4803,11.7107,-1.62232,12.4803,11.7107,-1.62232,9.18034,11.2982,-1.62232,12.4803,11.2982,-1.62232,9.18034,11.7107,-1.62232,12.4803,11.7107,-1.62232,12.4803,11.7107,-1.62232,9.18034,11.2982,-1.62232,12.4803,11.2982,-1.62232,9.18034,11.2982,-1.42232,9.18034,11.2982,-1.62232,12.4803,11.2982,-1.42232,12.4803,11.2982,-1.62232,9.18034,11.2982,-1.62232,9.18034,11.2982,-1.42232,9.18034,11.2982,-1.62232,12.4803,11.2982,-1.42232,12.4803,11.2982,-1.42232,9.18034,10.8857,-1.42232,12.4803,10.8857,-1.42232,9.18034,11.2982,-1.42232,12.4803,11.2982,-1.42232,12.4803,11.2982,-1.42232,9.18034,10.8857,-1.42232,12.4803,10.8857,-1.42232,9.18034,10.8857,-1.22232,9.18034,10.8857,-1.42232,12.4803,10.8857,-1.22232,12.4803,10.8857,-1.42232,9.18034,10.8857,-1.42232,9.18034,10.8857,-1.22232,9.18034,10.8857,-1.42232,12.4803,10.8857,-1.22232,12.4803,10.8857,-1.22232,9.18034,10.4732,-1.22232,12.4803,10.4732,-1.22232,9.18034,10.8857,-1.22232,12.4803,10.8857,-1.22232,12.4803,10.8857,-1.22232,9.18034,10.4732,-1.22232,12.4803,10.4732,-1.22232,9.18034,10.4732,-1.02232,9.18034,10.4732,-1.22232,12.4803,10.4732,-1.02232,12.4803,10.4732,-1.22232,9.18034,10.4732,-1.22232,9.18034,10.4732,-1.02232,9.18034,10.4732,-1.22232,12.4803,10.4732,-1.02232,12.4803,10.4732,-1.02232,9.18034,10.0607,-1.02232,12.4803,10.0607,-1.02232,9.18034,10.4732,-1.02232,12.4803,10.4732,-1.02232,12.4803,10.4732,-1.02232,9.18034,10.0607,-1.02232,12.4803,10.0607,-1.02232,9.18034,10.0607,-0.822319,9.18034,10.0607,-1.02232,12.4803,10.0607,-0.82232,12.4803,10.0607,-1.02232,9.18034,10.0607,-1.02232,9.18034,10.0607,-0.822319,9.18034,10.0607,-1.02232,12.4803,10.0607,-0.82232,12.4803,10.0607,-0.822319,9.18034,9.64823,-0.82232,12.4803,9.64823,-0.822319,9.18034,10.0607,-0.82232,12.4803,10.0607,-0.82232,12.4803,10.0607,-0.822319,9.18034,9.64823,-0.82232,12.4803,9.64823,-0.822319,9.18034,9.64823,-0.622319,9.18034,9.64823,-0.82232,12.4803,9.64823,-0.62232,12.4803,9.64823,-0.822319,9.18034,9.64823,-0.822319,9.18034,9.64823,-0.622319,9.18034,9.64823,-0.82232,12.4803,9.64823,-0.62232,12.4803,9.64823,-0.622319,9.18034,9.23574,-0.62232,12.4803,9.23574,-0.622319,9.18034,9.64823,-0.62232,12.4803,9.64823,-0.62232,12.4803,9.64823,-0.622319,9.18034,9.23574,-0.62232,12.4803,9.23574,-0.622319,9.18034,9.23574,-0.422319,9.18034,9.23574,-0.62232,12.4803,9.23574,-0.42232,12.4803,9.23574,-0.622319,9.18034,9.23574,-0.622319,9.18034,9.23574,-0.422319,9.18034,9.23574,-0.62232,12.4803,9.23574,-0.42232,12.4803,9.23574,-0.422319,9.18034,8.82324,-0.42232,12.4803,8.82324,-0.422319,9.18034,9.23574,-0.42232,12.4803,9.23574,-0.42232,12.4803,9.23574,-0.422319,9.18034,8.82324,-0.42232,12.4803,8.82324,-0.422319,9.18034,11.7107,-0.022319,12.4803,11.7107,-1.82232,13.5803,11.7107,-0.02232,13.5803,11.7107,-0.022319,12.4803,11.7107,-1.82232,13.5803,11.7107,-0.02232,13.5803,20.5107,-0.022318,-4.01966,20.5107,-0.222319,8.08034,20.5107,-0.022319,8.08034,20.5107,-0.222318,-4.01966,20.5107,-0.222318,-4.01966,20.5107,-0.022318,-4.01966,20.5107,-0.222319,8.08034,20.5107,-0.022319,8.08034,26.0107,-0.022319,6.98034,25.2107,-1.82232,6.98034,26.0107,-1.82232,6.98034,25.2107,-0.022319,6.98034,25.2107,-0.022319,6.98034,26.0107,-0.022319,6.98034,25.2107,-1.82232,6.98034,26.0107,-1.82232,6.98034,-31.1893,-0.02232,13.5803,11.7107,-1.82232,13.5803,-31.1893,-1.82232,13.5803,11.7107,-0.02232,13.5803,11.7107,-0.02232,13.5803,-31.1893,-0.02232,13.5803,11.7107,-1.82232,13.5803,-31.1893,-1.82232,13.5803,-31.1893,-1.82232,11.3803,-31.1893,-0.02232,13.5803,-31.1893,-1.82232,13.5803,-31.1893,-0.022319,11.3803,-31.1893,-0.022319,11.3803,-31.1893,-1.82232,11.3803,-31.1893,-0.02232,13.5803,-31.1893,-1.82232,13.5803,-30.3893,-0.022319,11.3803,-31.1893,-1.82232,11.3803,-30.3893,-1.82232,11.3803,-31.1893,-0.022319,11.3803,-31.1893,-0.022319,11.3803,-30.3893,-0.022319,11.3803,-31.1893,-1.82232,11.3803,-30.3893,-1.82232,11.3803,-30.3893,-1.82232,-10.9197,-30.3893,-0.022319,11.3803,-30.3893,-1.82232,11.3803,-30.3893,3.27768,12.7803,-30.3893,-0.02232,12.7803,-30.3893,3.27768,-10.9197,-30.3893,-1.82232,-10.9197,-30.3893,-0.022319,11.3803,-30.3893,3.27768,-10.9197,-30.3893,3.27768,12.7803,-30.3893,-0.02232,12.7803,-30.3893,-1.82232,11.3803,-30.3893,3.27768,12.7803,-22.3893,-0.02232,12.7803,-30.3893,-0.02232,12.7803,-22.3893,3.27768,12.7803,-22.3893,3.27768,12.7803,-30.3893,3.27768,12.7803,-22.3893,-0.02232,12.7803,-30.3893,-0.02232,12.7803,-22.3893,3.27768,12.4803,-22.3893,-0.02232,12.7803,-22.3893,3.27768,12.7803,-22.3893,-0.022319,12.4803,-22.3893,-0.022319,12.4803,-22.3893,3.27768,12.4803,-22.3893,-0.02232,12.7803,-22.3893,3.27768,12.7803,-8.08927,-0.022319,12.4803,-22.3893,-0.222319,12.4803,-8.08927,-0.222319,12.4803,-22.3893,-0.022319,12.4803,-22.3893,-0.022319,12.4803,-8.08927,-0.022319,12.4803,-22.3893,-0.222319,12.4803,-8.08927,-0.222319,12.4803,-8.08927,-0.222318,2.58033,-8.08927,-0.022319,12.4803,-8.08927,-0.222319,12.4803,-8.08927,-0.022318,2.58033,-8.08927,-0.022318,2.58033,-8.08927,-0.222318,2.58033,-8.08927,-0.022319,12.4803,-8.08927,-0.222319,12.4803,-30.0893,-0.022318,2.58033,-8.08927,-0.222318,2.58033,-30.0893,-0.222318,2.58033,-8.08927,-0.022318,2.58033,-8.08927,-0.022318,2.58033,-30.0893,-0.022318,2.58033,-8.08927,-0.222318,2.58033,-30.0893,-0.222318,2.58033,-30.0893,-0.022317,-5.11965,-30.0893,-0.222318,2.58033,-30.0893,-0.022318,2.58033,-30.0893,-0.722318,2.58033,-30.0893,-1.82232,2.58033,-30.0893,-1.82232,-10.6197,-30.0893,-0.022317,-10.6197,-30.0893,-0.022317,-10.6197,-30.0893,-0.022317,-5.11965,-30.0893,-1.82232,-10.6197,-30.0893,-1.82232,2.58033,-30.0893,-0.722318,2.58033,-30.0893,-0.222318,2.58033,-30.0893,-0.022318,2.58033,-30.0893,3.27768,-5.11965,-30.0893,-0.222319,12.4803,-30.0893,3.27768,12.4803,-30.0893,-0.022318,2.58033,-30.0893,-0.022317,-5.11965,-30.0893,-0.222318,2.58033,-30.0893,-0.022318,2.58033,-30.0893,-0.222319,12.4803,-30.0893,-0.222318,2.58033,-30.0893,-0.022317,-5.11965,-30.0893,3.27768,-5.11965,-30.0893,3.27768,12.4803,-30.0893,3.27768,-10.6197,-30.0893,3.27768,-5.11965,-30.0893,3.27768,-10.6197,-30.0893,3.27768,-5.11965,-21.2893,-0.022317,-10.6197,-30.0893,-1.82232,-10.6197,-21.2893,-1.82232,-10.6197,-30.0893,-0.022317,-10.6197,-25.6893,-0.022317,-10.6197,-25.6893,-0.022317,-10.6197,-21.2893,-0.022317,-10.6197,-30.0893,-0.022317,-10.6197,-30.0893,-1.82232,-10.6197,-21.2893,-1.82232,-10.6197,-30.0893,3.27768,-10.6197,-25.6893,3.27768,-10.6197,-25.6893,3.27768,-10.6197,-30.0893,3.27768,-10.6197,-21.2893,3.27768,-10.6197,-21.2893,3.27768,-10.6197,-21.2893,-0.022317,-9.31967,-21.2893,-1.82232,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,-1.82232,-10.6197,-21.2893,-0.022317,-10.6197,-21.2893,-0.022317,-10.6197,-21.2893,-0.022317,-9.31967,-21.2893,-1.82232,-10.6197,-21.2893,-1.82232,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,-0.022317,-10.6197,-21.2893,3.27768,-9.31967,-21.2893,-0.022317,-9.31967,-21.2893,3.27768,-10.6197,-21.2893,3.27768,-10.6197,-21.2893,-0.022317,-10.6197,-21.2893,3.27768,-9.31967,-21.2893,-0.022317,-9.31967,-21.2893,-0.022317,-9.31967,-21.2893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,3.27768,-9.31967,-21.2893,3.27768,-9.31967,-21.2893,-0.022317,-9.31967,-21.2893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-20.9893,-0.022317,-5.11965,-21.2893,-0.022317,-4.81965,-21.2893,-0.022317,-5.11965,-20.9893,-0.022317,-4.81965,-20.9893,-0.022317,-4.81965,-20.9893,-0.022317,-5.11965,-21.2893,-0.022317,-4.81965,-21.2893,-0.022317,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,3.27768,-4.81965,-21.2893,-0.022317,-4.81965,-21.2893,3.27768,-5.11965,-21.2893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,3.27768,-4.81965,-21.2893,-0.022317,-4.81965,-21.2893,3.27768,-4.81965,-20.9893,-0.022317,-4.81965,-21.2893,-0.022317,-4.81965,-20.9893,3.27768,-4.81965,-20.9893,3.27768,-4.81965,-21.2893,3.27768,-4.81965,-20.9893,-0.022317,-4.81965,-21.2893,-0.022317,-4.81965,-20.9893,3.27768,-4.81965,-20.9893,-0.022317,-5.11965,-20.9893,-0.022317,-4.81965,-20.9893,3.27768,-10.9197,-20.9893,-1.82232,-5.11965,-20.9893,-1.82232,-10.9197,-20.9893,-1.82232,-10.9197,-20.9893,3.27768,-10.9197,-20.9893,-1.82232,-5.11965,-20.9893,-0.022317,-5.11965,-20.9893,3.27768,-4.81965,-20.9893,-0.022317,-4.81965,11.7107,-0.022317,-5.11965,-20.9893,-1.82232,-5.11965,11.7107,-1.82232,-5.11965,-20.9893,-0.022317,-5.11965,-20.9893,-0.022317,-5.11965,11.7107,-0.022317,-5.11965,-20.9893,-1.82232,-5.11965,11.7107,-1.82232,-5.11965,11.7107,-0.022317,-5.11965,11.7107,-1.82232,-4.31965,11.7107,-0.022317,-4.31965,11.7107,-1.82232,-5.11965,11.7107,-1.82232,-5.11965,11.7107,-0.022317,-5.11965,11.7107,-1.82232,-4.31965,11.7107,-0.022317,-4.31965,20.5107,-0.722319,8.08034,20.5107,-0.722318,-4.01966,20.5107,-0.722318,-4.01966,20.5107,-0.722319,8.08034,-20.9893,-1.82232,-5.11965,-21.2893,-1.82232,-10.6197,-21.2893,-1.82232,-5.11965,-30.0893,-1.82232,11.3803,-30.3893,-1.82232,-10.9197,-30.3893,-1.82232,11.3803,-30.0893,-1.82232,-10.6197,-20.9893,-1.82232,-10.9197,-30.0893,-1.82232,2.58033,-20.9893,-1.82232,-5.11965,-21.2893,-1.82232,-10.6197,-20.9893,-1.82232,-10.9197,-30.0893,-1.82232,-10.6197,-30.0893,-1.82232,2.58033,-30.0893,-1.82232,11.3803,-30.3893,-1.82232,-10.9197,-30.3893,-1.82232,11.3803,-21.2893,-1.82232,-5.11965,-20.9893,3.27768,-10.9197,-30.3893,-1.82232,-10.9197,-20.9893,-1.82232,-10.9197,-30.3893,3.27768,-10.9197,-30.3893,3.27768,-10.9197,-20.9893,3.27768,-10.9197,-30.3893,-1.82232,-10.9197,-20.9893,-1.82232,-10.9197,-30.3893,3.27768,-10.9197,-30.0893,3.27768,-10.6197,-30.3893,3.27768,12.7803,-20.9893,3.27768,-10.9197,-25.6893,3.27768,-10.6197,-21.2893,3.27768,-10.6197,-21.2893,3.27768,-9.31967,-21.2893,3.27768,-5.11965,-21.2893,3.27768,-4.81965,-20.9893,3.27768,-4.81965,-30.0893,3.27768,12.4803,-22.3893,3.27768,12.7803,-30.0893,3.27768,-5.11965,-22.3893,3.27768,12.4803,-22.3893,3.27768,12.4803,-30.0893,3.27768,12.4803,-22.3893,3.27768,12.7803,-30.0893,3.27768,-5.11965,-30.0893,3.27768,-10.6197,-30.3893,3.27768,12.7803,-20.9893,3.27768,-4.81965,-20.9893,3.27768,-10.9197,-21.2893,3.27768,-4.81965,-21.2893,3.27768,-5.11965,-21.2893,3.27768,-9.31967,-21.2893,3.27768,-10.6197,-25.6893,3.27768,-10.6197,-30.3893,3.27768,-10.9197,-30.0893,-0.222319,12.4803,-30.0893,3.27768,12.4803,-22.3893,3.27768,12.4803,-22.3893,3.27768,12.4803,-30.0893,3.27768,12.4803,-30.0893,-0.222319,12.4803,-30.0893,-0.722319,12.4803,-8.08927,-0.722319,12.4803,-30.0893,-0.722319,12.4803,-8.08927,-0.722319,12.4803,-8.08927,-0.722318,2.58033,-8.08927,-0.722319,12.4803,-8.08927,-0.722318,2.58033,-8.08927,-0.722319,12.4803,-8.08927,-0.722318,2.58033,-30.0893,-0.722318,2.58033,-8.08927,-0.722318,2.58033,-30.0893,-0.722318,2.58033,-30.0893,-0.222318,2.58033,-30.0893,-0.722319,12.4803,-30.0893,-0.222319,12.4803,-30.0893,-0.722319,11.3803,-30.0893,-0.722318,2.58033,-30.0893,-0.722318,2.58033,-30.0893,-0.222318,2.58033,-30.0893,-0.722319,11.3803,-30.0893,-0.722319,12.4803,-30.0893,-0.222319,12.4803,-20.9893,-0.022317,-5.11965,-21.2893,-1.82232,-5.11965,-20.9893,-1.82232,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,-0.022317,-5.11965,-20.9893,-0.022317,-5.11965,-21.2893,-1.82232,-5.11965,-20.9893,-1.82232,-5.11965,-25.5893,3.27768,-10.6197,-25.6893,3.27768,-10.6197,-25.5893,-0.022317,-10.6197,-25.6893,-0.022317,-10.6197,-25.6893,-0.022317,-10.6197,-25.6893,3.27768,-10.6197,-25.6893,-0.022317,-10.5197,-25.6893,3.27768,-10.5197,-25.5893,3.27768,-10.6197,-25.5893,-0.022317,-10.6197,-25.5893,3.27768,-10.5197,-25.5893,-0.022317,-10.5197,-25.6893,3.27768,-10.5197,-25.5893,3.27768,-10.5197,-25.6893,-0.022317,-10.5197,-25.5893,-0.022317,-10.5197,-25.5893,3.27768,-9.31967,-25.6893,3.27768,-9.31967,-25.5893,-0.022317,-9.31967,-25.6893,-0.022317,-9.31967,-25.6893,-0.022317,-9.31967,-25.6893,3.27768,-9.31967,-25.6893,-0.022317,-9.21967,-25.6893,3.27768,-9.21967,-25.5893,3.27768,-9.31967,-25.5893,-0.022317,-9.31967,-25.5893,3.27768,-9.21967,-25.5893,-0.022317,-9.21967,-25.6893,3.27768,-9.21967,-25.5893,3.27768,-9.21967,-25.6893,-0.022317,-9.21967,-25.5893,-0.022317,-9.21967,-21.2893,3.27768,-9.31967,-21.3893,3.27768,-9.31967,-21.2893,-0.022317,-9.31967,-21.3893,-0.022317,-9.31967,-21.3893,-0.022317,-9.31967,-21.3893,3.27768,-9.31967,-21.3893,-0.022317,-9.21967,-21.3893,3.27768,-9.21967,-21.2893,3.27768,-9.31967,-21.2893,-0.022317,-9.31967,-21.2893,3.27768,-9.21967,-21.2893,-0.022317,-9.21967,-21.3893,3.27768,-9.21967,-21.2893,3.27768,-9.21967,-21.3893,-0.022317,-9.21967,-21.2893,-0.022317,-9.21967,-23.3893,3.27768,-9.31967,-23.4893,3.27768,-9.31967,-23.3893,-0.022317,-9.31967,-23.4893,-0.022317,-9.31967,-23.4893,-0.022317,-9.31967,-23.4893,3.27768,-9.31967,-23.4893,-0.022317,-9.21967,-23.4893,3.27768,-9.21967,-23.3893,3.27768,-9.31967,-23.3893,-0.022317,-9.31967,-23.3893,3.27768,-9.21967,-23.3893,-0.022317,-9.21967,-23.4893,3.27768,-9.21967,-23.3893,3.27768,-9.21967,-23.4893,-0.022317,-9.21967,-23.3893,-0.022317,-9.21967,-25.5893,3.27768,-8.51967,-25.6893,3.27768,-8.51967,-25.5893,-0.022317,-8.51967,-25.6893,-0.022317,-8.51967,-25.6893,-0.022317,-8.51967,-25.6893,3.27768,-8.51967,-25.6893,-0.022317,-8.41967,-25.6893,3.27768,-8.41967,-25.5893,3.27768,-8.51967,-25.5893,-0.022317,-8.51967,-25.5893,3.27768,-8.41967,-25.5893,-0.022317,-8.41967,-25.6893,3.27768,-8.41967,-25.5893,3.27768,-8.41967,-25.6893,-0.022317,-8.41967,-25.5893,-0.022317,-8.41967,-24.5893,3.27768,-9.31967,-24.6893,3.27768,-9.31967,-24.5893,-0.022317,-9.31967,-24.6893,-0.022317,-9.31967,-24.6893,-0.022317,-9.31967,-24.6893,3.27768,-9.31967,-24.6893,-0.022317,-9.21967,-24.6893,3.27768,-9.21967,-24.5893,3.27768,-9.31967,-24.5893,-0.022317,-9.31967,-24.5893,3.27768,-9.21967,-24.5893,-0.022317,-9.21967,-24.6893,3.27768,-9.21967,-24.5893,3.27768,-9.21967,-24.6893,-0.022317,-9.21967,-24.5893,-0.022317,-9.21967,-25.5893,3.27768,-7.31967,-25.6893,3.27768,-7.31967,-25.5893,-0.022317,-7.31967,-25.6893,-0.022317,-7.31967,-25.6893,-0.022317,-7.31967,-25.6893,3.27768,-7.31967,-25.6893,-0.022317,-7.21967,-25.6893,3.27768,-7.21967,-25.5893,3.27768,-7.31967,-25.5893,-0.022317,-7.31967,-25.5893,3.27768,-7.21967,-25.5893,-0.022317,-7.21967,-25.6893,3.27768,-7.21967,-25.5893,3.27768,-7.21967,-25.6893,-0.022317,-7.21967,-25.5893,-0.022317,-7.21967,-29.9893,3.27768,-5.11965,-30.0893,3.27768,-5.11965,-29.9893,-0.022317,-5.11965,-30.0893,-0.022317,-5.11965,-30.0893,-0.022317,-5.11965,-30.0893,3.27768,-5.11965,-30.0893,-0.022317,-5.01965,-30.0893,3.27768,-5.01965,-29.9893,3.27768,-5.11965,-29.9893,-0.022317,-5.11965,-29.9893,3.27768,-5.01965,-29.9893,-0.022317,-5.01965,-30.0893,3.27768,-5.01965,-29.9893,3.27768,-5.01965,-30.0893,-0.022317,-5.01965,-29.9893,-0.022317,-5.01965,-21.2893,3.27768,-5.11965,-21.3893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-21.3893,-0.022317,-5.11965,-21.3893,-0.022317,-5.11965,-21.3893,3.27768,-5.11965,-21.3893,-0.022317,-5.01965,-21.3893,3.27768,-5.01965,-21.2893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,3.27768,-5.01965,-21.2893,-0.022317,-5.01965,-21.3893,3.27768,-5.01965,-21.2893,3.27768,-5.01965,-21.3893,-0.022317,-5.01965,-21.2893,-0.022317,-5.01965,-25.5893,3.27768,-5.11965,-25.6893,3.27768,-5.11965,-25.5893,-0.022317,-5.11965,-25.6893,-0.022317,-5.11965,-25.6893,-0.022317,-5.11965,-25.6893,3.27768,-5.11965,-25.6893,-0.022317,-5.01965,-25.6893,3.27768,-5.01965,-25.5893,3.27768,-5.11965,-25.5893,-0.022317,-5.11965,-25.5893,3.27768,-5.01965,-25.5893,-0.022317,-5.01965,-25.6893,3.27768,-5.01965,-25.5893,3.27768,-5.01965,-25.6893,-0.022317,-5.01965,-25.5893,-0.022317,-5.01965,-23.4893,3.27768,-5.11965,-23.5893,3.27768,-5.11965,-23.4893,-0.022317,-5.11965,-23.5893,-0.022317,-5.11965,-23.5893,-0.022317,-5.11965,-23.5893,3.27768,-5.11965,-23.5893,-0.022317,-5.01965,-23.5893,3.27768,-5.01965,-23.4893,3.27768,-5.11965,-23.4893,-0.022317,-5.11965,-23.4893,3.27768,-5.01965,-23.4893,-0.022317,-5.01965,-23.5893,3.27768,-5.01965,-23.4893,3.27768,-5.01965,-23.5893,-0.022317,-5.01965,-23.4893,-0.022317,-5.01965,-22.2893,3.27768,-5.11965,-22.3893,3.27768,-5.11965,-22.2893,-0.022317,-5.11965,-22.3893,-0.022317,-5.11965,-22.3893,-0.022317,-5.11965,-22.3893,3.27768,-5.11965,-22.3893,-0.022317,-5.01965,-22.3893,3.27768,-5.01965,-22.2893,3.27768,-5.11965,-22.2893,-0.022317,-5.11965,-22.2893,3.27768,-5.01965,-22.2893,-0.022317,-5.01965,-22.3893,3.27768,-5.01965,-22.2893,3.27768,-5.01965,-22.3893,-0.022317,-5.01965,-22.2893,-0.022317,-5.01965,1.81073,3.27768,-1.61966,1.71073,3.27768,-1.61966,1.81073,-0.022318,-1.61966,1.71073,-0.022318,-1.61966,1.71073,-0.022318,-1.61966,1.71073,3.27768,-1.61966,1.71073,-0.022318,-1.51966,1.71073,3.27768,-1.51966,1.81073,3.27768,-1.61966,1.81073,-0.022318,-1.61966,1.81073,3.27768,-1.51966,1.81073,-0.022318,-1.51966,1.71073,3.27768,-1.51966,1.81073,3.27768,-1.51966,1.71073,-0.022318,-1.51966,1.81073,-0.022318,-1.51966,12.9107,3.27768,-1.61966,12.8107,3.27768,-1.61966,12.9107,-0.022318,-1.61966,12.8107,-0.022318,-1.61966,12.8107,-0.022318,-1.61966,12.8107,3.27768,-1.61966,12.8107,-0.022318,-1.51966,12.8107,3.27768,-1.51966,12.9107,3.27768,-1.61966,12.9107,-0.022318,-1.61966,12.9107,3.27768,-1.51966,12.9107,-0.022318,-1.51966,12.8107,3.27768,-1.51966,12.9107,3.27768,-1.51966,12.8107,-0.022318,-1.51966,12.9107,-0.022318,-1.51966,18.0107,3.27768,6.08034,17.9107,3.27768,6.08034,18.0107,-0.022319,6.08034,17.9107,-0.022319,6.08034,17.9107,-0.022319,6.08034,17.9107,3.27768,6.08034,17.9107,-0.022319,6.18034,17.9107,3.27768,6.18034,18.0107,3.27768,6.08034,18.0107,-0.022319,6.08034,18.0107,3.27768,6.18034,18.0107,-0.022319,6.18034,17.9107,3.27768,6.18034,18.0107,3.27768,6.18034,17.9107,-0.022319,6.18034,18.0107,-0.022319,6.18034,18.0107,3.27768,-2.11966,17.9107,3.27768,-2.11966,18.0107,-0.022318,-2.11966,17.9107,-0.022318,-2.11966,17.9107,-0.022318,-2.11966,17.9107,3.27768,-2.11966,17.9107,-0.022318,-2.01966,17.9107,3.27768,-2.01966,18.0107,3.27768,-2.11966,18.0107,-0.022318,-2.11966,18.0107,3.27768,-2.01966,18.0107,-0.022318,-2.01966,17.9107,3.27768,-2.01966,18.0107,3.27768,-2.01966,17.9107,-0.022318,-2.01966,18.0107,-0.022318,-2.01966,14.5107,3.27768,8.08034,14.4107,3.27768,8.08034,14.5107,-0.022319,8.08034,14.4107,-0.022319,8.08034,14.4107,-0.022319,8.08034,14.4107,3.27768,8.08034,14.4107,-0.022319,8.18034,14.4107,3.27768,8.18034,14.5107,3.27768,8.08034,14.5107,-0.022319,8.08034,14.5107,3.27768,8.18034,14.5107,-0.022319,8.18034,14.4107,3.27768,8.18034,14.5107,3.27768,8.18034,14.4107,-0.022319,8.18034,14.5107,-0.022319,8.18034,1.81073,3.27768,8.08034,1.71073,3.27768,8.08034,1.81073,-0.022319,8.08034,1.71073,-0.022319,8.08034,1.71073,-0.022319,8.08034,1.71073,3.27768,8.08034,1.71073,-0.022319,8.18034,1.71073,3.27768,8.18034,1.81073,3.27768,8.08034,1.81073,-0.022319,8.08034,1.81073,3.27768,8.18034,1.81073,-0.022319,8.18034,1.71073,3.27768,8.18034,1.81073,3.27768,8.18034,1.71073,-0.022319,8.18034,1.81073,-0.022319,8.18034,4.01073,3.27768,-1.61966,3.91073,3.27768,-1.61966,4.01073,-0.022318,-1.61966,3.91073,-0.022318,-1.61966,3.91073,-0.022318,-1.61966,3.91073,3.27768,-1.61966,3.91073,-0.022318,-1.51966,3.91073,3.27768,-1.51966,4.01073,3.27768,-1.61966,4.01073,-0.022318,-1.61966,4.01073,3.27768,-1.51966,4.01073,-0.022318,-1.51966,3.91073,3.27768,-1.51966,4.01073,3.27768,-1.51966,3.91073,-0.022318,-1.51966,4.01073,-0.022318,-1.51966,2.91073,3.27768,-1.61966,2.81073,3.27768,-1.61966,2.91073,-0.022318,-1.61966,2.81073,-0.022318,-1.61966,2.81073,-0.022318,-1.61966,2.81073,3.27768,-1.61966,2.81073,-0.022318,-1.51966,2.81073,3.27768,-1.51966,2.91073,3.27768,-1.61966,2.91073,-0.022318,-1.61966,2.91073,3.27768,-1.51966,2.91073,-0.022318,-1.51966,2.81073,3.27768,-1.51966,2.91073,3.27768,-1.51966,2.81073,-0.022318,-1.51966,2.91073,-0.022318,-1.51966,-7.98927,0.477682,-2.11966,-9.98927,0.477682,-2.61966,-9.98927,0.477682,-2.11966,-7.98927,0.477682,-2.61966,-7.98927,0.477682,-2.61966,-7.98927,0.477682,-2.11966,-9.98927,0.477682,-2.61966,-9.98927,0.477682,-2.11966,-10.3893,0.577682,-2.11966,-9.98927,0.477682,-2.11966,-10.3893,0.477682,-2.11966,-7.98927,0.477682,-2.11966,-7.88927,0.477682,-2.11966,-7.88927,0.577682,-2.11966,-7.88927,0.577682,-2.11966,-10.3893,0.577682,-2.11966,-7.88927,0.477682,-2.11966,-7.98927,0.477682,-2.11966,-9.98927,0.477682,-2.11966,-10.3893,0.477682,-2.11966,-7.88927,0.477682,-2.11966,-7.88927,0.477682,-2.61966,-7.88927,0.477682,-2.61966,-7.88927,0.477682,-2.11966,-7.98927,-0.022318,-2.61966,-7.98927,0.477682,-2.11966,-7.98927,-0.022318,-2.11966,-7.98927,0.477682,-2.61966,-7.98927,0.477682,-2.61966,-7.98927,-0.022318,-2.61966,-7.98927,0.477682,-2.11966,-7.98927,-0.022318,-2.11966,-7.88927,0.577682,-2.61966,-7.98927,0.477682,-2.61966,-7.88927,0.477682,-2.61966,-9.98927,0.477682,-2.61966,-10.3893,0.477682,-2.61966,-10.3893,0.577682,-2.61966,-10.3893,0.577682,-2.61966,-7.88927,0.577682,-2.61966,-10.3893,0.477682,-2.61966,-9.98927,0.477682,-2.61966,-7.98927,0.477682,-2.61966,-7.88927,0.477682,-2.61966,-10.3893,0.477682,-2.61966,-10.3893,0.477682,-2.11966,-10.3893,0.477682,-2.61966,-10.3893,0.477682,-2.11966,-9.98927,0.477682,-2.61966,-9.98927,-0.022318,-2.11966,-9.98927,0.477682,-2.11966,-9.98927,-0.022318,-2.61966,-9.98927,-0.022318,-2.61966,-9.98927,0.477682,-2.61966,-9.98927,-0.022318,-2.11966,-9.98927,0.477682,-2.11966,-5.38927,0.477682,-2.11966,-5.88927,0.477682,-2.11966,-5.48927,0.477682,-2.11966,-7.48927,0.477682,-2.11966,-5.38927,0.577682,-2.11966,-7.88927,0.477682,-2.11966,-7.88927,0.577682,-2.11966,-7.88927,0.577682,-2.11966,-5.38927,0.577682,-2.11966,-7.88927,0.477682,-2.11966,-7.48927,0.477682,-2.11966,-5.38927,0.477682,-2.11966,-5.88927,0.477682,-2.11966,-5.48927,0.477682,-2.11966,-7.48927,-0.022318,-2.11966,-7.98927,-0.022318,-2.11966,-7.48927,0.477682,-2.11966,-7.48927,0.477682,-2.11966,-7.48927,-0.022318,-2.11966,-7.98927,-0.022318,-2.11966,-10.4893,0.477682,-2.11966,-9.98927,-0.022318,-2.11966,-10.4893,-0.022318,-2.11966,-10.4893,0.477682,-2.11966,-9.98927,-0.022318,-2.11966,-10.4893,-0.022318,-2.11966,-12.8893,0.577682,-2.11966,-12.4893,0.477682,-2.11966,-12.8893,0.477682,-2.11966,-12.8893,0.577682,-2.11966,-12.4893,0.477682,-2.11966,-12.8893,0.477682,-2.11966,-7.48927,0.477682,-2.61966,-7.98927,-0.022318,-2.61966,-7.48927,-0.022318,-2.61966,-7.48927,0.477682,-2.61966,-7.98927,-0.022318,-2.61966,-7.48927,-0.022318,-2.61966,-7.48927,0.477682,-2.11966,-7.48927,0.477682,-2.61966,-7.48927,0.477682,-2.61966,-7.48927,0.477682,-2.11966,-7.48927,-0.022318,-2.11966,-7.98927,-0.022318,-2.61966,-7.98927,-0.022318,-2.11966,-7.48927,-0.022318,-2.61966,-7.48927,-0.022318,-2.61966,-7.48927,-0.022318,-2.11966,-7.98927,-0.022318,-2.61966,-7.98927,-0.022318,-2.11966,-10.4893,0.477682,-2.61966,-12.4893,0.477682,-2.61966,-12.8893,0.477682,-2.61966,-12.8893,0.577682,-2.61966,-12.8893,0.577682,-2.61966,-12.8893,0.477682,-2.61966,-12.4893,0.477682,-2.61966,-10.4893,0.477682,-2.61966,-10.4893,-0.022318,-2.61966,-9.98927,-0.022318,-2.61966,-10.4893,-0.022318,-2.61966,-9.98927,-0.022318,-2.61966,-7.88927,0.577682,-2.61966,-7.48927,0.477682,-2.61966,-7.88927,0.477682,-2.61966,-5.88927,0.477682,-2.61966,-5.48927,0.477682,-2.61966,-5.38927,0.477682,-2.61966,-5.38927,0.577682,-2.61966,-5.38927,0.577682,-2.61966,-7.88927,0.577682,-2.61966,-5.38927,0.477682,-2.61966,-5.48927,0.477682,-2.61966,-5.88927,0.477682,-2.61966,-7.48927,0.477682,-2.61966,-7.88927,0.477682,-2.61966,-10.4893,0.477682,-2.61966,-10.4893,0.477682,-2.11966,-10.4893,0.477682,-2.61966,-10.4893,0.477682,-2.11966,-9.98927,-0.022318,-2.11966,-10.4893,-0.022318,-2.61966,-10.4893,-0.022318,-2.11966,-9.98927,-0.022318,-2.61966,-9.98927,-0.022318,-2.61966,-9.98927,-0.022318,-2.11966,-10.4893,-0.022318,-2.61966,-10.4893,-0.022318,-2.11966,-5.38927,0.577682,-2.11966,-7.88927,0.577682,-2.61966,-7.88927,0.577682,-2.11966,-5.38927,0.577682,-2.61966,-5.38927,0.577682,-2.61966,-5.38927,0.577682,-2.11966,-7.88927,0.577682,-2.61966,-7.88927,0.577682,-2.11966,-5.88927,0.477682,-2.11966,-5.88927,0.477682,-2.61966,-5.88927,0.477682,-2.61966,-5.88927,0.477682,-2.11966,-5.88927,0.477682,-2.11966,-5.38927,-0.022318,-2.11966,-5.88927,-0.022318,-2.11966,-5.48927,0.477682,-2.11966,-5.38927,0.477682,-2.11966,-5.38927,0.477682,-2.11966,-5.48927,0.477682,-2.11966,-5.38927,-0.022318,-2.11966,-5.88927,0.477682,-2.11966,-5.88927,-0.022318,-2.11966,-5.48927,0.477682,-2.11966,-5.48927,0.477682,-2.61966,-5.38927,0.477682,-2.11966,-5.38927,0.477682,-2.61966,-5.38927,0.477682,-2.61966,-5.38927,0.477682,-2.11966,-5.48927,0.477682,-2.61966,-5.48927,0.477682,-2.11966,-5.38927,0.477682,-2.61966,-5.38927,0.577682,-2.11966,-5.38927,0.477682,-2.11966,-5.38927,0.577682,-2.61966,-5.38927,0.577682,-2.61966,-5.38927,0.477682,-2.61966,-5.38927,0.577682,-2.11966,-5.38927,0.477682,-2.11966,-7.48927,0.477682,-2.61966,-7.48927,-0.022318,-2.11966,-7.48927,0.477682,-2.11966,-7.48927,-0.022318,-2.61966,-7.48927,-0.022318,-2.61966,-7.48927,0.477682,-2.61966,-7.48927,-0.022318,-2.11966,-7.48927,0.477682,-2.11966,-10.4893,-0.022318,-2.61966,-10.4893,0.477682,-2.11966,-10.4893,-0.022318,-2.11966,-10.4893,0.477682,-2.61966,-10.4893,0.477682,-2.61966,-10.4893,-0.022318,-2.61966,-10.4893,0.477682,-2.11966,-10.4893,-0.022318,-2.11966,-12.4893,0.477682,-2.61966,-12.4893,0.477682,-2.11966,-12.4893,0.477682,-2.61966,-12.4893,0.477682,-2.11966,-12.9893,0.477682,-2.11966,-12.4893,-0.022318,-2.11966,-12.9893,-0.022318,-2.11966,-12.9893,0.477682,-2.11966,-12.4893,-0.022318,-2.11966,-12.9893,-0.022318,-2.11966,-12.8893,0.477682,-2.61966,-12.8893,0.477682,-2.11966,-12.8893,0.477682,-2.61966,-12.8893,0.477682,-2.11966,-15.3893,0.577682,-2.11966,-14.9893,0.477682,-2.11966,-15.3893,0.477682,-2.11966,-15.3893,0.577682,-2.11966,-14.9893,0.477682,-2.11966,-15.3893,0.477682,-2.11966,-12.9893,0.477682,-2.61966,-14.9893,0.477682,-2.61966,-15.3893,0.477682,-2.61966,-15.3893,0.577682,-2.61966,-15.3893,0.577682,-2.61966,-15.3893,0.477682,-2.61966,-14.9893,0.477682,-2.61966,-12.9893,0.477682,-2.61966,-12.9893,-0.022318,-2.61966,-12.4893,-0.022318,-2.61966,-12.9893,-0.022318,-2.61966,-12.4893,-0.022318,-2.61966,-5.38927,0.477682,-2.61966,-5.88927,-0.022318,-2.61966,-5.38927,-0.022318,-2.61966,-5.88927,0.477682,-2.61966,-5.48927,0.477682,-2.61966,-5.48927,0.477682,-2.61966,-5.38927,0.477682,-2.61966,-5.88927,0.477682,-2.61966,-5.88927,-0.022318,-2.61966,-5.38927,-0.022318,-2.61966,-5.88927,-0.022318,-2.61966,-5.88927,0.477682,-2.11966,-5.88927,-0.022318,-2.11966,-5.88927,0.477682,-2.61966,-5.88927,0.477682,-2.61966,-5.88927,-0.022318,-2.61966,-5.88927,0.477682,-2.11966,-5.88927,-0.022318,-2.11966,-5.38927,-0.022318,-2.11966,-5.88927,-0.022318,-2.61966,-5.88927,-0.022318,-2.11966,-5.38927,-0.022318,-2.61966,-5.38927,-0.022318,-2.61966,-5.38927,-0.022318,-2.11966,-5.88927,-0.022318,-2.61966,-5.88927,-0.022318,-2.11966,-5.38927,0.477682,-2.11966,-5.38927,-0.022318,-2.61966,-5.38927,-0.022318,-2.11966,-5.38927,0.477682,-2.61966,-5.38927,0.477682,-2.61966,-5.38927,0.477682,-2.11966,-5.38927,-0.022318,-2.61966,-5.38927,-0.022318,-2.11966,-12.4893,0.477682,-2.61966,-12.4893,-0.022318,-2.11966,-12.4893,0.477682,-2.11966,-12.4893,-0.022318,-2.61966,-12.4893,-0.022318,-2.61966,-12.4893,0.477682,-2.61966,-12.4893,-0.022318,-2.11966,-12.4893,0.477682,-2.11966,-12.4893,-0.022318,-2.11966,-12.9893,-0.022318,-2.61966,-12.9893,-0.022318,-2.11966,-12.4893,-0.022318,-2.61966,-12.4893,-0.022318,-2.61966,-12.4893,-0.022318,-2.11966,-12.9893,-0.022318,-2.61966,-12.9893,-0.022318,-2.11966,-12.9893,-0.022318,-2.61966,-12.9893,0.477682,-2.11966,-12.9893,-0.022318,-2.11966,-12.9893,0.477682,-2.61966,-12.9893,0.477682,-2.61966,-12.9893,-0.022318,-2.61966,-12.9893,0.477682,-2.11966,-12.9893,-0.022318,-2.11966,-12.9893,0.477682,-2.61966,-12.9893,0.477682,-2.11966,-12.9893,0.477682,-2.61966,-12.9893,0.477682,-2.11966,-14.9893,0.477682,-2.61966,-14.9893,0.477682,-2.11966,-14.9893,0.477682,-2.61966,-14.9893,0.477682,-2.11966,-15.3893,0.477682,-2.61966,-15.3893,0.477682,-2.11966,-15.3893,0.477682,-2.61966,-15.3893,0.477682,-2.11966,-15.4893,0.477682,-2.11966,-14.9893,-0.022318,-2.11966,-15.4893,-0.022318,-2.11966,-15.4893,0.477682,-2.11966,-14.9893,-0.022318,-2.11966,-15.4893,-0.022318,-2.11966,-17.8893,0.477682,-2.11966,-15.4893,0.477682,-2.11966,-17.4893,0.477682,-2.11966,-17.8893,0.577682,-2.11966,-15.3893,0.477682,-2.11966,-15.3893,0.577682,-2.11966,-15.3893,0.577682,-2.11966,-17.8893,0.577682,-2.11966,-15.3893,0.477682,-2.11966,-15.4893,0.477682,-2.11966,-17.8893,0.477682,-2.11966,-17.4893,0.477682,-2.11966,-15.4893,0.477682,-2.61966,-17.4893,0.477682,-2.61966,-17.8893,0.477682,-2.61966,-17.8893,0.577682,-2.61966,-17.8893,0.577682,-2.61966,-17.8893,0.477682,-2.61966,-17.4893,0.477682,-2.61966,-15.4893,0.477682,-2.61966,-15.4893,-0.022318,-2.61966,-14.9893,-0.022318,-2.61966,-15.4893,-0.022318,-2.61966,-14.9893,-0.022318,-2.61966,-14.9893,0.477682,-2.61966,-14.9893,-0.022318,-2.11966,-14.9893,0.477682,-2.11966,-14.9893,-0.022318,-2.61966,-14.9893,-0.022318,-2.61966,-14.9893,0.477682,-2.61966,-14.9893,-0.022318,-2.11966,-14.9893,0.477682,-2.11966,-15.4893,0.477682,-2.61966,-15.4893,0.477682,-2.11966,-15.4893,0.477682,-2.61966,-15.4893,0.477682,-2.11966,-14.9893,-0.022318,-2.11966,-15.4893,-0.022318,-2.61966,-15.4893,-0.022318,-2.11966,-14.9893,-0.022318,-2.61966,-14.9893,-0.022318,-2.61966,-14.9893,-0.022318,-2.11966,-15.4893,-0.022318,-2.61966,-15.4893,-0.022318,-2.11966,-15.4893,-0.022318,-2.61966,-15.4893,0.477682,-2.11966,-15.4893,-0.022318,-2.11966,-15.4893,0.477682,-2.61966,-15.4893,0.477682,-2.61966,-15.4893,-0.022318,-2.61966,-15.4893,0.477682,-2.11966,-15.4893,-0.022318,-2.11966,-17.4893,0.477682,-2.61966,-17.4893,0.477682,-2.11966,-17.4893,0.477682,-2.61966,-17.4893,0.477682,-2.11966,-17.8893,0.477682,-2.61966,-17.8893,0.477682,-2.11966,-17.8893,0.477682,-2.61966,-17.8893,0.477682,-2.11966,-17.9893,0.477682,-2.11966,-17.4893,-0.022318,-2.11966,-17.9893,-0.022318,-2.11966,-17.4893,0.477682,-2.11966,-17.8893,0.477682,-2.11966,-17.8893,0.477682,-2.11966,-17.9893,0.477682,-2.11966,-17.4893,0.477682,-2.11966,-17.4893,-0.022318,-2.11966,-17.9893,-0.022318,-2.11966,-20.3893,0.577682,-2.11966,-19.9893,0.477682,-2.11966,-20.3893,0.477682,-2.11966,-17.8893,0.477682,-2.11966,-17.8893,0.577682,-2.11966,-17.9893,0.477682,-2.11966,-19.9893,0.477682,-2.11966,-17.9893,0.477682,-2.11966,-17.8893,0.477682,-2.11966,-17.8893,0.577682,-2.11966,-20.3893,0.577682,-2.11966,-20.3893,0.477682,-2.11966,-17.9893,0.477682,-2.61966,-19.9893,0.477682,-2.61966,-20.3893,0.477682,-2.61966,-20.3893,0.577682,-2.61966,-20.3893,0.577682,-2.61966,-20.3893,0.477682,-2.61966,-19.9893,0.477682,-2.61966,-17.9893,0.477682,-2.61966,-17.9893,-0.022318,-2.61966,-17.4893,-0.022318,-2.61966,-17.9893,-0.022318,-2.61966,-17.4893,-0.022318,-2.61966,-17.4893,0.477682,-2.61966,-17.4893,-0.022318,-2.11966,-17.4893,0.477682,-2.11966,-17.4893,-0.022318,-2.61966,-17.4893,-0.022318,-2.61966,-17.4893,0.477682,-2.61966,-17.4893,-0.022318,-2.11966,-17.4893,0.477682,-2.11966,-17.9893,0.477682,-2.61966,-17.9893,0.477682,-2.11966,-17.9893,0.477682,-2.61966,-17.9893,0.477682,-2.11966,-17.4893,-0.022318,-2.11966,-17.9893,-0.022318,-2.61966,-17.9893,-0.022318,-2.11966,-17.4893,-0.022318,-2.61966,-17.4893,-0.022318,-2.61966,-17.4893,-0.022318,-2.11966,-17.9893,-0.022318,-2.61966,-17.9893,-0.022318,-2.11966,-17.9893,-0.022318,-2.61966,-17.9893,0.477682,-2.11966,-17.9893,-0.022318,-2.11966,-17.9893,0.477682,-2.61966,-17.9893,0.477682,-2.61966,-17.9893,-0.022318,-2.61966,-17.9893,0.477682,-2.11966,-17.9893,-0.022318,-2.11966,-19.9893,0.477682,-2.61966,-19.9893,0.477682,-2.11966,-19.9893,0.477682,-2.61966,-19.9893,0.477682,-2.11966,-20.4893,0.477682,-2.11966,-19.9893,-0.022318,-2.11966,-20.4893,-0.022318,-2.11966,-19.9893,0.477682,-2.11966,-20.3893,0.477682,-2.11966,-20.3893,0.477682,-2.11966,-20.4893,0.477682,-2.11966,-19.9893,0.477682,-2.11966,-19.9893,-0.022318,-2.11966,-20.4893,-0.022318,-2.11966,-20.3893,0.477682,-2.61966,-20.3893,0.477682,-2.11966,-20.3893,0.477682,-2.61966,-20.3893,0.477682,-2.11966,-22.8893,0.477682,-2.11966,-22.3893,0.477682,-2.11966,-22.7893,0.477682,-2.11966,-20.4893,0.477682,-2.11966,-22.8893,0.577682,-2.11966,-20.3893,0.477682,-2.11966,-20.3893,0.577682,-2.11966,-20.3893,0.577682,-2.11966,-22.8893,0.577682,-2.11966,-20.3893,0.477682,-2.11966,-20.4893,0.477682,-2.11966,-22.8893,0.477682,-2.11966,-22.3893,0.477682,-2.11966,-22.7893,0.477682,-2.11966,-20.4893,0.477682,-2.61966,-22.3893,0.477682,-2.61966,-22.7893,0.477682,-2.61966,-22.8893,0.477682,-2.61966,-22.8893,0.577682,-2.61966,-22.8893,0.577682,-2.61966,-22.8893,0.477682,-2.61966,-22.7893,0.477682,-2.61966,-22.3893,0.477682,-2.61966,-20.4893,0.477682,-2.61966,-20.4893,-0.022318,-2.61966,-19.9893,-0.022318,-2.61966,-20.4893,-0.022318,-2.61966,-19.9893,-0.022318,-2.61966,-19.9893,0.477682,-2.61966,-19.9893,-0.022318,-2.11966,-19.9893,0.477682,-2.11966,-19.9893,-0.022318,-2.61966,-19.9893,-0.022318,-2.61966,-19.9893,0.477682,-2.61966,-19.9893,-0.022318,-2.11966,-19.9893,0.477682,-2.11966,-19.9893,-0.022318,-2.11966,-20.4893,-0.022318,-2.61966,-20.4893,-0.022318,-2.11966,-19.9893,-0.022318,-2.61966,-19.9893,-0.022318,-2.61966,-19.9893,-0.022318,-2.11966,-20.4893,-0.022318,-2.61966,-20.4893,-0.022318,-2.11966,-20.4893,-0.022318,-2.61966,-20.4893,0.477682,-2.11966,-20.4893,-0.022318,-2.11966,-20.4893,0.477682,-2.61966,-20.4893,0.477682,-2.61966,-20.4893,-0.022318,-2.61966,-20.4893,0.477682,-2.11966,-20.4893,-0.022318,-2.11966,-20.4893,0.477682,-2.61966,-20.4893,0.477682,-2.11966,-20.4893,0.477682,-2.61966,-20.4893,0.477682,-2.11966,-22.3893,0.477682,-2.61966,-22.3893,0.477682,-2.11966,-22.3893,0.477682,-2.61966,-22.3893,0.477682,-2.11966,-22.7893,0.477682,-2.11966,-22.8893,0.477682,-2.61966,-22.8893,0.477682,-2.11966,-22.7893,0.477682,-2.61966,-22.7893,0.477682,-2.61966,-22.7893,0.477682,-2.11966,-22.8893,0.477682,-2.61966,-22.8893,0.477682,-2.11966,-22.8893,0.477682,-2.11966,-22.3893,-0.022318,-2.11966,-22.8893,-0.022318,-2.11966,-22.7893,0.477682,-2.11966,-22.3893,0.477682,-2.11966,-22.7893,0.477682,-2.11966,-22.3893,-0.022318,-2.11966,-22.3893,0.477682,-2.11966,-22.8893,0.477682,-2.11966,-22.8893,-0.022318,-2.11966,-22.8893,0.477682,-2.61966,-22.8893,0.577682,-2.11966,-22.8893,0.477682,-2.11966,-22.8893,0.577682,-2.61966,-22.8893,0.577682,-2.61966,-22.8893,0.477682,-2.61966,-22.8893,0.577682,-2.11966,-22.8893,0.477682,-2.11966,-22.8893,-0.022318,-2.61966,-22.3893,-0.022318,-2.61966,-22.8893,-0.022318,-2.61966,-22.3893,-0.022318,-2.61966,-22.3893,0.477682,-2.61966,-22.3893,-0.022318,-2.11966,-22.3893,0.477682,-2.11966,-22.3893,-0.022318,-2.61966,-22.3893,-0.022318,-2.61966,-22.3893,0.477682,-2.61966,-22.3893,-0.022318,-2.11966,-22.3893,0.477682,-2.11966,-22.8893,-0.022318,-2.61966,-22.8893,-0.022318,-2.11966,-22.8893,-0.022318,-2.61966,-22.8893,-0.022318,-2.11966,-22.3893,-0.022318,-2.11966,-22.8893,-0.022318,-2.61966,-22.8893,-0.022318,-2.11966,-22.3893,-0.022318,-2.61966,-22.3893,-0.022318,-2.61966,-22.3893,-0.022318,-2.11966,-22.8893,-0.022318,-2.61966,-22.8893,-0.022318,-2.11966,20.5107,3.27768,8.38034,15.9107,3.27768,1.48033,20.5107,3.27768,9.18034,9.71074,3.27768,1.48033,9.71074,3.27768,1.38033,6.01072,3.27768,5.58034,-3.28926,3.27768,5.58034,-3.28926,3.27768,5.48034,-4.78928,3.27768,9.18034,20.5107,3.27768,-4.31965,20.5107,3.27768,-5.11965,15.9107,3.27768,1.38033,6.01072,3.27768,5.48034,4.01072,3.27768,5.48034,4.01072,3.27768,-1.51966,2.91073,3.27768,-1.51966,-4.78928,3.27768,-5.11965,2.91073,3.27768,5.48034,15.9107,3.27768,1.48033,15.9107,3.27768,1.38033,9.71074,3.27768,1.48033,9.71074,3.27768,1.38033,6.01072,3.27768,5.48034,4.01072,3.27768,5.48034,6.01072,3.27768,5.58034,2.91073,3.27768,5.48034,-3.28926,3.27768,5.58034,-3.28926,3.27768,5.48034,-20.5893,3.57768,-1.11966,-30.5893,3.57768,-11.1197,-30.5893,3.57768,-1.11966,-20.5893,3.57768,-11.1197,20.5107,-0.222318,-4.01966,23.3498,-0.222318,-3.63441,20.5107,-0.222319,8.08034,24.9107,-0.222318,-4.01966,24.2498,-0.222318,-3.63441,24.2498,-0.222318,-2.73442,23.3498,-0.222318,-2.73442,24.9107,-0.222319,8.08034,24.9107,-0.222318,-4.01966,24.2498,-0.222318,-2.73442,24.9107,-0.222319,8.08034,23.3498,-0.222318,-2.73442,23.3498,-0.222318,-3.63441,20.5107,-0.222319,8.08034,24.2498,-0.222318,-3.63441,20.5107,-0.222318,-4.01966,-30.0893,-0.222318,2.58033,-22.3893,-0.222319,12.4803,-30.0893,-0.222319,12.4803,-8.08927,-0.222318,2.58033,-8.08927,-0.222319,12.4803,-8.08927,-0.222319,12.4803,-8.08927,-0.222318,2.58033,-22.3893,-0.222319,12.4803,-30.0893,-0.222318,2.58033,-30.0893,-0.222319,12.4803,2.91073,3.57768,5.48034,4.01072,3.57768,5.48034,2.91073,3.27768,5.48034,4.01072,3.27768,5.48034,4.01072,3.57768,-1.51966,4.01072,3.27768,-1.51966,4.01072,3.57768,5.48034,4.01072,3.27768,5.48034,2.91073,3.27768,-1.51966,2.91073,3.57768,-1.51966,2.91073,3.27768,5.48034,2.91073,3.57768,5.48034,4.01072,3.57768,-1.51966,2.91073,3.57768,-1.51966,4.01072,3.27768,-1.51966,2.91073,3.27768,-1.51966,-4.78928,3.57768,-5.11965,20.5107,3.27768,-5.11965,-4.78928,3.27768,-5.11965,20.5107,3.57768,-5.11965,20.5107,3.27768,8.38034,20.5107,3.57768,9.18034,20.5107,3.27768,9.18034,20.5107,3.57768,-5.11965,20.5107,3.27768,-4.31965,20.5107,3.27768,-5.11965,20.5107,3.27768,9.18034,-4.78928,3.57768,9.18034,-4.78928,3.27768,9.18034,20.5107,3.57768,9.18034,-30.5893,3.57768,-11.1197,-20.5893,3.27768,-11.1197,-30.5893,3.27768,-11.1197,-20.5893,3.57768,-11.1197,-30.5893,3.57768,-11.1197,-30.5893,3.27768,-1.11966,-30.5893,3.57768,-1.11966,-30.5893,3.27768,-11.1197,-20.5893,3.27768,-11.1197,-20.5893,3.57768,-1.11966,-20.5893,3.27768,-1.11966,-20.5893,3.57768,-11.1197,-20.5893,3.57768,-1.11966,-30.5893,3.27768,-1.11966,-20.5893,3.27768,-1.11966,-30.5893,3.57768,-1.11966,-21.2893,3.27768,-9.31967,-23.4893,-0.022317,-9.31967,-21.2893,-0.022317,-9.31967,-23.4893,3.27768,-9.31967,-23.4893,3.27768,-9.31967,-21.2893,3.27768,-9.31967,-23.4893,-0.022317,-9.31967,-21.2893,-0.022317,-9.31967,14.5107,3.27768,8.08034,1.81073,-0.022319,8.08034,14.5107,-0.022319,8.08034,1.81073,3.27768,8.08034,1.81073,3.27768,8.08034,14.5107,3.27768,8.08034,1.81073,-0.022319,8.08034,14.5107,-0.022319,8.08034,-25.6893,-0.022317,-9.51967,-25.6893,3.27768,-9.31967,-25.6893,-0.022317,-9.31967,-25.6893,3.27768,-10.6197,-25.6893,-0.022317,-10.6197,-25.6893,-0.022317,-10.6197,-25.6893,-0.022317,-9.51967,-25.6893,3.27768,-10.6197,-25.6893,3.27768,-9.31967,-25.6893,-0.022317,-9.31967,-25.6893,-0.022317,-9.31967,-25.6893,3.27768,-8.41967,-25.6893,-0.022317,-8.41967,-25.6893,3.27768,-9.31967,-25.6893,3.27768,-9.31967,-25.6893,-0.022317,-9.31967,-25.6893,3.27768,-8.41967,-25.6893,-0.022317,-8.41967,-25.6893,3.27768,-9.31967,-24.5893,-0.022317,-9.31967,-25.6893,-0.022317,-9.31967,-24.5893,3.27768,-9.31967,-24.5893,3.27768,-9.31967,-25.6893,3.27768,-9.31967,-24.5893,-0.022317,-9.31967,-25.6893,-0.022317,-9.31967,-22.3893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-22.3893,-0.022317,-5.11965,-21.2893,3.27768,-5.11965,-21.2893,3.27768,-5.11965,-22.3893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-22.3893,-0.022317,-5.11965,-30.0893,3.27768,-5.11965,-25.6893,-0.022317,-5.11965,-30.0893,-0.022317,-5.11965,-25.6893,3.27768,-5.11965,-25.6893,3.27768,-5.11965,-30.0893,3.27768,-5.11965,-25.6893,-0.022317,-5.11965,-30.0893,-0.022317,-5.11965,-25.6893,3.27768,-7.31967,-25.6893,-0.022317,-5.11965,-25.6893,3.27768,-5.11965,-25.6893,-0.022317,-7.31967,-25.6893,-0.022317,-7.31967,-25.6893,3.27768,-7.31967,-25.6893,-0.022317,-5.11965,-25.6893,3.27768,-5.11965,-23.4893,-0.022317,-5.11965,-23.4893,3.27768,-5.11965,-23.4893,3.27768,-5.11965,-23.4893,-0.022317,-5.11965,-21.2893,-1.82232,-5.11965,-30.0893,-1.82232,-10.6197,-21.2893,-1.82232,-10.6197,24.9107,-1.82232,6.98034,20.5107,-1.82232,-4.01966,24.9107,-1.82232,-4.01966,26.0107,-1.82232,6.98034,26.0107,-1.82232,9.18034,25.2107,-1.82232,6.98034,11.7107,-1.82232,-4.01966,11.7107,-1.82232,9.18034,11.7107,-1.82232,-4.31965,11.7107,-1.82232,-5.11965,11.7107,-1.82232,12.4803,11.7107,-1.82232,13.5803,-20.9893,-1.82232,-5.11965,-30.0893,-1.82232,2.58033,-30.0893,-1.82232,11.3803,-30.3893,-1.82232,11.3803,-31.1893,-1.82232,11.3803,-31.1893,-1.82232,13.5803,-12.8893,0.577682,-2.11966,-15.3893,0.577682,-2.61966,-15.3893,0.577682,-2.11966,-12.8893,0.577682,-2.61966,-17.8893,0.577682,-2.61966,-17.8893,0.577682,-2.11966,-10.3893,0.577682,-2.11966,-12.8893,0.577682,-2.61966,-12.8893,0.577682,-2.11966,-10.3893,0.577682,-2.61966,-20.3893,0.577682,-2.61966,-20.3893,0.577682,-2.11966,-7.88927,0.577682,-2.11966,-10.3893,0.577682,-2.61966,-10.3893,0.577682,-2.11966,-7.88927,0.577682,-2.61966,-20.3893,0.577682,-2.11966,-22.8893,0.577682,-2.61966,-22.8893,0.577682,-2.11966,-20.3893,0.577682,-2.61966,-4.78928,3.57768,9.18034,2.91073,3.57768,5.48034,-4.78928,3.57768,-5.11965,20.5107,3.57768,9.18034,4.01072,3.57768,5.48034,4.01072,3.57768,-1.51966,2.91073,3.57768,-1.51966,20.5107,3.57768,-5.11965,4.01072,-0.022319,4.78033,4.01072,3.27768,5.48034,4.01072,-0.022319,5.48034,4.01072,3.27768,-1.51966,4.01072,-0.022318,-1.51966,-4.78928,3.57768,-5.11965,-4.78928,3.27768,9.18034,-4.78928,3.57768,9.18034,-4.78928,3.27768,-5.11965,2.91073,-0.022319,4.78033,2.91073,3.27768,5.48034,2.91073,-0.022319,5.48034,2.91073,3.27768,-1.51966,2.91073,-0.022318,-1.51966,2.91073,-0.022318,-1.51966,2.91073,-0.022319,4.78033,2.91073,3.27768,-1.51966,2.91073,3.27768,5.48034,2.91073,-0.022319,5.48034,-2.43927,3.27768,-1.86967,-2.53927,3.27768,-1.86967,-2.43927,-0.022318,-1.86967,-2.53927,-0.022318,-1.86967,-2.53927,-0.022318,-1.76967,-2.53927,-0.022318,-1.86967,-2.53927,-0.022318,-1.66966,-2.63927,-0.022318,-1.66966,-2.63927,-0.022318,-1.76967,-2.43927,-0.022318,-1.76967,-2.43927,-0.022318,-1.86967,-2.53927,3.27768,-1.96967,-2.53927,-0.022318,-1.96967,-2.53927,3.27768,-1.86967,-2.53927,-0.022318,-1.86967,-2.63927,3.27768,-1.86967,-2.63927,3.27768,-1.76967,-2.73927,3.27768,-1.86967,-2.73927,3.27768,-1.76967,-2.53927,3.27768,-1.86967,-2.53927,3.27768,-1.76967,-2.53927,3.27768,-1.96967,-2.53927,3.27768,-1.66966,-2.63927,3.27768,-1.96967,-2.63927,3.27768,-1.66966,-2.43927,3.27768,-1.86967,-2.43927,3.27768,-1.76967,-2.43927,3.27768,-1.86967,-2.43927,-0.022318,-1.86967,-2.43927,3.27768,-1.76967,-2.43927,-0.022318,-1.76967,-2.63927,-0.022318,-1.76967,-2.63927,3.27768,-1.76967,-2.63927,-0.022318,-1.66966,-2.63927,3.27768,-1.66966,-2.63927,-0.022318,-1.86967,-2.73927,-0.022318,-1.76967,-2.73927,-0.022318,-1.86967,-2.53927,-0.022318,-1.96967,-2.63927,-0.022318,-1.96967,-2.53927,3.27768,-1.76967,-2.43927,3.27768,-1.76967,-2.53927,-0.022318,-1.76967,-2.43927,-0.022318,-1.76967,-2.53927,3.27768,-1.76967,-2.53927,-0.022318,-1.76967,-2.53927,3.27768,-1.66966,-2.53927,-0.022318,-1.66966,-2.63927,3.27768,-1.66966,-2.53927,3.27768,-1.66966,-2.63927,-0.022318,-1.66966,-2.53927,-0.022318,-1.66966,-2.53927,3.27768,-1.96967,-2.63927,3.27768,-1.96967,-2.53927,-0.022318,-1.96967,-2.63927,-0.022318,-1.96967,-2.63927,-0.022318,-1.96967,-2.63927,3.27768,-1.96967,-2.63927,-0.022318,-1.86967,-2.63927,3.27768,-1.86967,-2.63927,3.27768,-1.86967,-2.73927,3.27768,-1.86967,-2.63927,-0.022318,-1.86967,-2.73927,-0.022318,-1.86967,-2.73927,-0.022318,-1.86967,-2.73927,3.27768,-1.86967,-2.73927,-0.022318,-1.76967,-2.73927,3.27768,-1.76967,-2.73927,3.27768,-1.76967,-2.63927,3.27768,-1.76967,-2.73927,-0.022318,-1.76967,-2.63927,-0.022318,-1.76967,4.01072,-0.022318,-1.51966,4.01072,-0.022319,4.78033,4.01072,3.27768,-1.51966,4.01072,3.27768,5.48034,4.01072,-0.022319,5.48034,-30.0893,-1.82232,2.58033,-30.0893,-0.722318,2.58033,-30.0893,-1.82232,11.3803,-30.0893,-0.722319,11.3803,-8.08927,-0.722319,12.4803,-8.08927,-0.722318,2.58033,-30.0893,-0.722319,12.4803,-30.0893,-0.722319,11.3803,-30.0893,-0.722318,2.58033,24.9107,-0.722318,-4.01966,24.9107,-1.82232,-4.01966,24.9107,-0.722319,6.98034,24.9107,-1.82232,6.98034,24.9107,-0.722318,-4.01966,20.5107,-0.722318,-4.01966,24.9107,-1.82232,-4.01966,20.5107,-1.82232,-4.01966,24.9107,-0.722319,6.98034,24.9107,-0.722318,-4.01966,24.9107,-0.722319,8.08034,24.2498,-0.722318,-2.73442,23.3498,-0.722318,-2.73442,23.3498,-0.722318,-3.63441,20.5107,-0.722319,8.08034,24.2498,-0.722318,-3.63441,20.5107,-0.722318,-4.01966,2.91073,3.27768,5.48034,-3.28926,-0.022319,5.48034,2.91073,-0.022319,5.48034,-3.28926,3.27768,5.48034,-3.28926,3.27768,5.48034,2.91073,3.27768,5.48034,-3.28926,-0.022319,5.48034,2.91073,-0.022319,5.48034,4.01072,3.27768,5.48034,4.01072,-0.022319,5.48034,4.01072,3.27768,5.48034,4.01072,-0.022319,5.48034,6.01072,3.27768,5.48034,6.01072,-0.022319,5.48034,6.01072,3.27768,5.48034,6.01072,-0.022319,5.48034,6.01072,3.27768,5.58034,-3.28926,3.27768,5.58034,6.01072,-0.022319,5.58034,-3.28926,-0.022319,5.58034,-3.28926,3.27768,5.48034,-3.28926,-0.022319,5.48034,-3.28926,3.27768,5.58034,-3.28926,-0.022319,5.58034,6.01072,-0.022319,5.48034,6.01072,3.27768,5.48034,6.01072,-0.022319,5.58034,6.01072,3.27768,5.58034,15.9107,3.27768,1.48033,9.71074,3.27768,1.48033,15.9107,-0.022318,1.48033,9.71074,-0.022318,1.48033,15.9107,-0.022318,1.38033,15.9107,3.27768,1.38033,15.9107,-0.022318,1.48033,15.9107,3.27768,1.48033,9.71074,3.27768,1.38033,9.71074,-0.022318,1.38033,9.71074,3.27768,1.48033,9.71074,-0.022318,1.48033,9.71074,3.27768,1.38033,15.9107,3.27768,1.38033,9.71074,-0.022318,1.38033,15.9107,-0.022318,1.38033,4.01072,3.27768,-1.51966,12.8107,-0.022318,-1.51966,4.01072,-0.022318,-1.51966,12.8107,3.27768,-1.51966,12.8107,3.27768,-1.51966,4.01072,3.27768,-1.51966,12.8107,-0.022318,-1.51966,4.01072,-0.022318,-1.51966,2.91073,3.27768,-1.51966,2.91073,-0.022318,-1.51966,2.91073,3.27768,-1.51966,2.91073,-0.022318,-1.51966,1.81073,3.27768,-1.51966,1.81073,-0.022318,-1.51966,1.81073,3.27768,-1.51966,1.81073,-0.022318,-1.51966,18.0107,3.27768,-2.11966,18.0107,-0.022319,6.18034,18.0107,3.27768,6.18034,18.0107,-0.022319,5.88034,18.0107,-0.022318,-1.81966,18.0107,-0.022318,-2.11966,18.0107,-0.022318,-2.11966,18.0107,3.27768,-2.11966,18.0107,-0.022318,-1.81966,18.0107,-0.022319,5.88034,18.0107,-0.022319,6.18034,18.0107,3.27768,6.18034,10.2107,3.27768,-4.01966,20.5107,-0.022318,-4.01966,24.9107,3.27768,-4.01966,24.9107,-0.222318,-4.01966,20.5107,-0.222318,-4.01966,10.2107,-0.022318,-4.01966,24.9107,3.27768,-4.01966,24.9107,-0.222318,-4.01966,24.9107,3.27768,8.08034,24.9107,-0.222319,8.08034,24.9107,-0.722318,-4.01966,20.5107,-0.722318,-4.01966,10.2107,3.27768,-4.31965,10.2107,-0.022317,-4.31965,10.2107,3.27768,-4.01966,10.2107,-0.022318,-4.01966,25.2107,3.27768,8.38034,24.9107,3.27768,8.08034,20.5107,3.27768,8.38034,14.5107,3.27768,8.38034,14.5107,3.27768,8.08034,25.2107,3.27768,-4.31965,24.9107,3.27768,-4.01966,20.5107,3.27768,-4.31965,10.2107,3.27768,-4.01966,10.2107,3.27768,-4.31965,14.5107,3.27768,8.08034,24.9107,3.27768,8.08034,14.5107,-0.022319,8.08034,20.5107,-0.022319,8.08034,20.5107,-0.222319,8.08034,24.9107,-0.222319,8.08034,24.9107,-0.722318,-4.01966,24.9107,-0.722319,6.98034,24.9107,-0.722319,8.08034,20.5107,3.27768,-4.31965,25.2107,3.27768,-4.31965,10.2107,3.27768,-4.31965,10.2107,-0.022317,-4.31965,11.7107,-0.022317,-4.31965,11.7107,-1.82232,-4.31965,25.2107,-1.82232,-4.31965,25.2107,-1.82232,-4.31965,25.2107,3.27768,-4.31965,25.2107,-1.82232,6.98034,25.2107,-0.022319,6.98034,25.2107,-0.022319,8.38034,25.2107,3.27768,8.38034,20.5107,3.27768,8.38034,14.5107,3.27768,8.38034,25.2107,3.27768,8.38034,25.2107,-0.022319,8.38034,14.5107,-0.022319,8.38034,14.5107,3.27768,8.08034,14.5107,-0.022319,8.08034,14.5107,3.27768,8.38034,14.5107,-0.022319,8.38034,20.5107,-0.722319,8.08034,24.9107,-0.722319,8.08034,-25.5893,3.27768,-10.6197,-25.6893,3.27768,-10.5197,-25.6893,3.27768,-10.6197,-25.5893,3.27768,-10.5197,-25.5893,3.27768,-9.31967,-25.6893,3.27768,-9.21967,-25.6893,3.27768,-9.31967,-25.5893,3.27768,-9.21967,-21.2893,3.27768,-9.31967,-21.3893,3.27768,-9.21967,-21.3893,3.27768,-9.31967,-21.2893,3.27768,-9.21967,-23.3893,3.27768,-9.31967,-23.4893,3.27768,-9.21967,-23.4893,3.27768,-9.31967,-23.3893,3.27768,-9.21967,-25.5893,3.27768,-8.51967,-25.6893,3.27768,-8.41967,-25.6893,3.27768,-8.51967,-25.5893,3.27768,-8.41967,-24.5893,3.27768,-9.31967,-24.6893,3.27768,-9.21967,-24.6893,3.27768,-9.31967,-24.5893,3.27768,-9.21967,-25.5893,3.27768,-7.31967,-25.6893,3.27768,-7.21967,-25.6893,3.27768,-7.31967,-25.5893,3.27768,-7.21967,-29.9893,3.27768,-5.11965,-30.0893,3.27768,-5.01965,-30.0893,3.27768,-5.11965,-29.9893,3.27768,-5.01965,-21.2893,3.27768,-5.11965,-21.3893,3.27768,-5.01965,-21.3893,3.27768,-5.11965,-21.2893,3.27768,-5.01965,-25.5893,3.27768,-5.11965,-25.6893,3.27768,-5.01965,-25.6893,3.27768,-5.11965,-25.5893,3.27768,-5.01965,-23.4893,3.27768,-5.11965,-23.5893,3.27768,-5.01965,-23.5893,3.27768,-5.11965,-23.4893,3.27768,-5.01965,-22.2893,3.27768,-5.11965,-22.3893,3.27768,-5.01965,-22.3893,3.27768,-5.11965,-22.2893,3.27768,-5.01965,1.81073,3.27768,-1.61966,1.71073,3.27768,-1.51966,1.71073,3.27768,-1.61966,1.81073,3.27768,-1.51966,12.9107,3.27768,-1.61966,12.8107,3.27768,-1.51966,12.8107,3.27768,-1.61966,12.9107,3.27768,-1.51966,18.0107,3.27768,6.08034,17.9107,3.27768,6.18034,17.9107,3.27768,6.08034,18.0107,3.27768,6.18034,18.0107,3.27768,-2.11966,17.9107,3.27768,-2.01966,17.9107,3.27768,-2.11966,18.0107,3.27768,-2.01966,14.5107,3.27768,8.08034,14.4107,3.27768,8.18034,14.4107,3.27768,8.08034,14.5107,3.27768,8.18034,1.81073,3.27768,8.08034,1.71073,3.27768,8.18034,1.71073,3.27768,8.08034,1.81073,3.27768,8.18034,4.01073,3.27768,-1.61966,3.91073,3.27768,-1.51966,3.91073,3.27768,-1.61966,4.01073,3.27768,-1.51966,2.91073,3.27768,-1.61966,2.81073,3.27768,-1.51966,2.81073,3.27768,-1.61966,2.91073,3.27768,-1.51966,-25.6893,3.27768,-10.6197,-25.5893,-0.022317,-10.6197,-25.6893,-0.022317,-10.6197,-25.5893,3.27768,-10.6197,-25.6893,3.27768,-10.6197,-25.6893,-0.022317,-10.5197,-25.6893,3.27768,-10.5197,-25.6893,-0.022317,-10.6197,-25.5893,-0.022317,-10.6197,-25.5893,3.27768,-10.5197,-25.5893,-0.022317,-10.5197,-25.5893,3.27768,-10.6197,-25.5893,3.27768,-10.5197,-25.6893,-0.022317,-10.5197,-25.5893,-0.022317,-10.5197,-25.6893,3.27768,-10.5197,-25.6893,3.27768,-9.31967,-25.5893,-0.022317,-9.31967,-25.6893,-0.022317,-9.31967,-25.5893,3.27768,-9.31967,-25.6893,3.27768,-9.31967,-25.6893,-0.022317,-9.21967,-25.6893,3.27768,-9.21967,-25.6893,-0.022317,-9.31967,-25.5893,-0.022317,-9.31967,-25.5893,3.27768,-9.21967,-25.5893,-0.022317,-9.21967,-25.5893,3.27768,-9.31967,-25.5893,3.27768,-9.21967,-25.6893,-0.022317,-9.21967,-25.5893,-0.022317,-9.21967,-25.6893,3.27768,-9.21967,-21.3893,3.27768,-9.31967,-21.2893,-0.022317,-9.31967,-21.3893,-0.022317,-9.31967,-21.2893,3.27768,-9.31967,-21.3893,3.27768,-9.31967,-21.3893,-0.022317,-9.21967,-21.3893,3.27768,-9.21967,-21.3893,-0.022317,-9.31967,-21.2893,-0.022317,-9.31967,-21.2893,3.27768,-9.21967,-21.2893,-0.022317,-9.21967,-21.2893,3.27768,-9.31967,-21.2893,3.27768,-9.21967,-21.3893,-0.022317,-9.21967,-21.2893,-0.022317,-9.21967,-21.3893,3.27768,-9.21967,-23.4893,3.27768,-9.31967,-23.3893,-0.022317,-9.31967,-23.4893,-0.022317,-9.31967,-23.3893,3.27768,-9.31967,-23.4893,3.27768,-9.31967,-23.4893,-0.022317,-9.21967,-23.4893,3.27768,-9.21967,-23.4893,-0.022317,-9.31967,-23.3893,-0.022317,-9.31967,-23.3893,3.27768,-9.21967,-23.3893,-0.022317,-9.21967,-23.3893,3.27768,-9.31967,-23.3893,3.27768,-9.21967,-23.4893,-0.022317,-9.21967,-23.3893,-0.022317,-9.21967,-23.4893,3.27768,-9.21967,-25.6893,3.27768,-8.51967,-25.5893,-0.022317,-8.51967,-25.6893,-0.022317,-8.51967,-25.5893,3.27768,-8.51967,-25.6893,3.27768,-8.51967,-25.6893,-0.022317,-8.41967,-25.6893,3.27768,-8.41967,-25.6893,-0.022317,-8.51967,-25.5893,-0.022317,-8.51967,-25.5893,3.27768,-8.41967,-25.5893,-0.022317,-8.41967,-25.5893,3.27768,-8.51967,-25.5893,3.27768,-8.41967,-25.6893,-0.022317,-8.41967,-25.5893,-0.022317,-8.41967,-25.6893,3.27768,-8.41967,-24.6893,3.27768,-9.31967,-24.5893,-0.022317,-9.31967,-24.6893,-0.022317,-9.31967,-24.5893,3.27768,-9.31967,-24.6893,3.27768,-9.31967,-24.6893,-0.022317,-9.21967,-24.6893,3.27768,-9.21967,-24.6893,-0.022317,-9.31967,-24.5893,-0.022317,-9.31967,-24.5893,3.27768,-9.21967,-24.5893,-0.022317,-9.21967,-24.5893,3.27768,-9.31967,-24.5893,3.27768,-9.21967,-24.6893,-0.022317,-9.21967,-24.5893,-0.022317,-9.21967,-24.6893,3.27768,-9.21967,-25.6893,3.27768,-7.31967,-25.5893,-0.022317,-7.31967,-25.6893,-0.022317,-7.31967,-25.5893,3.27768,-7.31967,-25.6893,3.27768,-7.31967,-25.6893,-0.022317,-7.21967,-25.6893,3.27768,-7.21967,-25.6893,-0.022317,-7.31967,-25.5893,-0.022317,-7.31967,-25.5893,3.27768,-7.21967,-25.5893,-0.022317,-7.21967,-25.5893,3.27768,-7.31967,-25.5893,3.27768,-7.21967,-25.6893,-0.022317,-7.21967,-25.5893,-0.022317,-7.21967,-25.6893,3.27768,-7.21967,-30.0893,3.27768,-5.11965,-29.9893,-0.022317,-5.11965,-30.0893,-0.022317,-5.11965,-29.9893,3.27768,-5.11965,-30.0893,3.27768,-5.11965,-30.0893,-0.022317,-5.01965,-30.0893,3.27768,-5.01965,-30.0893,-0.022317,-5.11965,-29.9893,-0.022317,-5.11965,-29.9893,3.27768,-5.01965,-29.9893,-0.022317,-5.01965,-29.9893,3.27768,-5.11965,-29.9893,3.27768,-5.01965,-30.0893,-0.022317,-5.01965,-29.9893,-0.022317,-5.01965,-30.0893,3.27768,-5.01965,-21.3893,3.27768,-5.11965,-21.2893,-0.022317,-5.11965,-21.3893,-0.022317,-5.11965,-21.2893,3.27768,-5.11965,-21.3893,3.27768,-5.11965,-21.3893,-0.022317,-5.01965,-21.3893,3.27768,-5.01965,-21.3893,-0.022317,-5.11965,-21.2893,-0.022317,-5.11965,-21.2893,3.27768,-5.01965,-21.2893,-0.022317,-5.01965,-21.2893,3.27768,-5.11965,-21.2893,3.27768,-5.01965,-21.3893,-0.022317,-5.01965,-21.2893,-0.022317,-5.01965,-21.3893,3.27768,-5.01965,-25.6893,3.27768,-5.11965,-25.5893,-0.022317,-5.11965,-25.6893,-0.022317,-5.11965,-25.5893,3.27768,-5.11965,-25.6893,3.27768,-5.11965,-25.6893,-0.022317,-5.01965,-25.6893,3.27768,-5.01965,-25.6893,-0.022317,-5.11965,-25.5893,-0.022317,-5.11965,-25.5893,3.27768,-5.01965,-25.5893,-0.022317,-5.01965,-25.5893,3.27768,-5.11965,-25.5893,3.27768,-5.01965,-25.6893,-0.022317,-5.01965,-25.5893,-0.022317,-5.01965,-25.6893,3.27768,-5.01965,-23.5893,3.27768,-5.11965,-23.4893,-0.022317,-5.11965,-23.5893,-0.022317,-5.11965,-23.4893,3.27768,-5.11965,-23.5893,3.27768,-5.11965,-23.5893,-0.022317,-5.01965,-23.5893,3.27768,-5.01965,-23.5893,-0.022317,-5.11965,-23.4893,-0.022317,-5.11965,-23.4893,3.27768,-5.01965,-23.4893,-0.022317,-5.01965,-23.4893,3.27768,-5.11965,-23.4893,3.27768,-5.01965,-23.5893,-0.022317,-5.01965,-23.4893,-0.022317,-5.01965,-23.5893,3.27768,-5.01965,-22.3893,3.27768,-5.11965,-22.2893,-0.022317,-5.11965,-22.3893,-0.022317,-5.11965,-22.2893,3.27768,-5.11965,-22.3893,3.27768,-5.11965,-22.3893,-0.022317,-5.01965,-22.3893,3.27768,-5.01965,-22.3893,-0.022317,-5.11965,-22.2893,-0.022317,-5.11965,-22.2893,3.27768,-5.01965,-22.2893,-0.022317,-5.01965,-22.2893,3.27768,-5.11965,-22.2893,3.27768,-5.01965,-22.3893,-0.022317,-5.01965,-22.2893,-0.022317,-5.01965,-22.3893,3.27768,-5.01965,1.71073,3.27768,-1.61966,1.81073,-0.022318,-1.61966,1.71073,-0.022318,-1.61966,1.81073,3.27768,-1.61966,1.71073,3.27768,-1.61966,1.71073,-0.022318,-1.51966,1.71073,3.27768,-1.51966,1.71073,-0.022318,-1.61966,1.81073,-0.022318,-1.61966,1.81073,3.27768,-1.51966,1.81073,-0.022318,-1.51966,1.81073,3.27768,-1.61966,1.81073,3.27768,-1.51966,1.71073,-0.022318,-1.51966,1.81073,-0.022318,-1.51966,1.71073,3.27768,-1.51966,12.8107,3.27768,-1.61966,12.9107,-0.022318,-1.61966,12.8107,-0.022318,-1.61966,12.9107,3.27768,-1.61966,12.8107,3.27768,-1.61966,12.8107,-0.022318,-1.51966,12.8107,3.27768,-1.51966,12.8107,-0.022318,-1.61966,12.9107,-0.022318,-1.61966,12.9107,3.27768,-1.51966,12.9107,-0.022318,-1.51966,12.9107,3.27768,-1.61966,12.9107,3.27768,-1.51966,12.8107,-0.022318,-1.51966,12.9107,-0.022318,-1.51966,12.8107,3.27768,-1.51966,17.9107,3.27768,6.08034,18.0107,-0.022319,6.08034,17.9107,-0.022319,6.08034,18.0107,3.27768,6.08034,17.9107,3.27768,6.08034,17.9107,-0.022319,6.18034,17.9107,3.27768,6.18034,17.9107,-0.022319,6.08034,18.0107,-0.022319,6.08034,18.0107,3.27768,6.18034,18.0107,-0.022319,6.18034,18.0107,3.27768,6.08034,18.0107,3.27768,6.18034,17.9107,-0.022319,6.18034,18.0107,-0.022319,6.18034,17.9107,3.27768,6.18034,17.9107,3.27768,-2.11966,18.0107,-0.022318,-2.11966,17.9107,-0.022318,-2.11966,18.0107,3.27768,-2.11966,17.9107,3.27768,-2.11966,17.9107,-0.022318,-2.01966,17.9107,3.27768,-2.01966,17.9107,-0.022318,-2.11966,18.0107,-0.022318,-2.11966,18.0107,3.27768,-2.01966,18.0107,-0.022318,-2.01966,18.0107,3.27768,-2.11966,18.0107,3.27768,-2.01966,17.9107,-0.022318,-2.01966,18.0107,-0.022318,-2.01966,17.9107,3.27768,-2.01966,14.4107,3.27768,8.08034,14.5107,-0.022319,8.08034,14.4107,-0.022319,8.08034,14.5107,3.27768,8.08034,14.4107,3.27768,8.08034,14.4107,-0.022319,8.18034,14.4107,3.27768,8.18034,14.4107,-0.022319,8.08034,14.5107,-0.022319,8.08034,14.5107,3.27768,8.18034,14.5107,-0.022319,8.18034,14.5107,3.27768,8.08034,14.5107,3.27768,8.18034,14.4107,-0.022319,8.18034,14.5107,-0.022319,8.18034,14.4107,3.27768,8.18034,1.71073,3.27768,8.08034,1.81073,-0.022319,8.08034,1.71073,-0.022319,8.08034,1.81073,3.27768,8.08034,1.71073,3.27768,8.08034,1.71073,-0.022319,8.18034,1.71073,3.27768,8.18034,1.71073,-0.022319,8.08034,1.81073,-0.022319,8.08034,1.81073,3.27768,8.18034,1.81073,-0.022319,8.18034,1.81073,3.27768,8.08034,1.81073,3.27768,8.18034,1.71073,-0.022319,8.18034,1.81073,-0.022319,8.18034,1.71073,3.27768,8.18034,3.91073,3.27768,-1.61966,4.01073,-0.022318,-1.61966,3.91073,-0.022318,-1.61966,4.01073,3.27768,-1.61966,3.91073,3.27768,-1.61966,3.91073,-0.022318,-1.51966,3.91073,3.27768,-1.51966,3.91073,-0.022318,-1.61966,4.01073,-0.022318,-1.61966,4.01073,3.27768,-1.51966,4.01073,-0.022318,-1.51966,4.01073,3.27768,-1.61966,4.01073,3.27768,-1.51966,3.91073,-0.022318,-1.51966,4.01073,-0.022318,-1.51966,3.91073,3.27768,-1.51966,2.81073,3.27768,-1.61966,2.91073,-0.022318,-1.61966,2.81073,-0.022318,-1.61966,2.91073,3.27768,-1.61966,2.81073,3.27768,-1.61966,2.81073,-0.022318,-1.51966,2.81073,3.27768,-1.51966,2.81073,-0.022318,-1.61966,2.91073,-0.022318,-1.61966,2.91073,3.27768,-1.51966,2.91073,-0.022318,-1.51966,2.91073,3.27768,-1.61966,2.91073,3.27768,-1.51966,2.81073,-0.022318,-1.51966,2.91073,-0.022318,-1.51966,2.81073,3.27768,-1.51966,-2.53927,3.27768,-1.86967,-2.43927,-0.022318,-1.86967,-2.53927,-0.022318,-1.86967,-2.43927,3.27768,-1.86967,-2.43927,-0.022318,-1.86967,-2.53927,-0.022318,-1.76967,-2.53927,-0.022318,-1.86967,-2.43927,-0.022318,-1.76967,-2.63927,-0.022318,-1.66966,-2.63927,-0.022318,-1.76967,-2.53927,-0.022318,-1.66966,-2.53927,-0.022318,-1.96967,-2.53927,3.27768,-1.86967,-2.53927,-0.022318,-1.86967,-2.53927,3.27768,-1.96967,-2.43927,3.27768,-1.76967,-2.53927,3.27768,-1.86967,-2.53927,3.27768,-1.76967,-2.43927,3.27768,-1.86967,-2.53927,3.27768,-1.66966,-2.63927,3.27768,-1.76967,-2.63927,3.27768,-1.66966,-2.63927,3.27768,-1.86967,-2.63927,3.27768,-1.96967,-2.53927,3.27768,-1.96967,-2.73927,3.27768,-1.86967,-2.73927,3.27768,-1.76967,-2.43927,-0.022318,-1.86967,-2.43927,3.27768,-1.76967,-2.43927,-0.022318,-1.76967,-2.43927,3.27768,-1.86967,-2.63927,3.27768,-1.76967,-2.63927,-0.022318,-1.66966,-2.63927,3.27768,-1.66966,-2.63927,-0.022318,-1.76967,-2.53927,-0.022318,-1.96967,-2.63927,-0.022318,-1.86967,-2.63927,-0.022318,-1.96967,-2.73927,-0.022318,-1.76967,-2.73927,-0.022318,-1.86967,-2.43927,3.27768,-1.76967,-2.53927,-0.022318,-1.76967,-2.43927,-0.022318,-1.76967,-2.53927,3.27768,-1.76967,-2.53927,-0.022318,-1.76967,-2.53927,3.27768,-1.66966,-2.53927,-0.022318,-1.66966,-2.53927,3.27768,-1.76967,-2.53927,3.27768,-1.66966,-2.63927,-0.022318,-1.66966,-2.53927,-0.022318,-1.66966,-2.63927,3.27768,-1.66966,-2.63927,3.27768,-1.96967,-2.53927,-0.022318,-1.96967,-2.63927,-0.022318,-1.96967,-2.53927,3.27768,-1.96967,-2.63927,3.27768,-1.96967,-2.63927,-0.022318,-1.86967,-2.63927,3.27768,-1.86967,-2.63927,-0.022318,-1.96967,-2.73927,3.27768,-1.86967,-2.63927,-0.022318,-1.86967,-2.73927,-0.022318,-1.86967,-2.63927,3.27768,-1.86967,-2.73927,3.27768,-1.86967,-2.73927,-0.022318,-1.76967,-2.73927,3.27768,-1.76967,-2.73927,-0.022318,-1.86967,-2.63927,3.27768,-1.76967,-2.73927,-0.022318,-1.76967,-2.63927,-0.022318,-1.76967,-2.73927,3.27768,-1.76967,4.46074,3.27768,-1.86967,4.56074,-0.022318,-1.86967,4.46074,-0.022318,-1.86967,4.56074,3.27768,-1.86967,4.56074,-0.022318,-1.86967,4.46074,-0.022318,-1.76967,4.46074,-0.022318,-1.86967,4.56074,-0.022318,-1.76967,4.36074,-0.022318,-1.66966,4.36074,-0.022318,-1.76967,4.46074,-0.022318,-1.66966,4.46074,-0.022318,-1.96967,4.46074,3.27768,-1.86967,4.46074,-0.022318,-1.86967,4.46074,3.27768,-1.96967,4.56074,3.27768,-1.76967,4.46074,3.27768,-1.86967,4.46074,3.27768,-1.76967,4.56074,3.27768,-1.86967,4.46074,3.27768,-1.66966,4.36074,3.27768,-1.76967,4.36074,3.27768,-1.66966,4.36074,3.27768,-1.86967,4.36074,3.27768,-1.96967,4.46074,3.27768,-1.96967,4.26074,3.27768,-1.86967,4.26074,3.27768,-1.76967,4.56074,-0.022318,-1.86967,4.56074,3.27768,-1.76967,4.56074,-0.022318,-1.76967,4.56074,3.27768,-1.86967,4.36074,3.27768,-1.76967,4.36074,-0.022318,-1.66966,4.36074,3.27768,-1.66966,4.36074,-0.022318,-1.76967,4.46074,-0.022318,-1.96967,4.36074,-0.022318,-1.86967,4.36074,-0.022318,-1.96967,4.26074,-0.022318,-1.76967,4.26074,-0.022318,-1.86967,4.56074,3.27768,-1.76967,4.46074,-0.022318,-1.76967,4.56074,-0.022318,-1.76967,4.46074,3.27768,-1.76967,4.46074,-0.022318,-1.76967,4.46074,3.27768,-1.66966,4.46074,-0.022318,-1.66966,4.46074,3.27768,-1.76967,4.46074,3.27768,-1.66966,4.36074,-0.022318,-1.66966,4.46074,-0.022318,-1.66966,4.36074,3.27768,-1.66966,4.36074,3.27768,-1.96967,4.46074,-0.022318,-1.96967,4.36074,-0.022318,-1.96967,4.46074,3.27768,-1.96967,4.36074,3.27768,-1.96967,4.36074,-0.022318,-1.86967,4.36074,3.27768,-1.86967,4.36074,-0.022318,-1.96967,4.26074,3.27768,-1.86967,4.36074,-0.022318,-1.86967,4.26074,-0.022318,-1.86967,4.36074,3.27768,-1.86967,4.26074,3.27768,-1.86967,4.26074,-0.022318,-1.76967,4.26074,3.27768,-1.76967,4.26074,-0.022318,-1.86967,4.36074,3.27768,-1.76967,4.26074,-0.022318,-1.76967,4.36074,-0.022318,-1.76967,4.26074,3.27768,-1.76967,-2.53927,3.27768,5.83034,-2.43927,-0.022319,5.83034,-2.53927,-0.022319,5.83034,-2.43927,3.27768,5.83034,-2.43927,-0.022319,5.83034,-2.53927,-0.022319,5.93034,-2.53927,-0.022319,5.83034,-2.43927,-0.022319,5.93034,-2.63927,-0.022319,6.03034,-2.63927,-0.022319,5.93034,-2.53927,-0.022319,6.03034,-2.53927,-0.022319,5.73034,-2.53927,3.27768,5.83034,-2.53927,-0.022319,5.83034,-2.53927,3.27768,5.73034,-2.43927,3.27768,5.93034,-2.53927,3.27768,5.83034,-2.53927,3.27768,5.93034,-2.43927,3.27768,5.83034,-2.53927,3.27768,6.03034,-2.63927,3.27768,5.93034,-2.63927,3.27768,6.03034,-2.63927,3.27768,5.83034,-2.63927,3.27768,5.73034,-2.53927,3.27768,5.73034,-2.73927,3.27768,5.83034,-2.73927,3.27768,5.93034,-2.43927,-0.022319,5.83034,-2.43927,3.27768,5.93034,-2.43927,-0.022319,5.93034,-2.43927,3.27768,5.83034,-2.63927,3.27768,5.93034,-2.63927,-0.022319,6.03034,-2.63927,3.27768,6.03034,-2.63927,-0.022319,5.93034,-2.53927,-0.022319,5.73034,-2.63927,-0.022319,5.83034,-2.63927,-0.022319,5.73034,-2.73927,-0.022319,5.93034,-2.73927,-0.022319,5.83034,-2.43927,3.27768,5.93034,-2.53927,-0.022319,5.93034,-2.43927,-0.022319,5.93034,-2.53927,3.27768,5.93034,-2.53927,-0.022319,5.93034,-2.53927,3.27768,6.03034,-2.53927,-0.022319,6.03034,-2.53927,3.27768,5.93034,-2.53927,3.27768,6.03034,-2.63927,-0.022319,6.03034,-2.53927,-0.022319,6.03034,-2.63927,3.27768,6.03034,-2.63927,3.27768,5.73034,-2.53927,-0.022319,5.73034,-2.63927,-0.022319,5.73034,-2.53927,3.27768,5.73034,-2.63927,3.27768,5.73034,-2.63927,-0.022319,5.83034,-2.63927,3.27768,5.83034,-2.63927,-0.022319,5.73034,-2.73927,3.27768,5.83034,-2.63927,-0.022319,5.83034,-2.73927,-0.022319,5.83034,-2.63927,3.27768,5.83034,-2.73927,3.27768,5.83034,-2.73927,-0.022319,5.93034,-2.73927,3.27768,5.93034,-2.73927,-0.022319,5.83034,-2.63927,3.27768,5.93034,-2.73927,-0.022319,5.93034,-2.63927,-0.022319,5.93034,-2.73927,3.27768,5.93034,4.46074,3.27768,5.83034,4.56074,-0.022319,5.83034,4.46074,-0.022319,5.83034,4.56074,3.27768,5.83034,4.56074,-0.022319,5.83034,4.46074,-0.022319,5.93034,4.46074,-0.022319,5.83034,4.56074,-0.022319,5.93034,4.36074,-0.022319,6.03034,4.36074,-0.022319,5.93034,4.46074,-0.022319,6.03034,4.46074,-0.022319,5.73034,4.46074,3.27768,5.83034,4.46074,-0.022319,5.83034,4.46074,3.27768,5.73034,4.56074,3.27768,5.93034,4.46074,3.27768,5.83034,4.46074,3.27768,5.93034,4.56074,3.27768,5.83034,4.46074,3.27768,6.03034,4.36074,3.27768,5.93034,4.36074,3.27768,6.03034,4.36074,3.27768,5.83034,4.36074,3.27768,5.73034,4.46074,3.27768,5.73034,4.26074,3.27768,5.83034,4.26074,3.27768,5.93034,4.56074,-0.022319,5.83034,4.56074,3.27768,5.93034,4.56074,-0.022319,5.93034,4.56074,3.27768,5.83034,4.36074,3.27768,5.93034,4.36074,-0.022319,6.03034,4.36074,3.27768,6.03034,4.36074,-0.022319,5.93034,4.46074,-0.022319,5.73034,4.36074,-0.022319,5.83034,4.36074,-0.022319,5.73034,4.26074,-0.022319,5.93034,4.26074,-0.022319,5.83034,4.56074,3.27768,5.93034,4.46074,-0.022319,5.93034,4.56074,-0.022319,5.93034,4.46074,3.27768,5.93034,4.46074,-0.022319,5.93034,4.46074,3.27768,6.03034,4.46074,-0.022319,6.03034,4.46074,3.27768,5.93034,4.46074,3.27768,6.03034,4.36074,-0.022319,6.03034,4.46074,-0.022319,6.03034,4.36074,3.27768,6.03034,4.36074,3.27768,5.73034,4.46074,-0.022319,5.73034,4.36074,-0.022319,5.73034,4.46074,3.27768,5.73034,4.36074,3.27768,5.73034,4.36074,-0.022319,5.83034,4.36074,3.27768,5.83034,4.36074,-0.022319,5.73034,4.26074,3.27768,5.83034,4.36074,-0.022319,5.83034,4.26074,-0.022319,5.83034,4.36074,3.27768,5.83034,4.26074,3.27768,5.83034,4.26074,-0.022319,5.93034,4.26074,3.27768,5.93034,4.26074,-0.022319,5.83034,4.36074,3.27768,5.93034,4.26074,-0.022319,5.93034,4.36074,-0.022319,5.93034,4.26074,3.27768,5.93034,11.3607,3.27768,5.83034,11.4607,-0.022319,5.83034,11.3607,-0.022319,5.83034,11.4607,3.27768,5.83034,11.4607,-0.022319,5.83034,11.3607,-0.022319,5.93034,11.3607,-0.022319,5.83034,11.4607,-0.022319,5.93034,11.2607,-0.022319,6.03034,11.2607,-0.022319,5.93034,11.3607,-0.022319,6.03034,11.3607,-0.022319,5.73034,11.3607,3.27768,5.83034,11.3607,-0.022319,5.83034,11.3607,3.27768,5.73034,11.4607,3.27768,5.93034,11.3607,3.27768,5.83034,11.3607,3.27768,5.93034,11.4607,3.27768,5.83034,11.3607,3.27768,6.03034,11.2607,3.27768,5.93034,11.2607,3.27768,6.03034,11.2607,3.27768,5.83034,11.2607,3.27768,5.73034,11.3607,3.27768,5.73034,11.1607,3.27768,5.83034,11.1607,3.27768,5.93034,11.4607,-0.022319,5.83034,11.4607,3.27768,5.93034,11.4607,-0.022319,5.93034,11.4607,3.27768,5.83034,11.2607,3.27768,5.93034,11.2607,-0.022319,6.03034,11.2607,3.27768,6.03034,11.2607,-0.022319,5.93034,11.3607,-0.022319,5.73034,11.2607,-0.022319,5.83034,11.2607,-0.022319,5.73034,11.1607,-0.022319,5.93034,11.1607,-0.022319,5.83034,11.4607,3.27768,5.93034,11.3607,-0.022319,5.93034,11.4607,-0.022319,5.93034,11.3607,3.27768,5.93034,11.3607,-0.022319,5.93034,11.3607,3.27768,6.03034,11.3607,-0.022319,6.03034,11.3607,3.27768,5.93034,11.3607,3.27768,6.03034,11.2607,-0.022319,6.03034,11.3607,-0.022319,6.03034,11.2607,3.27768,6.03034,11.2607,3.27768,5.73034,11.3607,-0.022319,5.73034,11.2607,-0.022319,5.73034,11.3607,3.27768,5.73034,11.2607,3.27768,5.73034,11.2607,-0.022319,5.83034,11.2607,3.27768,5.83034,11.2607,-0.022319,5.73034,11.1607,3.27768,5.83034,11.2607,-0.022319,5.83034,11.1607,-0.022319,5.83034,11.2607,3.27768,5.83034,11.1607,3.27768,5.83034,11.1607,-0.022319,5.93034,11.1607,3.27768,5.93034,11.1607,-0.022319,5.83034,11.2607,3.27768,5.93034,11.1607,-0.022319,5.93034,11.2607,-0.022319,5.93034,11.1607,3.27768,5.93034,18.3607,3.27768,5.83034,18.4607,-0.022319,5.83034,18.3607,-0.022319,5.83034,18.4607,3.27768,5.83034,18.4607,-0.022319,5.83034,18.3607,-0.022319,5.93034,18.3607,-0.022319,5.83034,18.4607,-0.022319,5.93034,18.2607,-0.022319,6.03034,18.2607,-0.022319,5.93034,18.3607,-0.022319,6.03034,18.3607,-0.022319,5.73034,18.3607,3.27768,5.83034,18.3607,-0.022319,5.83034,18.3607,3.27768,5.73034,18.4607,3.27768,5.93034,18.3607,3.27768,5.83034,18.3607,3.27768,5.93034,18.4607,3.27768,5.83034,18.3607,3.27768,6.03034,18.2607,3.27768,5.93034,18.2607,3.27768,6.03034,18.2607,3.27768,5.83034,18.2607,3.27768,5.73034,18.3607,3.27768,5.73034,18.1607,3.27768,5.83034,18.1607,3.27768,5.93034,18.4607,-0.022319,5.83034,18.4607,3.27768,5.93034,18.4607,-0.022319,5.93034,18.4607,3.27768,5.83034,18.2607,3.27768,5.93034,18.2607,-0.022319,6.03034,18.2607,3.27768,6.03034,18.2607,-0.022319,5.93034,18.3607,-0.022319,5.73034,18.2607,-0.022319,5.83034,18.2607,-0.022319,5.73034,18.1607,-0.022319,5.93034,18.1607,-0.022319,5.83034,18.4607,3.27768,5.93034,18.3607,-0.022319,5.93034,18.4607,-0.022319,5.93034,18.3607,3.27768,5.93034,18.3607,-0.022319,5.93034,18.3607,3.27768,6.03034,18.3607,-0.022319,6.03034,18.3607,3.27768,5.93034,18.3607,3.27768,6.03034,18.2607,-0.022319,6.03034,18.3607,-0.022319,6.03034,18.2607,3.27768,6.03034,18.2607,3.27768,5.73034,18.3607,-0.022319,5.73034,18.2607,-0.022319,5.73034,18.3607,3.27768,5.73034,18.2607,3.27768,5.73034,18.2607,-0.022319,5.83034,18.2607,3.27768,5.83034,18.2607,-0.022319,5.73034,18.1607,3.27768,5.83034,18.2607,-0.022319,5.83034,18.1607,-0.022319,5.83034,18.2607,3.27768,5.83034,18.1607,3.27768,5.83034,18.1607,-0.022319,5.93034,18.1607,3.27768,5.93034,18.1607,-0.022319,5.83034,18.2607,3.27768,5.93034,18.1607,-0.022319,5.93034,18.2607,-0.022319,5.93034,18.1607,3.27768,5.93034,18.3607,3.27768,-1.86967,18.4607,-0.022318,-1.86967,18.3607,-0.022318,-1.86967,18.4607,3.27768,-1.86967,18.4607,-0.022318,-1.86967,18.3607,-0.022318,-1.76967,18.3607,-0.022318,-1.86967,18.4607,-0.022318,-1.76967,18.2607,-0.022318,-1.66966,18.2607,-0.022318,-1.76967,18.3607,-0.022318,-1.66966,18.3607,-0.022318,-1.96967,18.3607,3.27768,-1.86967,18.3607,-0.022318,-1.86967,18.3607,3.27768,-1.96967,18.4607,3.27768,-1.76967,18.3607,3.27768,-1.86967,18.3607,3.27768,-1.76967,18.4607,3.27768,-1.86967,18.3607,3.27768,-1.66966,18.2607,3.27768,-1.76967,18.2607,3.27768,-1.66966,18.2607,3.27768,-1.86967,18.2607,3.27768,-1.96967,18.3607,3.27768,-1.96967,18.1607,3.27768,-1.86967,18.1607,3.27768,-1.76967,18.4607,-0.022318,-1.86967,18.4607,3.27768,-1.76967,18.4607,-0.022318,-1.76967,18.4607,3.27768,-1.86967,18.2607,3.27768,-1.76967,18.2607,-0.022318,-1.66966,18.2607,3.27768,-1.66966,18.2607,-0.022318,-1.76967,18.3607,-0.022318,-1.96967,18.2607,-0.022318,-1.86967,18.2607,-0.022318,-1.96967,18.1607,-0.022318,-1.76967,18.1607,-0.022318,-1.86967,18.4607,3.27768,-1.76967,18.3607,-0.022318,-1.76967,18.4607,-0.022318,-1.76967,18.3607,3.27768,-1.76967,18.3607,-0.022318,-1.76967,18.3607,3.27768,-1.66966,18.3607,-0.022318,-1.66966,18.3607,3.27768,-1.76967,18.3607,3.27768,-1.66966,18.2607,-0.022318,-1.66966,18.3607,-0.022318,-1.66966,18.2607,3.27768,-1.66966,18.2607,3.27768,-1.96967,18.3607,-0.022318,-1.96967,18.2607,-0.022318,-1.96967,18.3607,3.27768,-1.96967,18.2607,3.27768,-1.96967,18.2607,-0.022318,-1.86967,18.2607,3.27768,-1.86967,18.2607,-0.022318,-1.96967,18.1607,3.27768,-1.86967,18.2607,-0.022318,-1.86967,18.1607,-0.022318,-1.86967,18.2607,3.27768,-1.86967,18.1607,3.27768,-1.86967,18.1607,-0.022318,-1.76967,18.1607,3.27768,-1.76967,18.1607,-0.022318,-1.86967,18.2607,3.27768,-1.76967,18.1607,-0.022318,-1.76967,18.2607,-0.022318,-1.76967,18.1607,3.27768,-1.76967,11.3607,3.27768,-1.86967,11.4607,-0.022318,-1.86967,11.3607,-0.022318,-1.86967,11.4607,3.27768,-1.86967,11.4607,-0.022318,-1.86967,11.3607,-0.022318,-1.76967,11.3607,-0.022318,-1.86967,11.4607,-0.022318,-1.76967,11.2607,-0.022318,-1.66966,11.2607,-0.022318,-1.76967,11.3607,-0.022318,-1.66966,11.3607,-0.022318,-1.96967,11.3607,3.27768,-1.86967,11.3607,-0.022318,-1.86967,11.3607,3.27768,-1.96967,11.4607,3.27768,-1.76967,11.3607,3.27768,-1.86967,11.3607,3.27768,-1.76967,11.4607,3.27768,-1.86967,11.3607,3.27768,-1.66966,11.2607,3.27768,-1.76967,11.2607,3.27768,-1.66966,11.2607,3.27768,-1.86967,11.2607,3.27768,-1.96967,11.3607,3.27768,-1.96967,11.1607,3.27768,-1.86967,11.1607,3.27768,-1.76967,11.4607,-0.022318,-1.86967,11.4607,3.27768,-1.76967,11.4607,-0.022318,-1.76967,11.4607,3.27768,-1.86967,11.2607,3.27768,-1.76967,11.2607,-0.022318,-1.66966,11.2607,3.27768,-1.66966,11.2607,-0.022318,-1.76967,11.3607,-0.022318,-1.96967,11.2607,-0.022318,-1.86967,11.2607,-0.022318,-1.96967,11.1607,-0.022318,-1.76967,11.1607,-0.022318,-1.86967,11.4607,3.27768,-1.76967,11.3607,-0.022318,-1.76967,11.4607,-0.022318,-1.76967,11.3607,3.27768,-1.76967,11.3607,-0.022318,-1.76967,11.3607,3.27768,-1.66966,11.3607,-0.022318,-1.66966,11.3607,3.27768,-1.76967,11.3607,3.27768,-1.66966,11.2607,-0.022318,-1.66966,11.3607,-0.022318,-1.66966,11.2607,3.27768,-1.66966,11.2607,3.27768,-1.96967,11.3607,-0.022318,-1.96967,11.2607,-0.022318,-1.96967,11.3607,3.27768,-1.96967,11.2607,3.27768,-1.96967,11.2607,-0.022318,-1.86967,11.2607,3.27768,-1.86967,11.2607,-0.022318,-1.96967,11.1607,3.27768,-1.86967,11.2607,-0.022318,-1.86967,11.1607,-0.022318,-1.86967,11.2607,3.27768,-1.86967,11.1607,3.27768,-1.86967,11.1607,-0.022318,-1.76967,11.1607,3.27768,-1.76967,11.1607,-0.022318,-1.86967,11.2607,3.27768,-1.76967,11.1607,-0.022318,-1.76967,11.2607,-0.022318,-1.76967,11.1607,3.27768,-1.76967,-15.3893,0.577682,-2.61966,-15.3893,0.477682,-2.11966,-15.3893,0.577682,-2.11966,-15.3893,0.477682,-2.61966,-10.3893,0.477682,-2.61966,-10.3893,0.577682,-2.11966,-10.3893,0.477682,-2.11966,-10.3893,0.577682,-2.61966,-17.8893,0.577682,-2.61966,-17.8893,0.477682,-2.11966,-17.8893,0.577682,-2.11966,-17.8893,0.477682,-2.61966,-12.8893,0.477682,-2.61966,-12.8893,0.577682,-2.11966,-12.8893,0.477682,-2.11966,-12.8893,0.577682,-2.61966,-20.3893,0.477682,-2.61966,-20.3893,0.577682,-2.11966,-20.3893,0.477682,-2.11966,-20.3893,0.577682,-2.61966,-15.3893,0.477682,-2.61966,-15.3893,0.577682,-2.61966,-15.3893,0.477682,-2.11966,-15.3893,0.577682,-2.11966,-10.3893,0.577682,-2.61966,-10.3893,0.477682,-2.61966,-10.3893,0.577682,-2.11966,-10.3893,0.477682,-2.11966,-17.8893,0.477682,-2.61966,-17.8893,0.577682,-2.61966,-17.8893,0.477682,-2.11966,-17.8893,0.577682,-2.11966,-12.8893,0.577682,-2.61966,-12.8893,0.477682,-2.61966,-12.8893,0.577682,-2.11966,-12.8893,0.477682,-2.11966,-20.3893,0.577682,-2.61966,-20.3893,0.477682,-2.61966,-20.3893,0.577682,-2.11966,-20.3893,0.477682,-2.11966,4.56074,3.27768,-1.86967,4.46074,3.27768,-1.86967,4.56074,-0.022318,-1.86967,4.46074,-0.022318,-1.86967,4.46074,-0.022318,-1.76967,4.46074,-0.022318,-1.86967,4.46074,-0.022318,-1.66966,4.36074,-0.022318,-1.66966,4.36074,-0.022318,-1.76967,4.56074,-0.022318,-1.76967,4.56074,-0.022318,-1.86967,4.46074,3.27768,-1.96967,4.46074,-0.022318,-1.96967,4.46074,3.27768,-1.86967,4.46074,-0.022318,-1.86967,4.36074,3.27768,-1.86967,4.36074,3.27768,-1.76967,4.26074,3.27768,-1.86967,4.26074,3.27768,-1.76967,4.46074,3.27768,-1.86967,4.46074,3.27768,-1.76967,4.46074,3.27768,-1.96967,4.46074,3.27768,-1.66966,4.36074,3.27768,-1.96967,4.36074,3.27768,-1.66966,4.56074,3.27768,-1.86967,4.56074,3.27768,-1.76967,4.56074,3.27768,-1.86967,4.56074,-0.022318,-1.86967,4.56074,3.27768,-1.76967,4.56074,-0.022318,-1.76967,4.36074,-0.022318,-1.76967,4.36074,3.27768,-1.76967,4.36074,-0.022318,-1.66966,4.36074,3.27768,-1.66966,4.36074,-0.022318,-1.86967,4.26074,-0.022318,-1.76967,4.26074,-0.022318,-1.86967,4.46074,-0.022318,-1.96967,4.36074,-0.022318,-1.96967,4.46074,3.27768,-1.76967,4.56074,3.27768,-1.76967,4.46074,-0.022318,-1.76967,4.56074,-0.022318,-1.76967,4.46074,3.27768,-1.76967,4.46074,-0.022318,-1.76967,4.46074,3.27768,-1.66966,4.46074,-0.022318,-1.66966,4.36074,3.27768,-1.66966,4.46074,3.27768,-1.66966,4.36074,-0.022318,-1.66966,4.46074,-0.022318,-1.66966,4.46074,3.27768,-1.96967,4.36074,3.27768,-1.96967,4.46074,-0.022318,-1.96967,4.36074,-0.022318,-1.96967,4.36074,-0.022318,-1.96967,4.36074,3.27768,-1.96967,4.36074,-0.022318,-1.86967,4.36074,3.27768,-1.86967,4.36074,3.27768,-1.86967,4.26074,3.27768,-1.86967,4.36074,-0.022318,-1.86967,4.26074,-0.022318,-1.86967,4.26074,-0.022318,-1.86967,4.26074,3.27768,-1.86967,4.26074,-0.022318,-1.76967,4.26074,3.27768,-1.76967,4.26074,3.27768,-1.76967,4.36074,3.27768,-1.76967,4.26074,-0.022318,-1.76967,4.36074,-0.022318,-1.76967,-2.43927,3.27768,5.83034,-2.53927,3.27768,5.83034,-2.43927,-0.022319,5.83034,-2.53927,-0.022319,5.83034,-2.53927,-0.022319,5.93034,-2.53927,-0.022319,5.83034,-2.53927,-0.022319,6.03034,-2.63927,-0.022319,6.03034,-2.63927,-0.022319,5.93034,-2.43927,-0.022319,5.93034,-2.43927,-0.022319,5.83034,-2.53927,3.27768,5.73034,-2.53927,-0.022319,5.73034,-2.53927,3.27768,5.83034,-2.53927,-0.022319,5.83034,-2.63927,3.27768,5.83034,-2.63927,3.27768,5.93034,-2.73927,3.27768,5.83034,-2.73927,3.27768,5.93034,-2.53927,3.27768,5.83034,-2.53927,3.27768,5.93034,-2.53927,3.27768,5.73034,-2.53927,3.27768,6.03034,-2.63927,3.27768,5.73034,-2.63927,3.27768,6.03034,-2.43927,3.27768,5.83034,-2.43927,3.27768,5.93034,-2.43927,3.27768,5.83034,-2.43927,-0.022319,5.83034,-2.43927,3.27768,5.93034,-2.43927,-0.022319,5.93034,-2.63927,-0.022319,5.93034,-2.63927,3.27768,5.93034,-2.63927,-0.022319,6.03034,-2.63927,3.27768,6.03034,-2.63927,-0.022319,5.83034,-2.73927,-0.022319,5.93034,-2.73927,-0.022319,5.83034,-2.53927,-0.022319,5.73034,-2.63927,-0.022319,5.73034,-2.53927,3.27768,5.93034,-2.43927,3.27768,5.93034,-2.53927,-0.022319,5.93034,-2.43927,-0.022319,5.93034,-2.53927,3.27768,5.93034,-2.53927,-0.022319,5.93034,-2.53927,3.27768,6.03034,-2.53927,-0.022319,6.03034,-2.63927,3.27768,6.03034,-2.53927,3.27768,6.03034,-2.63927,-0.022319,6.03034,-2.53927,-0.022319,6.03034,-2.53927,3.27768,5.73034,-2.63927,3.27768,5.73034,-2.53927,-0.022319,5.73034,-2.63927,-0.022319,5.73034,-2.63927,-0.022319,5.73034,-2.63927,3.27768,5.73034,-2.63927,-0.022319,5.83034,-2.63927,3.27768,5.83034,-2.63927,3.27768,5.83034,-2.73927,3.27768,5.83034,-2.63927,-0.022319,5.83034,-2.73927,-0.022319,5.83034,-2.73927,-0.022319,5.83034,-2.73927,3.27768,5.83034,-2.73927,-0.022319,5.93034,-2.73927,3.27768,5.93034,-2.73927,3.27768,5.93034,-2.63927,3.27768,5.93034,-2.73927,-0.022319,5.93034,-2.63927,-0.022319,5.93034,4.56074,3.27768,5.83034,4.46074,3.27768,5.83034,4.56074,-0.022319,5.83034,4.46074,-0.022319,5.83034,4.46074,-0.022319,5.93034,4.46074,-0.022319,5.83034,4.46074,-0.022319,6.03034,4.36074,-0.022319,6.03034,4.36074,-0.022319,5.93034,4.56074,-0.022319,5.93034,4.56074,-0.022319,5.83034,4.46074,3.27768,5.73034,4.46074,-0.022319,5.73034,4.46074,3.27768,5.83034,4.46074,-0.022319,5.83034,4.36074,3.27768,5.83034,4.36074,3.27768,5.93034,4.26074,3.27768,5.83034,4.26074,3.27768,5.93034,4.46074,3.27768,5.83034,4.46074,3.27768,5.93034,4.46074,3.27768,5.73034,4.46074,3.27768,6.03034,4.36074,3.27768,5.73034,4.36074,3.27768,6.03034,4.56074,3.27768,5.83034,4.56074,3.27768,5.93034,4.56074,3.27768,5.83034,4.56074,-0.022319,5.83034,4.56074,3.27768,5.93034,4.56074,-0.022319,5.93034,4.36074,-0.022319,5.93034,4.36074,3.27768,5.93034,4.36074,-0.022319,6.03034,4.36074,3.27768,6.03034,4.36074,-0.022319,5.83034,4.26074,-0.022319,5.93034,4.26074,-0.022319,5.83034,4.46074,-0.022319,5.73034,4.36074,-0.022319,5.73034,4.46074,3.27768,5.93034,4.56074,3.27768,5.93034,4.46074,-0.022319,5.93034,4.56074,-0.022319,5.93034,4.46074,3.27768,5.93034,4.46074,-0.022319,5.93034,4.46074,3.27768,6.03034,4.46074,-0.022319,6.03034,4.36074,3.27768,6.03034,4.46074,3.27768,6.03034,4.36074,-0.022319,6.03034,4.46074,-0.022319,6.03034,4.46074,3.27768,5.73034,4.36074,3.27768,5.73034,4.46074,-0.022319,5.73034,4.36074,-0.022319,5.73034,4.36074,-0.022319,5.73034,4.36074,3.27768,5.73034,4.36074,-0.022319,5.83034,4.36074,3.27768,5.83034,4.36074,3.27768,5.83034,4.26074,3.27768,5.83034,4.36074,-0.022319,5.83034,4.26074,-0.022319,5.83034,4.26074,-0.022319,5.83034,4.26074,3.27768,5.83034,4.26074,-0.022319,5.93034,4.26074,3.27768,5.93034,4.26074,3.27768,5.93034,4.36074,3.27768,5.93034,4.26074,-0.022319,5.93034,4.36074,-0.022319,5.93034,11.4607,3.27768,5.83034,11.3607,3.27768,5.83034,11.4607,-0.022319,5.83034,11.3607,-0.022319,5.83034,11.3607,-0.022319,5.93034,11.3607,-0.022319,5.83034,11.3607,-0.022319,6.03034,11.2607,-0.022319,6.03034,11.2607,-0.022319,5.93034,11.4607,-0.022319,5.93034,11.4607,-0.022319,5.83034,11.3607,3.27768,5.73034,11.3607,-0.022319,5.73034,11.3607,3.27768,5.83034,11.3607,-0.022319,5.83034,11.2607,3.27768,5.83034,11.2607,3.27768,5.93034,11.1607,3.27768,5.83034,11.1607,3.27768,5.93034,11.3607,3.27768,5.83034,11.3607,3.27768,5.93034,11.3607,3.27768,5.73034,11.3607,3.27768,6.03034,11.2607,3.27768,5.73034,11.2607,3.27768,6.03034,11.4607,3.27768,5.83034,11.4607,3.27768,5.93034,11.4607,3.27768,5.83034,11.4607,-0.022319,5.83034,11.4607,3.27768,5.93034,11.4607,-0.022319,5.93034,11.2607,-0.022319,5.93034,11.2607,3.27768,5.93034,11.2607,-0.022319,6.03034,11.2607,3.27768,6.03034,11.2607,-0.022319,5.83034,11.1607,-0.022319,5.93034,11.1607,-0.022319,5.83034,11.3607,-0.022319,5.73034,11.2607,-0.022319,5.73034,11.3607,3.27768,5.93034,11.4607,3.27768,5.93034,11.3607,-0.022319,5.93034,11.4607,-0.022319,5.93034,11.3607,3.27768,5.93034,11.3607,-0.022319,5.93034,11.3607,3.27768,6.03034,11.3607,-0.022319,6.03034,11.2607,3.27768,6.03034,11.3607,3.27768,6.03034,11.2607,-0.022319,6.03034,11.3607,-0.022319,6.03034,11.3607,3.27768,5.73034,11.2607,3.27768,5.73034,11.3607,-0.022319,5.73034,11.2607,-0.022319,5.73034,11.2607,-0.022319,5.73034,11.2607,3.27768,5.73034,11.2607,-0.022319,5.83034,11.2607,3.27768,5.83034,11.2607,3.27768,5.83034,11.1607,3.27768,5.83034,11.2607,-0.022319,5.83034,11.1607,-0.022319,5.83034,11.1607,-0.022319,5.83034,11.1607,3.27768,5.83034,11.1607,-0.022319,5.93034,11.1607,3.27768,5.93034,11.1607,3.27768,5.93034,11.2607,3.27768,5.93034,11.1607,-0.022319,5.93034,11.2607,-0.022319,5.93034,18.4607,3.27768,5.83034,18.3607,3.27768,5.83034,18.4607,-0.022319,5.83034,18.3607,-0.022319,5.83034,18.3607,-0.022319,5.93034,18.3607,-0.022319,5.83034,18.3607,-0.022319,6.03034,18.2607,-0.022319,6.03034,18.2607,-0.022319,5.93034,18.4607,-0.022319,5.93034,18.4607,-0.022319,5.83034,18.3607,3.27768,5.73034,18.3607,-0.022319,5.73034,18.3607,3.27768,5.83034,18.3607,-0.022319,5.83034,18.2607,3.27768,5.83034,18.2607,3.27768,5.93034,18.1607,3.27768,5.83034,18.1607,3.27768,5.93034,18.3607,3.27768,5.83034,18.3607,3.27768,5.93034,18.3607,3.27768,5.73034,18.3607,3.27768,6.03034,18.2607,3.27768,5.73034,18.2607,3.27768,6.03034,18.4607,3.27768,5.83034,18.4607,3.27768,5.93034,18.4607,3.27768,5.83034,18.4607,-0.022319,5.83034,18.4607,3.27768,5.93034,18.4607,-0.022319,5.93034,18.2607,-0.022319,5.93034,18.2607,3.27768,5.93034,18.2607,-0.022319,6.03034,18.2607,3.27768,6.03034,18.2607,-0.022319,5.83034,18.1607,-0.022319,5.93034,18.1607,-0.022319,5.83034,18.3607,-0.022319,5.73034,18.2607,-0.022319,5.73034,18.3607,3.27768,5.93034,18.4607,3.27768,5.93034,18.3607,-0.022319,5.93034,18.4607,-0.022319,5.93034,18.3607,3.27768,5.93034,18.3607,-0.022319,5.93034,18.3607,3.27768,6.03034,18.3607,-0.022319,6.03034,18.2607,3.27768,6.03034,18.3607,3.27768,6.03034,18.2607,-0.022319,6.03034,18.3607,-0.022319,6.03034,18.3607,3.27768,5.73034,18.2607,3.27768,5.73034,18.3607,-0.022319,5.73034,18.2607,-0.022319,5.73034,18.2607,-0.022319,5.73034,18.2607,3.27768,5.73034,18.2607,-0.022319,5.83034,18.2607,3.27768,5.83034,18.2607,3.27768,5.83034,18.1607,3.27768,5.83034,18.2607,-0.022319,5.83034,18.1607,-0.022319,5.83034,18.1607,-0.022319,5.83034,18.1607,3.27768,5.83034,18.1607,-0.022319,5.93034,18.1607,3.27768,5.93034,18.1607,3.27768,5.93034,18.2607,3.27768,5.93034,18.1607,-0.022319,5.93034,18.2607,-0.022319,5.93034,18.4607,3.27768,-1.86967,18.3607,3.27768,-1.86967,18.4607,-0.022318,-1.86967,18.3607,-0.022318,-1.86967,18.3607,-0.022318,-1.76967,18.3607,-0.022318,-1.86967,18.3607,-0.022318,-1.66966,18.2607,-0.022318,-1.66966,18.2607,-0.022318,-1.76967,18.4607,-0.022318,-1.76967,18.4607,-0.022318,-1.86967,18.3607,3.27768,-1.96967,18.3607,-0.022318,-1.96967,18.3607,3.27768,-1.86967,18.3607,-0.022318,-1.86967,18.2607,3.27768,-1.86967,18.2607,3.27768,-1.76967,18.1607,3.27768,-1.86967,18.1607,3.27768,-1.76967,18.3607,3.27768,-1.86967,18.3607,3.27768,-1.76967,18.3607,3.27768,-1.96967,18.3607,3.27768,-1.66966,18.2607,3.27768,-1.96967,18.2607,3.27768,-1.66966,18.4607,3.27768,-1.86967,18.4607,3.27768,-1.76967,18.4607,3.27768,-1.86967,18.4607,-0.022318,-1.86967,18.4607,3.27768,-1.76967,18.4607,-0.022318,-1.76967,18.2607,-0.022318,-1.76967,18.2607,3.27768,-1.76967,18.2607,-0.022318,-1.66966,18.2607,3.27768,-1.66966,18.2607,-0.022318,-1.86967,18.1607,-0.022318,-1.76967,18.1607,-0.022318,-1.86967,18.3607,-0.022318,-1.96967,18.2607,-0.022318,-1.96967,18.3607,3.27768,-1.76967,18.4607,3.27768,-1.76967,18.3607,-0.022318,-1.76967,18.4607,-0.022318,-1.76967,18.3607,3.27768,-1.76967,18.3607,-0.022318,-1.76967,18.3607,3.27768,-1.66966,18.3607,-0.022318,-1.66966,18.2607,3.27768,-1.66966,18.3607,3.27768,-1.66966,18.2607,-0.022318,-1.66966,18.3607,-0.022318,-1.66966,18.3607,3.27768,-1.96967,18.2607,3.27768,-1.96967,18.3607,-0.022318,-1.96967,18.2607,-0.022318,-1.96967,18.2607,-0.022318,-1.96967,18.2607,3.27768,-1.96967,18.2607,-0.022318,-1.86967,18.2607,3.27768,-1.86967,18.2607,3.27768,-1.86967,18.1607,3.27768,-1.86967,18.2607,-0.022318,-1.86967,18.1607,-0.022318,-1.86967,18.1607,-0.022318,-1.86967,18.1607,3.27768,-1.86967,18.1607,-0.022318,-1.76967,18.1607,3.27768,-1.76967,18.1607,3.27768,-1.76967,18.2607,3.27768,-1.76967,18.1607,-0.022318,-1.76967,18.2607,-0.022318,-1.76967,11.4607,3.27768,-1.86967,11.3607,3.27768,-1.86967,11.4607,-0.022318,-1.86967,11.3607,-0.022318,-1.86967,11.3607,-0.022318,-1.76967,11.3607,-0.022318,-1.86967,11.3607,-0.022318,-1.66966,11.2607,-0.022318,-1.66966,11.2607,-0.022318,-1.76967,11.4607,-0.022318,-1.76967,11.4607,-0.022318,-1.86967,11.3607,3.27768,-1.96967,11.3607,-0.022318,-1.96967,11.3607,3.27768,-1.86967,11.3607,-0.022318,-1.86967,11.2607,3.27768,-1.86967,11.2607,3.27768,-1.76967,11.1607,3.27768,-1.86967,11.1607,3.27768,-1.76967,11.3607,3.27768,-1.86967,11.3607,3.27768,-1.76967,11.3607,3.27768,-1.96967,11.3607,3.27768,-1.66966,11.2607,3.27768,-1.96967,11.2607,3.27768,-1.66966,11.4607,3.27768,-1.86967,11.4607,3.27768,-1.76967,11.4607,3.27768,-1.86967,11.4607,-0.022318,-1.86967,11.4607,3.27768,-1.76967,11.4607,-0.022318,-1.76967,11.2607,-0.022318,-1.76967,11.2607,3.27768,-1.76967,11.2607,-0.022318,-1.66966,11.2607,3.27768,-1.66966,11.2607,-0.022318,-1.86967,11.1607,-0.022318,-1.76967,11.1607,-0.022318,-1.86967,11.3607,-0.022318,-1.96967,11.2607,-0.022318,-1.96967,11.3607,3.27768,-1.76967,11.4607,3.27768,-1.76967,11.3607,-0.022318,-1.76967,11.4607,-0.022318,-1.76967,11.3607,3.27768,-1.76967,11.3607,-0.022318,-1.76967,11.3607,3.27768,-1.66966,11.3607,-0.022318,-1.66966,11.2607,3.27768,-1.66966,11.3607,3.27768,-1.66966,11.2607,-0.022318,-1.66966,11.3607,-0.022318,-1.66966,11.3607,3.27768,-1.96967,11.2607,3.27768,-1.96967,11.3607,-0.022318,-1.96967,11.2607,-0.022318,-1.96967,11.2607,-0.022318,-1.96967,11.2607,3.27768,-1.96967,11.2607,-0.022318,-1.86967,11.2607,3.27768,-1.86967,11.2607,3.27768,-1.86967,11.1607,3.27768,-1.86967,11.2607,-0.022318,-1.86967,11.1607,-0.022318,-1.86967,11.1607,-0.022318,-1.86967,11.1607,3.27768,-1.86967,11.1607,-0.022318,-1.76967,11.1607,3.27768,-1.76967,11.1607,3.27768,-1.76967,11.2607,3.27768,-1.76967,11.1607,-0.022318,-1.76967,11.2607,-0.022318,-1.76967,-2.73927,3.27768,-1.86967,-2.73927,3.27768,-1.84966,-2.73927,3.27768,-1.76967,-2.63927,-0.022318,-1.86967,-2.53927,-0.022318,-1.76967,4.36074,-0.022318,-1.86967,4.46074,-0.022318,-1.76967,-2.63927,-0.022319,5.83034,-2.53927,-0.022319,5.93034,4.36074,-0.022319,5.83034,4.46074,-0.022319,5.93034,11.2607,-0.022319,5.83034,11.3607,-0.022319,5.93034,18.2607,-0.022319,5.83034,18.3607,-0.022319,5.93034,18.2607,-0.022318,-1.86967,18.3607,-0.022318,-1.76967,11.2607,-0.022318,-1.86967,11.3607,-0.022318,-1.76967],
					"normals": [0,-1,0,0,-0.9999999999999999,0,0,0,0,0,0,-0.9999999999999999,-1,0,0,0,1,0,0,0,-1,0,0,1,0.9999999999999999,0,0,-0.9999999999999999,0,0,1,0,0,0,-0.9999999999999934,-1.1363675103764548e-7,2.525256734096786e-9,-0.9999999999999949,-1.0101040710514785e-7,5.050513468193572e-9,-0.9999999999999949,-1.0101040710514785e-7,4.545448347246595e-8,-0.999999999999999,0,4.545460743957699e-9,-0.9999999999999959,-9.090933884626517e-8,0,-0.9999999999999949,-1.0101040710514785e-7,1.12144140664725e-8,-0.9999999999999966,-8.264462810154977e-8,1.0687077111764419e-8,-0.9999999999999968,-7.875841824272639e-8,3.29970940236379e-8,-0.9999999999999969,-7.28907049597822e-8,1.521116211252411e-8,-0.9999999999999962,-8.567670135443451e-8,-2.2431333753909246e-7,-0.9999999999999729,-6.215252334338924e-8,-7.013596647972804e-8,-0.9999999999999939,-8.517882269319934e-8,0,-0.9999999999999957,-9.24662220917294e-8,1.5031552512780903e-8,-0.9999999999999959,-8.852012613222255e-8,-3.6518957220112166e-8,-0.9999999999999951,-9.126371018990398e-8,3.522242964420738e-7,-0.9999999999999379,0,0,-0.9999999999999958,-9.246622209172941e-8,-1.607174789245495e-7,-0.9999999999999837,-8.26446281015487e-8,0,0,0.9999999999999999,0,0.9999999999999999,0,0,-0.9999999999944446,-0.000003333333333318141,-4.6953932292706485e-8,-0.9999999999999529,-3.029947791458976e-7,2.4721853652000412e-8,-0.999999999998881,-0.0000014956730730155386,0,-0.9999999999999913,-1.3157825485142072e-7,3.646624746600603e-8,-0.9999999999999919,-1.2342137400708176e-7,7.051888054750304e-8,-0.9999999999999493,-3.105282800146574e-7,-6.881161193633547e-8,-0.9999999999999928,-9.85676294668969e-8,5.882352941181338e-7,-0.9999999999998269,0,7.077168883336926e-9,-0.9999999999999324,-3.6801278193352e-7,-4.009640137207087e-9,-0.9999999999999027,-4.410604150927799e-7,-4.653349865138339e-9,-0.9999999999998712,-5.072151353000794e-7,-1.9292069224318313e-9,-0.9999999999998658,-5.179924445143323e-7,7.142877551085853e-8,-0.9999999999999974,0,-1.216112468384438e-8,-0.9999999999999961,-8.724388320822628e-8,1.0126604069917388e-7,-0.9999999999999769,1.898738263109511e-7,3.95439636284839e-8,-0.9999999999999886,-1.4636395452659953e-7,6.234445192799429e-8,-0.9999999999999858,-1.5764172935459136e-7,3.996821846005347e-8,-0.9999999999999881,-1.4902368772993888e-7,0,-0.999999999999979,-2.0408184089968355e-7,0,-0.9999999999999792,-2.0408184089968353e-7,0,-0.9999999999999792,-2.0408184089968347e-7,9.99002096804727e-9,-0.9999999999999799,-1.9980041936094947e-7,4.7619274377456534e-7,-0.9999999999998866,0,6.643367240548313e-8,-0.9999999999999968,-4.309211183058364e-8,1.851856424335445e-7,-0.9999999999999752,-1.2345709495569623e-7,3.983672986006445e-8,-0.9999999999999937,-1.0593057062525495e-7,-5.982318229206243e-7,-0.9999999999997952,-2.279116737581869e-7,-1.9855110672539963e-7,-0.9999999999999797,-3.488104218161526e-8,-6.050435944752993e-8,-0.999999999999998,-5.601817697697042e-9,-0.00003600401366870796,-0.9999999993462996,-0.0000033334444459725343,-4.9221362715113367e-8,-0.999999999999998,-4.1167032756336184e-8,-4.025172508597362e-8,-0.9999999999999917,-1.229506547058001e-7,0,-0.9999999999999885,-1.515149219467121e-7,-3.660328985985662e-9,-0.9999999999999888,-1.4885289071955164e-7,-1.1309699507100747e-8,-0.9999999999999903,-1.3910862535536883e-7,0,-0.9999999999999886,-1.5151492194671207e-7,-5.7736579212593144e-8,-0.9999999999999921,-1.1127433679942822e-7,-9.881404958653203e-8,-0.9999999999999917,-8.264462809896878e-8,-1.5712071883363383e-8,-0.9999999999999962,-8.71302947700718e-8,-1.7417851046097624e-8,-0.9999999999999909,-1.328106787802184e-7,7.692189350911756e-7,-0.9999999999997043,0,-2.0833506945839293e-7,-0.9999999999999782,0,0,-0.9999999999998966,-4.5454545454586237e-7,-2.777777777780014e-7,-0.999999999999807,-5.555555555560041e-7,-2.1505376344107503e-8,-0.9999999999999989,-4.3010752688215104e-8,-7.142857142860624e-7,-0.9999999999994899,-7.142857142860641e-7,-1.91204588910325e-8,-0.9999999999999997,-1.9120458891032542e-8,9.50457509257231e-9,-0.9999999999997948,-6.403703904404942e-7,3.691735643669835e-8,-0.9999999999987612,-0.0000015736023181142692,0,-0.9999999999995868,-9.090909090914429e-7,0,-0.9999999999999954,-9.53211072558254e-8,-8.150857776118938e-8,-0.9999999999999885,-1.2808563982838235e-7,-9.469761535675326e-8,-0.9999999999999925,-7.57574035817337e-8,-1.6233955979594571e-7,-0.9999999999999785,-1.2987046719614576e-7,-4.9019761193283884e-8,-0.9999999999999976,-5.1247745801175707e-8,-7.911348774221959e-8,-0.9999999999999916,-1.0212850622814933e-7,-1.8382307142274255e-8,-0.9999999999999996,-2.3306181030706703e-8,-1.881818935139901e-8,-0.9999999999999996,-1.9844706339467484e-8,-3.7037037037071214e-7,-0.9999999999999313,0,-9.578539156947871e-8,-0.9999999999999902,-1.0101040710199331e-7,-2.1008205131476958e-7,-0.9999999999999676,-1.4405738706098423e-7,0,-0.9999999999999929,-1.1904761904732424e-7,0,-0.9999999999998457,-5.555586419929252e-7,7.830881771471455e-9,-0.9999999999998498,-5.481627681205719e-7,5.882352941181337e-7,-0.9999999999998269,0,5.882352941181338e-7,-0.999999999999827,0,0,-0.9999999999998458,-5.555586419929253e-7,0,0.9999999999998458,5.555586419929253e-7,4.009640137207087e-9,0.9999999999999027,4.410604150927799e-7,-7.830881771471455e-9,0.9999999999998498,5.481627681205719e-7,1.9292069224318313e-9,0.9999999999998658,5.179924445143323e-7,-5.882352941181338e-7,0.9999999999998269,0,-7.051888054750304e-8,0.9999999999999493,3.105282800146574e-7,-5.882352941181338e-7,0.999999999999827,0,-5.882352941181337e-7,0.9999999999998269,0,0,0.9999999999998457,5.555586419929252e-7,0,0.9999999999999929,1.1904761904732424e-7,-3.996821846005347e-8,0.9999999999999881,1.4902368772993888e-7,1.2161124683844382e-8,0.9999999999999961,8.724388320822628e-8,8.150857776118938e-8,0.9999999999999885,1.2808563982838235e-7,2.1008205131476958e-7,0.9999999999999676,1.4405738706098423e-7,4.695393229270649e-8,0.999999999999953,3.0299477914589763e-7,9.578539156947871e-8,0.9999999999999902,1.0101040710199331e-7,1.8818189351399007e-8,0.9999999999999997,1.984470633946748e-8,1.8382307142274255e-8,0.9999999999999996,2.3306181030706703e-8,3.7037037037071214e-7,0.9999999999999313,0,6.881161193633547e-8,0.9999999999999928,9.85676294668969e-8,4.901976119328388e-8,0.9999999999999974,5.1247745801175693e-8,7.911348774221959e-8,0.9999999999999916,1.0212850622814933e-7,1.6233955979594571e-7,0.9999999999999785,1.2987046719614576e-7,9.469761535675326e-8,0.9999999999999925,7.57574035817337e-8,0,0.9999999999995868,9.090909090914429e-7,0,0.9999999999999954,9.53211072558254e-8,-9.50457509257231e-9,0.9999999999997948,6.403703904404943e-7,-3.983672986006445e-8,0.9999999999999937,1.0593057062525495e-7,-6.643367240548313e-8,0.9999999999999968,4.309211183058364e-8,-3.691735643669835e-8,0.9999999999987612,0.0000015736023181142692,-2.4721853652000406e-8,0.999999999998881,0.0000014956730730155382,1.91204588910325e-8,0.9999999999999997,1.9120458891032542e-8,2.1505376344107503e-8,0.9999999999999989,4.3010752688215104e-8,7.142857142860624e-7,0.9999999999994899,7.142857142860641e-7,2.777777777780014e-7,0.999999999999807,5.555555555560041e-7,0,0.9999999999998966,4.5454545454586237e-7,1.5712071883363383e-8,0.9999999999999962,8.71302947700718e-8,2.0833506945839293e-7,0.9999999999999782,0,3.6603289859856616e-9,0.9999999999999889,1.4885289071955162e-7,1.130969950710075e-8,0.9999999999999903,1.3910862535536888e-7,-7.692189350911756e-7,0.9999999999997043,0,1.9855110672539963e-7,0.9999999999999797,3.488104218161526e-8,1.7417851046097624e-8,0.9999999999999909,1.328106787802184e-7,9.881404958653203e-8,0.9999999999999917,8.264462809896878e-8,4.9221362715113367e-8,0.999999999999998,4.1167032756336184e-8,4.025172508597362e-8,0.9999999999999917,1.229506547058001e-7,5.7736579212593144e-8,0.9999999999999921,1.1127433679942822e-7,0,0.9999999999999886,1.5151492194671207e-7,0,0.9999999999999885,1.515149219467121e-7,6.050435944752993e-8,0.999999999999998,5.601817697697042e-9,0.00003600401366870796,0.9999999993462996,0.0000033334444459725343,-3.954396362848388e-8,0.9999999999999885,1.463639545265995e-7,-7.077168883336926e-9,0.9999999999999324,3.6801278193352e-7,5.982318229206243e-7,0.9999999999997952,2.279116737581869e-7,-1.851856424335445e-7,0.9999999999999752,1.2345709495569623e-7,-4.7619274377456534e-7,0.9999999999998866,0,-9.99002096804727e-9,0.9999999999999799,1.9980041936094947e-7,0,0.9999999999999792,2.0408184089968347e-7,0,0.9999999999999792,2.0408184089968353e-7,0,0.999999999999979,2.0408184089968355e-7,-6.234445192799429e-8,0.9999999999999858,1.5764172935459136e-7,-1.0126604069917388e-7,0.9999999999999769,-1.898738263109511e-7,-7.142877551085853e-8,0.9999999999999974,0,4.653349865138339e-9,0.9999999999998712,5.072151353000794e-7,-3.646624746600603e-8,0.9999999999999919,1.2342137400708176e-7,0,0.9999999999999913,1.3157825485142072e-7,0,0.9999999999944446,0.000003333333333318141,0,-0.9999999999999541,-3.030339761781081e-7,0,0.9999999999999541,3.030339761781081e-7,0,-0.9999999999999541,-3.0303397616128635e-7,0,0.9999999999999541,3.0303397616128635e-7,1.1214414066161237e-8,-0.9999999999999966,-8.264462809925591e-8,1.0687077111467794e-8,-0.9999999999999968,-7.87584182405404e-8,3.2997094022722074e-8,-0.9999999999999969,-7.289070495775907e-8,1.5211162112101927e-8,-0.9999999999999962,-8.567670135205651e-8,-1.2086686200581345e-7,-0.9999999999999908,-6.215252334166528e-8,-7.013596647778137e-8,-0.9999999999999939,-8.517882269083515e-8,0,-0.9999999999999957,-9.246622208916295e-8,1.5031552512363706e-8,-0.9999999999999959,-8.852012612976564e-8,-1.9677527031357117e-8,-0.9999999999999957,-9.126371018737094e-8,3.522242964322979e-7,-0.9999999999999379,0,0,-0.9999999999999958,-9.246622208916295e-8,-1.6071747892008867e-7,-0.9999999999999837,-8.264462809925485e-8,1.6071747892008867e-7,0.9999999999999837,8.264462809925485e-8,1.2086686200581342e-7,0.9999999999999908,6.215252334166526e-8,7.013596647778137e-8,0.9999999999999939,8.517882269083515e-8,1.9677527031357117e-8,0.9999999999999957,9.126371018737095e-8,0,0.9999999999999958,9.246622208916295e-8,-1.5031552512363706e-8,0.9999999999999959,8.852012612976564e-8,-3.522242964322979e-7,0.9999999999999379,0,-3.299709402272207e-8,0.999999999999997,7.289070495775907e-8,-1.5211162112101927e-8,0.9999999999999961,8.567670135205652e-8,0,0.9999999999999957,9.246622208916295e-8,-1.0687077111467794e-8,0.9999999999999968,7.87584182405404e-8,-1.1214414066161237e-8,0.9999999999999966,8.264462809925591e-8,0,-0.999999999999995,-1.0101040710234426e-7,0,-0.9999999999999949,-1.0101040710234425e-7,0,-0.999999999999995,-1.0101040710234425e-7,0,0.999999999999995,1.0101040710234425e-7,0,0.9999999999999949,1.0101040710234423e-7,0,0.9999999999999949,1.0101040710234425e-7,0,0.999999999999995,1.0101040710234426e-7,0,0.9999999999999949,1.0101040710514785e-7,-2.525256734096786e-9,0.9999999999999949,1.0101040710514785e-7,-4.545460743957699e-9,0.9999999999999959,9.090933884626517e-8,-4.545448347246595e-8,0.999999999999999,0,-5.050513468193572e-9,0.9999999999999949,1.0101040710514785e-7,0,0.9999999999999934,1.1363675103764548e-7,2.2431333753909243e-7,0.9999999999999729,6.215252334338924e-8,3.6518957220112166e-8,0.9999999999999951,9.126371018990398e-8,1.607174789245495e-7,0.9999999999999837,8.26446281015487e-8,7.013596647972804e-8,0.9999999999999939,8.517882269319934e-8,0,0.9999999999999958,9.246622209172941e-8,-1.5031552512780903e-8,0.9999999999999959,8.852012613222255e-8,-3.522242964420738e-7,0.9999999999999379,0,-3.29970940236379e-8,0.999999999999997,7.289070495978219e-8,-1.5211162112524113e-8,0.9999999999999961,8.567670135443453e-8,0,0.9999999999999957,9.24662220917294e-8,-1.0687077111764419e-8,0.9999999999999968,7.875841824272639e-8,-1.12144140664725e-8,0.9999999999999966,8.264462810154977e-8],
					"uvs": [[-58.9099,41.1997,-48.7393,41.1997,-58.9099,52.6827,-46.2787,58.5882,-46.2787,35.1302,-87.7813,58.5882,-60.7144,52.6827,-70.0648,47.9255,-60.7144,41.1997,-63.9952,41.1997,-63.9952,41.0357,-80.2354,47.9255,-80.2354,47.7614,-87.7813,36.4425,-87.7813,57.2758,-48.7393,41.0357,-87.7813,35.1302,-70.0648,47.7614,0,0,-175.563,72.885,-160.471,95.5228,-175.563,70.2604,-140.13,95.5228,-140.13,95.8509,-127.99,82.0714,-97.4786,82.0714,-97.4786,82.3995,-92.5574,70.2604,-175.563,114.552,-175.563,117.176,-160.471,95.8509,-127.99,82.3995,-121.429,82.3995,-121.429,105.365,-117.82,105.365,-92.5574,117.176,-117.82,82.3995]],
					"faces": [58,0,1,2,0,0,1,2,0,0,0,0,58,3,1,4,0,3,1,4,0,0,0,0,58,1,3,2,0,1,3,2,0,0,0,0,58,2,3,5,0,2,3,5,1,0,0,0,58,2,5,6,0,2,5,6,0,0,0,0,58,6,5,7,0,6,5,7,0,0,0,0,58,6,7,8,0,6,7,8,0,0,0,0,58,8,7,9,0,8,7,9,0,0,0,0,58,9,7,10,0,9,7,10,0,0,0,0,58,7,5,11,0,7,5,11,1,0,0,0,58,11,5,12,0,11,5,12,1,0,0,0,58,12,5,13,0,12,5,13,0,0,0,0,42,13,5,14,0,13,5,14,0,0,2,58,4,15,16,0,4,15,16,0,0,0,0,58,15,4,1,0,15,4,1,0,0,0,0,58,16,15,10,0,16,15,10,0,0,0,0,58,16,10,17,0,16,10,17,0,0,0,0,58,17,10,7,0,17,10,7,1,0,0,0,58,16,17,12,0,16,17,12,0,0,0,0,58,16,12,13,0,16,12,13,1,0,0,0,58,18,19,20,0,18,18,18,0,0,0,0,58,19,18,21,0,18,18,18,0,0,0,0,58,22,23,24,0,18,18,18,0,1,0,0,58,23,22,25,0,18,18,18,0,0,1,1,58,25,22,26,0,18,18,18,0,1,1,0,58,25,26,27,0,18,18,18,0,1,0,0,58,28,29,30,0,18,18,18,3,3,3,3,58,29,28,31,0,18,18,18,3,3,3,3,58,32,33,34,0,18,18,18,4,4,4,4,58,35,34,33,0,18,18,18,4,4,4,4,58,36,37,38,0,18,18,18,0,0,0,0,58,37,36,39,0,18,18,18,0,0,0,0,58,40,41,42,0,18,18,18,5,5,5,5,58,43,42,41,0,18,18,18,5,5,5,5,58,44,45,46,0,18,18,18,6,6,6,6,58,45,44,47,0,18,18,18,6,6,6,6,58,48,49,50,0,18,18,18,7,7,7,7,58,51,50,49,0,18,18,18,7,7,7,7,58,52,53,54,0,18,18,18,8,8,8,8,58,53,52,55,0,18,18,18,8,8,8,8,58,56,57,58,0,18,18,18,9,9,9,9,58,59,58,57,0,18,18,18,9,9,9,9,58,60,61,62,0,18,18,18,7,7,7,7,58,61,60,63,0,18,18,18,7,7,7,7,58,64,65,66,0,18,18,18,6,6,6,6,58,67,66,65,0,18,18,18,6,6,6,6,58,68,69,70,0,18,18,18,9,9,9,9,58,69,68,71,0,18,18,18,9,9,9,9,58,72,73,74,0,18,18,18,8,8,8,8,58,75,74,73,0,18,18,18,8,8,8,8,58,76,77,78,0,18,18,18,7,7,7,7,58,79,78,77,0,18,18,18,7,7,7,7,58,80,81,82,0,18,18,18,4,4,4,4,58,81,83,82,0,18,18,18,4,4,4,4,58,82,83,84,0,18,18,18,4,4,4,4,58,85,84,83,0,18,18,18,4,4,4,4,58,86,87,88,0,18,18,18,6,6,6,6,58,89,88,87,0,18,18,18,6,6,6,6,58,90,91,92,0,18,18,18,10,10,10,10,58,93,92,91,0,18,18,18,10,10,10,10,58,94,95,96,0,18,18,18,4,4,4,4,58,95,94,97,0,18,18,18,4,4,4,4,58,98,99,100,0,18,18,18,11,12,13,11,58,99,98,101,0,18,18,18,14,13,12,15,58,101,98,102,0,18,18,18,16,15,12,16,58,103,104,105,0,18,18,18,8,8,8,8,58,104,103,106,0,18,18,18,10,8,8,10,58,107,108,109,0,18,18,18,6,6,6,6,58,108,107,110,0,18,18,18,6,6,6,6,58,111,112,113,0,18,18,18,17,18,19,20,58,112,111,114,0,18,18,18,1,19,18,21,58,112,114,115,0,18,18,18,0,19,21,0,58,115,114,116,0,18,18,18,0,0,21,22,58,113,117,118,0,18,18,18,23,20,24,25,58,117,113,112,0,18,18,18,26,24,20,19,58,118,117,116,0,18,18,18,27,25,24,22,58,118,116,114,0,18,18,18,28,25,22,21,58,118,114,119,0,18,18,18,4,25,21,4,58,120,121,122,0,18,18,18,6,6,6,6,58,121,120,123,0,18,18,18,6,6,6,6,58,124,125,126,0,18,18,18,8,8,8,8,58,125,124,127,0,18,18,18,8,8,8,8,58,128,129,130,0,18,18,18,9,9,9,9,58,129,128,131,0,18,18,18,9,9,9,9,58,132,133,134,0,18,18,18,6,6,6,6,58,133,132,135,0,18,18,18,6,6,6,6,58,136,137,138,0,18,18,18,4,4,4,4,58,137,136,139,0,18,18,18,4,4,4,4,58,140,141,142,0,18,18,18,10,10,10,10,58,141,140,143,0,18,18,18,10,10,10,10,58,144,145,146,0,18,18,18,7,7,7,7,58,145,144,147,0,18,18,18,7,7,7,7,58,148,149,150,0,18,18,18,7,7,7,7,58,151,150,149,0,18,18,18,7,7,7,7,58,152,153,154,0,18,18,18,10,10,10,10,58,155,154,153,0,18,18,18,10,10,10,10,58,156,157,158,0,18,18,18,4,4,4,4,58,159,158,157,0,18,18,18,4,4,4,4,58,160,161,162,0,18,18,18,6,6,6,6,58,163,162,161,0,18,18,18,6,6,6,6,58,164,165,166,0,18,18,18,0,0,0,0,58,167,166,165,0,18,18,18,0,0,0,0,58,168,169,170,0,18,18,18,0,0,0,0,58,169,168,171,0,18,18,18,0,0,0,0,58,172,173,174,0,18,18,18,5,5,5,5,58,175,174,173,0,18,18,18,5,5,5,5,58,176,177,178,0,18,18,18,6,6,6,6,58,177,179,180,0,18,18,18,3,6,6,6,58,179,177,181,0,18,18,18,6,6,6,6,58,181,177,176,0,18,18,18,6,6,6,6,58,182,183,184,0,18,18,18,10,10,10,10,58,183,182,185,0,18,18,18,10,10,10,10,58,180,186,187,0,18,18,18,6,6,6,6,58,186,180,179,0,18,18,18,6,6,6,6,58,188,189,190,0,18,18,18,10,10,10,10,58,189,188,191,0,18,18,18,10,10,10,10,58,192,193,194,0,18,18,18,0,0,1,0,58,193,192,195,0,18,18,18,0,1,0,0,58,195,192,196,0,18,18,18,1,0,0,0,58,195,196,197,0,18,18,18,1,0,0,0,58,197,196,198,0,18,18,18,1,0,0,0,58,197,199,200,0,18,18,18,0,0,0,0,58,199,197,201,0,18,18,18,0,0,0,0,58,201,197,198,0,18,18,18,0,0,0,0,58,202,203,204,0,18,18,18,29,7,7,7,58,203,202,205,0,18,18,18,7,7,7,7,58,205,202,206,0,18,18,18,7,7,7,7,58,206,202,207,0,18,18,18,7,7,7,7,58,208,184,209,0,18,18,18,10,10,10,10,58,184,208,182,0,18,18,18,10,10,10,10,58,182,208,210,0,18,18,18,10,10,10,10,58,211,212,213,0,18,18,18,7,7,7,7,58,212,211,214,0,18,18,18,7,7,7,7,58,214,211,215,0,18,18,18,7,7,7,7,58,215,211,216,0,18,18,18,7,7,7,7,42,216,211,217,0,18,18,18,7,7,2,58,218,219,220,0,18,18,18,4,9,4,4,58,219,218,221,0,18,18,18,4,4,9,4,58,221,218,222,0,18,18,18,4,4,9,9,58,222,218,223,0,18,18,18,4,9,9,4,58,224,225,226,0,18,18,18,6,6,6,6,58,225,224,227,0,18,18,18,6,6,6,6,42,227,224,228,0,18,18,18,6,6,2,58,229,230,231,0,18,18,18,10,10,10,10,58,230,229,232,0,18,18,18,10,10,10,10,58,204,233,234,0,18,18,18,7,7,7,7,58,233,204,203,0,18,18,18,7,7,7,7,58,235,236,237,0,18,18,18,5,5,5,5,58,238,239,240,0,18,18,18,5,5,5,5,58,239,238,241,0,18,18,18,5,5,5,5,58,241,238,236,0,18,18,18,30,5,5,5,58,241,236,235,0,18,18,18,5,5,5,5,58,242,243,244,0,18,18,18,0,0,0,0,58,243,245,244,0,18,18,18,1,0,0,0,58,244,245,246,0,18,18,18,0,0,0,0,58,247,246,245,0,18,18,18,0,0,0,0,58,248,243,242,0,18,18,18,0,0,0,0,58,249,250,251,0,18,18,18,0,0,0,0,58,250,249,252,0,18,18,18,0,0,0,0,58,253,254,255,0,18,18,18,5,5,5,5,58,256,255,254,0,18,18,18,5,5,5,5,58,257,258,259,0,18,18,18,6,6,6,6,58,260,257,261,0,18,18,18,6,6,6,6,58,262,260,263,0,18,18,18,6,6,6,6,58,264,262,265,0,18,18,18,6,6,6,6,58,266,264,267,0,18,18,18,6,3,6,6,58,268,266,269,0,18,18,18,6,6,3,6,58,270,268,271,0,18,18,18,3,3,6,3,58,272,270,273,0,18,18,18,6,3,3,6,58,258,274,275,0,18,18,18,6,6,6,6,58,274,258,276,0,18,18,18,6,6,6,6,58,276,258,257,0,18,18,18,6,6,6,6,58,276,257,260,0,18,18,18,6,6,6,6,58,276,260,262,0,18,18,18,6,6,6,6,58,276,262,264,0,18,18,18,6,6,6,6,58,276,264,266,0,18,18,18,6,6,6,3,58,276,266,268,0,18,18,18,6,6,3,6,58,276,268,270,0,18,18,18,6,6,6,3,58,276,270,272,0,18,18,18,6,6,3,3,58,277,278,279,0,18,18,18,7,29,29,29,58,278,280,279,0,18,18,18,7,29,7,29,58,280,281,279,0,18,18,18,7,7,7,29,58,281,282,279,0,18,18,18,7,7,7,29,58,282,283,279,0,18,18,18,7,7,29,29,58,283,284,279,0,18,18,18,7,29,7,29,58,284,285,279,0,18,18,18,7,7,7,29,58,285,286,279,0,18,18,18,7,7,7,29,58,279,286,287,0,18,18,18,7,29,7,7,58,288,287,286,0,18,18,18,7,7,7,7,58,289,278,277,0,18,18,18,7,7,29,29,58,290,280,278,0,18,18,18,29,29,7,29,58,291,281,280,0,18,18,18,7,7,7,7,58,292,282,281,0,18,18,18,7,7,7,7,58,293,283,282,0,18,18,18,7,7,29,7,58,294,284,283,0,18,18,18,7,7,7,29,58,295,285,284,0,18,18,18,7,7,7,7,58,296,286,285,0,18,18,18,7,7,7,7,58,297,298,299,0,18,18,18,4,4,4,4,58,298,297,300,0,18,18,18,4,4,4,4,58,301,302,303,0,18,18,18,10,10,10,10,58,304,303,302,0,18,18,18,10,10,10,10,58,305,306,307,0,18,18,18,7,7,29,7,58,306,305,308,0,18,18,18,7,29,7,7,58,308,305,309,0,18,18,18,7,7,7,29,58,309,305,310,0,18,18,18,7,29,7,7,58,310,305,311,0,18,18,18,7,7,7,7,58,311,305,312,0,18,18,18,7,7,7,7,58,312,305,313,0,18,18,18,7,7,7,29,58,313,305,314,0,18,18,18,7,29,7,7,58,314,305,315,0,18,18,18,7,7,7,7,58,315,305,316,0,18,18,18,7,7,7,7,58,316,305,317,0,18,18,18,7,7,7,7,58,317,305,318,0,18,18,18,7,7,7,7,58,318,305,319,0,18,18,18,7,7,7,7,58,319,305,320,0,18,18,18,7,7,7,7,58,320,305,321,0,18,18,18,7,7,7,7,58,321,305,322,0,18,18,18,7,7,7,7,58,323,324,325,0,18,18,18,6,6,6,6,58,325,324,326,0,18,18,18,6,6,6,6,58,326,324,327,0,18,18,18,6,6,6,6,58,327,324,328,0,18,18,18,6,6,6,6,58,328,324,329,0,18,18,18,6,6,6,6,58,329,324,330,0,18,18,18,6,6,6,6,58,330,324,331,0,18,18,18,6,6,6,6,58,331,324,332,0,18,18,18,6,6,6,6,58,332,324,333,0,18,18,18,6,6,6,3,58,333,324,334,0,18,18,18,6,3,6,6,58,334,324,335,0,18,18,18,6,6,6,6,58,335,324,336,0,18,18,18,6,6,6,6,58,336,324,337,0,18,18,18,6,6,6,3,58,337,324,338,0,18,18,18,6,3,6,6,58,338,324,339,0,18,18,18,6,6,6,3,58,340,339,324,0,18,18,18,6,6,3,6,58,341,342,343,0,18,18,18,9,9,9,9,58,342,341,344,0,18,18,18,9,9,9,9,58,345,346,347,0,18,18,18,8,8,8,8,58,348,347,346,0,18,18,18,8,8,8,8,58,349,350,351,0,18,18,18,31,32,33,31,58,352,353,354,0,18,18,18,34,35,36,37,58,353,352,355,0,18,18,18,38,36,35,38,58,356,357,358,0,18,18,18,0,39,40,0,58,357,356,359,0,18,18,18,41,40,39,42,58,359,356,360,0,18,18,18,43,42,39,44,58,360,356,361,0,18,18,18,45,44,39,46,58,360,361,362,0,18,18,18,47,44,46,48,58,362,361,363,0,18,18,18,49,48,46,50,58,363,361,364,0,18,18,18,51,50,46,52,58,364,361,365,0,18,18,18,53,52,46,54,58,365,361,366,0,18,18,18,55,54,46,56,58,366,361,367,0,18,18,18,57,56,46,58,58,361,356,368,0,18,18,18,0,46,39,0,58,367,369,370,0,18,18,18,0,58,59,0,58,369,367,361,0,18,18,18,60,59,58,46,58,370,369,371,0,18,18,18,1,0,59,61,58,370,371,372,0,18,18,18,0,0,61,62,58,372,373,374,0,18,18,18,63,62,64,65,58,373,372,375,0,18,18,18,66,64,62,67,58,375,372,371,0,18,18,18,68,67,62,61,58,376,377,378,0,18,18,18,0,0,1,0,58,366,379,380,0,18,18,18,0,56,69,1,58,379,366,374,0,18,18,18,70,69,56,65,58,374,366,367,0,18,18,18,71,65,56,58,58,379,374,373,0,18,18,18,72,69,65,64,58,380,379,377,0,18,18,18,0,1,69,1,58,380,377,376,0,18,18,18,0,1,1,0,58,381,382,383,0,18,18,18,73,74,75,73,58,382,381,384,0,18,18,18,76,75,74,77,58,382,384,385,0,18,18,18,1,75,77,78,58,385,384,350,0,18,18,18,0,78,77,33,58,385,350,349,0,18,18,18,79,78,33,32,58,385,349,386,0,18,18,18,80,78,32,81,58,386,349,387,0,18,18,18,0,81,32,0,58,387,349,388,0,18,18,18,1,0,32,82,58,386,387,365,0,18,18,18,0,81,0,54,58,386,365,366,0,18,18,18,1,81,54,56,58,385,386,389,0,18,18,18,80,78,81,80,58,354,390,391,0,18,18,18,1,37,83,1,58,390,354,392,0,18,18,18,84,83,37,85,58,392,354,393,0,18,18,18,86,85,37,87,58,392,393,394,0,18,18,18,0,85,87,88,58,393,354,353,0,18,18,18,89,87,37,36,58,394,393,360,0,18,18,18,0,88,87,44,58,394,360,349,0,18,18,18,90,88,44,32,58,349,360,388,0,18,18,18,91,32,44,82,58,388,360,362,0,18,18,18,92,82,44,48,58,353,395,359,0,18,18,18,93,36,94,42,58,395,353,396,0,18,18,18,95,94,36,96,58,396,353,355,0,18,18,18,38,96,36,38,58,359,395,357,0,18,18,18,97,42,94,40,58,397,398,399,0,18,18,18,98,99,100,101,58,400,401,402,0,18,18,18,102,102,103,104,58,402,401,398,0,18,18,18,105,104,103,100,58,399,398,401,0,18,18,18,106,101,100,103,58,403,404,405,0,18,18,18,107,108,109,110,58,405,404,406,0,18,18,18,111,110,109,112,58,406,404,407,0,18,18,18,113,112,109,114,58,404,408,407,0,18,18,18,5,109,115,114,58,401,409,408,0,18,18,18,116,103,117,115,58,407,408,410,0,18,18,18,5,114,115,118,58,408,409,410,0,18,18,18,119,115,117,118,58,410,409,411,0,18,18,18,120,118,117,121,58,412,411,409,0,18,18,18,30,30,121,117,58,413,414,415,0,18,18,18,122,122,123,124,58,416,417,414,0,18,18,18,30,125,126,123,58,417,418,414,0,18,18,18,5,126,5,123,58,405,406,418,0,18,18,18,30,110,112,5,58,418,406,414,0,18,18,18,5,5,112,123,58,414,406,415,0,18,18,18,122,123,112,124,58,406,419,415,0,18,18,18,127,112,128,124,58,419,420,415,0,18,18,18,5,128,129,124,58,415,420,421,0,18,18,18,30,124,129,130,58,420,422,421,0,18,18,18,131,129,132,130,58,423,421,422,0,18,18,18,133,133,130,132,58,424,425,426,0,18,18,18,5,5,30,30,58,425,427,426,0,18,18,18,5,30,134,30,58,428,429,427,0,18,18,18,135,136,137,134,58,430,416,429,0,18,18,18,138,139,125,137,58,429,416,427,0,18,18,18,140,137,125,134,58,426,427,416,0,18,18,18,5,30,134,125,58,431,425,424,0,18,18,18,5,5,30,5,58,432,433,434,0,18,18,18,141,142,143,144,58,434,433,428,0,18,18,18,145,144,143,136,58,429,428,433,0,18,18,18,146,137,136,143,58,433,432,435,0,18,18,18,5,143,142,5,58,432,436,435,0,18,18,18,30,142,147,5,58,437,430,436,0,18,18,18,148,149,139,147,58,435,436,430,0,18,18,18,5,5,147,139,58,438,439,437,0,18,18,18,5,5,150,149,58,430,437,416,0,18,18,18,151,139,149,125,58,416,437,417,0,18,18,18,152,125,149,126,58,417,437,440,0,18,18,18,153,126,149,154,58,440,437,441,0,18,18,18,155,154,149,156,58,441,437,403,0,18,18,18,157,156,149,108,58,403,437,404,0,18,18,18,158,108,149,109,58,437,439,404,0,18,18,18,159,149,150,109,58,404,439,399,0,18,18,18,160,109,150,101,58,399,439,397,0,18,18,18,161,101,150,99,58,442,397,439,0,18,18,18,5,5,99,150,58,400,443,401,0,18,18,18,102,102,162,103,58,409,401,443,0,18,18,18,163,117,103,162,58,444,419,406,0,18,18,18,164,164,128,112,58,445,446,447,0,18,18,18,4,4,4,4,58,446,445,448,0,18,18,18,4,4,4,4,58,449,450,451,0,18,18,18,10,10,10,10,58,452,451,450,0,18,18,18,10,10,10,10,58,453,454,455,0,18,18,18,4,4,4,4,58,454,453,456,0,18,18,18,4,4,4,4,58,457,458,459,0,18,18,18,10,10,10,10,58,460,459,458,0,18,18,18,10,10,10,10,58,461,462,463,0,18,18,18,0,0,0,0,58,462,461,464,0,18,18,18,0,0,0,0,58,465,466,467,0,18,18,18,5,5,5,5,58,468,467,466,0,18,18,18,5,5,5,5,58,469,470,471,0,18,18,18,4,4,4,4,58,470,469,472,0,18,18,18,4,4,4,4,58,473,474,475,0,18,18,18,10,10,10,10,58,476,475,474,0,18,18,18,10,10,10,10,58,477,478,479,0,18,18,18,0,0,0,0,58,478,477,480,0,18,18,18,0,0,0,0,58,481,482,483,0,18,18,18,5,5,5,5,58,484,483,482,0,18,18,18,5,5,5,5,58,485,486,487,0,18,18,18,4,4,4,4,58,486,485,488,0,18,18,18,4,4,4,4,58,489,490,491,0,18,18,18,10,10,10,10,58,492,491,490,0,18,18,18,10,10,10,10,58,493,494,495,0,18,18,18,0,0,0,0,58,494,493,496,0,18,18,18,0,0,0,0,58,497,498,499,0,18,18,18,5,5,5,5,58,500,499,498,0,18,18,18,5,5,5,5,58,501,502,503,0,18,18,18,4,4,4,4,58,502,501,504,0,18,18,18,4,4,4,4,58,505,506,507,0,18,18,18,10,10,10,10,58,508,507,506,0,18,18,18,10,10,10,10,58,509,510,511,0,18,18,18,0,0,0,0,58,510,509,512,0,18,18,18,0,0,0,0,58,513,514,515,0,18,18,18,5,5,5,5,58,516,515,514,0,18,18,18,5,5,5,5,58,517,518,519,0,18,18,18,4,9,9,4,58,518,517,520,0,18,18,18,4,9,9,4,58,521,522,523,0,18,18,18,10,10,8,8,58,524,523,522,0,18,18,18,10,10,8,8,58,525,526,527,0,18,18,18,165,165,165,165,58,526,525,528,0,18,18,18,165,165,165,165,58,529,530,531,0,18,18,18,166,166,166,166,58,532,531,530,0,18,18,18,166,166,166,166,58,533,534,535,0,18,18,18,4,4,4,4,58,534,533,536,0,18,18,18,4,4,4,4,58,537,538,539,0,18,18,18,10,10,10,10,58,540,539,538,0,18,18,18,10,10,10,10,58,541,542,543,0,18,18,18,165,165,165,165,58,542,541,544,0,18,18,18,165,165,165,165,58,545,546,547,0,18,18,18,166,166,166,166,58,548,547,546,0,18,18,18,166,166,166,166,58,549,550,551,0,18,18,18,4,9,9,4,58,550,549,552,0,18,18,18,4,9,9,4,58,553,554,555,0,18,18,18,10,10,8,8,58,556,555,554,0,18,18,18,10,10,8,8,58,557,558,559,0,18,18,18,167,167,167,167,58,558,557,560,0,18,18,18,167,167,167,167,58,561,562,563,0,18,18,18,168,168,168,168,58,564,563,562,0,18,18,18,168,168,168,168,58,565,566,567,0,18,18,18,9,4,4,9,58,566,565,454,0,18,18,18,4,4,4,4,42,454,565,455,0,18,18,18,4,4,4,42,460,568,459,0,18,18,18,10,10,10,58,459,568,569,0,18,18,18,10,10,10,10,58,570,569,568,0,18,18,18,8,8,10,10,58,571,572,573,0,18,18,18,4,4,4,4,58,572,571,574,0,18,18,18,4,4,4,4,58,575,576,577,0,18,18,18,10,10,10,10,58,578,577,576,0,18,18,18,10,10,10,10,58,579,580,581,0,18,18,18,7,7,7,7,58,580,579,582,0,18,18,18,7,7,7,7,58,583,584,585,0,18,18,18,6,6,6,6,58,586,585,584,0,18,18,18,6,6,6,6,58,587,588,589,0,18,18,18,6,6,6,6,58,588,587,590,0,18,18,18,6,6,6,6,58,591,592,593,0,18,18,18,7,7,7,7,58,594,593,592,0,18,18,18,7,7,7,7,58,595,596,597,0,18,18,18,8,10,10,8,58,596,595,598,0,18,18,18,10,10,10,10,58,599,600,601,0,18,18,18,4,4,4,4,58,602,601,600,0,18,18,18,9,9,4,4,58,603,604,605,0,18,18,18,7,7,7,7,58,604,603,606,0,18,18,18,7,7,7,7,58,607,608,609,0,18,18,18,6,6,6,6,58,610,609,608,0,18,18,18,6,6,6,6,58,611,612,613,0,18,18,18,10,8,8,10,58,612,614,615,0,18,18,18,10,8,10,10,58,614,612,616,0,18,18,18,8,10,8,10,58,616,612,611,0,18,18,18,10,10,8,8,58,617,618,619,0,18,18,18,4,9,9,4,58,619,618,620,0,18,18,18,9,4,9,4,58,621,620,618,0,18,18,18,4,4,4,9,58,622,618,617,0,18,18,18,4,4,9,9,58,623,624,625,0,18,18,18,3,3,3,3,58,624,623,626,0,18,18,18,3,3,3,3,58,627,628,629,0,18,18,18,29,29,29,29,58,630,629,628,0,18,18,18,29,29,29,29,58,631,632,633,0,18,18,18,4,4,4,4,58,632,631,634,0,18,18,18,4,4,4,4,58,635,636,637,0,18,18,18,10,10,10,10,58,638,637,636,0,18,18,18,10,10,10,10,58,639,640,641,0,18,18,18,7,7,29,29,58,640,639,642,0,18,18,18,7,29,7,7,58,643,644,645,0,18,18,18,6,3,6,3,58,646,645,644,0,18,18,18,6,3,3,6,58,647,648,649,0,18,18,18,10,10,10,10,58,648,647,650,0,18,18,18,10,10,10,10,58,651,652,653,0,18,18,18,4,4,4,4,58,654,653,652,0,18,18,18,4,4,4,4,58,655,656,657,0,18,18,18,6,6,6,6,58,656,655,658,0,18,18,18,6,6,6,6,58,659,660,661,0,18,18,18,7,7,7,7,58,662,661,660,0,18,18,18,7,7,7,7,58,663,664,665,0,18,18,18,4,9,4,4,58,664,663,666,0,18,18,18,4,4,9,4,58,666,663,667,0,18,18,18,4,4,9,4,58,667,663,668,0,18,18,18,9,4,9,4,58,668,663,669,0,18,18,18,4,4,9,4,58,670,671,672,0,18,18,18,10,10,8,10,58,672,671,673,0,18,18,18,8,10,8,10,58,673,671,674,0,18,18,18,10,10,8,10,58,674,671,675,0,18,18,18,10,10,8,10,58,676,675,671,0,18,18,18,10,10,10,8,58,677,678,679,0,18,18,18,4,4,4,4,58,678,677,680,0,18,18,18,4,4,4,4,58,680,677,681,0,18,18,18,4,4,4,4,58,682,678,680,0,18,18,18,4,4,4,4,58,683,684,685,0,18,18,18,10,10,10,10,58,686,687,683,0,18,18,18,10,10,10,10,58,683,687,684,0,18,18,18,10,10,10,10,58,688,684,687,0,18,18,18,10,10,10,10,58,689,663,690,0,18,18,18,4,4,9,4,58,663,689,669,0,18,18,18,4,9,4,4,58,670,691,671,0,18,18,18,10,10,10,8,58,692,671,691,0,18,18,18,10,10,8,10,58,693,694,695,0,18,18,18,7,7,7,7,58,694,693,696,0,18,18,18,7,7,7,29,42,696,693,697,0,18,18,18,29,7,7,42,698,699,700,0,18,18,18,6,6,3,58,700,699,701,0,18,18,18,6,3,6,6,58,702,701,699,0,18,18,18,6,6,6,6,58,703,698,700,0,18,18,18,3,3,6,3,58,698,703,704,0,18,18,18,3,6,3,6,58,705,706,697,0,18,18,18,29,7,29,7,58,696,697,706,0,18,18,18,29,29,7,29,58,704,699,698,0,18,18,18,6,6,6,6,58,699,704,707,0,18,18,18,6,6,6,6,58,708,705,693,0,18,18,18,7,7,7,7,58,697,693,705,0,18,18,18,7,7,7,7,58,709,710,711,0,18,18,18,4,4,4,4,58,710,709,712,0,18,18,18,4,4,4,4,58,712,709,713,0,18,18,18,4,4,4,4,58,714,715,716,0,18,18,18,10,10,10,10,58,716,715,717,0,18,18,18,10,10,10,10,58,718,717,715,0,18,18,18,10,10,10,10,58,719,720,721,0,18,18,18,10,10,10,10,58,720,719,722,0,18,18,18,10,10,10,10,58,723,724,725,0,18,18,18,4,4,4,4,58,726,725,724,0,18,18,18,4,4,4,4,58,727,728,729,0,18,18,18,10,10,10,10,58,728,727,730,0,18,18,18,10,10,10,10,58,731,732,733,0,18,18,18,4,4,4,4,58,734,733,732,0,18,18,18,4,4,4,4,58,735,736,737,0,18,18,18,0,0,0,0,58,736,735,738,0,18,18,18,0,0,0,0,58,739,740,741,0,18,18,18,5,5,5,5,58,742,741,740,0,18,18,18,5,5,5,5,58,743,744,745,0,18,18,18,10,10,10,10,58,744,743,746,0,18,18,18,10,10,10,10,58,747,748,749,0,18,18,18,4,4,4,4,58,750,749,748,0,18,18,18,4,4,4,4,58,751,752,753,0,18,18,18,6,6,6,6,58,752,751,754,0,18,18,18,6,6,6,6,58,755,756,757,0,18,18,18,7,7,7,7,58,758,757,756,0,18,18,18,7,7,7,7,58,759,760,761,0,18,18,18,4,4,4,4,58,760,759,762,0,18,18,18,4,4,4,4,58,760,762,763,0,18,18,18,4,4,4,4,58,763,762,764,0,18,18,18,4,4,4,4,58,765,766,767,0,18,18,18,10,10,10,10,58,767,766,768,0,18,18,18,10,10,10,10,58,766,769,768,0,18,18,18,10,10,10,10,58,770,768,769,0,18,18,18,10,10,10,10,58,771,772,773,0,18,18,18,7,7,7,7,58,772,771,774,0,18,18,18,7,7,7,7,58,775,776,777,0,18,18,18,6,6,6,6,58,778,777,776,0,18,18,18,6,6,6,6,58,779,780,781,0,18,18,18,4,4,4,4,58,780,779,782,0,18,18,18,4,4,4,4,58,783,784,785,0,18,18,18,10,10,10,10,58,786,785,784,0,18,18,18,10,10,10,10,58,574,787,572,0,18,18,18,4,4,4,4,58,787,574,788,0,18,18,18,4,4,4,4,58,789,575,790,0,18,18,18,10,10,10,10,58,577,790,575,0,18,18,18,10,10,10,10,58,791,792,793,0,18,18,18,5,5,5,5,58,794,795,796,0,18,18,18,5,5,5,5,58,795,794,797,0,18,18,18,5,5,5,5,58,795,797,798,0,18,18,18,5,5,5,5,42,797,794,799,0,18,18,18,5,5,2,58,798,797,792,0,18,18,18,5,5,5,5,58,798,792,791,0,18,18,18,5,5,5,5,58,800,801,802,0,18,18,18,0,0,0,0,58,801,803,802,0,18,18,18,0,0,0,0,42,804,805,803,0,18,18,18,2,0,0,58,802,803,806,0,18,18,18,0,0,0,0,58,803,805,806,0,18,18,18,0,0,0,0,58,807,806,805,0,18,18,18,0,0,0,0,58,808,801,800,0,18,18,18,0,0,0,0,58,809,810,811,0,18,18,18,7,7,7,7,58,810,809,812,0,18,18,18,7,7,7,7,58,813,814,815,0,18,18,18,6,6,6,6,58,816,815,814,0,18,18,18,6,6,6,6,58,817,818,819,0,18,18,18,0,0,0,0,58,818,817,820,0,18,18,18,0,0,0,1,58,818,820,821,0,18,18,18,0,0,1,0,58,821,820,822,0,18,18,18,0,0,1,1,58,822,820,823,0,18,18,18,0,1,1,0,58,823,820,824,0,18,18,18,0,0,1,0,58,824,820,825,0,18,18,18,0,0,1,0,58,825,820,826,0,18,18,18,1,0,1,1,58,819,827,828,0,18,18,18,0,0,0,0,58,827,819,818,0,18,18,18,0,0,0,0,42,827,818,829,0,18,18,18,0,0,2,58,828,827,830,0,18,18,18,0,0,0,0,58,831,832,833,0,18,18,18,5,5,5,5,42,834,835,832,0,18,18,18,2,5,5,58,835,836,832,0,18,18,18,5,5,5,5,58,833,832,836,0,18,18,18,5,5,5,5,58,837,838,839,0,18,18,18,30,30,30,5,58,839,838,840,0,18,18,18,5,5,30,5,58,840,838,841,0,18,18,18,5,5,30,5,58,841,838,842,0,18,18,18,5,5,30,30,58,842,838,843,0,18,18,18,5,30,30,5,58,843,838,835,0,18,18,18,5,5,30,5,58,838,844,835,0,18,18,18,5,30,5,5,58,836,835,844,0,18,18,18,5,5,5,5,58,642,845,640,0,18,18,18,7,7,7,29,58,845,642,846,0,18,18,18,7,7,7,29,58,846,642,847,0,18,18,18,7,29,7,7,58,848,643,849,0,18,18,18,6,6,3,3,58,849,643,850,0,18,18,18,6,3,3,6,58,645,850,643,0,18,18,18,6,3,6,3,58,641,851,852,0,18,18,18,7,29,7,7,58,851,641,845,0,18,18,18,7,7,29,7,42,845,641,640,0,18,18,18,7,29,29,42,645,646,850,0,18,18,18,3,3,6,58,850,646,853,0,18,18,18,6,6,3,6,58,854,853,646,0,18,18,18,6,6,6,3,58,855,649,856,0,18,18,18,10,10,10,10,58,649,855,647,0,18,18,18,10,10,10,10,58,652,857,654,0,18,18,18,4,4,4,4,58,858,654,857,0,18,18,18,4,4,4,4,58,657,859,860,0,18,18,18,6,6,6,6,58,859,657,656,0,18,18,18,6,6,6,6,58,661,662,861,0,18,18,18,7,7,7,7,58,862,861,662,0,18,18,18,7,7,7,7,58,863,864,865,0,18,18,18,4,4,9,4,58,864,863,866,0,18,18,18,4,9,4,4,58,866,863,867,0,18,18,18,4,4,4,4,58,868,869,870,0,18,18,18,10,10,10,10,58,870,869,871,0,18,18,18,10,10,10,8,58,872,871,869,0,18,18,18,10,10,8,10,58,873,874,875,0,18,18,18,7,7,7,7,58,874,873,876,0,18,18,18,7,7,7,7,58,877,878,879,0,18,18,18,6,6,6,6,58,880,879,878,0,18,18,18,6,6,6,6,58,881,882,883,0,18,18,18,7,7,7,7,58,884,883,882,0,18,18,18,7,7,7,7,58,885,886,887,0,18,18,18,10,10,10,10,58,888,887,886,0,18,18,18,10,10,10,10,58,889,890,891,0,18,18,18,4,4,4,4,58,892,891,890,0,18,18,18,4,4,4,4,58,893,894,895,0,18,18,18,6,6,6,6,58,896,895,894,0,18,18,18,6,6,6,6,58,897,898,899,0,18,18,18,7,7,7,7,58,900,899,898,0,18,18,18,7,7,7,7,58,901,902,903,0,18,18,18,10,10,10,10,58,904,903,902,0,18,18,18,10,10,10,10,58,905,906,907,0,18,18,18,4,4,4,4,58,908,907,906,0,18,18,18,4,4,4,4,58,909,910,911,0,18,18,18,6,6,6,6,58,912,911,910,0,18,18,18,6,6,6,6,58,913,914,915,0,18,18,18,7,7,7,7,58,916,915,914,0,18,18,18,7,7,7,7,58,917,918,919,0,18,18,18,10,10,10,10,58,920,919,918,0,18,18,18,10,10,10,10,58,921,922,923,0,18,18,18,4,4,4,4,58,924,923,922,0,18,18,18,4,4,4,4,58,925,926,927,0,18,18,18,6,6,6,6,58,928,927,926,0,18,18,18,6,6,6,6,58,929,930,931,0,18,18,18,7,7,7,7,58,932,931,930,0,18,18,18,7,7,7,7,58,933,934,935,0,18,18,18,10,10,10,10,58,936,935,934,0,18,18,18,10,10,10,10,58,937,938,939,0,18,18,18,4,4,4,4,58,940,939,938,0,18,18,18,4,4,4,4,58,941,942,943,0,18,18,18,6,6,6,6,58,944,943,942,0,18,18,18,6,6,6,6,58,945,946,947,0,18,18,18,7,7,7,7,58,948,947,946,0,18,18,18,7,7,7,7,58,949,950,951,0,18,18,18,10,10,10,10,58,952,951,950,0,18,18,18,10,10,10,10,58,953,954,955,0,18,18,18,4,4,4,4,58,956,955,954,0,18,18,18,4,4,4,4,58,957,958,959,0,18,18,18,6,6,6,6,58,960,959,958,0,18,18,18,6,6,6,6,58,961,962,963,0,18,18,18,7,7,7,7,58,964,963,962,0,18,18,18,7,7,7,7,58,965,966,967,0,18,18,18,10,10,10,10,58,968,967,966,0,18,18,18,10,10,10,10,58,969,970,971,0,18,18,18,4,4,4,4,58,972,971,970,0,18,18,18,4,4,4,4,58,973,974,975,0,18,18,18,6,6,6,6,58,976,975,974,0,18,18,18,6,6,6,6,58,977,978,979,0,18,18,18,7,7,7,7,58,980,979,978,0,18,18,18,7,7,7,7,58,981,982,983,0,18,18,18,8,8,8,8,58,984,983,982,0,18,18,18,8,8,8,8,58,985,986,987,0,18,18,18,9,9,9,9,58,988,987,986,0,18,18,18,9,9,9,9,58,989,990,991,0,18,18,18,6,6,6,6,58,992,991,990,0,18,18,18,6,6,6,6,58,993,994,995,0,18,18,18,7,7,7,7,58,996,995,994,0,18,18,18,7,7,7,7,58,997,998,999,0,18,18,18,10,10,10,10,58,1000,999,998,0,18,18,18,10,10,10,10,58,1001,1002,1003,0,18,18,18,4,4,4,4,58,1004,1003,1002,0,18,18,18,4,4,4,4,58,1005,1006,1007,0,18,18,18,6,6,6,6,58,1008,1007,1006,0,18,18,18,6,6,6,6,58,1009,1010,1011,0,18,18,18,7,7,7,7,58,1012,1011,1010,0,18,18,18,7,7,7,7,58,1013,1014,1015,0,18,18,18,10,10,10,10,58,1016,1015,1014,0,18,18,18,10,10,10,10,58,1017,1018,1019,0,18,18,18,4,4,4,4,58,1020,1019,1018,0,18,18,18,4,4,4,4,58,1021,1022,1023,0,18,18,18,6,6,6,6,58,1024,1023,1022,0,18,18,18,6,6,6,6,58,1025,1026,1027,0,18,18,18,7,7,7,7,58,1028,1027,1026,0,18,18,18,7,7,7,7,58,1029,1030,1031,0,18,18,18,10,10,10,10,58,1032,1031,1030,0,18,18,18,10,10,10,10,58,1033,1034,1035,0,18,18,18,4,4,4,4,58,1036,1035,1034,0,18,18,18,4,4,4,4,58,1037,1038,1039,0,18,18,18,6,6,6,6,58,1040,1039,1038,0,18,18,18,6,6,6,6,58,1041,1042,1043,0,18,18,18,7,7,7,7,58,1044,1043,1042,0,18,18,18,7,7,7,7,58,1045,1046,1047,0,18,18,18,10,10,10,10,58,1048,1047,1046,0,18,18,18,10,10,10,10,58,1049,1050,1051,0,18,18,18,4,4,4,4,58,1052,1051,1050,0,18,18,18,4,4,4,4,58,1053,1054,1055,0,18,18,18,6,6,6,6,58,1056,1055,1054,0,18,18,18,6,6,6,6,58,1057,1058,1059,0,18,18,18,7,7,7,7,58,1060,1059,1058,0,18,18,18,7,7,7,7,58,1061,1062,1063,0,18,18,18,10,10,10,10,58,1064,1063,1062,0,18,18,18,10,10,10,10,58,1065,1066,1067,0,18,18,18,4,4,4,4,58,1068,1067,1066,0,18,18,18,4,4,4,4,58,1069,1070,1071,0,18,18,18,6,6,6,6,58,1072,1071,1070,0,18,18,18,6,6,6,6,58,1073,1074,1075,0,18,18,18,7,7,7,7,58,1076,1075,1074,0,18,18,18,7,7,7,7,58,1077,1078,1079,0,18,18,18,8,8,8,8,58,1080,1079,1078,0,18,18,18,8,8,8,8,58,1081,1082,1083,0,18,18,18,9,9,9,9,58,1084,1083,1082,0,18,18,18,9,9,9,9,58,1085,1086,1087,0,18,18,18,6,6,6,6,58,1088,1087,1086,0,18,18,18,6,6,6,6,58,1089,1090,1091,0,18,18,18,7,7,7,7,58,1092,1091,1090,0,18,18,18,7,7,7,7,58,1093,1094,1095,0,18,18,18,8,8,8,8,58,1096,1095,1094,0,18,18,18,8,8,8,8,58,1097,1098,1099,0,18,18,18,9,9,9,9,58,1100,1099,1098,0,18,18,18,9,9,9,9,58,1101,1102,1103,0,18,18,18,6,6,6,6,58,1104,1103,1102,0,18,18,18,6,6,6,6,58,1105,1106,1107,0,18,18,18,7,7,7,7,58,1108,1107,1106,0,18,18,18,7,7,7,7,58,1109,1110,1111,0,18,18,18,10,10,10,10,58,1112,1111,1110,0,18,18,18,10,10,10,10,58,1113,1114,1115,0,18,18,18,4,4,4,4,58,1116,1115,1114,0,18,18,18,4,4,4,4,58,1117,1118,1119,0,18,18,18,6,6,6,6,58,1120,1119,1118,0,18,18,18,6,6,6,6,58,1121,1122,1123,0,18,18,18,7,7,7,7,58,1124,1123,1122,0,18,18,18,7,7,7,7,58,1125,1126,1127,0,18,18,18,8,8,8,8,58,1128,1127,1126,0,18,18,18,8,8,8,8,58,1129,1130,1131,0,18,18,18,9,9,9,9,58,1132,1131,1130,0,18,18,18,9,9,9,9,58,1133,1134,1135,0,18,18,18,6,6,6,6,58,1136,1135,1134,0,18,18,18,6,6,6,6,58,1137,1138,1139,0,18,18,18,29,29,29,29,58,1140,1139,1138,0,18,18,18,29,29,29,29,58,1141,1142,1143,0,18,18,18,8,8,8,8,58,1144,1143,1142,0,18,18,18,8,8,8,8,58,1145,1146,1147,0,18,18,18,9,9,9,9,58,1148,1147,1146,0,18,18,18,9,9,9,9,58,1149,1150,1151,0,18,18,18,3,3,3,3,58,1152,1151,1150,0,18,18,18,3,3,3,3,58,1153,1154,1155,0,18,18,18,7,7,7,7,58,1156,1155,1154,0,18,18,18,7,7,7,7,58,1157,1158,1159,0,18,18,18,8,8,8,8,58,1160,1159,1158,0,18,18,18,8,8,8,8,58,1161,1162,1163,0,18,18,18,9,9,9,9,58,1164,1163,1162,0,18,18,18,9,9,9,9,58,1165,1166,1167,0,18,18,18,6,6,6,6,58,1168,1167,1166,0,18,18,18,6,6,6,6,58,1169,1170,1171,0,18,18,18,7,7,7,7,58,1172,1171,1170,0,18,18,18,7,7,7,7,58,1173,1174,1175,0,18,18,18,8,8,8,8,58,1176,1175,1174,0,18,18,18,8,8,8,8,58,1177,1178,1179,0,18,18,18,9,9,9,9,58,1180,1179,1178,0,18,18,18,9,9,9,9,58,1181,1182,1183,0,18,18,18,6,6,6,6,58,1184,1183,1182,0,18,18,18,6,6,6,6,58,1185,1186,1187,0,18,18,18,29,29,29,29,58,1188,1187,1186,0,18,18,18,29,29,29,29,58,1189,1190,1191,0,18,18,18,8,8,8,8,58,1192,1191,1190,0,18,18,18,8,8,8,8,58,1193,1194,1195,0,18,18,18,9,9,9,9,58,1196,1195,1194,0,18,18,18,9,9,9,9,58,1197,1198,1199,0,18,18,18,3,3,3,3,58,1200,1199,1198,0,18,18,18,3,3,3,3,58,1201,1202,1203,0,18,18,18,5,5,5,5,58,1202,1201,1204,0,18,18,18,5,5,5,5,58,1205,1206,1207,0,18,18,18,0,0,0,0,58,1208,1207,1206,0,18,18,18,0,0,0,0,58,1209,1210,1211,0,18,18,18,3,6,3,6,58,1210,1209,1212,0,18,18,18,6,3,6,6,58,1212,1209,1213,0,18,18,18,6,6,6,6,58,1213,1209,1214,0,18,18,18,6,6,6,6,58,1215,1216,1217,0,18,18,18,7,7,7,7,58,1217,1216,1218,0,18,18,18,7,7,7,7,58,1218,1216,1219,0,18,18,18,7,7,7,29,58,1220,1219,1216,0,18,18,18,29,7,29,7,58,1221,1204,1201,0,18,18,18,5,5,5,5,58,1204,1221,1222,0,18,18,18,5,5,5,5,58,1223,1224,1205,0,18,18,18,0,0,0,0,58,1206,1205,1224,0,18,18,18,0,0,0,0,58,1225,1226,1227,0,18,18,18,10,10,10,10,58,1226,1225,1228,0,18,18,18,10,10,10,10,58,1229,1230,1231,0,18,18,18,4,4,4,4,58,1232,1231,1230,0,18,18,18,4,4,4,4,58,1233,1234,1235,0,18,18,18,7,7,29,7,58,1234,1233,1236,0,18,18,18,29,29,7,7,58,1236,1233,1237,0,18,18,18,7,7,7,7,58,1237,1233,1238,0,18,18,18,7,7,7,7,58,1239,1240,1241,0,18,18,18,6,6,6,6,58,1241,1240,1242,0,18,18,18,6,6,6,6,58,1242,1240,1243,0,18,18,18,3,6,6,3,58,1244,1243,1240,0,18,18,18,6,6,3,6,58,1203,1245,1246,0,18,18,18,5,5,30,5,58,1245,1203,1202,0,18,18,18,5,30,5,5,58,1207,1208,1247,0,18,18,18,0,0,0,1,58,1248,1247,1208,0,18,18,18,0,0,1,0,58,1249,1250,1251,0,18,18,18,4,4,4,4,58,1250,1249,1252,0,18,18,18,4,4,4,4,58,1253,1254,1255,0,18,18,18,10,10,10,10,58,1256,1255,1254,0,18,18,18,10,10,10,10,42,1257,1258,1259,0,18,18,18,7,2,2,42,1258,1257,1260,0,18,18,18,2,7,7,58,1260,1257,1261,0,18,18,18,7,7,7,7,58,1260,1261,1262,0,18,18,18,7,7,7,7,58,1262,1261,1263,0,18,18,18,7,7,7,7,58,1264,1265,1266,0,18,18,18,6,6,6,6,58,1266,1265,1267,0,18,18,18,6,6,6,6,58,1265,1268,1267,0,18,18,18,6,6,6,6,42,1267,1268,1269,0,18,18,18,6,6,2,42,1270,1269,1268,0,18,18,18,2,2,6,58,1212,1271,1272,0,18,18,18,6,6,6,6,58,1271,1212,1273,0,18,18,18,6,6,6,6,42,1273,1212,1213,0,18,18,18,6,6,6,42,1217,1218,1274,0,18,18,18,7,7,7,58,1274,1218,1275,0,18,18,18,7,7,7,7,58,1276,1275,1218,0,18,18,18,7,7,7,7,58,1277,1278,1279,0,18,18,18,6,6,6,6,58,1278,1277,1210,0,18,18,18,6,6,6,3,42,1210,1277,1211,0,18,18,18,3,6,6,42,1220,1280,1219,0,18,18,18,7,7,29,58,1219,1280,1281,0,18,18,18,7,29,7,7,58,1282,1281,1280,0,18,18,18,7,7,7,7,58,1283,1284,1285,0,18,18,18,6,6,6,6,58,1284,1283,1277,0,18,18,18,6,6,6,6,58,1277,1283,1211,0,18,18,18,6,6,6,6,58,1211,1283,1209,0,18,18,18,6,6,6,6,58,1216,1286,1220,0,18,18,18,7,7,7,7,58,1220,1286,1280,0,18,18,18,7,7,7,7,58,1280,1286,1287,0,18,18,18,7,7,7,7,58,1288,1287,1286,0,18,18,18,7,7,7,7,58,1289,1290,1291,0,18,18,18,7,7,7,7,58,1290,1289,1234,0,18,18,18,7,7,7,29,42,1234,1289,1235,0,18,18,18,29,7,7,42,1244,1292,1243,0,18,18,18,6,6,3,58,1243,1292,1293,0,18,18,18,6,3,6,6,58,1294,1293,1292,0,18,18,18,6,6,6,6,58,1295,1222,1221,0,18,18,18,5,5,5,5,58,1222,1295,1296,0,18,18,18,5,5,5,5,58,1297,1298,1223,0,18,18,18,0,0,0,0,58,1224,1223,1298,0,18,18,18,0,0,0,0,58,1299,1300,1301,0,18,18,18,5,5,5,5,58,1300,1299,1302,0,18,18,18,5,5,5,5,58,1303,1304,1305,0,18,18,18,0,0,0,0,58,1306,1305,1304,0,18,18,18,0,0,0,0,58,1238,1307,1237,0,18,18,18,7,7,7,7,58,1307,1238,1308,0,18,18,18,7,7,7,7,58,1308,1238,1309,0,18,18,18,7,7,7,7,58,1309,1238,1310,0,18,18,18,7,7,7,7,58,1311,1239,1312,0,18,18,18,6,6,6,6,58,1312,1239,1313,0,18,18,18,6,6,6,6,58,1313,1239,1314,0,18,18,18,6,6,6,6,58,1241,1314,1239,0,18,18,18,6,6,6,6,58,1236,1315,1316,0,18,18,18,7,7,7,7,58,1315,1236,1307,0,18,18,18,7,7,7,7,42,1307,1236,1237,0,18,18,18,7,7,7,42,1241,1242,1314,0,18,18,18,6,6,6,58,1314,1242,1317,0,18,18,18,6,6,6,6,58,1318,1317,1242,0,18,18,18,6,6,6,6,58,1319,1320,1321,0,18,18,18,6,6,6,6,58,1320,1319,1322,0,18,18,18,6,6,6,6,58,1322,1319,1323,0,18,18,18,3,6,6,6,58,1323,1319,1324,0,18,18,18,6,6,6,6,58,1324,1319,1325,0,18,18,18,6,6,6,6,58,1326,1327,1328,0,18,18,18,7,7,7,7,58,1328,1327,1329,0,18,18,18,7,7,7,7,58,1329,1327,1330,0,18,18,18,29,7,7,7,58,1330,1327,1331,0,18,18,18,7,7,7,7,58,1332,1331,1327,0,18,18,18,7,7,7,7,58,1246,1333,1334,0,18,18,18,5,5,5,5,58,1333,1246,1245,0,18,18,18,5,5,5,30,58,1247,1248,1335,0,18,18,18,0,1,0,0,58,1336,1335,1248,0,18,18,18,0,0,0,0,58,1337,1338,1339,0,18,18,18,5,5,5,5,58,1338,1337,1340,0,18,18,18,5,5,5,5,58,1341,1342,1343,0,18,18,18,0,0,0,0,58,1344,1343,1342,0,18,18,18,0,0,0,0,58,1345,1346,1347,0,18,18,18,5,5,5,5,58,1346,1345,1348,0,18,18,18,5,5,5,5,58,1349,1350,1351,0,18,18,18,0,0,0,0,58,1352,1351,1350,0,18,18,18,0,0,0,0,58,1353,1296,1295,0,18,18,18,5,5,5,5,58,1296,1353,1354,0,18,18,18,5,5,5,5,58,1355,1356,1297,0,18,18,18,0,0,0,0,58,1298,1297,1356,0,18,18,18,0,0,0,0,58,1357,1358,1359,0,18,18,18,6,6,6,6,58,1358,1357,1360,0,18,18,18,6,6,6,6,58,1358,1360,1361,0,18,18,18,6,6,6,6,58,1362,1363,1364,0,18,18,18,7,7,7,7,58,1363,1365,1364,0,18,18,18,7,7,7,7,58,1366,1364,1365,0,18,18,18,7,7,7,7,58,1367,1354,1353,0,18,18,18,5,5,5,5,58,1354,1367,1368,0,18,18,18,5,5,5,5,58,1368,1367,1369,0,18,18,18,5,5,5,5,58,1368,1369,1370,0,18,18,18,5,5,5,5,58,1371,1372,1373,0,18,18,18,0,0,0,0,58,1372,1374,1373,0,18,18,18,0,0,0,0,58,1373,1374,1355,0,18,18,18,0,0,0,0,58,1356,1355,1374,0,18,18,18,0,0,0,0,58,1375,1376,1377,0,18,18,18,10,10,10,10,58,1376,1375,1378,0,18,18,18,10,10,10,10,58,1379,1380,1381,0,18,18,18,4,4,4,4,58,1382,1381,1380,0,18,18,18,4,4,4,4,58,1383,1384,1385,0,18,18,18,4,4,4,4,58,1384,1383,1386,0,18,18,18,4,4,4,4,58,1387,1388,1389,0,18,18,18,10,10,10,10,58,1390,1389,1388,0,18,18,18,10,10,10,10,58,1391,1392,1393,0,18,18,18,10,10,10,10,58,1392,1391,1394,0,18,18,18,10,10,10,10,58,1395,1396,1397,0,18,18,18,4,4,4,4,58,1398,1397,1396,0,18,18,18,4,4,4,4,58,1334,1399,1400,0,18,18,18,5,5,5,5,58,1399,1334,1333,0,18,18,18,5,5,5,5,58,1335,1336,1401,0,18,18,18,0,0,0,0,58,1402,1401,1336,0,18,18,18,0,0,0,0,58,1403,1404,1405,0,18,18,18,6,6,6,6,58,1404,1403,1284,0,18,18,18,6,6,6,6,42,1284,1403,1285,0,18,18,18,6,6,6,42,1288,1406,1287,0,18,18,18,7,7,7,58,1287,1406,1407,0,18,18,18,7,7,7,7,58,1408,1407,1406,0,18,18,18,7,7,7,7,58,1400,1409,1410,0,18,18,18,5,5,5,5,58,1409,1400,1399,0,18,18,18,5,5,5,5,58,1401,1402,1411,0,18,18,18,0,0,0,0,58,1412,1411,1402,0,18,18,18,0,0,0,0,58,1413,1414,1415,0,18,18,18,6,6,6,6,58,1414,1413,1403,0,18,18,18,6,6,6,6,58,1403,1413,1285,0,18,18,18,6,6,6,6,58,1285,1413,1283,0,18,18,18,6,6,6,6,58,1286,1416,1288,0,18,18,18,7,7,7,7,58,1288,1416,1406,0,18,18,18,7,7,7,7,58,1406,1416,1417,0,18,18,18,7,7,7,7,58,1418,1417,1416,0,18,18,18,7,7,7,7,58,1310,1419,1309,0,18,18,18,7,7,7,7,58,1419,1310,1420,0,18,18,18,7,7,7,7,58,1420,1310,1421,0,18,18,18,7,7,7,7,58,1421,1310,1422,0,18,18,18,7,7,7,7,58,1423,1311,1424,0,18,18,18,6,6,6,6,58,1424,1311,1425,0,18,18,18,6,6,6,6,58,1425,1311,1426,0,18,18,18,6,6,6,6,58,1312,1426,1311,0,18,18,18,6,6,6,6,58,1308,1427,1428,0,18,18,18,7,7,7,7,58,1427,1308,1419,0,18,18,18,7,7,7,7,42,1419,1308,1309,0,18,18,18,7,7,7,42,1312,1313,1426,0,18,18,18,6,6,6,58,1426,1313,1429,0,18,18,18,6,6,6,6,58,1430,1429,1313,0,18,18,18,6,6,6,6,58,1431,1432,1433,0,18,18,18,7,7,7,7,58,1432,1431,1434,0,18,18,18,7,7,7,7,42,1434,1431,1435,0,18,18,18,7,7,2,42,1436,1437,1438,0,18,18,18,2,6,6,58,1438,1437,1439,0,18,18,18,6,6,6,6,58,1440,1439,1437,0,18,18,18,6,6,6,6,58,1441,1442,1443,0,18,18,18,10,10,10,10,58,1442,1441,1444,0,18,18,18,10,10,10,10,58,1445,1446,1447,0,18,18,18,4,4,4,4,58,1448,1447,1446,0,18,18,18,4,4,4,4,58,1449,1450,1451,0,18,18,18,5,5,5,5,58,1450,1449,1452,0,18,18,18,5,5,5,5,58,1453,1454,1455,0,18,18,18,0,0,0,0,58,1456,1455,1454,0,18,18,18,0,0,0,0,58,1457,1458,1459,0,18,18,18,4,4,4,4,58,1458,1457,1460,0,18,18,18,4,4,4,4,58,1461,1462,1463,0,18,18,18,10,10,10,10,58,1464,1463,1462,0,18,18,18,10,10,10,10,58,1465,1466,1467,0,18,18,18,4,4,4,4,58,1466,1465,1468,0,18,18,18,4,4,4,4,58,1469,1470,1471,0,18,18,18,10,10,10,10,58,1472,1471,1470,0,18,18,18,10,10,10,10,58,1473,1474,1475,0,18,18,18,5,5,5,5,58,1474,1473,1476,0,18,18,18,5,5,5,5,58,1477,1478,1479,0,18,18,18,0,0,0,0,58,1480,1479,1478,0,18,18,18,0,0,0,0,58,1481,1482,1483,0,18,18,18,10,10,10,10,58,1482,1481,1484,0,18,18,18,10,10,10,10,58,1485,1486,1487,0,18,18,18,4,4,4,4,58,1488,1487,1486,0,18,18,18,4,4,4,4,58,1410,1489,1490,0,18,18,18,5,5,5,5,58,1489,1410,1409,0,18,18,18,5,5,5,5,58,1411,1412,1491,0,18,18,18,0,0,0,0,58,1492,1491,1412,0,18,18,18,0,0,0,0,58,1490,1493,1494,0,18,18,18,5,5,5,5,58,1493,1490,1489,0,18,18,18,5,5,5,5,58,1491,1492,1495,0,18,18,18,0,0,0,0,58,1496,1495,1492,0,18,18,18,0,0,0,0,58,1494,1497,1498,0,18,18,18,5,5,5,5,58,1497,1494,1493,0,18,18,18,5,5,5,5,58,1495,1496,1499,0,18,18,18,0,0,0,0,58,1500,1499,1496,0,18,18,18,0,0,0,0,58,1501,1502,1503,0,18,18,18,6,6,6,6,58,1502,1501,1414,0,18,18,18,6,6,6,6,42,1414,1501,1415,0,18,18,18,6,6,6,42,1418,1504,1417,0,18,18,18,7,7,7,58,1417,1504,1505,0,18,18,18,7,7,7,7,58,1506,1505,1504,0,18,18,18,7,7,7,7,42,1507,1508,1509,0,18,18,18,6,6,2,58,1508,1507,1510,0,18,18,18,6,6,6,6,58,1508,1510,1511,0,18,18,18,6,6,6,6,58,1511,1510,1512,0,18,18,18,6,6,6,6,58,1513,1514,1515,0,18,18,18,7,7,7,7,58,1515,1514,1516,0,18,18,18,7,7,7,7,58,1514,1517,1516,0,18,18,18,7,7,7,7,42,1518,1516,1517,0,18,18,18,2,7,7,58,1422,1519,1421,0,18,18,18,7,7,7,7,58,1519,1422,1520,0,18,18,18,7,7,7,7,58,1520,1422,1521,0,18,18,18,7,7,7,7,58,1521,1422,1522,0,18,18,18,7,7,7,29,58,1523,1423,1524,0,18,18,18,6,3,6,6,58,1524,1423,1525,0,18,18,18,6,6,6,6,58,1525,1423,1526,0,18,18,18,6,6,6,6,58,1424,1526,1423,0,18,18,18,6,6,6,6,58,1420,1527,1528,0,18,18,18,7,7,7,7,58,1527,1420,1519,0,18,18,18,7,7,7,7,42,1519,1420,1421,0,18,18,18,7,7,7,42,1424,1425,1526,0,18,18,18,6,6,6,58,1526,1425,1529,0,18,18,18,6,6,6,6,58,1530,1529,1425,0,18,18,18,6,6,6,6,58,1531,1532,1533,0,18,18,18,4,4,4,4,58,1532,1531,1534,0,18,18,18,4,4,4,4,58,1535,1536,1537,0,18,18,18,10,10,10,10,58,1538,1537,1536,0,18,18,18,10,10,10,10,58,1498,1539,1540,0,18,18,18,5,5,5,5,58,1539,1498,1497,0,18,18,18,5,5,5,5,58,1499,1500,1541,0,18,18,18,0,0,0,0,58,1542,1541,1500,0,18,18,18,0,0,0,0,58,1543,1544,1545,0,18,18,18,5,5,5,5,58,1544,1543,1546,0,18,18,18,5,5,5,5,58,1547,1548,1549,0,18,18,18,0,0,0,0,58,1550,1549,1548,0,18,18,18,0,0,0,0,58,1551,1552,1553,0,18,18,18,10,10,10,10,58,1552,1551,1554,0,18,18,18,10,10,10,10,58,1555,1556,1557,0,18,18,18,4,4,4,4,58,1558,1557,1556,0,18,18,18,4,4,4,4,58,1540,1559,1560,0,18,18,18,5,5,5,30,58,1559,1540,1539,0,18,18,18,5,5,5,5,58,1541,1542,1561,0,18,18,18,0,0,0,0,58,1562,1561,1542,0,18,18,18,0,1,0,0,58,1560,1563,1564,0,18,18,18,5,30,5,5,58,1563,1560,1559,0,18,18,18,5,5,30,5,58,1561,1562,1565,0,18,18,18,0,0,1,0,58,1566,1565,1562,0,18,18,18,0,0,0,1,58,1567,1568,1569,0,18,18,18,6,6,6,6,58,1568,1567,1570,0,18,18,18,6,6,6,6,42,1570,1567,1571,0,18,18,18,6,6,2,42,1572,1573,1574,0,18,18,18,2,7,7,58,1574,1573,1575,0,18,18,18,7,7,7,7,58,1576,1575,1573,0,18,18,18,7,7,7,7,58,1577,1578,1579,0,18,18,18,6,6,6,6,58,1578,1577,1580,0,18,18,18,6,6,6,6,58,1580,1577,1581,0,18,18,18,6,6,6,6,42,1580,1582,1578,0,18,18,18,6,2,6,42,1583,1584,1585,0,18,18,18,7,2,7,58,1586,1587,1585,0,18,18,18,7,7,7,7,58,1585,1587,1583,0,18,18,18,7,7,7,7,58,1588,1583,1587,0,18,18,18,7,7,7,7,58,1522,1589,1521,0,18,18,18,7,29,29,7,58,1589,1522,1590,0,18,18,18,7,29,29,7,58,1590,1522,1591,0,18,18,18,7,7,29,7,58,1591,1522,1592,0,18,18,18,7,7,29,7,58,1593,1523,1594,0,18,18,18,6,6,3,6,58,1594,1523,1595,0,18,18,18,6,6,3,6,58,1595,1523,1596,0,18,18,18,6,6,3,3,58,1524,1596,1523,0,18,18,18,6,6,3,3,58,1520,1597,1598,0,18,18,18,7,7,7,7,58,1597,1520,1589,0,18,18,18,7,7,7,29,42,1589,1520,1521,0,18,18,18,29,7,7,42,1524,1525,1596,0,18,18,18,6,6,3,58,1596,1525,1599,0,18,18,18,6,3,6,6,58,1600,1599,1525,0,18,18,18,6,6,6,6,58,1601,1602,1603,0,18,18,18,4,4,4,4,58,1602,1601,1604,0,18,18,18,4,4,4,4,58,1605,1606,1607,0,18,18,18,10,10,10,10,58,1608,1607,1606,0,18,18,18,10,10,10,10,58,1564,1609,1610,0,18,18,18,5,5,5,5,58,1609,1564,1563,0,18,18,18,5,5,5,5,58,1565,1566,1611,0,18,18,18,0,0,0,0,58,1612,1611,1566,0,18,18,18,0,0,0,0,58,1613,1614,1615,0,18,18,18,5,5,5,5,58,1614,1613,1616,0,18,18,18,5,5,5,5,58,1617,1618,1619,0,18,18,18,0,0,0,0,58,1620,1619,1618,0,18,18,18,0,0,0,0,58,1621,1622,1623,0,18,18,18,10,10,10,10,58,1622,1621,1624,0,18,18,18,10,10,10,10,58,1625,1626,1627,0,18,18,18,4,4,4,4,58,1628,1627,1626,0,18,18,18,4,4,4,4,58,1610,1629,1630,0,18,18,18,5,5,5,30,58,1629,1610,1609,0,18,18,18,5,5,5,5,58,1611,1612,1631,0,18,18,18,0,0,0,0,58,1632,1631,1612,0,18,18,18,0,1,0,0,58,1633,1634,1635,0,18,18,18,6,6,6,6,58,1634,1633,1636,0,18,18,18,6,6,6,6,42,1636,1633,1637,0,18,18,18,6,6,2,42,1638,1639,1640,0,18,18,18,2,7,7,58,1640,1639,1641,0,18,18,18,7,7,7,7,58,1642,1641,1639,0,18,18,18,7,7,7,7,58,1630,1643,1644,0,18,18,18,5,30,5,5,58,1643,1630,1629,0,18,18,18,5,5,30,5,58,1631,1632,1645,0,18,18,18,0,0,1,0,58,1646,1645,1632,0,18,18,18,0,0,0,1,42,1647,1648,1649,0,18,18,18,6,2,2,42,1648,1647,1650,0,18,18,18,2,6,6,58,1650,1647,1651,0,18,18,18,6,6,6,6,58,1650,1651,1652,0,18,18,18,6,6,6,6,58,1652,1651,1653,0,18,18,18,6,6,6,6,58,1654,1655,1656,0,18,18,18,7,7,7,7,58,1656,1655,1657,0,18,18,18,7,7,7,7,58,1655,1658,1657,0,18,18,18,7,7,7,7,42,1657,1658,1659,0,18,18,18,7,7,2,42,1660,1659,1658,0,18,18,18,2,2,7,58,1592,1661,1591,0,18,18,18,7,7,7,7,58,1661,1592,1662,0,18,18,18,7,7,7,7,58,1662,1592,1663,0,18,18,18,7,7,7,7,58,1663,1592,1664,0,18,18,18,29,7,7,7,58,1664,1592,1665,0,18,18,18,7,7,7,7,58,1666,1593,1667,0,18,18,18,6,6,6,6,58,1667,1593,1668,0,18,18,18,3,6,6,6,58,1668,1593,1669,0,18,18,18,6,6,6,6,58,1669,1593,1670,0,18,18,18,6,6,6,6,58,1594,1670,1593,0,18,18,18,6,6,6,6,58,1590,1671,1672,0,18,18,18,7,7,7,7,58,1671,1590,1661,0,18,18,18,7,7,7,7,42,1661,1590,1591,0,18,18,18,7,7,7,42,1594,1595,1670,0,18,18,18,6,6,6,58,1670,1595,1673,0,18,18,18,6,6,6,6,58,1674,1673,1595,0,18,18,18,6,6,6,6,58,1675,1676,1677,0,18,18,18,4,4,4,4,58,1676,1675,1678,0,18,18,18,4,4,4,4,58,1679,1680,1681,0,18,18,18,10,10,10,10,58,1682,1681,1680,0,18,18,18,10,10,10,10,58,1683,1684,1685,0,18,18,18,5,5,5,5,58,1684,1683,1686,0,18,18,18,5,5,5,5,58,1687,1688,1689,0,18,18,18,0,0,0,0,58,1690,1689,1688,0,18,18,18,0,0,0,0,58,1691,1692,1693,0,18,18,18,10,10,10,10,58,1692,1691,1694,0,18,18,18,10,10,10,10,58,1695,1696,1697,0,18,18,18,4,4,4,4,58,1698,1697,1696,0,18,18,18,4,4,4,4,58,1644,1699,1700,0,18,18,18,5,5,5,5,58,1699,1644,1643,0,18,18,18,5,5,5,5,58,1645,1646,1701,0,18,18,18,0,0,0,0,58,1702,1701,1646,0,18,18,18,0,0,0,0,58,1700,1703,1704,0,18,18,18,5,5,5,5,58,1703,1700,1699,0,18,18,18,5,5,5,5,58,1701,1702,1705,0,18,18,18,0,0,0,0,58,1706,1705,1702,0,18,18,18,0,0,0,0,58,1707,1708,1709,0,18,18,18,5,5,5,5,58,1708,1707,1710,0,18,18,18,5,5,5,5,58,1710,1707,1704,0,18,18,18,5,5,5,5,58,1710,1704,1703,0,18,18,18,5,5,5,5,58,1705,1706,1711,0,18,18,18,0,0,0,0,58,1706,1712,1711,0,18,18,18,0,0,0,0,58,1711,1712,1713,0,18,18,18,0,0,0,0,58,1714,1713,1712,0,18,18,18,0,0,0,0,58,1715,1716,1717,0,18,18,18,6,6,6,6,58,1716,1715,1718,0,18,18,18,6,6,6,6,58,1719,1716,1718,0,18,18,18,6,6,6,6,58,1720,1721,1722,0,18,18,18,7,7,7,7,58,1720,1723,1721,0,18,18,18,7,7,7,7,58,1724,1721,1723,0,18,18,18,7,7,7,7,58,1725,1726,1727,0,18,18,18,10,10,10,10,58,1726,1725,1728,0,18,18,18,10,10,10,10,58,1729,1730,1731,0,18,18,18,4,4,4,4,58,1732,1731,1730,0,18,18,18,4,4,4,4,58,1662,1733,1734,0,18,18,18,7,7,7,7,58,1733,1662,1664,0,18,18,18,7,7,7,7,42,1664,1662,1663,0,18,18,18,7,7,7,42,1668,1669,1667,0,18,18,18,6,6,6,58,1667,1669,1735,0,18,18,18,6,6,6,6,58,1736,1735,1669,0,18,18,18,6,6,6,6,58,1737,1738,1739,0,18,18,18,4,4,4,4,58,1738,1737,1740,0,18,18,18,4,4,4,4,58,1741,1742,1743,0,18,18,18,10,10,10,10,58,1744,1743,1742,0,18,18,18,10,10,10,10,58,1745,1727,1746,0,18,18,18,10,10,10,10,58,1727,1745,1725,0,18,18,18,10,10,10,10,58,1730,1747,1732,0,18,18,18,4,4,4,4,58,1748,1732,1747,0,18,18,18,4,4,4,4,58,1749,1750,1751,0,18,18,18,5,5,5,5,58,1750,1749,1752,0,18,18,18,5,5,5,5,58,1753,1754,1755,0,18,18,18,0,0,0,0,58,1756,1755,1754,0,18,18,18,0,0,0,0,58,1757,1758,1759,0,19,20,21,30,5,5,5,58,1758,1760,1759,0,20,22,21,5,5,5,5,58,1761,1762,1760,0,23,24,22,30,5,5,5,58,1760,1762,1759,0,22,24,21,5,5,5,5,58,1762,1763,1759,0,24,25,21,5,5,5,5,58,1764,1765,1763,0,26,27,25,5,5,5,5,58,1759,1763,1765,0,21,25,27,5,5,5,5,42,1766,1767,1757,0,28,29,19,2,5,5,58,1757,1767,1758,0,19,29,20,5,5,5,5,58,1758,1767,1768,0,20,29,30,30,5,5,5,58,1768,1767,1761,0,30,29,23,30,5,5,5,58,1762,1761,1769,0,24,23,31,5,5,5,5,58,1769,1761,1770,0,31,23,32,5,5,5,5,58,1770,1761,1771,0,32,23,33,5,5,5,5,58,1761,1767,1771,0,23,29,33,5,5,5,5,58,1771,1767,1772,0,33,29,34,5,5,5,5,58,1767,1773,1772,0,29,35,34,30,5,5,5,58,1772,1773,1764,0,34,35,26,5,5,5,5,58,1765,1764,1773,0,27,26,35,5,5,5,5,58,1772,1764,1774,0,34,26,36,5,5,5,5,58,1775,1776,1777,0,18,18,18,5,5,5,5,58,1778,1777,1776,0,18,18,18,5,5,5,5,58,1779,1780,1781,0,18,18,18,5,5,5,30,58,1780,1782,1781,0,18,18,18,5,5,30,30,58,1781,1782,1783,0,18,18,18,5,30,30,5,58,1784,1783,1782,0,18,18,18,5,5,5,30,58,1785,1786,1787,0,18,18,18,5,5,5,5,58,1786,1785,1788,0,18,18,18,5,5,5,5,58,1789,1790,1791,0,18,18,18,169,170,171,172,58,1790,1789,1792,0,18,18,18,1,171,170,173,58,1790,1792,1793,0,18,18,18,0,171,173,0,58,1793,1792,1794,0,18,18,18,0,0,173,174,58,1791,1795,1796,0,18,18,18,175,172,176,177,58,1795,1791,1790,0,18,18,18,178,176,172,171,58,1796,1795,1794,0,18,18,18,179,177,176,174,58,1796,1794,1792,0,18,18,18,180,177,174,173,58,1797,1798,1799,0,18,18,18,181,182,183,184,58,1798,1800,1799,0,18,18,18,185,183,186,184,58,1801,1802,1800,0,18,18,18,187,188,189,186,58,1799,1800,1802,0,18,18,18,190,184,186,189,58,1798,1797,1803,0,18,18,18,5,183,182,5,58,1803,1797,1801,0,18,18,18,5,5,182,188,58,1797,1804,1801,0,18,18,18,30,182,191,188,58,1802,1801,1804,0,18,18,18,192,189,188,191,58,1805,1806,1807,0,18,18,18,193,194,194,193,58,1806,1805,1808,0,18,18,18,194,194,194,195,58,1806,1808,1809,0,18,18,18,195,194,195,195,58,1810,1811,1812,0,18,18,18,196,196,196,197,58,1811,1813,1812,0,18,18,18,198,196,198,197,58,1814,1812,1813,0,18,18,18,199,199,197,198,58,1815,1816,1817,0,18,18,18,3,3,3,3,58,1818,1817,1816,0,18,18,18,3,3,3,3,58,1819,1820,1821,0,18,18,18,4,4,4,4,58,1822,1821,1820,0,18,18,18,4,4,4,4,58,1823,1824,1825,0,18,18,18,10,10,10,10,58,1826,1825,1824,0,18,18,18,10,10,10,10,58,1827,1828,1829,0,18,18,18,29,29,29,29,58,1830,1829,1828,0,18,18,18,29,29,29,29,58,1831,1832,1833,0,18,18,18,6,6,6,6,58,1832,1831,1834,0,18,18,18,6,6,6,6,58,1835,1836,1837,0,18,18,18,10,10,10,10,58,1836,1835,1838,0,18,18,18,10,10,10,10,58,1838,1835,1839,0,18,18,18,10,10,10,10,58,1838,1839,1840,0,18,18,18,10,10,10,10,58,1841,1842,1843,0,18,18,18,7,7,7,7,58,1842,1841,1844,0,18,18,18,7,7,7,7,58,1845,1846,1847,0,18,18,18,6,6,6,6,58,1846,1845,1848,0,18,18,18,6,6,6,6,58,1849,1850,1851,0,18,18,18,4,4,4,4,58,1850,1849,1852,0,18,18,18,4,4,4,4,58,1853,1854,1855,0,18,18,18,10,10,10,10,58,1854,1853,1856,0,18,18,18,10,10,10,10,58,1857,1858,1859,0,18,18,18,7,7,7,7,58,1858,1857,1860,0,18,18,18,7,7,7,7,58,1861,1862,1863,0,18,18,18,7,7,7,7,58,1862,1861,1864,0,18,18,18,7,7,7,7,58,1865,1866,1867,0,18,18,18,6,6,6,6,58,1868,1867,1866,0,18,18,18,6,6,6,6,58,1869,1870,1871,0,18,18,18,7,7,7,7,58,1870,1869,1872,0,18,18,18,7,7,7,7,58,1873,1874,1875,0,18,18,18,6,6,6,6,58,1876,1875,1874,0,18,18,18,6,6,6,6,58,1877,1878,1879,0,18,18,18,10,10,10,10,58,1878,1877,1880,0,18,18,18,10,10,10,10,58,1880,1877,1881,0,18,18,18,10,10,10,10,58,1882,1883,1884,0,18,18,18,4,4,4,4,58,1884,1883,1885,0,18,18,18,4,4,4,4,58,1886,1885,1883,0,18,18,18,4,4,4,4,58,1887,1888,1889,0,18,18,18,10,10,10,10,58,1888,1887,1890,0,18,18,18,10,10,10,10,58,1891,1892,1893,0,18,18,18,4,4,4,4,58,1894,1893,1892,0,18,18,18,4,4,4,4,58,1895,1896,1897,0,18,18,18,6,6,6,6,58,1896,1895,1898,0,18,18,18,6,6,6,6,58,1899,1900,1901,0,18,18,18,7,7,7,7,58,1902,1901,1900,0,18,18,18,7,7,7,7,58,1903,1904,1905,0,18,18,18,6,6,6,6,58,1904,1903,1906,0,18,18,18,6,6,6,6,58,1907,1908,1909,0,18,18,18,7,7,7,7,58,1910,1909,1908,0,18,18,18,7,7,7,7,58,1911,1912,1913,0,18,18,18,3,3,6,3,58,1912,1911,1914,0,18,18,18,3,6,3,6,58,1915,1916,1917,0,18,18,18,29,7,29,7,58,1918,1917,1916,0,18,18,18,29,29,7,29,58,1919,1920,1921,0,18,18,18,4,4,4,4,58,1920,1919,1922,0,18,18,18,4,4,4,4,58,1923,1924,1925,0,18,18,18,10,10,10,10,58,1926,1925,1924,0,18,18,18,10,10,10,10,58,1914,1927,1912,0,18,18,18,6,6,6,6,58,1927,1914,1928,0,18,18,18,6,6,6,6,58,1929,1915,1930,0,18,18,18,7,7,7,7,58,1917,1930,1915,0,18,18,18,7,7,7,7,58,1931,1932,1933,0,18,18,18,0,0,0,0,58,1934,1935,1936,0,18,18,18,0,0,0,0,58,1937,1938,1939,0,18,18,18,0,0,0,0,58,1939,1938,1934,0,18,18,18,0,0,0,0,58,1935,1934,1940,0,18,18,18,0,0,0,0,58,1934,1938,1940,0,18,18,18,0,0,0,0,58,1941,1940,1938,0,18,18,18,0,0,0,0,42,1942,1940,1943,0,18,18,18,2,0,0,42,1940,1941,1943,0,18,18,18,0,0,0,42,1941,1944,1943,0,18,18,18,0,2,0,42,1944,1945,1943,0,18,18,18,2,0,0,58,1943,1945,1946,0,18,18,18,0,0,0,0,58,1946,1945,1931,0,18,18,18,1,0,0,0,58,1932,1931,1947,0,18,18,18,0,0,0,0,58,1931,1945,1947,0,18,18,18,1,0,0,0,58,1947,1945,1948,0,18,18,18,0,0,0,0,58,1948,1945,1949,0,18,18,18,0,0,0,0,58,1949,1945,1950,0,18,18,18,0,0,0,1,58,1951,1950,1945,0,18,18,18,0,0,1,0,58,1952,1953,1954,0,18,18,18,5,5,5,30,58,1953,1952,1955,0,18,18,18,5,5,5,5,58,1954,1956,1957,0,18,18,18,5,30,30,5,58,1956,1954,1953,0,18,18,18,5,30,30,5,58,1958,1959,1960,0,18,18,18,5,5,5,5,58,1959,1958,1961,0,18,18,18,5,5,5,5,58,1957,1962,1963,0,18,18,18,5,5,5,5,58,1962,1957,1956,0,18,18,18,5,5,5,30,58,1964,1965,1966,0,18,18,18,5,5,5,5,58,1965,1964,1967,0,18,18,18,5,5,5,5,58,1968,1969,1970,0,18,18,18,5,5,5,5,58,1969,1968,1971,0,18,18,18,5,5,5,5,58,1972,1973,1974,0,18,18,18,5,5,5,5,58,1973,1972,1975,0,18,18,18,30,5,5,30,58,1973,1975,1976,0,18,18,18,5,5,30,5,58,1976,1975,1977,0,18,18,18,5,5,30,5,58,1974,1978,1979,0,18,18,18,30,5,5,5,58,1978,1974,1973,0,18,18,18,5,5,5,5,58,1979,1978,1977,0,18,18,18,30,5,5,5,58,1979,1977,1975,0,18,18,18,30,5,5,30,58,1980,1981,1982,0,18,18,18,10,10,10,10,58,1981,1980,1983,0,18,18,18,10,10,10,10,58,1983,1980,1984,0,18,18,18,10,10,10,10,58,1985,1986,1987,0,18,18,18,4,4,4,4,58,1986,1985,1988,0,18,18,18,4,4,4,4,58,1989,1990,1991,0,18,18,18,10,10,10,10,58,1990,1989,1992,0,18,18,18,10,10,10,10,58,1992,1989,1993,0,18,18,18,10,10,10,10,58,1994,1995,1996,0,18,18,18,4,4,4,4,58,1996,1995,1997,0,18,18,18,4,4,4,4,58,1998,1997,1995,0,18,18,18,4,4,4,4,58,1999,2000,2001,0,18,18,18,29,29,29,29,58,2002,2001,2000,0,18,18,18,29,29,29,29,42,2003,2004,2005,0,18,18,18,5,5,5,58,2005,2004,2006,0,18,18,18,5,5,5,5,58,2007,2006,2004,0,18,18,18,5,5,5,5,58,2008,2009,2003,0,18,18,18,5,5,5,5,58,2004,2003,2009,0,18,18,18,5,5,5,5,58,2010,2011,2012,0,18,18,18,9,9,9,9,58,2013,2012,2011,0,18,18,18,9,9,9,9,58,2014,2015,2016,0,18,18,18,0,0,0,0,58,2017,2016,2015,0,18,18,18,0,0,0,0,42,2018,2019,2020,0,18,18,18,0,0,0,42,2019,2021,2020,0,18,18,18,0,0,0,58,2020,2021,2022,0,18,18,18,0,0,0,0,58,2022,2021,2014,0,18,18,18,0,0,0,0,58,2014,2021,2015,0,18,18,18,0,0,0,0,58,2023,2015,2021,0,18,18,18,0,0,0,0,58,2024,2025,2018,0,18,18,18,0,0,0,0,58,2019,2018,2025,0,18,18,18,0,0,0,0,58,2026,2027,2028,0,18,18,18,4,4,4,4,58,2029,2028,2027,0,18,18,18,4,4,4,4,58,2030,2031,2032,0,18,18,18,10,10,10,10,58,2033,2032,2031,0,18,18,18,10,10,10,10,58,2007,2034,2035,0,18,18,18,5,5,5,5,58,2036,2035,2034,0,18,18,18,5,5,5,5,58,2004,2037,2007,0,18,18,18,5,5,5,5,58,2007,2037,2034,0,18,18,18,5,5,5,5,58,2038,2034,2037,0,18,18,18,5,5,5,5,58,2039,2040,2041,0,18,18,18,3,3,3,3,58,2042,2041,2040,0,18,18,18,3,3,3,3,58,2043,2044,2045,0,18,18,18,4,4,4,4,58,2046,2045,2044,0,18,18,18,4,4,4,4,58,2047,2048,2049,0,18,18,18,6,6,6,6,58,2050,2049,2048,0,18,18,18,6,6,6,6,58,2051,2052,2053,0,18,18,18,7,7,7,7,58,2054,2053,2052,0,18,18,18,7,7,7,7,58,2055,2056,2057,0,18,18,18,8,8,8,8,58,2058,2057,2056,0,18,18,18,8,8,8,8,58,2059,2060,2061,0,18,18,18,29,29,29,29,58,2062,2061,2060,0,18,18,18,29,29,29,29,58,2063,2064,2065,0,18,18,18,10,10,10,10,58,2066,2065,2064,0,18,18,18,10,10,10,10,58,2067,2068,2069,0,18,18,18,3,3,3,3,58,2070,2069,2068,0,18,18,18,3,3,3,3,58,2071,2072,2073,0,18,18,18,4,4,4,4,58,2073,2072,2074,0,18,18,18,4,4,4,4,58,2075,2074,2072,0,18,18,18,4,4,4,4,58,2076,2077,2078,0,18,18,18,10,10,10,10,58,2079,2078,2077,0,18,18,18,10,10,10,10,58,2080,2081,2082,0,18,18,18,200,200,201,202,58,2082,2081,2083,0,18,18,18,203,202,201,204,58,2084,2083,2081,0,18,18,18,205,205,204,201,58,2085,2086,2087,0,18,18,18,4,4,9,9,58,2088,2087,2086,0,18,18,18,9,9,9,9,58,2089,2090,2091,0,18,18,18,7,7,7,7,58,2092,2091,2090,0,18,18,18,7,7,7,7,58,2093,2094,2095,0,18,18,18,10,10,206,207,58,2094,2096,2095,0,18,18,18,208,206,209,207,58,2096,2097,2095,0,18,18,18,210,209,211,207,58,2098,2099,2097,0,18,18,18,212,213,214,211,58,2095,2097,2099,0,18,18,18,215,207,211,214,58,2096,2094,2100,0,18,18,18,5,209,206,5,58,2100,2094,2098,0,18,18,18,5,5,206,213,58,2094,2101,2098,0,18,18,18,30,206,216,213,58,2099,2098,2101,0,18,18,18,217,214,213,216,58,2102,2103,2104,0,18,18,18,7,29,7,7,58,2103,2102,2105,0,18,18,18,7,7,29,7,58,2106,2107,2108,0,18,18,18,6,6,3,6,58,2109,2108,2107,0,18,18,18,6,6,6,3,58,2110,2104,2111,0,18,18,18,7,7,7,7,58,2104,2110,2102,0,18,18,18,7,7,7,29,58,2107,2112,2109,0,18,18,18,6,3,6,6,58,2113,2109,2112,0,18,18,18,6,6,6,6,58,2114,2111,2115,0,18,18,18,7,7,7,7,58,2111,2114,2110,0,18,18,18,7,7,7,7,58,2112,2116,2113,0,18,18,18,6,6,6,6,58,2117,2113,2116,0,18,18,18,6,6,6,6,58,2118,2119,2120,0,18,18,18,7,7,7,7,58,2121,2120,2119,0,18,18,18,7,7,7,7,58,2122,2123,2124,0,18,18,18,9,9,9,9,58,2125,2124,2123,0,18,18,18,9,9,9,9,58,2126,2127,2128,0,18,18,18,8,8,8,8,58,2129,2128,2127,0,18,18,18,8,8,8,8,58,2130,2131,2132,0,18,18,18,7,7,7,7,58,2133,2132,2131,0,18,18,18,7,7,7,7,58,2134,2135,2136,0,18,18,18,10,10,10,10,58,2137,2136,2135,0,18,18,18,10,10,10,10,58,2138,2139,2140,0,18,18,18,4,4,4,4,58,2141,2140,2139,0,18,18,18,4,4,4,4,58,2142,2143,2144,0,18,18,18,6,6,6,6,58,2145,2144,2143,0,18,18,18,6,6,6,6,58,2146,2147,2148,0,18,18,18,6,6,6,6,58,2147,2146,2149,0,18,18,18,6,6,6,6,58,2150,2151,2152,0,18,18,18,7,7,7,7,58,2153,2152,2151,0,18,18,18,7,7,7,7,58,2154,2148,2155,0,18,18,18,3,6,6,6,58,2148,2154,2146,0,18,18,18,3,6,6,6,58,2151,2156,2153,0,18,18,18,29,7,7,7,58,2157,2153,2156,0,18,18,18,29,7,7,7,58,2158,2155,2159,0,18,18,18,3,3,6,3,58,2155,2158,2154,0,18,18,18,3,6,3,6,58,2156,2160,2157,0,18,18,18,29,7,29,7,58,2161,2157,2160,0,18,18,18,29,29,7,29,58,2162,2163,2164,0,18,18,18,9,4,4,9,58,2163,2162,2165,0,18,18,18,4,4,4,4,58,2165,2162,2166,0,18,18,18,9,4,4,4,58,2166,2162,2167,0,18,18,18,4,4,4,4,58,2168,2169,2170,0,18,18,18,10,10,8,10,58,2170,2169,2171,0,18,18,18,8,10,8,10,58,2171,2169,2172,0,18,18,18,10,10,8,10,58,2173,2172,2169,0,18,18,18,8,8,10,8,58,2174,2175,2176,0,18,18,18,7,7,7,7,58,2176,2175,2177,0,18,18,18,7,7,7,7,58,2178,2177,2175,0,18,18,18,29,7,7,7,58,2179,2175,2174,0,18,18,18,7,7,7,7,58,2180,2181,2182,0,18,18,18,4,4,4,4,58,2183,2182,2181,0,18,18,18,4,4,4,4,58,2177,2178,2184,0,18,18,18,7,7,7,7,58,2185,2184,2178,0,18,18,18,7,7,7,7,58,2186,2187,2188,0,18,18,18,4,4,4,4,58,2189,2188,2187,0,18,18,18,4,4,4,4,58,2190,2191,2192,0,18,18,18,5,5,5,5,58,2192,2191,2193,0,18,18,18,5,5,5,5,58,2194,2193,2191,0,18,18,18,5,5,5,5,58,2190,2195,2191,0,18,18,18,30,5,5,5,58,2191,2195,2196,0,18,18,18,30,5,5,5,58,2195,2197,2196,0,18,18,18,30,5,5,5,58,2196,2197,2198,0,18,18,18,5,5,5,30,58,2199,2198,2197,0,18,18,18,5,5,30,5,58,2200,2201,2202,0,18,18,18,6,6,6,6,58,2202,2201,2203,0,18,18,18,6,6,6,6,58,2203,2201,2204,0,18,18,18,6,6,6,6,58,2205,2204,2201,0,18,18,18,3,6,6,6,58,2206,2207,2181,0,18,18,18,4,4,4,4,58,2181,2207,2183,0,18,18,18,4,4,4,4,58,2208,2183,2207,0,18,18,18,4,4,4,4,42,2209,2210,2211,0,18,18,18,2,6,6,58,2211,2210,2212,0,18,18,18,6,6,6,6,58,2212,2210,2213,0,18,18,18,6,6,6,6,58,2213,2210,2214,0,18,18,18,6,6,6,6,58,2215,2214,2210,0,18,18,18,6,6,6,6,58,2216,2217,2218,0,18,18,18,10,10,10,8,58,2218,2217,2219,0,18,18,18,10,8,10,10,58,2219,2217,2220,0,18,18,18,10,10,10,10,58,2221,2220,2217,0,18,18,18,10,10,10,10,42,2222,2223,2224,0,18,18,18,2,7,7,58,2224,2223,2225,0,18,18,18,7,7,7,7,58,2226,2225,2223,0,18,18,18,7,7,7,7,58,2227,2228,2229,0,18,18,18,4,4,4,4,58,2230,2229,2228,0,18,18,18,4,4,4,4,58,2204,2205,2231,0,18,18,18,6,6,6,6,58,2232,2231,2205,0,18,18,18,6,6,6,6,58,2233,2234,2235,0,18,18,18,1,1,1,1,58,2234,2233,2236,0,18,18,18,1,1,1,1,58,2237,2238,2239,0,18,18,18,1,1,1,1,58,2238,2237,2240,0,18,18,18,1,1,1,1,58,2241,2242,2243,0,18,18,18,1,1,1,1,58,2242,2241,2244,0,18,18,18,1,1,1,1,58,2245,2246,2247,0,18,18,18,1,1,1,1,58,2246,2245,2248,0,18,18,18,1,1,1,1,58,2249,2250,2251,0,18,18,18,1,1,1,1,58,2250,2249,2252,0,18,18,18,1,1,1,1,58,2253,2254,2255,0,18,18,18,1,1,1,1,58,2254,2253,2256,0,18,18,18,1,1,1,1,58,2257,2258,2259,0,18,18,18,0,0,0,0,58,2258,2257,2260,0,18,18,18,0,0,0,0,58,2261,2262,2263,0,18,18,18,1,1,1,1,58,2262,2261,2264,0,18,18,18,1,1,1,1,58,2265,2266,2267,0,18,18,18,1,1,1,1,58,2266,2265,2268,0,18,18,18,1,1,1,1,58,2269,2270,2271,0,18,18,18,1,1,1,1,58,2270,2269,2272,0,18,18,18,1,1,1,1,58,2273,2274,2275,0,18,18,18,1,1,1,1,58,2274,2273,2276,0,18,18,18,1,1,1,1,58,2277,2278,2279,0,18,18,18,1,1,1,1,58,2278,2277,2280,0,18,18,18,1,1,1,1,58,2281,2282,2283,0,18,18,18,0,0,0,0,58,2282,2281,2284,0,18,18,18,0,0,0,0,58,2285,2286,2287,0,18,18,18,0,0,0,0,58,2286,2285,2288,0,18,18,18,0,0,0,0,58,2289,2290,2291,0,18,18,18,0,0,0,0,58,2290,2289,2292,0,18,18,18,0,0,0,0,58,2293,2294,2295,0,18,18,18,0,0,0,0,58,2294,2293,2296,0,18,18,18,0,0,0,0,58,2297,2298,2299,0,18,18,18,0,0,0,0,58,2298,2297,2300,0,18,18,18,0,0,0,0,58,2301,2302,2303,0,18,18,18,0,0,0,0,58,2302,2301,2304,0,18,18,18,0,0,0,0,58,2305,2306,2307,0,18,18,18,0,0,0,0,58,2306,2305,2308,0,18,18,18,0,0,0,0,58,2309,2310,2311,0,18,18,18,0,0,0,0,58,2310,2309,2312,0,18,18,18,0,0,0,0,58,2313,2314,2315,0,18,18,18,6,6,6,6,58,2314,2313,2316,0,18,18,18,6,6,6,6,58,2317,2318,2319,0,18,18,18,4,4,4,4,58,2318,2317,2320,0,18,18,18,4,4,4,4,58,2321,2322,2323,0,18,18,18,10,10,10,10,58,2322,2321,2324,0,18,18,18,10,10,10,10,58,2325,2326,2327,0,18,18,18,7,7,7,7,58,2326,2325,2328,0,18,18,18,7,7,7,7,58,2329,2330,2331,0,18,18,18,6,6,6,6,58,2330,2329,2332,0,18,18,18,6,6,6,6,58,2333,2334,2335,0,18,18,18,4,4,4,4,58,2334,2333,2336,0,18,18,18,4,4,4,4,58,2337,2338,2339,0,18,18,18,10,10,10,10,58,2338,2337,2340,0,18,18,18,10,10,10,10,58,2341,2342,2343,0,18,18,18,7,7,7,7,58,2342,2341,2344,0,18,18,18,7,7,7,7,58,2345,2346,2347,0,18,18,18,6,6,6,6,58,2346,2345,2348,0,18,18,18,6,6,6,6,58,2349,2350,2351,0,18,18,18,4,4,4,4,58,2350,2349,2352,0,18,18,18,4,4,4,4,58,2353,2354,2355,0,18,18,18,10,10,10,10,58,2354,2353,2356,0,18,18,18,10,10,10,10,58,2357,2358,2359,0,18,18,18,7,7,7,7,58,2358,2357,2360,0,18,18,18,7,7,7,7,58,2361,2362,2363,0,18,18,18,6,6,6,6,58,2362,2361,2364,0,18,18,18,6,6,6,6,58,2365,2366,2367,0,18,18,18,4,4,4,4,58,2366,2365,2368,0,18,18,18,4,4,4,4,58,2369,2370,2371,0,18,18,18,10,10,10,10,58,2370,2369,2372,0,18,18,18,10,10,10,10,58,2373,2374,2375,0,18,18,18,7,7,7,7,58,2374,2373,2376,0,18,18,18,7,7,7,7,58,2377,2378,2379,0,18,18,18,6,6,6,6,58,2378,2377,2380,0,18,18,18,6,6,6,6,58,2381,2382,2383,0,18,18,18,4,4,4,4,58,2382,2381,2384,0,18,18,18,4,4,4,4,58,2385,2386,2387,0,18,18,18,10,10,10,10,58,2386,2385,2388,0,18,18,18,10,10,10,10,58,2389,2390,2391,0,18,18,18,7,7,7,7,58,2390,2389,2392,0,18,18,18,7,7,7,7,58,2393,2394,2395,0,18,18,18,6,6,6,6,58,2394,2393,2396,0,18,18,18,6,6,6,6,58,2397,2398,2399,0,18,18,18,4,4,4,4,58,2398,2397,2400,0,18,18,18,4,4,4,4,58,2401,2402,2403,0,18,18,18,10,10,10,10,58,2402,2401,2404,0,18,18,18,10,10,10,10,58,2405,2406,2407,0,18,18,18,7,7,7,7,58,2406,2405,2408,0,18,18,18,7,7,7,7,58,2409,2410,2411,0,18,18,18,6,6,6,6,58,2410,2409,2412,0,18,18,18,6,6,6,6,58,2413,2414,2415,0,18,18,18,9,9,9,9,58,2414,2413,2416,0,18,18,18,9,9,9,9,58,2417,2418,2419,0,18,18,18,8,8,8,8,58,2418,2417,2420,0,18,18,18,8,8,8,8,58,2421,2422,2423,0,18,18,18,7,7,7,7,58,2422,2421,2424,0,18,18,18,7,7,7,7,58,2425,2426,2427,0,18,18,18,6,6,6,6,58,2426,2425,2428,0,18,18,18,6,6,6,6,58,2429,2430,2431,0,18,18,18,4,4,4,4,58,2430,2429,2432,0,18,18,18,4,4,4,4,58,2433,2434,2435,0,18,18,18,10,10,10,10,58,2434,2433,2436,0,18,18,18,10,10,10,10,58,2437,2438,2439,0,18,18,18,7,7,7,7,58,2438,2437,2440,0,18,18,18,7,7,7,7,58,2441,2442,2443,0,18,18,18,6,6,6,6,58,2442,2441,2444,0,18,18,18,6,6,6,6,58,2445,2446,2447,0,18,18,18,4,4,4,4,58,2446,2445,2448,0,18,18,18,4,4,4,4,58,2449,2450,2451,0,18,18,18,10,10,10,10,58,2450,2449,2452,0,18,18,18,10,10,10,10,58,2453,2454,2455,0,18,18,18,7,7,7,7,58,2454,2453,2456,0,18,18,18,7,7,7,7,58,2457,2458,2459,0,18,18,18,6,6,6,6,58,2458,2457,2460,0,18,18,18,6,6,6,6,58,2461,2462,2463,0,18,18,18,4,4,4,4,58,2462,2461,2464,0,18,18,18,4,4,4,4,58,2465,2466,2467,0,18,18,18,10,10,10,10,58,2466,2465,2468,0,18,18,18,10,10,10,10,58,2469,2470,2471,0,18,18,18,7,7,7,7,58,2470,2469,2472,0,18,18,18,7,7,7,7,58,2473,2474,2475,0,18,18,18,6,6,6,6,58,2474,2473,2476,0,18,18,18,6,6,6,6,58,2477,2478,2479,0,18,18,18,4,4,4,4,58,2478,2477,2480,0,18,18,18,4,4,4,4,58,2481,2482,2483,0,18,18,18,10,10,10,10,58,2482,2481,2484,0,18,18,18,10,10,10,10,58,2485,2486,2487,0,18,18,18,7,7,7,7,58,2486,2485,2488,0,18,18,18,7,7,7,7,58,2489,2490,2491,0,18,18,18,6,6,6,6,58,2490,2489,2492,0,18,18,18,6,6,6,6,58,2493,2494,2495,0,18,18,18,4,4,4,4,58,2494,2493,2496,0,18,18,18,4,4,4,4,58,2497,2498,2499,0,18,18,18,10,10,10,10,58,2498,2497,2500,0,18,18,18,10,10,10,10,58,2501,2502,2503,0,18,18,18,7,7,7,7,58,2502,2501,2504,0,18,18,18,7,7,7,7,58,2505,2506,2507,0,18,18,18,6,6,6,6,58,2506,2505,2508,0,18,18,18,6,6,6,6,58,2509,2510,2511,0,18,18,18,9,9,9,9,58,2510,2509,2512,0,18,18,18,9,9,9,9,58,2513,2514,2515,0,18,18,18,8,8,8,8,58,2514,2513,2516,0,18,18,18,8,8,8,8,58,2517,2518,2519,0,18,18,18,7,7,7,7,58,2518,2517,2520,0,18,18,18,7,7,7,7,58,2521,2522,2523,0,18,18,18,6,6,6,6,58,2522,2521,2524,0,18,18,18,6,6,6,6,58,2525,2526,2527,0,18,18,18,9,9,9,9,58,2526,2525,2528,0,18,18,18,9,9,9,9,58,2529,2530,2531,0,18,18,18,8,8,8,8,58,2530,2529,2532,0,18,18,18,8,8,8,8,58,2533,2534,2535,0,18,18,18,7,7,7,7,58,2534,2533,2536,0,18,18,18,7,7,7,7,58,2537,2538,2539,0,18,18,18,6,6,6,6,58,2538,2537,2540,0,18,18,18,6,6,6,6,58,2541,2542,2543,0,18,18,18,4,4,4,4,58,2542,2541,2544,0,18,18,18,4,4,4,4,58,2545,2546,2547,0,18,18,18,10,10,10,10,58,2546,2545,2548,0,18,18,18,10,10,10,10,58,2549,2550,2551,0,18,18,18,7,7,7,7,58,2550,2549,2552,0,18,18,18,7,7,7,7,58,2553,2554,2555,0,18,18,18,6,6,6,6,58,2554,2553,2556,0,18,18,18,6,6,6,6,58,2557,2558,2559,0,18,18,18,9,9,9,9,58,2558,2557,2560,0,18,18,18,9,9,9,9,58,2561,2562,2563,0,18,18,18,8,8,8,8,58,2562,2561,2564,0,18,18,18,8,8,8,8,58,2565,2566,2567,0,18,18,18,7,7,7,7,58,2566,2565,2568,0,18,18,18,7,7,7,7,58,2569,2570,2571,0,18,18,18,3,3,3,3,58,2570,2569,2572,0,18,18,18,3,3,3,3,58,2573,2574,2575,0,18,18,18,9,9,9,9,58,2574,2573,2576,0,18,18,18,9,9,9,9,58,2577,2578,2579,0,18,18,18,8,8,8,8,58,2578,2577,2580,0,18,18,18,8,8,8,8,58,2581,2582,2583,0,18,18,18,29,29,29,29,58,2582,2581,2584,0,18,18,18,29,29,29,29,58,2585,2586,2587,0,18,18,18,6,6,6,6,58,2586,2585,2588,0,18,18,18,6,6,6,6,58,2589,2590,2591,0,18,18,18,9,9,9,9,58,2590,2589,2592,0,18,18,18,9,9,9,9,58,2593,2594,2595,0,18,18,18,8,8,8,8,58,2594,2593,2596,0,18,18,18,8,8,8,8,58,2597,2598,2599,0,18,18,18,7,7,7,7,58,2598,2597,2600,0,18,18,18,7,7,7,7,58,2601,2602,2603,0,18,18,18,6,6,6,6,58,2602,2601,2604,0,18,18,18,6,6,6,6,58,2605,2606,2607,0,18,18,18,9,9,9,9,58,2606,2605,2608,0,18,18,18,9,9,9,9,58,2609,2610,2611,0,18,18,18,8,8,8,8,58,2610,2609,2612,0,18,18,18,8,8,8,8,58,2613,2614,2615,0,18,18,18,7,7,7,7,58,2614,2613,2616,0,18,18,18,7,7,7,7,58,2617,2618,2619,0,18,18,18,3,3,3,3,58,2618,2617,2620,0,18,18,18,3,3,3,3,58,2621,2622,2623,0,18,18,18,9,9,9,9,58,2622,2621,2624,0,18,18,18,9,9,9,9,58,2625,2626,2627,0,18,18,18,8,8,8,8,58,2626,2625,2628,0,18,18,18,8,8,8,8,58,2629,2630,2631,0,18,18,18,29,29,29,29,58,2630,2629,2632,0,18,18,18,29,29,29,29,58,2633,2634,2635,0,18,18,18,3,3,3,3,58,2634,2633,2636,0,18,18,18,3,3,3,3,58,2637,2638,2639,0,18,18,18,0,0,0,0,58,2638,2637,2640,0,18,18,18,0,0,0,0,58,2639,2641,2642,0,18,18,18,0,0,0,0,58,2641,2639,2643,0,18,18,18,0,0,0,0,42,2643,2639,2638,0,18,18,18,0,0,0,58,2644,2645,2646,0,18,18,18,8,8,8,8,58,2645,2644,2647,0,18,18,18,8,8,8,8,58,2648,2649,2650,0,18,18,18,5,5,5,5,58,2649,2648,2651,0,18,18,18,5,5,5,5,58,2652,2653,2654,0,18,18,18,5,5,5,5,58,2653,2652,2655,0,18,18,18,5,5,5,5,58,2655,2652,2656,0,18,18,18,5,5,5,5,58,2656,2652,2657,0,18,18,18,5,5,5,5,42,2657,2652,2650,0,18,18,18,5,5,5,42,2657,2650,2649,0,18,18,18,5,5,5,58,2653,2658,2659,0,18,18,18,5,5,5,5,58,2658,2653,2655,0,18,18,18,5,5,5,5,58,2660,2661,2662,0,18,18,18,10,10,10,10,58,2661,2660,2663,0,18,18,18,10,10,10,10,58,2664,2665,2666,0,18,18,18,4,4,4,4,58,2665,2664,2667,0,18,18,18,4,4,4,4,58,2668,2669,2670,0,18,18,18,0,0,0,0,58,2669,2668,2642,0,18,18,18,0,0,0,0,58,2642,2668,2639,0,18,18,18,0,0,0,0,58,2669,2671,2672,0,18,18,18,0,0,0,0,58,2671,2669,2642,0,18,18,18,0,0,0,0,58,2673,2674,2675,0,18,18,18,29,29,29,29,58,2674,2673,2676,0,18,18,18,29,29,29,29,58,2677,2678,2679,0,18,18,18,10,10,10,10,58,2678,2677,2680,0,18,18,18,10,10,10,10,58,2681,2682,2683,0,18,18,18,7,7,7,7,58,2682,2681,2684,0,18,18,18,7,7,7,7,58,2685,2686,2687,0,18,18,18,6,6,6,6,58,2686,2685,2688,0,18,18,18,6,6,6,6,58,2689,2690,2691,0,18,18,18,9,9,9,9,58,2690,2689,2692,0,18,18,18,9,9,9,9,58,2693,2694,2695,0,18,18,18,3,3,3,3,58,2694,2693,2696,0,18,18,18,3,3,3,3,58,2697,2698,2699,0,18,18,18,4,4,4,4,58,2698,2697,2700,0,18,18,18,4,4,4,4,58,2701,2702,2703,0,18,18,18,29,29,29,29,58,2702,2701,2704,0,18,18,18,29,29,29,29,58,2705,2706,2707,0,18,18,18,6,6,6,6,58,2706,2705,2708,0,18,18,18,6,6,6,6,58,2709,2710,2711,0,18,18,18,0,0,0,0,58,2710,2709,2712,0,18,18,18,0,0,0,0,58,2711,2713,2714,0,18,18,18,0,0,1,0,58,2713,2711,2715,0,18,18,18,0,1,0,0,42,2715,2711,2710,0,18,18,18,0,0,0,58,2716,2717,2718,0,18,18,18,8,8,8,8,58,2717,2716,2719,0,18,18,18,8,8,8,8,58,2720,2721,2722,0,18,18,18,5,5,5,5,58,2721,2720,2723,0,18,18,18,5,5,5,5,58,2724,2725,2726,0,18,18,18,5,30,5,5,58,2725,2724,2727,0,18,18,18,5,5,30,5,58,2727,2724,2728,0,18,18,18,5,5,30,5,58,2728,2724,2729,0,18,18,18,30,5,30,30,42,2729,2724,2722,0,18,18,18,30,30,5,42,2729,2722,2721,0,18,18,18,30,5,5,58,2725,2730,2731,0,18,18,18,5,5,5,5,58,2730,2725,2727,0,18,18,18,5,5,5,5,58,2732,2733,2734,0,18,18,18,10,10,10,10,58,2733,2732,2735,0,18,18,18,10,10,10,10,58,2736,2737,2738,0,18,18,18,4,4,4,4,58,2737,2736,2739,0,18,18,18,4,4,4,4,58,2740,2741,2742,0,18,18,18,0,0,0,0,58,2741,2740,2714,0,18,18,18,0,0,0,0,58,2714,2740,2711,0,18,18,18,0,0,0,0,58,2741,2743,2744,0,18,18,18,0,0,0,0,58,2743,2741,2714,0,18,18,18,0,0,0,0,58,2745,2746,2747,0,18,18,18,7,7,7,7,58,2746,2745,2748,0,18,18,18,7,7,7,7,58,2749,2750,2751,0,18,18,18,10,10,10,10,58,2750,2749,2752,0,18,18,18,10,10,10,10,58,2753,2754,2755,0,18,18,18,7,7,7,7,58,2754,2753,2756,0,18,18,18,7,7,7,7,58,2757,2758,2759,0,18,18,18,6,6,6,6,58,2758,2757,2760,0,18,18,18,6,6,6,6,58,2761,2762,2763,0,18,18,18,9,9,9,9,58,2762,2761,2764,0,18,18,18,9,9,9,9,58,2765,2766,2767,0,18,18,18,6,6,6,6,58,2766,2765,2768,0,18,18,18,6,6,6,6,58,2769,2770,2771,0,18,18,18,4,4,4,4,58,2770,2769,2772,0,18,18,18,4,4,4,4,58,2773,2774,2775,0,18,18,18,7,7,7,7,58,2774,2773,2776,0,18,18,18,7,7,7,7,58,2777,2778,2779,0,18,18,18,6,6,6,6,58,2778,2777,2780,0,18,18,18,6,6,6,6,58,2781,2782,2783,0,18,18,18,0,0,0,1,58,2782,2781,2784,0,18,18,18,0,0,0,0,58,2783,2785,2786,0,18,18,18,0,1,0,0,58,2785,2783,2787,0,18,18,18,0,0,1,0,42,2787,2783,2782,0,18,18,18,0,1,0,58,2788,2789,2790,0,18,18,18,8,8,8,8,58,2789,2788,2791,0,18,18,18,8,8,8,8,58,2792,2793,2794,0,18,18,18,5,5,5,5,58,2793,2792,2795,0,18,18,18,5,5,5,5,58,2796,2797,2798,0,18,18,18,5,30,30,5,58,2797,2796,2799,0,18,18,18,30,30,30,5,58,2799,2796,2800,0,18,18,18,5,5,30,5,58,2800,2796,2801,0,18,18,18,30,5,30,30,42,2801,2796,2794,0,18,18,18,30,30,5,42,2801,2794,2793,0,18,18,18,30,5,5,58,2797,2802,2803,0,18,18,18,5,30,5,5,58,2802,2797,2799,0,18,18,18,5,5,30,5,58,2804,2805,2806,0,18,18,18,10,10,10,10,58,2805,2804,2807,0,18,18,18,10,10,10,10,58,2808,2809,2810,0,18,18,18,9,9,9,9,58,2809,2808,2811,0,18,18,18,9,9,9,9,58,2812,2813,2814,0,18,18,18,0,0,1,0,58,2813,2812,2786,0,18,18,18,1,1,0,0,58,2786,2812,2783,0,18,18,18,0,0,0,1,58,2813,2815,2816,0,18,18,18,0,1,0,0,58,2815,2813,2786,0,18,18,18,0,0,1,0,58,2817,2818,2819,0,18,18,18,7,7,7,7,58,2818,2817,2820,0,18,18,18,7,7,7,7,58,2821,2822,2823,0,18,18,18,8,8,8,8,58,2822,2821,2824,0,18,18,18,8,8,8,8,58,2825,2826,2827,0,18,18,18,29,29,29,29,58,2826,2825,2828,0,18,18,18,29,29,29,29,58,2829,2830,2831,0,18,18,18,3,3,3,3,58,2830,2829,2832,0,18,18,18,3,3,3,3,58,2833,2834,2835,0,18,18,18,9,9,9,9,58,2834,2833,2836,0,18,18,18,9,9,9,9,58,2837,2838,2839,0,18,18,18,6,6,6,6,58,2838,2837,2840,0,18,18,18,6,6,6,6,58,2841,2842,2843,0,18,18,18,4,4,4,4,58,2842,2841,2844,0,18,18,18,4,4,4,4,58,2845,2846,2847,0,18,18,18,7,7,7,7,58,2846,2845,2848,0,18,18,18,7,7,7,7,58,2849,2850,2851,0,18,18,18,3,3,3,3,58,2850,2849,2852,0,18,18,18,3,3,3,3,58,2853,2854,2855,0,18,18,18,0,0,0,0,58,2854,2853,2856,0,18,18,18,0,0,0,0,58,2855,2857,2858,0,18,18,18,0,0,0,0,58,2857,2855,2859,0,18,18,18,0,0,0,0,42,2859,2855,2854,0,18,18,18,0,0,0,58,2860,2861,2862,0,18,18,18,8,8,8,8,58,2861,2860,2863,0,18,18,18,8,8,8,8,58,2864,2865,2866,0,18,18,18,5,5,5,5,58,2865,2864,2867,0,18,18,18,5,5,5,5,58,2868,2869,2870,0,18,18,18,5,5,5,5,58,2869,2868,2871,0,18,18,18,5,5,5,5,58,2871,2868,2872,0,18,18,18,5,5,5,5,58,2872,2868,2873,0,18,18,18,5,5,5,5,42,2873,2868,2866,0,18,18,18,5,5,5,42,2873,2866,2865,0,18,18,18,5,5,5,58,2869,2874,2875,0,18,18,18,5,5,5,5,58,2874,2869,2871,0,18,18,18,5,5,5,5,58,2876,2877,2878,0,18,18,18,10,10,10,10,58,2877,2876,2879,0,18,18,18,10,10,10,10,58,2880,2881,2882,0,18,18,18,9,9,9,9,58,2881,2880,2883,0,18,18,18,9,9,9,9,58,2884,2885,2886,0,18,18,18,0,0,0,0,58,2885,2884,2858,0,18,18,18,0,0,0,0,58,2858,2884,2855,0,18,18,18,0,0,0,0,58,2885,2887,2888,0,18,18,18,0,0,0,0,58,2887,2885,2858,0,18,18,18,0,0,0,0,58,2889,2890,2891,0,18,18,18,29,29,29,29,58,2890,2889,2892,0,18,18,18,29,29,29,29,58,2893,2894,2895,0,18,18,18,8,8,8,8,58,2894,2893,2896,0,18,18,18,8,8,8,8,58,2897,2898,2899,0,18,18,18,7,7,7,7,58,2898,2897,2900,0,18,18,18,7,7,7,7,58,2901,2902,2903,0,18,18,18,6,6,6,6,58,2902,2901,2904,0,18,18,18,6,6,6,6,58,2905,2906,2907,0,18,18,18,9,9,9,9,58,2906,2905,2908,0,18,18,18,9,9,9,9,58,2909,2910,2911,0,18,18,18,3,3,3,3,58,2910,2909,2912,0,18,18,18,3,3,3,3,58,2913,2914,2915,0,18,18,18,4,4,4,4,58,2914,2913,2916,0,18,18,18,4,4,4,4,58,2917,2918,2919,0,18,18,18,29,29,29,29,58,2918,2917,2920,0,18,18,18,29,29,29,29,58,2921,2922,2923,0,18,18,18,3,3,3,3,58,2922,2921,2924,0,18,18,18,3,3,3,3,58,2925,2926,2927,0,18,18,18,0,0,0,0,58,2926,2925,2928,0,18,18,18,0,0,0,0,58,2927,2929,2930,0,18,18,18,0,0,0,0,58,2929,2927,2931,0,18,18,18,0,0,0,0,42,2931,2927,2926,0,18,18,18,0,0,0,58,2932,2933,2934,0,18,18,18,8,8,8,8,58,2933,2932,2935,0,18,18,18,8,8,8,8,58,2936,2937,2938,0,18,18,18,5,5,5,5,58,2937,2936,2939,0,18,18,18,5,5,5,5,58,2940,2941,2942,0,18,18,18,5,30,5,5,58,2941,2940,2943,0,18,18,18,30,5,30,30,58,2943,2940,2944,0,18,18,18,5,30,30,5,58,2944,2940,2945,0,18,18,18,30,5,30,30,42,2945,2940,2938,0,18,18,18,30,30,5,42,2945,2938,2937,0,18,18,18,30,5,5,58,2941,2946,2947,0,18,18,18,5,5,5,5,58,2946,2941,2943,0,18,18,18,5,5,5,30,58,2948,2949,2950,0,18,18,18,10,10,10,10,58,2949,2948,2951,0,18,18,18,10,10,10,10,58,2952,2953,2954,0,18,18,18,9,9,9,9,58,2953,2952,2955,0,18,18,18,9,9,9,9,58,2956,2957,2958,0,18,18,18,0,0,0,0,58,2957,2956,2930,0,18,18,18,1,0,0,0,58,2930,2956,2927,0,18,18,18,0,0,0,0,58,2957,2959,2960,0,18,18,18,0,0,0,0,58,2959,2957,2930,0,18,18,18,0,0,0,0,58,2961,2962,2963,0,18,18,18,29,29,29,29,58,2962,2961,2964,0,18,18,18,29,29,29,29,58,2965,2966,2967,0,18,18,18,8,8,8,8,58,2966,2965,2968,0,18,18,18,8,8,8,8,58,2969,2970,2971,0,18,18,18,29,29,29,29,58,2970,2969,2972,0,18,18,18,29,29,29,29,58,2973,2974,2975,0,18,18,18,3,3,3,3,58,2974,2973,2976,0,18,18,18,3,3,3,3,58,2977,2978,2979,0,18,18,18,9,9,9,9,58,2978,2977,2980,0,18,18,18,9,9,9,9,58,2981,2982,2983,0,18,18,18,3,3,3,3,58,2982,2981,2984,0,18,18,18,3,3,3,3,58,2985,2986,2987,0,18,18,18,4,4,4,4,58,2986,2985,2988,0,18,18,18,4,4,4,4,58,2989,2990,2991,0,18,18,18,29,29,29,29,58,2990,2989,2992,0,18,18,18,29,29,29,29,58,2993,2994,2995,0,18,18,18,6,6,6,6,58,2994,2993,2996,0,18,18,18,6,6,6,6,58,2997,2998,2999,0,18,18,18,0,0,0,0,58,2998,2997,3000,0,18,18,18,0,0,0,0,58,2999,3001,3002,0,18,18,18,1,0,0,0,58,3001,2999,3003,0,18,18,18,0,0,0,0,42,3003,2999,2998,0,18,18,18,0,0,0,58,3004,3005,3006,0,18,18,18,8,8,8,8,58,3005,3004,3007,0,18,18,18,8,8,8,8,58,3008,3009,3010,0,18,18,18,5,5,5,5,58,3009,3008,3011,0,18,18,18,5,5,5,5,58,3012,3013,3014,0,18,18,18,30,5,5,30,58,3013,3012,3015,0,18,18,18,5,5,5,5,58,3015,3012,3016,0,18,18,18,30,5,5,5,58,3016,3012,3017,0,18,18,18,5,5,5,5,42,3017,3012,3010,0,18,18,18,5,5,5,42,3017,3010,3009,0,18,18,18,5,5,5,58,3013,3018,3019,0,18,18,18,5,5,5,5,58,3018,3013,3015,0,18,18,18,5,5,5,5,58,3020,3021,3022,0,18,18,18,10,10,10,10,58,3021,3020,3023,0,18,18,18,10,10,10,10,58,3024,3025,3026,0,18,18,18,9,9,9,9,58,3025,3024,3027,0,18,18,18,9,9,9,9,58,3028,3029,3030,0,18,18,18,1,0,0,1,58,3029,3028,3002,0,18,18,18,0,0,0,0,58,3002,3028,2999,0,18,18,18,1,0,0,0,58,3029,3031,3032,0,18,18,18,0,0,0,0,58,3031,3029,3002,0,18,18,18,0,0,0,0,58,3033,3034,3035,0,18,18,18,7,7,7,7,58,3034,3033,3036,0,18,18,18,7,7,7,7,58,3037,3038,3039,0,18,18,18,8,8,8,8,58,3038,3037,3040,0,18,18,18,8,8,8,8,58,3041,3042,3043,0,18,18,18,7,7,7,7,58,3042,3041,3044,0,18,18,18,7,7,7,7,58,3045,3046,3047,0,18,18,18,6,6,6,6,58,3046,3045,3048,0,18,18,18,6,6,6,6,58,3049,3050,3051,0,18,18,18,9,9,9,9,58,3050,3049,3052,0,18,18,18,9,9,9,9,58,3053,3054,3055,0,18,18,18,6,6,6,6,58,3054,3053,3056,0,18,18,18,6,6,6,6,58,3057,3058,3059,0,18,18,18,4,4,4,4,58,3058,3057,3060,0,18,18,18,4,4,4,4,58,3061,3062,3063,0,18,18,18,7,7,7,7,58,3062,3061,3064,0,18,18,18,7,7,7,7,58,3065,3066,3067,0,18,18,18,6,6,6,6,58,3066,3065,3068,0,18,18,18,6,6,6,6,58,3069,3070,3071,0,18,18,18,0,0,0,0,58,3070,3069,3072,0,18,18,18,0,0,0,0,58,3071,3073,3074,0,18,18,18,0,0,0,0,58,3073,3071,3075,0,18,18,18,0,0,0,0,42,3075,3071,3070,0,18,18,18,0,0,0,58,3076,3077,3078,0,18,18,18,8,8,8,8,58,3077,3076,3079,0,18,18,18,8,8,8,8,58,3080,3081,3082,0,18,18,18,5,5,5,5,58,3081,3080,3083,0,18,18,18,5,5,5,5,58,3084,3085,3086,0,18,18,18,5,5,5,5,58,3085,3084,3087,0,18,18,18,5,5,5,5,58,3087,3084,3088,0,18,18,18,5,5,5,5,58,3088,3084,3089,0,18,18,18,5,5,5,5,42,3089,3084,3082,0,18,18,18,5,5,5,42,3089,3082,3081,0,18,18,18,5,5,5,58,3085,3090,3091,0,18,18,18,5,5,5,5,58,3090,3085,3087,0,18,18,18,5,5,5,5,58,3092,3093,3094,0,18,18,18,10,10,10,10,58,3093,3092,3095,0,18,18,18,10,10,10,10,58,3096,3097,3098,0,18,18,18,4,4,4,4,58,3097,3096,3099,0,18,18,18,4,4,4,4,58,3100,3101,3102,0,18,18,18,0,0,0,0,58,3101,3100,3074,0,18,18,18,0,0,0,0,58,3074,3100,3071,0,18,18,18,0,0,0,0,58,3101,3103,3104,0,18,18,18,0,0,0,0,58,3103,3101,3074,0,18,18,18,0,0,0,0,58,3105,3106,3107,0,18,18,18,7,7,7,7,58,3106,3105,3108,0,18,18,18,7,7,7,7,58,3109,3110,3111,0,18,18,18,10,10,10,10,58,3110,3109,3112,0,18,18,18,10,10,10,10,58,3113,3114,3115,0,18,18,18,7,7,7,7,58,3114,3113,3116,0,18,18,18,7,7,7,7,58,3117,3118,3119,0,18,18,18,6,6,6,6,58,3118,3117,3120,0,18,18,18,6,6,6,6,58,3121,3122,3123,0,18,18,18,9,9,9,9,58,3122,3121,3124,0,18,18,18,9,9,9,9,58,3125,3126,3127,0,18,18,18,6,6,6,6,58,3126,3125,3128,0,18,18,18,6,6,6,6,58,3129,3130,3131,0,18,18,18,4,4,4,4,58,3130,3129,3132,0,18,18,18,4,4,4,4,58,3133,3134,3135,0,18,18,18,7,7,7,7,58,3134,3133,3136,0,18,18,18,7,7,7,7,58,3137,3138,3139,0,18,18,18,6,6,6,6,58,3138,3137,3140,0,18,18,18,6,6,6,6,58,3141,3142,3143,0,18,18,18,0,0,0,0,58,3142,3141,3144,0,18,18,18,0,0,0,0,58,3143,3145,3146,0,18,18,18,0,0,0,0,58,3145,3143,3147,0,18,18,18,0,0,0,0,42,3147,3143,3142,0,18,18,18,0,0,0,58,3148,3149,3150,0,18,18,18,8,8,8,8,58,3149,3148,3151,0,18,18,18,8,8,8,8,58,3152,3153,3154,0,18,18,18,5,5,5,5,58,3153,3152,3155,0,18,18,18,5,5,5,5,58,3156,3157,3158,0,18,18,18,5,5,5,5,58,3157,3156,3159,0,18,18,18,5,5,5,30,58,3159,3156,3160,0,18,18,18,5,30,5,5,58,3160,3156,3161,0,18,18,18,5,5,5,5,42,3161,3156,3154,0,18,18,18,5,5,5,42,3161,3154,3153,0,18,18,18,5,5,5,58,3157,3162,3163,0,18,18,18,5,5,5,5,58,3162,3157,3159,0,18,18,18,5,5,5,30,58,3164,3165,3166,0,18,18,18,10,10,10,10,58,3165,3164,3167,0,18,18,18,10,10,10,10,58,3168,3169,3170,0,18,18,18,4,4,4,4,58,3169,3168,3171,0,18,18,18,4,4,4,4,58,3172,3173,3174,0,18,18,18,0,0,0,0,58,3173,3172,3146,0,18,18,18,0,0,0,0,58,3146,3172,3143,0,18,18,18,0,0,0,0,58,3173,3175,3176,0,18,18,18,0,0,0,0,58,3175,3173,3146,0,18,18,18,0,0,0,0,58,3177,3178,3179,0,18,18,18,7,7,7,7,58,3178,3177,3180,0,18,18,18,7,7,7,7,58,3181,3182,3183,0,18,18,18,10,10,10,10,58,3182,3181,3184,0,18,18,18,10,10,10,10,58,3185,3186,3187,0,18,18,18,7,7,7,7,58,3186,3185,3188,0,18,18,18,7,7,7,7,58,3189,3190,3191,0,18,18,18,6,6,6,6,58,3190,3189,3192,0,18,18,18,6,6,6,6,58,3193,3194,3195,0,18,18,18,9,9,9,9,58,3194,3193,3196,0,18,18,18,9,9,9,9,58,3197,3198,3199,0,18,18,18,6,6,6,6,58,3198,3197,3200,0,18,18,18,6,6,6,6,58,3201,3202,3203,0,18,18,18,4,4,4,4,58,3202,3201,3204,0,18,18,18,4,4,4,4,58,3205,3206,3207,0,18,18,18,7,7,7,7,58,3206,3205,3208,0,18,18,18,7,7,7,7,58,3209,3210,3211,0,18,18,18,4,4,4,4,58,3210,3209,3212,0,18,18,18,4,4,4,4,58,3213,3214,3215,0,18,18,18,10,10,10,10,58,3214,3213,3216,0,18,18,18,10,10,10,10,58,3217,3218,3219,0,18,18,18,4,4,4,4,58,3218,3217,3220,0,18,18,18,4,4,4,4,58,3221,3222,3223,0,18,18,18,10,10,10,10,58,3222,3221,3224,0,18,18,18,10,10,10,10,58,3225,3226,3227,0,18,18,18,10,10,10,10,58,3226,3225,3228,0,18,18,18,10,10,10,10,58,3229,3230,3231,0,18,18,18,10,10,10,10,58,3232,3231,3230,0,18,18,18,10,10,10,10,58,3233,3234,3235,0,18,18,18,4,4,4,4,58,3236,3235,3234,0,18,18,18,4,4,4,4,58,3237,3238,3239,0,18,18,18,10,10,10,10,58,3240,3239,3238,0,18,18,18,10,10,10,10,58,3241,3242,3243,0,18,18,18,4,4,4,4,58,3244,3243,3242,0,18,18,18,4,4,4,4,58,3245,3246,3247,0,18,18,18,4,4,4,4,58,3248,3247,3246,0,18,18,18,4,4,4,4,58,3249,3250,3251,0,18,18,18,7,7,7,7,58,3252,3251,3250,0,18,18,18,7,7,7,7,42,3253,3254,3255,0,18,18,18,5,5,5,58,3255,3254,3256,0,18,18,18,5,5,5,30,58,3257,3256,3254,0,18,18,18,5,5,30,5,58,3258,3259,3253,0,18,18,18,5,5,5,5,58,3254,3253,3259,0,18,18,18,5,5,5,5,58,3260,3261,3262,0,18,18,18,9,9,9,9,58,3263,3262,3261,0,18,18,18,9,9,9,9,58,3264,3265,3266,0,18,18,18,0,0,0,0,58,3267,3266,3265,0,18,18,18,0,0,0,0,42,3268,3269,3270,0,18,18,18,0,0,1,42,3269,3271,3270,0,18,18,18,0,0,1,58,3270,3271,3272,0,18,18,18,1,1,0,0,58,3272,3271,3264,0,18,18,18,0,0,0,0,58,3264,3271,3265,0,18,18,18,0,0,0,0,58,3273,3265,3271,0,18,18,18,0,0,0,0,58,3274,3275,3268,0,18,18,18,0,0,0,0,58,3269,3268,3275,0,18,18,18,0,0,0,0,58,3276,3277,3278,0,18,18,18,4,4,4,4,58,3279,3278,3277,0,18,18,18,4,4,4,4,58,3280,3281,3282,0,18,18,18,10,10,10,10,58,3283,3282,3281,0,18,18,18,10,10,10,10,58,3257,3284,3285,0,18,18,18,5,5,5,5,58,3286,3285,3284,0,18,18,18,5,5,5,5,58,3254,3287,3257,0,18,18,18,5,5,5,5,58,3257,3287,3284,0,18,18,18,5,5,5,5,58,3288,3284,3287,0,18,18,18,5,5,5,5,58,3289,3290,3291,0,18,18,18,6,6,6,6,58,3292,3291,3290,0,18,18,18,6,6,6,6,58,3293,3294,3295,0,18,18,18,4,4,4,4,58,3296,3295,3294,0,18,18,18,4,4,4,4,58,3297,3298,3299,0,18,18,18,6,6,6,6,58,3300,3299,3298,0,18,18,18,6,6,6,6,58,3301,3302,3303,0,18,18,18,7,7,7,7,58,3304,3303,3302,0,18,18,18,7,7,7,7,58,3305,3306,3307,0,18,18,18,8,8,8,8,58,3308,3307,3306,0,18,18,18,8,8,8,8,58,3309,3310,3311,0,18,18,18,7,7,7,7,58,3312,3311,3310,0,18,18,18,7,7,7,7,58,3313,3314,3315,0,18,18,18,10,10,10,10,58,3316,3315,3314,0,18,18,18,10,10,10,10,58,3317,3318,3319,0,18,18,18,6,6,6,6,58,3320,3319,3318,0,18,18,18,6,6,6,6,58,3321,3322,3323,0,18,18,18,7,7,7,7,58,3324,3323,3322,0,18,18,18,7,7,7,7,42,3325,3326,3327,0,18,18,18,5,30,5,58,3327,3326,3328,0,18,18,18,5,5,30,5,58,3329,3328,3326,0,18,18,18,5,5,5,30,58,3330,3331,3325,0,18,18,18,5,5,5,5,58,3326,3325,3331,0,18,18,18,5,30,5,5,58,3332,3333,3334,0,18,18,18,9,9,9,9,58,3335,3334,3333,0,18,18,18,9,9,9,9,58,3336,3337,3338,0,18,18,18,0,0,1,0,58,3339,3338,3337,0,18,18,18,0,0,0,1,42,3340,3341,3342,0,18,18,18,0,0,1,42,3341,3343,3342,0,18,18,18,0,1,1,58,3342,3343,3344,0,18,18,18,1,1,1,0,58,3344,3343,3336,0,18,18,18,0,0,1,0,58,3336,3343,3337,0,18,18,18,1,0,1,1,58,3345,3337,3343,0,18,18,18,0,0,1,1,58,3346,3347,3340,0,18,18,18,0,0,0,0,58,3341,3340,3347,0,18,18,18,0,0,0,0,58,3348,3349,3350,0,18,18,18,4,4,4,4,58,3351,3350,3349,0,18,18,18,4,4,4,4,58,3352,3353,3354,0,18,18,18,8,8,8,8,58,3355,3354,3353,0,18,18,18,8,8,8,8,58,3329,3356,3357,0,18,18,18,5,5,30,5,58,3358,3357,3356,0,18,18,18,5,5,5,30,58,3326,3359,3329,0,18,18,18,5,30,5,5,58,3329,3359,3356,0,18,18,18,30,5,5,30,58,3360,3356,3359,0,18,18,18,5,5,30,5,58,3361,3362,3363,0,18,18,18,6,6,6,6,58,3364,3363,3362,0,18,18,18,6,6,6,6,58,3365,3366,3367,0,18,18,18,9,9,9,9,58,3368,3367,3366,0,18,18,18,9,9,9,9,58,3369,3370,3371,0,18,18,18,3,3,3,3,58,3372,3371,3370,0,18,18,18,3,3,3,3,58,3373,3374,3375,0,18,18,18,29,29,29,29,58,3376,3375,3374,0,18,18,18,29,29,29,29,58,3377,3378,3379,0,18,18,18,8,8,8,8,58,3380,3379,3378,0,18,18,18,8,8,8,8,58,3381,3382,3383,0,18,18,18,7,7,7,7,58,3384,3383,3382,0,18,18,18,7,7,7,7,58,3385,3386,3387,0,18,18,18,10,10,10,10,58,3388,3387,3386,0,18,18,18,10,10,10,10,58,3389,3390,3391,0,18,18,18,6,6,6,6,58,3392,3391,3390,0,18,18,18,6,6,6,6,58,3393,3394,3395,0,18,18,18,29,29,29,29,58,3396,3395,3394,0,18,18,18,29,29,29,29,42,3397,3398,3399,0,18,18,18,5,5,5,58,3399,3398,3400,0,18,18,18,5,5,5,5,58,3401,3400,3398,0,18,18,18,5,5,5,5,58,3402,3403,3397,0,18,18,18,5,5,5,5,58,3398,3397,3403,0,18,18,18,5,5,5,5,58,3404,3405,3406,0,18,18,18,9,9,9,9,58,3407,3406,3405,0,18,18,18,9,9,9,9,58,3408,3409,3410,0,18,18,18,0,0,0,0,58,3411,3410,3409,0,18,18,18,0,0,0,0,42,3412,3413,3414,0,18,18,18,0,0,0,42,3413,3415,3414,0,18,18,18,0,0,0,58,3414,3415,3416,0,18,18,18,0,0,0,0,58,3416,3415,3408,0,18,18,18,0,0,0,0,58,3408,3415,3409,0,18,18,18,0,0,0,0,58,3417,3409,3415,0,18,18,18,0,0,0,0,58,3418,3419,3412,0,18,18,18,0,0,0,0,58,3413,3412,3419,0,18,18,18,0,0,0,0,58,3420,3421,3422,0,18,18,18,4,4,4,4,58,3423,3422,3421,0,18,18,18,4,4,4,4,58,3424,3425,3426,0,18,18,18,8,8,8,8,58,3427,3426,3425,0,18,18,18,8,8,8,8,58,3401,3428,3429,0,18,18,18,5,5,5,5,58,3430,3429,3428,0,18,18,18,5,5,5,5,58,3398,3431,3401,0,18,18,18,5,5,5,5,58,3401,3431,3428,0,18,18,18,5,5,5,5,58,3432,3428,3431,0,18,18,18,5,5,5,5,58,3433,3434,3435,0,18,18,18,3,3,3,3,58,3436,3435,3434,0,18,18,18,3,3,3,3,58,3437,3438,3439,0,18,18,18,9,9,9,9,58,3440,3439,3438,0,18,18,18,9,9,9,9,58,3441,3442,3443,0,18,18,18,6,6,6,6,58,3444,3443,3442,0,18,18,18,6,6,6,6,58,3445,3446,3447,0,18,18,18,7,7,7,7,58,3448,3447,3446,0,18,18,18,7,7,7,7,58,3449,3450,3451,0,18,18,18,8,8,8,8,58,3452,3451,3450,0,18,18,18,8,8,8,8,58,3453,3454,3455,0,18,18,18,29,29,29,29,58,3456,3455,3454,0,18,18,18,29,29,29,29,58,3457,3458,3459,0,18,18,18,10,10,10,10,58,3460,3459,3458,0,18,18,18,10,10,10,10,58,3461,3462,3463,0,18,18,18,3,3,3,3,58,3464,3463,3462,0,18,18,18,3,3,3,3,58,3465,3466,3467,0,18,18,18,29,29,29,29,58,3468,3467,3466,0,18,18,18,29,29,29,29,42,3469,3470,3471,0,18,18,18,5,5,5,58,3471,3470,3472,0,18,18,18,5,5,5,5,58,3473,3472,3470,0,18,18,18,5,5,5,5,58,3474,3475,3469,0,18,18,18,5,5,5,5,58,3470,3469,3475,0,18,18,18,5,5,5,5,58,3476,3477,3478,0,18,18,18,9,9,9,9,58,3479,3478,3477,0,18,18,18,9,9,9,9,58,3480,3481,3482,0,18,18,18,0,0,0,0,58,3483,3482,3481,0,18,18,18,0,0,0,0,42,3484,3485,3486,0,18,18,18,0,0,1,42,3485,3487,3486,0,18,18,18,0,1,1,58,3486,3487,3488,0,18,18,18,1,1,1,0,58,3488,3487,3480,0,18,18,18,0,0,1,0,58,3480,3487,3481,0,18,18,18,1,0,1,0,58,3489,3481,3487,0,18,18,18,0,0,0,1,58,3490,3491,3484,0,18,18,18,0,0,0,0,58,3485,3484,3491,0,18,18,18,0,0,0,0,58,3492,3493,3494,0,18,18,18,4,4,4,4,58,3495,3494,3493,0,18,18,18,4,4,4,4,58,3496,3497,3498,0,18,18,18,8,8,8,8,58,3499,3498,3497,0,18,18,18,8,8,8,8,58,3473,3500,3501,0,18,18,18,5,5,5,5,58,3502,3501,3500,0,18,18,18,5,5,5,5,58,3470,3503,3473,0,18,18,18,5,5,5,5,58,3473,3503,3500,0,18,18,18,30,5,5,5,58,3504,3500,3503,0,18,18,18,5,5,5,5,58,3505,3506,3507,0,18,18,18,3,3,3,3,58,3508,3507,3506,0,18,18,18,3,3,3,3,58,3509,3510,3511,0,18,18,18,9,9,9,9,58,3512,3511,3510,0,18,18,18,9,9,9,9,58,3513,3514,3515,0,18,18,18,3,3,3,3,58,3516,3515,3514,0,18,18,18,3,3,3,3,58,3517,3518,3519,0,18,18,18,29,29,29,29,58,3520,3519,3518,0,18,18,18,29,29,29,29,58,3521,3522,3523,0,18,18,18,8,8,8,8,58,3524,3523,3522,0,18,18,18,8,8,8,8,58,3525,3526,3527,0,18,18,18,29,29,29,29,58,3528,3527,3526,0,18,18,18,29,29,29,29,58,3529,3530,3531,0,18,18,18,10,10,10,10,58,3532,3531,3530,0,18,18,18,10,10,10,10,58,3533,3534,3535,0,18,18,18,3,3,3,3,58,3536,3535,3534,0,18,18,18,3,3,3,3,58,3537,3538,3539,0,18,18,18,7,7,7,7,58,3540,3539,3538,0,18,18,18,7,7,7,7,42,3541,3542,3543,0,18,18,18,5,5,5,58,3543,3542,3544,0,18,18,18,5,5,5,5,58,3545,3544,3542,0,18,18,18,30,5,5,5,58,3546,3547,3541,0,18,18,18,5,5,5,5,58,3542,3541,3547,0,18,18,18,5,5,5,5,58,3548,3549,3550,0,18,18,18,9,9,9,9,58,3551,3550,3549,0,18,18,18,9,9,9,9,58,3552,3553,3554,0,18,18,18,0,0,0,0,58,3555,3554,3553,0,18,18,18,0,0,0,0,42,3556,3557,3558,0,18,18,18,0,0,0,42,3557,3559,3558,0,18,18,18,0,0,0,58,3558,3559,3560,0,18,18,18,0,0,0,0,58,3560,3559,3552,0,18,18,18,1,0,0,0,58,3552,3559,3553,0,18,18,18,0,0,0,0,58,3561,3553,3559,0,18,18,18,1,1,0,0,58,3562,3563,3556,0,18,18,18,0,0,0,0,58,3557,3556,3563,0,18,18,18,0,0,0,0,58,3564,3565,3566,0,18,18,18,4,4,4,4,58,3567,3566,3565,0,18,18,18,4,4,4,4,58,3568,3569,3570,0,18,18,18,8,8,8,8,58,3571,3570,3569,0,18,18,18,8,8,8,8,58,3545,3572,3573,0,18,18,18,5,5,5,5,58,3574,3573,3572,0,18,18,18,5,5,5,5,58,3542,3575,3545,0,18,18,18,30,5,5,5,58,3545,3575,3572,0,18,18,18,5,5,5,5,58,3576,3572,3575,0,18,18,18,30,30,5,5,58,3577,3578,3579,0,18,18,18,6,6,6,6,58,3580,3579,3578,0,18,18,18,6,6,6,6,58,3581,3582,3583,0,18,18,18,9,9,9,9,58,3584,3583,3582,0,18,18,18,9,9,9,9,58,3585,3586,3587,0,18,18,18,6,6,6,6,58,3588,3587,3586,0,18,18,18,6,6,6,6,58,3589,3590,3591,0,18,18,18,7,7,7,7,58,3592,3591,3590,0,18,18,18,7,7,7,7,58,3593,3594,3595,0,18,18,18,8,8,8,8,58,3596,3595,3594,0,18,18,18,8,8,8,8,58,3597,3598,3599,0,18,18,18,7,7,7,7,58,3600,3599,3598,0,18,18,18,7,7,7,7,58,3601,3602,3603,0,18,18,18,10,10,10,10,58,3604,3603,3602,0,18,18,18,10,10,10,10,58,3605,3606,3607,0,18,18,18,6,6,6,6,58,3608,3607,3606,0,18,18,18,6,6,6,6,58,3609,3610,3611,0,18,18,18,7,7,7,7,58,3612,3611,3610,0,18,18,18,7,7,7,7,42,3613,3614,3615,0,18,18,18,5,5,5,58,3615,3614,3616,0,18,18,18,5,5,5,5,58,3617,3616,3614,0,18,18,18,5,5,5,5,58,3618,3619,3613,0,18,18,18,5,5,5,5,58,3614,3613,3619,0,18,18,18,5,5,5,5,58,3620,3621,3622,0,18,18,18,9,9,9,9,58,3623,3622,3621,0,18,18,18,9,9,9,9,58,3624,3625,3626,0,18,18,18,0,0,0,0,58,3627,3626,3625,0,18,18,18,0,0,0,0,42,3628,3629,3630,0,18,18,18,0,0,0,42,3629,3631,3630,0,18,18,18,0,0,0,58,3630,3631,3632,0,18,18,18,0,0,0,0,58,3632,3631,3624,0,18,18,18,0,0,0,0,58,3624,3631,3625,0,18,18,18,0,0,0,0,58,3633,3625,3631,0,18,18,18,0,0,0,0,58,3634,3635,3628,0,18,18,18,0,0,0,0,58,3629,3628,3635,0,18,18,18,0,0,0,0,58,3636,3637,3638,0,18,18,18,4,4,4,4,58,3639,3638,3637,0,18,18,18,4,4,4,4,58,3640,3641,3642,0,18,18,18,10,10,10,10,58,3643,3642,3641,0,18,18,18,10,10,10,10,58,3617,3644,3645,0,18,18,18,5,5,5,5,58,3646,3645,3644,0,18,18,18,5,5,5,5,58,3614,3647,3617,0,18,18,18,5,5,5,5,58,3617,3647,3644,0,18,18,18,5,5,5,5,58,3648,3644,3647,0,18,18,18,5,5,5,5,58,3649,3650,3651,0,18,18,18,6,6,6,6,58,3652,3651,3650,0,18,18,18,6,6,6,6,58,3653,3654,3655,0,18,18,18,4,4,4,4,58,3656,3655,3654,0,18,18,18,4,4,4,4,58,3657,3658,3659,0,18,18,18,6,6,6,6,58,3660,3659,3658,0,18,18,18,6,6,6,6,58,3661,3662,3663,0,18,18,18,7,7,7,7,58,3664,3663,3662,0,18,18,18,7,7,7,7,58,3665,3666,3667,0,18,18,18,8,8,8,8,58,3668,3667,3666,0,18,18,18,8,8,8,8,58,3669,3670,3671,0,18,18,18,7,7,7,7,58,3672,3671,3670,0,18,18,18,7,7,7,7,58,3673,3674,3675,0,18,18,18,10,10,10,10,58,3676,3675,3674,0,18,18,18,10,10,10,10,58,3677,3678,3679,0,18,18,18,6,6,6,6,58,3680,3679,3678,0,18,18,18,6,6,6,6,58,3681,3682,3683,0,18,18,18,7,7,7,7,58,3684,3683,3682,0,18,18,18,7,7,7,7,42,3685,3686,3687,0,18,18,18,5,5,5,58,3687,3686,3688,0,18,18,18,5,5,5,5,58,3689,3688,3686,0,18,18,18,5,5,5,5,58,3690,3691,3685,0,18,18,18,5,5,5,5,58,3686,3685,3691,0,18,18,18,5,5,5,5,58,3692,3693,3694,0,18,18,18,9,9,9,9,58,3695,3694,3693,0,18,18,18,9,9,9,9,58,3696,3697,3698,0,18,18,18,0,1,0,0,58,3699,3698,3697,0,18,18,18,0,0,0,0,42,3700,3701,3702,0,18,18,18,0,0,0,42,3701,3703,3702,0,18,18,18,0,0,0,58,3702,3703,3704,0,18,18,18,0,0,0,0,58,3704,3703,3696,0,18,18,18,0,0,0,1,58,3696,3703,3697,0,18,18,18,0,1,0,0,58,3705,3697,3703,0,18,18,18,0,0,0,0,58,3706,3707,3700,0,18,18,18,0,0,0,0,58,3701,3700,3707,0,18,18,18,0,0,0,0,58,3708,3709,3710,0,18,18,18,4,4,4,4,58,3711,3710,3709,0,18,18,18,4,4,4,4,58,3712,3713,3714,0,18,18,18,10,10,10,10,58,3715,3714,3713,0,18,18,18,10,10,10,10,58,3689,3716,3717,0,18,18,18,5,5,5,5,58,3718,3717,3716,0,18,18,18,5,5,5,5,58,3686,3719,3689,0,18,18,18,5,5,5,5,58,3689,3719,3716,0,18,18,18,5,5,5,5,58,3720,3716,3719,0,18,18,18,5,5,5,5,58,3721,3722,3723,0,18,18,18,6,6,6,6,58,3724,3723,3722,0,18,18,18,6,6,6,6,58,3725,3726,3727,0,18,18,18,4,4,4,4,58,3728,3727,3726,0,18,18,18,4,4,4,4,58,3729,3730,3731,0,18,18,18,6,6,6,6,58,3732,3731,3730,0,18,18,18,6,6,6,6,58,3733,3734,3735,0,18,18,18,7,7,7,7,58,3736,3735,3734,0,18,18,18,7,7,7,7,58,3737,3738,3739,0,18,18,18,8,8,8,8,58,3740,3739,3738,0,18,18,18,8,8,8,8,58,3741,3742,3743,0,18,18,18,7,7,7,7,58,3744,3743,3742,0,18,18,18,7,7,7,7,58,3745,3746,3747,0,18,18,18,10,10,10,10,58,3748,3747,3746,0,18,18,18,10,10,10,10,58,3749,3750,3751,0,18,18,18,6,6,6,6,58,3752,3751,3750,0,18,18,18,6,6,6,6]
				}
			},
			{
				"uuid": "FFED66E6-F040-4BD1-94CA-E3BFB6E2957B",
				"type": "BoxBufferGeometry",
				"width": 437.28,
				"height": 20,
				"depth": 15,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "5687A0F3-3F14-4987-B8B3-CF67560DC0D2",
				"type": "BoxBufferGeometry",
				"width": 400,
				"height": 20,
				"depth": 35,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "661EF0C8-12B4-4DB5-A1F9-839B67994023",
				"type": "BoxBufferGeometry",
				"width": 580,
				"height": 20,
				"depth": 143.3,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "C7A1BA80-8FF7-464B-A215-C189682C2230",
				"type": "BoxBufferGeometry",
				"width": 100,
				"height": 20,
				"depth": 100,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "04E15955-E6AC-4A7D-B6AF-F82A10EF955A",
				"type": "BoxBufferGeometry",
				"width": 80,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "52BFA6F1-E404-49CB-9ADE-92DEF1B01FF0",
				"type": "BoxBufferGeometry",
				"width": 93.22,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "75A093B3-BAF1-4294-899B-976D29EA7134",
				"type": "BoxBufferGeometry",
				"width": 210,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "0B41C8F8-1361-4CEC-B632-C80B8F1A3686",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 35,
				"depth": 250,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "349204E9-DECA-459C-933D-82C573017ABE",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 35,
				"depth": 61,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "9728BD2E-3888-48DA-A321-930DD4F0F008",
				"type": "BoxBufferGeometry",
				"width": 66.88,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "893F6FC2-AD77-41A9-A9C7-C0EDE041645B",
				"type": "BoxBufferGeometry",
				"width": 11.42,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "55526B80-94AA-407B-8CF3-E7478B16AFC0",
				"type": "BoxBufferGeometry",
				"width": 8.68,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "23B1F79E-E5F9-48C1-B526-DA6DC1AA8A60",
				"type": "BoxBufferGeometry",
				"width": 21.76,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "D7ADD3F8-09F7-4DD1-B420-E143D5B67F54",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 35,
				"depth": 21.9,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "5B4E8A1F-A9AC-4656-9A7C-E0AA886321FF",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 35,
				"depth": 140,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "BE2CA660-1EF1-4EDC-8826-B5211281C6C7",
				"type": "BoxBufferGeometry",
				"width": 150,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "8E03F94E-1195-4B5F-BAC6-66EC9FAC77A6",
				"type": "BoxBufferGeometry",
				"width": 65.48,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "0C9CB670-F3CC-47DD-BE62-E1F54CC6F8DE",
				"type": "BoxBufferGeometry",
				"width": 233.58,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "69E328E7-F063-4882-835D-5EEC49A9FAD3",
				"type": "BoxBufferGeometry",
				"width": 94.22,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "9E4A4D9E-1EC4-4329-A9C4-EEE5E29DACEF",
				"type": "BoxBufferGeometry",
				"width": 112.84,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "6F43F137-6FD9-4399-833D-E45B0BBDC0D7",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 35,
				"depth": 77.32,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "044DA352-F295-4DB0-82F5-BF2256FAE9B1",
				"type": "BoxBufferGeometry",
				"width": 15,
				"height": 35,
				"depth": 72.62,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "1CC01CD4-A068-4B96-B9F2-A31DC21897C2",
				"type": "BoxBufferGeometry",
				"width": 236.34,
				"height": 35,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "AE19DA45-512B-4073-9388-881DEFC049A3",
				"type": "BoxBufferGeometry",
				"width": 180,
				"height": 50,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "8334E11D-5154-42E7-BE62-4B1193606FD4",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 50,
				"depth": 50,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "2B283292-8CEE-4CBF-B5B8-AFC2FF22A0F3",
				"type": "BoxBufferGeometry",
				"width": 400,
				"height": 50,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "3BEBBB05-3EC4-4ECE-9C86-CBD8C1C7EFE7",
				"type": "BoxBufferGeometry",
				"width": 332.22,
				"height": 50,
				"depth": 5,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "3E328028-FF28-44C5-AE78-D1523465DA67",
				"type": "BoxBufferGeometry",
				"width": 5,
				"height": 50,
				"depth": 20.14,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			},
			{
				"uuid": "21283C5F-680D-4042-9A40-309BB4A61C01",
				"type": "BoxBufferGeometry",
				"width": 176.48,
				"height": 8,
				"depth": 8,
				"widthSegments": 1,
				"heightSegments": 1,
				"depthSegments": 1
			}],
		"materials": [
			{
				"uuid": "8C194F0A-0D60-4D8F-8980-CE755BECC630",
				"type": "MeshLambertMaterial",
				"name": "wallMaterial",
				"color": 16777215,
				"emissive": 13418933,
				"alphaTest": 0.5
			},
			{
				"uuid": "89A7DD37-9C31-4205-8AE1-4780174CCA90",
				"type": "MeshBasicMaterial",
				"name": "octreeMaterial",
				"color": 16777215,
				"shading": 0,
				"opacity": 0.5,
				"transparent": true,
				"alphaTest": 0.99
			}],
		"object": {
			"uuid": "BCC3A53B-07C6-4FC3-B308-8F4A3E94469D",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
			"children": [
				{
					"uuid": "65C02B8D-D381-414A-A853-811FBE4C7382",
					"type": "DirectionalLight",
					"name": "Default Camera Light",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,388.87078857421875,132.22799682617188,307.9837951660156,1],
					"color": 16777215,
					"intensity": 0.25
				},
				{
					"uuid": "E49F27D7-529D-4C7A-9F53-D3859D6F30CE",
					"type": "Group",
					"name": "scripts",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "B22F5FEF-F45E-4C2E-B36B-AEF0F249EFC7",
					"type": "Group",
					"name": "helpers",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "817A9E70-F25D-467D-A1B9-F6960AE9B2CF",
					"type": "Group",
					"name": "physics",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "EAB32261-6842-401B-A01B-BDD9F02445C6",
					"type": "Group",
					"name": "app engine",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "AA807597-475F-44C0-9BCF-F909388F0C98",
					"type": "Group",
					"name": "animations",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
					"children": [
						{
							"uuid": "A30CC89D-3C2D-4CDC-800D-54CE7C6BD371",
							"type": "Group",
							"name": "idle",
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "5563133F-085D-4516-8E3C-A607C16E2635",
							"type": "Group",
							"name": "walk",
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						}]
				},
				{
					"uuid": "A5C31DC3-E058-4839-BA74-A09F2894307B",
					"type": "Group",
					"name": "female avatar",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
					"children": [
						{
							"uuid": "3BC7F6A4-425D-4554-833F-67410759383A",
							"type": "Group",
							"name": "hf body",
							"userData": {
								"bones": [
									{
										"name": "Genitals",
										"rotq": [0,0,0,1],
										"parent": -1,
										"pos": [-0.000027,15.0028,0.169405]
									},
									{
										"name": "1.Hips",
										"rotq": [0,0,0,1],
										"parent": 0,
										"pos": [0.000027,0.144162,0.321899]
									},
									{
										"name": "2.LowerBack",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "3.Spine",
										"rotq": [0,0,0,1],
										"parent": 2,
										"pos": [0.008712,3.25595,0.069768]
									},
									{
										"name": "4.Chest",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "5.Neck",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "6.Head",
										"rotq": [0,0,0,1],
										"parent": 5,
										"pos": [-0.023034,1.46401,0.411038]
									},
									{
										"name": "7.LeftScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "8.LeftArm",
										"rotq": [0,0,0,1],
										"parent": 7,
										"pos": [2.52983,-0.937077,-0.361347]
									},
									{
										"name": "9.LeftForeArm",
										"rotq": [0,0,0,1],
										"parent": 8,
										"pos": [3.19505,-2.63784,0.444198]
									},
									{
										"name": "10.LeftHand",
										"rotq": [0,0,0,1],
										"parent": 9,
										"pos": [3.19611,-2.32051,1.02422]
									},
									{
										"name": "11.LeftHandFinger",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "12.LeftHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 11,
										"pos": [0.476265,-0.405676,0.16763]
									},
									{
										"name": "13.LeftHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 12,
										"pos": [0.366805,-0.348112,0.094266]
									},
									{
										"name": "14.LeftThumbBone",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "15.LeftThumb",
										"rotq": [0,0,0,1],
										"parent": 14,
										"pos": [-1.1345,0.465408,0.302213]
									},
									{
										"name": "16.LeftThumb1",
										"rotq": [0,0,0,1],
										"parent": 15,
										"pos": [0.180056,-0.478939,0.60054]
									},
									{
										"name": "17.LeftThumb2",
										"rotq": [0,0,0,1],
										"parent": 16,
										"pos": [0.092886,-0.289543,0.386178]
									},
									{
										"name": "18.RightScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "19.RightArm",
										"rotq": [0,0,0,1],
										"parent": 18,
										"pos": [-2.52867,-0.937096,-0.361214]
									},
									{
										"name": "20.RightForeArm",
										"rotq": [0,0,0,1],
										"parent": 19,
										"pos": [-3.19598,-2.63734,0.444101]
									},
									{
										"name": "21.RightHand",
										"rotq": [0,0,0,1],
										"parent": 20,
										"pos": [-3.196,-2.32064,1.032]
									},
									{
										"name": "22.RightHandFinger",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "23.RightHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 22,
										"pos": [-0.499381,-0.387148,0.109694]
									},
									{
										"name": "24.RightHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 23,
										"pos": [-0.373054,-0.338717,0.107148]
									},
									{
										"name": "25.RightThumbBone",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "26.RightThumb",
										"rotq": [0,0,0,1],
										"parent": 25,
										"pos": [1.19745,0.436272,0.257659]
									},
									{
										"name": "27.RightThumb1",
										"rotq": [0,0,0,1],
										"parent": 26,
										"pos": [-0.176136,-0.458651,0.585481]
									},
									{
										"name": "28.RightThumb2",
										"rotq": [0,0,0,1],
										"parent": 27,
										"pos": [-0.070728,-0.239492,0.362029]
									},
									{
										"name": "29.LeftBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "30.LeftBoobBone",
										"rotq": [0,0,0,1],
										"parent": 29,
										"pos": [1.79366,0.798965,-0.440115]
									},
									{
										"name": "31.RightBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "32.RightBoobBone",
										"rotq": [0,0,0,1],
										"parent": 31,
										"pos": [-1.73021,0.798965,-0.440115]
									},
									{
										"name": "33.RightHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "34.RightButt",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "35.RightUpLeg",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "36.RightLeg",
										"rotq": [0,0,0,1],
										"parent": 35,
										"pos": [-0.851619,-7.12582,-0.664236]
									},
									{
										"name": "37.RightFoot",
										"rotq": [0,0,0,1],
										"parent": 36,
										"pos": [-0.7531,-6.81598,-0.370799]
									},
									{
										"name": "38.RightToeBase",
										"rotq": [0,0,0,1],
										"parent": 37,
										"pos": [-0.3779,-2.27964,0.987525]
									},
									{
										"name": "39.LeftHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "40.LeftButt",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "41.LeftUpLeg",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "42.LeftLeg",
										"rotq": [0,0,0,1],
										"parent": 41,
										"pos": [0.852048,-7.1256,-0.664335]
									},
									{
										"name": "43.LeftFoot",
										"rotq": [0,0,0,1],
										"parent": 42,
										"pos": [0.753052,-6.8162,-0.3707]
									},
									{
										"name": "44.LeftToeBase",
										"rotq": [0,0,0,1],
										"parent": 43,
										"pos": [0.377549,-2.27926,0.988361]
									}],
								"name": "rlc_female_nudebodyGeometry.v6",
								"influencesPerVertex": 4,
								"metadata": {
									"materials": 1,
									"bones": 45,
									"vertices": 4805,
									"generator": "io_three",
									"version": 3,
									"type": "Geometry",
									"faces": 5066,
									"uvs": 1
								},
								"materials": [
									{
										"colorSpecular": [0.5,0.5,0.5],
										"visible": true,
										"colorEmissive": [0,0,0],
										"DbgColor": 15658734,
										"transparent": false,
										"DbgName": "FemaleBodyMaterial",
										"depthTest": true,
										"depthWrite": true,
										"opacity": 1,
										"shading": "lambert",
										"blending": "NormalBlending",
										"wireframe": false,
										"colorDiffuse": [1,1,1],
										"DbgIndex": 0,
										"doubleSided": true,
										"specularCoef": 50
									}],
								"faces": [10,0,1,2,0,0,1,2,11,3,4,5,6,0,3,4,5,6,11,7,8,9,10,0,7,8,9,10,11,11,12,4,3,0,11,12,4,3,11,1,9,8,2,0,1,9,8,2,11,13,14,15,16,0,13,14,15,16,11,10,9,17,18,0,10,9,17,18,11,9,1,19,17,0,9,1,19,17,10,7,12,11,0,20,12,11,11,14,13,10,18,0,14,13,10,18,10,20,21,22,0,21,22,23,11,23,24,25,26,0,24,25,26,27,11,25,27,28,26,0,26,28,29,27,11,27,29,30,28,0,28,30,31,29,11,29,31,32,30,0,30,32,33,31,11,33,34,35,36,0,34,35,36,37,11,34,37,38,35,0,35,38,39,36,11,37,39,40,38,0,38,40,41,39,11,39,41,42,40,0,42,43,44,45,11,41,43,44,42,0,43,46,47,44,11,43,45,46,44,0,46,48,49,47,11,47,32,31,48,0,50,33,32,51,11,36,47,48,33,0,37,50,51,34,11,45,24,23,46,0,48,25,24,49,11,49,50,51,52,0,52,53,54,55,11,53,54,55,56,0,56,57,58,59,11,52,51,57,58,0,55,54,60,61,11,59,54,53,60,0,62,57,56,63,11,61,62,63,64,0,64,65,66,67,11,56,55,65,66,0,59,58,68,69,11,65,67,68,66,0,68,70,71,69,11,67,69,70,68,0,70,72,73,71,11,57,59,60,58,0,60,62,63,61,11,69,61,64,70,0,74,64,67,75,11,24,54,59,25,0,25,57,62,26,11,25,59,57,27,0,26,62,60,28,11,27,57,51,29,0,28,60,54,30,11,51,50,31,29,0,54,53,32,30,11,71,62,34,33,0,76,65,35,34,11,62,61,37,34,0,65,64,38,35,11,72,73,74,75,0,77,78,79,80,11,75,74,76,77,0,80,79,81,82,11,78,79,77,76,0,83,84,82,81,11,79,78,80,81,0,84,83,85,86,11,82,83,81,80,0,87,88,86,85,11,84,85,83,82,0,89,90,88,87,11,86,87,88,89,0,91,92,93,94,11,87,90,91,88,0,92,95,96,93,11,91,90,92,93,0,97,98,99,100,11,92,94,95,93,0,99,101,102,100,11,94,73,72,95,0,101,78,77,102,11,96,97,98,99,0,103,104,105,106,11,100,101,99,98,0,107,108,106,105,11,102,103,101,100,0,109,110,108,107,11,103,102,104,105,0,110,109,111,112,11,106,107,108,109,0,113,114,115,116,11,107,110,111,108,0,114,117,118,115,11,112,111,110,113,0,119,120,121,122,11,114,112,113,115,0,123,119,122,124,11,116,114,115,117,0,125,123,124,126,11,116,117,118,119,0,125,126,127,128,11,104,102,106,109,0,111,109,113,116,11,84,86,89,85,0,89,91,94,90,11,82,80,17,19,0,87,85,17,19,11,78,18,17,80,0,83,18,17,85,11,18,78,76,14,0,18,83,81,14,11,74,15,14,76,0,79,15,14,81,11,73,120,15,74,0,78,129,15,79,11,121,120,73,94,0,130,129,78,101,11,92,122,121,94,0,99,131,130,101,11,90,123,122,92,0,98,132,131,99,11,124,123,90,87,0,133,134,95,92,11,87,86,125,124,0,92,91,135,133,11,126,125,86,84,0,136,135,91,89,11,126,84,82,19,0,136,89,87,19,11,127,50,49,128,0,137,53,52,138,11,50,127,48,31,0,53,137,51,32,11,129,71,127,128,0,139,76,137,138,11,33,48,127,71,0,34,51,137,76,11,118,97,96,119,0,127,104,103,128,11,105,128,49,103,0,112,138,52,110,11,109,108,64,63,0,116,115,67,66,11,108,111,70,64,0,115,118,75,67,11,111,112,68,70,0,120,119,71,73,11,112,114,66,68,0,119,123,69,71,11,104,129,128,105,0,111,139,138,112,11,129,63,62,71,0,139,66,65,76,11,104,109,63,129,0,111,116,66,139,11,61,69,39,37,0,64,74,40,38,11,65,55,45,43,0,68,58,48,46,11,54,24,45,55,0,57,25,48,58,11,79,98,97,77,0,84,105,104,82,11,98,79,81,100,0,105,84,86,107,10,85,102,83,0,90,109,88,11,102,85,89,106,0,109,90,94,113,11,89,88,107,106,0,94,93,114,113,11,88,91,110,107,0,93,96,117,114,11,91,93,113,110,0,97,100,122,121,11,93,95,115,113,0,100,102,124,122,11,95,72,117,115,0,102,77,126,124,11,117,72,75,118,0,126,77,80,127,11,118,75,77,97,0,127,80,82,104,11,100,81,83,102,0,107,86,88,109,11,66,114,116,56,0,69,123,125,59,11,119,53,56,116,0,128,56,59,125,11,60,53,119,96,0,63,56,128,103,11,58,60,96,99,0,61,63,103,106,11,101,52,58,99,0,108,55,61,106,11,52,101,103,49,0,55,108,110,52,11,130,47,36,131,0,140,50,37,141,11,32,47,130,132,0,33,50,140,142,11,133,30,32,132,0,143,31,33,142,11,28,30,133,134,0,29,31,143,144,11,26,28,134,135,0,27,29,144,145,11,26,135,136,23,0,27,145,146,24,11,46,23,136,137,0,49,24,146,147,11,44,46,137,138,0,47,49,147,148,11,139,42,44,138,0,149,44,47,148,11,40,42,139,140,0,45,44,149,150,10,140,38,40,0,151,39,41,11,131,35,38,140,0,141,36,39,151,10,131,36,35,0,141,37,36,11,43,41,67,65,0,46,43,70,68,11,41,39,69,67,0,43,42,72,70,11,1,0,126,19,0,1,0,136,19,11,0,141,125,126,0,0,152,135,136,11,141,21,20,125,0,152,22,21,135,10,20,123,124,0,21,134,133,11,142,122,123,143,0,153,131,132,154,11,144,121,122,142,0,155,130,131,153,11,144,5,120,121,0,155,156,129,130,11,16,15,120,5,0,16,15,129,156,11,145,146,147,148,0,157,158,159,160,11,149,150,145,148,0,161,162,163,164,11,151,149,148,152,0,165,161,164,166,11,153,152,148,147,0,167,168,160,159,11,154,155,156,157,0,169,170,171,172,11,156,158,159,157,0,171,173,174,172,11,158,160,161,159,0,173,175,176,174,11,160,162,163,161,0,175,177,178,179,11,163,162,164,165,0,178,177,180,181,11,165,164,166,167,0,181,180,182,183,11,167,166,168,169,0,183,182,184,185,11,169,168,155,154,0,186,187,170,169,11,169,154,146,145,0,186,169,158,157,11,153,159,161,152,0,167,174,176,168,11,161,163,151,152,0,179,178,165,166,11,163,165,149,151,0,178,181,161,165,11,149,165,167,150,0,161,181,183,162,11,150,167,169,145,0,162,183,185,163,11,147,157,159,153,0,159,172,174,167,11,147,146,154,157,0,159,158,169,172,11,170,171,172,173,0,188,189,190,191,11,174,175,170,173,0,192,193,194,195,11,176,174,173,177,0,196,192,195,197,11,178,177,173,172,0,198,199,191,190,11,179,180,181,182,0,200,201,202,203,11,182,181,183,184,0,203,202,204,205,11,183,185,186,184,0,204,206,207,205,11,185,187,188,186,0,208,209,210,211,11,187,189,190,188,0,209,212,213,210,11,191,192,190,189,0,214,215,213,212,11,192,191,193,194,0,215,214,216,217,11,194,193,180,179,0,218,219,201,200,11,194,179,171,170,0,218,200,189,188,11,178,184,186,177,0,198,205,207,199,11,186,188,176,177,0,211,210,196,197,11,176,188,190,174,0,196,210,213,192,11,174,190,192,175,0,192,213,215,193,11,175,192,194,170,0,193,215,217,194,11,172,182,184,178,0,190,203,205,198,11,182,172,171,179,0,203,190,189,200,11,195,196,197,198,0,220,221,222,223,11,199,200,195,198,0,224,225,226,227,11,201,199,198,202,0,228,224,227,229,11,203,202,198,197,0,230,231,223,222,11,204,205,206,207,0,232,233,234,235,11,207,206,208,209,0,235,234,236,237,11,208,210,211,209,0,236,238,239,237,11,210,212,213,211,0,240,241,242,243,11,212,214,215,213,0,241,244,245,242,11,214,216,217,215,0,244,246,247,245,11,217,216,218,219,0,247,246,248,249,11,219,218,205,204,0,250,251,233,232,11,219,204,196,195,0,250,232,221,220,11,203,209,211,202,0,230,237,239,231,11,211,213,201,202,0,243,242,228,229,11,213,215,199,201,0,242,245,224,228,11,199,215,217,200,0,224,245,247,225,11,200,217,219,195,0,225,247,249,226,11,197,207,209,203,0,222,235,237,230,11,207,197,196,204,0,235,222,221,232,11,220,221,222,223,0,252,253,254,255,11,224,225,226,227,0,256,257,258,259,11,228,229,230,231,0,260,261,262,263,11,232,233,234,235,0,264,265,266,267,11,236,237,238,239,0,268,269,270,271,11,205,218,240,241,0,233,251,272,273,11,242,210,208,243,0,274,238,236,275,11,212,210,242,244,0,241,240,276,277,11,230,245,246,231,0,262,278,279,263,11,247,248,227,226,0,280,281,259,258,11,244,242,229,228,0,277,276,261,260,11,249,221,220,250,0,282,253,252,283,11,251,225,224,240,0,284,257,256,285,11,251,252,253,225,0,284,286,287,257,11,244,228,253,252,0,277,260,287,286,11,206,205,241,254,0,234,233,273,288,11,252,251,216,214,0,286,284,246,244,11,212,244,252,214,0,241,277,286,244,11,240,218,216,251,0,285,248,246,284,11,206,254,243,208,0,234,288,275,236,11,255,253,228,231,0,289,287,260,263,11,255,226,225,253,0,289,258,257,287,11,255,256,247,226,0,289,290,280,258,11,256,255,231,246,0,290,289,263,279,11,257,250,220,258,0,291,283,252,292,11,259,246,245,239,0,293,279,278,294,11,246,259,260,256,0,279,293,295,290,11,247,256,260,261,0,280,290,295,296,11,261,235,248,247,0,296,297,281,280,11,262,259,239,238,0,298,293,294,299,11,262,263,260,259,0,298,300,295,293,11,258,264,234,265,0,292,301,266,302,11,264,248,235,234,0,301,303,267,266,11,223,227,248,264,0,255,304,303,301,11,223,222,224,227,0,255,254,305,304,11,222,241,240,224,0,254,273,272,305,11,221,254,241,222,0,253,288,273,254,11,243,254,221,249,0,275,288,253,282,11,229,242,243,249,0,306,274,275,282,11,230,229,249,250,0,307,306,282,283,11,250,257,245,230,0,283,291,308,307,11,239,245,257,236,0,271,308,291,268,11,236,257,258,265,0,268,291,292,302,11,264,258,220,223,0,301,292,252,255,11,234,233,266,265,0,266,265,309,302,11,266,237,236,265,0,309,269,268,302,11,267,262,268,269,0,310,298,311,312,11,270,271,272,273,0,313,314,315,316,11,274,275,276,277,0,317,318,319,320,11,278,279,280,281,0,321,322,323,324,11,282,283,284,285,0,325,326,327,328,11,286,287,288,289,0,329,330,331,332,11,286,290,291,287,0,329,333,334,330,11,132,130,292,293,0,142,140,335,336,10,294,133,295,0,337,143,338,10,296,297,298,0,339,340,341,11,299,138,300,301,0,342,343,344,345,11,302,140,139,303,0,346,151,347,348,11,304,305,140,306,0,349,350,151,351,10,307,131,140,0,352,141,151,11,130,131,307,292,0,140,141,352,335,11,308,309,310,311,0,353,354,355,356,11,311,310,312,313,0,356,355,357,358,11,314,315,302,303,0,359,360,346,348,10,292,316,317,0,335,361,362,11,292,317,318,293,0,335,362,363,336,11,293,319,320,295,0,336,364,365,338,11,321,322,323,324,0,366,367,368,369,11,232,325,326,233,0,264,370,371,265,11,327,238,237,328,0,372,270,269,373,10,297,329,330,0,374,375,376,10,331,332,333,0,377,378,379,11,334,335,331,333,0,380,381,382,383,11,336,337,298,297,0,384,385,386,374,11,338,339,340,341,0,387,388,389,390,10,342,319,293,0,391,364,336,11,274,343,344,275,0,317,392,393,318,10,345,295,346,0,394,338,395,11,347,348,349,350,0,396,397,398,399,11,335,351,352,331,0,381,400,401,382,11,269,268,353,354,0,312,311,402,403,11,263,262,267,355,0,300,298,310,404,11,356,357,358,332,0,405,406,407,378,11,359,360,325,232,0,408,409,410,411,11,280,282,285,281,0,323,325,328,324,11,359,261,260,263,0,408,296,295,300,10,266,233,361,0,309,265,412,10,361,237,266,0,412,269,309,11,277,276,349,348,0,320,319,398,397,11,344,343,289,288,0,393,392,332,331,11,362,363,291,290,0,413,414,334,333,11,364,347,350,365,0,415,396,399,416,11,294,295,345,366,0,337,338,394,417,10,307,367,292,0,352,418,335,11,368,314,303,299,0,419,359,348,342,11,303,139,138,299,0,348,347,343,342,11,369,370,339,338,0,420,421,388,387,10,296,341,371,0,339,390,422,11,354,353,271,270,0,403,402,314,313,11,372,373,374,375,0,423,424,425,426,11,376,377,378,379,0,427,428,429,430,10,339,370,380,0,388,421,431,11,381,340,339,382,0,432,389,388,433,11,383,384,340,381,0,434,435,389,432,10,269,368,267,0,312,419,310,10,354,368,269,0,403,419,312,11,314,368,354,270,0,359,419,403,313,11,315,314,270,273,0,360,359,313,316,11,306,302,315,385,0,351,346,360,436,11,386,387,281,285,0,437,438,324,328,11,388,386,285,284,0,439,437,328,327,10,140,302,306,0,151,346,351,11,346,348,347,345,0,395,397,396,394,11,274,277,320,319,0,317,320,365,364,11,342,343,274,319,0,391,392,317,364,11,286,289,318,317,0,329,332,363,362,11,290,286,317,316,0,333,329,362,361,11,307,305,386,388,0,352,350,437,439,11,305,304,387,386,0,350,349,438,437,11,304,306,385,387,0,349,351,436,438,11,389,390,376,379,0,440,440,427,430,11,391,392,312,310,0,441,442,443,444,11,309,393,391,310,0,445,446,441,444,10,394,395,396,0,447,448,449,11,331,352,397,332,0,382,401,450,451,11,347,364,366,345,0,396,415,417,394,11,277,348,346,320,0,320,397,395,365,11,289,343,342,318,0,332,392,391,363,11,362,290,316,367,0,413,333,361,418,11,298,338,341,296,0,341,387,390,339,11,337,398,338,298,0,385,452,453,386,11,399,400,374,373,0,454,455,425,424,11,395,401,402,396,0,448,456,457,449,11,403,404,405,406,0,458,459,460,461,11,407,403,406,408,0,462,463,464,465,11,409,407,408,410,0,466,462,465,467,11,411,409,410,412,0,468,466,467,469,11,411,412,413,414,0,468,469,470,471,11,415,416,414,413,0,472,473,474,475,11,417,334,333,418,0,476,380,383,477,10,419,336,420,0,478,384,479,11,418,333,421,422,0,480,379,481,482,11,423,357,356,424,0,483,406,405,484,11,425,424,356,426,0,485,486,487,488,11,365,350,233,326,0,416,399,265,371,11,350,427,361,233,0,399,489,412,265,11,427,276,237,361,0,489,319,269,412,11,328,237,276,275,0,373,269,319,318,11,428,328,275,429,0,490,373,318,491,11,429,288,322,428,0,491,331,367,490,11,323,322,288,287,0,368,367,331,330,11,323,287,430,431,0,368,330,492,493,11,430,363,283,431,0,492,414,326,493,10,283,363,284,0,326,414,327,11,432,433,434,423,0,494,495,496,483,11,360,435,436,325,0,409,497,498,410,11,433,435,360,434,0,495,497,409,496,11,280,437,438,282,0,323,499,500,325,10,439,323,431,0,501,368,493,10,431,283,439,0,493,326,501,11,279,440,437,280,0,322,502,499,323,11,272,441,440,279,0,503,504,502,322,11,442,443,268,327,0,505,506,311,507,10,444,328,428,0,508,373,490,10,428,322,444,0,490,367,508,11,425,426,445,446,0,485,488,509,510,11,445,365,326,446,0,509,416,371,510,11,364,365,447,448,0,415,416,511,512,11,449,448,447,426,0,513,512,511,488,10,450,447,365,0,514,511,416,10,451,349,276,0,515,398,319,10,427,451,276,0,489,515,319,10,452,344,288,0,516,393,331,10,429,452,288,0,491,516,331,10,453,291,363,0,517,334,414,10,430,453,363,0,492,517,414,11,454,455,448,449,0,518,519,512,513,11,455,366,364,448,0,519,417,415,512,11,351,329,134,133,0,400,375,144,143,10,355,359,263,0,404,408,300,10,360,456,434,0,409,520,496,11,355,381,382,456,0,404,432,433,520,11,267,383,381,355,0,310,434,432,404,11,457,434,456,382,0,521,496,520,433,10,397,449,426,0,450,513,488,11,397,352,454,449,0,450,401,518,513,11,352,351,294,454,0,401,400,337,518,11,135,134,329,297,0,145,144,375,374,11,299,301,458,368,0,342,345,522,419,11,300,137,136,296,0,344,523,524,339,11,341,340,384,371,0,390,389,435,422,11,377,459,460,378,0,428,525,525,429,11,380,421,358,461,0,431,481,407,526,11,357,457,461,358,0,406,521,526,407,11,462,422,421,380,0,527,482,481,431,11,463,462,380,370,0,528,527,431,421,11,464,463,370,369,0,529,528,421,420,11,465,464,369,398,0,530,531,532,452,10,336,419,337,0,384,478,385,11,466,467,462,463,0,533,534,527,528,11,463,464,468,466,0,528,529,535,533,11,465,469,468,464,0,530,536,537,531,11,419,470,469,465,0,478,538,536,530,11,417,471,470,419,0,476,539,538,478,11,418,472,471,417,0,477,540,539,476,11,422,473,472,418,0,482,541,542,480,11,467,473,422,462,0,534,541,482,527,11,337,419,465,398,0,385,478,530,452,11,334,417,419,420,0,380,476,478,479,11,335,334,420,330,0,381,380,479,376,11,329,351,335,330,0,375,400,381,376,11,408,401,474,410,0,465,456,543,467,11,412,410,475,476,0,469,467,544,545,11,412,476,477,413,0,469,545,546,470,11,478,479,399,373,0,547,548,454,424,11,372,480,478,373,0,423,549,547,424,11,408,406,402,401,0,465,464,457,456,11,473,481,394,472,0,541,550,447,542,11,482,481,473,467,0,551,550,541,534,11,483,482,467,466,0,552,551,534,533,11,483,466,468,484,0,552,533,535,553,11,459,474,401,395,0,525,543,456,448,11,377,475,474,459,0,428,544,543,525,11,376,476,475,377,0,427,545,544,428,11,379,483,484,389,0,430,552,553,440,11,379,378,482,483,0,430,429,551,552,11,481,482,378,460,0,550,551,429,525,11,390,477,476,376,0,440,546,545,427,11,485,486,416,415,0,554,555,473,472,11,404,486,485,405,0,459,555,554,460,10,405,485,487,0,460,554,556,10,487,485,415,0,556,554,472,11,416,313,312,414,0,473,358,357,474,11,486,488,313,416,0,555,557,358,473,11,308,488,486,404,0,353,557,555,459,11,309,308,404,403,0,354,353,459,458,11,393,309,403,407,0,446,445,463,462,11,409,391,393,407,0,466,441,446,462,11,392,391,409,411,0,442,441,466,468,11,392,411,414,312,0,442,468,471,443,11,469,489,484,468,0,536,558,559,537,11,389,484,489,490,0,560,559,558,561,11,477,390,490,479,0,562,563,561,548,11,479,415,413,477,0,548,472,475,562,11,478,487,415,479,0,547,556,472,548,11,480,405,487,478,0,549,460,556,547,11,406,405,480,402,0,461,460,549,564,11,402,480,491,396,0,564,549,565,566,11,396,491,492,394,0,566,565,567,568,11,394,492,471,472,0,568,567,539,540,11,471,492,493,470,0,539,567,569,538,11,470,493,489,469,0,538,569,558,536,11,479,490,400,399,0,548,561,455,454,11,375,491,480,372,0,426,565,549,423,11,375,494,492,491,0,426,570,567,565,11,495,400,490,489,0,571,455,561,558,11,397,426,356,332,0,450,488,487,451,10,447,450,426,0,511,514,488,10,426,450,445,0,488,514,509,10,445,450,365,0,509,514,416,10,294,366,455,0,337,417,519,10,349,451,350,0,398,515,399,10,344,452,275,0,393,516,318,10,291,453,287,0,334,517,330,10,350,451,427,0,399,515,489,10,275,452,429,0,318,516,491,10,287,453,430,0,330,517,492,11,284,363,362,388,0,327,414,413,439,11,492,494,496,493,0,567,570,572,569,11,496,495,489,493,0,572,571,558,569,11,374,400,495,496,0,425,455,571,572,11,374,496,494,375,0,425,572,570,426,11,497,498,499,500,0,573,574,575,576,11,501,502,503,504,0,577,578,579,580,11,505,506,497,500,0,581,582,583,584,11,507,508,509,510,0,585,586,587,588,11,511,512,424,425,0,589,590,486,485,11,512,432,423,424,0,591,494,483,484,11,325,436,513,326,0,370,592,593,371,10,514,425,446,0,594,485,510,10,446,326,514,0,510,371,594,11,515,505,500,516,0,595,581,584,596,11,517,516,500,499,0,597,598,576,575,11,518,519,520,521,0,599,600,601,602,11,520,519,522,523,0,601,600,603,604,11,522,524,525,523,0,603,605,606,604,11,524,526,527,525,0,607,608,609,610,11,526,528,529,527,0,608,611,612,609,11,530,531,529,528,0,613,614,612,611,11,531,530,532,533,0,614,613,615,616,11,533,532,518,521,0,617,618,599,602,11,532,534,535,518,0,618,619,620,599,11,524,522,536,537,0,605,603,621,622,11,526,524,537,538,0,608,607,623,624,11,539,528,526,538,0,625,611,608,624,11,509,540,541,510,0,587,626,627,588,11,542,543,504,503,0,628,629,580,579,11,538,537,508,507,0,624,623,586,585,11,544,545,546,547,0,630,631,632,633,11,548,502,501,534,0,634,578,577,635,11,548,539,549,502,0,634,625,636,578,11,538,507,549,539,0,624,585,636,625,11,519,518,535,550,0,600,599,620,637,11,533,521,498,497,0,617,602,574,573,11,517,523,525,516,0,597,604,606,598,11,525,527,515,516,0,610,609,595,596,11,515,527,529,505,0,595,609,612,581,11,505,529,531,506,0,581,612,614,582,11,506,531,533,497,0,582,614,616,583,11,539,548,530,528,0,625,634,613,611,11,534,532,530,548,0,635,615,613,634,11,519,550,536,522,0,600,637,621,603,11,551,549,507,510,0,638,636,585,588,11,551,503,502,549,0,638,579,578,636,11,552,553,544,547,0,639,640,630,633,11,503,551,554,542,0,579,638,641,628,11,554,551,510,541,0,641,638,588,627,11,555,556,544,553,0,642,643,630,640,11,557,545,544,556,0,644,631,630,643,11,541,540,436,435,0,627,626,498,497,11,554,541,435,433,0,641,627,497,495,11,432,542,554,433,0,494,628,641,495,11,432,512,543,542,0,494,591,629,628,11,556,555,511,558,0,643,642,589,645,11,555,543,512,511,0,642,646,590,589,11,553,504,543,555,0,640,647,646,642,11,552,501,504,553,0,639,648,647,640,11,534,501,552,535,0,619,648,639,620,11,547,550,535,552,0,633,637,620,639,11,536,550,547,546,0,621,637,633,632,11,508,537,536,546,0,649,622,621,632,11,509,508,546,545,0,650,649,632,631,11,545,557,540,509,0,631,644,651,650,11,436,540,557,513,0,592,651,644,593,11,513,557,556,558,0,593,644,643,645,11,514,558,511,425,0,594,645,589,485,11,513,558,514,326,0,593,645,594,371,11,559,560,561,562,0,652,653,654,655,11,563,564,565,566,0,656,657,658,659,11,567,568,569,570,0,660,661,662,663,11,571,572,324,323,0,664,665,369,368,11,282,438,573,283,0,325,500,666,326,11,155,168,574,575,0,170,187,667,668,11,156,155,575,576,0,171,170,668,669,11,158,577,578,160,0,173,670,671,175,11,162,160,578,579,0,177,175,671,672,11,559,580,581,582,0,652,673,674,675,11,583,584,570,569,0,676,677,663,662,11,585,586,566,565,0,678,679,659,658,11,579,578,568,567,0,672,671,661,660,11,559,582,587,560,0,652,675,680,653,11,588,564,563,574,0,681,657,656,682,11,564,588,589,590,0,657,681,683,684,11,579,567,590,589,0,672,660,684,683,11,589,588,166,164,0,683,681,182,180,11,162,579,589,164,0,177,672,683,180,11,574,168,166,588,0,682,184,182,681,11,156,576,577,158,0,171,669,670,173,11,591,590,567,570,0,685,684,660,663,11,590,591,565,564,0,684,685,658,657,11,565,591,592,585,0,658,685,686,678,11,592,591,570,584,0,686,685,663,677,11,559,562,593,580,0,652,655,687,673,11,437,584,583,438,0,499,677,676,500,11,584,437,440,592,0,677,499,502,686,11,441,585,592,440,0,504,678,686,502,11,441,572,586,585,0,504,688,679,678,11,272,324,572,441,0,503,503,688,504,11,580,593,571,594,0,673,687,664,689,11,593,586,572,571,0,687,690,665,664,11,562,566,586,593,0,655,691,690,687,11,562,561,563,566,0,655,654,692,691,11,575,574,563,561,0,668,667,692,654,11,560,576,575,561,0,653,669,668,654,11,587,577,576,560,0,680,670,669,653,11,568,578,577,587,0,661,671,670,680,11,582,569,568,587,0,675,662,661,680,11,582,581,583,569,0,675,674,676,662,11,438,583,581,573,0,500,676,674,666,11,573,581,580,594,0,666,674,673,689,11,439,594,571,323,0,501,689,664,368,11,573,594,439,283,0,666,689,501,326,11,595,596,597,598,0,693,694,695,696,11,599,596,595,600,0,697,694,693,698,11,601,602,603,604,0,699,700,701,702,11,605,606,607,608,0,703,704,705,706,11,609,442,327,328,0,707,708,372,373,11,271,610,611,321,0,314,709,710,711,11,321,611,612,322,0,366,712,713,367,11,180,193,613,614,0,201,219,714,715,11,181,180,614,615,0,202,201,715,716,11,616,185,183,617,0,717,206,204,718,11,187,185,616,618,0,209,208,719,720,11,619,620,608,607,0,721,722,706,705,11,621,622,604,603,0,723,724,702,701,11,618,616,606,605,0,720,719,704,703,11,623,602,601,613,0,725,700,699,726,11,623,624,625,602,0,725,727,728,700,11,618,605,625,624,0,720,703,728,727,11,624,623,191,189,0,727,725,214,212,11,187,618,624,189,0,209,720,727,212,11,613,193,191,623,0,726,216,214,725,11,181,615,617,183,0,202,716,718,204,11,608,626,625,605,0,706,729,728,703,11,625,626,603,602,0,728,729,701,700,11,603,626,627,621,0,701,729,730,723,11,627,626,608,620,0,730,729,706,722,11,595,598,628,629,0,693,696,731,732,11,620,619,611,610,0,722,721,710,709,11,620,610,630,627,0,722,709,733,730,11,621,627,630,443,0,723,730,733,506,11,443,442,622,621,0,506,505,724,723,11,353,630,610,271,0,402,733,709,314,11,630,353,268,443,0,733,402,311,506,11,629,628,609,631,0,732,731,707,734,11,628,622,442,609,0,731,735,708,707,11,598,604,622,628,0,696,736,735,731,11,597,601,604,598,0,695,737,736,696,11,613,601,597,614,0,714,737,695,715,11,596,615,614,597,0,694,716,715,695,11,617,615,596,599,0,718,716,694,697,11,606,616,617,599,0,738,717,718,697,11,607,606,599,600,0,739,738,697,698,11,600,632,619,607,0,698,740,741,739,11,611,619,632,612,0,712,741,740,713,11,612,632,629,631,0,713,740,732,734,11,595,629,632,600,0,693,732,740,698,11,444,631,609,328,0,508,734,707,373,11,612,631,444,322,0,713,734,508,367,11,235,261,359,232,0,297,296,408,411,11,273,272,279,278,0,316,742,322,321,11,268,262,238,327,0,311,298,299,507,11,271,321,324,272,0,314,711,503,315,10,301,383,458,0,345,434,522,10,460,459,395,0,525,525,448,10,490,390,389,0,561,563,560,10,369,338,398,0,532,453,452,10,454,294,455,0,518,337,519,10,295,320,346,0,338,365,395,10,318,342,293,0,363,391,336,10,292,367,316,0,335,418,361,11,420,336,297,330,0,479,384,374,376,11,311,313,488,308,0,356,358,557,353,11,499,520,523,517,0,575,601,604,597,11,520,499,498,521,0,601,575,574,602,11,457,357,423,434,0,521,406,483,496,11,387,385,278,281,0,438,436,321,324,11,278,385,315,273,0,321,436,360,316,10,138,137,300,0,343,523,344,10,307,140,305,0,352,151,350,11,388,362,367,307,0,439,413,418,352,11,132,293,295,133,0,142,336,338,143,11,358,421,333,332,0,407,481,379,378,11,368,458,383,267,0,419,522,434,310,11,296,136,135,297,0,339,524,743,340,11,300,296,371,301,0,344,339,422,345,11,301,371,384,383,0,345,422,435,434,10,457,382,461,0,521,433,526,11,355,456,360,359,0,404,520,409,408,11,339,380,461,382,0,388,431,526,433,11,481,460,395,394,0,550,525,448,447,10,474,475,410,0,543,544,467,10,351,133,294,0,400,143,337,10,633,634,635,0,744,745,746,10,636,637,638,0,747,748,749,11,639,640,641,642,0,750,751,752,753,11,643,636,638,644,0,754,747,749,755,11,642,641,634,633,0,753,752,745,744,11,644,638,645,646,0,755,749,756,757,11,647,641,640,648,0,758,752,751,759,11,649,634,641,647,0,760,745,752,758,11,639,643,644,640,0,750,754,755,751,11,646,648,640,644,0,757,759,751,755,10,650,651,652,0,761,762,763,11,653,654,655,656,0,764,765,766,767,11,657,658,655,654,0,768,769,766,765,11,659,660,658,657,0,770,771,769,768,11,661,662,660,659,0,772,773,771,770,11,663,664,665,666,0,774,775,776,777,11,667,668,664,663,0,778,779,775,774,11,669,670,668,667,0,780,781,779,778,11,671,672,670,669,0,782,783,784,785,11,673,674,672,671,0,786,787,783,782,11,675,676,674,673,0,788,789,787,786,11,677,678,662,661,0,790,791,773,772,11,666,665,678,677,0,777,776,791,790,11,676,675,653,656,0,789,788,764,767,11,679,680,681,682,0,792,793,794,795,11,683,684,685,686,0,796,797,798,799,11,680,687,688,681,0,793,800,801,794,11,683,686,689,690,0,796,799,802,803,11,691,692,693,694,0,804,805,806,807,11,684,695,696,685,0,797,808,809,798,11,697,698,696,695,0,810,811,809,808,11,699,700,698,697,0,812,813,811,810,11,690,689,688,687,0,803,802,801,800,11,694,693,700,699,0,807,806,814,815,11,656,655,689,686,0,767,766,802,799,11,655,658,688,689,0,766,769,801,802,11,658,660,681,688,0,769,771,794,801,11,662,682,681,660,0,773,795,794,771,11,664,692,701,665,0,775,805,816,776,11,668,693,692,664,0,779,806,805,775,11,702,703,704,705,0,817,818,819,820,11,703,706,707,704,0,818,821,822,819,11,706,708,709,707,0,821,823,824,822,11,708,710,711,709,0,823,825,826,824,11,710,712,713,711,0,825,827,828,826,11,714,713,712,715,0,829,828,827,830,11,716,717,718,719,0,831,832,833,834,11,720,721,719,718,0,835,836,834,833,11,720,722,723,721,0,837,838,839,840,11,724,725,723,722,0,841,842,839,838,11,702,705,725,724,0,817,820,842,841,11,726,727,728,729,0,843,844,845,846,11,730,728,727,731,0,847,845,844,848,11,731,732,733,730,0,848,849,850,847,11,732,734,735,733,0,849,851,852,850,11,736,737,738,739,0,853,854,855,856,11,740,741,737,736,0,857,858,854,853,11,741,740,742,743,0,859,860,861,862,11,743,742,744,745,0,862,861,863,864,11,745,744,746,747,0,864,863,865,866,11,746,748,749,747,0,865,867,868,866,11,735,739,738,733,0,852,856,855,850,11,717,716,714,715,0,832,831,829,830,11,647,711,713,649,0,758,826,828,760,11,709,711,647,648,0,824,826,758,759,11,648,646,707,709,0,759,757,822,824,11,704,707,646,645,0,819,822,757,756,11,705,704,645,750,0,820,819,756,869,11,705,750,751,725,0,820,869,870,842,11,723,725,751,752,0,839,842,870,871,11,721,723,752,753,0,840,839,871,872,11,721,753,754,719,0,836,873,874,834,11,755,716,719,754,0,875,831,834,874,11,716,755,756,714,0,831,875,876,829,11,756,649,713,714,0,876,760,828,829,11,679,682,757,758,0,792,795,877,878,11,682,662,678,757,0,795,773,791,877,11,757,701,759,758,0,877,816,879,878,11,665,701,757,678,0,776,816,877,791,11,749,748,726,729,0,868,867,843,846,11,679,758,734,732,0,792,878,851,849,11,739,691,694,736,0,856,804,807,853,11,699,740,736,694,0,815,857,853,807,11,697,742,740,699,0,810,861,860,812,11,695,744,742,697,0,808,863,861,810,11,735,734,758,759,0,852,851,878,879,11,692,691,759,701,0,805,804,879,816,11,691,739,735,759,0,804,856,852,879,11,670,700,693,668,0,781,814,806,779,11,676,685,696,674,0,789,798,809,787,11,676,656,686,685,0,789,767,799,798,11,729,728,708,706,0,846,845,823,821,11,728,730,710,708,0,845,847,825,823,10,715,712,733,0,830,827,850,11,733,738,717,715,0,850,855,832,830,11,717,738,737,718,0,832,855,854,833,11,741,720,718,737,0,858,835,833,854,11,743,722,720,741,0,862,838,837,859,11,745,724,722,743,0,864,841,838,862,11,747,702,724,745,0,866,817,841,864,11,747,749,703,702,0,866,868,818,817,11,749,729,706,703,0,868,846,821,818,11,730,733,712,710,0,847,850,827,825,11,695,684,746,744,0,808,797,865,863,11,748,746,684,683,0,867,865,797,796,11,748,683,690,726,0,867,796,803,843,11,726,690,687,727,0,843,803,800,844,11,731,727,687,680,0,848,844,800,793,11,680,679,732,731,0,793,792,849,848,11,760,761,666,677,0,880,881,777,790,11,760,677,661,762,0,880,790,772,882,11,763,762,661,659,0,883,882,772,770,11,763,659,657,764,0,883,770,768,884,11,764,657,654,765,0,884,768,765,885,11,654,653,766,765,0,765,764,886,885,11,766,653,675,767,0,886,764,788,887,11,767,675,673,768,0,887,788,786,888,11,769,768,673,671,0,889,888,786,782,11,769,671,669,770,0,889,782,785,890,10,770,669,667,0,891,780,778,11,761,770,667,663,0,881,891,778,774,10,761,663,666,0,881,774,777,11,698,672,674,696,0,811,783,787,809,11,700,670,672,698,0,813,784,783,811,11,634,649,756,635,0,745,760,876,746,11,635,756,755,771,0,746,876,875,892,10,650,755,754,0,761,875,874,11,650,753,772,651,0,761,873,893,762,11,753,752,773,772,0,872,871,894,895,11,752,751,774,773,0,871,870,896,894,11,774,751,750,637,0,896,870,869,748,11,638,637,750,645,0,749,748,869,756,11,775,776,777,778,0,897,898,899,900,11,777,779,780,778,0,901,902,903,904,11,778,780,781,782,0,904,903,905,906,11,783,775,778,782,0,907,897,900,908,11,784,785,786,787,0,909,910,911,912,11,788,789,786,785,0,913,914,911,910,11,790,791,789,788,0,915,916,914,913,11,792,793,791,790,0,917,918,916,919,11,792,794,795,793,0,917,920,921,918,11,794,796,797,795,0,920,922,923,921,11,796,798,799,797,0,922,924,925,923,11,798,784,787,799,0,926,909,912,927,11,776,784,798,777,0,898,909,926,899,11,783,782,790,788,0,907,908,915,913,11,781,792,790,782,0,905,917,919,906,11,780,794,792,781,0,903,920,917,905,11,780,779,796,794,0,903,902,922,920,11,779,777,798,796,0,902,901,924,922,11,788,785,775,783,0,913,910,897,907,11,784,776,775,785,0,909,898,897,910,11,800,801,802,803,0,928,929,930,931,11,802,804,805,803,0,932,933,934,935,11,803,805,806,807,0,935,934,936,937,11,808,800,803,807,0,938,928,931,939,11,809,810,811,812,0,940,941,942,943,11,810,813,814,811,0,941,944,945,942,11,815,816,814,813,0,946,947,945,944,11,817,818,816,815,0,948,949,950,951,11,819,820,818,817,0,952,953,949,948,11,821,820,819,822,0,954,953,952,955,11,822,823,824,821,0,955,956,957,954,11,823,809,812,824,0,958,940,943,959,11,801,809,823,802,0,929,940,958,930,11,808,807,815,813,0,938,939,946,944,11,806,817,815,807,0,936,948,951,937,11,806,805,819,817,0,936,934,952,948,11,805,804,822,819,0,934,933,955,952,11,804,802,823,822,0,933,932,956,955,11,813,810,800,808,0,944,941,928,938,11,810,809,801,800,0,941,940,929,928,11,825,826,827,828,0,960,961,962,963,11,827,829,830,828,0,964,965,966,967,11,828,830,831,832,0,967,966,968,969,11,833,825,828,832,0,970,960,963,971,11,834,835,836,837,0,972,973,974,975,11,835,838,839,836,0,973,976,977,974,11,840,841,839,838,0,978,979,977,976,11,842,843,841,840,0,980,981,982,983,11,844,845,843,842,0,984,985,981,980,11,846,847,845,844,0,986,987,985,984,11,846,848,849,847,0,986,988,989,987,11,848,834,837,849,0,990,972,975,991,11,826,834,848,827,0,961,972,990,962,11,833,832,840,838,0,970,971,978,976,11,831,842,840,832,0,968,980,983,969,11,830,844,842,831,0,966,984,980,968,11,830,829,846,844,0,966,965,986,984,11,829,827,848,846,0,965,964,988,986,11,838,835,825,833,0,976,973,960,970,11,835,834,826,825,0,973,972,961,960,11,850,851,852,853,0,992,993,994,995,11,854,855,856,857,0,996,997,998,999,11,858,859,860,861,0,1000,1001,1002,1003,11,862,863,864,865,0,1004,1005,1006,1007,11,866,867,868,869,0,1008,1009,1010,1011,11,837,870,871,849,0,975,1012,1013,991,11,872,873,839,841,0,1014,1015,977,979,11,872,841,843,874,0,1016,982,981,1017,11,858,861,875,876,0,1000,1003,1018,1019,11,857,877,878,854,0,999,1020,1021,996,11,859,872,874,860,0,1001,1016,1017,1002,11,852,851,879,880,0,994,993,1022,1023,11,881,871,856,855,0,1024,1025,998,997,11,882,883,881,855,0,1026,1027,1024,997,11,874,883,882,860,0,1017,1027,1026,1002,11,836,884,870,837,0,974,1028,1012,975,11,847,881,883,845,0,987,1024,1027,985,11,843,845,883,874,0,981,985,1027,1017,11,847,849,871,881,0,987,989,1025,1024,11,873,884,836,839,0,1015,1028,974,977,11,860,882,885,861,0,1002,1026,1029,1003,11,855,854,885,882,0,997,996,1029,1026,11,878,886,885,854,0,1021,1030,1029,996,11,886,875,861,885,0,1030,1018,1003,1029,11,887,888,852,880,0,1031,1032,994,1023,11,889,867,876,875,0,1033,1034,1019,1018,11,890,889,875,886,0,1035,1033,1018,1030,11,890,886,878,891,0,1035,1030,1021,1036,11,877,865,891,878,0,1020,1037,1036,1021,11,867,889,892,868,0,1034,1033,1038,1039,11,890,893,892,889,0,1035,1040,1038,1033,11,862,894,888,895,0,1004,1041,1032,1042,11,865,877,894,862,0,1007,1043,1041,1004,11,877,857,853,894,0,1043,1044,995,1041,11,853,857,856,850,0,995,1044,1045,992,11,850,856,871,870,0,992,1045,1013,1012,11,851,850,870,884,0,993,992,1012,1028,11,851,884,873,879,0,993,1028,1015,1022,11,859,879,873,872,0,1046,1022,1015,1014,11,879,859,858,880,0,1022,1046,1047,1023,11,880,858,876,887,0,1023,1047,1048,1031,11,867,866,887,876,0,1009,1008,1031,1048,11,866,895,888,887,0,1008,1042,1032,1031,11,894,853,852,888,0,1041,995,994,1032,11,862,895,896,863,0,1004,1042,1049,1005,11,866,869,896,895,0,1008,1011,1049,1042,11,897,898,899,892,0,1050,1051,1052,1038,11,900,901,902,903,0,1053,1054,1055,1056,11,904,905,906,907,0,1057,1058,1059,1060,11,908,909,910,911,0,1061,1062,1063,1064,11,912,913,914,915,0,1065,1066,1067,1068,11,916,917,918,919,0,1069,1070,1071,1072,11,916,919,920,921,0,1069,1072,1073,1074,11,922,760,762,923,0,1075,880,882,1076,10,924,925,763,0,1077,1078,883,10,926,927,928,0,1079,1080,1081,11,929,930,931,768,0,1082,1083,1084,1085,11,932,933,769,770,0,1086,1087,1088,891,11,934,935,770,936,0,1089,1090,891,1091,10,937,770,761,0,1092,891,881,11,937,761,760,922,0,1092,881,880,1075,11,938,939,940,941,0,1093,1094,1095,1096,11,939,942,943,940,0,1094,1097,1098,1095,11,932,944,945,933,0,1086,1099,1100,1087,10,922,946,947,0,1075,1101,1102,11,922,923,948,946,0,1075,1076,1103,1101,11,923,925,949,950,0,1076,1078,1104,1105,11,951,952,953,954,0,1106,1107,1108,1109,11,864,863,955,956,0,1006,1005,1110,1111,11,957,958,869,868,0,1112,1113,1011,1010,10,928,959,960,0,1114,1115,1116,10,961,962,963,0,1117,1118,1119,11,964,962,961,965,0,1120,1121,1122,1123,11,927,966,967,928,0,1124,1125,1126,1114,11,968,969,970,971,0,1127,1128,1129,1130,10,972,923,950,0,1131,1076,1105,11,904,907,973,974,0,1057,1060,1132,1133,10,975,976,925,0,1134,1135,1078,11,977,978,979,980,0,1136,1137,1138,1139,11,965,961,981,982,0,1123,1122,1140,1141,11,898,983,984,899,0,1051,1142,1143,1052,11,897,892,893,985,0,1050,1038,1040,1144,11,986,987,988,963,0,1145,1146,1147,1119,11,989,864,956,990,0,1148,1149,1150,1151,11,915,914,910,909,0,1068,1067,1063,1062,11,989,893,890,891,0,1148,1040,1035,1036,10,896,991,863,0,1049,1152,1005,10,991,896,869,0,1152,1049,1011,11,979,906,905,980,0,1138,1059,1058,1139,11,917,974,973,918,0,1070,1133,1132,1071,11,920,992,993,921,0,1073,1153,1154,1074,11,978,977,994,995,0,1137,1136,1155,1156,11,924,996,975,925,0,1077,1157,1134,1078,10,937,922,997,0,1092,1075,1158,11,998,929,933,945,0,1159,1082,1087,1100,11,933,929,768,769,0,1087,1082,1085,1088,11,999,968,971,1000,0,1160,1127,1130,1161,10,926,1001,969,0,1079,1162,1128,11,983,900,903,984,0,1142,1053,1056,1143,11,1002,1003,1004,1005,0,1163,1164,1165,1166,11,1006,1007,1008,1009,0,1167,1168,1169,1170,10,971,1010,1000,0,1130,1171,1161,11,971,970,1011,1012,0,1130,1129,1172,1173,11,970,1013,1014,1011,0,1129,1174,1175,1172,10,898,897,998,0,1051,1050,1159,10,983,898,998,0,1142,1051,1159,11,983,998,945,900,0,1142,1159,1100,1053,11,900,945,944,901,0,1053,1100,1099,1054,11,944,932,935,1015,0,1099,1086,1090,1176,11,909,1016,1017,915,0,1062,1177,1178,1068,11,915,1017,1018,912,0,1068,1178,1179,1065,10,770,935,932,0,891,1090,1086,11,976,975,977,980,0,1135,1134,1136,1139,11,949,905,904,950,0,1104,1058,1057,1105,11,972,950,904,974,0,1131,1105,1057,1133,11,948,917,916,946,0,1103,1070,1069,1101,11,946,916,921,947,0,1101,1069,1074,1102,11,937,1018,1017,936,0,1092,1179,1178,1091,11,1016,934,936,1017,0,1177,1089,1091,1178,11,1015,935,934,1016,0,1176,1090,1089,1177,11,1019,1009,1008,1020,0,1180,1170,1169,1180,11,943,1021,1022,940,0,1181,1182,1183,1184,11,941,940,1022,1023,0,1185,1184,1183,1186,10,1024,1025,1026,0,1187,1188,1189,11,961,963,1027,981,0,1122,1190,1191,1140,11,996,994,977,975,0,1157,1155,1136,1134,11,905,949,976,980,0,1058,1104,1135,1139,11,917,948,972,974,0,1070,1103,1131,1133,11,993,997,947,921,0,1154,1158,1102,1074,11,927,926,969,968,0,1080,1079,1128,1127,11,968,1028,966,927,0,1192,1193,1125,1124,11,1029,1005,1004,1030,0,1194,1166,1165,1195,11,1026,1025,1031,1032,0,1189,1188,1196,1197,11,1033,1034,1035,1036,0,1198,1199,1200,1201,11,1036,1035,1037,1038,0,1202,1203,1204,1205,11,1038,1037,1039,1040,0,1205,1204,1206,1207,11,1040,1039,1041,1042,0,1207,1206,1208,1209,11,1041,1043,1044,1042,0,1208,1210,1211,1209,11,1045,1044,1043,1046,0,1212,1213,1214,1215,11,1047,1048,962,964,0,1216,1217,1121,1120,10,1049,1050,967,0,1218,1219,1126,11,1051,962,1048,1052,0,1220,1118,1221,1222,11,1053,1054,988,987,0,1223,1224,1147,1146,11,988,1054,1055,1056,0,1225,1226,1227,1228,11,863,978,995,955,0,1005,1137,1156,1110,11,991,1057,978,863,0,1152,1229,1137,1005,11,1057,991,869,906,0,1229,1152,1011,1059,11,906,869,958,907,0,1059,1011,1113,1060,11,1058,1059,907,958,0,1230,1231,1060,1113,11,1059,1058,952,918,0,1231,1230,1107,1071,11,918,952,951,919,0,1071,1107,1106,1072,11,1060,919,951,1061,0,1232,1072,1106,1233,11,1060,1061,913,992,0,1232,1233,1066,1153,10,913,912,992,0,1066,1065,1153,11,1062,1063,1064,1053,0,1234,1235,1236,1223,11,990,956,1065,1066,0,1151,1150,1237,1238,11,990,1066,1063,1062,0,1151,1238,1235,1234,11,1067,1068,910,914,0,1239,1240,1063,1067,10,1069,1061,951,0,1241,1233,1106,10,1061,1069,913,0,1233,1241,1066,11,1068,1070,911,910,0,1240,1242,1064,1063,11,1070,1071,902,911,0,1242,1243,1244,1064,11,899,1072,1073,957,0,1052,1245,1246,1247,10,1074,1058,958,0,1248,1230,1113,10,1058,1074,952,0,1230,1248,1107,11,1075,1056,1055,1076,0,1249,1228,1227,1250,11,1075,1076,955,995,0,1249,1250,1110,1156,11,1077,995,994,1078,0,1251,1156,1155,1252,11,1079,1056,1077,1078,0,1253,1228,1251,1252,10,1080,995,1077,0,1254,1156,1251,10,1081,906,979,0,1255,1059,1138,10,1057,906,1081,0,1229,1059,1255,10,1082,918,973,0,1256,1071,1132,10,1059,918,1082,0,1231,1071,1256,10,1083,992,920,0,1257,1153,1073,10,1060,992,1083,0,1232,1153,1257,11,1084,1079,1078,1085,0,1258,1253,1252,1259,11,1085,1078,994,996,0,1259,1252,1155,1157,11,982,763,764,960,0,1141,883,884,1116,10,985,893,989,0,1144,1040,1148,10,990,1062,1086,0,1151,1234,1260,11,985,1086,1012,1011,0,1144,1260,1173,1172,11,1011,1014,897,985,0,1172,1175,1050,1144,11,1087,1012,1086,1062,0,1261,1173,1260,1234,10,1027,1056,1079,0,1191,1228,1253,11,1084,981,1027,1079,0,1258,1140,1191,1253,11,924,982,981,1084,0,1077,1141,1140,1258,11,765,928,960,764,0,885,1114,1116,884,11,1088,930,929,998,0,1262,1083,1082,1159,11,766,767,931,926,0,1263,1264,1084,1079,11,969,1001,1013,970,0,1128,1162,1174,1129,11,1007,1006,1089,1090,0,1168,1167,1265,1265,11,986,1051,1010,1091,0,1145,1220,1171,1266,11,1091,1087,987,986,0,1266,1261,1146,1145,11,1092,1010,1051,1052,0,1267,1171,1220,1222,11,1010,1092,1093,1000,0,1171,1267,1268,1161,11,1000,1093,1094,999,0,1161,1268,1269,1160,11,999,1094,1095,1028,0,1270,1271,1272,1193,10,967,966,1049,0,1126,1125,1218,11,1092,1096,1097,1093,0,1267,1273,1274,1268,11,1098,1094,1093,1097,0,1275,1269,1268,1274,11,1095,1094,1098,1099,0,1272,1271,1276,1277,11,1049,1095,1099,1100,0,1218,1272,1277,1278,11,1047,1049,1100,1101,0,1216,1218,1278,1279,11,1048,1047,1101,1102,0,1217,1216,1279,1280,11,1052,1048,1102,1103,0,1222,1221,1281,1282,11,1052,1103,1096,1092,0,1222,1282,1273,1267,11,1095,1049,966,1028,0,1272,1218,1125,1193,11,1049,1047,964,1050,0,1218,1216,1120,1219,11,1050,964,965,959,0,1219,1120,1123,1115,11,965,982,960,959,0,1123,1141,1116,1115,11,1038,1040,1104,1032,0,1205,1207,1283,1197,11,1105,1040,1042,1106,0,1284,1207,1209,1285,11,1107,1106,1042,1044,0,1286,1285,1209,1211,11,1029,1108,1109,1005,0,1194,1287,1288,1166,11,1002,1005,1109,1110,0,1163,1166,1288,1289,11,1031,1036,1038,1032,0,1196,1202,1205,1197,11,1103,1102,1024,1111,0,1282,1281,1187,1290,11,1103,1111,1112,1096,0,1282,1290,1291,1273,11,1096,1112,1113,1097,0,1273,1291,1292,1274,11,1113,1114,1098,1097,0,1292,1293,1275,1274,11,1090,1026,1032,1104,0,1265,1189,1197,1283,11,1007,1090,1104,1105,0,1168,1265,1283,1284,11,1008,1007,1105,1106,0,1169,1168,1284,1285,11,1009,1019,1114,1113,0,1170,1180,1293,1292,11,1112,1006,1009,1113,0,1291,1167,1170,1292,11,1006,1112,1111,1089,0,1167,1291,1290,1265,11,1106,1107,1020,1008,0,1285,1286,1180,1169,11,1046,1115,1116,1045,0,1215,1294,1295,1212,11,1034,1033,1116,1115,0,1199,1198,1295,1294,10,1033,1117,1116,0,1198,1296,1295,10,1117,1045,1116,0,1296,1212,1295,11,1046,1043,943,942,0,1215,1214,1098,1097,11,1115,1046,942,1118,0,1294,1215,1097,1297,11,938,1034,1115,1118,0,1093,1199,1294,1297,11,1034,938,941,1035,0,1199,1093,1096,1200,11,1035,941,1023,1037,0,1203,1185,1186,1204,11,1039,1037,1023,1022,0,1206,1204,1186,1183,11,1039,1022,1021,1041,0,1206,1183,1182,1208,11,1043,1041,1021,943,0,1210,1208,1182,1181,11,1099,1098,1114,1119,0,1277,1276,1298,1299,11,1119,1114,1019,1120,0,1299,1298,1300,1301,11,1120,1020,1107,1108,0,1301,1302,1303,1287,11,1108,1107,1044,1045,0,1287,1303,1213,1212,11,1109,1108,1045,1117,0,1288,1287,1212,1296,11,1110,1109,1117,1033,0,1289,1288,1296,1198,11,1110,1033,1036,1031,0,1289,1198,1201,1304,11,1121,1110,1031,1025,0,1305,1289,1304,1306,11,1122,1121,1025,1024,0,1307,1305,1306,1308,11,1101,1122,1024,1102,0,1279,1307,1308,1280,11,1101,1100,1123,1122,0,1279,1278,1309,1307,11,1100,1099,1119,1123,0,1278,1277,1299,1309,11,1108,1029,1030,1120,0,1287,1194,1195,1301,11,1110,1121,1003,1002,0,1289,1305,1164,1163,11,1122,1124,1003,1121,0,1307,1310,1164,1305,11,1125,1119,1120,1030,0,1311,1299,1301,1195,11,988,1056,1027,963,0,1225,1228,1191,1190,10,1077,1056,1080,0,1251,1228,1254,10,1056,1075,1080,0,1228,1249,1254,10,1075,995,1080,0,1249,1156,1254,10,924,1085,996,0,1077,1259,1157,10,979,978,1081,0,1138,1137,1255,10,973,907,1082,0,1132,1060,1256,10,920,919,1083,0,1073,1072,1257,10,978,1057,1081,0,1137,1229,1255,10,907,1059,1082,0,1060,1231,1256,10,919,1060,1083,0,1072,1232,1257,11,912,1018,993,992,0,1065,1179,1154,1153,11,1122,1123,1126,1124,0,1307,1309,1312,1310,11,1119,1125,1126,1123,0,1299,1311,1312,1309,11,1004,1126,1125,1030,0,1165,1312,1311,1195,11,1004,1003,1124,1126,0,1165,1164,1310,1312,11,1127,1128,1129,1130,0,1313,1314,1315,1316,11,1131,1132,1133,1134,0,1317,1318,1319,1320,11,1129,1135,1136,1130,0,1321,1322,1323,1324,11,1137,1138,1139,1140,0,1325,1326,1327,1328,11,1054,1141,1142,1055,0,1226,1329,1330,1227,11,1053,1064,1141,1054,0,1223,1236,1331,1224,11,956,955,1143,1065,0,1111,1110,1332,1333,10,1144,1076,1055,0,1334,1250,1227,10,1076,1144,955,0,1250,1334,1110,11,1130,1136,1145,1146,0,1324,1323,1335,1336,11,1147,1127,1130,1146,0,1337,1313,1316,1338,11,1148,1149,1150,1151,0,1339,1340,1341,1342,11,1148,1152,1153,1149,0,1339,1343,1344,1340,11,1154,1155,1153,1152,0,1345,1346,1344,1343,11,1156,1157,1155,1154,0,1347,1348,1349,1350,11,1158,1159,1157,1156,0,1351,1352,1348,1347,11,1160,1159,1158,1161,0,1353,1352,1351,1354,11,1161,1162,1163,1160,0,1354,1355,1356,1353,11,1162,1151,1150,1163,0,1357,1342,1341,1358,11,1164,1165,1163,1150,0,1359,1360,1358,1341,11,1166,1153,1155,1167,0,1361,1344,1346,1362,11,1167,1155,1157,1168,0,1363,1349,1348,1364,11,1169,1168,1157,1159,0,1365,1364,1348,1352,11,1137,1140,1170,1171,0,1325,1328,1366,1367,11,1134,1172,1173,1131,0,1320,1368,1369,1317,11,1138,1167,1168,1139,0,1326,1363,1364,1327,11,1174,1175,1176,1177,0,1370,1371,1372,1373,11,1178,1165,1133,1132,0,1374,1375,1319,1318,11,1179,1169,1178,1132,0,1376,1365,1374,1318,11,1168,1169,1179,1139,0,1364,1365,1376,1327,11,1149,1180,1164,1150,0,1340,1377,1359,1341,11,1128,1151,1162,1129,0,1314,1342,1357,1315,11,1147,1146,1154,1152,0,1337,1338,1345,1343,11,1145,1156,1154,1146,0,1335,1347,1350,1336,11,1145,1136,1158,1156,0,1335,1323,1351,1347,11,1136,1135,1161,1158,0,1323,1322,1354,1351,11,1135,1129,1162,1161,0,1322,1321,1355,1354,11,1169,1159,1160,1178,0,1365,1352,1353,1374,11,1160,1163,1165,1178,0,1353,1356,1375,1374,11,1166,1180,1149,1153,0,1361,1377,1340,1344,11,1139,1179,1181,1140,0,1327,1376,1378,1328,11,1132,1131,1181,1179,0,1318,1317,1378,1376,11,1182,1177,1176,1183,0,1379,1373,1372,1380,11,1131,1173,1184,1181,0,1317,1369,1381,1378,11,1184,1170,1140,1181,0,1381,1366,1328,1378,11,1185,1183,1176,1186,0,1382,1380,1372,1383,11,1187,1186,1176,1175,0,1384,1383,1372,1371,11,1065,1171,1170,1066,0,1237,1367,1366,1238,11,1184,1063,1066,1170,0,1381,1235,1238,1366,11,1064,1063,1184,1173,0,1236,1235,1381,1369,11,1172,1141,1064,1173,0,1368,1331,1236,1369,11,1142,1185,1186,1188,0,1330,1382,1383,1385,11,1141,1172,1185,1142,0,1329,1386,1382,1330,11,1172,1134,1183,1185,0,1386,1387,1380,1382,11,1182,1183,1134,1133,0,1379,1380,1387,1388,11,1165,1164,1182,1133,0,1360,1359,1379,1388,11,1177,1182,1164,1180,0,1373,1379,1359,1377,11,1177,1180,1166,1174,0,1373,1377,1361,1370,11,1138,1174,1166,1167,0,1389,1370,1361,1362,11,1174,1138,1137,1175,0,1370,1389,1390,1371,11,1175,1137,1171,1187,0,1371,1390,1391,1384,11,1065,1143,1187,1171,0,1333,1332,1384,1391,11,1143,1188,1186,1187,0,1332,1385,1383,1384,11,1144,1055,1142,1188,0,1334,1227,1330,1385,11,1144,1188,1143,955,0,1334,1385,1332,1110,11,1189,1190,1191,1192,0,1392,1393,1394,1395,11,1193,1194,1195,1196,0,1396,1397,1398,1399,11,1197,1198,1199,1200,0,1400,1401,1402,1403,11,954,1201,1202,951,0,1109,1404,1405,1106,11,914,913,1203,1067,0,1067,1066,1406,1239,11,787,1204,1205,799,0,912,1407,1408,927,11,786,1206,1204,787,0,911,1409,1407,912,11,789,791,1207,1208,0,914,916,1410,1411,11,1207,791,793,1209,0,1410,916,918,1412,11,1210,1211,1191,1212,0,1413,1414,1394,1415,11,1200,1213,1214,1197,0,1403,1416,1417,1400,11,1196,1215,1216,1193,0,1399,1418,1419,1396,11,1198,1207,1209,1199,0,1401,1410,1412,1402,11,1217,1212,1191,1190,0,1420,1415,1394,1393,11,1218,1205,1195,1194,0,1421,1422,1398,1397,11,1194,1219,1220,1218,0,1397,1423,1424,1421,11,1209,1220,1219,1199,0,1412,1424,1423,1402,11,797,1218,1220,795,0,923,1421,1424,921,11,793,795,1220,1209,0,918,921,1424,1412,11,797,799,1205,1218,0,923,925,1422,1421,11,1208,1206,786,789,0,1411,1409,911,914,11,1199,1219,1221,1200,0,1402,1423,1425,1403,11,1219,1194,1193,1221,0,1423,1397,1396,1425,11,1193,1216,1222,1221,0,1396,1419,1426,1425,11,1222,1213,1200,1221,0,1426,1416,1403,1425,11,1223,1192,1191,1211,0,1427,1395,1394,1414,11,1068,1067,1214,1213,0,1240,1239,1417,1416,11,1070,1068,1213,1222,0,1242,1240,1416,1426,11,1071,1070,1222,1216,0,1243,1242,1426,1419,11,1215,1201,1071,1216,0,1418,1428,1243,1419,11,1201,954,902,1071,0,1428,1244,1244,1243,11,1202,1223,1211,1224,0,1405,1427,1414,1429,11,1201,1215,1223,1202,0,1404,1430,1427,1405,11,1192,1223,1215,1196,0,1395,1427,1430,1431,11,1192,1196,1195,1189,0,1395,1431,1432,1392,11,1195,1205,1204,1189,0,1432,1408,1407,1392,11,1190,1189,1204,1206,0,1393,1392,1407,1409,11,1217,1190,1206,1208,0,1420,1393,1409,1411,11,1198,1217,1208,1207,0,1401,1420,1411,1410,11,1212,1217,1198,1197,0,1415,1420,1401,1400,11,1212,1197,1214,1210,0,1415,1400,1417,1413,11,1067,1203,1210,1214,0,1239,1406,1413,1417,11,1203,1224,1211,1210,0,1406,1429,1414,1413,11,1069,951,1202,1224,0,1241,1106,1405,1429,11,1069,1224,1203,913,0,1241,1429,1406,1066,11,1225,1226,1227,1228,0,1433,1434,1435,1436,11,1229,1230,1227,1226,0,1437,1438,1435,1434,11,1231,1232,1233,1234,0,1439,1440,1441,1442,11,1235,1236,1237,1238,0,1443,1444,1445,1446,11,957,1073,1239,958,0,1112,1447,1448,1113,11,903,953,1240,1241,0,1056,1449,1450,1451,11,953,952,1242,1240,0,1108,1107,1452,1453,11,812,1243,1244,824,0,943,1454,1455,959,11,811,1245,1243,812,0,942,1456,1454,943,11,1246,1247,814,816,0,1457,1458,945,947,11,1246,816,818,1248,0,1459,950,949,1460,11,1238,1249,1250,1235,0,1446,1461,1462,1443,11,1234,1251,1252,1231,0,1442,1463,1464,1439,11,1236,1246,1248,1237,0,1444,1459,1460,1445,11,1253,1244,1233,1232,0,1465,1466,1441,1440,11,1254,1255,1253,1232,0,1467,1468,1465,1440,11,1248,1255,1254,1237,0,1460,1468,1467,1445,11,821,1253,1255,820,0,954,1465,1468,953,11,818,820,1255,1248,0,949,953,1468,1460,11,821,824,1244,1253,0,954,957,1466,1465,11,1247,1245,811,814,0,1458,1456,942,945,11,1238,1237,1254,1256,0,1446,1445,1467,1469,11,1254,1232,1231,1256,0,1467,1440,1439,1469,11,1231,1252,1257,1256,0,1439,1464,1470,1469,11,1257,1249,1238,1256,0,1470,1461,1446,1469,11,1258,1228,1227,1259,0,1471,1436,1435,1472,11,1240,1250,1249,1241,0,1450,1462,1461,1451,11,1260,1241,1249,1257,0,1473,1451,1461,1470,11,1260,1257,1252,1072,0,1473,1470,1464,1245,11,1251,1073,1072,1252,0,1463,1246,1245,1464,11,1241,1260,984,903,0,1451,1473,1143,1056,11,1260,1072,899,984,0,1473,1245,1052,1143,11,1239,1258,1259,1261,0,1448,1471,1472,1474,11,1073,1251,1258,1239,0,1447,1475,1471,1448,11,1228,1258,1251,1234,0,1436,1471,1475,1476,11,1225,1228,1234,1233,0,1433,1436,1476,1477,11,1244,1243,1225,1233,0,1455,1454,1433,1477,11,1226,1225,1243,1245,0,1434,1433,1454,1456,11,1226,1245,1247,1229,0,1434,1456,1458,1437,11,1236,1229,1247,1246,0,1478,1437,1458,1457,11,1229,1236,1235,1230,0,1437,1478,1479,1438,11,1230,1235,1250,1262,0,1438,1479,1480,1481,11,1240,1242,1262,1250,0,1453,1452,1481,1480,11,1242,1261,1259,1262,0,1452,1474,1472,1481,11,1227,1230,1262,1259,0,1435,1438,1481,1472,11,1074,958,1239,1261,0,1248,1113,1448,1474,11,1074,1261,1242,952,0,1248,1474,1452,1107,11,865,864,989,891,0,1037,1149,1148,1036,11,911,902,901,908,0,1064,1482,1054,1061,11,899,957,868,892,0,1052,1247,1039,1038,11,954,953,903,902,0,1244,1449,1056,1055,10,930,1088,1014,0,1083,1262,1175,10,1089,1026,1090,0,1265,1189,1265,10,1120,1019,1020,0,1301,1300,1302,10,999,1028,968,0,1270,1193,1192,10,1084,1085,924,0,1258,1259,1077,10,925,976,949,0,1078,1135,1104,10,948,923,972,0,1103,1076,1131,10,922,947,997,0,1075,1102,1158,11,1050,959,928,967,0,1219,1115,1114,1126,11,1118,942,939,938,0,1297,1097,1094,1093,11,1152,1148,1127,1147,0,1343,1339,1313,1337,11,1148,1151,1128,1127,0,1339,1342,1314,1313,11,1087,1062,1053,987,0,1261,1234,1223,1146,11,1016,909,908,1015,0,1177,1062,1061,1176,11,908,901,944,1015,0,1061,1054,1099,1176,10,768,931,767,0,1085,1084,1264,10,937,936,770,0,1092,1091,891,11,997,993,1018,937,0,1158,1154,1179,1092,11,925,923,762,763,0,1078,1076,882,883,11,962,1051,986,963,0,1118,1220,1145,1119,11,998,897,1014,1088,0,1159,1050,1175,1262,11,926,928,765,766,0,1079,1081,1483,1263,11,931,930,1001,926,0,1084,1083,1162,1079,11,930,1014,1013,1001,0,1083,1175,1174,1162,10,1087,1091,1012,0,1261,1266,1173,11,985,989,990,1086,0,1144,1148,1151,1260,11,971,1012,1091,1010,0,1130,1173,1266,1171,11,1026,1089,1111,1024,0,1189,1265,1290,1187,10,1104,1040,1105,0,1283,1207,1284,10,982,924,763,0,1141,1077,883,11,1263,1264,1265,1266,0,1484,1485,1486,1487,11,1267,1268,1263,1266,0,1488,1489,1484,1487,10,1269,1270,1271,0,1490,1491,1492,11,1272,1273,1271,1270,0,1493,1494,1495,1496,11,1267,1274,1275,1268,0,1488,1497,1498,1489,11,1276,1277,1275,1274,0,1499,1500,1498,1497,11,1277,1276,1273,1272,0,1500,1499,1494,1493,11,1278,1279,1280,1281,0,1501,1502,1503,1504,10,1282,0,1278,0,1505,1506,1501,11,1283,1284,1285,1286,0,1507,1508,1509,1510,11,1287,1288,1289,1290,0,1511,1512,1513,1514,11,1286,1291,1292,1283,0,1510,1515,1516,1507,11,1293,1291,1294,1295,0,1517,1515,1518,1519,11,1296,1297,1298,1299,0,1520,1521,1522,1523,11,1297,1300,1301,1298,0,1521,1524,1525,1522,11,1299,1302,1303,1296,0,1523,1526,1527,1520,11,1304,1305,1286,1285,0,1528,1529,1530,1531,11,1305,1306,1291,1286,0,1529,1532,1533,1530,11,1306,1307,1294,1291,0,1532,1534,1535,1533,11,1308,1290,1289,1309,0,1536,1537,1538,1539,11,1309,1289,1310,1311,0,1539,1538,1540,1541,11,1299,1298,1312,1313,0,1542,1543,1544,1545,11,1302,1314,1311,1310,0,1546,1547,1541,1540,11,1302,1299,1313,1314,0,1546,1542,1545,1547,11,1285,1290,1308,1304,0,1531,1537,1536,1528,11,1304,1315,1316,1305,0,1528,1548,1549,1529,10,1316,1306,1305,0,1549,1532,1529,11,1317,1318,1308,1309,0,1550,1551,1536,1539,11,1313,1312,1319,1320,0,1545,1544,1552,1553,11,1321,1311,1314,1322,0,1554,1541,1547,1555,11,1314,1313,1320,1322,0,1547,1545,1553,1555,11,1304,1308,1318,1315,0,1528,1536,1551,1548,11,1323,1324,1316,1315,0,1556,1557,1549,1548,11,1325,1306,1316,1324,0,1558,1532,1549,1557,11,1325,1326,1307,1306,0,1558,1559,1534,1532,11,1327,1328,1318,1317,0,1560,1561,1551,1550,11,1329,1320,1319,1330,0,1562,1553,1552,1563,11,1319,1331,1332,1330,0,1552,1564,1565,1563,11,1321,1322,1333,1334,0,1554,1555,1566,1567,11,1335,1336,1320,1329,0,1568,1569,1553,1562,11,1315,1318,1328,1323,0,1548,1551,1561,1556,11,1337,1329,1330,1338,0,1570,1562,1563,1571,11,1330,1332,1339,1338,0,1563,1565,1572,1571,11,1334,1333,1340,1341,0,1567,1566,1573,1574,11,1335,1329,1342,1343,0,1568,1562,1575,1576,11,1323,1328,1344,1345,0,1556,1561,1577,1578,11,1346,1344,1328,1327,0,1579,1577,1561,1560,11,1347,1348,1349,1350,0,1580,1581,1582,1583,11,1321,1334,1351,1347,0,1554,1567,1584,1580,11,1334,1341,1352,1351,0,1567,1574,1585,1584,11,1353,1354,1355,1356,0,1586,1587,1588,1589,11,1357,1358,1359,1355,0,1590,1591,1592,1588,11,1360,1361,1358,1357,0,1593,1594,1591,1590,11,1362,1352,1341,1363,0,1595,1585,1574,1596,11,1364,1365,1366,1367,0,1597,1598,1599,1600,11,1279,1278,2,1368,0,1502,1501,1601,1602,11,6,1359,1358,3,0,6,1592,1591,3,11,1363,8,7,1362,0,1596,1603,20,1595,11,3,1358,1361,11,0,3,1591,1594,11,11,1369,1370,1371,1372,0,1604,1605,1606,1607,11,1364,1367,1356,1355,0,1597,1600,1589,1588,11,1373,1346,1367,1366,0,1608,1579,1600,1599,11,1349,1348,1354,1353,0,1582,1581,1587,1586,11,1351,1352,1360,1357,0,1584,1585,1593,1590,11,1309,1349,1353,1317,0,1539,1582,1586,1550,11,1317,1353,1356,1327,0,1550,1586,1589,1560,11,1374,1343,1342,1375,0,1609,1576,1575,1610,11,1376,1377,1378,1379,0,1611,1612,1613,1614,10,1370,1337,1338,0,1605,1570,1571,11,1380,1381,1382,1383,0,1615,1616,1617,1618,11,1384,1385,1386,1387,0,1619,1620,1621,1622,11,1388,1389,1390,1391,0,1623,1624,1625,1626,10,1392,1393,1344,0,1627,1628,1577,11,1394,1370,1369,1395,0,1629,1605,1604,1630,11,1396,1397,1398,1391,0,1631,1632,1633,1626,11,1382,1399,1400,1401,0,1617,1634,1635,1636,11,1385,1384,1402,1403,0,1620,1619,1637,1638,11,1404,1405,1406,1407,0,1639,1640,1641,1642,11,1408,1409,1410,1411,0,1643,1644,1645,1646,10,1411,1412,1408,0,1646,1647,1643,11,1404,1413,1414,1415,0,1648,1649,1650,1651,11,1412,1416,1417,1418,0,1647,1652,1653,1654,10,1419,1420,1372,0,1655,1656,1607,11,1345,1344,1393,1379,0,1578,1577,1628,1614,11,1421,1422,1423,1424,0,1657,1658,1659,1660,10,1320,1336,1322,0,1553,1569,1555,11,1280,1279,1340,1333,0,1503,1502,1573,1566,11,1336,1335,1343,1425,0,1569,1568,1576,1661,11,1426,1425,1343,1374,0,1662,1661,1576,1609,11,2,8,1363,1368,0,1601,1603,1596,1602,11,1365,1427,1428,1366,0,1598,1663,1664,1599,11,1427,1429,1430,1428,0,1663,1665,1666,1664,11,1281,1280,1425,1426,0,1504,1503,1661,1662,11,1333,1336,1425,1280,0,1566,1569,1661,1503,11,1431,1432,1433,1434,0,1667,1668,1669,1670,11,1435,1436,1437,1438,0,1671,1672,1673,1674,11,1439,1435,1438,1429,0,1675,1671,1674,1665,11,1440,1429,1438,1441,0,1676,1665,1674,1677,10,1441,1438,1437,0,1677,1674,1673,11,1414,1441,1442,1415,0,1650,1677,1678,1651,10,1443,1390,1389,0,1679,1625,1624,11,1390,1444,1396,1391,0,1625,1680,1631,1626,11,1395,1397,1396,1394,0,1630,1632,1631,1629,11,1361,1360,1352,1362,0,1594,1593,1585,1595,11,11,1361,1362,7,0,11,1594,1595,20,11,1416,1445,1446,1417,0,1652,1681,1682,1653,11,1447,1448,1359,6,0,1683,1684,1592,6,11,6,5,1449,1447,0,6,5,1685,1683,11,1429,1427,1449,1439,0,1665,1663,1685,1675,11,1447,1449,1427,1365,0,1683,1685,1663,1598,11,1448,1447,1365,1364,0,1684,1683,1598,1597,11,1450,1451,1452,1453,0,1686,1687,1688,1689,11,1414,1454,1440,1441,0,1650,1690,1676,1677,11,1436,1455,1456,1437,0,1672,1691,1692,1673,11,1368,1363,1341,1340,0,1602,1596,1574,1573,10,1279,1368,1340,0,1502,1602,1573,11,1457,1458,1383,1401,0,1693,1694,1618,1636,11,1392,1459,1460,1461,0,1627,1695,1696,1697,11,1462,1463,1464,1465,0,1698,1699,1700,1701,11,1466,1467,1468,1469,0,1702,1703,1704,1705,11,1469,1468,1470,1471,0,1705,1704,1706,1707,11,1472,1473,1407,1474,0,1708,1709,1710,1711,11,1475,1418,1476,1477,0,1712,1654,1713,1714,11,1476,1418,1417,1478,0,1713,1654,1653,1715,11,1446,1479,1478,1417,0,1682,1716,1715,1653,11,1480,1462,1465,1481,0,1717,1698,1701,1718,10,1482,1483,1484,0,1719,1720,1721,11,1454,1451,1450,1440,0,1690,1687,1686,1676,11,1430,1429,1440,1450,0,1666,1665,1676,1686,10,1485,1459,1366,0,1722,1695,1599,11,1453,1428,1430,1450,0,1689,1664,1666,1686,11,1383,1458,1486,1380,0,1618,1694,1723,1615,11,1460,1459,1485,1487,0,1696,1695,1722,1724,11,1459,1392,1373,1366,0,1695,1627,1608,1599,11,1455,1432,1488,1456,0,1691,1725,1726,1692,11,1489,1490,1491,1492,0,1727,1728,1729,1730,11,1265,1493,1494,1495,0,1486,1731,1732,1733,11,1266,1496,1497,1267,0,1487,1734,1735,1488,11,1498,1274,1499,1500,0,1736,1497,1737,1738,11,1271,1501,1502,1269,0,1492,1739,1740,1490,11,1269,1502,1503,1504,0,1490,1740,1741,1742,11,1501,1271,1273,1505,0,1743,1495,1494,1744,11,1497,1499,1274,1267,0,1735,1737,1497,1488,11,1444,1506,1394,1396,0,1680,1745,1629,1631,11,1489,1374,1375,1443,0,1727,1609,1610,1679,10,1488,1432,1492,0,1746,1668,1730,11,1405,1388,1391,1410,0,1640,1623,1626,1645,11,1374,1489,1492,1426,0,1609,1727,1730,1662,11,1503,1477,1476,1507,0,1741,1714,1713,1747,11,1502,1409,1477,1503,0,1740,1644,1714,1741,10,1508,1509,1409,0,1748,1749,1644,11,1505,1510,1508,1501,0,1744,1750,1751,1743,11,1500,1499,1497,1511,0,1738,1737,1735,1752,11,1511,1496,1495,1463,0,1752,1734,1733,1699,11,1494,1464,1463,1495,0,1732,1700,1699,1733,11,1443,1512,1444,1390,0,1679,1753,1680,1625,11,1375,1513,1512,1443,0,1610,1754,1753,1679,11,1514,1513,1375,1342,0,1755,1754,1610,1575,11,1342,1329,1337,1514,0,1575,1562,1570,1755,11,1512,1513,1506,1444,0,1753,1754,1745,1680,11,1514,1337,1506,1513,0,1755,1570,1745,1754,11,1409,1408,1475,1477,0,1644,1643,1712,1714,11,1408,1412,1418,1475,0,1643,1647,1654,1712,11,1466,1469,1471,1498,0,1702,1705,1707,1736,11,1498,1515,1276,1274,0,1736,1756,1499,1497,11,1515,1471,1510,1505,0,1756,1707,1750,1744,11,1467,1483,1482,1516,0,1703,1720,1719,1757,11,1517,1516,1403,1402,0,1758,1757,1638,1637,11,1518,1402,1451,1454,0,1759,1637,1687,1690,11,1402,1518,1519,1517,0,1637,1759,1760,1758,11,1520,1483,1467,1466,0,1761,1720,1703,1702,11,1500,1520,1466,1498,0,1738,1761,1702,1736,11,1511,1521,1520,1500,0,1752,1762,1761,1738,11,1521,1511,1463,1462,0,1762,1752,1699,1698,11,1422,1421,1522,1523,0,1658,1657,1763,1764,11,1524,1525,1460,1487,0,1765,1766,1696,1724,11,1526,1461,1460,1525,0,1767,1697,1696,1766,11,1461,1526,1527,1528,0,1697,1767,1768,1769,11,1529,1530,1381,1380,0,1770,1771,1616,1615,11,1345,1531,1324,1323,0,1578,1772,1557,1556,11,144,1532,1449,5,0,1773,1774,1685,5,11,142,1533,1532,144,0,1775,1776,1774,1773,11,143,1534,1533,142,0,1777,1778,1776,1775,11,22,1535,1534,143,0,1779,1780,1781,1782,11,1410,1391,1398,1411,0,1645,1626,1633,1646,11,1398,1397,1412,1411,0,1633,1632,1647,1646,11,1397,1536,1416,1412,0,1632,1783,1652,1647,11,1395,1420,1536,1397,0,1630,1656,1783,1632,11,1369,1372,1420,1395,0,1604,1607,1656,1630,11,1491,1490,1389,1388,0,1729,1728,1624,1623,11,1415,1491,1388,1404,0,1784,1729,1623,1639,11,1479,1537,1538,1478,0,1716,1785,1786,1715,11,22,21,1433,1535,0,1779,1787,1669,1780,11,1282,1426,1431,1434,0,1505,1662,1667,1670,11,1282,1278,1281,1426,0,1505,1501,1504,1662,10,1439,1449,1532,0,1675,1685,1774,11,1533,1435,1439,1532,0,1776,1671,1675,1774,11,1436,1435,1533,1534,0,1672,1671,1776,1778,11,1534,1535,1455,1436,0,1781,1780,1788,1789,11,1535,1433,1432,1455,0,1780,1669,1668,1788,11,1492,1432,1431,1426,0,1730,1668,1667,1662,11,21,141,1434,1433,0,1787,1790,1670,1669,11,1516,1517,1468,1467,0,1757,1758,1704,1703,11,1517,1519,1470,1468,0,1758,1760,1706,1704,11,1470,1519,1473,1472,0,1706,1760,1709,1708,11,1488,1415,1442,1456,0,1726,1651,1678,1692,11,1491,1415,1488,1492,0,1729,1784,1746,1730,11,1407,1473,1413,1404,0,1710,1709,1649,1648,11,1451,1402,1384,1452,0,1687,1637,1619,1688,11,1422,1385,1403,1423,0,1658,1620,1638,1659,11,1452,1384,1387,1487,0,1688,1619,1622,1724,11,1385,1422,1523,1386,0,1620,1658,1764,1621,11,1495,1496,1266,1265,0,1733,1734,1487,1486,11,1486,1458,1376,1539,0,1723,1694,1611,1791,11,1377,1376,1458,1457,0,1612,1611,1694,1693,11,1540,1529,1380,1486,0,1792,1770,1615,1723,11,1541,1540,1486,1539,0,1793,1792,1723,1791,11,1524,1487,1387,1542,0,1765,1724,1622,1794,11,1542,1387,1386,1543,0,1794,1622,1621,1795,11,1386,1523,1544,1543,0,1621,1764,1796,1795,11,1545,1544,1523,1522,0,1797,1796,1764,1763,11,1546,1547,1530,1529,0,1798,1799,1771,1770,11,1547,1548,1545,1530,0,1799,1800,1797,1771,11,1548,1549,1544,1545,0,1800,1801,1796,1797,11,1549,1550,1543,1544,0,1801,1802,1795,1796,11,1550,1551,1542,1543,0,1802,1803,1794,1795,11,1542,1551,1552,1524,0,1794,1803,1804,1765,11,1524,1552,1553,1525,0,1765,1804,1805,1766,11,1525,1553,1554,1526,0,1766,1805,1806,1767,11,1526,1554,1555,1527,0,1767,1806,1807,1768,11,1540,1541,1556,1557,0,1792,1793,1808,1809,11,1557,1546,1529,1540,0,1809,1798,1770,1792,11,1393,1392,1461,1528,0,1628,1627,1697,1769,11,1541,1527,1555,1556,0,1793,1768,1807,1808,11,1541,1539,1528,1527,0,1793,1791,1769,1768,10,1528,1379,1393,0,1769,1614,1628,11,1338,1339,1371,1370,0,1571,1572,1606,1605,11,1538,1507,1476,1478,0,1786,1747,1713,1715,10,1324,1531,1325,0,1557,1772,1558,11,1521,1484,1483,1520,0,1762,1721,1720,1761,11,1530,1545,1522,1381,0,1771,1797,1763,1616,11,1381,1522,1421,1382,0,1616,1763,1657,1617,11,1424,1399,1382,1421,0,1660,1634,1617,1657,11,1424,1484,1480,1399,0,1660,1721,1717,1634,11,1462,1480,1484,1521,0,1698,1717,1721,1762,11,1276,1515,1505,1273,0,1499,1756,1744,1494,11,1519,1518,1413,1473,0,1760,1759,1649,1709,11,1413,1518,1454,1414,0,1649,1759,1690,1650,11,1481,1400,1399,1480,0,1718,1635,1634,1717,11,1409,1509,1406,1410,0,1644,1749,1641,1645,11,1539,1376,1379,1528,0,1791,1611,1614,1769,11,1536,1558,1445,1416,0,1783,1810,1681,1652,11,1558,1536,1420,1419,0,1810,1783,1656,1655,11,1424,1423,1482,1484,0,1660,1659,1719,1721,11,1423,1403,1516,1482,0,1659,1638,1757,1719,11,1406,1509,1474,1407,0,1641,1749,1811,1642,10,1410,1406,1405,0,1645,1641,1640,11,1325,1531,1559,1326,0,1558,1772,1812,1559,11,1560,1561,1562,1563,0,1813,1814,1815,1816,10,1564,1561,1565,0,1817,1814,1818,11,1566,1567,1568,1569,0,1819,1820,1821,1822,10,1570,1567,1571,0,1823,1820,1824,11,1572,1573,1574,1575,0,1825,1826,1827,1828,10,1576,1575,1577,0,1829,1828,1830,11,1567,1572,1575,1562,0,1820,1825,1828,1815,11,1563,1552,1551,1560,0,1816,1804,1803,1813,11,1569,1564,1549,1548,0,1822,1817,1801,1800,11,1546,1571,1566,1547,0,1798,1824,1819,1799,11,1556,1573,1570,1557,0,1808,1826,1823,1809,11,1555,1574,1573,1556,0,1807,1827,1826,1808,11,1574,1555,1554,1577,0,1827,1807,1806,1830,11,1554,1553,1576,1577,0,1806,1805,1829,1830,11,1576,1553,1552,1563,0,1829,1805,1804,1816,11,1560,1551,1550,1565,0,1813,1803,1802,1818,11,1546,1557,1570,1571,0,1798,1809,1823,1824,11,1548,1547,1566,1569,0,1800,1799,1819,1822,11,1550,1549,1564,1565,0,1802,1801,1817,1818,11,1437,1456,1442,1441,0,1673,1692,1678,1677,10,1497,1496,1511,0,1735,1734,1752,11,1284,1287,1290,1285,0,1508,1831,1832,1509,11,1578,1312,1298,1301,0,1833,1544,1543,1834,11,1312,1578,1331,1319,0,1544,1833,1564,1552,11,1302,1310,1579,1303,0,1526,1835,1836,1527,10,1474,1509,1508,0,1811,1749,1748,11,1493,1265,1264,1580,0,1731,1486,1485,1837,11,1581,1582,1583,1584,0,1838,1839,1840,1841,11,1585,1586,1284,1283,0,1842,1843,1508,1507,11,1587,1585,1283,1292,0,1844,1842,1507,1516,11,1588,1589,1292,1293,0,1845,1846,1516,1517,11,1586,1590,1287,1284,0,1843,1847,1831,1508,11,1288,1287,1590,1584,0,1512,1511,1848,1841,11,1589,1591,1587,1292,0,1846,1849,1844,1516,11,1288,1584,1303,1579,0,1512,1841,1527,1836,11,1297,1296,1583,1592,0,1521,1520,1840,1850,11,1592,1593,1300,1297,0,1850,1851,1524,1521,11,1594,1591,1589,1588,0,1852,1849,1846,1845,11,1595,1596,1585,1587,0,1853,1854,1842,1844,11,1597,1595,1587,1591,0,1855,1853,1844,1849,11,1586,1585,1596,1598,0,1843,1842,1854,1856,11,1590,1586,1598,1581,0,1847,1843,1856,1857,11,1594,1599,1597,1591,0,1852,1858,1855,1849,11,1582,1600,1592,1583,0,1839,1859,1850,1840,11,1599,1594,1601,1602,0,1858,1852,1860,1861,11,1588,1293,1295,1603,0,1845,1517,1519,1862,11,1601,1594,1588,1603,0,1860,1852,1845,1862,11,1593,1592,1600,1604,0,1851,1850,1859,1863,11,1296,1303,1584,1583,0,1520,1527,1841,1840,11,1327,1356,1367,1346,0,1560,1589,1600,1579,11,1355,1354,1605,1357,0,1588,1587,1864,1590,11,1605,1354,1348,1606,0,1864,1587,1581,1865,11,1606,1348,1347,1351,0,1865,1581,1580,1584,11,1605,1606,1351,1357,0,1864,1865,1584,1590,10,1322,1336,1333,0,1555,1569,1566,11,1310,1289,1288,1579,0,1835,1513,1512,1836,10,1347,1350,1311,0,1580,1583,1541,10,1347,1311,1321,0,1580,1541,1554,10,1507,1504,1503,0,1747,1742,1741,10,1355,1448,1364,0,1588,1684,1597,10,1448,1355,1359,0,1684,1588,1592,10,1350,1349,1309,0,1583,1582,1539,10,1311,1350,1309,0,1541,1583,1539,11,1568,1567,1562,1561,0,1821,1820,1815,1814,11,1392,1344,1346,1373,0,1627,1577,1579,1608,11,1487,1485,1453,1452,0,1724,1722,1689,1688,11,1485,1366,1428,1453,0,1722,1599,1664,1689,10,1291,1293,1292,0,1515,1517,1516,11,1472,1474,1508,1510,0,1708,1711,1751,1750,11,1470,1472,1510,1471,0,1706,1708,1750,1707,11,1409,1502,1501,1508,0,1644,1740,1739,1748,11,1379,1378,1531,1345,0,1614,1613,1772,1578,10,1378,1559,1531,0,1613,1812,1772,11,1607,1608,1609,1610,0,1866,1867,1868,1869,11,1609,1611,1612,1610,0,1868,1870,1871,1869,10,1613,1614,1615,0,1872,1873,1874,11,1616,1615,1614,1617,0,1875,1876,1877,1878,11,1618,1619,1612,1611,0,1879,1880,1871,1870,11,1618,1620,1621,1619,0,1879,1881,1882,1880,11,1620,1616,1617,1621,0,1881,1875,1878,1882,11,1622,1623,1624,1625,0,1883,1884,1885,1886,11,1626,635,771,1627,0,1887,1888,1889,1890,11,1628,1629,1630,1631,0,1891,1892,1893,1894,11,1632,1633,1634,1635,0,1895,1896,1897,1898,11,1629,1628,1636,1637,0,1892,1891,1899,1900,11,1638,1295,1294,1637,0,1901,1519,1518,1900,11,1639,1640,1641,1642,0,1902,1903,1904,1905,11,1640,1639,1301,1300,0,1903,1902,1525,1524,11,1643,1644,1642,1641,0,1906,1907,1905,1904,11,1629,1645,1646,1630,0,1908,1909,1910,1911,11,1645,1629,1637,1647,0,1909,1908,1912,1913,11,1647,1637,1294,1307,0,1913,1912,1535,1534,11,1634,1633,1648,1649,0,1914,1915,1916,1917,11,1649,1650,1651,1634,0,1917,1918,1919,1914,11,1652,1639,1642,1653,0,1920,1921,1922,1923,11,1644,1651,1650,1654,0,1924,1919,1918,1925,11,1653,1642,1644,1654,0,1923,1922,1924,1925,11,1648,1633,1630,1646,0,1916,1915,1911,1910,11,1646,1645,1655,1656,0,1910,1909,1926,1927,10,1655,1645,1647,0,1926,1909,1913,11,1657,1649,1648,1658,0,1928,1917,1916,1929,11,1659,1652,1653,1660,0,1930,1920,1923,1931,11,1661,1662,1654,1650,0,1932,1933,1925,1918,11,1660,1653,1654,1662,0,1931,1923,1925,1933,11,1658,1648,1646,1656,0,1929,1916,1910,1927,11,1655,1663,1664,1656,0,1926,1934,1935,1927,11,1655,1647,1665,1663,0,1926,1913,1936,1934,11,1665,1647,1307,1326,0,1936,1913,1534,1559,11,1666,1657,1658,1667,0,1937,1928,1929,1938,11,1668,1669,1659,1660,0,1939,1940,1930,1931,11,1659,1669,1332,1331,0,1930,1940,1565,1564,11,1670,1662,1661,1671,0,1941,1933,1932,1942,11,1672,1668,1660,1673,0,1943,1939,1931,1944,11,1667,1658,1656,1664,0,1938,1929,1927,1935,11,1674,1675,1669,1668,0,1945,1946,1940,1939,11,1669,1675,1339,1332,0,1940,1946,1572,1565,11,1671,1676,1677,1670,0,1942,1947,1948,1941,11,1678,1668,1672,1679,0,1949,1939,1943,1950,11,1680,1667,1664,1681,0,1951,1938,1935,1952,11,1667,1680,1682,1666,0,1938,1951,1953,1937,11,1683,1684,1685,1686,0,1954,1955,1956,1957,11,1661,1683,1687,1671,0,1932,1954,1958,1942,11,1688,1676,1671,1687,0,1959,1947,1942,1958,11,1689,1690,1691,1692,0,1960,1961,1962,1963,11,1693,1694,1695,1691,0,1964,1965,1966,1962,11,1694,1696,1697,1695,0,1965,1967,1968,1966,11,1676,1688,1698,1699,0,1947,1959,1969,1970,11,1700,1701,1702,1703,0,1971,1972,1973,1974,11,1704,633,1622,1625,0,1975,1976,1883,1886,11,1705,1706,1694,1693,0,1977,1978,1965,1964,11,1699,1698,639,642,0,1970,1969,1979,1980,11,1706,1707,1696,1694,0,1978,1981,1967,1965,11,1371,1708,1709,1372,0,1606,1982,1983,1607,11,1690,1701,1700,1691,0,1961,1972,1971,1962,11,1701,1682,1710,1702,0,1972,1953,1984,1973,11,1692,1686,1685,1689,0,1963,1957,1956,1960,11,1687,1695,1697,1688,0,1958,1966,1968,1959,11,1649,1657,1689,1685,0,1917,1928,1960,1956,11,1657,1666,1690,1689,0,1928,1937,1961,1960,11,1711,1712,1678,1679,0,1985,1986,1949,1950,11,1713,1714,1378,1377,0,1987,1988,1613,1612,11,1715,1716,1708,1674,0,1989,1990,1982,1945,11,1717,1718,1719,1720,0,1991,1992,1993,1994,11,1721,1722,1723,1724,0,1995,1996,1997,1998,11,1725,1726,1727,1728,0,1999,2000,2001,2002,10,1729,1680,1730,0,2003,1951,2004,11,1716,1731,1709,1708,0,1990,2005,1983,1982,11,1732,1733,1734,1726,0,2006,2007,2008,2000,10,1401,1719,1718,0,1636,1993,1992,11,1735,1723,1722,1736,0,2009,1997,1996,2010,11,1737,1738,1739,1740,0,2011,2012,2013,2014,11,1741,1742,1743,1744,0,2015,2016,2017,2018,10,1744,1743,1745,0,2018,2017,2019,11,1746,1747,1737,1748,0,2020,2021,2022,2023,11,1749,1750,1745,1751,0,2024,2025,2019,2026,10,1419,1372,1752,0,1655,1607,2027,11,1730,1680,1681,1714,0,2004,1951,1952,1988,11,1753,1754,1755,1756,0,2028,2029,2030,2031,10,1660,1662,1673,0,1931,1933,1944,11,1677,1625,1624,1670,0,1948,1886,1885,1941,11,1679,1672,1673,1757,0,1950,1943,1944,2032,11,1679,1757,1758,1711,0,1950,2032,2033,1985,11,633,1704,1699,642,0,1976,1975,1970,1980,11,1703,1702,1759,1760,0,1974,1973,2034,2035,11,1761,1762,1760,1759,0,2036,2037,2035,2034,11,1757,1624,1623,1758,0,2032,1885,1884,2033,11,1670,1624,1757,1673,0,1941,1885,2032,1944,11,1763,1764,1765,1627,0,2038,2039,2040,1890,11,1766,1767,1768,1769,0,2041,2042,2043,2044,11,1767,1766,1770,1762,0,2042,2041,2045,2037,11,1767,1762,1771,1772,0,2042,2037,2046,2047,10,1772,1768,1767,0,2047,2043,2042,11,1773,1772,1746,1748,0,2048,2047,2020,2023,11,1774,1775,1776,1728,0,2049,2050,2051,2002,11,1727,1726,1734,1777,0,2001,2000,2008,2052,11,1734,1733,1731,1716,0,2008,2007,2005,1990,11,1696,1698,1688,1697,0,1967,1969,1959,1968,11,1698,1696,1707,639,0,1969,1967,1981,1979,11,1750,1749,1446,1445,0,2025,2024,1682,1681,11,1778,1705,1693,1779,0,2053,1977,1964,2054,11,1705,1778,1780,637,0,1977,2053,2055,2056,11,1762,1770,1780,1760,0,2037,2045,2055,2035,11,1760,1780,1778,1703,0,2035,2055,2053,1974,11,1703,1778,1779,1700,0,1974,2053,2054,1971,11,1781,1782,1783,1784,0,2057,2058,2059,2060,11,1771,1785,1746,1772,0,2046,2061,2020,2047,11,1769,1768,1786,1787,0,2044,2043,2062,2063,11,1704,1677,1676,1699,0,1975,1948,1947,1970,10,1625,1677,1704,0,1886,1948,1975,11,1457,1401,1718,1788,0,1693,1636,1992,2064,11,1729,1789,1790,1791,0,2003,2065,2066,2067,11,1792,1465,1464,1793,0,2068,1701,1700,2069,11,1794,1795,1796,1797,0,2070,2071,2072,2073,11,1795,1798,1799,1796,0,2071,2074,2075,2072,11,1800,1801,1738,1802,0,2076,2077,2078,2079,11,1803,1751,1804,1805,0,2080,2026,2081,2082,11,1749,1751,1803,1806,0,2024,2026,2080,2083,11,1806,1479,1446,1749,0,2083,1716,1682,2024,11,1465,1792,1807,1481,0,1701,2068,2084,1718,10,1808,1809,1810,0,2085,2086,2087,11,1785,1771,1781,1784,0,2061,2046,2057,2060,11,1771,1762,1761,1781,0,2046,2037,2036,2057,10,1811,1702,1791,0,2088,1973,2067,11,1782,1781,1761,1759,0,2058,2057,2036,2034,11,1718,1717,1812,1788,0,1992,1991,2089,2064,11,1811,1791,1790,1813,0,2088,2067,2066,2090,11,1710,1729,1791,1702,0,1984,2003,2067,1973,11,1787,1786,1814,1764,0,2063,2062,2091,2092,11,1815,1776,1775,1816,0,2093,2051,2050,2094,11,1607,1817,1494,1493,0,1866,2095,1732,1731,11,1610,1612,1818,1819,0,1869,1871,2096,2097,11,1820,1821,1822,1619,0,2098,2099,2100,1880,11,1614,1613,1823,1824,0,1873,1872,2101,2102,11,1613,1825,1826,1823,0,1872,2103,2104,2101,11,1824,1827,1617,1614,0,2105,2106,1878,1877,11,1619,1822,1818,1612,0,1880,2100,2096,1871,11,1777,1734,1716,1715,0,2052,2008,1990,1989,11,1775,1774,1712,1711,0,2050,2049,1986,1985,10,1814,1816,1764,0,2107,2094,2039,11,1740,1741,1726,1725,0,2014,2015,2000,1999,11,1711,1758,1816,1775,0,1985,2033,2094,2050,11,1826,1828,1803,1805,0,2104,2108,2080,2082,11,1823,1826,1805,1742,0,2101,2104,2082,2016,10,1829,1742,1830,0,2109,2016,2110,11,1827,1824,1829,1831,0,2106,2105,2111,2112,11,1821,1832,1818,1822,0,2099,2113,2096,2100,11,1832,1793,1817,1819,0,2113,2069,2095,2097,11,1793,1464,1494,1817,0,2069,1700,1732,2095,11,1774,1727,1777,1833,0,2049,2001,2052,2114,11,1833,1834,1712,1774,0,2114,2115,1986,2049,11,1712,1834,1835,1678,0,1986,2115,2116,1949,11,1674,1668,1678,1835,0,1945,1939,1949,2116,11,1833,1777,1715,1834,0,2114,2052,1989,2115,11,1835,1834,1715,1674,0,2116,2115,1989,1945,11,1742,1805,1804,1743,0,2016,2082,2081,2017,11,1751,1745,1743,1804,0,2026,2019,2017,2081,10,1820,1836,1798,0,2098,2117,2074,11,1820,1619,1621,1836,0,2098,1880,1882,2117,11,1831,1798,1836,1827,0,2112,2074,2117,2106,11,1808,1810,1797,1837,0,2085,2087,2073,2118,11,1736,1837,1838,1735,0,2010,2118,2119,2009,11,1784,1735,1839,1785,0,2060,2009,2120,2061,11,1735,1838,1840,1839,0,2009,2119,2121,2120,11,1841,1794,1797,1810,0,2122,2070,2073,2087,11,1794,1841,1821,1820,0,2070,2122,2099,2098,11,1832,1821,1841,1842,0,2113,2099,2122,2123,11,1793,1832,1842,1792,0,2069,2113,2123,2068,11,1754,1843,1844,1755,0,2029,2124,2125,2030,11,1790,1845,1846,1813,0,2066,2126,2127,2090,11,1847,1845,1790,1789,0,2128,2126,2066,2065,11,1789,1848,1849,1847,0,2065,2129,2130,2128,11,1720,1850,1851,1717,0,1994,2131,2132,1991,11,1681,1664,1663,1852,0,1952,1935,1934,2133,11,1780,1853,774,637,0,2055,2134,2135,2056,11,1853,1854,773,774,0,2134,2136,2137,2135,11,772,773,1854,1855,0,2138,2137,2136,2139,11,1855,1856,651,772,0,2140,2141,2142,2143,11,1741,1744,1732,1726,0,2015,2018,2006,2000,11,1732,1744,1745,1733,0,2006,2018,2019,2007,11,1733,1745,1750,1857,0,2007,2019,2025,2144,11,1731,1733,1857,1752,0,2005,2007,2144,2027,11,1709,1731,1752,1372,0,1983,2005,2027,1607,11,1815,1725,1728,1776,0,2093,1999,2002,2051,10,1725,1737,1740,0,1999,2011,2014,11,1858,1537,1479,1806,0,2145,1785,1716,2083,11,651,1856,1763,652,0,2142,2141,2038,2146,11,1765,1758,1626,1627,0,2040,2033,1887,1890,11,1626,1758,1623,1622,0,1887,2033,1884,1883,10,1770,1853,1780,0,2045,2134,2055,11,1770,1766,1854,1853,0,2045,2041,2136,2134,11,1854,1766,1769,1855,0,2136,2041,2044,2139,11,1855,1769,1787,1856,0,2140,2147,2148,2141,11,1856,1787,1764,1763,0,2141,2148,2039,2038,11,1765,1764,1816,1758,0,2040,2039,2094,2033,11,652,1763,1627,771,0,2146,2038,1890,1889,11,1837,1797,1796,1838,0,2118,2073,2072,2119,11,1799,1840,1838,1796,0,2075,2121,2119,2072,11,1799,1800,1802,1840,0,2075,2076,2079,2121,11,1773,1748,1814,1786,0,2048,2023,2091,2062,11,1814,1748,1815,1816,0,2107,2149,2093,2094,11,1747,1802,1738,1737,0,2021,2079,2078,2022,11,1723,1735,1784,1783,0,1997,2009,2060,2059,11,1754,1753,1736,1722,0,2029,2028,2010,1996,11,1724,1723,1783,1813,0,1998,1997,2059,2090,11,1843,1754,1722,1721,0,2124,2029,1996,1995,11,1817,1607,1610,1819,0,2095,1866,1869,2097,11,1812,1859,1713,1788,0,2089,2150,1987,2064,11,1788,1713,1377,1457,0,2064,1987,1612,1693,11,1860,1812,1717,1851,0,2151,2089,1991,2132,11,1861,1859,1812,1860,0,2152,2150,2089,2151,11,1846,1862,1724,1813,0,2127,2153,1998,2090,11,1862,1863,1721,1724,0,2153,2154,1995,1998,11,1864,1843,1721,1863,0,2155,2124,1995,2154,11,1865,1844,1843,1864,0,2156,2125,2124,2155,11,1866,1851,1850,1867,0,2157,2132,2131,2158,11,1865,1868,1867,1850,0,2156,2159,2158,2131,11,1868,1865,1864,1869,0,2159,2156,2155,2160,11,1869,1864,1863,1870,0,2160,2155,2154,2161,11,1862,1871,1870,1863,0,2153,2162,2161,2154,11,1862,1846,1872,1871,0,2153,2127,2163,2162,11,1846,1845,1873,1872,0,2127,2126,2164,2163,11,1845,1847,1874,1873,0,2126,2128,2165,2164,11,1847,1849,1875,1874,0,2128,2130,2166,2165,11,1876,1861,1860,1877,0,2167,2152,2151,2168,11,1851,1866,1877,1860,0,2132,2157,2168,2151,11,1730,1848,1789,1729,0,2004,2129,2065,2003,11,1875,1849,1861,1876,0,2166,2130,2152,2167,11,1848,1859,1861,1849,0,2129,2150,2152,2130,10,1848,1730,1714,0,2129,2004,1988,11,1675,1708,1371,1339,0,1946,1982,1606,1572,11,1803,1828,1858,1806,0,2080,2108,2145,2083,10,1663,1665,1852,0,1934,1936,2133,11,1842,1841,1810,1809,0,2123,2122,2087,2086,11,1850,1720,1844,1865,0,2131,1994,2125,2156,11,1720,1719,1755,1844,0,1994,1993,2030,2125,11,1756,1755,1719,1878,0,2031,2030,1993,2169,11,1756,1878,1807,1809,0,2031,2169,2084,2086,11,1809,1807,1792,1842,0,2086,2084,2068,2123,11,1827,1836,1621,1617,0,2106,2117,1882,1878,11,1840,1802,1747,1839,0,2121,2079,2021,2120,11,1747,1746,1785,1839,0,2021,2020,2061,2120,11,1878,1400,1481,1807,0,2169,1635,1718,2084,11,1742,1741,1739,1830,0,2016,2015,2013,2110,11,1859,1848,1714,1713,0,2150,2129,1988,1987,11,1857,1750,1445,1558,0,2144,2025,1681,1810,11,1558,1419,1752,1857,0,1810,1655,2027,2144,11,1756,1809,1808,1753,0,2031,2086,2085,2028,11,1753,1808,1837,1736,0,2028,2085,2118,2010,11,1739,1738,1801,1830,0,2013,2012,2170,2110,10,1741,1740,1739,0,2015,2014,2013,11,1665,1326,1559,1852,0,1936,1559,1812,2133,10,1879,1880,1881,0,2171,2172,2173,11,1882,1880,1883,1884,0,2174,2172,2175,2176,10,1885,1886,1887,0,2177,2178,2179,11,1888,1886,1889,1890,0,2180,2178,2181,2182,10,1891,1892,1893,0,2183,2184,2185,11,1894,1891,1895,1896,0,2186,2183,2187,2188,11,1886,1895,1891,1889,0,2178,2187,2183,2181,11,1896,1879,1871,1872,0,2188,2171,2162,2163,11,1869,1882,1884,1868,0,2160,2174,2176,2159,11,1866,1867,1885,1887,0,2157,2158,2177,2179,11,1876,1877,1888,1890,0,2167,2168,2180,2182,11,1890,1893,1875,1876,0,2182,2185,2166,2167,11,1893,1892,1874,1875,0,2185,2184,2165,2166,11,1894,1873,1874,1892,0,2186,2164,2165,2184,11,1894,1896,1872,1873,0,2186,2188,2163,2164,11,1879,1881,1870,1871,0,2171,2173,2161,2162,11,1888,1877,1866,1887,0,2180,2168,2157,2179,11,1885,1867,1868,1884,0,2177,2158,2159,2176,11,1882,1869,1870,1881,0,2174,2160,2161,2173,11,1768,1772,1773,1786,0,2043,2047,2048,2062,10,1818,1832,1819,0,2096,2113,2097,11,1631,1630,1633,1632,0,1894,1893,1896,1895,11,1578,1301,1639,1652,0,1833,1834,1921,1920,11,1331,1578,1652,1659,0,1564,1833,1920,1930,11,1644,1643,1897,1651,0,1907,1906,2189,2190,10,1801,1829,1830,0,2170,2109,2110,11,1493,1580,1608,1607,0,1731,1837,1867,1866,10,1898,1899,1900,0,2191,2192,2193,11,1901,1628,1631,1902,0,2194,1891,1894,2195,11,1903,1636,1628,1901,0,2196,1899,1891,2194,11,1904,1638,1636,1905,0,2197,1901,1899,2198,11,1632,1900,1902,1631,0,1895,2193,2195,1894,11,1900,1632,1635,1898,0,2193,1895,1898,2191,11,1905,1636,1903,1906,0,2198,1899,2196,2199,11,1643,1898,1635,1897,0,1906,2191,1898,2189,11,1640,1907,1908,1641,0,1903,2200,2201,1904,11,1907,1640,1300,1593,0,2200,1903,1524,1851,11,1905,1906,1909,1904,0,2198,2199,2202,2197,11,1901,1910,1911,1903,0,2194,2203,2204,2196,11,1912,1906,1903,1911,0,2205,2199,2196,2204,11,1910,1901,1902,1913,0,2203,2194,2195,2206,11,1900,1899,1913,1902,0,2193,2192,2206,2195,11,1912,1914,1909,1906,0,2205,2207,2202,2199,11,1915,1908,1907,1916,0,2208,2201,2200,2209,11,1914,1602,1601,1909,0,2207,1861,1860,2202,11,1904,1603,1295,1638,0,2197,1862,1519,1901,11,1601,1603,1904,1909,0,1860,1862,2197,2202,11,1916,1907,1593,1604,0,2209,2200,1851,1863,11,1641,1908,1898,1643,0,1904,2201,2191,1906,11,1666,1682,1701,1690,0,1937,1953,1972,1961,11,1691,1695,1917,1692,0,1962,1966,2210,1963,11,1917,1918,1686,1692,0,2210,2211,1957,1963,11,1683,1686,1918,1687,0,1954,1957,2211,1958,11,1687,1918,1917,1695,0,1958,2211,2210,1966,10,1662,1670,1673,0,1933,1941,1944,11,1651,1897,1635,1634,0,2190,2189,1898,1897,10,1683,1650,1684,0,1954,1918,1955,10,1683,1661,1650,0,1954,1932,1918,10,1828,1826,1825,0,2108,2104,2103,10,1691,1700,1779,0,1962,1971,2054,10,1779,1693,1691,0,2054,1964,1962,10,1684,1649,1685,0,1955,1917,1956,10,1650,1649,1684,0,1918,1917,1955,11,1895,1886,1883,1880,0,2187,2178,2175,2172,11,1682,1680,1729,1710,0,1953,1951,2003,1984,11,1813,1783,1782,1811,0,2090,2059,2058,2088,11,1759,1702,1811,1782,0,2034,1973,2088,2058,10,1637,1636,1638,0,1900,1899,1901,11,1829,1801,1800,1831,0,2111,2077,2076,2112,11,1831,1800,1799,1798,0,2112,2076,2075,2074,11,1824,1823,1742,1829,0,2102,2101,2016,2109,11,1714,1681,1852,1378,0,1988,1952,2133,1613,10,1378,1852,1559,0,1613,2133,1812,11,1400,1878,1719,1401,0,1635,2169,1993,1636,10,1401,1383,1382,0,1636,1618,1617,11,1893,1890,1889,1891,0,2185,2182,2181,2183,10,1891,1894,1892,0,2183,2186,2184,11,1879,1896,1895,1880,0,2171,2188,2187,2172,10,1882,1881,1880,0,2174,2173,2172,11,1885,1884,1883,1886,0,2177,2176,2175,2178,10,1888,1887,1886,0,2180,2179,2178,10,1566,1571,1567,0,1819,1824,1820,11,1570,1573,1572,1567,0,1823,1826,1825,1820,10,1575,1574,1577,0,1828,1827,1830,11,1562,1575,1576,1563,0,1815,1828,1829,1816,10,1560,1565,1561,0,1813,1818,1814,11,1564,1569,1568,1561,0,1817,1822,1821,1814,10,1674,1708,1675,0,1945,1982,1946,11,1506,1337,1370,1394,0,1745,1570,1605,1629,10,1498,1471,1515,0,1736,1707,1756,11,1798,1795,1794,1820,0,2074,2071,2070,2098,11,1908,1915,1899,1898,0,2201,2208,2192,2191,10,1584,1590,1581,0,1841,1848,1838,11,141,0,1282,1434,0,1790,1506,1505,1670,10,635,1626,1622,0,1888,1887,1883,10,125,20,124,0,135,21,133,11,20,22,143,123,0,21,23,2212,134,11,771,755,650,652,0,892,875,761,763,10,650,754,753,0,761,874,873,10,1404,1388,1405,0,1639,1623,1640,11,1748,1737,1725,1815,0,2149,2011,1999,2093,11,1443,1389,1490,1489,0,1679,1624,1728,1727,10,1774,1728,1727,0,2049,2002,2001,11,7,10,13,12,0,7,10,13,2213,11,12,13,16,4,0,2213,13,16,2214,10,5,4,16,0,156,2214,16,10,639,1707,643,0,1979,1981,2215,11,1707,1706,636,643,0,1981,1978,2216,2215,11,1706,1705,637,636,0,1978,1977,2056,2216,10,0,2,1278,0,1506,1601,1501,10,633,635,1622,0,1976,1888,1883,10,2001,2000,1934,0,2217,2218,2219,11,1919,1920,1921,1922,0,2220,2221,2222,2223,11,1923,1924,1925,1926,0,2224,2225,2226,2227,11,1927,1928,1929,1930,0,2228,2229,2230,2231,11,1931,1932,1933,1934,0,2232,2233,2234,2219,11,1935,1936,1937,1938,0,2235,2236,2237,2238,11,1939,1940,1941,1942,0,2239,2240,2241,2242,11,1943,1944,1939,1942,0,2243,2244,2239,2242,11,1945,1946,1947,1948,0,2245,2246,2247,2248,11,1949,1945,1948,1950,0,2249,2250,2251,2252,11,1951,1952,1953,1954,0,2253,2254,2255,2256,11,1955,1956,1957,1958,0,2257,2258,2259,2260,11,1959,1960,1954,1953,0,2261,2262,2256,2255,11,1961,1962,1963,1964,0,2263,2264,2265,2266,11,1965,1966,1967,1968,0,2267,2268,2269,2270,11,1969,1970,1971,1972,0,2271,2272,2273,2274,11,1952,1973,1974,1953,0,2254,2275,2276,2255,11,1959,1953,1974,1975,0,2261,2255,2276,2277,11,1976,1977,1978,1979,0,2278,2279,2280,2281,11,1941,1940,1921,1920,0,2241,2240,2222,2221,11,1980,1981,1982,1983,0,2282,2283,2284,2285,11,1950,1948,1984,1985,0,2252,2251,2286,2287,11,1986,1987,1988,1989,0,2288,2289,2290,2291,11,1946,1990,1991,1992,0,2292,2293,2294,2295,11,1989,1988,1945,1949,0,2291,2290,2296,2297,11,1959,1993,1994,1960,0,2298,2299,2300,2301,11,1993,1959,1975,1995,0,2299,2298,2302,2303,11,1996,1997,1969,1972,0,2304,2305,2306,2307,11,1998,1999,2000,2001,0,2308,2309,2218,2217,11,1928,2002,1999,2003,0,2229,2310,2309,2311,11,1952,1939,1944,1973,0,2254,2239,2244,2275,11,1952,1951,1940,1939,0,2254,2253,2240,2239,11,1985,1921,1940,1951,0,2287,2222,2240,2253,11,2004,2005,2006,2007,0,2312,2313,2314,2315,11,2008,2009,2010,1947,0,2316,2317,2318,2247,11,2011,2012,1978,1977,0,2319,2320,2280,2279,11,2013,2014,2015,2016,0,2321,2322,2323,2324,11,2017,1919,1922,2018,0,2325,2220,2223,2326,11,1998,2001,2019,2020,0,2308,2217,2327,2328,11,1934,1933,2019,2001,0,2219,2234,2327,2217,11,1927,2000,2002,1928,0,2228,2218,2310,2229,11,1977,2014,2021,2011,0,2279,2322,2329,2319,11,1955,2014,1977,1976,0,2257,2322,2279,2278,11,1956,1955,1976,2022,0,2258,2257,2278,2330,11,1926,1932,1931,1923,0,2227,2233,2232,2224,11,2022,1976,1979,2023,0,2330,2278,2281,2331,11,2010,2009,2016,2015,0,2318,2317,2324,2323,11,1981,2010,2015,1958,0,2283,2318,2323,2260,11,1982,1981,1958,1957,0,2284,2283,2260,2259,11,1938,1925,1924,1935,0,2238,2226,2225,2235,11,1943,1930,1929,1944,0,2243,2231,2230,2244,11,1944,1929,2024,1973,0,2244,2230,2332,2275,11,1975,1974,1970,1969,0,2277,2276,2272,2271,11,1995,1975,1969,1997,0,2303,2302,2306,2305,11,1986,1993,1995,1997,0,2288,2299,2303,2305,11,1994,1993,1986,1989,0,2300,2299,2288,2291,11,1949,1960,1994,1989,0,2297,2301,2300,2291,11,1960,1949,1950,1954,0,2262,2249,2252,2256,11,1985,1951,1954,1950,0,2287,2253,2256,2252,11,1979,1978,2025,2026,0,2281,2280,2333,2334,11,2023,1979,2026,2020,0,2331,2281,2334,2328,11,2026,1962,2003,2020,0,2334,2264,2311,2328,11,1961,1928,2003,1962,0,2263,2229,2311,2264,11,2024,1929,1928,1961,0,2332,2230,2229,2263,11,1973,2024,2027,1974,0,2275,2332,2335,2276,10,1999,2002,2000,0,2309,2310,2218,11,2020,2003,1999,1998,0,2328,2311,2309,2308,11,1985,1984,2028,2029,0,2287,2286,2336,2337,11,2029,1922,1921,1985,0,2337,2223,2222,2287,11,2029,2028,2018,1922,0,2337,2336,2326,2223,11,1936,2017,2018,1937,0,2236,2338,2339,2237,11,1978,1967,1966,2025,0,2280,2269,2268,2333,11,1972,1971,1966,1965,0,2274,2273,2268,2267,11,1996,1972,1965,2030,0,2304,2307,2340,2341,11,1970,1964,1963,1971,0,2272,2266,2265,2273,11,2026,2025,1963,1962,0,2334,2333,2265,2264,11,1968,2031,2030,1965,0,2342,2343,2341,2340,11,2004,2032,2033,2034,0,2312,2344,2345,2346,11,2025,1966,1971,1963,0,2333,2268,2273,2265,11,2035,2036,2031,1968,0,2347,2348,2343,2342,11,1968,1967,2037,2035,0,2270,2269,2349,2350,11,2023,1933,1932,2022,0,2331,2234,2233,2330,11,1932,1926,1956,2022,0,2233,2227,2258,2330,11,1957,1956,1926,1925,0,2259,2258,2227,2226,11,1982,1957,1925,1938,0,2284,2259,2226,2238,11,1982,1938,1937,1983,0,2284,2238,2237,2285,11,2032,2031,2036,2033,0,2344,2343,2348,2345,11,2031,2032,2038,2030,0,2343,2344,2351,2341,11,1996,2030,2038,1987,0,2304,2341,2351,2289,11,1997,1996,1987,1986,0,2305,2304,2289,2288,11,2038,2032,2004,2007,0,2351,2344,2312,2315,11,2012,2037,1967,1978,0,2320,2349,2269,2280,11,2027,2024,1961,1964,0,2335,2332,2263,2266,11,1970,1974,2027,1964,0,2272,2276,2335,2266,11,1947,2010,1981,1980,0,2247,2318,2283,2282,11,1948,1947,1980,1984,0,2248,2247,2282,2352,11,1937,2018,2028,1983,0,2237,2339,2353,2285,11,2008,1947,1946,1992,0,2316,2247,2246,2354,11,1987,2038,2007,1988,0,2289,2351,2315,2290,11,1946,1945,1988,1990,0,2292,2296,2290,2293,11,2006,2005,1991,1990,0,2314,2313,2294,2293,11,1984,1980,1983,2028,0,2352,2282,2285,2353,11,1958,2015,2014,1955,0,2260,2323,2322,2257,11,2007,2006,1990,1988,0,2315,2314,2293,2290,11,1933,2023,2020,2019,0,2234,2331,2328,2327,11,2039,2040,2013,2016,0,2355,2356,2321,2324,11,2036,2035,2041,2042,0,2348,2347,2357,2358,11,2043,2041,2035,2037,0,2359,2360,2350,2349,11,2044,2045,2012,2011,0,2361,2362,2320,2319,11,1992,1991,2046,2047,0,2295,2294,2363,2364,11,2034,2048,2049,2004,0,2346,2365,2366,2312,11,2005,2004,2049,2050,0,2313,2312,2366,2367,11,2033,2036,2042,2051,0,2345,2348,2358,2368,11,2034,2033,2051,2048,0,2346,2345,2368,2365,11,2009,2008,2052,2053,0,2317,2316,2369,2370,11,2011,2021,2054,2044,0,2319,2329,2371,2361,11,2009,2053,2039,2016,0,2317,2370,2355,2324,11,2012,2045,2043,2037,0,2320,2362,2359,2349,11,2052,2008,1992,2047,0,2369,2316,2354,2372,11,1991,2005,2050,2046,0,2294,2313,2367,2363,10,2055,2056,2057,0,2373,2374,2375,11,2058,2059,2056,2055,0,2376,2377,2374,2373,10,2060,2061,2062,0,2378,2379,2380,11,2059,2058,2063,2064,0,2377,2376,2381,2382,11,2065,2061,2060,2066,0,2383,2379,2378,2384,11,2067,2065,2066,2068,0,2385,2383,2384,2386,11,2069,2070,2067,2068,0,2387,2388,2385,2386,11,2064,2063,2070,2069,0,2382,2381,2388,2387,11,2040,2054,2021,2013,0,2356,2371,2329,2321,10,2021,2014,2013,0,2329,2322,2321,11,2057,2056,2071,2072,0,2375,2374,2389,2390,11,2057,2072,2073,2055,0,2375,2390,2391,2373,11,2074,2071,2056,2059,0,2392,2389,2374,2377,11,2075,2058,2055,2073,0,2393,2394,2395,2396,11,2076,2077,2062,2061,0,2397,2398,2399,2400,11,2078,2060,2062,2077,0,2401,2378,2380,2402,11,2074,2059,2064,2079,0,2392,2377,2382,2403,11,2080,2063,2058,2075,0,2404,2405,2394,2393,11,2081,2076,2061,2065,0,2406,2397,2400,2407,11,2082,2066,2060,2078,0,2408,2384,2378,2401,11,2083,2081,2065,2067,0,2409,2406,2407,2410,11,2084,2068,2066,2082,0,2411,2386,2384,2408,11,2085,2083,2067,2070,0,2412,2409,2410,2413,11,2069,2068,2084,2086,0,2387,2386,2411,2414,11,2070,2063,2080,2085,0,2413,2405,2404,2412,11,2079,2064,2069,2086,0,2403,2382,2387,2414,11,2072,2087,2088,2073,0,2390,2415,2416,2391,11,2089,2087,2072,2071,0,2417,2415,2390,2389,11,2090,2089,2071,2074,0,2418,2417,2389,2392,11,2091,2090,2074,2079,0,2419,2418,2392,2403,11,2086,2092,2091,2079,0,2414,2420,2419,2403,11,2086,2084,2093,2092,0,2414,2411,2421,2420,11,2093,2084,2082,2094,0,2421,2411,2408,2422,11,2094,2082,2078,2095,0,2422,2408,2401,2423,11,2077,2096,2095,2078,0,2402,2424,2423,2401,11,2097,2096,2077,2076,0,2425,2426,2398,2397,11,2076,2081,2098,2097,0,2397,2406,2427,2425,11,2099,2098,2081,2083,0,2428,2427,2406,2409,11,2100,2099,2083,2085,0,2429,2428,2409,2412,11,2100,2085,2080,2101,0,2429,2412,2404,2430,11,2101,2080,2075,2102,0,2430,2404,2393,2431,11,2102,2075,2073,2088,0,2431,2393,2396,2432,11,2053,2052,2087,2089,0,2370,2369,2415,2417,11,2087,2052,2047,2088,0,2415,2369,2372,2416,11,2047,2046,2102,2088,0,2364,2363,2431,2432,11,2050,2101,2102,2046,0,2367,2430,2431,2363,11,2050,2049,2100,2101,0,2367,2366,2429,2430,11,2049,2048,2099,2100,0,2366,2365,2428,2429,11,2048,2051,2098,2099,0,2365,2368,2427,2428,11,2097,2098,2051,2042,0,2425,2427,2368,2358,11,2042,2041,2096,2097,0,2358,2357,2426,2425,11,2096,2041,2043,2095,0,2424,2360,2359,2423,11,2045,2094,2095,2043,0,2362,2422,2423,2359,11,2044,2093,2094,2045,0,2361,2421,2422,2362,11,2054,2092,2093,2044,0,2371,2420,2421,2361,11,2092,2054,2040,2091,0,2420,2371,2356,2419,11,2040,2039,2090,2091,0,2356,2355,2418,2419,11,2089,2090,2039,2053,0,2417,2418,2355,2370,11,2103,2104,2105,2106,0,2433,2434,2435,2436,11,2107,2108,2109,2110,0,2437,2438,2439,2440,11,2111,2112,2113,2114,0,2441,2442,2443,2444,11,2115,2116,2117,2118,0,2445,2446,2447,2448,11,2119,2120,2121,2122,0,2449,2450,2451,2452,11,2123,2124,2125,2126,0,2453,2454,2455,2456,11,2125,2127,2128,2126,0,2455,2457,2458,2456,11,2129,2130,2131,2132,0,2459,2460,2461,2462,11,2133,2134,2130,2129,0,2463,2464,2465,2466,11,2135,2136,2137,2138,0,2467,2468,2469,2470,11,2139,2140,2141,2142,0,2471,2472,2473,2474,11,2143,2137,2136,2144,0,2475,2469,2468,2476,11,2145,2146,2147,2148,0,2477,2478,2479,2480,11,2149,2150,2151,2152,0,2481,2482,2483,2484,11,2153,2154,2155,2156,0,2485,2486,2487,2488,11,2138,2137,2157,2158,0,2470,2469,2489,2490,11,2143,2159,2157,2137,0,2475,2491,2489,2469,11,2160,2161,2162,2163,0,2492,2493,2494,2495,11,2123,2106,2105,2124,0,2453,2436,2435,2454,11,2164,2165,2166,2167,0,2496,2497,2498,2499,11,2134,2168,2169,2130,0,2464,2500,2501,2465,11,2170,2171,2172,2173,0,2502,2503,2504,2505,11,2132,2174,2175,2176,0,2506,2507,2508,2509,11,2171,2133,2129,2172,0,2503,2510,2511,2504,11,2143,2144,2177,2178,0,2512,2513,2514,2515,11,2178,2179,2159,2143,0,2515,2516,2517,2512,11,2153,2180,2181,2154,0,2518,2519,2520,2521,11,2182,2183,2184,2185,0,2522,2523,2524,2525,11,2114,2186,2185,2187,0,2444,2526,2525,2527,11,2127,2125,2138,2158,0,2457,2455,2470,2490,11,2138,2125,2124,2135,0,2470,2455,2454,2467,11,2168,2135,2124,2105,0,2500,2467,2454,2435,11,2188,2189,2190,2191,0,2528,2529,2530,2531,11,2192,2131,2193,2194,0,2532,2461,2533,2534,11,2195,2161,2160,2196,0,2535,2493,2492,2536,11,2197,2198,2199,2200,0,2537,2538,2539,2540,11,2201,2202,2104,2103,0,2541,2542,2434,2433,11,2182,2203,2204,2183,0,2522,2543,2544,2523,11,2116,2183,2204,2117,0,2446,2523,2544,2447,11,2111,2114,2187,2184,0,2441,2444,2527,2524,11,2161,2195,2205,2200,0,2493,2535,2545,2540,11,2161,2200,2139,2162,0,2493,2540,2471,2494,11,2162,2139,2142,2206,0,2494,2471,2474,2546,11,2108,2107,2115,2118,0,2438,2437,2445,2448,11,2206,2207,2163,2162,0,2546,2547,2495,2494,11,2193,2199,2198,2194,0,2533,2539,2538,2534,11,2167,2140,2199,2193,0,2499,2472,2539,2533,11,2166,2141,2140,2167,0,2498,2473,2472,2499,11,2120,2119,2110,2109,0,2450,2449,2440,2439,11,2128,2127,2113,2112,0,2458,2457,2443,2442,11,2208,2113,2127,2158,0,2548,2443,2457,2490,11,2159,2153,2156,2157,0,2491,2485,2488,2489,11,2179,2180,2153,2159,0,2516,2519,2518,2517,11,2170,2180,2179,2178,0,2502,2519,2516,2515,11,2177,2171,2170,2178,0,2514,2503,2502,2515,11,2133,2171,2177,2144,0,2510,2503,2514,2513,11,2144,2136,2134,2133,0,2476,2468,2464,2463,11,2168,2134,2136,2135,0,2500,2464,2468,2467,11,2163,2209,2210,2160,0,2495,2549,2550,2492,11,2207,2203,2209,2163,0,2547,2543,2549,2495,11,2209,2203,2186,2148,0,2549,2543,2526,2480,11,2145,2148,2186,2114,0,2477,2480,2526,2444,11,2208,2145,2114,2113,0,2548,2477,2444,2443,11,2158,2157,2211,2208,0,2490,2489,2551,2548,10,2185,2184,2187,0,2525,2524,2527,11,2203,2182,2185,2186,0,2543,2522,2525,2526,11,2168,2212,2213,2169,0,2500,2552,2553,2501,11,2105,2104,2212,2168,0,2435,2434,2552,2500,11,2212,2104,2202,2213,0,2552,2434,2542,2553,11,2122,2121,2202,2201,0,2452,2451,2554,2555,11,2160,2210,2152,2151,0,2492,2550,2484,2483,11,2154,2149,2152,2155,0,2486,2481,2484,2487,11,2181,2214,2149,2154,0,2520,2556,2557,2521,11,2156,2155,2147,2146,0,2488,2487,2479,2478,11,2209,2148,2147,2210,0,2549,2480,2479,2550,11,2150,2149,2214,2215,0,2558,2557,2556,2559,11,2216,2217,2190,2218,0,2560,2561,2530,2562,11,2210,2147,2155,2152,0,2550,2479,2487,2484,11,2219,2150,2215,2220,0,2563,2558,2559,2564,11,2150,2219,2221,2151,0,2482,2565,2566,2483,11,2207,2206,2118,2117,0,2547,2546,2448,2447,11,2142,2108,2118,2206,0,2474,2438,2448,2546,11,2141,2109,2108,2142,0,2473,2439,2438,2474,11,2166,2120,2109,2141,0,2498,2450,2439,2473,11,2166,2165,2121,2120,0,2498,2497,2451,2450,11,2220,2215,2217,2216,0,2564,2559,2561,2560,11,2222,2217,2215,2214,0,2567,2561,2559,2556,11,2181,2173,2222,2214,0,2520,2505,2567,2556,11,2180,2170,2173,2181,0,2519,2502,2505,2520,11,2222,2191,2190,2217,0,2567,2531,2530,2561,11,2196,2160,2151,2221,0,2536,2492,2483,2566,11,2211,2146,2145,2208,0,2551,2478,2477,2548,11,2156,2146,2211,2157,0,2488,2478,2551,2489,11,2131,2164,2167,2193,0,2461,2496,2499,2533,11,2130,2169,2164,2131,0,2460,2568,2496,2461,11,2121,2165,2213,2202,0,2451,2497,2569,2554,11,2192,2174,2132,2131,0,2532,2570,2462,2461,11,2173,2172,2191,2222,0,2505,2504,2531,2567,11,2132,2176,2172,2129,0,2506,2509,2504,2511,11,2188,2176,2175,2189,0,2528,2509,2508,2529,11,2169,2213,2165,2164,0,2568,2569,2497,2496,11,2200,2199,2140,2139,0,2540,2539,2472,2471,11,2191,2172,2176,2188,0,2531,2504,2509,2528,11,2117,2204,2203,2207,0,2447,2544,2543,2547,11,2223,2198,2197,2224,0,2571,2538,2537,2572,11,2220,2225,2226,2219,0,2564,2573,2574,2563,11,2227,2221,2219,2226,0,2575,2566,2565,2576,11,2196,2228,2229,2195,0,2536,2577,2578,2535,11,2174,2230,2231,2175,0,2507,2579,2580,2508,11,2218,2190,2232,2233,0,2562,2530,2581,2582,11,2189,2234,2232,2190,0,2529,2583,2581,2530,11,2216,2235,2225,2220,0,2560,2584,2573,2564,11,2218,2233,2235,2216,0,2562,2582,2584,2560,11,2194,2236,2237,2192,0,2534,2585,2586,2532,11,2195,2229,2238,2205,0,2535,2578,2587,2545,11,2194,2198,2223,2236,0,2534,2538,2571,2585,11,2196,2221,2227,2228,0,2536,2566,2575,2577,11,2237,2230,2174,2192,0,2586,2588,2570,2532,11,2175,2231,2234,2189,0,2508,2580,2583,2529,10,2239,2240,2241,0,2589,2590,2591,11,2242,2239,2241,2243,0,2592,2589,2591,2593,10,2244,2245,2246,0,2594,2595,2596,11,2243,2247,2248,2242,0,2593,2597,2598,2592,11,2249,2250,2244,2246,0,2599,2600,2594,2596,11,2251,2252,2250,2249,0,2601,2602,2600,2599,11,2253,2252,2251,2254,0,2603,2602,2601,2604,11,2247,2253,2254,2248,0,2597,2603,2604,2598,11,2224,2197,2205,2238,0,2572,2537,2545,2587,10,2205,2197,2200,0,2545,2537,2540,11,2255,2241,2240,2256,0,2605,2591,2590,2606,11,2240,2239,2257,2256,0,2590,2589,2607,2606,11,2258,2243,2241,2255,0,2608,2593,2591,2605,11,2259,2257,2239,2242,0,2609,2610,2611,2612,11,2260,2246,2245,2261,0,2613,2614,2615,2616,11,2245,2244,2262,2261,0,2595,2594,2617,2618,11,2247,2243,2258,2263,0,2597,2593,2608,2619,11,2264,2259,2242,2248,0,2620,2609,2612,2621,11,2265,2249,2246,2260,0,2622,2623,2614,2613,11,2266,2262,2244,2250,0,2624,2617,2594,2600,11,2267,2251,2249,2265,0,2625,2626,2623,2622,11,2268,2266,2250,2252,0,2627,2624,2600,2602,11,2269,2254,2251,2267,0,2628,2629,2626,2625,11,2268,2252,2253,2270,0,2627,2602,2603,2630,11,2264,2248,2254,2269,0,2620,2621,2629,2628,11,2263,2270,2253,2247,0,2619,2630,2603,2597,11,2271,2272,2256,2257,0,2631,2632,2606,2607,11,2273,2255,2256,2272,0,2633,2605,2606,2632,11,2274,2258,2255,2273,0,2634,2608,2605,2633,11,2275,2263,2258,2274,0,2635,2619,2608,2634,11,2270,2263,2275,2276,0,2630,2619,2635,2636,11,2277,2268,2270,2276,0,2637,2627,2630,2636,11,2277,2278,2266,2268,0,2637,2638,2624,2627,11,2278,2279,2262,2266,0,2638,2639,2617,2624,11,2279,2280,2261,2262,0,2639,2640,2618,2617,11,2281,2260,2261,2280,0,2641,2613,2616,2642,11,2281,2282,2265,2260,0,2641,2643,2622,2613,11,2283,2267,2265,2282,0,2644,2625,2622,2643,11,2284,2269,2267,2283,0,2645,2628,2625,2644,11,2264,2269,2284,2285,0,2620,2628,2645,2646,11,2259,2264,2285,2286,0,2609,2620,2646,2647,11,2257,2259,2286,2271,0,2610,2609,2647,2648,10,2183,2116,2184,0,2523,2446,2524,11,2236,2273,2272,2237,0,2585,2633,2632,2586,11,2230,2237,2272,2271,0,2588,2586,2632,2631,11,2230,2271,2286,2231,0,2579,2648,2647,2580,11,2286,2285,2234,2231,0,2647,2646,2583,2580,11,2234,2285,2284,2232,0,2583,2646,2645,2581,11,2232,2284,2283,2233,0,2581,2645,2644,2582,11,2233,2283,2282,2235,0,2582,2644,2643,2584,11,2281,2225,2235,2282,0,2641,2573,2584,2643,11,2225,2281,2280,2226,0,2573,2641,2642,2574,11,2227,2226,2280,2279,0,2575,2576,2640,2639,11,2228,2227,2279,2278,0,2577,2575,2639,2638,11,2229,2228,2278,2277,0,2578,2577,2638,2637,11,2238,2229,2277,2276,0,2587,2578,2637,2636,11,2224,2238,2276,2275,0,2572,2587,2636,2635,11,2224,2275,2274,2223,0,2572,2635,2634,2571,11,2223,2274,2273,2236,0,2571,2634,2633,2585,11,2287,2288,2289,2290,0,2649,2650,2651,2652,11,2291,2292,2293,2294,0,2653,2654,2655,2656,11,2295,2296,2297,2298,0,2657,2658,2659,2660,11,2299,2300,2301,2302,0,2661,2662,2663,2664,11,2296,2303,2304,2297,0,2658,2665,2666,2659,11,2303,2300,2305,2306,0,2665,2662,2667,2668,11,2290,2291,2294,2287,0,2652,2653,2656,2649,11,2307,2308,2309,2310,0,2669,2670,2671,2672,11,2292,2311,2312,2293,0,2654,2673,2674,2655,11,2313,2288,2287,2314,0,2675,2650,2649,2676,11,2294,2293,2315,2316,0,2656,2655,2677,2678,11,2307,2317,2318,2319,0,2669,2679,2680,2681,11,2316,2314,2287,2294,0,2678,2676,2649,2656,11,2315,2293,2312,2320,0,2677,2655,2674,2682,11,2321,2316,2315,2320,0,2683,2678,2677,2682,11,2310,2322,2323,2307,0,2672,2684,2685,2669,11,2324,2325,2326,2327,0,2686,2687,2688,2689,11,2328,2329,2322,2310,0,2690,2691,2684,2672,11,2330,2329,2328,2331,0,2692,2691,2690,2693,11,2332,2333,2330,2334,0,2694,2695,2692,2696,11,2335,2336,2333,2337,0,2697,2698,2695,2699,11,1507,2794,2322,2329,0,2700,2701,2684,2691,11,2300,2303,1272,1270,0,2662,2665,2702,2703,11,1268,1275,2339,2340,0,2704,2705,2706,2707,11,2341,1263,1268,2340,0,2708,2709,2704,2707,11,2333,2342,2329,2330,0,2695,2710,2691,2692,10,2795,1537,2796,0,2711,2712,2713,11,2343,2328,2325,2324,0,2714,2690,2687,2686,11,2327,2344,2345,2324,0,2689,2715,2716,2686,11,2326,2310,2346,2327,0,2688,2672,2717,2689,11,2325,2328,2310,2326,0,2687,2690,2672,2688,11,2295,2298,2311,2339,0,2657,2660,2673,2706,11,2292,2340,2339,2311,0,2654,2707,2706,2673,11,2291,2341,2340,2292,0,2653,2708,2707,2654,11,2290,2347,2341,2291,0,2652,2718,2708,2653,11,2290,2289,2348,2347,0,2652,2651,2719,2718,11,2298,2297,2349,2350,0,2660,2659,2720,2721,11,2351,2352,2353,2354,0,2722,2723,2724,2725,11,2355,2356,2357,2358,0,2726,2727,2728,2729,11,2358,2357,2359,2360,0,2729,2728,2730,2731,11,2359,2361,2362,2360,0,2730,2732,2733,2731,11,2363,2364,2365,2366,0,2734,2735,2736,2737,11,2367,2368,2369,2370,0,2738,2739,2740,2741,11,2371,2372,2373,2374,0,2742,2743,2744,2745,11,2375,2376,2377,2378,0,2746,2747,2748,2749,11,2379,2380,2381,2382,0,2750,2751,2752,2753,11,2356,2355,2383,2384,0,2727,2726,2754,2755,11,2385,2386,2387,2388,0,2756,2757,2758,2759,11,2389,2385,2388,2390,0,2760,2756,2759,2761,11,2391,2389,2390,2392,0,2762,2760,2761,2763,11,2393,2394,2391,2392,0,2764,2765,2762,2763,11,2395,2396,2397,2398,0,2766,2767,2768,2769,11,2387,2386,2399,2400,0,2758,2757,2770,2771,11,2401,2402,2403,2404,0,2772,2773,2774,2775,11,2405,2406,2407,2408,0,2776,2777,2778,2779,11,2409,2410,2411,2412,0,2780,2781,2782,2783,11,2413,2414,2415,2416,0,2784,2785,2786,2787,11,2417,2418,2413,2416,0,2788,2789,2784,2787,11,2418,2417,2419,2420,0,2789,2788,2790,2791,11,2421,2422,2423,2424,0,2792,2793,2794,2795,11,2425,2426,2427,2428,0,2796,2797,2798,2799,11,2426,2429,2430,2427,0,2797,2800,2801,2798,11,2379,2431,2432,2380,0,2750,2802,2803,2751,11,2380,2432,2433,2434,0,2751,2803,2804,2805,11,2434,2433,2435,2364,0,2805,2804,2806,2735,11,2364,2435,2436,2365,0,2735,2806,2807,2736,11,2437,2356,2384,2438,0,2808,2727,2755,2809,11,2437,2439,2357,2356,0,2808,2810,2728,2727,11,2357,2439,2440,2359,0,2728,2810,2811,2730,11,2440,2441,2361,2359,0,2811,2812,2732,2730,11,2367,2442,2443,2444,0,2738,2813,2814,2815,11,2445,2441,2440,2439,0,2816,2812,2811,2810,11,2437,2438,2445,2439,0,2808,2809,2816,2810,11,2425,2446,2447,2448,0,2796,2817,2818,2819,11,2449,2450,2420,2451,0,2820,2821,2791,2822,11,2420,2450,2452,2418,0,2791,2821,2823,2789,11,2452,2453,2413,2418,0,2823,2824,2784,2789,11,2453,2454,2414,2413,0,2824,2825,2785,2784,11,2411,2410,2455,2456,0,2782,2781,2826,2827,11,2376,2375,2406,2405,0,2747,2746,2777,2776,11,2381,2380,2434,2457,0,2752,2751,2805,2828,11,2458,2444,2443,2459,0,2829,2815,2814,2830,11,2458,2460,2461,2462,0,2829,2831,2832,2833,11,2431,2379,2374,2463,0,2802,2750,2745,2834,11,2464,2460,2465,2466,0,2835,2836,2837,2838,11,2459,2465,2460,2458,0,2830,2839,2831,2829,11,2369,2376,2405,2467,0,2740,2747,2776,2840,11,2376,2369,2368,2377,0,2747,2740,2739,2748,11,2405,2408,2468,2467,0,2776,2779,2841,2840,11,2469,2470,2400,2399,0,2842,2843,2771,2770,11,2442,2361,2441,2443,0,2813,2732,2812,2814,11,2361,2442,2471,2362,0,2732,2813,2844,2733,11,2410,2409,2472,2455,0,2781,2780,2845,2826,11,2438,2384,2365,2436,0,2809,2755,2736,2807,11,2384,2383,2366,2365,0,2755,2754,2737,2736,11,2449,2451,2448,2447,0,2820,2822,2819,2818,11,2422,2473,2474,2423,0,2793,2846,2847,2794,11,2475,2476,2477,2478,0,2848,2849,2850,2851,11,2476,2475,2479,2480,0,2849,2848,2852,2853,11,2479,2481,2482,2480,0,2852,2854,2855,2853,11,2481,2412,2483,2482,0,2854,2783,2856,2855,11,2411,2456,2467,2468,0,2782,2827,2840,2841,11,2362,2471,2455,2454,0,2733,2844,2826,2825,11,2360,2362,2454,2453,0,2731,2733,2825,2824,11,2452,2358,2360,2453,0,2823,2729,2731,2824,11,2450,2355,2358,2452,0,2821,2726,2729,2823,11,2412,2481,2415,2409,0,2783,2854,2786,2780,11,2416,2415,2481,2479,0,2787,2786,2854,2852,11,2475,2417,2416,2479,0,2848,2788,2787,2852,11,2417,2475,2478,2419,0,2788,2848,2851,2790,11,2422,2448,2451,2473,0,2793,2819,2822,2846,11,2421,2425,2448,2422,0,2792,2796,2819,2793,11,2370,2471,2442,2367,0,2741,2844,2813,2738,11,2449,2383,2355,2450,0,2820,2754,2726,2821,11,2383,2449,2447,2366,0,2754,2820,2818,2737,11,2446,2363,2366,2447,0,2817,2734,2737,2818,11,2480,2385,2389,2476,0,2853,2756,2760,2849,11,2476,2391,2474,2477,0,2849,2762,2847,2850,11,2394,2423,2474,2391,0,2765,2794,2847,2762,11,2394,2484,2424,2423,0,2765,2857,2795,2794,11,2485,2421,2424,2396,0,2858,2792,2795,2767,11,2486,2487,2488,2485,0,2859,2860,2861,2858,11,2489,2490,2491,2492,0,2862,2863,2864,2865,11,2491,2493,2494,2492,0,2864,2866,2867,2865,11,2495,2469,2399,2483,0,2868,2842,2770,2856,11,2399,2386,2482,2483,0,2770,2757,2855,2856,11,2482,2386,2385,2480,0,2855,2757,2756,2853,11,2496,2491,2490,2497,0,2869,2864,2863,2870,11,2498,2430,2429,2499,0,2871,2801,2800,2872,11,2500,2501,2404,2403,0,2873,2874,2775,2774,11,2382,2381,2500,2502,0,2753,2752,2873,2875,11,2395,2398,2497,2490,0,2766,2769,2870,2863,11,2503,2504,2505,2506,0,2876,2877,2878,2879,11,2503,2507,2508,2504,0,2876,2880,2881,2877,11,2509,2506,2510,2511,0,2882,2879,2883,2884,11,2512,2128,2112,2513,0,2885,2886,2887,2888,11,2514,2515,2516,2517,0,2889,2890,2891,2892,11,2518,2123,2126,2519,0,2893,2894,2895,2896,11,2201,2103,2520,2521,0,2897,2898,2899,2900,11,2522,2523,2524,2513,0,2901,2902,2903,2888,11,2103,2106,2518,2520,0,2898,2904,2893,2899,11,2525,2503,2506,2509,0,2905,2876,2879,2882,11,2507,2526,2470,2508,0,2906,2907,2843,2908,11,2527,2400,2470,2526,0,2909,2771,2843,2907,11,2400,2527,2528,2387,0,2771,2909,2910,2758,11,2528,2529,2388,2387,0,2910,2911,2759,2758,11,2529,2530,2390,2388,0,2911,2912,2761,2759,11,2530,2531,2392,2390,0,2912,2913,2763,2761,11,2392,2531,2532,2393,0,2763,2913,2914,2764,11,2520,2518,2533,2534,0,2899,2893,2915,2916,11,2519,2535,2533,2518,0,2896,2917,2915,2893,11,2536,2535,2519,2512,0,2918,2917,2896,2885,11,2517,2516,2532,2537,0,2892,2891,2914,2919,11,2514,2511,2510,2515,0,2889,2884,2883,2890,11,2454,2455,2472,2414,0,2825,2826,2845,2785,11,2414,2472,2409,2415,0,2785,2845,2780,2786,11,2538,2539,2540,2541,0,2920,2921,2922,2923,11,2542,2543,2544,2545,0,2924,2925,2926,2927,11,2546,2547,2548,2549,0,2928,2929,2930,2931,11,2550,2551,2552,2553,0,2932,2933,2934,2935,11,2554,2555,2556,2557,0,2936,2937,2938,2939,11,2558,2559,2560,2561,0,2940,2941,2942,2943,11,2349,2562,2563,2564,0,2720,2944,2945,2946,11,2565,2566,2567,2568,0,2947,2948,2949,2950,11,2569,2570,2571,2572,0,2951,2952,2953,2954,11,2573,2574,2575,2576,0,2955,2956,2957,2958,11,2577,2578,2579,2580,0,2959,2960,2961,2962,11,2581,2582,2583,2584,0,2963,2964,2965,2966,11,2585,2586,2587,2588,0,2967,2968,2969,2970,11,2589,2590,2591,2592,0,2971,2972,2973,2974,11,2593,2594,2595,2596,0,2975,2976,2977,2978,11,2597,2598,2599,2600,0,2979,2980,2981,2982,11,2601,2602,2603,2604,0,2983,2984,2985,2986,11,2605,2606,2607,2608,0,2987,2988,2989,2990,11,2609,2590,2610,2611,0,2991,2972,2992,2993,11,2612,2610,2590,2613,0,2994,2992,2972,2995,11,2614,2615,2616,2617,0,2996,2997,2998,2999,11,2611,2618,2619,2609,0,2993,3000,3001,2991,11,2620,2621,2622,2623,0,3002,3003,3004,3005,11,2624,2625,2621,2626,0,3006,3007,3003,3008,11,2627,2625,2628,2629,0,3009,3007,3010,3011,11,2630,2627,2631,2632,0,3012,3009,3013,3014,11,2633,2634,2635,2636,0,3015,3016,3017,3018,11,2636,2635,2637,2638,0,3018,3017,3019,3020,11,2618,2611,2639,2640,0,3000,2993,3021,3022,11,2641,2610,2642,2643,0,3023,2992,3024,3025,11,2644,2645,2643,2646,0,3026,3027,3025,3028,11,2647,2634,2633,2648,0,3029,3030,3031,3032,11,2649,2650,2651,2652,0,3033,3034,3035,3036,11,2564,2653,2350,2349,0,2946,3037,2721,2720,11,2651,2650,2320,2312,0,3035,3034,2682,2674,11,2297,2654,2655,2349,0,2659,3038,3039,2720,11,2656,2657,2658,2659,0,3040,3041,3042,3043,11,2660,2661,2662,2663,0,3044,3045,3046,3047,11,2664,2665,2666,2667,0,3048,3049,3050,3051,11,2668,2669,2670,2671,0,3052,3053,3054,3055,11,2672,2673,2674,2675,0,3056,3057,3058,3059,11,2676,2677,2678,2679,0,3060,3061,3062,3063,11,2680,2681,2682,2683,0,3064,3065,3066,3067,11,2684,2685,2680,2683,0,3068,3069,3064,3067,11,2686,2687,2685,2684,0,3070,3071,3069,3068,11,2687,2686,2688,2689,0,3071,3070,3072,3073,11,2690,2691,2689,2688,0,3074,3075,3073,3072,11,2692,2693,2691,2690,0,3076,3077,3075,3074,11,2694,2639,2693,2692,0,3078,3021,3077,3076,11,2695,2640,2639,2694,0,3079,3022,3021,3078,11,2636,2638,2696,2697,0,3018,3020,3080,3081,11,2698,2633,2636,2697,0,3082,3015,3018,3081,11,2648,2633,2698,2699,0,3032,3031,3083,3084,11,2681,2648,2699,2682,0,3065,3032,3084,3066,11,2682,2699,2459,2443,0,3066,3084,2830,2814,11,2699,2698,2465,2459,0,3084,3083,2839,2830,11,2465,2698,2697,2466,0,2837,3082,3081,2838,11,2466,2697,2696,2463,0,2838,3081,3080,2834,11,2618,2637,2605,2619,0,3000,3019,2987,3001,11,2637,2618,2640,2638,0,3019,3000,3022,3020,11,2695,2696,2638,2640,0,3079,3080,3020,3022,11,2435,2690,2688,2436,0,2806,3074,3072,2807,11,2433,2692,2690,2435,0,2804,3076,3074,2806,11,2432,2694,2692,2433,0,2803,3078,3076,2804,11,2431,2695,2694,2432,0,2802,3079,3078,2803,11,2695,2431,2463,2696,0,3079,2802,2834,3080,11,2564,2700,2701,2591,0,2946,3085,3086,2973,11,2702,2703,2704,2705,0,3087,3088,3089,3090,11,2706,2707,2708,2709,0,3091,3092,3093,3094,11,2710,2711,2712,2713,0,3095,3096,3097,3098,11,2714,2715,2716,2717,0,3099,3100,3101,3102,11,2718,2719,2720,2721,0,3103,3104,3105,3106,11,2722,2723,2724,2725,0,3107,3108,3109,3110,11,2726,2727,2728,2729,0,3111,3112,3113,3114,11,2730,2653,2731,2732,0,3115,3037,3116,3117,11,2653,2564,2591,2731,0,3037,2946,2973,3116,11,2652,2730,2732,2649,0,3036,3115,3117,3033,11,2683,2682,2443,2441,0,3067,3066,2814,2812,11,2445,2684,2683,2441,0,2816,3068,3067,2812,11,2438,2686,2684,2445,0,2809,3070,3068,2816,11,2686,2438,2436,2688,0,3070,2809,2807,3072,11,2506,2505,2733,2510,0,2879,2878,3118,2883,11,2734,2515,2510,2733,0,3119,2890,2883,3118,11,2516,2515,2734,2484,0,2891,2890,3119,2857,11,2374,2379,2382,2371,0,2745,2750,2753,2742,11,2371,2382,2502,2735,0,2742,2753,2875,3120,11,2364,2363,2457,2434,0,2735,2734,2828,2805,11,2736,2737,2738,2739,0,3121,3122,3123,3124,11,2498,2402,2401,2430,0,2871,2773,2772,2801,11,2498,2737,2736,2402,0,2871,3122,3121,2773,11,2456,2370,2369,2467,0,2827,2741,2740,2840,11,2471,2370,2456,2455,0,2844,2741,2827,2826,11,2412,2411,2468,2483,0,2783,2782,2841,2856,11,2495,2483,2468,2408,0,2868,2856,2841,2779,11,2407,2740,2492,2494,0,3125,3126,2865,2867,11,2737,2741,2742,2738,0,3122,3127,3128,3123,11,2652,2350,2653,2730,0,3036,2721,3037,3115,11,2350,2652,2651,2298,0,2721,3036,3035,2660,11,2312,2311,2298,2651,0,2674,2673,2660,3035,11,2853,3318,1828,2859,0,3129,3130,3131,3132,10,1537,3319,2796,0,3133,3134,3135,11,2744,2745,2746,2747,0,3136,3137,3138,3139,11,2748,2749,2750,2751,0,3140,3141,3142,3143,11,2752,2753,2754,2755,0,3144,3145,3146,3147,11,2756,2757,2758,2759,0,3148,3149,3150,3151,11,2760,2761,2762,2763,0,3152,3153,3154,3155,11,2764,2765,2766,2767,0,3156,3157,3158,3159,11,2768,2769,2770,2771,0,3160,3161,3162,3163,11,2772,2773,2774,2650,0,3164,3165,3166,3034,11,2606,2775,2776,2607,0,2988,3167,3168,2989,11,2637,2635,2606,2605,0,3019,3017,2988,2987,11,2635,2634,2775,2606,0,3017,3016,3167,2988,11,2634,2647,2630,2775,0,3030,3029,3012,3169,11,2619,2605,2608,2649,0,3001,2987,2990,3033,11,2609,2619,2732,2731,0,2991,3001,3117,3116,11,2731,2591,2590,2609,0,3116,2973,2972,2991,11,2645,2777,2778,2622,0,3027,3170,3171,3004,11,2773,2772,2608,2607,0,3165,3164,2990,2989,11,2608,2772,2650,2649,0,2990,3164,3034,3033,11,2779,2780,2781,2782,0,3172,3173,3174,3175,11,2783,2784,2785,2786,0,3176,3177,3178,3179,11,2354,2787,2788,2789,0,2725,3180,3181,3182,11,2307,2323,2790,2791,0,2669,2685,3183,3184,11,2792,2317,2307,2791,0,3185,2679,2669,3184,11,2792,2353,2793,2317,0,3185,2724,3186,2679,11,1504,1507,2329,2342,0,3187,2700,2691,2710,10,2828,1618,2870,0,3188,3189,3190,11,2322,2794,2795,2323,0,2684,2701,2711,2685,11,1538,1537,2795,2794,0,3191,2712,2711,2701,10,1828,3318,1858,0,3131,3130,3192,11,2323,2795,2796,2790,0,2685,2711,2713,3183,11,2797,2116,2115,2798,0,3193,3194,3195,3196,11,2512,2519,2126,2128,0,2885,2896,2895,2886,11,2110,2119,2799,2800,0,3197,3198,3199,3200,11,2681,2680,2625,2627,0,3065,3064,3007,3009,11,2625,2680,2685,2621,0,3007,3064,3069,3003,11,2621,2685,2687,2622,0,3003,3069,3071,3004,11,2741,2737,2498,2499,0,3127,3122,2871,2872,11,2797,2517,2537,2801,0,3193,2892,2919,3201,11,2798,2514,2517,2797,0,3196,2889,2892,3193,11,2798,2802,2511,2514,0,3196,3202,2884,2889,11,2107,2110,2800,2802,0,3203,3197,3200,3202,11,2489,2803,2487,2486,0,2862,3204,2860,2859,11,2396,2395,2486,2485,0,2767,2766,2859,2858,11,2486,2395,2490,2489,0,2859,2766,2863,2862,11,2377,2368,2804,2462,0,2748,2739,3205,2833,11,2462,2461,2378,2377,0,2833,2832,2749,2748,11,2444,2458,2462,2804,0,2815,2829,2833,3205,11,2368,2367,2444,2804,0,2739,2738,2815,3205,11,2507,2503,2525,2805,0,2880,2876,2905,3206,11,2805,2534,2526,2507,0,3207,2916,2907,2906,11,2533,2527,2526,2534,0,2915,2909,2907,2916,11,2527,2533,2535,2528,0,2909,2915,2917,2910,11,2535,2536,2529,2528,0,2917,2918,2911,2910,11,2536,2524,2530,2529,0,2918,2903,2912,2911,11,2524,2523,2531,2530,0,2903,2902,2913,2912,11,2531,2523,2537,2532,0,2913,2902,2919,2914,11,2513,2524,2536,2512,0,2888,2903,2918,2885,11,2393,2532,2516,2484,0,2764,2914,2891,2857,11,2622,2687,2689,2645,0,3004,3071,3073,3027,11,2645,2689,2691,2643,0,3027,3073,3075,3025,11,2643,2691,2693,2641,0,3025,3075,3077,3023,11,2641,2693,2639,2611,0,3023,3077,3021,2993,11,2736,2739,2403,2402,0,3121,3124,2774,2773,11,2534,2805,2521,2520,0,2916,3207,2900,2899,11,2805,2525,2799,2521,0,3206,2905,3199,3208,11,2525,2509,2800,2799,0,2905,2882,3200,3199,11,2509,2511,2802,2800,0,2882,2884,3202,3200,11,2523,2522,2801,2537,0,2902,2901,3201,2919,11,2111,2522,2513,2112,0,3209,2901,2888,2887,11,2522,2111,2184,2801,0,2901,3209,3210,3201,11,2116,2797,2801,2184,0,3194,3193,3201,3210,11,2115,2107,2802,2798,0,3195,3203,3202,3196,11,2374,2373,2806,2463,0,2745,2744,3211,2834,11,2464,2466,2463,2806,0,2835,2838,2834,3211,11,2403,2739,2502,2500,0,2774,3124,2875,2873,11,2502,2739,2807,2735,0,2875,3124,3212,3120,11,2500,2381,2457,2501,0,2873,2752,2828,2874,11,2808,2406,2375,2372,0,3213,3214,3215,2743,11,2372,2375,2378,2373,0,2743,3215,3216,2744,11,2373,2378,2461,2806,0,2744,3216,3217,3211,11,2806,2461,2460,2464,0,3211,3217,2836,2835,11,2807,2740,2808,2735,0,3212,3126,3213,3120,11,2371,2735,2808,2372,0,2742,3120,3213,2743,11,2740,2407,2406,2808,0,3126,3125,3214,3213,11,2446,2809,2810,2363,0,2817,3218,3219,2734,11,2810,2501,2457,2363,0,3219,2874,2828,2734,11,2809,2404,2501,2810,0,3218,2775,2874,3219,11,2485,2488,2429,2426,0,2858,2861,2800,2797,11,2488,2487,2499,2429,0,2861,2860,2872,2800,11,2499,2487,2803,2741,0,2872,2860,3204,3127,11,2803,2489,2742,2741,0,3204,2862,3128,3127,11,2738,2742,2740,2807,0,3123,3128,3126,3212,11,2489,2492,2740,2742,0,2862,2865,3126,3128,11,2421,2485,2426,2425,0,2792,2858,2797,2796,11,2401,2404,2427,2430,0,2772,2775,2798,2801,11,2446,2425,2428,2809,0,2817,2796,2799,3218,11,2427,2404,2809,2428,0,2798,2775,3218,2799,11,2648,2681,2627,2647,0,3032,3065,3009,3029,11,2478,2477,2474,2473,0,2851,2850,2847,2846,11,2451,2419,2478,2473,0,2822,2790,2851,2846,11,2811,2812,2813,2814,0,3220,3221,3222,3223,11,2815,2816,2817,2818,0,3224,3225,3226,3227,11,2122,2201,2521,2799,0,3228,3229,3208,3199,11,2397,2424,2484,2734,0,2768,2795,2857,3119,11,2734,2733,2398,2397,0,3119,3118,2769,2768,11,2398,2733,2505,2497,0,2769,3118,2878,2870,11,2497,2505,2504,2496,0,2870,2878,2877,2869,11,2508,2470,2469,2819,0,2908,2843,2842,3230,11,2469,2495,2493,2819,0,2842,2868,3231,3230,11,2495,2408,2494,2493,0,2868,2779,3232,3231,11,2347,2348,1580,1264,0,2718,2719,3233,3234,11,2819,2493,2496,2504,0,3235,2866,2869,2877,11,2820,2821,2289,2288,0,3236,3237,2651,2650,11,2822,2823,2824,2825,0,3238,3239,3240,3241,11,2826,2827,2828,2829,0,3242,3243,3188,3244,11,2830,2831,2832,2833,0,3245,3246,3247,3248,11,2834,2835,2827,2826,0,3249,3250,3243,3242,11,2836,2833,2835,2837,0,3251,3248,3250,3252,11,2825,2824,2821,2820,0,3241,3240,3237,3236,11,2838,2839,2840,2841,0,3253,3254,3255,3256,11,2842,2843,2823,2822,0,3257,3258,3239,3238,11,2820,2288,2313,2844,0,3236,2650,2675,3259,11,2845,2822,2825,2846,0,3260,3238,3241,3261,11,2838,2847,2848,2849,0,3253,3262,3263,3264,11,2820,2844,2846,2825,0,3236,3259,3261,3241,11,2842,2822,2845,2850,0,3257,3238,3260,3265,11,2845,2846,2851,2850,0,3260,3261,3266,3265,11,2839,2838,2852,2853,0,3254,3253,3267,3129,11,2854,2855,2856,2857,0,3268,3269,3270,3271,11,2858,2839,2853,2859,0,3272,3254,3129,3132,11,2860,2861,2858,2859,0,3273,3274,3272,3132,11,2862,2863,2860,2864,0,3275,3276,3273,3277,11,2865,2866,2864,2867,0,3278,3279,3277,3280,10,3272,1620,1618,0,3281,3282,3189,11,2835,1616,3272,2827,0,3250,3283,3281,3243,11,1611,1609,2872,2871,0,3284,3285,3286,3287,11,2873,1608,1580,2348,0,3288,3289,3233,2719,11,2864,2860,2859,2874,0,3277,3273,3132,3290,11,2869,2867,1613,1615,0,3291,3280,3292,3293,11,2828,2827,3272,1618,0,3188,3243,3281,3189,11,2855,2858,2875,2856,0,3269,3272,3294,3270,11,2857,2856,2876,2877,0,3271,3270,3295,3296,11,2854,2857,2878,2839,0,3268,3271,3297,3254,11,2855,2854,2839,2858,0,3269,3268,3254,3272,11,2828,2870,2843,2829,0,3188,3190,3258,3244,11,2823,2843,2870,2871,0,3239,3258,3190,3287,11,2824,2823,2871,2872,0,3240,3239,3287,3286,11,2821,2824,2872,2873,0,3237,3240,3286,3288,11,2821,2873,2348,2289,0,3237,3288,2719,2651,11,2879,2826,2829,2880,0,3298,3242,3244,3299,11,2881,2353,2882,2883,0,3300,3301,3302,3303,11,2884,2885,2886,2887,0,3304,3305,3306,3307,11,2885,2888,2889,2886,0,3305,3308,3309,3306,11,2890,2891,2889,2888,0,3310,3311,3309,3308,11,2892,2893,2894,2895,0,3312,3313,3314,3315,11,2896,2897,2898,2899,0,3316,3317,3318,3319,11,2900,2901,2902,2903,0,3320,3321,3322,3323,11,2904,2905,2906,2907,0,3324,3325,3326,3327,11,2908,2909,2910,2911,0,3328,3329,3330,3331,11,2912,2884,2887,2913,0,3332,3304,3307,3333,11,2914,2915,2916,2917,0,3334,3335,3336,3337,11,2917,2916,2918,2919,0,3337,3336,3338,3339,11,2919,2918,2920,2921,0,3339,3338,3340,3341,11,2922,2921,2920,2923,0,3342,3341,3340,3343,11,2924,2925,2926,2927,0,3344,3345,3346,3347,11,2914,2928,2929,2915,0,3334,3348,3349,3335,11,2930,2931,2932,2933,0,3350,3351,3352,3353,11,2934,2935,2936,2937,0,3354,3355,3356,3357,11,2938,2939,2940,2941,0,3358,3359,3360,3361,11,2942,2943,2944,2945,0,3362,3363,3364,3365,11,2946,2945,2944,2947,0,3366,3365,3364,3367,11,2947,2948,2949,2946,0,3367,3368,3369,3366,11,2950,2951,2952,2953,0,3370,3371,3372,3373,11,2954,2955,2956,2957,0,3374,3375,3376,3377,11,2955,2954,2958,2959,0,3375,3374,3378,3379,11,2910,2909,2960,2961,0,3330,3329,3380,3381,11,2909,2962,2963,2960,0,3329,3382,3383,3380,11,2962,2895,2964,2963,0,3382,3315,3384,3383,11,2895,2894,2965,2964,0,3315,3314,3385,3384,11,2966,2967,2913,2887,0,3386,3387,3333,3307,11,2886,2968,2966,2887,0,3306,3388,3386,3307,11,2886,2889,2969,2968,0,3306,3309,3389,3388,11,2891,2970,2969,2889,0,3311,3390,3389,3309,11,2898,2971,2972,2973,0,3318,3391,3392,3393,11,2969,2970,2974,2968,0,3389,3390,3394,3388,11,2966,2968,2974,2967,0,3386,3388,3394,3387,11,2956,2975,2976,2977,0,3376,3395,3396,3397,11,2978,2979,2948,2980,0,3398,3399,3368,3400,11,2948,2947,2981,2980,0,3368,3367,3401,3400,11,2944,2982,2981,2947,0,3364,3402,3401,3367,11,2943,2983,2982,2944,0,3363,3403,3402,3364,11,2940,2984,2985,2941,0,3360,3404,3405,3361,11,2935,2904,2907,2936,0,3355,3324,3327,3356,11,2962,2909,2908,2986,0,3382,3329,3328,3406,11,2972,2971,2987,2988,0,3392,3391,3407,3408,11,2989,2990,2987,2991,0,3409,3410,3407,3411,11,2961,2992,2901,2910,0,3381,3412,3321,3330,11,2993,2994,2995,2990,0,3413,3414,3415,3416,11,2990,2995,2988,2987,0,3410,3417,3408,3407,11,2936,2907,2896,2996,0,3356,3327,3316,3418,11,2907,2906,2897,2896,0,3327,3326,3317,3316,11,2936,2996,2997,2937,0,3356,3418,3419,3357,11,2928,2998,2999,2929,0,3348,3420,3421,3349,11,2970,2891,2973,2972,0,3390,3311,3393,3392,11,2891,2890,3000,2973,0,3311,3310,3422,3393,11,2941,2985,3001,2938,0,3361,3405,3423,3358,11,2967,2965,2894,2913,0,3387,3385,3314,3333,11,2893,2912,2913,2894,0,3313,3332,3333,3314,11,2975,2979,2978,2976,0,3395,3399,3398,3396,11,3002,3003,2951,2950,0,3424,3425,3371,3370,11,3004,3005,3006,3007,0,3426,3427,3428,3429,11,3007,3008,3009,3004,0,3429,3430,3431,3426,11,3010,3011,3009,3008,0,3432,3433,3431,3430,11,3011,3010,3012,2939,0,3433,3432,3434,3359,11,2940,2997,2996,2984,0,3360,3419,3418,3404,11,2890,2983,2985,3000,0,3310,3403,3405,3422,11,2983,2890,2888,2982,0,3403,3310,3308,3402,11,2981,2982,2888,2885,0,3401,3402,3308,3305,11,2885,2884,2980,2981,0,3305,3304,3400,3401,11,2942,3011,2939,2938,0,3362,3433,3359,3358,11,3011,2942,2945,3009,0,3433,3362,3365,3431,11,3004,3009,2945,2946,0,3426,3431,3365,3366,11,2946,2949,3005,3004,0,3366,3369,3427,3426,11,2951,3003,2979,2975,0,3371,3425,3399,3395,11,2952,2951,2975,2956,0,3372,3371,3395,3376,11,2899,2898,2973,3000,0,3319,3318,3393,3422,11,2884,2912,2978,2980,0,3304,3332,3398,3400,11,2912,2893,2976,2978,0,3332,3313,3396,3398,11,2977,2976,2893,2892,0,3397,3396,3313,3312,11,3008,3007,2918,2916,0,3430,3429,3338,3336,11,3006,2920,2918,3007,0,3428,3340,3338,3429,11,2923,2920,3002,2950,0,3343,3340,3424,3370,11,2953,3013,2923,2950,0,3373,3435,3343,3370,11,3014,2927,2953,2952,0,3436,3347,3373,3372,11,3015,3014,3016,3017,0,3437,3436,3438,3439,11,3018,3019,3020,3021,0,3440,3441,3442,3443,11,3020,3019,3022,3023,0,3442,3441,3444,3445,11,3024,3012,2929,2999,0,3446,3434,3349,3421,11,3010,2915,2929,3012,0,3432,3335,3349,3434,11,3010,3008,2916,2915,0,3432,3430,3336,3335,11,3021,3020,3025,3026,0,3443,3442,3447,3448,11,3027,3028,2959,2958,0,3449,3450,3379,3378,11,2933,3029,3030,2930,0,3353,3451,3452,3350,11,2911,3031,3030,2908,0,3331,3453,3452,3328,11,2924,3021,3026,2925,0,3344,3443,3448,3345,11,3032,3033,3034,3035,0,3454,3455,3456,3457,11,3032,3035,3036,3037,0,3454,3457,3458,3459,11,3038,3033,3039,3040,0,3460,3455,3461,3462,11,3041,3042,1930,1943,0,3463,3464,3465,3466,11,3043,3044,3045,3046,0,3467,3468,3469,3470,11,3047,3048,1942,1941,0,3471,3472,3473,3474,11,3050,1919,2017,3049,0,3475,3476,3477,3478,11,3051,3052,3053,3042,0,3479,3480,3481,3464,11,1919,3047,1941,1920,0,3476,3471,3474,3482,11,3054,3039,3033,3032,0,3483,3461,3455,3454,11,3037,3036,2998,3055,0,3484,3485,3420,3486,11,3056,3055,2998,2928,0,3487,3486,3420,3348,11,2928,2914,3057,3056,0,3348,3334,3488,3487,11,3057,2914,2917,3058,0,3488,3334,3337,3489,11,2919,3059,3058,2917,0,3339,3490,3489,3337,11,2921,3060,3059,2919,0,3341,3491,3490,3339,11,2921,2922,3061,3060,0,3341,3342,3492,3491,11,3062,3047,3050,3063,0,3493,3471,3475,3494,11,3048,3047,3062,3064,0,3472,3471,3493,3495,11,3048,3064,3065,3041,0,3472,3495,3496,3463,11,3044,3066,3061,3045,0,3468,3497,3492,3469,11,3038,3040,3043,3046,0,3460,3462,3467,3470,11,2983,2943,3001,2985,0,3403,3363,3423,3405,11,2943,2942,2938,3001,0,3363,3362,3358,3423,11,3067,3068,3069,3070,0,3498,3499,3500,3501,11,3071,3072,3073,3074,0,3502,3503,3504,3505,11,3075,3076,3077,3078,0,3506,3507,3508,3509,11,3079,3080,3081,3082,0,3510,3511,3512,3513,11,3083,3084,3085,3086,0,3514,3515,3516,3517,11,3087,3088,3089,3090,0,3518,3519,3520,3521,11,3091,3092,2879,3093,0,3522,3523,3298,3524,11,3094,3095,3096,3097,0,3525,3526,3527,3528,11,3098,3099,3100,3101,0,3529,3530,3531,3532,11,3102,3103,3104,3105,0,3533,3534,3535,3536,11,3106,3107,3108,3109,0,3537,3538,3539,3540,11,3110,3111,3112,3113,0,3541,3542,3543,3544,11,3114,3115,3116,3117,0,3545,3546,3547,3548,11,3118,3119,3120,3121,0,3549,3550,3551,3552,11,3122,3123,3124,3125,0,3553,3554,3555,3556,11,3126,3127,3128,3129,0,3557,3558,3559,3560,11,3130,3131,3132,3133,0,3561,3562,3563,3564,11,3134,3135,3136,3137,0,3565,3566,3567,3568,11,3138,3119,3139,3140,0,3569,3550,3570,3571,11,3119,3138,3141,3142,0,3550,3569,3572,3573,11,3143,3144,3145,3146,0,3574,3575,3576,3577,11,3140,3139,3147,3148,0,3571,3570,3578,3579,11,3149,3150,3151,3152,0,3580,3581,3582,3583,11,3153,3154,3152,3155,0,3584,3585,3583,3586,11,3156,3157,3158,3155,0,3587,3588,3589,3586,11,3159,3160,3161,3156,0,3590,3591,3592,3587,11,3162,3163,3164,3165,0,3593,3594,3595,3596,11,3163,3166,3167,3164,0,3594,3597,3598,3595,11,3168,3140,3148,3169,0,3599,3571,3579,3600,11,3170,3138,3171,3172,0,3601,3569,3602,3603,11,3173,3174,3172,3175,0,3604,3605,3603,3606,11,3162,3165,3176,3177,0,3607,3608,3609,3610,11,3178,3179,3180,3181,0,3611,3612,3613,3614,11,3093,2879,2880,3182,0,3524,3298,3299,3615,11,2850,3181,3180,2842,0,3265,3614,3613,3257,11,3183,3184,2826,2879,0,3616,3617,3242,3298,11,3185,3186,3187,3188,0,3618,3619,3620,3621,11,3189,3190,3191,3192,0,3622,3623,3624,3625,11,3193,3194,3195,3196,0,3626,3627,3628,3629,11,3197,3198,3199,3200,0,3630,3631,3632,3633,11,3201,3202,3203,3204,0,3634,3635,3636,3637,11,3205,3206,3207,3208,0,3638,3639,3640,3641,11,3209,3210,3211,3212,0,3642,3643,3644,3645,11,3213,3212,3211,3214,0,3646,3645,3644,3647,11,3215,3213,3214,3216,0,3648,3646,3647,3649,11,3216,3217,3218,3215,0,3649,3650,3651,3648,11,3219,3218,3217,3220,0,3652,3651,3650,3653,11,3221,3219,3220,3222,0,3654,3652,3653,3655,11,3223,3221,3222,3168,0,3656,3654,3655,3599,11,3224,3223,3168,3169,0,3657,3656,3599,3600,11,3225,3166,3163,3226,0,3658,3597,3594,3659,11,3227,3226,3163,3162,0,3660,3659,3594,3593,11,3227,3162,3177,3228,0,3661,3607,3610,3662,11,3228,3177,3210,3209,0,3662,3610,3643,3642,11,2988,3228,3209,2972,0,3408,3662,3642,3392,11,2995,3227,3228,2988,0,3417,3661,3662,3408,11,2995,2994,3226,3227,0,3415,3414,3659,3660,11,2994,2992,3225,3226,0,3414,3412,3658,3659,11,3148,3147,3134,3167,0,3579,3578,3565,3598,11,3167,3166,3169,3148,0,3598,3597,3600,3579,11,3166,3225,3224,3169,0,3597,3658,3657,3600,11,2964,2965,3218,3219,0,3384,3385,3651,3652,11,2963,2964,3219,3221,0,3383,3384,3652,3654,11,2960,2963,3221,3223,0,3380,3383,3654,3656,11,2961,2960,3223,3224,0,3381,3380,3656,3657,11,3224,3225,2992,2961,0,3657,3658,3412,3381,11,3229,3230,3093,3118,0,3663,3664,3524,3549,11,3231,3232,3233,3234,0,3665,3666,3667,3668,11,3235,3236,3237,3238,0,3669,3670,3671,3672,11,3239,3240,3241,3242,0,3673,3674,3675,3676,11,3243,3244,3245,3246,0,3677,3678,3679,3680,11,3247,3248,3249,3250,0,3681,3682,3683,3684,11,3251,3252,3253,3254,0,3685,3686,3687,3688,11,3255,3256,3257,3258,0,3689,3690,3691,3692,11,3259,3260,3261,3182,0,3693,3694,3695,3615,11,3118,3093,3182,3261,0,3549,3524,3615,3695,11,3260,3259,3179,3178,0,3694,3693,3612,3611,11,2972,3209,3212,2970,0,3392,3642,3645,3390,11,2974,2970,3212,3213,0,3394,3390,3645,3646,11,2967,2974,3213,3215,0,3387,3394,3646,3648,11,3215,3218,2965,2967,0,3648,3651,3385,3387,11,3033,3038,3262,3034,0,3455,3460,3696,3456,11,3263,3262,3038,3046,0,3697,3696,3460,3470,11,3263,3046,3045,3013,0,3697,3470,3469,3435,11,2911,2910,2901,2900,0,3331,3330,3321,3320,11,3031,2911,2900,3264,0,3453,3331,3320,3698,11,2895,2962,2986,2892,0,3315,3382,3406,3312,11,3265,3266,3267,3268,0,3699,3700,3701,3702,11,2932,2931,3027,2958,0,3352,3351,3449,3378,11,3027,2931,3265,3268,0,3449,3351,3699,3702,11,2984,2996,2896,2899,0,3404,3418,3316,3319,11,2984,2899,3000,2985,0,3404,3319,3422,3405,11,2939,3012,2997,2940,0,3359,3434,3419,3360,11,2997,3012,3024,2937,0,3419,3434,3446,3357,11,2934,3022,3019,3269,0,3703,3444,3441,3704,11,3270,3271,3268,3267,0,3705,3706,3702,3701,11,3182,2880,3179,3259,0,3615,3299,3612,3693,11,2880,2829,3180,3179,0,3299,3244,3613,3612,11,2842,3180,2829,2843,0,3257,3613,3244,3258,11,2870,1618,1611,2871,0,3190,3189,3284,3287,11,3273,3274,3275,3276,0,3707,3708,3709,3710,11,3277,3278,3279,3280,0,3711,3712,3713,3714,11,3281,3282,3283,3284,0,3715,3716,3717,3718,11,3285,3286,3287,3288,0,3719,3720,3721,3722,11,3289,3290,3291,3292,0,3723,3724,3725,3726,11,3293,3294,3295,3296,0,3727,3728,3729,3730,11,3297,3298,3299,3300,0,3731,3732,3733,3734,11,3301,3302,3303,3181,0,3735,3736,3737,3614,11,3304,3305,3137,3136,0,3738,3739,3568,3567,11,3137,3164,3167,3134,0,3568,3595,3598,3565,11,3305,3165,3164,3137,0,3739,3596,3595,3568,11,3159,3176,3165,3305,0,3590,3609,3608,3740,11,3135,3134,3147,3178,0,3566,3565,3578,3611,11,3139,3261,3260,3147,0,3570,3695,3694,3578,11,3261,3139,3119,3118,0,3695,3570,3550,3549,11,3306,3307,3175,3151,0,3741,3742,3606,3582,11,3302,3136,3135,3303,0,3736,3567,3566,3737,11,3135,3178,3181,3303,0,3566,3611,3614,3737,11,3308,3309,3310,3311,0,3743,3744,3745,3746,11,3312,3313,3314,3315,0,3747,3748,3749,3750,11,3316,2787,2354,3317,0,3751,3752,3753,3754,11,2838,2791,2790,2852,0,3253,3755,3756,3267,11,2792,2791,2838,2849,0,3757,3755,3253,3264,11,2792,2849,2882,2353,0,3757,3264,3302,3301,10,1613,2874,1825,0,3292,3290,3758,11,1825,2874,2859,1828,0,3758,3290,3132,3131,11,2853,2852,3319,3318,0,3129,3267,3134,3130,11,1615,2833,2868,2869,0,3293,3248,3759,3291,11,1858,3318,3319,1537,0,3192,3130,3134,3133,11,2852,2790,2796,3319,0,3267,3756,3135,3134,11,3320,3321,1931,1934,0,3760,3761,3762,3763,11,1942,3048,3041,1943,0,3473,3472,3463,3466,11,1924,3322,3323,1935,0,3764,3765,3766,3767,11,3155,3211,3210,3156,0,3586,3644,3643,3587,11,3155,3152,3214,3211,0,3586,3583,3647,3644,11,3152,3151,3216,3214,0,3583,3582,3649,3647,11,3271,3028,3027,3268,0,3706,3450,3449,3702,11,3320,3324,3066,3044,0,3760,3768,3497,3468,11,3321,3320,3044,3043,0,3761,3760,3468,3467,11,3321,3043,3040,3325,0,3761,3467,3462,3769,11,3322,1924,1923,3325,0,3765,3764,3770,3769,11,3017,3326,3018,3015,0,3439,3771,3440,3437,11,2927,3014,3015,2924,0,3347,3436,3437,3344,11,3015,3018,3021,2924,0,3437,3440,3443,3344,11,3327,2897,2906,2991,0,3772,3317,3326,3411,11,2991,2906,2905,2989,0,3411,3326,3325,3409,11,2971,3327,2991,2987,0,3391,3772,3411,3407,11,2897,3327,2971,2898,0,3317,3772,3391,3318,11,3054,3032,3037,3328,0,3483,3454,3459,3773,11,3328,3037,3055,3063,0,3774,3484,3486,3494,11,3055,3056,3062,3063,0,3486,3487,3493,3494,11,3056,3057,3064,3062,0,3487,3488,3495,3493,11,3064,3057,3058,3065,0,3495,3488,3489,3496,11,3059,3051,3065,3058,0,3490,3479,3496,3489,11,3060,3052,3051,3059,0,3491,3480,3479,3490,11,3060,3061,3066,3052,0,3491,3492,3497,3480,11,3042,3041,3065,3051,0,3464,3463,3496,3479,11,2922,3013,3045,3061,0,3342,3435,3469,3492,11,3151,3175,3217,3216,0,3582,3606,3650,3649,11,3175,3172,3220,3217,0,3606,3603,3653,3650,11,3172,3171,3222,3220,0,3603,3602,3655,3653,11,3171,3140,3168,3222,0,3602,3571,3599,3655,11,2930,3266,3265,2931,0,3350,3700,3699,3351,11,3063,3050,3049,3328,0,3494,3475,3478,3774,11,3328,3049,3323,3054,0,3773,3775,3766,3483,11,3054,3323,3322,3039,0,3483,3766,3765,3461,11,3039,3322,3325,3040,0,3461,3765,3769,3462,11,3052,3066,3324,3053,0,3480,3497,3768,3481,11,3042,3053,1927,1930,0,3464,3481,3776,3465,11,3053,3324,2000,1927,0,3481,3768,3777,3776,11,3324,3320,1934,2000,0,3768,3760,3763,3777,11,1931,3321,3325,1923,0,3762,3761,3769,3770,11,2901,2992,3329,2902,0,3321,3412,3778,3322,11,2993,3329,2992,2994,0,3413,3778,3412,3414,11,2930,3030,3031,3266,0,3350,3452,3453,3700,11,3031,3264,3330,3266,0,3453,3698,3779,3700,11,3030,3029,2986,2908,0,3452,3451,3406,3328,11,3331,2903,2904,2935,0,3780,3323,3781,3782,11,2903,2902,2905,2904,0,3323,3322,3783,3781,11,2902,3329,2989,2905,0,3322,3778,3784,3783,11,3329,2993,2990,2989,0,3778,3413,3416,3784,11,3330,3264,3331,3269,0,3779,3698,3780,3704,11,3331,3264,2900,2903,0,3780,3698,3320,3323,11,3269,3331,2935,2934,0,3704,3780,3782,3703,11,2977,2892,3332,3333,0,3397,3312,3785,3786,11,3332,2892,2986,3029,0,3785,3312,3406,3451,11,3333,3332,3029,2933,0,3786,3785,3451,3353,11,3014,2955,2959,3016,0,3436,3375,3379,3438,11,3016,2959,3028,3017,0,3438,3379,3450,3439,11,3028,3271,3326,3017,0,3450,3706,3771,3439,11,3326,3271,3270,3018,0,3771,3706,3705,3440,11,3267,3330,3269,3270,0,3701,3779,3704,3705,11,3018,3270,3269,3019,0,3440,3705,3704,3441,11,2955,3014,2952,2956,0,3375,3436,3372,3376,11,2932,2958,2954,2933,0,3352,3378,3374,3353,11,2977,3333,2957,2956,0,3397,3786,3377,3376,11,3333,2933,2954,2957,0,3786,3353,3374,3377,11,3156,3210,3177,3176,0,3587,3643,3610,3609,11,3005,3003,3002,3006,0,3427,3425,3424,3428,11,3005,2949,2979,3003,0,3427,3369,3399,3425,11,3334,3335,3336,3337,0,3787,3788,3789,3790,11,3338,3339,3340,3341,0,3791,3792,3793,3794,11,3049,2017,1936,3323,0,3775,3795,3796,3766,11,3013,2953,2926,3263,0,3435,3373,3346,3697,11,3263,2926,2925,3262,0,3697,3346,3345,3696,11,2925,3026,3034,3262,0,3345,3448,3456,3696,11,3026,3025,3035,3034,0,3448,3447,3457,3456,11,3036,3342,2999,2998,0,3485,3797,3421,3420,11,2999,3342,3023,3024,0,3421,3797,3798,3446,11,3024,3023,3022,2937,0,3446,3798,3799,3357,10,2743,1277,1272,0,3800,3801,2702,11,3025,3023,3342,3035,0,3447,3445,3802,3457,11,3343,3344,3345,3346,0,3803,3804,3805,3806,11,3347,3348,3349,3350,0,3807,3808,3809,3810,11,2788,2601,2604,2789,0,3181,2983,2986,3182,11,2601,3351,3352,2602,0,2983,3811,3812,2984,11,3351,2601,2788,3353,0,3811,2983,3181,3813,11,2337,2540,2539,2335,0,2699,2922,2921,2697,11,2543,2332,2334,2544,0,2925,2694,2696,2926,11,2543,2542,2541,2540,0,2925,2924,2923,2922,11,2540,2337,2332,2543,0,2922,2699,2694,2925,11,2539,2538,2663,2662,0,2921,2920,3047,3046,11,2301,2662,2661,2302,0,2663,3046,3045,2664,11,2662,2301,2335,2539,0,3046,2663,2697,2921,11,2547,2345,2344,2548,0,2929,2716,2715,2930,11,2547,2546,2545,2544,0,2929,2928,2927,2926,11,2343,2345,2547,2544,0,2714,2716,2929,2926,11,2343,2544,2334,2331,0,2714,2926,2696,2693,11,2549,2548,2309,2308,0,2931,2930,2671,2670,11,2576,2319,2318,2573,0,2958,2681,2680,2955,11,2576,2575,2571,2570,0,2958,2957,2953,2952,11,2570,2569,2546,2549,0,2952,2951,2928,2931,11,2570,2549,2308,2319,0,2952,2931,2670,2681,11,2548,2344,2346,2309,0,2930,2715,2717,2671,11,2727,2352,2351,2728,0,3112,2723,2722,3113,11,2574,2727,2726,2575,0,2956,3112,3111,2957,11,2317,2352,2727,2574,0,2679,2723,3112,2956,11,2306,2305,2657,2656,0,2668,2667,3041,3040,11,2654,2656,2659,2655,0,3038,3040,3043,3039,11,2304,2306,2656,2654,0,2666,2668,3040,3038,11,2665,2299,2302,2666,0,3049,2661,2664,3050,11,2665,2664,2658,2657,0,3049,3048,3042,3041,11,2299,2665,2657,2305,0,2661,3049,3041,2667,11,2661,2660,2667,2666,0,3045,3044,3051,3050,11,2604,2603,2729,2728,0,2986,2985,3114,3113,11,2728,2351,2789,2604,0,3113,2722,3182,2986,11,2555,2538,2541,2556,0,2937,2920,2923,2938,11,2555,2554,2553,2552,0,2937,2936,2935,2934,11,2663,2552,2551,2660,0,3047,2934,2933,3044,11,2538,2555,2552,2663,0,2920,2937,2934,3047,11,2559,2542,2545,2560,0,2941,2924,2927,2942,11,2559,2558,2557,2556,0,2941,2940,2939,2938,11,2556,2541,2542,2559,0,2938,2923,2924,2941,11,2560,2569,2572,2561,0,2942,2951,2954,2943,11,2546,2569,2560,2545,0,2928,2951,2942,2927,11,2551,2550,2669,2668,0,2933,2932,3053,3052,11,2667,2668,2671,2664,0,3051,3052,3055,3048,11,2668,2667,2660,2551,0,3052,3051,3044,2933,11,2711,2550,2553,2712,0,3096,2932,2935,3097,11,2711,2710,2707,2706,0,3096,3095,3092,3091,11,2669,2706,2709,2670,0,3053,3091,3094,3054,11,2706,2669,2550,2711,0,3091,3053,2932,3096,11,2715,2554,2557,2716,0,3100,2936,2939,3101,11,2715,2714,2713,2712,0,3100,3099,3098,3097,11,2712,2553,2554,2715,0,3097,2935,2936,3100,11,2719,2558,2561,2720,0,3104,2940,2943,3105,11,2719,2718,2717,2716,0,3104,3103,3102,3101,11,2558,2719,2716,2557,0,2940,3104,3101,2939,11,2722,2572,2571,2723,0,3107,2954,2953,3108,11,2720,2722,2725,2721,0,3105,3107,3110,3106,11,2561,2572,2722,2720,0,2943,2954,3107,3105,11,2566,2659,2658,2567,0,2948,3043,3042,2949,11,2562,2566,2565,2563,0,2944,2948,2947,2945,11,2655,2659,2566,2562,0,3039,3043,2948,2944,11,2703,2565,2568,2704,0,3088,2947,2950,3089,11,2703,2702,2701,2700,0,3088,3087,3086,3085,11,2703,2700,2563,2565,0,3088,3085,2945,2947,11,2671,2670,2568,2567,0,3055,3054,2950,2949,11,2664,2671,2567,2658,0,3048,3055,2949,3042,11,2709,2708,2705,2704,0,3094,3093,3090,3089,11,2670,2709,2704,2568,0,3054,3094,3089,2950,11,2723,2726,2729,2724,0,3108,3111,3114,3109,11,2575,2726,2723,2571,0,2957,3111,3108,2953,11,2584,2714,2717,2581,0,2966,3099,3102,2963,11,2584,2583,2578,2577,0,2966,2965,2960,2959,11,2713,2577,2580,2710,0,3098,2959,2962,3095,11,2577,2713,2714,2584,0,2959,3098,3099,2966,11,2580,2579,2675,2674,0,2962,2961,3059,3058,11,2707,2674,2673,2708,0,3092,3058,3057,3093,11,2710,2580,2674,2707,0,3095,2962,3058,3092,11,2771,2579,2578,2768,0,3163,2961,2960,3160,11,2771,2770,2811,2814,0,3163,3162,3220,3223,11,2814,2813,2677,2676,0,3223,3222,3061,3060,11,2675,2676,2679,2672,0,3059,3060,3063,3056,11,2676,2579,2771,2814,0,3060,2961,3163,3223,11,2586,2718,2721,2587,0,2968,3103,3106,2969,11,2586,2585,2582,2581,0,2968,2967,2964,2963,11,2581,2717,2718,2586,0,2963,3102,3103,2968,11,2725,2724,2600,2599,0,3110,3109,2982,2981,11,2587,2599,2598,2588,0,2969,2981,2980,2970,11,2599,2587,2721,2725,0,2981,2969,3106,3110,11,2596,2702,2705,2593,0,2978,3087,3090,2975,11,2596,2595,2589,2592,0,2978,2977,2971,2974,11,2702,2596,2592,2701,0,3087,2978,2974,3086,11,2673,2672,2594,2593,0,3057,3056,2976,2975,11,2708,2673,2593,2705,0,3093,3057,2975,3090,11,2600,2603,2602,2597,0,2982,2985,2984,2979,11,2603,2600,2724,2729,0,2985,2982,3109,3114,11,2623,2813,2812,2620,0,3005,3222,3221,3002,11,2677,2778,2777,2678,0,3061,3171,3170,3062,11,2813,2623,2778,2677,0,3222,3005,3171,3061,11,2812,2811,2755,2754,0,3221,3220,3147,3146,11,2626,2754,2753,2624,0,3008,3146,3145,3006,11,2620,2812,2754,2626,0,3002,3221,3146,3008,11,2751,2753,2752,2748,0,3143,3145,3144,3140,11,2751,2750,2629,2628,0,3143,3142,3011,3010,11,2628,2624,2753,2751,0,3010,3006,3145,3143,11,2750,2749,2745,2744,0,3142,3141,3137,3136,11,2631,2744,2747,2632,0,3013,3136,3139,3014,11,2750,2744,2631,2629,0,3142,3136,3013,3011,11,3354,3355,2632,2747,0,3814,3815,3014,3139,11,2612,2613,2617,2616,0,2994,2995,2999,2998,11,2646,2616,2615,2644,0,3028,2998,2997,3026,11,2616,2646,2642,2612,0,2998,3028,3024,2994,11,2615,2614,2679,2678,0,2997,2996,3063,3062,11,2678,2777,2644,2615,0,3062,3170,3026,2997,11,2780,2746,2745,2781,0,3173,3138,3137,3174,11,2780,2779,3356,3354,0,3173,3172,3816,3814,11,2786,2749,2748,2783,0,3179,3141,3140,3176,11,2786,2785,2782,2781,0,3179,3178,3175,3174,11,2749,2786,2781,2745,0,3141,3179,3174,3137,11,2766,2752,2755,2767,0,3158,3144,3147,3159,11,2766,2765,2784,2783,0,3158,3157,3177,3176,11,2748,2752,2766,2783,0,3140,3144,3158,3176,11,2767,2770,2769,2764,0,3159,3162,3161,3156,11,2770,2767,2755,2811,0,3162,3159,3147,3220,11,3352,3357,2757,2756,0,3812,3817,3149,3148,11,2756,2759,2598,2597,0,3148,3151,2980,2979,11,2602,3352,2756,2597,0,2984,3812,3148,2979,11,2763,2759,2758,2760,0,3155,3151,3150,3152,11,2763,2762,2585,2588,0,3155,3154,2967,2970,11,2588,2598,2759,2763,0,2970,2980,3151,3155,11,2762,2761,2816,2815,0,3154,3153,3225,3224,11,2582,2815,2818,2583,0,2964,3224,3227,2965,11,2815,2582,2585,2762,0,3224,2964,2967,3154,11,2818,2817,2769,2768,0,3227,3226,3161,3160,11,2768,2578,2583,2818,0,3160,2960,2965,3227,11,2617,2595,2594,2614,0,2999,2977,2976,2996,11,2595,2617,2613,2589,0,2977,2999,2995,2971,11,2614,2594,2672,2679,0,2996,2976,3056,3063,11,2760,2785,2784,2761,0,3152,3178,3177,3153,11,2782,2758,2757,2779,0,3175,3150,3149,3172,11,2785,2760,2758,2782,0,3178,3152,3150,3175,11,2816,2765,2764,2817,0,3225,3157,3156,3226,11,2765,2816,2761,2784,0,3157,3225,3153,3177,11,3316,3317,3131,3130,0,3751,3754,3562,3561,11,3130,3133,3358,3359,0,3561,3564,3818,3819,11,3359,3360,3316,3130,0,3819,3820,3751,3561,11,2866,2865,3070,3069,0,3279,3278,3501,3500,11,3074,3069,3068,3071,0,3505,3500,3499,3502,11,3074,3073,2863,2862,0,3505,3504,3276,3275,11,3069,3074,2862,2866,0,3500,3505,3275,3279,11,2832,3361,2868,2833,0,3247,3821,3759,3248,11,2832,2831,3192,3191,0,3247,3246,3625,3624,11,3070,3191,3190,3067,0,3501,3624,3623,3498,11,3191,2865,3361,2832,0,3624,3278,3821,3247,11,3076,3073,3072,3077,0,3507,3504,3503,3508,11,3076,3075,2877,2876,0,3507,3506,3296,3295,11,2875,3073,3076,2876,0,3294,3504,3507,3295,11,2863,3073,2875,2861,0,3276,3504,3294,3274,11,3078,2841,2840,3075,0,3509,3256,3255,3506,11,3099,3078,3077,3100,0,3530,3509,3508,3531,11,3103,3099,3098,3104,0,3534,3530,3529,3535,11,3103,3102,2848,2847,0,3534,3533,3263,3262,11,2847,2841,3099,3103,0,3262,3256,3530,3534,11,2878,2877,3075,2840,0,3297,3296,3506,3255,11,3105,3104,3255,3258,0,3536,3535,3689,3692,11,3258,3257,2881,2883,0,3692,3691,3300,3303,11,2849,3105,3258,2883,0,3264,3536,3692,3303,11,3184,3183,3188,3187,0,3617,3616,3621,3620,11,2837,3187,3186,2836,0,3252,3620,3619,3251,11,2834,3184,3187,2837,0,3249,3617,3620,3252,11,3196,3186,3185,3193,0,3629,3619,3618,3626,11,3196,3195,2831,2830,0,3629,3628,3246,3245,11,3186,3196,2830,2836,0,3619,3629,3245,3251,11,3192,3195,3194,3189,0,3625,3628,3627,3622,11,3131,3257,3256,3132,0,3562,3691,3690,3563,11,3257,3131,3317,2881,0,3691,3562,3754,3300,11,3190,3189,3082,3081,0,3623,3622,3513,3512,11,3086,3081,3080,3083,0,3517,3512,3511,3514,11,3086,3085,3068,3067,0,3517,3516,3499,3498,11,3081,3086,3067,3190,0,3512,3517,3498,3623,11,3090,3085,3084,3087,0,3521,3516,3515,3518,11,3090,3089,3072,3071,0,3521,3520,3503,3502,11,3085,3090,3071,3068,0,3516,3521,3502,3499,11,3089,3088,3101,3100,0,3520,3519,3532,3531,11,3077,3072,3089,3100,0,3508,3503,3520,3531,11,3194,3193,3200,3199,0,3627,3626,3633,3632,11,3082,3199,3198,3079,0,3513,3632,3631,3510,11,3199,3082,3189,3194,0,3632,3513,3622,3627,11,3198,3197,3238,3237,0,3631,3630,3672,3671,11,3242,3237,3236,3239,0,3676,3671,3670,3673,11,3242,3241,3080,3079,0,3676,3675,3511,3510,11,3079,3198,3237,3242,0,3510,3631,3671,3676,11,3246,3241,3240,3243,0,3680,3675,3674,3677,11,3246,3245,3084,3083,0,3680,3679,3515,3514,11,3083,3080,3241,3246,0,3514,3511,3675,3680,11,3250,3245,3244,3247,0,3684,3679,3678,3681,11,3250,3249,3088,3087,0,3684,3683,3519,3518,11,3087,3084,3245,3250,0,3518,3515,3679,3684,11,3253,3249,3248,3254,0,3687,3683,3682,3688,11,3253,3252,3098,3101,0,3687,3686,3529,3532,11,3249,3253,3101,3088,0,3683,3687,3532,3519,11,3092,3091,3094,3097,0,3523,3522,3525,3528,11,3097,3096,3185,3188,0,3528,3527,3618,3621,11,3183,3092,3097,3188,0,3616,3523,3528,3621,11,3234,3230,3229,3231,0,3668,3664,3663,3665,11,3234,3233,3095,3094,0,3668,3667,3526,3525,11,3234,3094,3091,3230,0,3668,3525,3522,3664,11,3200,3096,3095,3197,0,3633,3527,3526,3630,11,3193,3185,3096,3200,0,3626,3618,3527,3633,11,3238,3233,3232,3235,0,3672,3667,3666,3669,11,3197,3095,3233,3238,0,3630,3526,3667,3672,11,3252,3251,3256,3255,0,3686,3685,3690,3689,11,3104,3098,3252,3255,0,3535,3529,3686,3689,11,3240,3239,3107,3106,0,3674,3673,3538,3537,11,3111,3106,3109,3112,0,3542,3537,3540,3543,11,3111,3110,3244,3243,0,3542,3541,3678,3677,11,3106,3111,3243,3240,0,3537,3542,3677,3674,11,3236,3235,3202,3201,0,3670,3669,3635,3634,11,3107,3201,3204,3108,0,3538,3634,3637,3539,11,3239,3236,3201,3107,0,3673,3670,3634,3538,11,3204,3203,3208,3207,0,3637,3636,3641,3640,11,3335,3207,3206,3336,0,3788,3640,3639,3789,11,3298,3335,3334,3299,0,3732,3788,3787,3733,11,3298,3297,3109,3108,0,3732,3731,3540,3539,11,3207,3335,3108,3204,0,3640,3788,3539,3637,11,3115,3110,3113,3116,0,3546,3541,3544,3547,11,3115,3114,3248,3247,0,3546,3545,3682,3681,11,3110,3115,3247,3244,0,3541,3546,3681,3678,11,3114,3117,3129,3128,0,3545,3548,3560,3559,11,3254,3128,3127,3251,0,3688,3559,3558,3685,11,3128,3254,3248,3114,0,3559,3688,3682,3545,11,3123,3121,3120,3124,0,3554,3552,3551,3555,11,3123,3122,3232,3231,0,3554,3553,3666,3665,11,3121,3123,3231,3229,0,3552,3554,3665,3663,11,3202,3122,3125,3203,0,3635,3553,3556,3636,11,3235,3232,3122,3202,0,3669,3666,3553,3635,11,3127,3126,3133,3132,0,3558,3557,3564,3563,11,3132,3256,3251,3127,0,3563,3690,3685,3558,11,3206,3205,3307,3306,0,3639,3638,3742,3741,11,3150,3149,3337,3336,0,3581,3580,3790,3789,11,3336,3206,3306,3150,0,3789,3639,3741,3581,11,3282,3154,3153,3283,0,3716,3585,3584,3717,11,3337,3282,3281,3334,0,3790,3716,3715,3787,11,3149,3154,3282,3337,0,3580,3585,3716,3790,11,3280,3158,3157,3277,0,3714,3589,3588,3711,11,3280,3279,3284,3283,0,3714,3713,3718,3717,11,3158,3280,3283,3153,0,3589,3714,3717,3584,11,3273,3161,3160,3274,0,3707,3592,3591,3708,11,3277,3273,3276,3278,0,3711,3707,3710,3712,11,3277,3157,3161,3273,0,3711,3588,3592,3707,11,3362,3274,3160,3363,0,3822,3708,3591,3823,11,3174,3173,3146,3145,0,3605,3604,3577,3576,11,3141,3145,3144,3142,0,3572,3576,3575,3573,11,3170,3174,3145,3141,0,3601,3605,3576,3572,11,3146,3205,3208,3143,0,3577,3638,3641,3574,11,3205,3146,3173,3307,0,3638,3577,3604,3742,11,3309,3362,3364,3310,0,3744,3822,3824,3745,11,3309,3308,3276,3275,0,3744,3743,3710,3709,11,3315,3308,3311,3312,0,3750,3743,3746,3747,11,3278,3315,3314,3279,0,3712,3750,3749,3713,11,3278,3276,3308,3315,0,3712,3710,3743,3750,11,3293,3314,3313,3294,0,3727,3749,3748,3728,11,3284,3293,3296,3281,0,3718,3727,3730,3715,11,3279,3314,3293,3284,0,3713,3749,3727,3718,11,3296,3295,3300,3299,0,3730,3729,3734,3733,11,3299,3334,3281,3296,0,3733,3787,3715,3730,11,3285,3126,3129,3286,0,3719,3557,3560,3720,11,3358,3285,3288,3365,0,3818,3719,3722,3825,11,3126,3285,3358,3133,0,3557,3719,3818,3564,11,3290,3117,3116,3291,0,3724,3548,3547,3725,11,3290,3289,3287,3286,0,3724,3723,3721,3720,11,3117,3290,3286,3129,0,3548,3724,3720,3560,11,3113,3112,3339,3338,0,3544,3543,3792,3791,11,3291,3338,3341,3292,0,3725,3791,3794,3726,11,3338,3291,3116,3113,0,3791,3725,3547,3544,11,3339,3297,3300,3340,0,3792,3731,3734,3793,11,3297,3339,3112,3109,0,3731,3792,3543,3540,11,3144,3143,3125,3124,0,3575,3574,3556,3555,11,3124,3120,3142,3144,0,3555,3551,3573,3575,11,3143,3208,3203,3125,0,3574,3641,3636,3556,11,3311,3310,3288,3287,0,3746,3745,3722,3721,11,3289,3292,3313,3312,0,3723,3726,3748,3747,11,3312,3311,3287,3289,0,3747,3746,3721,3723,11,3341,3340,3295,3294,0,3794,3793,3729,3728,11,3294,3313,3292,3341,0,3728,3748,3726,3794,11,3357,3366,2779,2757,0,3817,3826,3172,3149,11,3367,3365,3310,3364,0,3827,3825,3745,3824,11,2347,1264,1263,2341,0,2718,3234,2709,2708,11,2869,2868,3361,2867,0,3291,3759,3821,3280,11,2313,2314,3368,3369,0,2675,2676,3828,3829,11,3370,3371,3372,3373,0,3830,3831,3832,3833,11,3374,3371,3375,3368,0,3834,3831,3835,3828,11,3376,3375,3371,3370,0,3836,3835,3831,3830,11,3369,3368,3375,3376,0,3829,3828,3835,3836,11,3374,2320,2774,3377,0,3834,2682,3166,3837,11,3378,2776,3343,3379,0,3838,3168,3839,3840,11,2773,3378,3372,3377,0,3165,3838,3832,3837,11,3372,3378,3380,3373,0,3832,3838,3841,3833,11,2313,3369,3381,2844,0,2675,3829,3842,3259,11,3370,3373,3382,3383,0,3830,3833,3843,3844,11,3384,3381,3385,3383,0,3845,3842,3846,3844,11,3383,3385,3376,3370,0,3844,3846,3836,3830,11,3369,3376,3385,3381,0,3829,3836,3846,3842,11,3349,3304,3386,3387,0,3847,3738,3848,3849,11,3365,3388,3359,3358,0,3850,3851,3852,3853,11,3382,3386,3302,3389,0,3843,3848,3736,3854,11,3380,3386,3382,3373,0,3841,3848,3843,3833,11,2321,3374,3368,2314,0,2683,3834,3828,2676,11,3301,2850,3384,3389,0,3735,3265,3845,3854,11,2851,2844,3381,3384,0,3266,3259,3842,3845,11,3351,3353,3390,3391,0,3855,3856,3857,3858,11,3392,3393,3394,3395,0,3859,3860,3861,3862,11,3396,3392,3397,3391,0,3863,3859,3864,3858,11,3388,3398,3360,3359,0,3851,3865,3866,3852,11,3367,3399,3388,3365,0,3867,3868,3851,3850,11,3400,3388,3399,3401,0,3869,3851,3868,3870,11,3351,3391,3357,3352,0,3855,3858,3871,3872,11,3391,3397,3366,3357,0,3858,3864,3873,3871,11,3402,3403,3404,3405,0,3874,3874,3874,3874,11,3405,3404,3406,3407,0,3874,3874,3874,3874,11,3407,3406,3408,3409,0,3874,3874,3874,3874,11,3409,3408,3410,3411,0,3874,3874,3874,3874,11,3411,3410,3412,3413,0,3874,3874,3874,3874,11,3413,3412,3414,3415,0,3874,3874,3874,3874,11,3415,3414,3416,3417,0,3874,3874,3874,3874,11,3417,3416,3403,3402,0,3874,3874,3874,3874,11,3403,3418,3419,3404,0,3874,3874,3874,3874,11,3404,3419,3420,3406,0,3874,3874,3874,3874,11,3406,3420,3421,3408,0,3874,3874,3874,3874,11,3408,3421,3422,3410,0,3874,3874,3874,3874,11,3410,3422,3423,3412,0,3874,3874,3874,3874,11,3412,3423,3424,3414,0,3874,3874,3874,3874,11,3414,3424,3425,3416,0,3874,3874,3874,3874,11,3416,3425,3418,3403,0,3874,3874,3874,3874,11,3418,3426,3427,3419,0,3874,3874,3874,3874,11,3419,3427,3428,3420,0,3874,3874,3874,3874,11,3420,3428,3429,3421,0,3874,3874,3874,3874,11,3421,3429,3430,3422,0,3874,3874,3874,3874,11,3422,3430,3431,3423,0,3874,3874,3874,3874,11,3423,3431,3432,3424,0,3874,3874,3874,3874,11,3424,3432,3433,3425,0,3874,3874,3874,3874,11,3425,3433,3426,3418,0,3874,3874,3874,3874,11,3426,3434,3435,3427,0,3874,3874,3874,3874,11,3427,3435,3436,3428,0,3874,3874,3874,3874,11,3428,3436,3437,3429,0,3874,3874,3874,3874,11,3429,3437,3438,3430,0,3874,3874,3874,3874,11,3430,3438,3439,3431,0,3874,3874,3874,3874,11,3431,3439,3440,3432,0,3874,3874,3874,3874,11,3432,3440,3441,3433,0,3874,3874,3874,3874,11,3433,3441,3434,3426,0,3874,3874,3874,3874,11,3439,3437,3441,3440,0,3874,3874,3874,3874,11,3435,3441,3437,3436,0,3874,3874,3874,3874,11,3442,3443,3444,3445,0,3874,3874,3874,3874,11,3446,3442,3445,3447,0,3874,3874,3874,3874,11,3446,3447,3448,3449,0,3874,3874,3874,3874,11,3450,3451,3449,3448,0,3874,3874,3874,3874,11,3452,3453,3451,3450,0,3874,3874,3874,3874,11,3454,3453,3452,3455,0,3874,3874,3874,3874,11,3456,3454,3455,3457,0,3874,3874,3874,3874,11,3456,3457,3458,3459,0,3874,3874,3874,3874,11,3460,3461,3459,3458,0,3874,3874,3874,3874,11,3444,3443,3461,3460,0,3874,3874,3874,3874,11,3445,3444,3462,3463,0,3874,3874,3874,3874,11,3447,3445,3463,3464,0,3874,3874,3874,3874,11,3447,3464,3465,3448,0,3874,3874,3874,3874,11,3466,3450,3448,3465,0,3874,3874,3874,3874,11,3467,3452,3450,3466,0,3874,3874,3874,3874,11,3452,3467,3468,3455,0,3874,3874,3874,3874,11,3455,3468,3469,3457,0,3874,3874,3874,3874,11,3457,3469,3470,3458,0,3874,3874,3874,3874,11,3458,3470,3471,3460,0,3874,3874,3874,3874,11,3460,3471,3462,3444,0,3874,3874,3874,3874,11,3463,3462,3472,3473,0,3874,3874,3874,3874,11,3464,3463,3473,3474,0,3874,3874,3874,3874,11,3464,3474,3475,3465,0,3874,3874,3874,3874,11,3476,3466,3465,3475,0,3874,3874,3874,3874,11,3477,3467,3466,3476,0,3874,3874,3874,3874,11,3478,3468,3467,3477,0,3874,3874,3874,3874,11,3469,3468,3478,3479,0,3874,3874,3874,3874,11,3469,3479,3480,3470,0,3874,3874,3874,3874,11,3481,3471,3470,3480,0,3874,3874,3874,3874,11,3462,3471,3481,3472,0,3874,3874,3874,3874,11,3473,3472,3482,3483,0,3874,3874,3874,3874,11,3474,3473,3483,3484,0,3874,3874,3874,3874,11,3485,3475,3474,3484,0,3874,3874,3874,3874,11,3486,3476,3475,3485,0,3874,3874,3874,3874,11,3487,3477,3476,3486,0,3874,3874,3874,3874,11,3478,3477,3487,3488,0,3874,3874,3874,3874,11,3489,3479,3478,3488,0,3874,3874,3874,3874,11,3490,3491,3481,3480,0,3874,3874,3874,3874,11,3482,3472,3481,3491,0,3874,3874,3874,3874,11,3451,3443,3442,3446,0,3874,3874,3874,3874,11,3454,3443,3451,3453,0,3874,3874,3874,3874,11,3459,3443,3454,3456,0,3874,3874,3874,3874,11,2787,3492,3390,3353,0,3875,3876,3857,3856,11,3398,3492,2787,3360,0,3865,3876,3875,3866,11,3401,3493,3394,3494,0,3870,3877,3861,3878,11,3495,3496,3497,3498,0,3879,3879,3879,3879,11,3499,3497,3496,3500,0,3879,3879,3879,3879,10,2316,2321,2314,0,2678,2683,2676,10,1269,2336,1270,0,3880,2698,2703,10,2743,1275,1277,0,3800,2705,3801,10,2353,2352,2793,0,2724,2723,3186,10,2394,2393,2484,0,2765,2764,2857,10,2397,2396,2424,0,2768,2767,2795,10,2391,2476,2389,0,2762,2849,2760,10,2493,2491,2496,0,2866,2864,2869,10,2504,2508,2819,0,2877,2881,3235,10,2799,2119,2122,0,3199,3198,3228,10,2518,2106,2123,0,2893,2904,2894,10,2610,2641,2611,0,2992,3023,2993,10,2738,2807,2739,0,3123,3212,3124,10,2407,2494,2408,0,2778,3232,2779,11,2303,2296,2743,1272,0,2665,2658,3800,2702,10,2619,2649,2732,0,3001,3033,3117,11,2300,1270,2336,2338,0,2662,2703,2698,3881,10,1504,2342,1269,0,3187,2710,3880,10,1538,2794,1507,0,3191,2701,2700,10,2630,2647,2627,0,3012,3029,3009,10,2419,2451,2420,0,2790,2822,2791,10,2846,2844,2851,0,3261,3259,3266,10,2353,2881,2354,0,3301,3300,3753,10,2923,3013,2922,0,3343,3435,3342,10,2926,2953,2927,0,3346,3373,3347,10,2920,3006,3002,0,3340,3428,3424,10,3023,3025,3020,0,3445,3447,3442,10,3035,3342,3036,0,3457,3802,3458,10,3323,1936,1935,0,3766,3796,3767,10,3047,1919,3050,0,3471,3476,3475,10,3138,3140,3171,0,3569,3571,3602,10,2850,3301,3181,0,3265,3735,3614,10,3267,3266,3330,0,3701,3700,3779,10,2934,2937,3022,0,3354,3357,3799,10,3304,3136,3302,0,3738,3567,3736,10,3147,3260,3178,0,3578,3694,3611,11,1609,1608,2873,2872,0,3285,3289,3288,3286,11,1616,2835,2833,1615,0,3283,3250,3248,3293,11,2867,2864,2874,1613,0,3280,3277,3290,3292,10,3159,3156,3176,0,3590,3587,3609,10,2949,2948,2979,0,3369,3368,3399,10,3347,3350,3501,0,3807,3810,3882,10,2320,2650,2774,0,2682,3034,3166,10,2776,3344,3343,0,3168,3883,3839,10,3349,3348,3304,0,3847,3884,3738,10,2773,2607,2776,0,3165,2989,3168,10,3346,3345,3502,0,3806,3805,3885,10,3353,2788,2787,0,3813,3181,3180,10,2332,2337,2333,0,2694,2699,2695,10,2338,2301,2300,0,3881,2663,2662,10,2335,2338,2336,0,2697,3881,2698,10,2335,2301,2338,0,2697,2663,3881,10,2331,2334,2330,0,2693,2696,2692,10,2343,2331,2328,0,2714,2693,2690,10,2345,2343,2324,0,2716,2714,2686,10,2319,2308,2307,0,2681,2670,2669,10,2570,2319,2576,0,2952,2681,2958,10,2346,2344,2327,0,2717,2715,2689,10,2309,2346,2310,0,2671,2717,2672,10,2352,2317,2793,0,2723,2679,3186,10,2574,2318,2317,0,2956,2680,2679,10,2318,2574,2573,0,2680,2956,2955,10,2304,2654,2297,0,2666,3038,2659,10,2306,2304,2303,0,2668,2666,2665,10,2299,2305,2300,0,2661,2667,2662,10,2661,2666,2302,0,3045,3050,2664,10,2789,2351,2354,0,3182,2722,2725,10,2655,2562,2349,0,3039,2944,2720,10,2563,2700,2564,0,2945,3085,2946,10,2579,2676,2675,0,2961,3060,3059,10,2701,2592,2591,0,3086,2974,2973,10,2778,2623,2622,0,3171,3005,3004,10,2620,2626,2621,0,3002,3008,3003,10,2624,2628,2625,0,3006,3010,3007,10,2629,2631,2627,0,3011,3013,3009,10,3355,3354,3345,0,3815,3814,3805,10,2632,3355,2630,0,3014,3815,3012,10,2612,2642,2610,0,2994,3024,2992,10,2642,2646,2643,0,3024,3028,3025,10,2644,2777,2645,0,3026,3170,3027,10,2746,2780,3354,0,3138,3173,3814,10,2589,2613,2590,0,2971,2995,2972,10,2769,2817,2764,0,3161,3226,3156,10,3316,3360,2787,0,3751,3820,3752,10,2866,2862,2864,0,3279,3275,3277,10,3361,2865,2867,0,3821,3278,3280,10,2865,3191,3070,0,3278,3624,3501,10,2875,2876,2856,0,3294,3295,3270,10,2861,2875,2858,0,3274,3294,3272,10,2863,2861,2860,0,3276,3274,3273,10,2841,2847,2838,0,3256,3262,3253,10,3099,2841,3078,0,3530,3256,3509,10,2878,2840,2839,0,3297,3255,3254,10,2877,2878,2857,0,3296,3297,3271,10,2849,2883,2882,0,3264,3303,3302,10,2848,3105,2849,0,3263,3536,3264,10,3102,3105,2848,0,3533,3536,3263,10,3184,2834,2826,0,3617,3249,3242,10,2834,2837,2835,0,3249,3252,3250,10,2836,2830,2833,0,3251,3245,3248,10,2831,3195,3192,0,3246,3628,3625,10,2881,3317,2354,0,3300,3754,3753,10,3092,3183,2879,0,3523,3616,3298,10,3230,3091,3093,0,3664,3522,3524,10,3108,3335,3298,0,3539,3788,3732,10,3121,3229,3118,0,3552,3663,3549,10,3150,3306,3151,0,3581,3741,3582,10,3154,3149,3152,0,3585,3580,3583,10,3158,3153,3155,0,3589,3584,3586,10,3161,3157,3156,0,3592,3588,3587,10,3363,3160,3159,0,3823,3591,3590,10,3362,3363,3347,0,3822,3823,3807,10,3170,3141,3138,0,3601,3572,3569,10,3174,3170,3172,0,3605,3601,3603,10,3307,3173,3175,0,3742,3604,3606,10,3362,3309,3275,0,3822,3744,3709,10,3142,3120,3119,0,3573,3551,3550,10,3295,3340,3300,0,3729,3793,3734,10,3356,3366,3502,0,3816,3826,3885,10,2779,3366,3356,0,3172,3826,3816,10,3367,3364,3501,0,3827,3824,3882,10,3310,3365,3288,0,3745,3825,3722,10,3345,3354,3502,0,3805,3814,3885,10,3502,3354,3356,0,3885,3814,3816,10,3362,3501,3364,0,3822,3882,3824,10,3347,3501,3362,0,3807,3882,3822,10,3354,2747,2746,0,3814,3139,3138,10,3274,3362,3275,0,3708,3822,3709,10,3363,3159,3305,0,3823,3590,3740,10,2630,3355,2775,0,3012,3815,3169,10,2775,3344,2776,0,3167,3883,3168,10,2775,3355,3344,0,3169,3815,3804,10,3344,3355,3345,0,3805,3815,3805,10,3348,3305,3304,0,3884,3739,3738,10,3363,3305,3348,0,3823,3740,3808,10,3363,3348,3347,0,3823,3808,3807,10,3272,1616,1620,0,3281,3283,3282,10,3379,3343,3346,0,3840,3839,3886,10,2776,3378,2773,0,3168,3838,3165,10,3346,3502,3397,0,3886,3887,3864,10,3387,3350,3349,0,3849,3888,3847,10,2773,3377,2774,0,3165,3837,3166,10,2320,3374,2321,0,2682,3834,2683,10,3301,3389,3302,0,3735,3854,3736,10,2851,3384,2850,0,3266,3845,3265,10,3302,3386,3304,0,3736,3848,3738,10,3350,3399,3501,0,3888,3868,3889,10,3397,3395,3346,0,3864,3862,3886,10,3400,3401,3494,0,3869,3870,3878,10,3501,3399,3367,0,3889,3868,3867,10,3350,3493,3399,0,3888,3877,3868,10,3502,3366,3397,0,3887,3873,3864,10,3439,3438,3437,0,3874,3874,3874,10,3434,3441,3435,0,3874,3874,3874,10,3446,3449,3451,0,3874,3874,3874,10,3461,3443,3459,0,3874,3874,3874,10,3503,3479,3489,0,3874,3874,3874,10,3503,3480,3479,0,3874,3874,3874,10,3503,3490,3480,0,3874,3874,3874,10,3380,3485,3484,0,3841,3890,3891,10,3484,3386,3380,0,3891,3848,3841,10,3485,3380,3378,0,3890,3841,3838,10,3484,3387,3386,0,3891,3849,3848,10,3378,3379,3485,0,3838,3840,3890,10,3483,3387,3484,0,3892,3849,3891,10,3486,3485,3379,0,3892,3890,3840,10,3487,3486,3379,0,3893,3892,3840,10,3482,3387,3483,0,3893,3849,3892,10,3482,3350,3387,0,3893,3888,3849,10,3487,3379,3346,0,3893,3840,3886,10,3394,3503,3395,0,3861,3894,3862,10,3394,3493,3503,0,3861,3877,3894,10,3346,3488,3487,0,3886,3895,3893,10,3491,3350,3482,0,3895,3888,3893,10,3489,3488,3346,0,3896,3895,3886,10,3395,3503,3489,0,3862,3894,3896,10,3395,3489,3346,0,3862,3896,3886,10,3490,3350,3491,0,3896,3888,3895,10,3503,3493,3490,0,3894,3877,3896,10,3493,3350,3490,0,3877,3888,3896,10,3394,3504,3494,0,3861,3897,3878,10,3504,3394,3393,0,3897,3861,3860,10,3392,3396,3393,0,3859,3863,3860,10,3392,3395,3397,0,3859,3862,3864,10,3399,3493,3401,0,3868,3877,3870,10,3407,3492,3398,0,3898,3876,3865,10,3398,3405,3407,0,3865,3898,3898,10,3398,3388,3405,0,3865,3851,3898,10,3415,3494,3504,0,3898,3878,3897,10,3402,3400,3417,0,3898,3869,3898,10,3417,3494,3415,0,3898,3878,3898,10,3417,3400,3494,0,3898,3869,3878,10,3405,3388,3402,0,3898,3851,3898,10,3388,3400,3402,0,3851,3869,3898,10,3492,3407,3390,0,3876,3898,3857,10,3390,3407,3409,0,3857,3898,3898,10,3390,3409,3391,0,3857,3898,3858,10,3391,3409,3411,0,3858,3898,3898,10,3391,3411,3396,0,3858,3898,3863,10,3411,3413,3396,0,3898,3898,3863,10,3413,3393,3396,0,3898,3860,3863,10,3415,3504,3393,0,3898,3897,3860,10,3415,3393,3413,0,3898,3860,3898,10,3377,3371,3374,0,3837,3831,3834,10,3372,3371,3377,0,3832,3831,3837,10,3383,3389,3384,0,3844,3854,3845,10,3382,3389,3383,0,3843,3854,3844,10,3495,3505,3496,0,3879,3879,3879,10,3506,3497,3499,0,3879,3879,3879,11,2295,1275,2743,2296,0,2657,2705,3800,2658,11,2336,1269,2342,2333,0,2698,3880,2710,2695,10,2295,2339,1275,0,2657,2706,2705,11,1595,3760,3761,1596,0,3899,3900,3901,3902,11,3507,3508,3509,3510,0,3903,3904,3905,3906,11,3512,3507,3510,3511,0,3907,3903,3906,3908,11,3511,3513,3514,3512,0,3908,3909,3910,3907,11,3515,3516,3517,3518,0,3911,3912,3913,3914,11,3519,3520,3521,3522,0,3915,3916,3917,3918,11,3523,3522,3521,3524,0,3919,3918,3917,3920,11,3525,3526,3520,3519,0,3921,3922,3916,3915,11,3527,3528,3529,3530,0,3923,3924,3925,3926,10,3531,3532,3533,0,3927,3928,3929,11,3527,3534,3535,3528,0,3923,3930,3931,3924,11,3535,3534,3536,3537,0,3931,3930,3932,3933,11,3538,3539,3540,3541,0,3934,3935,3936,3937,11,3542,3540,3539,3543,0,3938,3936,3935,3939,11,3544,3545,3546,3547,0,3940,3941,3942,3943,11,3548,3549,3550,3551,0,3944,3945,3946,3947,11,3552,3553,3549,3548,0,3948,3949,3945,3944,11,3554,3555,3553,3552,0,3950,3951,3949,3948,11,3556,3557,3555,3554,0,3952,3953,3951,3950,11,3558,3559,3560,3561,0,3954,3955,3956,3957,11,3562,3563,3564,3565,0,3958,3959,3960,3961,11,3566,3567,3568,3569,0,3962,3963,3964,3965,11,3570,3571,3567,3566,0,3966,3967,3963,3962,11,3570,3572,3573,3571,0,3966,3968,3969,3967,11,3574,3575,3576,3577,0,3970,3971,3972,3973,11,3575,3578,3579,3576,0,3971,3974,3975,3972,11,3578,3580,3581,3579,0,3974,3976,3977,3975,11,3582,3583,3584,3585,0,3978,3979,3980,3981,11,3563,3518,3517,3564,0,3959,3914,3913,3960,11,3571,3519,3522,3567,0,3967,3915,3918,3963,11,3586,3587,3588,3589,0,3982,3983,3984,3985,11,3567,3522,3523,3568,0,3963,3918,3919,3964,11,3573,3525,3519,3571,0,3969,3921,3915,3967,11,3528,3590,3591,3529,0,3924,3986,3987,3925,10,3591,3590,3592,0,3987,3986,3988,11,3527,3530,3577,3576,0,3923,3926,3973,3972,11,3593,3594,3595,3596,0,3989,3990,3991,3992,11,3590,3528,3535,3597,0,3986,3924,3931,3993,10,3590,3597,3598,0,3986,3993,3994,11,3534,3527,3576,3579,0,3930,3923,3972,3975,11,3537,3599,3600,3597,0,3933,3995,3996,3993,10,3597,3600,3598,0,3993,3996,3994,11,3536,3534,3579,3581,0,3932,3930,3975,3977,11,3601,3602,3584,3583,0,3997,3998,3980,3979,11,3603,3541,3540,3604,0,3999,3937,3936,4000,11,3538,3605,3606,3539,0,3934,4001,4002,3935,11,3543,3539,3606,3607,0,3939,3935,4002,4003,11,3540,3542,3608,3604,0,3936,3938,4004,4000,11,3547,3546,3609,3610,0,3943,3942,4005,4006,11,3547,3610,3611,3544,0,3943,4006,4007,3940,11,3612,3545,3544,3613,0,4008,3941,3940,4009,11,3614,3615,3587,3586,0,4010,4011,3983,3982,11,3598,3600,3549,3553,0,3994,3996,3945,3949,11,3548,3616,3617,3552,0,3944,4012,4013,3948,11,3617,3618,3554,3552,0,4013,4014,3950,3948,11,3555,3590,3598,3553,0,3951,3986,3994,3949,11,3618,3619,3556,3554,0,4014,4015,3952,3950,11,3557,3592,3590,3555,0,3953,3988,3986,3951,11,3620,3621,3622,3623,0,4016,4017,4018,4019,11,3624,3625,3626,3627,0,4020,4021,4022,4023,10,3624,3627,3628,0,4020,4023,4024,11,3613,3618,3617,3616,0,4009,4014,4013,4012,11,3611,3619,3618,3613,0,4007,4015,4014,4009,11,3629,3607,3606,3605,0,4025,4003,4002,4001,11,3546,3543,3607,3609,0,3942,3939,4003,4005,11,3545,3542,3543,3546,0,3941,3938,3939,3942,11,3608,3542,3545,3612,0,4004,3938,3941,4008,11,3630,3603,3604,3631,0,4026,3999,4000,4027,11,3558,3604,3608,3559,0,3954,4000,4004,3955,11,3561,3631,3604,3558,0,3957,4027,4000,3954,11,3561,3625,3632,3631,0,3957,4021,4028,4027,11,3633,3634,3628,3627,0,4029,4030,4024,4023,11,3635,3636,3626,3560,0,4031,4032,4022,3956,11,3634,3595,3637,3628,0,4030,3991,4033,4024,11,3624,3628,3637,3638,0,4020,4024,4033,4034,11,3639,3616,3548,3551,0,4035,4012,3944,3947,11,3637,3595,3594,3640,0,4033,3991,3990,4036,11,3626,3636,3633,3627,0,4022,4032,4029,4023,11,3616,3639,3593,3641,0,4012,4035,3989,4037,11,3601,3513,3531,3533,0,3997,3909,3927,3929,11,3511,3510,3531,3513,0,3908,3906,3927,3909,11,3513,3601,3583,3514,0,3909,3997,3979,3910,11,3583,3582,3642,3514,0,4038,4039,4040,4041,11,3551,3550,3533,3532,0,3947,3946,3929,3928,11,3509,3637,3640,3532,0,3905,4033,4036,3928,11,3531,3510,3509,3532,0,3927,3906,3905,3928,11,3508,3638,3637,3509,0,3904,4034,4033,3905,11,3643,3644,3645,3646,0,4042,4043,4044,4045,11,3644,3643,3647,3648,0,4043,4042,4046,4047,11,3649,3650,3648,3647,0,4048,4049,4047,4046,11,3613,3616,3641,3612,0,4009,4012,4037,4008,11,3651,3652,3653,3654,0,4050,4051,4052,4053,11,3653,3655,3656,3654,0,4052,4054,4055,4053,11,3657,3656,3655,3658,0,4056,4055,4054,4057,11,3659,3657,3658,3660,0,4058,4056,4057,4059,11,3661,3662,3663,3664,0,4060,4061,4062,4063,11,3661,3665,3666,3662,0,4060,4064,4065,4061,11,3667,3668,3669,3670,0,4066,4067,4068,4069,11,3665,3670,3669,3666,0,4064,4069,4068,4065,11,3654,3645,3671,3651,0,4053,4044,4070,4050,11,3645,3654,3656,3646,0,4044,4053,4055,4045,11,3643,3646,3656,3657,0,4042,4045,4055,4056,11,3647,3643,3657,3659,0,4046,4042,4056,4058,11,3672,3673,3661,3664,0,4071,4072,4060,4063,11,3674,3665,3661,3673,0,4073,4064,4060,4072,11,3650,3649,3667,3670,0,4049,4048,4066,4069,11,3674,3650,3670,3665,0,4073,4049,4069,4064,11,3675,3676,3620,3623,0,4074,4075,4016,4019,11,3599,3537,3536,3677,0,3995,3933,3932,4076,11,3677,3536,3581,3678,0,4076,3932,3977,4077,11,3580,3679,3678,3581,0,3976,4078,4077,3977,11,3624,3638,3632,3625,0,4020,4034,4028,4021,10,3613,3544,3611,0,4009,3940,4007,11,3655,3612,3641,3658,0,4054,4008,4037,4057,11,3660,3658,3641,3593,0,4059,4057,4037,3989,11,3634,3666,3596,3595,0,4030,4065,3992,3991,11,3662,3666,3634,3633,0,4061,4065,4030,4029,11,3662,3633,3636,3663,0,4061,4029,4032,4062,11,3559,3608,3680,3560,0,3955,4004,4079,3956,10,3560,3680,3635,0,3956,4079,4031,11,3586,3620,3676,3614,0,3982,4016,4075,4010,11,3615,3614,3681,3682,0,4011,4010,4080,4081,11,3683,3675,3556,3684,0,4082,4074,3952,4083,11,3623,3557,3556,3675,0,4019,3953,3952,4074,11,3623,3622,3592,3557,0,4019,4018,3988,3953,11,3526,3525,3530,3529,0,3922,3921,3926,3925,11,3577,3530,3525,3573,0,3973,3926,3921,3969,11,3572,3574,3577,3573,0,3968,3970,3973,3969,11,3610,3685,3619,3611,0,4006,4084,4015,4007,11,3610,3609,3686,3685,0,4006,4005,4085,4084,11,3607,3629,3686,3609,0,4003,4025,4085,4005,11,3684,3687,3688,3683,0,4083,4086,4087,4082,11,3687,3689,3681,3688,0,4086,4088,4080,4087,11,3682,3681,3689,3690,0,4081,4080,4088,4089,11,3619,3685,3684,3556,0,4015,4084,4083,3952,11,3685,3686,3687,3684,0,4084,4085,4086,4083,11,3686,3629,3689,3687,0,4085,4025,4088,4086,11,3689,3629,3691,3690,0,4088,4025,4090,4089,11,3521,3520,3692,3693,0,3917,3916,4091,4092,11,3591,3592,3622,3694,0,3987,3988,4018,4093,10,3535,3537,3597,0,3931,3933,3993,11,3695,3538,3516,3515,0,4094,3934,3912,3911,11,3584,3602,3696,3678,0,3980,3998,4095,4077,10,3678,3696,3677,0,4077,4095,4076,11,3679,3585,3584,3678,0,4078,3981,3980,4077,11,3516,3538,3541,3517,0,3912,3934,3937,3913,11,3603,3564,3517,3541,0,3999,3960,3913,3937,11,3603,3630,3565,3564,0,3999,4026,3961,3960,11,3615,3682,3697,3587,0,4011,4081,4096,3983,11,3698,3588,3587,3697,0,4097,3984,3983,4096,11,3699,3523,3524,3700,0,4098,3919,3920,4099,11,3699,3701,3568,3523,0,4098,4100,3964,3919,11,3701,3702,3569,3568,0,4100,4101,3965,3964,11,3690,3698,3697,3682,0,4089,4097,4096,4081,11,3515,3700,3703,3704,0,3911,4099,4102,4103,11,3518,3699,3700,3515,0,3914,4098,4099,3911,11,3701,3699,3518,3563,0,4100,4098,3914,3959,11,3563,3562,3702,3701,0,3959,3958,4101,4100,11,3705,3570,3566,3706,0,4104,4105,4106,4107,11,3572,3570,3705,3707,0,4108,4105,4104,4109,11,3574,3572,3707,3708,0,4110,4108,4109,4111,11,3578,3575,3709,3710,0,4112,4113,4114,4115,11,3575,3574,3708,3709,0,4113,4110,4111,4114,11,3706,3566,3569,3711,0,4107,4106,4116,4117,11,3711,3569,3702,3712,0,4117,4116,4118,4119,11,3713,3714,3705,3706,0,4120,4121,4104,4107,11,3714,3715,3707,3705,0,4121,4122,4109,4104,11,3715,3716,3710,3709,0,4122,4123,4115,4114,11,3716,3717,3718,3710,0,4123,4124,4125,4115,11,3708,3707,3715,3709,0,4111,4109,4122,4114,10,3713,3706,3711,0,4120,4107,4117,10,3713,3711,3712,0,4120,4117,4119,11,3718,3717,3719,3720,0,4125,4124,4126,4127,10,3585,3720,3582,0,4128,4127,4039,10,3580,3578,3710,0,4129,4112,4115,11,3669,3668,3596,3666,0,4068,4067,3992,4065,11,3668,3660,3593,3596,0,4067,4059,3989,3992,11,3667,3659,3660,3668,0,4066,4058,4059,4067,11,3649,3647,3659,3667,0,4048,4046,4058,4066,11,3651,3664,3663,3652,0,4050,4063,4062,4051,11,3672,3664,3651,3671,0,4071,4063,4050,4070,11,3671,3645,3644,3672,0,4070,4044,4043,4071,11,3644,3648,3673,3672,0,4043,4047,4072,4071,11,3648,3650,3674,3673,0,4047,4049,4073,4072,11,3721,3722,3680,3723,0,4130,4131,4079,4132,11,3723,3680,3608,3612,0,4132,4079,4004,4008,11,3723,3612,3655,3721,0,4132,4008,4054,4130,11,3721,3655,3653,3722,0,4130,4054,4052,4131,11,3652,3663,3636,3635,0,4051,4062,4032,4031,11,3532,3640,3724,3551,0,3928,4036,4133,3947,11,3725,3724,3640,3594,0,4134,4133,4036,3990,11,3594,3593,3639,3725,0,3990,3989,4035,4134,11,3639,3551,3724,3725,0,4035,3947,4133,4134,11,3694,3526,3529,3591,0,4093,3922,3925,3987,11,3526,3694,3692,3520,0,3922,4093,4091,3916,11,3726,3693,3692,3694,0,4135,4092,4091,4093,11,3698,3690,3695,3704,0,4097,4089,4094,4103,11,3698,3704,3703,3588,0,4097,4103,4102,3984,11,3727,3586,3589,3728,0,4136,3982,3985,4137,11,3703,3700,3589,3588,0,4102,4099,3985,3984,11,3693,3728,3524,3521,0,4092,4137,3920,3917,11,3693,3726,3727,3728,0,4092,4135,4136,4137,11,3727,3726,3621,3586,0,4136,4135,4017,3982,11,3652,3680,3722,3653,0,4051,4079,4131,4052,11,3602,3601,3533,3696,0,3998,3997,3929,4095,11,3599,3533,3550,3600,0,3995,3929,3946,3996,11,3677,3696,3533,3599,0,4076,4095,3929,3995,10,3695,3691,3605,0,4094,4090,4001,10,3538,3695,3605,0,3934,4094,4001,10,3690,3691,3695,0,4089,4090,4094,10,3695,3515,3704,0,4094,3911,4103,10,3605,3691,3629,0,4001,4090,4025,10,3652,3635,3680,0,4051,4031,4079,10,3550,3549,3600,0,3946,3945,3996,11,3622,3621,3726,3694,0,4018,4017,4135,4093,11,3524,3728,3589,3700,0,3920,4137,3985,4099,11,3720,3719,3642,3582,0,4127,4126,4040,4039,11,3720,3585,3679,3718,0,4127,4128,4138,4125,11,3580,3710,3718,3679,0,4129,4115,4125,4138,11,3625,3561,3560,3626,0,4021,3957,3956,4022,11,3676,3675,3683,3688,0,4075,4074,4082,4087,11,3681,3614,3676,3688,0,4080,4010,4075,4087,10,3586,3621,3620,0,3982,4017,4016,11,3712,3702,3562,3565,0,4139,4101,3958,4140,11,3729,3730,3731,3732,0,4141,4142,4143,4144,11,1582,1581,3733,3734,0,4145,4146,4147,4148,11,3735,3736,3737,3738,0,4149,4150,4151,4152,11,3736,3739,3740,3737,0,4150,4153,4154,4151,11,3741,3742,3739,3736,0,4155,4156,4153,4150,11,3743,3744,3742,3741,0,4157,4158,4156,4155,11,3745,3746,3747,3748,0,4159,4160,4161,4162,11,3749,3750,3751,3752,0,4163,4164,4165,4166,11,3753,3754,3747,3752,0,4167,4168,4161,4166,11,3755,3756,3757,3758,0,4169,4170,4171,4172,11,3755,3759,3749,3746,0,4169,4173,4163,4160,11,3940,3733,1581,1598,0,4174,4147,4146,4175,11,3762,3763,3764,3765,0,4176,4177,4178,4179,11,3766,3767,3768,3769,0,4180,4181,4182,4183,11,3770,3766,3769,3771,0,4184,4180,4183,4185,11,3772,3773,3766,3770,0,4186,4187,4180,4184,11,3774,3775,3776,3767,0,4188,4189,4190,4181,11,3777,3778,3768,3767,0,4191,4192,4182,4181,11,3779,3780,3765,3764,0,4193,4194,4179,4178,11,3781,3782,3783,3784,0,4195,4196,4197,4198,10,3785,3786,3784,0,4199,4200,4198,11,3757,3756,3785,3787,0,4171,4170,4199,4201,11,3788,3789,3790,3791,0,4202,4203,4204,4205,11,3792,3793,3794,3795,0,4206,4207,4208,4209,11,3796,3797,3798,3799,0,4210,4211,4212,4213,11,3800,3788,3791,3801,0,4214,4202,4205,4215,11,3802,3803,3804,3805,0,4216,4217,4218,4219,11,3806,3807,3808,3809,0,4220,4221,4222,4223,11,3809,3808,3810,3811,0,4223,4222,4224,4225,11,3812,3813,3814,3815,0,4226,4227,4228,4229,11,3816,3817,3818,3819,0,4230,4231,4232,4233,11,3820,3821,3816,3819,0,4234,4235,4230,4233,11,3822,3823,3824,3825,0,4236,4237,4238,4239,11,3758,3826,3759,3755,0,4172,4240,4173,4169,11,3826,3827,3828,3759,0,4240,4241,4242,4173,11,3828,3829,3830,3750,0,4242,4243,4244,4164,11,3750,3830,3831,3751,0,4164,4244,4245,4165,11,3819,3818,3832,3833,0,4233,4232,4246,4247,11,3746,3745,3756,3755,0,4160,4159,4170,4169,11,3756,3745,3786,3785,0,4170,4159,4200,4199,11,3834,3835,3836,3837,0,4248,4249,4250,4251,11,3823,3838,3817,3824,0,4237,4252,4231,4238,11,3839,3832,3818,3840,0,4253,4246,4232,4254,11,3841,3832,3839,3842,0,4255,4246,4253,4256,11,3843,3844,3777,3845,0,4257,4258,4191,4259,11,3846,3847,3848,3849,0,4260,4261,4262,4263,11,3850,3851,3852,3853,0,4264,4265,4266,4267,11,3852,3797,3796,3853,0,4266,4211,4210,4267,11,3799,3798,3854,3855,0,4213,4212,4268,4269,11,3805,3804,3851,3850,0,4219,4218,4265,4264,11,3856,3857,3775,3858,0,4270,4271,4189,4272,11,3783,3788,3800,3859,0,4197,4202,4214,4273,11,3782,3789,3788,3783,0,4196,4203,4202,4197,11,3778,3779,3764,3768,0,4192,4193,4178,4182,11,3764,3763,3769,3768,0,4178,4177,4183,4182,11,3763,3760,3771,3769,0,4177,3900,4185,4183,11,3860,3807,3806,3861,0,4274,4221,4220,4275,11,3760,1595,1597,3771,0,3900,3899,4276,4185,11,3862,3857,3856,3863,0,4277,4271,4270,4278,11,3864,3865,3862,3863,0,4279,4280,4277,4278,11,3864,3866,3867,3865,0,4279,4281,4282,4280,11,3868,3869,3870,3871,0,4283,4284,4285,4286,11,3846,3849,3872,3873,0,4260,4263,4287,4288,11,3874,3870,3846,3873,0,4289,4285,4260,4288,11,3817,3838,3840,3818,0,4231,4252,4254,4232,11,3875,3843,3845,3876,0,4290,4257,4259,4291,11,3877,3878,3875,3879,0,4292,4293,4290,4294,11,3880,3881,3882,3883,0,4295,4296,4297,4298,11,3884,3883,3882,3885,0,4299,4298,4297,4300,11,3885,3886,3887,3884,0,4300,4301,4302,4299,11,3848,3888,3889,3890,0,4262,4303,4304,4305,11,3891,3888,3892,3893,0,4306,4303,4307,4308,10,3894,3893,3892,0,4309,4308,4307,11,3895,3868,3896,3897,0,4310,4283,4311,4312,11,3835,3841,3898,3899,0,4249,4255,4313,4314,11,3839,3900,3901,3842,0,4253,4315,4316,4256,11,3842,3901,3902,3903,0,4256,4316,4317,4318,11,3842,3903,3898,3841,0,4256,4318,4313,4255,11,3900,3888,3891,3901,0,4315,4303,4306,4316,11,3893,3904,3905,3891,0,4308,4319,4320,4306,11,3901,3891,3905,3902,0,4316,4306,4320,4317,11,3906,3771,1597,1599,0,4321,4185,4276,4322,11,3907,3908,3773,3772,0,4323,4324,4187,4186,11,3767,3766,3773,3774,0,4181,4180,4187,4188,11,3910,3911,3912,3913,0,4325,4326,4327,4328,11,3914,3915,3744,3754,0,4329,4330,4158,4168,11,3916,3742,3744,3915,0,4331,4156,4158,4330,11,3917,3740,3739,3918,0,4332,4154,4153,4333,11,3918,3739,3742,3916,0,4333,4153,4156,4331,11,3754,3753,3919,3914,0,4168,4167,4334,4329,11,3918,3920,3921,3917,0,4333,4335,4336,4332,11,3918,3916,3922,3920,0,4333,4331,4337,4335,11,3919,3923,3915,3914,0,4334,4338,4330,4329,11,3916,3915,3923,3922,0,4331,4330,4338,4337,11,3917,3921,3924,3740,0,4332,4336,4339,4154,11,3741,3736,3925,3926,0,4155,4150,4340,4341,11,3927,3928,3929,3930,0,4342,4343,4344,4345,11,3743,3741,3931,3932,0,4157,4155,4346,4347,11,3933,3934,3935,3931,0,4348,4349,4350,4346,11,3936,3932,3931,3935,0,4351,4347,4346,4350,11,3931,3741,3926,3933,0,4346,4155,4341,4348,11,3925,3736,3735,3937,0,4340,4150,4149,4352,11,3938,3939,3733,3940,0,4353,4354,4147,4174,11,3909,1600,1582,3734,0,4355,4356,4145,4148,11,4559,4391,1910,4560,0,4357,4358,4359,4360,10,3943,3944,3945,0,4361,4362,4363,11,3946,3947,3948,3949,0,4364,4365,4366,4367,11,3950,3951,3952,3953,0,4368,4369,4370,4371,11,3920,3922,3954,3955,0,4335,4337,4372,4373,11,3920,3955,3956,3921,0,4335,4373,4374,4336,11,3855,3854,3957,3958,0,4269,4268,4375,4376,11,3959,3960,3803,3810,0,4377,4378,4217,4224,11,3960,3961,3804,3803,0,4378,4379,4218,4217,11,3804,3961,3962,3851,0,4218,4379,4380,4265,11,3729,3794,3793,3730,0,4141,4208,4207,4142,11,3851,3962,3963,3852,0,4265,4380,4381,4266,10,3963,3962,3964,0,4381,4380,4382,11,3787,3965,3966,3967,0,4201,4383,4384,4385,10,3965,3859,3966,0,4383,4273,4384,11,3859,3965,3784,3783,0,4273,4383,4198,4197,11,3729,3732,3944,3943,0,4141,4144,4362,4361,11,3858,3775,3774,3968,0,4272,4189,4188,4386,11,3881,3969,3970,3882,0,4296,4387,4388,4297,11,3971,3885,3882,3970,0,4389,4300,4297,4388,11,3969,3881,3877,3972,0,4387,4296,4292,4390,11,3879,3973,3974,3975,0,4294,4391,4392,4393,11,3976,3765,3780,3929,0,4394,4179,4194,4344,11,3789,3778,3977,3790,0,4203,4192,4395,4204,11,3782,3781,3780,3779,0,4196,4195,4194,4193,11,3789,3782,3779,3778,0,4203,4196,4193,4192,11,3776,3845,3777,3767,0,4190,4259,4191,4181,10,3772,3770,3978,0,4186,4184,4396,11,3752,3751,3950,3753,0,4166,4165,4368,4167,11,3753,3950,3953,3919,0,4167,4368,4371,4334,11,3919,3953,3979,3923,0,4334,4371,4397,4338,11,3746,3749,3752,3747,0,4160,4163,4166,4161,11,3750,3749,3759,3828,0,4164,4163,4173,4242,10,3980,3860,3943,0,4398,4274,4361,11,3794,3729,3943,3981,0,4208,4141,4361,4399,11,3860,3861,3981,3943,0,4274,4275,4399,4361,11,3760,3763,3762,3761,0,3900,4177,4176,3901,11,3761,3762,3982,3941,0,3901,4176,4400,4401,11,3983,3984,3985,3871,0,4402,4403,4404,4286,11,3986,3987,3988,3979,0,4405,4406,4407,4397,11,3988,3922,3923,3979,0,4407,4337,4338,4397,11,3902,3989,3990,3903,0,4317,4408,4409,4318,11,3991,3898,3903,3990,0,4410,4313,4318,4409,11,3904,3992,3993,3994,0,4319,4411,4412,4413,11,3995,3905,3904,3994,0,4409,4320,4319,4413,11,3995,3989,3902,3905,0,4409,4408,4317,4320,11,3878,3996,3843,3875,0,4293,4414,4257,4290,11,3883,3873,3872,3880,0,4298,4288,4287,4295,11,3873,3883,3884,3874,0,4288,4298,4299,4289,11,3887,3997,3874,3884,0,4302,4415,4289,4299,11,3998,3999,3790,3977,0,4416,4417,4204,4395,11,4000,4001,3808,3807,0,4418,4419,4222,4221,11,4002,3812,3815,4003,0,4420,4226,4229,4421,11,3961,3960,3812,4002,0,4379,4378,4226,4420,11,3962,3961,4002,3964,0,4380,4379,4420,4382,11,3964,4002,4003,4004,0,4382,4420,4421,4422,11,3967,4004,3757,3787,0,4385,4422,4171,4201,11,3795,4005,4006,3792,0,4209,4423,4424,4206,11,4007,4008,3802,3805,0,4425,4426,4216,4219,11,3809,4009,4010,3806,0,4223,4427,4428,4220,11,3809,3811,4011,4009,0,4223,4225,4429,4427,11,4012,4013,3850,3853,0,4430,4431,4264,4267,11,3855,4014,4015,3799,0,4269,4432,4433,4213,11,4013,4007,3805,3850,0,4431,4425,4219,4264,11,3806,4010,4016,3861,0,4220,4428,4434,4275,11,3958,4017,4014,3855,0,4376,4435,4432,4269,11,3795,3981,4018,4005,0,4209,4399,4436,4423,11,4016,4018,3981,3861,0,4434,4436,4399,4275,11,3796,4019,4012,3853,0,4210,4437,4430,4267,11,4019,3796,3799,4015,0,4437,4210,4213,4433,11,3936,4020,3784,3786,0,4351,4438,4198,4200,11,3786,3745,3932,3936,0,4200,4159,4347,4351,11,3847,3892,3888,3848,0,4261,4307,4303,4262,11,3894,3869,3868,3895,0,4309,4284,4283,4310,11,4021,3927,3930,4022,0,4439,4342,4345,4440,11,4023,3867,4024,4025,0,4441,4282,4442,4443,10,4023,4025,3974,0,4441,4443,4392,11,4026,4027,3970,3969,0,4444,4445,4446,4447,11,4028,3971,3970,4027,0,4448,4449,4446,4445,11,4029,4026,3969,3972,0,4450,4444,4447,4451,11,4025,4030,3975,3974,0,4443,4452,4393,4392,11,4031,4032,4033,4034,0,4453,4454,4455,4456,11,4035,4036,4025,4024,0,4457,4458,4459,4460,11,4037,4038,4027,4026,0,4461,4462,4445,4444,10,4028,4027,4038,0,4448,4445,4462,11,4037,4026,4029,4039,0,4461,4444,4450,4463,10,4039,4029,4030,0,4463,4450,4464,11,4039,4030,4025,4036,0,4463,4464,4459,4458,11,4040,4036,4035,4041,0,4465,4458,4457,4466,10,4041,4035,4042,0,4466,4457,4467,11,4043,4038,4037,4044,0,4468,4462,4461,4469,11,4044,4037,4039,4045,0,4469,4461,4463,4470,11,4040,4045,4039,4036,0,4465,4470,4463,4458,11,4042,4046,4047,4048,0,4467,4471,4472,4473,10,4042,4048,4041,0,4467,4473,4466,11,4049,4040,4041,4050,0,4474,4465,4466,4475,11,4051,4043,4044,4052,0,4476,4468,4469,4477,11,4052,4044,4045,4053,0,4477,4469,4470,4478,11,4053,4045,4040,4049,0,4478,4470,4465,4474,11,4054,4049,4050,4055,0,4479,4480,4481,4482,10,4051,4052,4056,0,4483,4484,4485,11,4056,4052,4053,4057,0,4485,4484,4486,4487,11,4057,4053,4049,4054,0,4487,4486,4480,4479,11,4058,4059,4055,4050,0,4488,4489,4482,4481,11,4060,4054,4055,4061,0,4490,4479,4482,4491,11,4062,4056,4057,4063,0,4492,4485,4487,4493,11,4063,4057,4054,4060,0,4493,4487,4479,4490,11,4059,4064,4061,4055,0,4489,4494,4491,4482,11,4062,4063,4060,4061,0,4492,4493,4490,4491,11,3822,3825,3890,3889,0,4236,4239,4305,4304,11,3791,3790,3999,3731,0,4205,4204,4417,4143,11,3801,3791,3731,3730,0,4215,4205,4143,4142,11,4023,3974,3973,4065,0,4441,4392,4391,4495,11,3973,3876,4066,4065,0,4391,4291,4496,4495,11,3878,3877,3881,3880,0,4293,4292,4296,4295,11,3996,3878,3880,3872,0,4414,4293,4295,4287,11,3975,3972,3877,3879,0,4393,4390,4292,4294,11,3837,4067,4068,3833,0,4251,4497,4498,4247,11,3770,3771,3906,3978,0,4184,4185,4321,4396,11,4069,4021,3631,3632,0,4499,4439,4500,4501,11,4070,4069,3632,3638,0,4502,4499,4501,4503,11,3933,3926,3712,3565,0,4348,4341,4504,4505,11,3926,3925,4071,3713,0,4341,4340,4506,4507,10,3926,3713,3712,0,4341,4507,4504,11,3930,3929,3780,3781,0,4345,4344,4194,4195,11,3941,3982,3928,4072,0,4401,4400,4343,4508,11,3942,3941,4072,4073,0,4509,4401,4508,4510,11,4073,3938,3940,3942,0,4510,4353,4174,4509,11,3976,3929,3928,3982,0,4394,4344,4343,4400,11,3976,3982,3762,3765,0,4394,4400,4176,4179,11,3958,3957,3793,3792,0,4376,4375,4207,4206,11,4017,3958,3792,4006,0,4435,4376,4206,4424,11,3944,3732,3824,3817,0,4362,4144,4238,4231,11,3816,3945,3944,3817,0,4230,4363,4362,4231,11,3945,3816,3821,4074,0,4363,4230,4235,4511,11,3963,3964,4004,3967,0,4381,4382,4422,4385,11,3797,3963,3967,3966,0,4211,4381,4385,4384,11,3966,3859,3798,3797,0,4384,4273,4212,4211,11,3798,3859,3800,3854,0,4212,4273,4214,4268,11,3854,3800,3801,3957,0,4268,4214,4215,4375,11,3957,3801,3730,3793,0,4375,4215,4142,4207,11,3734,3733,3939,4075,0,4148,4147,4354,4512,11,3734,4075,4076,3909,0,4148,4512,4513,4355,11,4077,3909,4076,4078,0,4514,4355,4513,4515,11,3939,3938,4079,4080,0,4354,4353,4516,4517,11,4075,3939,4080,4081,0,4512,4354,4517,4518,11,4075,4081,4082,4076,0,4512,4518,4519,4513,11,4076,4082,4083,4078,0,4513,4519,4520,4515,11,4010,4009,4084,4016,0,4428,4427,4521,4434,11,4018,4016,4084,4005,0,4436,4434,4521,4423,11,4085,4086,3978,3906,0,4522,4523,4396,4321,11,3748,3743,3932,3745,0,4162,4157,4347,4159,11,3743,3748,3754,3744,0,4157,4162,4168,4158,10,3748,3747,3754,0,4162,4161,4168,11,3807,3860,3980,3949,0,4221,4274,4398,4367,11,3946,3949,3980,4087,0,4364,4367,4398,4524,11,4088,4089,3946,4087,0,4525,4526,4364,4524,11,3949,3948,4000,3807,0,4367,4366,4418,4221,10,3827,4090,3828,0,4241,4527,4242,11,4091,3814,3948,3947,0,4528,4228,4366,4365,11,4092,4093,4091,3947,0,4529,4530,4528,4365,11,3865,3867,4023,4065,0,4280,4282,4441,4495,11,3857,3862,4065,4066,0,4271,4277,4495,4496,11,4094,4024,3867,3866,0,4531,4442,4282,4281,11,4024,4094,4042,4035,0,4460,4532,4467,4457,11,3912,3911,3738,3737,0,4327,4326,4152,4151,11,3924,3912,3737,3740,0,4339,4327,4151,4154,11,3758,3757,4004,4003,0,4172,4171,4422,4421,11,3826,3758,4003,3815,0,4240,4172,4421,4229,11,3827,3826,3815,3814,0,4241,4240,4229,4228,11,4091,4090,3827,3814,0,4528,4527,4241,4228,11,4093,4095,4090,4091,0,4530,4533,4527,4528,11,3512,3514,4072,3927,0,4534,4535,4508,4342,11,4073,4072,3514,3642,0,4510,4508,4535,4536,11,3507,4070,3638,3508,0,4537,4502,4503,4538,11,4070,3507,3512,3927,0,4502,4537,4534,4342,11,4069,4070,3927,4021,0,4499,4502,4342,4439,11,3934,4021,4022,3935,0,4349,4439,4440,4350,11,3934,3630,3631,4021,0,4349,4539,4500,4439,11,3934,3933,3565,3630,0,4349,4348,4505,4539,11,4071,3925,3937,3715,0,4506,4340,4352,4540,10,3719,3717,3938,0,4541,4542,4353,11,4080,4079,3937,3735,0,4517,4516,4352,4149,11,3937,4079,3716,3715,0,4352,4516,4543,4540,11,3717,3716,4079,3938,0,4542,4543,4516,4353,11,4081,4080,3735,3738,0,4518,4517,4149,4152,11,4081,3738,3911,4082,0,4518,4152,4326,4519,11,4082,3911,3910,4083,0,4519,4326,4325,4520,11,4094,4034,4046,4042,0,4532,4544,4471,4467,11,3866,4031,4034,4094,0,4281,4453,4456,4531,11,4096,4031,3866,3864,0,4545,4453,4281,4279,11,4097,3825,3824,3732,0,4546,4239,4238,4144,11,3731,3999,4097,3732,0,4143,4417,4546,4144,11,3983,3871,3870,3874,0,4402,4286,4285,4289,11,3997,3984,3983,3874,0,4415,4403,4402,4289,11,3985,3896,3868,3871,0,4404,4311,4283,4286,11,3847,3846,3870,3869,0,4261,4260,4285,4284,11,3835,3899,4098,4099,0,4249,4314,4547,4548,11,3834,3837,3833,3832,0,4248,4251,4247,4246,11,4100,4101,4102,4103,0,4549,4550,4551,4552,11,4101,4100,3893,3894,0,4550,4549,4308,4309,11,4100,3992,3904,3893,0,4549,4411,4319,4308,11,4103,4104,3992,4100,0,4552,4553,4411,4549,11,3895,4102,4101,3894,0,4310,4551,4550,4309,11,4102,3895,4105,4099,0,4551,4310,4554,4548,11,3899,4106,4104,4103,0,4314,4555,4553,4552,10,3899,4103,4098,0,4314,4552,4547,11,3992,4104,4107,3993,0,4411,4553,4556,4412,10,4107,4104,4106,0,4556,4553,4555,11,3899,3898,3991,4106,0,4314,4313,4410,4555,11,3836,3835,4099,4105,0,4250,4249,4548,4554,11,3836,4105,4108,4109,0,4250,4554,4557,4558,11,3834,3832,3841,3835,0,4248,4246,4255,4249,11,4103,4102,4099,4098,0,4552,4551,4548,4547,11,3892,3847,3869,3894,0,4307,4261,4284,4309,11,4074,4088,4087,3945,0,4511,4525,4524,4363,11,3772,3978,4086,3907,0,4186,4396,4523,4323,11,3836,4109,4067,3837,0,4250,4558,4497,4251,11,4090,4095,3829,3828,0,4527,4533,4243,4242,11,3751,3831,3951,3950,0,4165,4245,4369,4368,11,4043,4051,4110,4111,0,4468,4476,4559,4560,11,4051,4056,4112,4110,0,4483,4485,4561,4562,11,3858,4113,4114,3856,0,4272,4563,4564,4270,11,3863,3856,4114,4115,0,4278,4270,4564,4565,11,3819,3833,4068,3820,0,4233,4247,4498,4234,11,3971,4028,4116,4117,0,4449,4448,4566,4567,11,4028,4038,4118,4116,0,4448,4462,4568,4566,11,4038,4043,4111,4118,0,4462,4468,4560,4568,11,4066,3776,3775,3857,0,4496,4190,4189,4271,11,4030,4029,3972,3975,0,4464,4450,4451,4569,11,3778,3777,3844,3977,0,4192,4191,4258,4395,10,3862,3865,4065,0,4277,4280,4495,11,3954,3922,3988,3987,0,4372,4337,4407,4406,11,3986,3979,3953,3952,0,4405,4397,4371,4370,11,4119,3924,3921,3956,0,4570,4339,4336,4374,11,3912,3924,4119,3913,0,4327,4339,4570,4328,11,4105,3895,3897,4108,0,4554,4310,4312,4557,11,3946,4089,4092,3947,0,4364,4526,4529,4365,11,1604,1600,3909,4077,0,4571,4356,4355,4514,11,4096,3864,3863,4115,0,4545,4279,4278,4565,10,4096,4115,4120,0,4545,4565,4572,11,4046,4034,4033,4047,0,4471,4544,4573,4472,11,4041,4048,4058,4050,0,4466,4473,4574,4475,11,4032,4031,4096,4120,0,4454,4453,4545,4572,11,4056,4062,4121,4112,0,4485,4492,4575,4561,11,4062,4061,4064,4121,0,4492,4491,4494,4575,11,3774,3773,3908,3968,0,4188,4187,4324,4386,11,3885,3971,4117,3886,0,4300,4389,4576,4301,11,1599,1602,4085,3906,0,4322,4577,4522,4321,11,3822,3889,4122,3823,0,4236,4304,4578,4237,11,3839,3840,4122,3900,0,4253,4254,4578,4315,11,3889,3888,3900,4122,0,4304,4303,4315,4578,11,4122,3840,3838,3823,0,4578,4254,4252,4237,11,4123,3890,3825,4097,0,4579,4305,4239,4546,11,3848,3890,4123,3849,0,4262,4305,4579,4263,11,3998,4123,4097,3999,0,4416,4579,4546,4417,11,3977,3844,4124,3998,0,4395,4258,4580,4416,11,3843,3996,3872,3849,0,4257,4414,4287,4263,11,3843,3849,4124,3844,0,4257,4263,4580,4258,11,4124,3849,4123,3998,0,4580,4263,4579,4416,11,3960,3959,3813,3812,0,4378,4377,4227,4226,11,3813,4000,3948,3814,0,4227,4418,4366,4228,11,4022,4020,3936,3935,0,4440,4438,4351,4350,11,3930,3781,4020,4022,0,4345,4195,4438,4440,10,4020,3781,3784,0,4438,4195,4198,11,3810,3808,4001,3959,0,4224,4222,4419,4377,11,4000,3813,3959,4001,0,4418,4227,4377,4419,11,3803,3802,3811,3810,0,4217,4216,4225,4224,11,3811,3802,4008,4011,0,4225,4216,4426,4429,10,4072,3928,3927,0,4508,4343,4342,11,3845,3776,4066,3876,0,4259,4190,4496,4291,11,4125,4126,4006,4005,0,4581,4582,4424,4423,11,4007,4127,4128,4008,0,4425,4583,4584,4426,11,4008,4128,4129,4011,0,4426,4584,4585,4429,11,4130,4131,4013,4012,0,4586,4587,4431,4430,11,4014,4132,4133,4015,0,4432,4588,4589,4433,11,4131,4127,4007,4013,0,4587,4583,4425,4431,11,4017,4134,4132,4014,0,4435,4590,4588,4432,11,4135,4130,4012,4019,0,4591,4586,4430,4437,11,4015,4133,4135,4019,0,4433,4589,4591,4437,11,4009,4136,4137,4084,0,4427,4592,4593,4521,11,4126,4134,4017,4006,0,4582,4590,4435,4424,11,4137,4125,4005,4084,0,4593,4581,4423,4521,11,4011,4129,4136,4009,0,4429,4585,4592,4427,11,3875,3876,3973,3879,0,4290,4291,4391,4294,10,3994,3989,3995,0,4413,4408,4409,11,3990,3989,3994,3993,0,4409,4408,4413,4412,11,4107,3991,3990,3993,0,4556,4410,4409,4412,10,4107,4106,3991,0,4556,4555,4410,10,3797,3852,3963,0,4211,4266,4381,10,3795,3794,3981,0,4209,4208,4399,11,3785,3784,3965,3787,0,4199,4198,4383,4201,11,3943,3945,4087,3980,0,4361,4363,4524,4398,11,3719,3938,4073,3642,0,4541,4353,4510,4536,11,4138,4139,4140,4141,0,4594,4595,4596,4597,11,4141,4140,4142,4143,0,4597,4596,4598,4599,11,4143,4142,4144,4145,0,4599,4598,4600,4601,11,4146,4147,4148,4149,0,4602,4603,4604,4605,11,4150,4151,4152,4153,0,4606,4607,4608,4609,11,4154,4155,4150,4153,0,4610,4611,4606,4609,11,4151,4156,4157,4152,0,4607,4612,4613,4608,11,4158,4159,4160,4161,0,4614,4615,4616,4617,10,4162,4163,4164,0,4618,4619,4620,11,4165,4166,4160,4159,0,4621,4622,4616,4615,11,4165,4167,4168,4166,0,4621,4623,4624,4622,11,4169,4170,4171,4172,0,4625,4626,4627,4628,11,4173,4174,4170,4169,0,4629,4630,4626,4625,11,4175,4176,4177,4178,0,4631,4632,4633,4634,11,4179,4180,4181,4182,0,4635,4636,4637,4638,11,4183,4179,4182,4184,0,4639,4635,4638,4640,11,4185,4183,4184,4186,0,4641,4639,4640,4642,11,4187,4185,4186,4188,0,4643,4641,4642,4644,11,4189,4190,4191,4192,0,4645,4646,4647,4648,11,4193,4194,4195,4196,0,4649,4650,4651,4652,11,4197,4198,4199,4200,0,4653,4654,4655,4656,11,4198,4201,4202,4199,0,4654,4657,4658,4655,11,4202,4201,4203,4204,0,4658,4657,4659,4660,11,4205,4206,4207,4208,0,4661,4662,4663,4664,11,4208,4207,4209,4210,0,4664,4663,4665,4666,11,4210,4209,4211,4212,0,4666,4665,4667,4668,11,4213,4214,4215,4216,0,4669,4670,4671,4672,11,4194,4193,4146,4149,0,4650,4649,4602,4605,11,4201,4198,4153,4152,0,4657,4654,4609,4608,11,4217,4218,4219,4220,0,4673,4674,4675,4676,11,4198,4197,4154,4153,0,4654,4653,4610,4609,11,4203,4201,4152,4157,0,4659,4657,4608,4613,11,4221,4222,4159,4223,0,4677,4678,4615,4679,10,4223,4159,4158,0,4679,4615,4614,11,4206,4161,4160,4207,0,4662,4617,4616,4663,11,4224,4225,4226,4227,0,4680,4681,4682,4683,11,4228,4229,4165,4222,0,4684,4685,4621,4678,10,4222,4165,4159,0,4678,4621,4615,11,4207,4160,4166,4209,0,4663,4616,4622,4665,11,4229,4228,4230,4231,0,4685,4684,4686,4687,10,4229,4231,4167,0,4685,4687,4623,11,4209,4166,4168,4211,0,4665,4622,4624,4667,11,4232,4214,4213,4233,0,4688,4670,4669,4689,11,4234,4235,4169,4172,0,4690,4691,4625,4628,11,4236,4237,4171,4170,0,4692,4693,4627,4626,11,4174,4238,4236,4170,0,4630,4694,4692,4626,11,4239,4173,4169,4235,0,4695,4629,4625,4691,11,4178,4240,4241,4175,0,4634,4696,4697,4631,11,4242,4240,4178,4177,0,4698,4696,4634,4633,11,4243,4244,4177,4176,0,4699,4700,4633,4632,11,4245,4217,4220,4246,0,4701,4673,4676,4702,11,4228,4184,4182,4230,0,4684,4640,4638,4686,11,4179,4183,4247,4248,0,4635,4639,4703,4704,11,4185,4249,4247,4183,0,4641,4705,4703,4639,11,4228,4222,4186,4184,0,4684,4678,4642,4640,11,4187,4250,4249,4185,0,4643,4706,4705,4641,11,4222,4221,4188,4186,0,4678,4677,4644,4642,11,4251,4252,4253,4254,0,4707,4708,4709,4710,11,4255,4256,4257,4258,0,4711,4712,4713,4714,10,4255,4258,4259,0,4711,4714,4715,11,4244,4248,4247,4249,0,4700,4704,4703,4705,11,4242,4244,4249,4250,0,4698,4700,4705,4706,11,4260,4237,4236,4238,0,4716,4693,4692,4694,11,4238,4174,4175,4241,0,4694,4630,4631,4697,11,4174,4173,4176,4175,0,4630,4629,4632,4631,11,4239,4243,4176,4173,0,4695,4699,4632,4629,11,4235,4234,4261,4262,0,4691,4690,4717,4718,11,4239,4235,4191,4190,0,4695,4691,4647,4646,11,4235,4262,4192,4191,0,4691,4718,4648,4647,11,4263,4259,4192,4262,0,4719,4715,4648,4718,11,4256,4264,4265,4257,0,4712,4720,4721,4713,11,4258,4266,4267,4189,0,4714,4722,4723,4645,11,4268,4224,4264,4256,0,4724,4680,4720,4712,11,4255,4269,4268,4256,0,4711,4725,4724,4712,11,4179,4248,4270,4180,0,4635,4704,4726,4636,11,4268,4271,4225,4224,0,4724,4727,4681,4680,11,4258,4257,4265,4266,0,4714,4713,4721,4722,11,4226,4270,4248,4272,0,4682,4726,4704,4728,11,4162,4145,4232,4163,0,4618,4601,4688,4619,11,4143,4145,4162,4141,0,4599,4601,4618,4597,11,4145,4144,4214,4232,0,4601,4600,4670,4688,11,4214,4144,4273,4215,0,4729,4730,4731,4732,11,4180,4164,4163,4181,0,4636,4620,4619,4637,11,4271,4268,4138,4164,0,4727,4724,4594,4620,11,4162,4164,4138,4141,0,4618,4620,4594,4597,11,4268,4269,4139,4138,0,4724,4725,4595,4594,11,4274,4275,4276,4277,0,4733,4734,4735,4736,11,4278,4276,4275,4279,0,4737,4735,4734,4738,11,4280,4278,4279,4281,0,4739,4737,4738,4740,11,4272,4248,4244,4243,0,4728,4704,4700,4699,11,4282,4283,4284,4285,0,4741,4742,4743,4744,11,4282,4285,4286,4287,0,4741,4744,4745,4746,11,4288,4289,4287,4286,0,4747,4748,4746,4745,11,4290,4291,4289,4288,0,4749,4750,4748,4747,11,4292,4293,4294,4295,0,4751,4752,4753,4754,11,4294,4293,4296,4297,0,4753,4752,4755,4756,11,4298,4299,4300,4301,0,4757,4758,4759,4760,11,4297,4296,4298,4301,0,4756,4755,4757,4760,11,4285,4284,4302,4274,0,4744,4743,4761,4733,11,4274,4277,4286,4285,0,4733,4736,4745,4744,11,4276,4288,4286,4277,0,4735,4747,4745,4736,11,4278,4290,4288,4276,0,4737,4749,4747,4735,11,4303,4295,4294,4304,0,4762,4754,4753,4763,11,4294,4297,4305,4304,0,4753,4756,4764,4763,11,4281,4301,4300,4280,0,4740,4760,4759,4739,11,4305,4297,4301,4281,0,4764,4756,4760,4740,11,4253,4306,4307,4254,0,4709,4765,4766,4710,11,4168,4167,4231,4308,0,4624,4623,4687,4767,11,4211,4168,4308,4309,0,4667,4624,4767,4768,11,4309,4310,4212,4211,0,4768,4769,4668,4667,11,4263,4269,4255,4259,0,4719,4725,4711,4715,10,4244,4242,4177,0,4700,4698,4633,11,4272,4243,4287,4289,0,4728,4699,4746,4748,11,4291,4226,4272,4289,0,4750,4682,4728,4748,11,4227,4296,4264,4224,0,4683,4755,4720,4680,11,4293,4265,4264,4296,0,4752,4721,4720,4755,11,4266,4265,4293,4292,0,4722,4721,4752,4751,11,4267,4311,4239,4189,0,4723,4770,4695,4645,10,4189,4239,4190,0,4645,4695,4646,11,4217,4245,4306,4253,0,4673,4701,4765,4709,11,4246,4312,4313,4245,0,4702,4771,4772,4701,11,4314,4315,4187,4307,0,4773,4774,4643,4766,11,4254,4307,4187,4188,0,4710,4766,4643,4644,11,4221,4251,4254,4188,0,4677,4707,4710,4644,11,4156,4158,4161,4157,0,4612,4614,4617,4613,11,4157,4161,4206,4203,0,4613,4617,4662,4659,11,4206,4205,4204,4203,0,4662,4661,4660,4659,11,4240,4242,4250,4316,0,4696,4698,4706,4775,11,4240,4316,4317,4241,0,4696,4775,4776,4697,11,4317,4260,4238,4241,0,4776,4716,4694,4697,11,4315,4314,4318,4319,0,4774,4773,4777,4778,11,4319,4318,4313,4320,0,4778,4777,4772,4779,11,4312,4321,4320,4313,0,4771,4780,4779,4772,11,4315,4316,4250,4187,0,4774,4775,4706,4643,11,4319,4317,4316,4315,0,4778,4776,4775,4774,11,4320,4260,4317,4319,0,4779,4716,4776,4778,11,4320,4321,4322,4260,0,4779,4780,4781,4716,11,4323,4151,4150,4324,0,4782,4607,4606,4783,11,4223,4325,4251,4221,0,4679,4784,4707,4677,10,4165,4229,4167,0,4621,4685,4623,11,4326,4148,4147,4171,0,4785,4604,4603,4627,11,4309,4308,4327,4233,0,4768,4767,4786,4689,10,4309,4233,4213,0,4768,4689,4669,11,4213,4216,4310,4309,0,4669,4672,4769,4768,11,4172,4171,4147,4146,0,4628,4627,4603,4602,11,4234,4172,4146,4193,0,4690,4628,4602,4649,11,4234,4193,4196,4261,0,4690,4649,4652,4717,11,4328,4312,4246,4220,0,4787,4771,4702,4676,11,4220,4219,4329,4328,0,4676,4675,4788,4787,11,4155,4154,4330,4331,0,4611,4610,4789,4790,11,4330,4154,4197,4332,0,4789,4610,4653,4791,11,4332,4197,4200,4333,0,4791,4653,4656,4792,11,4328,4329,4321,4312,0,4787,4788,4780,4771,11,4334,4331,4148,4335,0,4793,4790,4604,4794,11,4331,4330,4149,4148,0,4790,4789,4605,4604,11,4149,4330,4332,4194,0,4605,4789,4791,4650,11,4194,4332,4333,4195,0,4650,4791,4792,4651,11,4336,4337,4199,4202,0,4795,4796,4797,4798,11,4336,4202,4204,4338,0,4795,4798,4799,4800,11,4338,4204,4205,4339,0,4800,4799,4801,4802,11,4340,4208,4210,4341,0,4803,4804,4805,4806,11,4339,4205,4208,4340,0,4802,4801,4804,4803,11,4337,4342,4200,4199,0,4796,4807,4808,4797,11,4342,4343,4333,4200,0,4807,4809,4810,4808,11,4336,4344,4345,4337,0,4795,4811,4812,4796,11,4338,4346,4344,4336,0,4800,4813,4811,4795,11,4341,4347,4346,4340,0,4806,4814,4813,4803,11,4347,4341,4348,4349,0,4814,4806,4815,4816,11,4339,4340,4346,4338,0,4802,4803,4813,4800,10,4345,4342,4337,0,4812,4807,4796,10,4345,4343,4342,0,4812,4809,4807,11,4350,4349,4348,4351,0,4817,4816,4815,4818,10,4216,4215,4351,0,4819,4732,4818,10,4212,4341,4210,0,4820,4806,4805,11,4298,4296,4227,4299,0,4757,4755,4683,4758,11,4299,4227,4226,4291,0,4758,4683,4682,4750,11,4300,4299,4291,4290,0,4759,4758,4750,4749,11,4280,4300,4290,4278,0,4739,4759,4749,4737,11,4284,4283,4292,4295,0,4743,4742,4751,4754,11,4284,4295,4303,4302,0,4743,4754,4762,4761,11,4302,4303,4275,4274,0,4761,4762,4734,4733,11,4304,4279,4275,4303,0,4763,4738,4734,4762,11,4279,4304,4305,4281,0,4738,4763,4764,4740,11,4311,4352,4353,4354,0,4770,4821,4822,4823,11,4354,4243,4239,4311,0,4823,4699,4695,4770,11,4354,4353,4287,4243,0,4823,4822,4746,4699,11,4282,4287,4353,4352,0,4741,4746,4822,4821,11,4283,4267,4266,4292,0,4742,4723,4722,4751,11,4355,4271,4164,4180,0,4824,4727,4620,4636,11,4271,4355,4356,4225,0,4727,4824,4825,4681,11,4225,4356,4270,4226,0,4681,4825,4726,4682,11,4355,4180,4270,4356,0,4824,4636,4726,4825,11,4325,4223,4158,4156,0,4784,4679,4614,4612,11,4156,4151,4323,4325,0,4612,4607,4782,4784,11,4357,4325,4323,4324,0,4826,4784,4782,4783,11,4326,4321,4329,4335,0,4785,4780,4788,4794,11,4329,4219,4334,4335,0,4788,4675,4793,4794,11,4358,4359,4218,4217,0,4827,4828,4674,4673,11,4218,4331,4334,4219,0,4674,4790,4793,4675,11,4324,4150,4155,4359,0,4783,4606,4611,4828,11,4324,4359,4358,4357,0,4783,4828,4827,4826,11,4358,4217,4252,4357,0,4827,4673,4708,4826,11,4283,4282,4352,4311,0,4742,4741,4821,4770,11,4163,4232,4233,4327,0,4619,4688,4689,4786,11,4231,4230,4181,4163,0,4687,4686,4637,4619,11,4163,4327,4308,4231,0,4619,4786,4767,4687,10,4326,4237,4322,0,4785,4693,4781,10,4171,4237,4326,0,4627,4693,4785,10,4321,4326,4322,0,4780,4785,4781,10,4326,4335,4148,0,4785,4794,4604,10,4237,4260,4322,0,4693,4716,4781,10,4283,4311,4267,0,4742,4770,4723,10,4181,4230,4182,0,4637,4686,4638,11,4357,4252,4251,4325,0,4826,4708,4707,4784,11,4218,4359,4155,4331,0,4674,4828,4611,4790,11,4351,4215,4273,4350,0,4818,4732,4731,4817,11,4310,4216,4351,4348,0,4829,4819,4818,4815,11,4212,4310,4348,4341,0,4820,4829,4815,4806,11,4259,4258,4189,4192,0,4715,4714,4645,4648,11,4306,4318,4314,4307,0,4765,4777,4773,4766,11,4313,4318,4306,4245,0,4772,4777,4765,4701,10,4217,4253,4252,0,4673,4709,4708,11,4195,4333,4343,4196,0,4651,4792,4830,4831,11,4360,4361,4362,4363,0,4832,4833,4834,4835,11,1915,4364,4365,1899,0,4836,4837,4838,4839,11,4366,4367,4368,4369,0,4840,4841,4842,4843,11,4370,4371,4369,4368,0,4844,4845,4843,4842,11,4371,4372,4373,4369,0,4845,4846,4847,4843,11,4374,4373,4372,4375,0,4848,4847,4846,4849,11,4376,4377,4378,4379,0,4850,4851,4852,4853,11,4380,4381,4382,4383,0,4854,4855,4856,4857,11,4378,4384,4385,4381,0,4852,4858,4859,4855,11,4386,4387,4388,4389,0,4860,4861,4862,4863,11,4388,4379,4380,4390,0,4862,4853,4854,4864,11,4528,1914,1912,4402,0,4865,4866,4867,4868,11,4393,4394,4395,4396,0,4869,4870,4871,4872,11,4397,4398,4399,4400,0,4873,4874,4875,4876,11,4401,4402,4400,4399,0,4877,4868,4876,4875,11,4403,4401,4399,4404,0,4878,4877,4875,4879,11,4405,4406,4407,4398,0,4880,4881,4882,4874,11,4408,4398,4397,4409,0,4883,4874,4873,4884,11,4394,4410,4411,4395,0,4870,4885,4886,4871,11,4412,4413,4414,4415,0,4887,4888,4889,4890,10,4416,4415,4417,0,4891,4890,4892,11,4386,4418,4416,4387,0,4860,4893,4891,4861,11,4419,4420,4421,4422,0,4894,4895,4896,4897,11,4423,4424,4425,4426,0,4898,4899,4900,4901,11,4427,4428,4429,4430,0,4902,4903,4904,4905,11,4431,4432,4420,4419,0,4906,4907,4895,4894,11,4433,4434,4435,4436,0,4908,4909,4910,4911,11,4437,4438,4439,4440,0,4912,4913,4914,4915,11,4438,4441,4442,4439,0,4913,4916,4917,4914,11,4443,4444,4445,4446,0,4918,4919,4920,4921,11,4447,4448,4449,4450,0,4922,4923,4924,4925,11,3820,4448,4447,3821,0,4234,4923,4922,4235,11,4451,4452,4453,4454,0,4926,4927,4928,4929,11,4390,4455,4389,4388,0,4864,4930,4863,4862,11,4455,4390,4456,4457,0,4930,4864,4931,4932,11,4456,4383,3830,3829,0,4931,4857,4244,4243,11,4383,4382,3831,3830,0,4857,4856,4245,4244,11,4458,4449,4448,4459,0,4933,4924,4923,4934,11,4379,4388,4387,4376,0,4853,4862,4861,4850,11,4387,4416,4417,4376,0,4861,4891,4892,4850,11,4460,4461,4462,4463,0,4935,4936,4937,4938,11,4450,4464,4454,4453,0,4925,4939,4929,4928,11,4449,4458,4465,4466,0,4924,4933,4940,4941,11,4465,4458,4467,4468,0,4940,4933,4942,4943,11,4469,4408,4470,4471,0,4944,4883,4945,4946,11,4472,4473,4474,4475,0,4947,4948,4949,4950,11,4476,4477,4478,4479,0,4951,4952,4953,4954,11,4427,4430,4478,4477,0,4902,4905,4953,4952,11,4428,4480,4481,4429,0,4903,4955,4956,4904,11,4434,4476,4479,4435,0,4909,4951,4954,4910,11,4482,4483,4406,4484,0,4957,4958,4881,4959,11,4431,4419,4412,4485,0,4906,4894,4887,4960,11,4419,4422,4413,4412,0,4894,4897,4888,4887,11,4409,4397,4395,4411,0,4884,4873,4871,4886,11,4400,4396,4395,4397,0,4876,4872,4871,4873,11,4402,4392,4396,4400,0,4868,4961,4872,4876,11,4437,4440,4486,4487,0,4912,4915,4962,4963,11,1912,1911,4392,4402,0,4867,4964,4961,4868,11,4488,4489,4482,4484,0,4965,4966,4957,4959,11,4490,4489,4488,4491,0,4967,4966,4965,4968,11,4492,4493,4490,4491,0,4969,4970,4967,4968,11,4494,4495,4496,4497,0,4971,4972,4973,4974,11,4498,4475,4474,4499,0,4975,4950,4949,4976,11,4500,4499,4474,4496,0,4977,4976,4949,4973,11,4466,4464,4450,4449,0,4941,4939,4925,4924,11,4501,4502,4469,4471,0,4978,4979,4944,4946,11,4503,4504,4501,4505,0,4980,4981,4978,4982,11,4506,4507,4508,4509,0,4983,4984,4985,4986,11,4508,4507,4510,4511,0,4985,4984,4987,4988,11,4511,4510,3887,3886,0,4988,4987,4302,4301,11,4512,4513,4472,4514,0,4989,4990,4947,4991,11,4515,4516,4517,4513,0,4992,4993,4994,4990,10,4518,4517,4516,0,4995,4994,4993,11,4519,3897,3896,4494,0,4996,4312,4311,4971,11,4463,4520,4521,4467,0,4938,4997,4998,4942,11,4465,4468,4522,4523,0,4940,4943,4999,5000,11,4468,4524,4525,4522,0,4943,5001,5002,4999,11,4521,4524,4468,4467,0,4998,5001,4943,4942,11,4515,4513,4523,4522,0,4992,4990,5000,4999,11,4526,4527,4516,4515,0,5003,5004,4993,4992,11,4522,4525,4526,4515,0,4999,5002,5003,4992,11,1914,4528,4085,1602,0,4866,4865,4522,4577,11,4404,3908,3907,4403,0,4879,4324,4323,4878,11,4398,4407,4404,4399,0,4874,4882,4879,4875,11,4529,4364,1915,1916,0,5005,4837,4836,5006,11,4530,4531,3910,3913,0,5007,5008,5009,5010,11,4532,4384,4375,4533,0,5011,4858,4849,5012,11,4534,4533,4375,4372,0,5013,5012,4849,4846,11,4535,4536,4371,4370,0,5014,5015,4845,4844,11,4372,4371,4536,4534,0,4846,4845,5015,5013,11,4537,4385,4384,4532,0,5016,4859,4858,5011,11,4538,4539,4536,4535,0,5017,5018,5015,5014,11,4540,4534,4536,4539,0,5019,5013,5015,5018,11,4533,4541,4537,4532,0,5012,5020,5016,5011,11,4534,4540,4541,4533,0,5013,5019,5020,5012,11,4535,4370,4542,4538,0,5014,4844,5021,5017,11,4373,4543,4544,4369,0,4847,5022,5023,4843,11,4545,4546,4547,4548,0,5024,5025,5026,5027,11,4374,4549,4550,4373,0,4848,5028,5029,4847,11,4551,4550,4552,4553,0,5030,5029,5031,5032,11,4554,4552,4550,4549,0,5033,5031,5029,5028,11,4543,4373,4550,4551,0,5022,4847,5029,5030,11,4544,4555,4366,4369,0,5023,5034,4840,4843,11,4556,4557,4365,4558,0,5035,5036,4838,5037,11,4557,1913,1899,4365,0,5036,5038,4839,4838,11,4391,4392,1911,1910,0,4358,4961,4964,4359,10,4561,4562,4563,0,5039,5040,5041,11,4564,4565,4566,4567,0,5042,5043,5044,5045,11,4568,4569,3952,3951,0,5046,5047,4370,4369,11,4539,3955,3954,4540,0,5018,5048,5049,5019,11,3956,3955,4539,4538,0,5050,5048,5018,5017,11,4480,4570,4571,4481,0,4955,5051,5052,4956,11,4436,4572,4573,4442,0,4911,5053,5054,4917,11,4435,4574,4572,4436,0,4910,5055,5053,4911,11,4435,4479,4575,4574,0,4910,4954,5056,5055,11,4362,4361,4426,4425,0,4834,4833,4901,4900,11,4479,4478,4576,4575,0,4954,4953,5057,5056,10,4576,4577,4575,0,5057,5058,5056,11,4418,4578,4579,4580,0,4893,5059,5060,5061,10,4580,4579,4485,0,5061,5060,4960,11,4485,4412,4415,4580,0,4960,4887,4890,5061,11,4563,4363,4362,4561,0,5041,4835,4834,5039,11,4407,4406,4483,3968,0,4882,4881,4958,4386,10,3968,4483,4113,0,4386,4958,4563,11,4581,4582,4509,4508,0,5062,5063,4986,4985,11,4508,4511,4583,4581,0,4985,4988,5064,5062,11,4503,4509,4582,4584,0,4980,4986,5063,5065,11,4585,4586,4504,4587,0,5066,5067,4981,5068,11,4588,4547,4410,4394,0,5069,5026,4885,4870,11,4422,4421,4589,4409,0,4897,4896,5070,4884,11,4410,4414,4413,4411,0,4885,4889,4888,4886,11,4411,4413,4422,4409,0,4886,4888,4897,4884,11,4405,4398,4408,4469,0,4880,4874,4883,4944,10,4403,4590,4401,0,4878,5071,4877,11,4381,4385,4568,4382,0,4855,4859,5046,4856,11,4385,4537,4569,4568,0,4859,5016,5047,5046,11,4537,4541,4591,4569,0,5016,5020,5072,5047,11,4381,4380,4379,4378,0,4855,4854,4853,4852,11,4383,4456,4390,4380,0,4857,4931,4864,4854,10,4592,4561,4486,0,5073,5039,4962,11,4425,4593,4561,4362,0,4900,5074,5039,4834,11,4593,4487,4486,4561,0,5074,4963,4962,5039,11,4392,4391,4393,4396,0,4961,4358,4869,4872,11,4594,4393,4391,4559,0,5075,4869,4358,4357,11,4595,4495,3985,3984,0,5076,4972,4404,4403,11,4596,3987,3986,4591,0,5077,5078,5079,5072,11,1913,4557,4560,1910,0,5038,5036,4360,4359,11,4541,4540,4596,4591,0,5020,5019,5077,5072,11,4525,4524,4597,4598,0,5002,5001,5080,5081,11,4599,4597,4524,4521,0,5082,5080,5001,4998,11,4600,4601,4527,4602,0,5083,5084,5004,5085,11,4527,4526,4603,4602,0,5004,5003,5080,5085,11,4525,4598,4603,4526,0,5002,5081,5080,5003,11,4505,4501,4471,4604,0,4982,4978,4946,5086,11,4507,4506,4498,4499,0,4984,4983,4975,4976,11,4510,4507,4499,4500,0,4987,4984,4976,4977,11,4500,3997,3887,4510,0,4977,4415,4302,4987,11,4421,4605,4606,4589,0,4896,5087,5088,5070,11,4439,4607,4608,4440,0,4914,5089,5090,4915,11,4446,4445,4609,4610,0,4921,4920,5091,5092,11,4445,4572,4574,4609,0,4920,5053,5055,5091,11,4575,4577,4609,4574,0,5056,5058,5091,5055,11,4610,4609,4577,4611,0,5092,5091,5058,5093,11,4578,4418,4386,4611,0,5059,4893,4860,5093,11,4424,4423,4612,4613,0,4899,4898,5094,5095,11,4433,4614,4615,4434,0,4908,5096,5097,4909,11,4438,4437,4616,4617,0,4913,4912,5098,5099,11,4438,4617,4618,4441,0,4913,5099,5100,4916,11,4476,4619,4620,4477,0,4951,5101,5102,4952,11,4480,4428,4621,4622,0,4955,4903,5103,5104,11,4434,4615,4619,4476,0,4909,5097,5101,4951,11,4437,4487,4623,4616,0,4912,4963,5105,5098,11,4570,4480,4622,4624,0,5051,4955,5104,5106,11,4424,4613,4625,4593,0,4899,5095,5107,5074,11,4593,4625,4623,4487,0,5074,5107,5105,4963,11,4620,4626,4427,4477,0,5102,5108,4902,4952,11,4626,4621,4428,4427,0,5108,5103,4903,4902,11,4415,4627,4554,4417,0,4890,5109,5033,4892,11,4417,4554,4549,4376,0,4892,5033,5028,4850,11,4473,4472,4513,4517,0,4948,4947,4990,4994,11,4518,4519,4494,4497,0,4995,4996,4971,4974,11,4628,4629,4546,4545,0,5110,5111,5025,5024,11,4630,4585,4631,4632,0,5112,5066,5113,5114,10,4630,4632,4492,0,5112,5114,4969,11,4633,4582,4581,4634,0,5115,5116,5117,5118,11,4581,4583,4635,4634,0,5117,5119,5120,5118,11,4636,4584,4582,4633,0,5121,5122,5116,5115,11,4587,4637,4631,4585,0,5068,5123,5113,5066,11,4638,4639,4033,4032,0,5124,5125,4455,4454,11,4640,4632,4631,4641,0,5126,5127,5128,5129,11,4642,4633,4634,4643,0,5130,5115,5118,5131,10,4635,4643,4634,0,5120,5131,5118,11,4637,4636,4633,4644,0,5132,5121,5115,5133,10,4644,4633,4642,0,5133,5115,5130,11,4631,4637,4644,4641,0,5128,5132,5133,5129,11,4645,4640,4641,4646,0,5134,5126,5129,5135,10,4646,4641,4647,0,5135,5129,5136,11,4642,4643,4648,4649,0,5130,5131,5137,5138,11,4644,4642,4649,4650,0,5133,5130,5138,5139,11,4647,4641,4644,4650,0,5136,5129,5133,5139,11,4645,4646,4048,4047,0,5134,5135,5140,5141,10,4645,4047,4651,0,5134,5141,5142,11,4646,4647,4652,4653,0,5135,5136,5143,5144,11,4649,4648,4654,4655,0,5138,5137,5145,5146,11,4650,4649,4655,4656,0,5139,5138,5146,5147,11,4647,4650,4656,4652,0,5136,5139,5147,5143,11,4653,4652,4657,4658,0,5148,5149,5150,5151,10,4654,4659,4655,0,5152,5153,5154,11,4656,4655,4659,4660,0,5155,5154,5153,5156,11,4652,4656,4660,4657,0,5149,5155,5156,5150,11,4058,4653,4658,4661,0,5157,5148,5151,5158,11,4658,4657,4662,4663,0,5151,5150,5159,5160,11,4660,4659,4664,4665,0,5156,5153,5161,5162,11,4657,4660,4665,4662,0,5150,5156,5162,5159,11,4663,4064,4661,4658,0,5160,5163,5158,5151,11,4662,4665,4664,4663,0,5159,5162,5161,5160,11,4451,4512,4514,4452,0,4926,4989,4991,4927,11,4420,4360,4605,4421,0,4895,4832,5087,4896,11,4360,4420,4432,4361,0,4832,4895,4907,4833,11,4586,4585,4630,4666,0,5067,5066,5112,5164,11,4586,4666,4667,4502,0,5067,5164,5165,4979,11,4505,4506,4509,4503,0,4982,4983,4986,4980,11,4604,4498,4506,4505,0,5086,4975,4983,4982,11,4587,4504,4503,4584,0,5068,4981,4980,5065,11,4461,4459,4068,4067,0,4936,4934,4498,4497,11,4401,4590,4528,4402,0,4877,5071,4865,4868,11,4262,4628,4668,4263,0,5166,5110,5167,5168,11,4263,4668,4669,4269,0,5168,5167,5169,5170,11,4343,4543,4551,4196,0,5171,5022,5030,5172,11,4345,4670,4543,4343,0,5173,5174,5022,5171,10,4543,4670,4544,0,5022,5174,5023,11,4410,4547,4546,4414,0,4885,5026,5025,4889,11,4548,4594,4559,4671,0,5027,5075,4357,5175,11,4560,4672,4671,4559,0,4360,5176,5175,4357,11,4672,4560,4557,4556,0,5176,4360,5036,5035,11,4548,4547,4588,4594,0,5027,5026,5069,5075,11,4588,4394,4393,4594,0,5069,4870,4869,5075,11,4426,4571,4570,4423,0,4901,5052,5051,4898,11,4423,4570,4624,4612,0,4898,5051,5106,5094,11,4563,4450,4453,4363,0,5041,4925,4928,4835,11,4447,4450,4563,4562,0,4922,4925,5041,5040,11,4562,4074,3821,4447,0,5040,4511,4235,4922,11,4611,4577,4576,4578,0,5093,5058,5057,5059,11,4578,4576,4430,4579,0,5059,5057,4905,5060,11,4579,4430,4429,4485,0,5060,4905,4904,4960,11,4429,4481,4431,4485,0,4904,4956,4906,4960,11,4481,4571,4432,4431,0,4956,5052,4907,4906,11,4571,4426,4361,4432,0,5052,4901,4833,4907,11,4558,4365,4364,4673,0,5037,4838,4837,5177,11,4674,4673,4364,4529,0,5178,5177,4837,5005,11,4674,4529,4077,4078,0,5178,5005,5179,5180,11,4558,4675,4676,4556,0,5037,5181,5182,5035,11,4673,4677,4675,4558,0,5177,5183,5181,5037,11,4678,4677,4673,4674,0,5184,5183,5177,5178,11,4674,4078,4083,4678,0,5178,5180,5185,5184,11,4616,4623,4679,4617,0,5098,5105,5186,5099,11,4679,4623,4625,4613,0,5186,5105,5107,5095,11,4085,4528,4590,4086,0,4522,4865,5071,4523,11,4377,4376,4549,4374,0,4851,4850,5028,4848,11,4384,4377,4374,4375,0,4858,4851,4848,4849,10,4377,4384,4378,0,4851,4858,4852,11,4440,4567,4592,4486,0,4915,5045,5073,4962,11,4592,4567,4566,4680,0,5073,5045,5044,5187,11,4088,4680,4566,4089,0,4525,5187,5044,4526,11,4567,4440,4608,4564,0,5045,4915,5090,5042,10,4457,4456,4681,0,4932,4931,5188,11,4564,4443,4682,4565,0,5042,4918,5189,5043,11,4092,4565,4682,4093,0,4529,5043,5189,4530,11,4491,4666,4630,4492,0,4968,5164,5112,4969,11,4666,4488,4484,4667,0,5164,4965,4959,5165,11,4683,4493,4492,4632,0,5190,4970,4969,5114,11,4645,4683,4632,4640,0,5134,5191,5127,5126,11,4530,4368,4367,4531,0,5007,4842,4841,5008,11,4542,4370,4368,4530,0,5021,4844,4842,5007,11,4611,4386,4389,4610,0,5093,4860,4863,5092,11,4455,4446,4610,4389,0,4930,4921,5092,4863,11,4446,4455,4457,4443,0,4921,4930,4932,4918,11,4682,4443,4457,4681,0,5189,4918,4932,5188,11,4093,4682,4681,4095,0,4530,5189,5188,4533,11,4671,4144,4142,4545,0,5175,5192,5193,5024,11,4672,4273,4144,4671,0,5176,5194,5192,5175,11,4269,4669,4140,4139,0,5170,5169,5195,5196,11,4142,4140,4669,4545,0,5193,5195,5169,5024,11,4668,4628,4545,4669,0,5167,5110,5024,5169,11,4629,4628,4553,4552,0,5111,5110,5032,5031,11,4553,4628,4262,4261,0,5032,5110,5166,5197,11,4553,4261,4196,4551,0,5032,5197,5172,5030,11,4555,4544,4670,4346,0,5034,5023,5174,5198,10,4350,4556,4349,0,5199,5035,5200,11,4675,4366,4555,4676,0,5181,4840,5034,5182,11,4555,4346,4347,4676,0,5034,5198,5201,5182,11,4349,4556,4676,4347,0,5200,5035,5182,5201,11,4677,4367,4366,4675,0,5183,4841,4840,5181,11,4531,4367,4677,4678,0,5008,4841,5183,5184,11,4678,4083,3910,4531,0,5184,5185,5009,5008,11,4683,4645,4651,4639,0,5191,5134,5142,5202,11,4493,4683,4639,4638,0,4970,5190,5125,5124,11,4684,4490,4493,4638,0,5203,4967,4970,5124,11,4453,4452,4685,4363,0,4928,4927,5204,4835,11,4360,4363,4685,4605,0,4832,4835,5204,5087,11,4595,4500,4496,4495,0,5076,4977,4973,4972,11,4595,3984,3997,4500,0,5076,4403,4415,4977,11,3985,4495,4494,3896,0,4404,4972,4971,4311,11,4473,4497,4496,4474,0,4948,4974,4973,4949,11,4463,4686,4687,4520,0,4938,5205,5206,4997,11,4460,4458,4459,4461,0,4935,4933,4934,4936,11,4688,4689,4690,4691,0,5207,5208,5209,5210,11,4689,4518,4516,4690,0,5208,4995,4993,5209,11,4690,4516,4527,4601,0,5209,4993,5004,5084,11,4691,4690,4601,4692,0,5210,5209,5084,5211,11,4689,4688,4519,4518,0,5208,5207,4996,4995,11,4693,4519,4688,4686,0,5212,4996,5207,5205,11,4687,4691,4692,4520,0,5206,5210,5211,4997,10,4520,4692,4694,0,4997,5211,5213,11,4695,4692,4601,4600,0,5214,5211,5084,5083,10,4695,4694,4692,0,5214,5213,5211,11,4520,4694,4599,4521,0,4997,5213,5082,4998,11,4462,4693,4686,4463,0,4937,5212,5205,4938,11,4462,4109,4108,4693,0,4937,4558,4557,5212,11,4467,4458,4460,4463,0,4942,4933,4935,4938,11,4691,4687,4686,4688,0,5210,5206,5205,5207,11,4497,4473,4517,4518,0,4974,4948,4994,4995,11,4074,4562,4680,4088,0,4511,5040,5187,4525,11,4086,4590,4403,3907,0,4523,5071,4878,4323,11,4462,4461,4067,4109,0,4937,4936,4497,4558,11,3829,4095,4681,4456,0,4243,4533,5188,4931,11,4382,4568,3951,3831,0,4856,5046,4369,4245,11,4110,4654,4648,4111,0,5215,5145,5137,5216,11,4654,4110,4112,4659,0,5152,5217,5218,5153,11,4114,4113,4483,4482,0,4564,4563,4958,4957,11,4696,4115,4114,4489,0,5219,4565,4564,4966,10,4489,4114,4482,0,4966,4564,4957,11,4448,3820,4068,4459,0,4923,4234,4498,4934,11,4583,4117,4116,4635,0,5119,5220,5221,5120,11,4635,4116,4118,4643,0,5120,5221,5222,5131,11,4111,4648,4643,4118,0,5216,5137,5131,5222,11,4406,4405,4667,4484,0,4881,4880,5165,4959,11,4637,4587,4584,4636,0,5132,5223,5122,5121,11,4409,4589,4470,4408,0,4884,5070,4945,4883,10,4488,4666,4491,0,4965,5164,4968,11,3954,3987,4596,4540,0,5049,5078,5077,5019,11,3986,3952,4569,4591,0,5079,4370,5047,5072,11,4119,3956,4538,4542,0,5224,5050,5017,5021,11,4530,3913,4119,4542,0,5007,5010,5224,5021,11,4693,4108,3897,4519,0,5212,4557,4312,4996,11,4092,4089,4566,4565,0,4529,4526,5044,5043,11,4529,1916,1604,4077,0,5005,5006,5225,5179,11,4684,4696,4489,4490,0,5203,5219,4966,4967,11,4651,4047,4033,4639,0,5142,5141,5226,5202,11,4058,4048,4646,4653,0,5227,5140,5135,5144,11,4032,4120,4684,4638,0,4454,4572,5203,5124,11,4121,4664,4659,4112,0,5228,5161,5153,5218,11,4064,4663,4664,4121,0,5163,5160,5161,5228,11,3908,4404,4407,3968,0,4324,4879,4882,4386,11,4511,3886,4117,4583,0,4988,4301,4576,5064,11,3942,3940,1598,1596,0,4509,4174,4175,3902,11,4697,4512,4451,4454,0,5229,4989,4926,4929,11,4465,4523,4697,4466,0,4940,5000,5229,4941,11,4512,4697,4523,4513,0,4989,5229,5000,4990,11,4464,4466,4697,4454,0,4939,4941,5229,4929,11,4698,4685,4452,4514,0,5230,5204,4927,4991,11,4472,4475,4698,4514,0,4947,4950,5230,4991,11,4606,4605,4685,4698,0,5088,5087,5204,5230,11,4699,4470,4589,4606,0,5231,4945,5070,5088,11,4471,4475,4498,4604,0,4946,4950,4975,5086,11,4699,4475,4471,4470,0,5231,4950,4946,4945,11,4699,4606,4698,4475,0,5231,5088,5230,4950,11,4444,4573,4572,4445,0,4919,5054,5053,4920,11,4444,4443,4564,4608,0,4919,4918,5042,5090,11,4629,4552,4554,4627,0,5111,5031,5033,5109,11,4627,4414,4546,4629,0,5109,4889,5025,5111,10,4627,4415,4414,0,5109,4890,4889,11,4442,4573,4607,4439,0,4917,5054,5089,4914,11,4608,4607,4573,4444,0,5090,5089,5054,4919,11,4441,4433,4436,4442,0,4916,4908,4911,4917,11,4441,4618,4614,4433,0,4916,5100,5096,4908,10,4671,4545,4548,0,5175,5024,5027,11,4469,4502,4667,4405,0,4944,4979,5165,4880,11,4612,4700,4701,4613,0,5094,5232,5233,5095,11,4615,4614,4702,4703,0,5097,5096,5234,5235,11,4614,4618,4704,4702,0,5096,5100,5236,5234,11,4619,4705,4706,4620,0,5101,5237,5238,5102,11,4622,4621,4707,4708,0,5104,5103,5239,5240,11,4615,4703,4705,4619,0,5097,5235,5237,5101,11,4624,4622,4708,4709,0,5106,5104,5240,5241,11,4620,4706,4710,4626,0,5102,5238,5242,5108,11,4621,4626,4710,4707,0,5103,5108,5242,5239,11,4617,4679,4711,4712,0,5099,5186,5243,5244,11,4624,4709,4700,4612,0,5106,5241,5232,5094,11,4613,4701,4711,4679,0,5095,5233,5243,5186,11,4618,4617,4712,4704,0,5100,5099,5244,5236,11,4501,4504,4586,4502,0,4978,4981,5067,4979,10,4602,4603,4598,0,5085,5080,5081,11,4602,4598,4597,4600,0,5085,5081,5080,5083,11,4695,4600,4597,4599,0,5214,5083,5080,5082,10,4695,4599,4694,0,5214,5082,5213,10,4430,4576,4478,0,4905,5057,4953,10,4424,4593,4425,0,4899,5074,4900,11,4416,4418,4580,4415,0,4891,4893,5061,4890,11,4561,4592,4680,4562,0,5039,5073,5187,5040,11,4350,4273,4672,4556,0,5199,5194,5176,5035,11,4125,4713,4714,4126,0,5245,5246,5247,5248,11,4127,4715,4716,4128,0,5249,5250,5251,5252,11,4129,4128,4716,4717,0,5253,5252,5251,5254,11,4130,4718,4719,4131,0,5255,5256,5257,5258,11,4133,4132,4720,4721,0,5259,5260,5261,5262,11,4131,4719,4715,4127,0,5258,5257,5250,5249,11,4132,4134,4722,4720,0,5260,5263,5264,5261,11,4135,4723,4718,4130,0,5265,5266,5256,5255,11,4135,4133,4721,4723,0,5265,5259,5262,5266,11,4137,4136,4724,4725,0,5267,5268,5269,5270,11,4134,4126,4714,4722,0,5263,5248,5247,5264,11,4137,4725,4713,4125,0,5267,5270,5246,5245,11,4136,4129,4717,4724,0,5268,5253,5254,5269,11,4701,4700,4726,4727,0,5271,5272,5273,5274,11,4703,4702,4728,4729,0,5275,5276,5277,5278,11,4704,4730,4728,4702,0,5279,5280,5277,5276,11,4706,4705,4731,4732,0,5281,5282,5283,5284,11,4707,4733,4734,4708,0,5285,5286,5287,5288,11,4705,4703,4729,4731,0,5282,5275,5278,5283,11,4708,4734,4735,4709,0,5288,5287,5289,5290,11,4710,4706,4732,4736,0,5291,5281,5284,5292,11,4710,4736,4733,4707,0,5291,5292,5286,5285,11,4711,4737,4738,4712,0,5293,5294,5295,5296,11,4709,4735,4726,4700,0,5290,5289,5273,5272,11,4711,4701,4727,4737,0,5293,5271,5274,5294,11,4712,4738,4730,4704,0,5296,5295,5280,5279,11,4721,4719,4718,4723,0,5262,5257,5256,5266,11,4727,4730,4738,4737,0,5274,5280,5295,5294,11,4722,4715,4719,4720,0,5264,5250,5257,5261,11,4714,4713,4717,4716,0,5247,5246,5254,5251,11,4714,4716,4715,4722,0,5247,5251,5250,5264,11,4713,4725,4724,4717,0,5246,5270,5269,5254,10,4720,4719,4721,0,5261,5257,5262,11,4726,4728,4730,4727,0,5273,5277,5280,5274,11,4726,4735,4729,4728,0,5273,5289,5278,5277,11,4735,4734,4731,4729,0,5289,5287,5283,5278,10,4731,4734,4733,0,5283,5287,5286,11,4733,4736,4732,4731,0,5286,5292,5284,5283,11,4120,4115,4696,4684,0,4572,4565,5219,5203,10,3968,4113,3858,0,4386,4563,4272,11,3941,3942,1596,3761,0,4401,4509,3902,3901,10,4739,4740,4741,0,5297,5298,5299,11,4742,4739,4741,4743,0,5300,5297,5299,5301,11,4743,4741,4744,4745,0,5301,5299,5302,5303,10,4741,4740,4744,0,5299,5298,5302,10,4744,4740,4746,0,5302,5298,5304,11,4745,4744,4746,4747,0,5303,5302,5304,5305,11,4747,4746,4748,4749,0,5305,5304,5306,5307,10,4746,4740,4748,0,5304,5298,5306,10,4748,4740,4750,0,5306,5298,5308,11,4749,4748,4750,4751,0,5307,5306,5308,5309,11,4751,4750,4752,4753,0,5309,5308,5310,5311,10,4750,4740,4752,0,5308,5298,5310,10,4752,4740,4754,0,5310,5298,5312,11,4753,4752,4754,4755,0,5311,5310,5312,5313,11,4755,4754,4756,4757,0,5313,5312,5314,5315,10,4754,4740,4756,0,5312,5298,5314,10,4756,4740,4758,0,5314,5298,5316,11,4757,4756,4758,4759,0,5315,5314,5316,5317,11,4759,4758,4760,4761,0,5317,5316,5318,5319,10,4758,4740,4760,0,5316,5298,5318,10,4760,4740,4762,0,5318,5298,5320,11,4761,4760,4762,4763,0,5319,5318,5320,5321,11,4763,4762,4764,4765,0,5321,5320,5322,5323,10,4762,4740,4764,0,5320,5298,5322,10,4764,4740,4766,0,5322,5298,5324,11,4765,4764,4766,4767,0,5323,5322,5324,5325,11,4767,4766,4768,4769,0,5325,5324,5326,5327,10,4766,4740,4768,0,5324,5298,5326,10,4768,4740,4770,0,5326,5298,5328,11,4769,4768,4770,4771,0,5327,5326,5328,5329,11,4739,4742,4771,4770,0,5297,5300,5329,5328,10,4740,4739,4770,0,5298,5297,5328,10,4772,4773,4774,0,5297,5298,5299,11,4775,4772,4774,4776,0,5300,5297,5299,5301,11,4776,4774,4777,4778,0,5301,5299,5302,5303,10,4774,4773,4777,0,5299,5298,5302,10,4777,4773,4779,0,5302,5298,5304,11,4778,4777,4779,4780,0,5303,5302,5304,5305,11,4780,4779,4781,4782,0,5305,5304,5306,5307,10,4779,4773,4781,0,5304,5298,5306,10,4781,4773,4783,0,5306,5298,5308,11,4782,4781,4783,4784,0,5307,5306,5308,5309,11,4784,4783,4785,4786,0,5309,5308,5310,5311,10,4783,4773,4785,0,5308,5298,5310,10,4785,4773,4787,0,5310,5298,5312,11,4786,4785,4787,4788,0,5311,5310,5312,5313,11,4788,4787,4789,4790,0,5313,5312,5314,5315,10,4787,4773,4789,0,5312,5298,5314,10,4789,4773,4791,0,5314,5298,5316,11,4790,4789,4791,4792,0,5315,5314,5316,5317,11,4792,4791,4793,4794,0,5317,5316,5318,5319,10,4791,4773,4793,0,5316,5298,5318,10,4793,4773,4795,0,5318,5298,5320,11,4794,4793,4795,4796,0,5319,5318,5320,5321,11,4796,4795,4797,4798,0,5321,5320,5322,5323,10,4795,4773,4797,0,5320,5298,5322,10,4797,4773,4799,0,5322,5298,5324,11,4798,4797,4799,4800,0,5323,5322,5324,5325,11,4800,4799,4801,4802,0,5325,5324,5326,5327,10,4799,4773,4801,0,5324,5298,5326,10,4801,4773,4803,0,5326,5298,5328,11,4802,4801,4803,4804,0,5327,5326,5328,5329,11,4804,4803,4772,4775,0,5329,5328,5297,5300,10,4803,4773,4772,0,5328,5298,5297],
								"skinWeights": [0.932569,0.057957,0,0,0.979951,0,0,0,0.933563,0.063185,0,0,0.675064,0.298031,0,0,0.907368,0.082847,0,0,0.90074,0.08011,0,0,0.634963,0.294778,0.05579,0,0.927936,0.068607,0,0,0.934086,0.063749,0,0,0.988924,0,0,0,0.989408,0,0,0,0.836743,0.15401,0,0,0.919713,0.07473,0,0,0.983791,0,0,0,0.998413,0,0,0,0.99759,0,0,0,0.966657,0.006951,0,0,0.998091,0,0,0,0.998387,0,0,0,0.997517,0,0,0,0.929345,0.050736,0,0,0.800631,0.141279,0.012128,0,0.776178,0.149373,0.036946,0,0.984546,0,0,0,0.997321,0,0,0,0.997689,0,0,0,0.982086,0,0,0,0.997731,0,0,0,0.988671,0,0,0,0.997708,0,0,0,0.986337,0,0,0,0.997653,0,0,0,0.982868,0,0,0,0.996818,0,0,0,0.996276,0,0,0,0.981176,0,0,0,0.987017,0,0,0,0.996091,0,0,0,0.983687,0,0,0,0.996155,0,0,0,0.989128,0,0,0,0.995898,0,0,0,0.990115,0,0,0,0.99585,0,0,0,0.99093,0,0,0,0.996465,0,0,0,0.987319,0,0,0,0.986324,0,0,0,0.997608,0,0,0,0.913991,0.085985,0,0,0.989824,0,0,0,0.987533,0,0,0,0.820972,0.179017,0,0,0.881201,0.118791,0,0,0.978674,0,0,0,0.961009,0.027888,0,0,0.770165,0.229823,0,0,0.979665,0,0,0,0.703892,0.296101,0,0,0.977315,0,0,0,0.769136,0.230858,0,0,0.973517,0.002739,0,0,0.979887,0,0,0,0.901639,0.098327,0,0,0.842828,0.15715,0,0,0.956264,0.037344,0,0,0.646972,0.353015,0,0,0.959246,0.031343,0,0,0.649468,0.350517,0,0,0.968397,0.013004,0,0,0.761191,0.238792,0,0,0.987575,0,0,0,0.989137,0,0,0,0.997507,0,0,0,0.997483,0,0,0,0.987683,0,0,0,0.996935,0,0,0,0.985541,0,0,0,0.997039,0,0,0,0.983244,0,0,0,0.995981,0,0,0,0.981334,0,0,0,0.996379,0,0,0,0.971417,0.007099,0,0,0.994461,0,0,0,0.939977,0.05999,0,0,0.995288,0,0,0,0.995146,0,0,0,0.956305,0.037264,0,0,0.953786,0.042332,0,0,0.996181,0,0,0,0.97244,0.004911,0,0,0.996195,0,0,0,0.973698,0.00241,0,0,0.99633,0,0,0,0.983173,0,0,0,0.606478,0.393516,0,0,0.926671,0.073317,0,0,0.874732,0.125258,0,0,0.625796,0.374198,0,0,0.770755,0.229236,0,0,0.728189,0.271802,0,0,0.543756,0.456238,0,0,0.843082,0.156903,0,0,0.879021,0.120955,0,0,0.902098,0.097882,0,0,0.664209,0.335781,0,0,0.650498,0.349489,0,0,0.753186,0.246798,0,0,0.857986,0.14199,0,0,0.745108,0.254877,0,0,0.673813,0.326171,0,0,0.531161,0.468827,0,0,0.86579,0.134184,0,0,0.613049,0.386941,0,0,0.907901,0.092072,0,0,0.557843,0.442149,0,0,0.926396,0.07358,0,0,0.90713,0.092856,0,0,0.732981,0.267013,0,0,0.995841,0,0,0,0.994178,0,0,0,0.992168,0,0,0,0.988699,0,0,0,0.991904,0,0,0,0.994487,0,0,0,0.997741,0,0,0,0.98898,0,0,0,0.919916,0.08006,0,0,0.937914,0.062044,0,0,0.534866,0.462283,0,0,0.731106,0.266177,0,0,0.824262,0.168938,0,0,0.906252,0.055395,0,0,0.78333,0.086057,0,0,0.667949,0.148677,0,0,0.616129,0.243735,0,0,0.507828,0.393175,0,0,0.651749,0.316277,0,0,0.716264,0.273167,0,0,0.730224,0.263813,0,0,0.874638,0.09868,0,0,0.919999,0.056987,0,0,0.891594,0.073074,0,0,0.917442,0.062758,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.810686,0,0,0,1,0,0,0,0.862491,0,0,0,0.912347,0,0,0,1,0,0,0,1,0,0,0,0.920547,0,0,0,0.988152,0,0,0,0.972754,0,0,0,0.956372,0,0,0,0.977723,0,0,0,0.936021,0,0,0,1,0,0,0,1,0,0,0,0.945521,0,0,0,1,0,0,0,1,0,0,0,0.951749,0,0,0,0.950155,0,0,0,0.981936,0,0,0,0.951688,0,0,0,0.967783,0,0,0,0.989907,0,0,0,0.976003,0,0,0,0.964981,0,0,0,0.929181,0.065028,0,0,0.966391,0,0,0,0.834111,0,0,0,0.943169,0,0,0,0.729662,0.197251,0.072724,0,0.932636,0,0,0,0.961829,0,0,0,0.690084,0.081646,0,0,0.285239,0.179766,0,0,0.343816,0.069214,0,0,0.848869,0.109535,0,0,0.782799,0.116799,0,0,0.88803,0.094431,0,0,0.902313,0.086761,0,0,0.876455,0.09561,0,0,0.901267,0.092404,0,0,0.997413,0,0,0,0.997862,0,0,0,0.998434,0,0,0,0.998636,0,0,0,0.996573,0,0,0,0.996562,0,0,0,0.915853,0,0,0,0.940837,0,0,0,0.965103,0.004703,0,0,0.971094,0,0,0,0.985301,0,0,0,0.983158,0,0,0,0.972896,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.234483,0.003293,0,0,0.914156,0,0,0,0.796915,0,0,0,0.796915,0,0,0,0.913166,0.027831,0,0,0.960832,0,0,0,0.892803,0,0,0,0.987126,0,0,0,0.986718,0,0,0,0.973985,0,0,0,0.860537,0,0,0,0.289711,0,0,0,0.900096,0.081582,0,0,0.986595,0,0,0,0.990318,0,0,0,0.983159,0,0,0,0.9117,0,0,0,0.954781,0,0,0,0.907818,0,0,0,0.953888,0,0,0,0.934269,0,0,0,0.79701,0,0,0,0.351677,0,0,0,0.391994,0,0,0,1,0,0,0,0.895934,0,0,0,0.666529,0,0,0,0.572959,0,0,0,0.516395,0,0,0,0.796915,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.973902,0,0,0,0.956055,0,0,0,0.848638,0,0,0,0.764493,0,0,0,0.861778,0,0,0,0.95203,0.030398,0,0,0.83807,0,0,0,0.963696,0,0,0,0.908046,0.057977,0,0,0.824907,0.141185,0.01537,0,0.609154,0.389963,0,0,0.617041,0.382143,0,0,0.813766,0.184489,0,0,0.745559,0.252326,0,0,0.924783,0.070817,0,0,0.926473,0.068058,0,0,0.952243,0.026026,0,0,0.954732,0.024494,0,0,0.886277,0.062529,0,0,0.390991,0,0,0,0.368768,0,0,0,0.643091,0,0,0,0.416708,0,0,0,0.949535,0,0,0,0.968895,0,0,0,0.961861,0,0,0,0.972609,0,0,0,0.937258,0.059373,0,0,0.91115,0.086435,0,0,0.990014,0,0,0,0.987768,0,0,0,0.991811,0,0,0,0.943887,0.025773,0,0,0.899255,0.093795,0,0,0.857105,0.137822,0,0,0.539797,0,0,0,0.980324,0,0,0,0.600005,0.399368,0,0,0.78719,0.211566,0,0,0.793526,0.203815,0,0,0.741989,0.255815,0,0,0.972692,0.004451,0,0,0.98313,0,0,0,0.926436,0.073348,0,0,0.893687,0.105985,0,0,0.971206,0.007412,0,0,0.842189,0.157301,0,0,0.978553,0,0,0,0.841539,0.158081,0,0,0.970222,0.009448,0,0,0.823703,0.175971,0,0,0.913719,0.086149,0,0,0.979366,0,0,0,0.950011,0.04983,0,0,0.988127,0,0,0,0.882572,0.108451,0,0,0.854979,0.122313,0,0,0.883809,0.113614,0,0,0.983474,0,0,0,0.832933,0.090199,0,0,0.719544,0.258825,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.63755,0,0,0,0.687465,0,0,0,1,0,0,0,0.939132,0,0,0,0.932834,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.635315,0,0,0,1,0,0,0,0.736948,0,0,0,0.769935,0,0,0,0.663777,0,0,0,0.691489,0,0,0,0.863419,0,0,0,0.968013,0,0,0,0.951668,0,0,0,0.645949,0,0,0,0.773047,0,0,0,0.5,0,0,0,0.485196,0,0,0,0.723043,0,0,0,0.91866,0.072194,0,0,0.930887,0.056923,0,0,0.364598,0,0,0,0.802889,0.180225,0,0,0.792632,0.195716,0,0,0.882065,0.110596,0,0,0.953203,0.035463,0,0,0.869782,0.126241,0,0,0.906917,0.088062,0,0,0.859713,0.138455,0,0,0.926286,0.072048,0,0,0.958573,0.024485,0,0,0.903436,0.091659,0,0,0.863499,0.129271,0,0,0.880886,0.109667,0,0,0.84767,0.149079,0,0,0.82349,0.174704,0,0,0.842439,0.155844,0,0,0.821249,0.177767,0,0,0.825266,0.174435,0,0,0.688696,0.310899,0,0,0.661001,0.337992,0,0,0.946646,0.006907,0,0,0.962917,0,0,0,0.959574,0.013824,0,0,0.971247,0,0,0,0.983994,0,0,0,0.995286,0,0,0,0.947859,0.052044,0,0,0.998069,0,0,0,0.957516,0.026147,0,0,0.861833,0.136633,0,0,0.750669,0.24671,0,0,0.922808,0.070447,0,0,0.965197,0,0,0,0.908148,0.087002,0,0,0.910232,0.087023,0,0,0.932082,0.063067,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.921564,0.075606,0,0,0.978834,0,0,0,0.931807,0.060592,0,0,0.907969,0.082525,0,0,0.900813,0.080542,0,0,0.966748,0.00702,0,0,0.927539,0.069092,0,0,0.989437,0,0,0,0.988817,0,0,0,0.934533,0.063412,0,0,0.924281,0.070531,0,0,0.983845,0,0,0,0.997597,0,0,0,0.998411,0,0,0,0.998067,0,0,0,0.998378,0,0,0,0.997452,0,0,0,0.93252,0.049404,0,0,0.777012,0.153971,0.035283,0,0.801357,0.145464,0.010891,0,0.984216,0,0,0,0.981757,0,0,0,0.997657,0,0,0,0.997283,0,0,0,0.988469,0,0,0,0.99771,0,0,0,0.986259,0,0,0,0.997703,0,0,0,0.982938,0,0,0,0.997667,0,0,0,0.981451,0,0,0,0.996322,0,0,0,0.996862,0,0,0,0.987299,0,0,0,0.983977,0,0,0,0.996135,0,0,0,0.989468,0,0,0,0.996192,0,0,0,0.990346,0,0,0,0.99591,0,0,0,0.990914,0,0,0,0.995836,0,0,0,0.987128,0,0,0,0.996436,0,0,0,0.986514,0,0,0,0.997633,0,0,0,0.914015,0.085961,0,0,0.820839,0.17915,0,0,0.987521,0,0,0,0.989837,0,0,0,0.880966,0.119026,0,0,0.770108,0.229881,0,0,0.960939,0.028028,0,0,0.978544,0,0,0,0.703683,0.29631,0,0,0.979603,0,0,0,0.977211,0,0,0,0.768872,0.231123,0,0,0.901847,0.09812,0,0,0.979987,0,0,0,0.973621,0.002536,0,0,0.843063,0.156916,0,0,0.647022,0.352966,0,0,0.956254,0.037363,0,0,0.64959,0.350396,0,0,0.959288,0.031261,0,0,0.761425,0.23856,0,0,0.968486,0.012828,0,0,0.987649,0,0,0,0.989138,0,0,0,0.987669,0,0,0,0.99748,0,0,0,0.997509,0,0,0,0.985509,0,0,0,0.996927,0,0,0,0.983203,0,0,0,0.997029,0,0,0,0.981292,0,0,0,0.995967,0,0,0,0.97138,0.007172,0,0,0.996364,0,0,0,0.994443,0,0,0,0.93998,0.059985,0,0,0.995255,0,0,0,0.953821,0.042257,0,0,0.956358,0.037154,0,0,0.995127,0,0,0,0.97249,0.004806,0,0,0.99619,0,0,0,0.973744,0.002318,0,0,0.996205,0,0,0,0.983194,0,0,0,0.996337,0,0,0,0.606242,0.393751,0,0,0.625611,0.374382,0,0,0.874544,0.125447,0,0,0.926556,0.073432,0,0,0.77058,0.229412,0,0,0.728073,0.271918,0,0,0.843108,0.156877,0,0,0.543787,0.456207,0,0,0.902168,0.097812,0,0,0.879173,0.120804,0,0,0.753386,0.2466,0,0,0.65063,0.349355,0,0,0.664334,0.335655,0,0,0.858198,0.141778,0,0,0.673995,0.32599,0,0,0.745297,0.254686,0,0,0.531241,0.468747,0,0,0.865938,0.134035,0,0,0.613201,0.386787,0,0,0.907989,0.091984,0,0,0.558032,0.441958,0,0,0.926416,0.073561,0,0,0.732805,0.267189,0,0,0.907078,0.092908,0,0,0.995858,0,0,0,0.994209,0,0,0,0.992237,0,0,0,0.988906,0,0,0,0.991885,0,0,0,0.99381,0,0,0,0.997632,0,0,0,0.989016,0,0,0,0.919992,0.079985,0,0,0.938067,0.061892,0,0,0.541006,0.45593,0,0,0.733369,0.263787,0,0,0.823778,0.16883,0,0,0.900989,0.056818,0,0,0.772569,0.086872,0,0,0.657578,0.148418,0,0,0.609027,0.24288,0,0,0.500766,0.394838,0,0,0.64861,0.318213,0,0,0.723026,0.266375,0,0,0.733651,0.260318,0,0,0.890252,0.088766,0,0,0.892503,0.074288,0,0,0.92029,0.057705,0,0,0.917573,0.06329,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.986126,0,0,0,0.980975,0,0,0,1,0,0,0,0.975808,0,0,0,0.989255,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.938007,0,0,0,0.949316,0,0,0,0.856719,0,0,0,0.804076,0,0,0,0.977666,0,0,0,0.85439,0,0,0,0.99176,0,0,0,0.826503,0,0,0,0.937604,0,0,0,0.981507,0.773512,0,0,0.912818,0,0,0,0.987616,0.76166,0,0,0.979313,0.761022,0,0,0.884995,0,0,0,0.918367,0,0,0,0.788799,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.994021,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.966896,0,0,0,0.992848,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.991627,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.951022,0,0,0,1,0,0,0,0.945859,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.783853,0,0,0,0.834093,0,0,0,1,0,0,0,0.855023,0,0,0,0.859858,0,0,0,1,0,0,0,1,0,0,0,0.979211,0,0,0,0.965797,0,0,0,0.895538,0,0,0,0.900745,0,0,0,0.882228,0,0,0,0.889311,0,0,0,1,0,0,0,1,0,0,0,0.884104,0,0,0,1,0.768814,0,0,1,0.80972,0,0,0.890721,0,0,0,0.955234,0,0,0,0.977365,0,0,0,0.876002,0,0,0,0.843176,0,0,0,0.906168,0,0,0,0.949267,0,0,0,0.927806,0.063577,0,0,0.964829,0,0,0,0.821063,0,0,0,0.938199,0,0,0,0.185498,0.068449,0,0,0.958302,0.013691,0,0,0.969628,0,0,0,0.691407,0.082109,0,0,0.351974,0.069748,0,0,0.278834,0.173208,0,0,0.850192,0.108108,0,0,0.783701,0.11668,0,0,0.889501,0.092011,0,0,0.877855,0.093628,0,0,0.903244,0.084193,0,0,0.902584,0.089837,0,0,0.9958,0,0,0,0.996268,0,0,0,0.995685,0,0,0,0.996062,0,0,0,0.99063,0,0,0,0.99044,0,0,0,0.936953,0,0,0,0.914074,0,0,0,0.966402,0,0,0,0.959062,0.002241,0,0,0.982889,0,0,0,0.968548,0,0,0,0.980478,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.961655,0.01804,0,0,0.184785,0,0,0,0.161686,0,0,0,0.909724,0.01815,0,0,0.262366,0,0,0,0.975263,0,0,0,0.925227,0.068636,0,0,0.988301,0,0,0,0.992197,0,0,0,0.962864,0.004753,0,0,0.878227,0.098844,0,0,0.658682,0.29933,0,0,0.820545,0.116211,0,0,0.983968,0,0,0,0.945084,0,0,0,0.98025,0,0,0,0.90218,0,0,0,0.947392,0,0,0,0.882928,0,0,0,0.71557,0,0,0,0.894468,0,0,0,0.936154,0,0,0,0.379717,0,0,0,0.31501,0,0,0,0.85833,0,0,0,1,0,0,0,0.615533,0,0,0,0.203544,0,0,0,0.451601,0,0,0,0.508982,0,0,0,1,0,0,0,1,0,0,0,1,0.41657,0,0,0.885373,0,0,0,0.948721,0,0,0,0.819705,0,0,0,0.689228,0,0,0,0.849348,0,0,0,0.947039,0.027374,0,0,0.835989,0,0,0,0.937012,0.002934,0,0,0.83718,0.025977,0,0,0.80356,0.158285,0.021396,0,0.803666,0.196073,0,0,0.935609,0.063788,0,0,0.929989,0.069225,0,0,0.812835,0.186768,0,0,0.940303,0.045349,0,0,0.912529,0.080487,0,0,0.907087,0.085645,0,0,0.938554,0.04775,0,0,0.781583,0.043938,0,0,0.379216,0,0,0,0.329453,0,0,0,0.538022,0.425139,0,0,0.641132,0,0,0,0.94177,0,0,0,0.947991,0,0,0,0.950489,0,0,0,0.952028,0,0,0,0.93784,0.05553,0,0,0.919268,0.075789,0,0,0.972338,0,0,0,0.975443,0,0,0,0.988203,0,0,0,0.981589,0,0,0,0.949256,0.047911,0,0,0.949169,0.045658,0,0,0.510501,0,0,0,0.968374,0,0,0,0.827884,0.171533,0,0,0.91347,0.085209,0,0,0.88448,0.11477,0,0,0.850231,0.148458,0,0,0.889147,0,0,0,0.979627,0,0,0,0.968811,0,0,0,0.885469,0,0,0,0.965199,0,0,0,0.842973,0,0,0,0.931102,0,0,0,0.824239,0,0,0,0.943498,0,0,0,0.786439,0,0,0,0.956509,0,0,0,0.850674,0,0,0,0.880312,0,0,0,0.971706,0,0,0,0.920552,0,0,0,0.819624,0,0,0,0.916619,0,0,0,0.992046,0,0,0,0.717047,0.059785,0,0,0.30926,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.574472,0,0,0,0.48728,0,0,0,1,0.691553,0,0,0.795445,0,0,0,0.800363,0,0,0,1,0.755726,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0.710411,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.551864,0,0,0,1,0.507196,0,0,0.686851,0,0,0,0.739491,0,0,0,0.631466,0,0,0,0.622313,0,0,0,0.77397,0,0,0,0.889735,0,0,0,0.859466,0,0,0,0.630243,0,0,0,0.757043,0,0,0,0.510194,0,0,0,0.42291,0,0,0,0.721032,0,0,0,0.948127,0.039021,0,0,0.93629,0.058101,0,0,0.309322,0,0,0,0.522783,0,0,0,0.678377,0,0,0,0.840378,0,0,0,0.937663,0,0,0,0.912017,0.080045,0,0,0.851191,0.141333,0,0,0.810728,0.185001,0,0,0.893902,0.103905,0,0,0.975446,0,0,0,0.956476,0.034856,0,0,0.93391,0.062315,0,0,0.938193,0.054576,0,0,0.86681,0.131007,0,0,0.804729,0.192785,0,0,0.824984,0.171894,0,0,0.855671,0.142094,0,0,0.802623,0.196742,0,0,0.711182,0.288678,0,0,0.846615,0.153148,0,0,0.96564,0,0,0,0.953771,0,0,0,0.712082,0.03967,0,0,0.963937,0,0,0,0.991134,0,0,0,0.971924,0,0,0,0.913946,0,0,0,0.995518,0,0,0,0.972974,0,0,0,0.930245,0.067397,0,0,0.944972,0.054337,0,0,0.983669,0,0,0,0.988308,0,0,0,0.973145,0.000058,0,0,0.961528,0.022334,0,0,0.977428,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0.601047,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.962971,0,0,0,0.973013,0,0,0,0.888396,0,0,0,0.901481,0,0,0,0.997457,0,0,0,0.922515,0,0,0,0.933394,0,0,0,1,0,0,0,0.951216,0,0,0,0.889499,0,0,0,0.941871,0,0,0,1,0,0,0,1,0,0,0,0.927423,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.964196,0,0,0,0.96747,0,0,0,0.95899,0,0,0,0.968953,0,0,0,0.973578,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.724378,0.144877,0.090509,0.046748,0.730993,0.154084,0.095814,0.024228,0.742067,0.29148,0.052297,0,0.73331,0.304124,0.040194,0.002999,0.731451,0.257186,0.040275,0.017445,0.711878,0.127438,0.082486,0.064266,0.705161,0.121971,0.068046,0.025002,0.670446,0.107426,0.095606,0.056866,0.718513,0.07993,0.071163,0.066586,0.674638,0.09972,0.081859,0.081024,0.717296,0.136013,0.0552,0.048948,0.718797,0.27562,0.021571,0.014365,0.702883,0.119833,0.075706,0.068866,0.713817,0.218161,0.031172,0.013007,0.688179,0.108308,0.088424,0.058797,0.781936,0.205823,0,0,0.56466,0.429633,0,0,0.806163,0.178419,0,0,0.519203,0.444271,0,0,0.646928,0.304444,0,0,0.792244,0.13135,0.066452,0.044272,0.813252,0.112066,0.089708,0.006567,0.666087,0.274542,0.178176,0,0.64892,0.267627,0.188707,0.034659,0.820851,0.11171,0.097598,0,0.803798,0.184816,0.076224,0,0.702693,0.57714,0.043029,0,0.637128,0.391106,0.124694,0,0.656063,0.288604,0.119632,0.073016,0.791374,0.11801,0.069087,0.059921,0.770432,0.117368,0.097093,0.052995,0.665435,0.280123,0.095936,0.08792,0.764283,0.128192,0.094643,0.032425,0.822281,0.164146,0.077596,0,0.829519,0.141753,0.079348,0.024147,0.65103,0.634576,0.075743,0,0.714243,0.593546,0.030243,0,0.834803,0.082134,0.081844,0.076239,0.720303,0.239361,0.21732,0,0.75109,0.470767,0,0,0.807889,0.185733,0.074662,0,0.481043,0.454825,0.381156,0.013583,0.653472,0.352567,0.281087,0.070601,0.783499,0.300998,0.14486,0.131283,0.789493,0.297521,0.146699,0.128943,0.618582,0.373547,0.213454,0,0.903884,0.244303,0.006431,0,0.749324,0.473952,0,0,0.925935,0.225588,0,0,0.758712,0.342016,0.091261,0.013389,0.873806,0.262737,0.013059,0,0.921344,0.22122,0,0,0.51013,0.507865,0.295971,0.007734,0.728388,0.276795,0.273942,0.067966,0.877671,0.196538,0.060678,0,0.629954,0.297662,0.28693,0.011311,0.76853,0.195089,0.09384,0.069896,0.895291,0.151137,0.010129,0.00277,0.948024,0.099051,0.003284,0,0.943463,0.108882,0,0,0.600313,0.479797,0.217717,0.035217,0.819174,0.22738,0.189824,0.078131,0.873929,0.211421,0.138911,0.130167,0.876065,0.211403,0.147174,0.123522,0.857137,0.162156,0.083674,0.01852,0.615954,0.385198,0.213616,0.047309,0.815559,0.10249,0.08226,0.041549,0.711893,0.131044,0.123917,0.094308,0.456961,0.276324,0.254257,0.166072,0.350433,0.319608,0.249127,0.166701,0.898687,0.084671,0.025992,0,0.903513,0.083137,0.029571,0,0.887466,0.077741,0.025892,0.010552,0.914527,0.069158,0.031042,0,0.698779,0.170366,0.065907,0.056187,0.624474,0.208536,0.089001,0.080045,0.427527,0.269437,0.21868,0.098502,0.715129,0.278058,0,0,0.76335,0.229363,0,0,0.787981,0.1003,0.057341,0.010644,0.864161,0.051113,0.043964,0.038513,0.551274,0.522863,0.157172,0.078577,0.702992,0.351227,0.153549,0.061936,0.819234,0.126441,0.113081,0.05975,0.946643,0.09964,0.002358,0,0.940592,0.092103,0.011653,0,0.935104,0.144007,0,0,0.935471,0.168933,0,0,0.911553,0.072621,0.040704,0,0.7981,0.192154,0,0,0.926044,0.131088,0,0,0.932605,0.085431,0.019294,0,0.913531,0.070373,0.03814,0,0.906911,0.116307,0.023064,0,0.894865,0.083783,0.033125,0,0.830065,0.141693,0,0,0.867608,0.082342,0.037019,0.011534,0.820271,0.165643,0,0,0.715016,0.271396,0,0,0.564837,0.429275,0,0,0.520968,0.475559,0,0,0.881875,0.072971,0.032478,0.030042,0.689287,0.149093,0.119795,0.025635,0.644555,0.215761,0.07112,0.069728,0.868086,0.098237,0.058648,0.043007,0.518187,0.478087,0,0,0.528192,0.147425,0.141182,0.099493,0.410316,0.355967,0.078906,0.076067,0.501661,0.205846,0.176183,0.060201,0.537954,0.135008,0.133538,0.116446,0.621144,0.21734,0.139399,0.060538,0.553326,0.149317,0.121438,0.054628,0.318096,0.302459,0.150829,0.073352,0.767059,0.163561,0.057616,0.020661,0.99345,0.048399,0.033522,0.016698,0.968906,0.079661,0.066471,0.065325,0.740098,0.165715,0.131377,0.052655,0.269168,0.251552,0.079046,0,0.163668,0.145895,0.062024,0,0.284809,0.073273,0.034669,0,0.416964,0.117392,0,0,0.592121,0.066832,0.052037,0.014253,0.380928,0.107463,0.041742,0,0.724024,0.043724,0,0,0.791723,0.068851,0.012107,0.003424,0.267804,0.155229,0.104849,0.086128,0.230247,0.210265,0.171337,0.089289,0.303903,0.195297,0.137605,0.055958,0.435445,0.109397,0.094263,0.077041,0.471337,0.281465,0.262583,0.061741,0.589066,0.239138,0.21834,0.065686,0.422498,0.241906,0.147881,0.035872,0.567824,0.190088,0.062984,0.032119,0.375863,0.2201,0.089237,0.036361,0.670345,0.085392,0.08497,0.021179,0.589456,0.104019,0.086434,0.052032,0.381816,0.071044,0.055177,0,0.323824,0.227404,0.020872,0,0.372296,0.18891,0,0,0.377352,0.093091,0.058195,0.048734,0.198856,0.084763,0,0,0.22778,0.099859,0.090288,0.066565,0.333143,0.115734,0.079164,0.050075,0.450291,0.326132,0.009446,0,0.448283,0.324637,0.004376,0,0.63689,0.250238,0,0,0.748573,0.176025,0,0,0.513973,0.180745,0.040685,0.02266,0.533656,0.272642,0.008695,0.004376,0.645427,0.237028,0,0,0.178796,0.088856,0.079126,0.056857,0.177812,0.144375,0.127307,0.095683,0.22154,0.185368,0.116698,0.042119,0.700312,0.226097,0,0,0.876254,0.097416,0,0,0.801386,0.139094,0,0,0.61707,0.167076,0.051151,0.039553,0.605351,0.174276,0.046981,0.034265,0.269588,0.06546,0,0,0.174756,0.072368,0.059986,0,0.26553,0.089197,0,0,0.305255,0.072933,0,0,0.872053,0.0876,0.025085,0,0.546577,0.338121,0.026311,0.020062,0.525139,0.262452,0.181264,0,0.485566,0.290212,0.180978,0,0.425164,0.33495,0.198138,0,0.435259,0.287646,0.229279,0,0.470955,0.416158,0.043734,0.003816,0.470388,0.361226,0.06718,0.008999,0.617604,0.271471,0.055473,0,0.709809,0.234376,0,0,0.483286,0.344764,0.130499,0,0.512292,0.302214,0.129338,0,0.442956,0.327288,0.163382,0,0.411466,0.361249,0.172543,0,0.456731,0.391469,0.121927,0,0.379854,0.308243,0.233245,0,0.321228,0.308368,0.217732,0.01499,0.317193,0.308732,0.075915,0.043163,0.255347,0.246331,0.183153,0.059678,0.323044,0.252536,0.117062,0.023947,0.696223,0.259329,0,0,0.894331,0.091699,0,0,0.675104,0.197311,0.101934,0,0.864444,0.061595,0.05559,0.040074,0.491318,0.391242,0.097681,0,0.467907,0.297719,0.163987,0,0.539022,0.161096,0.090257,0.026935,0.665232,0.178848,0.076082,0.001717,0.467261,0.343055,0.132018,0,0.365964,0.164487,0.109299,0.058522,0.519704,0.296249,0.111774,0,0.447214,0.318941,0.105716,0.010578,0.517284,0.058893,0.043921,0.012037,0.536582,0.105482,0.035187,0.01975,0.503135,0.352814,0.096619,0.050001,0.522187,0.339397,0.098771,0.029353,0.454872,0.295601,0.255296,0.034686,0.866046,0.199056,0,0,0.749841,0.579501,0,0,0.786796,0.57502,0,0,0.876923,0.17178,0,0,0.649545,0.37025,0,0,0.566896,0.242751,0,0,0.550869,0.295611,0,0,0.564627,0.439262,0,0,0.528559,0.366874,0,0,0.544133,0.475346,0,0,0.477827,0.451117,0,0,0.471925,0.282343,0.000185,0,0.53731,0.329877,0,0,0.790435,0.125316,0,0,0.911845,0.026759,0,0,0.847167,0.068611,0.001428,0,0.958014,0,0,0,0.985925,0,0,0,0.645697,0.098033,0.024132,0,0.565319,0.078504,0.069134,0,0.401665,0.129119,0,0,0.580254,0.205279,0,0,0.565023,0.131617,0,0,0.447357,0.397117,0.092503,0.045128,0.527588,0.28028,0.017272,0.014313,0.657835,0.221647,0.062554,0.009024,0.369207,0.368972,0.031817,0.024488,0.436438,0.146791,0.135099,0.104389,0.333032,0.159282,0.136777,0.13052,0.269325,0.163254,0.150628,0.091783,0.447339,0.293409,0.059591,0.042089,0.748232,0.277879,0.056552,0,0.693031,0.565866,0.009374,0,0.684931,0.556917,0.007344,0,0.680968,0.509544,0.005976,0,0.67774,0.450918,0.003761,0,0.665968,0.377836,0,0,0.672808,0.423112,0.001258,0,0.610721,0.536338,0,0,0.745901,0.12746,0.049065,0.025518,0.777598,0.068054,0.066097,0.02646,0.814885,0.086011,0.007579,0,0.767444,0.125056,0.028913,0,0.70677,0.198674,0.022422,0.019186,0.413745,0.195639,0.19235,0.03029,0.855694,0.086014,0,0,0.709989,0.200685,0.004752,0,0.635072,0.255245,0,0,0.651898,0.293581,0,0,0.693474,0.582142,0,0,0.289991,0.256506,0.171082,0.049131,0.373242,0.249631,0.169513,0.052314,0.686969,0.162374,0.054301,0.031003,0.671938,0.306655,0.00405,0,0.375148,0.137629,0,0,0.433139,0.173949,0,0,0.139429,0.136769,0.067687,0.065002,0.470057,0.219189,0,0,0.714365,0.32769,0,0,0.789562,0.279598,0,0,0.440214,0.106045,0.001466,0,0.624196,0.069794,0,0,0.784545,0.132537,0.020516,0.010374,0.668843,0.211985,0.090213,0.002323,0.629592,0.182579,0.180772,0,0.592836,0.297586,0.104637,0,0.554835,0.323305,0.138086,0.030907,0.615775,0.119756,0.044261,0,0.652869,0.056477,0.03445,0,0.922149,0.150493,0.132832,0.109494,0.587087,0.307581,0.083952,0,0.652945,0.238641,0.081444,0,0.640283,0.227726,0.08962,0,0.59824,0.256542,0.085578,0,0.72136,0.082007,0.077534,0,0.976112,0,0,0,0.943962,0.016053,0,0,0.593551,0.31361,0.065437,0.014526,0.653896,0.22572,0.00915,0.004331,0.639761,0.279471,0.052538,0,0.887588,0.05518,0,0,0.943979,0,0,0,0.965751,0,0,0,0.884942,0.015916,0,0,0.894282,0.062258,0,0,0.935357,0.010317,0,0,0.965429,0,0,0,0.969889,0,0,0,0.950275,0,0,0,0.913578,0.036721,0,0,0.865481,0.074215,0.023461,0,0.802823,0.109329,0.067921,0,0.781274,0.108556,0.097707,0,0.785768,0.138237,0.062692,0,0.80933,0.129913,0.031065,0,0.839673,0.106418,0,0,0.726948,0.092202,0.071687,0.00065,0.922172,0.15502,0.137024,0.112052,0.921935,0.020042,0.00667,0,0.927231,0.012151,0.007159,0,0.909159,0.028587,0.026208,0,0.900621,0.043312,0.024905,0,0.947716,0,0,0,0.936612,0.002355,0,0,0.93719,0.014128,0,0,0.918691,0.03665,0,0,0.933094,0.01368,0,0,0.946593,0,0,0,0.896365,0.061196,0.000759,0,0.916731,0.043173,0,0,0.896818,0.056308,0.01571,0,0.8729,0.076273,0.020747,0,0.859795,0.080023,0.043126,0,0.88879,0.054783,0.036292,0,0.871765,0.059739,0.053851,0,0.861348,0.069208,0.056168,0,0.462247,0.41452,0.351165,0.060999,0.77037,0.250748,0.065492,0,0.732087,0.147895,0.102441,0.00504,0.726114,0,0,0,0.719431,0,0,0,0.725954,0.23644,0.056543,0,0.792223,0.149612,0.090021,0,0.520744,0.464058,0,0,0.668299,0.307697,0.015472,0,0.508696,0.476277,0,0,0.688672,0.255901,0.03885,0.008522,0.681051,0.265313,0.031264,0.01874,0.676474,0.295225,0.032546,0,0.500415,0.481915,0,0,0.715879,0.251601,0.038044,0,0.694444,0.276351,0.007561,0.00361,0.490041,0.482035,0,0,0.648256,0,0,0,0.752152,0,0,0,0.573768,0,0,0,0.744207,0,0,0,0.550943,0,0,0,0.741296,0,0,0,0.488572,0.481236,0,0,0.546611,0,0,0,0.679657,0.26399,0.043339,0,0.7325,0,0,0,0.922283,0.061376,0.05443,0,0.925479,0.06371,0.053199,0,0.743364,0.283866,0.052161,0,0.732091,0.150151,0.095904,0.022909,0.727108,0.138461,0.090173,0.044403,0.735627,0.290132,0.039735,0.001376,0.716938,0.118555,0.081837,0.062284,0.735034,0.23941,0.039552,0.015139,0.708319,0.126221,0.065902,0.014818,0.723923,0.081675,0.064359,0.061864,0.674394,0.109831,0.092598,0.049553,0.682512,0.09602,0.080513,0.071407,0.724156,0.118213,0.05314,0.049058,0.711233,0.108472,0.072563,0.067731,0.723092,0.250587,0.020816,0.011929,0.697736,0.093829,0.085637,0.057781,0.720005,0.191097,0.027738,0.012014,0.784759,0.204437,0,0,0.519641,0.448257,0,0,0.808702,0.177321,0,0,0.570326,0.424292,0,0,0.646305,0.310449,0,0,0.708936,0.241012,0,0,0.783971,0.137485,0.071655,0.046602,0.647582,0.267838,0.201393,0.026191,0.663943,0.286532,0.178591,0,0.802842,0.119525,0.096416,0.008993,0.810238,0.119053,0.105278,0,0.635735,0.401977,0.124954,0,0.708134,0.579733,0.043119,0,0.796616,0.192748,0.082253,0,0.785537,0.122351,0.070014,0.064746,0.655623,0.28867,0.129737,0.066428,0.767442,0.119628,0.097566,0.057465,0.681657,0.645625,0.06588,0,0.830004,0.148203,0.081791,0.01849,0.820957,0.171154,0.081355,0,0.721614,0.617981,0.018801,0,0.803497,0.193438,0.07978,0,0.756005,0.484894,0,0,0.652474,0.353311,0.308657,0.061634,0.481886,0.479591,0.382651,0.005628,0.783342,0.301132,0.16391,0.11507,0.63647,0.375409,0.212286,0,0.90705,0.252822,0.005851,0,0.928255,0.242706,0,0,0.75376,0.481399,0,0,0.77779,0.448963,0.073093,0.012256,0.881482,0.317067,0,0,0.924646,0.250633,0,0,0.726573,0.317374,0.275126,0.058357,0.54765,0.507456,0.298182,0.012321,0.883552,0.202772,0.05989,0,0.657227,0.295314,0.289686,0.016427,0.797461,0.249162,0.068407,0.066523,0.903498,0.22976,0.007226,0,0.949471,0.113115,0.003146,0,0.945796,0.132055,0,0,0.816343,0.286324,0.190983,0.065606,0.595753,0.546344,0.220172,0.044529,0.873498,0.211644,0.166252,0.109702,0.865314,0.167344,0.082341,0.021059,0.655561,0.381168,0.216679,0.052763,0.830678,0.138957,0.078477,0.019099,0.739578,0.154625,0.127761,0.069893,0.900421,0.084267,0.04276,0,0.904637,0.082847,0.042053,0,0.894767,0.108658,0.01988,0.010752,0.918516,0.091479,0.030948,0,0.718189,0.162191,0.084027,0.039904,0.649345,0.201926,0.097789,0.070509,0.764482,0.228642,0,0,0.71719,0.276466,0,0,0.802245,0.092482,0.075905,0.011578,0.872344,0.069122,0.044314,0.028918,0.609252,0.515938,0.160162,0.085466,0.694997,0.484423,0.155858,0.070074,0.830527,0.130642,0.110807,0.061839,0.94798,0.109567,0.002264,0,0.937512,0.179181,0,0,0.937219,0.152499,0,0,0.941963,0.100126,0.011565,0,0.912508,0.072456,0.050543,0,0.798912,0.191783,0,0,0.9287,0.137953,0,0,0.910612,0.121572,0.021629,0.00066,0.915433,0.074712,0.038132,0,0.934141,0.091743,0.01923,0,0.869418,0.082372,0.041924,0.012056,0.831052,0.141651,0.001874,0,0.895854,0.083692,0.040342,0,0.715622,0.271241,0,0,0.821031,0.165438,0,0,0.565425,0.4289,0,0,0.521162,0.475534,0,0,0.885366,0.076292,0.03258,0.031387,0.873889,0.102103,0.057279,0.045349,0.651295,0.217811,0.070074,0.067716,0.693397,0.149622,0.120147,0.022109,0.51614,0.480477,0,0,0.636377,0.295003,0.055669,0,0.675264,0.298472,0,0,0.837265,0.153702,0,0,0.390693,0.385918,0.086151,0.064104,0.517421,0.170513,0.145785,0.085735,0.633191,0.222713,0.133098,0.062634,0.594596,0.15139,0.085785,0.066566,0.405663,0.220552,0.14522,0.078098,0.753647,0.182454,0.066984,0.01438,0.708614,0.198929,0.154418,0.053028,0.354842,0.256478,0.195251,0.039095,0.380819,0.250758,0.19118,0.024831,0.296462,0.245558,0.07638,0,0.414564,0.116503,0,0,0.272786,0.071951,0.033309,0,0.206262,0.138163,0.060022,0,0.753479,0.036346,0,0,0.41533,0.098978,0.047194,0.000924,0.611112,0.071382,0.046048,0.017151,0.806669,0.072609,0.00748,0.005594,0.203979,0.202163,0.091686,0.088061,0.319905,0.131835,0.122663,0.072049,0.257111,0.203414,0.124489,0.07719,0.280162,0.183491,0.109019,0.099903,0.492464,0.293649,0.249744,0.063451,0.55476,0.276224,0.253252,0.066754,0.568555,0.17111,0.086436,0.056367,0.506376,0.171835,0.075093,0.060206,0.631624,0.139262,0.068504,0.051566,0.399996,0.146036,0.142119,0.082517,0.401429,0.085623,0.063543,0.055166,0.182288,0.088917,0.002627,0,0.203054,0.125081,0.105715,0.069414,0.415307,0.34689,0.013901,0,0.409539,0.362897,0.022084,0,0.276726,0.159063,0.099154,0.053174,0.43163,0.257073,0.056877,0.006676,0.767069,0.1534,0,0,0.700345,0.185147,0,0,0.424482,0.39509,0.012275,0,0.464217,0.455277,0,0,0.192368,0.187572,0.147537,0.07824,0.164403,0.102718,0.088989,0.059368,0.251901,0.187896,0.089096,0.05482,0.896853,0.080372,0,0,0.530105,0.420729,0,0,0.841208,0.107413,0,0,0.607291,0.167852,0.063704,0.04661,0.243395,0.091016,0,0,0.160262,0.137407,0.061446,0,0.249955,0.065469,0,0,0.283404,0.072914,0,0,0.876077,0.087427,0.049332,0,0.560814,0.338697,0.019397,0.003686,0.49035,0.287582,0.182028,0,0.528572,0.263216,0.179396,0,0.440612,0.283939,0.230606,0,0.429965,0.336039,0.195161,0,0.618023,0.281114,0.054506,0,0.470969,0.376142,0.045025,0.009285,0.471133,0.428168,0.04235,0,0.484119,0.349904,0.128331,0,0.412561,0.367949,0.169596,0,0.44407,0.335984,0.160485,0,0.513226,0.309806,0.127055,0,0.457431,0.395008,0.120106,0,0.373103,0.317137,0.235567,0,0.332147,0.310135,0.211527,0.015291,0.325645,0.318855,0.06536,0.044661,0.262338,0.214954,0.195479,0.071202,0.488702,0.149984,0.096555,0.092693,0.393638,0.134871,0.127083,0.091414,0.334149,0.182678,0.177265,0.068117,0.677663,0.197636,0.101833,0,0.867187,0.061665,0.058309,0.041014,0.493533,0.391742,0.096508,0,0.4611,0.305502,0.166216,0,0.462222,0.349811,0.133725,0,0.665395,0.185824,0.0781,0,0.563757,0.169425,0.092816,0.018633,0.402952,0.174529,0.112203,0.046938,0.448261,0.33172,0.093548,0.012946,0.520563,0.307498,0.100004,0.002434,0.532218,0.143554,0.034527,0.007656,0.471238,0.313181,0.238024,0.036939,0.525473,0.348504,0.092709,0.030471,0.512044,0.355946,0.091492,0.050456,0.828065,0.198743,0,0,0.727528,0.58043,0,0,0.59001,0.37303,0,0,0.489518,0.4432,0,0,0.497552,0.300464,0,0,0.51742,0.245932,0,0,0.54918,0.378443,0,0,0.475403,0.374102,0,0,0.489086,0.40978,0,0,0.556507,0.299527,0,0,0.435022,0.29585,0.007494,0,0.92165,0.011439,0,0,0.825083,0.098709,0,0,0.861834,0.04817,0.003174,0,0.96272,0,0,0,0.618565,0.097356,0.02689,0,0.368309,0.130969,0,0,0.525852,0.131662,0,0,0.534207,0.207223,0,0,0.453833,0.39613,0.093422,0.040088,0.517079,0.308745,0.022714,0.015792,0.653855,0.228075,0.063939,0.005898,0.38982,0.370044,0.037546,0,0.334973,0.162235,0.114292,0.058663,0.475626,0.294288,0.052061,0.0308,0.686045,0.542776,0.007167,0,0.680472,0.422176,0.003361,0,0.682944,0.487096,0.005672,0,0.670439,0.328856,0,0,0.61373,0.495126,0,0,0.67612,0.389134,0.000792,0,0.783928,0.070387,0.043864,0.023669,0.753825,0.106385,0.050638,0.02274,0.766363,0.132089,0.025525,0,0.817202,0.090437,0.005069,0,0.714035,0.168825,0.019607,0.019451,0.854611,0.090828,0,0,0.722375,0.176979,0.005689,0,0.65457,0.228481,0,0,0.660321,0.253176,0,0,0.662049,0.583756,0,0,0.242655,0.23696,0.22291,0.058989,0.325607,0.300352,0.16899,0.056948,0.711491,0.145819,0.070327,0.035316,0.677538,0.261256,0.001837,0,0.34243,0.141237,0,0,0.396639,0.179981,0,0,0.175624,0.126061,0.074463,0.073116,0.43198,0.228253,0.001561,0,0.660636,0.329638,0,0,0.74016,0.280503,0,0,0.649526,0.064163,0,0,0.476416,0.098465,0.001566,0,0.672913,0.219562,0.083741,0.003329,0.783241,0.137544,0.016032,0.012035,0.644561,0.193321,0.165058,0.001129,0.464813,0.415011,0.15755,0.031813,0.632379,0.259567,0.114959,0,0.671289,0.05332,0.031025,0,0.645682,0.114666,0.039469,0,0.920951,0.164084,0.150846,0.090328,0.587538,0.310173,0.082752,0,0.653464,0.242097,0.080137,0,0.641023,0.23365,0.088043,0,0.598992,0.265993,0.084027,0,0.708322,0.103104,0.072627,0.016691,0.944315,0.017997,0,0,0.567231,0.345569,0.074946,0.003669,0.680415,0.215229,0.00976,0.006606,0.663216,0.259951,0.058005,0,0.886558,0.057698,0,0,0.944101,0,0,0,0.966657,0,0,0,0.905406,0.011349,0,0,0.900064,0.058567,0,0,0.938591,0.006921,0,0,0.966896,0,0,0,0.970759,0,0,0,0.95097,0,0,0,0.914372,0.040588,0,0,0.866928,0.077361,0.017855,0,0.806947,0.114128,0.062502,0,0.790748,0.103345,0.098811,0,0.800708,0.124331,0.067421,0,0.8217,0.119468,0.03753,0,0.849151,0.099549,0.002557,0,0.367614,0.070378,0.054482,0,0.92391,0.023438,0.002139,0,0.929762,0.010147,0.007178,0,0.938371,0.004966,0,0,0.949499,0,0,0,0.935904,0.00874,0,0,0.948847,0,0,0,0.940201,0.009497,0,0,0.922666,0.029887,0.000733,0,0.921062,0.036334,0,0,0.90206,0.056562,0.004173,0,0.90201,0.051671,0.019741,0,0.880145,0.069952,0.025519,0,0.893589,0.050123,0.041134,0,0.86747,0.063144,0.059357,0,0.867521,0.072851,0.049095,0,0.875926,0.062725,0.048642,0,0.912324,0.030162,0.022093,0,0.903259,0.047805,0.018793,0,0.765992,0.258496,0.070581,0,0.782442,0.15813,0.096128,0,0.725931,0,0,0,0.660987,0.308847,0.041267,0,0.511184,0.471946,0,0,0.651319,0.322647,0.023464,0,0.494366,0.489104,0,0,0.683075,0.260717,0.039827,0.013901,0.672008,0.273047,0.032843,0.025196,0.499796,0.481209,0,0,0.71313,0.254252,0.044202,0,0.719683,0.242154,0.060719,0,0.490866,0.480568,0,0,0.757954,0,0,0,0.672926,0,0,0,0.627133,0,0,0,0.74507,0,0,0,0.562438,0,0,0,0.717814,0,0,0,0.748723,0,0,0,0.923421,0.066753,0.054353,0,0.926581,0.069866,0.053101,0,0.995318,0,0,0,0.98722,0,0,0,0.966375,0.017227,0,0,0.964735,0.020504,0,0,0.971241,0.007436,0,0,0.977224,0,0,0,0.828666,0.17107,0,0,0.81256,0.187155,0,0,0.978039,0,0,0,0.86361,0.13634,0,0,0.908763,0.091206,0,0,0.978755,0,0,0,0.967744,0.014429,0,0,0.783862,0.215858,0,0,0.795953,0.203851,0,0,0.968372,0.013191,0,0,0.984388,0,0,0,0.992929,0,0,0,0.896204,0.103703,0,0,0.867224,0.132605,0,0,0.92674,0.073241,0,0,0.941824,0.05816,0,0,0.983616,0,0,0,0.979296,0,0,0,0.976836,0,0,0,0.899006,0.100964,0,0,0.918844,0.080487,0,0,0.982926,0,0,0,0.980252,0,0,0,0.874332,0.125352,0,0,0.833117,0.166354,0,0,0.660321,0.339517,0,0,0.84478,0.155182,0,0,0.833377,0.166585,0,0,0.550571,0.44934,0,0,0.513089,0.486799,0,0,0.740374,0.258197,0,0,0.682308,0.317174,0,0,0.690512,0.308973,0,0,0.757845,0.24069,0,0,0.54555,0.454264,0,0,0.619717,0.380046,0,0,0.702848,0.297055,0,0,0.548805,0.451041,0,0,0.752015,0.247679,0,0,0.558123,0.4417,0,0,0.974849,0,0,0,0.965542,0.012926,0,0,0.975952,0,0,0,0.97333,0,0,0,0.811244,0.18817,0,0,0.688337,0.311389,0,0,0.845318,0.154183,0,0,0.950183,0.04542,0,0,0.788933,0.211011,0,0,0.513504,0.486382,0,0,0.668176,0.331563,0,0,0.723126,0.27577,0,0,0.943143,0.052319,0,0,0.961139,0.021714,0,0,0.657377,0.342012,0,0,0.708701,0.290944,0,0,0.835192,0.163259,0,0,0.697789,0.301815,0,0,0.723262,0.276554,0,0,0.781753,0.218161,0,0,0.867621,0.132343,0,0,0.866553,0.132605,0,0,0.943995,0.054335,0,0,0.944751,0.053364,0,0,0.8606,0.13865,0,0,0.983326,0,0,0,0.876074,0.123238,0,0,0.843819,0.155537,0,0,0.576998,0.422732,0,0,0.613685,0.386011,0,0,0.725147,0.274464,0,0,0.946427,0.05131,0,0,0.850016,0.149135,0,0,0.815405,0.184485,0,0,0.776233,0.223673,0,0,0.973106,0.003741,0,0,0.925701,0.074245,0,0,0.875834,0.124115,0,0,0.63915,0.360714,0,0,0.973981,0,0,0,0.939573,0.059688,0,0,0.978762,0,0,0,0.984185,0,0,0,0.952933,0.039303,0,0,0.939211,0.057582,0,0,0.964037,0.006902,0,0,0.965852,0.007237,0,0,0.96239,0.017217,0,0,0.965996,0.000233,0,0,0.932192,0.062779,0,0,0.9344,0.060482,0,0,0.962654,0.008561,0,0,0.994405,0,0,0,0.956166,0.037621,0,0,0.83445,0.16543,0,0,0.692831,0.306985,0,0,0.967979,0,0,0,0.648294,0.351229,0,0,0.603777,0.395847,0,0,0.768459,0.231475,0,0,0.907946,0.090883,0,0,0.602622,0.397032,0,0,0.540314,0.459569,0,0,0.879581,0.120366,0,0,0.908625,0.091346,0,0,0.978399,0,0,0,0.960713,0.021635,0,0,0.960774,0.022717,0,0,0.891911,0.106806,0,0,0.853185,0.145904,0,0,0.935518,0.062151,0,0,0.90108,0.097505,0,0,0.968867,0.002733,0,0,0.979437,0,0,0,0.725087,0.27416,0,0,0.786434,0.212824,0,0,0.795097,0.204151,0,0,0.667976,0.331567,0,0,0.798881,0.200233,0,0,0.78252,0.216801,0,0,0.730744,0.268701,0,0,0.833892,0.165983,0,0,0.811409,0.188433,0,0,0.568413,0.431533,0,0,0.596749,0.403227,0,0,0.880911,0.119051,0,0,0.566412,0.433354,0,0,0.632661,0.366969,0,0,0.578437,0.420965,0,0,0.796458,0.202846,0,0,0.992305,0,0,0,0.991484,0,0,0,0.984522,0,0,0,0.99611,0,0,0,0.996911,0,0,0,0.795024,0.204853,0,0,0.677801,0.322043,0,0,0.663329,0.33649,0,0,0.997794,0,0,0,0.99617,0,0,0,0.896417,0.103533,0,0,0.910201,0.089741,0,0,0.972256,0.005457,0,0,0.956297,0.037345,0,0,0.979578,0,0,0,0.992424,0,0,0,0.974121,0.001707,0,0,0.964447,0.021036,0,0,0.982882,0,0,0,0.984792,0,0,0,0.990275,0,0,0,0.546089,0.45371,0,0,0.552266,0.447439,0,0,0.729889,0.269918,0,0,0.987544,0,0,0,0.995895,0,0,0,0.824899,0.175033,0,0,0.868234,0.131671,0,0,0.955438,0.039089,0,0,0.93459,0.065361,0,0,0.984558,0,0,0,0.93652,0.063428,0,0,0.889715,0.110176,0,0,0.934827,0.065111,0,0,0.861135,0.138724,0,0,0.856957,0.1429,0,0,0.910152,0.089764,0,0,0.828015,0.171836,0,0,0.851557,0.148322,0,0,0.740897,0.2589,0,0,0.564697,0.434958,0,0,0.666994,0.33256,0,0,0.527285,0.472479,0,0,0.696793,0.303089,0,0,0.887147,0.112828,0,0,0.969844,0.010291,0,0,0.985387,0,0,0,0.960904,0.028124,0,0,0.995378,0,0,0,0.965084,0.019803,0,0,0.967151,0.015674,0,0,0.990674,0,0,0,0.971245,0.007419,0,0,0.812573,0.187108,0,0,0.828681,0.171019,0,0,0.977228,0,0,0,0.978081,0,0,0,0.978836,0,0,0,0.90883,0.091138,0,0,0.863636,0.136312,0,0,0.967748,0.014413,0,0,0.968378,0.013173,0,0,0.795961,0.203827,0,0,0.783873,0.21582,0,0,0.984393,0,0,0,0.867241,0.132562,0,0,0.896226,0.103666,0,0,0.992939,0,0,0,0.984434,0,0,0,0.942258,0.057725,0,0,0.926972,0.073007,0,0,0.97965,0,0,0,0.899111,0.100858,0,0,0.976994,0,0,0,0.918807,0.08046,0,0,0.874306,0.125335,0,0,0.979891,0,0,0,0.981521,0,0,0,0.833096,0.166331,0,0,0.6603,0.339521,0,0,0.844905,0.155055,0,0,0.51306,0.486819,0,0,0.550599,0.449307,0,0,0.833487,0.166472,0,0,0.740165,0.258243,0,0,0.757554,0.240748,0,0,0.690536,0.308874,0,0,0.682327,0.317095,0,0,0.545535,0.454269,0,0,0.619701,0.380045,0,0,0.702858,0.297042,0,0,0.558122,0.441695,0,0,0.752031,0.247654,0,0,0.548803,0.451036,0,0,0.974797,0,0,0,0.973251,0,0,0,0.975883,0,0,0,0.965521,0.012887,0,0,0.811249,0.188146,0,0,0.950183,0.045361,0,0,0.845338,0.154152,0,0,0.688343,0.311374,0,0,0.513517,0.486364,0,0,0.788988,0.210954,0,0,0.668171,0.331559,0,0,0.961019,0.021724,0,0,0.942793,0.052344,0,0,0.723001,0.275802,0,0,0.657313,0.34203,0,0,0.70858,0.291002,0,0,0.723292,0.276493,0,0,0.697816,0.301722,0,0,0.834839,0.163326,0,0,0.86774,0.132222,0,0,0.781774,0.218126,0,0,0.866538,0.132579,0,0,0.860567,0.138626,0,0,0.944618,0.053337,0,0,0.943944,0.054304,0,0,0.833278,0.166079,0,0,0.86979,0.129524,0,0,0.982623,0,0,0,0.61367,0.386005,0,0,0.576986,0.422729,0,0,0.725143,0.274452,0,0,0.850015,0.14911,0,0,0.946415,0.05128,0,0,0.815412,0.184471,0,0,0.92571,0.074232,0,0,0.973122,0.003706,0,0,0.776243,0.223659,0,0,0.639152,0.360706,0,0,0.875853,0.124093,0,0,0.978133,0,0,0,0.938655,0.060609,0,0,0.973533,0.000043,0,0,0.98393,0,0,0,0.945792,0.051789,0,0,0.962357,0.006968,0,0,0.923735,0.073052,0,0,0.965361,0.008211,0,0,0.962132,0.017732,0,0,0.962961,0.006271,0,0,0.95633,0.021177,0,0,0.933482,0.060526,0,0,0.931628,0.062814,0,0,0.994426,0,0,0,0.956249,0.037448,0,0,0.692837,0.306967,0,0,0.834457,0.165415,0,0,0.966436,0,0,0,0.64831,0.351167,0,0,0.60379,0.395806,0,0,0.768492,0.23144,0,0,0.602596,0.397038,0,0,0.907929,0.090868,0,0,0.540325,0.459555,0,0,0.908779,0.091189,0,0,0.879624,0.120315,0,0,0.978317,0,0,0,0.960605,0.021864,0,0,0.891667,0.107054,0,0,0.960595,0.023089,0,0,0.852688,0.146405,0,0,0.935457,0.062216,0,0,0.900928,0.09766,0,0,0.968674,0.003124,0,0,0.979318,0,0,0,0.659921,0.339325,0,0,0.772213,0.227042,0,0,0.666071,0.333475,0,0,0.794629,0.204622,0,0,0.799344,0.19977,0,0,0.731428,0.268015,0,0,0.782283,0.217036,0,0,0.835938,0.163907,0,0,0.84916,0.150718,0,0,0.597006,0.402971,0,0,0.568539,0.431407,0,0,0.883408,0.116555,0,0,0.563553,0.436217,0,0,0.597065,0.402339,0,0,0.718032,0.281602,0,0,0.793111,0.20619,0,0,0.995474,0,0,0,0.990308,0,0,0,0.995004,0,0,0,0.997672,0,0,0,0.99764,0,0,0,0.789368,0.210504,0,0,0.660173,0.339642,0,0,0.674413,0.325428,0,0,0.993761,0,0,0,0.996887,0,0,0,0.89012,0.109826,0,0,0.903176,0.096761,0,0,0.967424,0.015115,0,0,0.949935,0.05003,0,0,0.974642,0.000679,0,0,0.989746,0,0,0,0.98292,0,0,0,0.975667,0,0,0,0.988704,0,0,0,0.990477,0,0,0,0.993714,0,0,0,0.544414,0.45538,0,0,0.55096,0.448746,0,0,0.724319,0.275483,0,0,0.983897,0,0,0,0.995356,0,0,0,0.819412,0.180518,0,0,0.86048,0.139418,0,0,0.950321,0.049318,0,0,0.926591,0.073353,0,0,0.981067,0,0,0,0.927583,0.072357,0,0,0.951322,0.047244,0,0,0.917885,0.082014,0,0,0.897002,0.102867,0,0,0.881248,0.118621,0,0,0.910195,0.089718,0,0,0.816918,0.182922,0,0,0.841414,0.158456,0,0,0.733685,0.266105,0,0,0.561295,0.438357,0,0,0.666151,0.333405,0,0,0.521017,0.478755,0,0,0.695671,0.304216,0,0,0.882079,0.117895,0,0,0.966468,0.01704,0,0,0.987243,0,0,0,0.970158,0.009625,0,0,0.523331,0.26719,0.097538,0.031962,0.54296,0.264203,0.063659,0.063596,0.592947,0.236446,0.063584,0.038774,0.587336,0.230225,0.06597,0.062334,0.55668,0.221237,0.099396,0.055538,0.504202,0.203149,0.145729,0.068677,0.334809,0.331128,0.178332,0.075219,0.450437,0.298752,0.133606,0.034116,0.568438,0.168451,0.097077,0.090001,0.565062,0.176795,0.102599,0.07937,0.473097,0.243278,0.126864,0.088488,0.449564,0.247222,0.119945,0.114031,0.509616,0.187788,0.171537,0.054067,0.602075,0.138133,0.133991,0.040427,0.457134,0.240148,0.163556,0.059027,0.468715,0.220108,0.172915,0.058772,0.596287,0.153061,0.112097,0.057238,0.540726,0.191971,0.12443,0.067809,0.546336,0.171251,0.1533,0.05342,0.550557,0.178575,0.135635,0.058888,0.577299,0.282166,0.131635,0,0.641181,0.202836,0.140227,0,0.620375,0.250207,0.111625,0,0.579328,0.334301,0.067291,0,0.485312,0.178022,0.168753,0.088133,0.333631,0.228482,0.214738,0.123166,0.661601,0.128728,0.077527,0.077022,0.604258,0.14994,0.146551,0.027703,0.4447,0.22275,0.211343,0.052038,0.57117,0.17867,0.152985,0.011522,0.657768,0.314471,0,0,0.730761,0.207269,0.053626,0,0.709853,0.171453,0.107579,0,0.434762,0.407925,0.08757,0,0.582489,0.198892,0.128314,0.010192,0.821429,0.129573,0.009852,0,0.666739,0.190397,0.133606,0,0.52908,0.383571,0.039761,0.012481,0.473465,0.443082,0.036292,0.006116,0.487091,0.427726,0.051483,0,0.576258,0.332231,0.06092,0,0.57616,0.341515,0.017725,0.012118,0.718481,0.200736,0.015878,0,0.535357,0.357315,0.053107,0.006975,0.49382,0.40811,0.044595,0.016853,0.496929,0.35175,0.092582,0.008133,0.539794,0.305787,0.079479,0.011035,0.528262,0.359193,0.061828,0.011853,0.421272,0.300009,0.133885,0.061633,0.593343,0.184481,0.105863,0.0316,0.424212,0.380825,0.11627,0.017506,0.506254,0.221011,0.141598,0.052725,0.609141,0.126021,0.118487,0.067055,0.630208,0.132357,0.102592,0.074741,0.662885,0.144042,0.091041,0.069549,0.694584,0.182316,0.053579,0,0.548987,0.356945,0.034588,0.025425,0.628592,0.276314,0.067013,0,0.600962,0.308025,0.034508,0.024838,0.590778,0.307174,0.078841,0,0.718359,0.132705,0.110233,0.032443,0.707368,0.129697,0.118168,0.013075,0.352635,0.336006,0.162964,0.087908,0.378056,0.304736,0.1526,0.10717,0.769234,0.212505,0,0,0.707105,0.27215,0,0,0.536421,0.449247,0,0,0.525892,0.456147,0,0,0.98269,0,0,0,0.996125,0,0,0,0.995376,0,0,0,0.979629,0,0,0,0.993999,0,0,0,0.972929,0.004102,0,0,0.993786,0,0,0,0.970996,0.00796,0,0,0.986414,0,0,0,0.996779,0,0,0,0.997397,0,0,0,0.988275,0,0,0,0.994764,0,0,0,0.995272,0,0,0,0.975593,0,0,0,0.981528,0,0,0,0.982201,0,0,0,0.984476,0,0,0,0.995772,0,0,0,0.996321,0,0,0,0.984986,0,0,0,0.979134,0,0,0,0.995516,0,0,0,0.995061,0,0,0,0.995838,0,0,0,0.995508,0,0,0,0.9845,0,0,0,0.983327,0,0,0,0.987364,0,0,0,0.996882,0,0,0,0.967277,0.015429,0,0,0.966737,0.016513,0,0,0.989876,0,0,0,0.990666,0,0,0,0.968401,0.013179,0,0,0.991291,0,0,0,0.970882,0.008217,0,0,0.993123,0,0,0,0.994148,0,0,0,0.974275,0.001433,0,0,0.907381,0.092618,0,0,0.860672,0.139327,0,0,0.954671,0.040654,0,0,0.984529,0,0,0,0.970783,0.008427,0,0,0.993765,0,0,0,0.912472,0.087502,0,0,0.910962,0.089001,0,0,0.942197,0.057745,0,0,0.95562,0.038667,0,0,0.90591,0.094065,0,0,0.934676,0.065283,0,0,0.678725,0.321267,0,0,0.641448,0.358546,0,0,0.872582,0.12741,0,0,0.89251,0.10748,0,0,0.880162,0.119828,0,0,0.835705,0.164289,0,0,0.884023,0.115972,0,0,0.882596,0.117397,0,0,0.838172,0.161822,0,0,0.83181,0.168186,0,0,0.857605,0.14239,0,0,0.895396,0.104599,0,0,0.876863,0.123133,0,0,0.912112,0.087881,0,0,0.77394,0.226056,0,0,0.72907,0.270927,0,0,0.789545,0.210453,0,0,0.828846,0.171153,0,0,0.911341,0.088647,0,0,0.850407,0.149583,0,0,0.904784,0.095201,0,0,0.931643,0.068337,0,0,0.801575,0.198415,0,0,0.859946,0.14004,0,0,0.991465,0,0,0,0.995253,0,0,0,0.997239,0,0,0,0.995758,0,0,0,0.998082,0,0,0,0.998459,0,0,0,0.99844,0,0,0,0.998593,0,0,0,0.998125,0,0,0,0.997571,0,0,0,0.997064,0,0,0,0.994695,0,0,0,0.995188,0,0,0,0.995824,0,0,0,0.997063,0,0,0,0.965061,0.019825,0,0,0.96077,0.028428,0,0,0.890197,0.109796,0,0,0.955215,0.039548,0,0,0.951141,0.047699,0,0,0.879281,0.120714,0,0,0.935359,0.064633,0,0,0.918991,0.081002,0,0,0.921099,0.07889,0,0,0.918335,0.081653,0,0,0.928204,0.071779,0,0,0.983049,0,0,0,0.992364,0,0,0,0.981411,0,0,0,0.990941,0,0,0,0.995063,0,0,0,0.995786,0,0,0,0.985169,0,0,0,0.985598,0,0,0,0.967996,0,0,0,0.978848,0,0,0,0.907071,0.092909,0,0,0.632278,0.367717,0,0,0.986082,0,0,0,0.997872,0,0,0,0.979415,0,0,0,0.894688,0.105303,0,0,0.747622,0.252375,0,0,0.792345,0.207654,0,0,0.749939,0.250058,0,0,0.795013,0.204985,0,0,0.773061,0.226937,0,0,0.749071,0.250926,0,0,0.725038,0.274959,0,0,0.806073,0.193925,0,0,0.767902,0.232094,0,0,0.8082,0.191798,0,0,0.775596,0.224402,0,0,0.992324,0,0,0,0.681263,0.318732,0,0,0.779993,0.220004,0,0,0.59762,0.402375,0,0,0.681941,0.318053,0,0,0.639049,0.360946,0,0,0.905804,0.094195,0,0,0.85203,0.147968,0,0,0.681419,0.318577,0,0,0.898236,0.101763,0,0,0.676124,0.323873,0,0,0.819995,0.180003,0,0,0.910008,0.08999,0,0,0.971897,0.006205,0,0,0.831378,0.168603,0,0,0.748197,0.25179,0,0,0.970948,0.007877,0,0,0.970634,0.008593,0,0,0.960399,0.029012,0,0,0.999818,0,0,0,0.996983,0,0,0,0.996449,0,0,0,0.999669,0,0,0,0.9997,0,0,0,0.998885,0,0,0,0.999793,0,0,0,0.999444,0,0,0,0.999605,0,0,0,0.997643,0,0,0,0.998036,0,0,0,0.999394,0,0,0,0.998981,0,0,0,0.998583,0,0,0,0.999184,0,0,0,0.998754,0,0,0,0.99969,0,0,0,0.999457,0,0,0,0.99977,0,0,0,0.998062,0,0,0,0.998707,0,0,0,0.998686,0,0,0,0.999928,0,0,0,0.999299,0,0,0,0.9981,0,0,0,0.996515,0,0,0,0.9965,0,0,0,0.997064,0,0,0,0.997575,0,0,0,0.997933,0,0,0,0.999424,0,0,0,0.999743,0,0,0,0.998986,0,0,0,0.998781,0,0,0,0.998875,0,0,0,0.507287,0.235549,0.196304,0.001633,0.408139,0.331215,0.166868,0.026909,0.522881,0.280017,0.136929,0.005107,0.615272,0.190902,0.149861,0,0.700544,0.16271,0.099208,0,0.601585,0.253824,0.096692,0.00353,0.645986,0.245958,0.06205,0.013608,0.750838,0.154012,0.053003,0.016688,0.765293,0.147253,0.051628,0.0099,0.661305,0.248358,0.040414,0.021652,0.684297,0.2157,0.074447,0,0.704223,0.184385,0.089934,0,0.408087,0.370916,0.168126,0,0.38683,0.313921,0.228519,0.012684,0.46733,0.283205,0.19377,0,0.50167,0.346627,0.117082,0,0.628769,0.258248,0.087506,0,0.58127,0.222871,0.155045,0,0.693891,0.158637,0.116747,0,0.758303,0.152078,0.068342,0,0.838906,0.086458,0.053742,0,0.779295,0.09744,0.094433,0,0.827654,0.087798,0.047962,0.009843,0.879585,0.044299,0.043951,0,0.378324,0.303672,0.164049,0.081602,0.382799,0.308403,0.180055,0.071363,0.499864,0.237826,0.140549,0.076241,0.359115,0.316012,0.203125,0.063744,0.386602,0.285038,0.181205,0.073971,0.37918,0.278732,0.219042,0.059067,0.367301,0.290371,0.239329,0.051822,0.835243,0.084623,0.049882,0.002402,0.794535,0.097643,0.089222,0,0.876116,0.069572,0.028036,0,0.891144,0.036942,0.024249,0.00088,0.786372,0.169502,0.021166,0,0.741663,0.225078,0.001382,0,0.854714,0.106586,0.006863,0,0.771573,0.140949,0.075926,0,0.52175,0.452753,0,0,0.5424,0.443465,0,0,0.688158,0.292662,0,0,0.656978,0.296003,0.017893,0,0.854725,0.135109,0,0,0.817787,0.173321,0,0,0.718972,0.270872,0,0,0.706317,0.277981,0,0,0.894607,0.096334,0,0,0.927503,0.064656,0,0,0.963811,0.005306,0,0,0.939222,0.047746,0,0,0.834577,0.06739,0.057743,0.0044,0.891182,0.02188,0.015449,0.009535,0.672179,0.13679,0.098917,0.062903,0.713016,0.114762,0.105216,0.036994,0.724983,0.141927,0.090955,0,0.84378,0.092461,0.031836,0,0.834199,0.079946,0.05323,0,0.715566,0.122504,0.107012,0.017599,0.925747,0.018125,0.0003,0,0.948411,0.010685,0,0,0.969264,0,0,0,0.951176,0.008828,0,0,0.824127,0.121085,0,0,0.885332,0.068663,0,0,0.917439,0.060997,0,0,0.863308,0.1129,0,0,0.703791,0.19839,0.064788,0,0.544899,0.217079,0.212204,0,0.475395,0.370544,0.115563,0,0.564246,0.337669,0.02155,0.016602,0.886265,0.045533,0.008526,0,0.952036,0,0,0,0.953072,0,0,0,0.935459,0.011244,0,0,0.901808,0.036713,0.006209,0,0.899403,0.066538,0,0,0.92592,0.054203,0,0,0.932644,0.029033,0,0,0.899146,0.054671,0.00186,0,0.913867,0.041446,0.000778,0,0.834152,0.104475,0,0,0.859058,0.134193,0,0,0.906451,0.087564,0,0,0.936412,0.05914,0,0,0.884261,0.109554,0,0,0.76332,0.222047,0,0,0.855344,0.13151,0,0,0.815726,0.175205,0,0,0.722553,0.231996,0.001573,0,0.68881,0.283955,0,0,0.637091,0.317022,0.001947,0,0.534528,0.223042,0.165,0.018537,0.553746,0.324998,0.076571,0.001296,0.505979,0.260367,0.158869,0.028559,0.738515,0.190188,0.032456,0,0.450678,0.439925,0.082642,0,0.716199,0.170716,0.095167,0,0.849558,0.092927,0.03713,0,0.847779,0.072403,0.065007,0,0.91222,0.038257,0.018293,0,0.976331,0,0,0,0.947178,0,0,0,0.971449,0,0,0,0.955394,0,0,0,0.973525,0,0,0,0.946607,0.032701,0,0,0.964121,0.010679,0,0,0.953124,0.009582,0,0,0.601526,0.190509,0.142429,0.006546,0.798868,0.091386,0.078464,0,0.590746,0.263709,0.076391,0.012686,0.502386,0.377959,0.061805,0,0.379721,0.262708,0.154438,0.136155,0.453663,0.226617,0.143509,0.118749,0.548541,0.202107,0.115642,0.090995,0.496303,0.222433,0.136853,0.071802,0.448948,0.255213,0.148358,0.076026,0.510768,0.204847,0.147935,0.062768,0.504075,0.196861,0.1699,0.056395,0.454896,0.228721,0.188101,0.058774,0.463735,0.235638,0.161613,0.066874,0.344914,0.31189,0.24555,0.035859,0.385832,0.295036,0.19833,0.052314,0.369093,0.328588,0.185733,0.049896,0.420782,0.271637,0.228021,0.017094,0.423315,0.229481,0.223681,0.055448,0.472324,0.202272,0.196766,0.055496,0.429199,0.237468,0.197436,0.05962,0.34996,0.29227,0.247333,0.048961,0.319728,0.309382,0.280463,0.033097,0.396305,0.323813,0.210273,0.015635,0.376931,0.279356,0.256283,0.035072,0.337633,0.288512,0.266026,0.050391,0.837639,0.116669,0.010663,0,0.732246,0.169278,0.069132,0,0.718343,0.209896,0.05131,0,0.791338,0.17999,0,0,0.832678,0.152291,0,0,0.879673,0.110771,0,0,0.909139,0.077201,0,0,0.885004,0.091802,0,0,0.950279,0.035588,0,0,0.905753,0.071617,0,0,0.980613,0,0,0,0.988939,0,0,0,0.992759,0,0,0,0.9684,0.006788,0,0,0.994175,0,0,0,0.975987,0,0,0,0.994741,0,0,0,0.983542,0,0,0,0.995119,0,0,0,0.987113,0,0,0,0.993816,0,0,0,0.986149,0,0,0,0.987911,0,0,0,0.970705,0,0,0,0.945982,0.010887,0,0,0.918662,0.050089,0,0,0.86882,0.086631,0,0,0.918095,0.023816,0.014576,0,0.479753,0.246335,0.164191,0.063523,0.587476,0.182045,0.141285,0.054171,0.577353,0.179301,0.164207,0.041055,0.47252,0.241544,0.187272,0.05423,0.478768,0.219945,0.2179,0.03759,0.59528,0.187806,0.153971,0.019151,0.511692,0.287033,0.149751,0,0.607496,0.258333,0.098599,0,0.605424,0.216983,0.128399,0.001603,0.495388,0.251897,0.185832,0.017513,0.586543,0.321998,0.067972,0,0.507319,0.351598,0.106291,0,0.466421,0.44002,0.070997,0,0.506981,0.444024,0.02215,0,0.678302,0.290628,0,0,0.662524,0.276448,0.04157,0,0.80254,0.151354,0.016708,0,0.839914,0.140432,0,0,0.918204,0.06694,0,0,0.886927,0.076408,0,0,0.923865,0.030167,0,0,0.957612,0.005603,0,0,0.935642,0.000778,0,0,0.923571,0.047392,0,0,0.946563,0.021952,0,0,0.964323,0,0,0,0.881065,0.094046,0,0,0.812408,0.165943,0,0,0.854807,0.127312,0,0,0.91339,0.069321,0,0,0.57399,0.177104,0.107472,0.098984,0.720659,0.106936,0.075629,0.070283,0.717331,0.10591,0.09429,0.054625,0.996469,0,0,0,0.995399,0,0,0,0.952275,0.045321,0,0,0.887465,0.112503,0,0,0.820367,0.179614,0,0,0.840241,0.159739,0,0,0.928618,0.07133,0,0,0.803312,0.196674,0,0,0.74464,0.255347,0,0,0.733512,0.266475,0,0,0.649779,0.114696,0.090387,0.071381,0.515197,0.366454,0.073234,0.002959,0.466851,0.425399,0.064199,0.002941,0.472543,0.302125,0.148034,0.035095,0.480228,0.286899,0.154639,0.034858,0.56558,0.404573,0,0,0.501879,0.447425,0.006144,0,0.556498,0.390687,0.009722,0,0.615571,0.35563,0,0,0.63195,0.351184,0,0,0.67228,0.311568,0,0,0.757912,0.232348,0,0,0.675445,0.314232,0,0,0.876304,0.05211,0.036135,0,0.726901,0.134423,0.063057,0.054415,0.785294,0.157416,0,0,0.890146,0.0733,0,0,0.762635,0.2045,0,0,0.72325,0.255689,0,0,0.81784,0.167698,0,0,0.879165,0.100076,0,0,0.525345,0.462161,0,0,0.561561,0.421639,0,0,0.527268,0.454767,0,0,0.592496,0.396562,0,0,0.53325,0.456363,0,0,0.507414,0.482393,0,0,0.622124,0.368345,0,0,0.675578,0.312581,0,0,0.508254,0.391815,0.030407,0.004842,0.437661,0.428499,0.09006,0,0.464551,0.433008,0.022031,0.01754,0.544125,0.339744,0.095743,0,0.59226,0.283217,0.107126,0,0.932453,0.058678,0,0,0.91341,0.080005,0,0,0.589038,0.232889,0.087541,0.061914,0.41081,0.381221,0.125163,0.049799,0.531472,0.372901,0.053183,0.00444,0.650977,0.271689,0.028225,0.001885,0.495653,0.474883,0,0,0.601433,0.372546,0,0,0.651936,0.306378,0,0,0.535393,0.416378,0.001571,0,0.436325,0.426267,0.062477,0.010146,0.721945,0.208713,0.00788,0,0.775554,0.197792,0,0,0.388901,0.303878,0.299287,0,0.431498,0.418558,0.141965,0,0.533548,0.429398,0.010226,0,0.582677,0.39827,0,0,0.908827,0.059951,0,0,0.922849,0.034142,0.005892,0,0.921607,0.022331,0.02136,0,0.998167,0,0,0,0.998371,0,0,0,0.99965,0,0,0,0.998997,0,0,0,0.998032,0,0,0,0.99855,0,0,0,0.548731,0.451262,0,0,0.996169,0,0,0,0.999901,0,0,0,0.992338,0,0,0,0.915886,0.084074,0,0,0.958849,0.032174,0,0,0.960769,0.028396,0,0,0.973503,0.002906,0,0,0.732623,0.258797,0,0,0.797285,0.194982,0,0,0.840361,0.15199,0,0,0.767728,0.221504,0,0,0.758077,0.230545,0,0,0.652149,0.332827,0,0,0.621102,0.367326,0,0,0.655001,0.334773,0,0,0.995159,0,0,0,0.523078,0.26762,0.097303,0.032046,0.588244,0.230091,0.065355,0.060971,0.336292,0.331017,0.177308,0.074881,0.506748,0.202983,0.144276,0.068126,0.558507,0.221032,0.098393,0.053098,0.450209,0.299642,0.133036,0.033659,0.47781,0.239599,0.125364,0.089203,0.572877,0.172545,0.100774,0.079211,0.575947,0.164718,0.096601,0.088374,0.453403,0.244524,0.120187,0.113064,0.515561,0.190601,0.167313,0.052535,0.474448,0.226649,0.169006,0.055134,0.46109,0.249005,0.159474,0.055138,0.609114,0.138265,0.130104,0.039438,0.546493,0.187635,0.122634,0.068705,0.603049,0.148902,0.110792,0.057507,0.55189,0.166763,0.152632,0.054078,0.556131,0.174105,0.134129,0.059888,0.56391,0.295425,0.131918,0,0.570513,0.338349,0.07343,0,0.623963,0.244276,0.114607,0,0.642364,0.199764,0.142496,0,0.335307,0.227166,0.214763,0.122811,0.48841,0.17617,0.168659,0.08745,0.603219,0.149828,0.147154,0.027701,0.444424,0.223634,0.210658,0.051832,0.570112,0.178643,0.153507,0.011534,0.703176,0.179219,0.106639,0,0.698214,0.240288,0.053312,0,0.582666,0.389934,0,0,0.434578,0.406672,0.088224,0,0.581016,0.198945,0.128879,0.010252,0.66529,0.190322,0.135369,0,0.818379,0.1332,0.011126,0,0.491054,0.422938,0.05452,0,0.472667,0.444729,0.041728,0.000896,0.532038,0.380764,0.044403,0.008572,0.579696,0.327536,0.063667,0,0.577354,0.344759,0.013816,0.010384,0.706442,0.216108,0.012469,0,0.493827,0.402467,0.050346,0.008291,0.504498,0.400149,0.038106,0.019435,0.515132,0.339351,0.087481,0.009169,0.541177,0.349855,0.057939,0.013927,0.526443,0.325142,0.075713,0.011015,0.418449,0.312307,0.128345,0.060129,0.440628,0.371977,0.110491,0.017463,0.594522,0.192193,0.101951,0.028762,0.563491,0.179132,0.134275,0.043844,0.620101,0.167657,0.100584,0.025407,0.614315,0.123572,0.118035,0.064583,0.634128,0.131965,0.10076,0.069686,0.665216,0.143764,0.087121,0.068427,0.719642,0.129704,0.110062,0.030953,0.689233,0.193333,0.051215,0,0.552355,0.355379,0.029251,0.028354,0.602648,0.306699,0.038867,0.020519,0.631252,0.272014,0.069718,0,0.595774,0.300054,0.081916,0,0.355341,0.332523,0.161828,0.089207,0.37553,0.306873,0.152031,0.107884,0.751317,0.230145,0,0,0.50907,0.471783,0,0,0.653329,0.32626,0,0,0.982573,0,0,0,0.979501,0,0,0,0.995354,0,0,0,0.996106,0,0,0,0.972809,0.004343,0,0,0.993978,0,0,0,0.970921,0.00811,0,0,0.993771,0,0,0,0.986371,0,0,0,0.988215,0,0,0,0.99739,0,0,0,0.996772,0,0,0,0.975572,0,0,0,0.99527,0,0,0,0.99476,0,0,0,0.981497,0,0,0,0.982192,0,0,0,0.996311,0,0,0,0.995767,0,0,0,0.984468,0,0,0,0.984978,0,0,0,0.995057,0,0,0,0.995514,0,0,0,0.979123,0,0,0,0.984484,0,0,0,0.995497,0,0,0,0.995824,0,0,0,0.983315,0,0,0,0.987285,0,0,0,0.996868,0,0,0,0.989942,0,0,0,0.966909,0.016169,0,0,0.967582,0.014819,0,0,0.990754,0,0,0,0.968816,0.012347,0,0,0.991398,0,0,0,0.971412,0.007155,0,0,0.993221,0,0,0,0.994232,0,0,0,0.974638,0.000706,0,0,0.907434,0.092565,0,0,0.984554,0,0,0,0.9548,0.040396,0,0,0.860925,0.139073,0,0,0.993791,0,0,0,0.970853,0.008286,0,0,0.942161,0.057781,0,0,0.910912,0.08905,0,0,0.912386,0.087588,0,0,0.955558,0.038792,0,0,0.678691,0.321301,0,0,0.934657,0.065301,0,0,0.905874,0.0941,0,0,0.6414,0.358595,0,0,0.872392,0.1276,0,0,0.835502,0.164492,0,0,0.880009,0.119981,0,0,0.892352,0.107638,0,0,0.837822,0.162173,0,0,0.882336,0.117657,0,0,0.883403,0.116591,0,0,0.830885,0.169111,0,0,0.856228,0.143767,0,0,0.894459,0.105535,0,0,0.911288,0.088706,0,0,0.87559,0.124405,0,0,0.792038,0.20796,0,0,0.727514,0.272483,0,0,0.773375,0.22662,0,0,0.829554,0.170444,0,0,0.904619,0.095366,0,0,0.850177,0.149813,0,0,0.911068,0.08892,0,0,0.931484,0.068496,0,0,0.859816,0.14017,0,0,0.801436,0.198554,0,0,0.995205,0,0,0,0.991349,0,0,0,0.99575,0,0,0,0.997228,0,0,0,0.998091,0,0,0,0.99848,0,0,0,0.998455,0,0,0,0.998618,0,0,0,0.998149,0,0,0,0.997594,0,0,0,0.997112,0,0,0,0.995851,0,0,0,0.995269,0,0,0,0.994688,0,0,0,0.997123,0,0,0,0.889539,0.110454,0,0,0.960536,0.028896,0,0,0.964941,0.020065,0,0,0.954864,0.040253,0,0,0.878097,0.121898,0,0,0.950741,0.048499,0,0,0.934862,0.065131,0,0,0.918583,0.08141,0,0,0.920911,0.079079,0,0,0.928101,0.071883,0,0,0.918196,0.081793,0,0,0.983018,0,0,0,0.992256,0,0,0,0.98106,0,0,0,0.995,0,0,0,0.990768,0,0,0,0.995754,0,0,0,0.984879,0,0,0,0.985272,0,0,0,0.978428,0,0,0,0.967334,0,0,0,0.907001,0.092979,0,0,0.63215,0.367846,0,0,0.997879,0,0,0,0.986099,0,0,0,0.979375,0,0,0,0.894511,0.10548,0,0,0.799064,0.200935,0,0,0.744794,0.255203,0,0,0.746995,0.253002,0,0,0.745517,0.25448,0,0,0.803806,0.196192,0,0,0.79945,0.200548,0,0,0.808057,0.191941,0,0,0.723656,0.276341,0,0,0.808921,0.191077,0,0,0.767502,0.232493,0,0,0.775811,0.224187,0,0,0.992422,0,0,0,0.681007,0.318989,0,0,0.780042,0.219955,0,0,0.681794,0.3182,0,0,0.597669,0.402326,0,0,0.639041,0.360954,0,0,0.681403,0.318593,0,0,0.852013,0.147985,0,0,0.905803,0.094196,0,0,0.676121,0.323876,0,0,0.898233,0.101766,0,0,0.820039,0.179959,0,0,0.909997,0.090002,0,0,0.9719,0.006199,0,0,0.831311,0.16867,0,0,0.748124,0.251864,0,0,0.970587,0.008685,0,0,0.970924,0.007923,0,0,0.960381,0.029046,0,0,0.999819,0,0,0,0.999671,0,0,0,0.996454,0,0,0,0.996985,0,0,0,0.998887,0,0,0,0.9997,0,0,0,0.999448,0,0,0,0.999793,0,0,0,0.999606,0,0,0,0.997634,0,0,0,0.998033,0,0,0,0.999397,0,0,0,0.99919,0,0,0,0.9986,0,0,0,0.998991,0,0,0,0.998786,0,0,0,0.999723,0,0,0,0.999771,0,0,0,0.999464,0,0,0,0.998695,0,0,0,0.998716,0,0,0,0.998061,0,0,0,0.999929,0,0,0,0.999303,0,0,0,0.998112,0,0,0,0.996542,0,0,0,0.996534,0,0,0,0.997097,0,0,0,0.997604,0,0,0,0.997959,0,0,0,0.999435,0,0,0,0.999747,0,0,0,0.999,0,0,0,0.998794,0,0,0,0.998883,0,0,0,0.523457,0.231582,0.184865,0.002086,0.62888,0.185924,0.141285,0,0.538634,0.272625,0.129402,0.005745,0.42236,0.32746,0.158602,0.025546,0.709456,0.158524,0.093725,0,0.754435,0.151092,0.050352,0.021182,0.651694,0.242715,0.058304,0.016994,0.615053,0.245798,0.091135,0.005315,0.686167,0.211893,0.077179,0,0.661447,0.247706,0.045416,0.018158,0.765273,0.145224,0.055043,0.007497,0.705097,0.181639,0.092176,0,0.42015,0.357241,0.169495,0,0.542568,0.306657,0.116258,0,0.492554,0.259444,0.192654,0,0.408428,0.291401,0.229507,0.012722,0.663012,0.225139,0.086126,0,0.768423,0.140502,0.06867,0,0.707261,0.14669,0.114777,0,0.599509,0.206398,0.153198,0,0.842349,0.080601,0.05427,0,0.879457,0.044886,0.036507,0.002498,0.828264,0.087187,0.042054,0.016098,0.784573,0.096269,0.088965,0,0.378118,0.310002,0.17869,0.07391,0.380819,0.298993,0.161742,0.084269,0.496702,0.239039,0.140444,0.077472,0.353066,0.317032,0.200642,0.067846,0.359673,0.290882,0.23881,0.055941,0.377879,0.269791,0.206239,0.071049,0.388262,0.279068,0.176537,0.078916,0.859916,0.086704,0.029024,0,0.786283,0.098052,0.097756,0,0.831263,0.08446,0.055744,0,0.886006,0.038557,0.037825,0,0.751869,0.204592,0.020554,0,0.755614,0.157399,0.075824,0,0.824759,0.13729,0.006864,0,0.687934,0.279747,0,0,0.504211,0.471527,0,0,0.640089,0.314067,0.015967,0,0.68156,0.300223,0,0,0.5652,0.421663,0,0,0.877251,0.113796,0,0,0.732566,0.25313,0,0,0.746465,0.244256,0,0,0.840656,0.151064,0,0,0.968262,0,0,0,0.941813,0.051055,0,0,0.909145,0.081924,0,0,0.943957,0.035937,0,0,0.670084,0.137146,0.099653,0.063482,0.890629,0.022522,0.015451,0.009921,0.833209,0.068351,0.057682,0.004998,0.710375,0.114835,0.106754,0.038198,0.720606,0.146097,0.090457,0.00005,0.712025,0.125192,0.106851,0.018785,0.832675,0.081271,0.053024,0,0.842673,0.093729,0.031065,0,0.91904,0.028098,0,0,0.943761,0.021485,0,0,0.967039,0,0,0,0.946054,0.007769,0,0,0.823989,0.120596,0,0,0.860976,0.114655,0,0,0.909838,0.067611,0,0,0.897175,0.059543,0,0,0.699745,0.204243,0.063135,0,0.561326,0.339646,0.022018,0.017784,0.463095,0.388585,0.110725,0,0.538785,0.221242,0.214286,0,0.951923,0,0,0,0.885764,0.046117,0.00873,0,0.952894,0,0,0,0.935406,0.011083,0,0,0.901349,0.037275,0.006102,0,0.899929,0.066114,0,0,0.898879,0.054875,0.001592,0,0.932968,0.028271,0,0,0.927265,0.052934,0,0,0.833285,0.105567,0,0,0.913361,0.043253,0,0,0.866825,0.126856,0,0,0.890694,0.103436,0,0,0.939605,0.056134,0,0,0.910647,0.083753,0,0,0.773815,0.212605,0,0,0.824985,0.166594,0,0,0.859763,0.127988,0,0,0.725387,0.233314,0,0,0.639547,0.317841,0,0,0.696217,0.278476,0,0,0.507838,0.22764,0.189357,0.013246,0.482299,0.285313,0.161458,0.01814,0.554409,0.330981,0.073522,0,0.736168,0.190179,0.033819,0,0.84818,0.09251,0.039799,0,0.713508,0.16973,0.098503,0,0.451153,0.437067,0.083579,0,0.911476,0.037426,0.020299,0,0.846297,0.07465,0.064162,0,0.976212,0,0,0,0.946835,0,0,0,0.955569,0,0,0,0.971437,0,0,0,0.973899,0,0,0,0.948052,0.029852,0,0,0.953721,0.008269,0,0,0.965463,0.008047,0,0,0.586416,0.191232,0.159739,0.004787,0.793462,0.091349,0.08517,0,0.590212,0.263356,0.076809,0.012774,0.452211,0.227857,0.143814,0.118539,0.378175,0.264176,0.154742,0.135875,0.501748,0.377413,0.0622,0,0.546463,0.203146,0.11563,0.091649,0.45261,0.250686,0.146117,0.078098,0.50095,0.218011,0.134816,0.073317,0.457635,0.222538,0.183785,0.063232,0.508501,0.191758,0.168171,0.058306,0.515338,0.200046,0.145739,0.064666,0.467133,0.230389,0.158441,0.069965,0.356114,0.31297,0.235244,0.03444,0.436112,0.269836,0.215812,0.01616,0.369074,0.339834,0.17835,0.046798,0.388694,0.304545,0.191925,0.049414,0.427415,0.224255,0.223457,0.0566,0.353322,0.299268,0.239498,0.047098,0.438142,0.245386,0.194119,0.053243,0.477691,0.204201,0.191921,0.054871,0.365592,0.285778,0.257904,0.038736,0.370725,0.345397,0.2131,0.016651,0.329681,0.296449,0.282834,0.034081,0.340497,0.279156,0.267503,0.053194,0.70571,0.223202,0.050681,0,0.725459,0.176286,0.068597,0,0.836905,0.117907,0.009638,0,0.790456,0.181819,0,0,0.912116,0.074457,0,0,0.885083,0.105706,0,0,0.835307,0.150283,0,0,0.887217,0.089962,0,0,0.981345,0,0,0,0.906231,0.07216,0,0,0.951459,0.033997,0,0,0.989193,0,0,0,0.992957,0,0,0,0.969467,0.004996,0,0,0.994346,0,0,0,0.976931,0,0,0,0.984078,0,0,0,0.994871,0,0,0,0.995179,0,0,0,0.987319,0,0,0,0.993806,0,0,0,0.986156,0,0,0,0.987823,0,0,0,0.970451,0,0,0,0.945542,0.010469,0,0,0.917947,0.049709,0,0,0.867374,0.086519,0,0,0.91665,0.023472,0.018624,0,0.583587,0.182504,0.142542,0.055415,0.475325,0.247317,0.164233,0.065462,0.57217,0.179495,0.166763,0.043808,0.588376,0.19332,0.153663,0.021098,0.471208,0.221636,0.220186,0.04158,0.466774,0.242163,0.188047,0.056644,0.593018,0.228259,0.128473,0.002738,0.583858,0.281272,0.098896,0,0.481283,0.314797,0.151506,0.000563,0.481178,0.263204,0.186808,0.019581,0.548444,0.360659,0.067439,0,0.477391,0.475013,0.019658,0,0.547225,0.360591,0.069726,0,0.465889,0.392435,0.106722,0,0.701821,0.268672,0,0,0.859109,0.12262,0,0,0.814833,0.13918,0.015157,0,0.696873,0.243685,0.038203,0,0.929802,0.05606,0,0,0.9619,0,0,0,0.926869,0.020304,0,0,0.893805,0.069015,0,0,0.937669,0.040855,0,0,0.910378,0.063515,0,0,0.932629,0.013729,0,0,0.962918,0,0,0,0.854276,0.121655,0,0,0.900082,0.08258,0,0,0.837652,0.144372,0,0,0.778117,0.200592,0,0,0.572522,0.177986,0.107843,0.098963,0.716628,0.105935,0.09467,0.054742,0.719494,0.107279,0.075892,0.070607,0.996482,0,0,0,0.995435,0,0,0,0.952258,0.045353,0,0,0.887428,0.112539,0,0,0.928591,0.071356,0,0,0.840205,0.159774,0,0,0.820325,0.179656,0,0,0.803277,0.196709,0,0,0.733477,0.266511,0,0,0.744592,0.255395,0,0,0.666968,0.108163,0.078211,0.068184,0.507347,0.377469,0.072406,0,0.441896,0.321352,0.159861,0.027118,0.413624,0.347387,0.157968,0.033581,0.45101,0.43757,0.066975,0.001082,0.553314,0.394554,0.010012,0,0.481281,0.464313,0.011401,0,0.553154,0.415183,0,0,0.618464,0.353659,0,0,0.67043,0.319336,0,0,0.765389,0.225362,0,0,0.682293,0.302184,0,0,0.626104,0.356403,0,0,0.875518,0.045158,0.042534,0,0.889879,0.069256,0,0,0.792332,0.145388,0.003077,0.000414,0.730806,0.120719,0.066155,0.056986,0.774157,0.190274,0,0,0.885908,0.091488,0,0,0.833203,0.151741,0,0,0.738994,0.238562,0,0,0.510654,0.470099,0,0,0.579903,0.402339,0,0,0.547115,0.440091,0,0,0.574925,0.413992,0,0,0.562822,0.42733,0,0,0.664306,0.324482,0,0,0.600462,0.390301,0,0,0.526513,0.463558,0,0,0.469545,0.425983,0.022275,0.021195,0.468642,0.398315,0.089996,0,0.506613,0.391795,0.031155,0.006879,0.592448,0.281913,0.107496,0,0.545161,0.336897,0.096732,0,0.917939,0.075688,0,0,0.935259,0.055995,0,0,0.555618,0.342083,0.056845,0.005658,0.448857,0.327106,0.133904,0.051565,0.60565,0.20423,0.091213,0.064769,0.666576,0.250241,0.033597,0.003994,0.667376,0.287354,0,0,0.617865,0.353999,0,0,0.512185,0.455538,0,0,0.554726,0.392302,0.007323,0,0.729177,0.201467,0.008101,0,0.783118,0.189976,0,0,0.908228,0.061632,0,0,0.922647,0.035404,0.005538,0,0.998167,0,0,0,0.998371,0,0,0,0.998997,0,0,0,0.99965,0,0,0,0.998033,0,0,0,0.99855,0,0,0,0.548692,0.451301,0,0,0.996173,0,0,0,0.999902,0,0,0,0.992201,0,0,0,0.915861,0.084098,0,0,0.958834,0.032204,0,0,0.97343,0.003051,0,0,0.960674,0.028587,0,0,0.728214,0.263535,0,0,0.768821,0.221052,0,0,0.846544,0.146195,0,0,0.804162,0.188518,0,0,0.77961,0.209004,0,0,0.684107,0.306018,0,0,0.647227,0.341166,0,0,0.672251,0.312111,0,0,0.995162,0,0,0,0.722471,0.172321,0.068156,0,0.588927,0.268002,0.089316,0.019349,0.490067,0.29283,0.099063,0.06264,0.611707,0.167362,0.082118,0.072225,0.49516,0.278373,0.113065,0.06357,0.588439,0.263468,0.090642,0.030181,0.724693,0.16814,0.06858,0.00125,0.624029,0.15821,0.082914,0.075367,0.694493,0.194683,0.040804,0.026625,0.805764,0.10292,0.035798,0.013102,0.599202,0.279641,0.053101,0.01713,0.377667,0.250404,0.243671,0.068562,0.409376,0.361341,0.128699,0.049072,0.452033,0.231525,0.163122,0.099821,0.607925,0.138614,0.114191,0.095736,0.847179,0.07594,0.026807,0,0.728056,0.170699,0.032004,0.017553,0.609971,0.268888,0.053292,0.011681,0.508149,0.229521,0.137145,0.050411,0.30896,0.302991,0.260489,0.062291,0.391938,0.360998,0.15044,0.050165,0.464733,0.196336,0.175076,0.099943,0.690876,0.108622,0.09467,0.071412,0.506591,0.175578,0.138818,0.12506,0.518177,0.151573,0.139242,0.125745,0.686836,0.157408,0.054728,0.039274,0.715241,0.08452,0.082533,0.055234,0.543731,0.3783,0.019976,0.019485,0.603021,0.21083,0.152064,0,0.505584,0.445833,0.034568,0,0.518149,0.461815,0,0,0.573376,0.318103,0.029496,0.006593,0.688665,0.143416,0.095072,0.024696,0.705519,0.122104,0.073343,0.068453,0.504086,0.382412,0.061258,0,0.680507,0.176054,0.130834,0,0.847303,0.079487,0.052746,0,0.883536,0.089294,0,0,0.678614,0.16087,0.055712,0.039651,0.505462,0.446364,0.033444,0,0.600323,0.21284,0.151425,0,0.569553,0.316752,0.031569,0.012833,0.64138,0.165408,0.110444,0.032889,0.677756,0.177703,0.131296,0,0.847451,0.078694,0.053052,0,0.524561,0.2016,0.121595,0.083235,0.517682,0.370011,0.060277,0,0.416943,0.31425,0.130647,0.061621,0.507626,0.210731,0.12382,0.094467,0.280494,0.246256,0.24311,0.106539,0.286477,0.276664,0.226576,0.088718,0.272667,0.266884,0.230194,0.090047,0.347764,0.208173,0.190565,0.108128,0.392594,0.257105,0.173091,0.085618,0.27254,0.264242,0.209574,0.128302,0.431709,0.300923,0.130177,0.055038,0.360161,0.219828,0.185951,0.112044,0.412432,0.245928,0.168859,0.074146,0.322569,0.232351,0.221623,0.093181,0.336949,0.315373,0.185347,0.05645,0.337043,0.279407,0.221715,0.082865,0.343513,0.285684,0.210477,0.081556,0.33769,0.316208,0.184333,0.056314,0.332026,0.300414,0.207501,0.081135,0.336833,0.317772,0.183868,0.056424,0.320135,0.308986,0.210752,0.081285,0.335347,0.318459,0.184361,0.056706,0.313639,0.302619,0.222207,0.082459,0.334592,0.317595,0.185386,0.056934,0.309781,0.287571,0.240729,0.083178,0.334506,0.316669,0.186134,0.056912,0.310843,0.278174,0.249367,0.083287,0.335075,0.315583,0.186538,0.056781,0.320921,0.276682,0.240172,0.083513,0.336119,0.315089,0.186163,0.056575,0.336753,0.267705,0.228966,0.095048,0.347519,0.2733,0.215475,0.092358,0.338994,0.285879,0.212151,0.091409,0.318463,0.302413,0.215881,0.091787,0.308721,0.296026,0.229497,0.094099,0.302725,0.277381,0.252877,0.095927,0.303018,0.265927,0.26424,0.096346,0.315447,0.264445,0.25247,0.096623,0.332963,0.259718,0.229785,0.11088,0.345877,0.264593,0.21779,0.105146,0.339225,0.275744,0.215128,0.103011,0.317878,0.292604,0.218662,0.104013,0.306817,0.287012,0.230666,0.108607,0.299395,0.26889,0.251636,0.113931,0.299071,0.262101,0.257899,0.115433,0.311049,0.256343,0.251072,0.115538,0.322262,0.255927,0.224831,0.133013,0.335901,0.2603,0.2194,0.120153,0.332913,0.267712,0.218747,0.115896,0.320146,0.27457,0.221958,0.118335,0.308339,0.273786,0.226566,0.126844,0.299522,0.261871,0.23116,0.144049,0.300232,0.255262,0.234385,0.14695,0.306794,0.252095,0.230049,0.147977,0.707179,0.173087,0.026879,0.012008,0.63666,0.204942,0.050537,0.037727,0.56575,0.25162,0.080259,0.03187,0.685857,0.201145,0.04008,0.002108,0.756717,0.147601,0.008056,0,0.803163,0.133093,0,0,0.803403,0.132816,0,0,0.75393,0.149438,0.003451,0.002039,0.686584,0.200426,0.031389,0,0.708213,0.173125,0.017853,0.009988,0.567159,0.250596,0.071454,0.029966,0.638328,0.205564,0.036654,0.027527,0.579132,0.230957,0.050043,0.045445,0.500829,0.277459,0.06423,0.062246,0.544986,0.242188,0.060362,0.055367,0.472137,0.288499,0.06614,0.060597,0.471048,0.288772,0.070257,0.066899,0.54148,0.242026,0.068996,0.054739,0.498772,0.278469,0.082705,0.057001,0.572787,0.230095,0.06142,0.055743,0.483962,0.330194,0.085693,0.029015,0.621274,0.277405,0.035764,0,0.829783,0.134776,0,0,0.829652,0.134688,0,0,0.621891,0.275821,0.030549,0,0.485125,0.327421,0.080583,0.025662,0.42459,0.341536,0.083153,0.053888,0.394445,0.350841,0.066832,0.064962,0.393818,0.352059,0.073166,0.070406,0.423356,0.344874,0.090217,0.055769,0.454975,0.393056,0.064102,0.019498,0.469857,0.443056,0.024555,0,0.765101,0.210517,0,0,0.765587,0.209852,0,0,0.470195,0.440871,0.02238,0,0.450409,0.394301,0.062214,0.015098,0.430197,0.326402,0.089263,0.054286,0.408418,0.316825,0.072861,0.068902,0.409691,0.315606,0.076729,0.072718,0.438719,0.323536,0.091207,0.056979,0.783577,0.105507,0.054311,0.002766,0.892049,0.076403,0,0,0.884657,0.088471,0,0,0.884654,0.088478,0,0,0.891072,0.076435,0,0,0.773067,0.107639,0.057665,0.001306,0.600173,0.133414,0.099644,0.060908,0.55137,0.139569,0.092281,0.083232,0.578058,0.135583,0.08612,0.076464,0.643345,0.122498,0.088604,0.061002,0.383915,0.36965,0.11977,0.048136,0.331181,0.263123,0.159292,0.105312,0.314738,0.25518,0.221646,0.078162,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,1.00001,0,0,0,0.345756,0.273051,0.156237,0.117018,0.333338,0.241619,0.17646,0.141807,0.499354,0.129326,0.119381,0.095322,0.301243,0.278978,0.217427,0.079312,1.00001,0,0,0,1.00001,0,0,0,0.94632,0,0,0,0.949118,0,0,0,0.948618,0,0,0,0.940266,0,0,0,0.932978,0,0,0,0.939095,0,0,0,0.923451,0,0,0,0.916377,0,0,0,0.963933,0,0,0,0.9638,0,0,0,0.964426,0,0,0,0.964282,0,0,0,0.961496,0,0,0,0.961515,0,0,0,0.961919,0,0,0,0.961933,0,0,0,0.962947,0,0,0,0.962796,0,0,0,0.961149,0,0,0,0.961017,0,0,0,0.95901,0,0,0,0.959092,0,0,0,0.960109,0,0,0,0.960364,0,0,0,0.944118,0,0,0,0.949043,0,0,0,0.945757,0,0,0,0.955115,0,0,0,0.955486,0,0,0,0.949872,0,0,0,0.94996,0,0,0,0.963123,0,0,0,0.962437,0,0,0,0.962766,0,0,0,0.963914,0,0,0,0.961646,0,0,0,0.961606,0,0,0,0.960163,0,0,0,0.960644,0,0,0,0.960964,0,0,0,0.960563,0,0,0,0.952055,0,0,0,0.949958,0,0,0,0.94876,0,0,0,0.950688,0,0,0,0.954538,0,0,0,0.956378,0,0,0,0.956975,0,0,0,0.957941,0,0,0,0.959748,0,0,0,0.9599,0,0,0,0.96128,0,0,0,0.960558,0,0,0,0.959723,0,0,0,0.960591,0,0,0,0.967157,0,0,0,0.966308,0,0,0,0.966985,0,0,0,0.968614,0,0,0,0.962505,0,0,0,0.962273,0,0,0,0.963339,0,0,0,0.963805,0,0,0,0.961763,0,0,0,0.961663,0,0,0,0.961086,0,0,0,0.961263,0,0,0,0.959936,0,0,0,0.958118,0,0,0,0.958789,0,0,0,0.960209,0,0,0,0.953707,0,0,0,0.954581,0,0,0,0.946483,0,0,0,0.948166,0,0,0,0.927845,0,0,0,0.926206,0,0,0,0.937421,0,0,0,0.936416,0,0,0,0.962821,0,0,0,0.963075,0,0,0,0.963199,0,0,0,0.963093,0,0,0,0.958663,0,0,0,0.960037,0,0,0,0.960008,0,0,0,0.95634,0,0,0,0.953466,0,0,0,0.954076,0,0,0,0.95639,0,0,0,0.955496,0,0,0,0.95606,0,0,0,0.947162,0,0,0,0.949117,0,0,0,0.930641,0,0,0,0.938617,0,0,0,0.966667,0,0,0,0.963024,0,0,0,0.963112,0,0,0,0.961748,0,0,0,0.961665,0,0,0,0.961013,0,0,0,0.961248,0,0,0,0.960727,0,0,0,0.959861,0,0,0,0.959554,0,0,0,0.958491,0,0,0,0.962801,0,0,0,0.962984,0,0,0,0.954594,0,0,0,0.956315,0,0,0,0.958451,0,0,0,0.959952,0,0,0,0.961697,0,0,0,0.962055,0,0,0,0.960894,0,0,0,0.960827,0,0,0,0.956283,0,0,0,0.958034,0,0,0,0.958272,0,0,0,0.95745,0,0,0,0.956653,0,0,0,0.962395,0,0,0,0.967312,0,0,0,0.961723,0,0,0,0.95646,0,0,0,0.957667,0,0,0,0.956449,0,0,0,0.959389,0,0,0,0.958485,0,0,0,0.952048,0,0,0,0.951179,0,0,0,0.953988,0,0,0,0.950704,0,0,0,0.957664,0,0,0,0.913896,0,0,0,0.959054,0,0,0,0.959143,0,0,0,0.959098,0,0,0,0.959091,0,0,0,0.958748,0,0,0,0.958932,0,0,0,0.958653,0,0,0,0.958731,0,0,0,0.959017,0,0,0,0.959065,0,0,0,0.959278,0,0,0,0.95915,0,0,0,0.959079,0,0,0,0.958916,0,0,0,0.958333,0,0,0,0.958096,0,0,0,0.957796,0,0,0,0.957492,0,0,0,0.957946,0,0,0,0.957489,0,0,0,0.958663,0,0,0,0.958963,0,0,0,0.957665,0,0,0,0.956759,0,0,0,0.957684,0,0,0,0.957089,0,0,0,0.956814,0,0,0,0.957704,0,0,0,0.959133,0,0,0,0.959054,0,0,0,0.958965,0,0,0,0.958739,0,0,0,0.961327,0,0,0,0.961758,0,0,0,0.945677,0,0,0,0.943567,0,0,0,0.941715,0,0,0,0.960058,0,0,0,0.962587,0,0,0,0.963066,0,0,0,0.961181,0,0,0,0.960713,0,0,0,0.961001,0,0,0,0.961437,0,0,0,0.961557,0,0,0,0.961668,0,0,0,0.962519,0,0,0,0.963254,0,0,0,0.963158,0,0,0,0.961675,0,0,0,0.962032,0,0,0,0.960816,0,0,0,0.963411,0,0,0,0.942097,0,0,0,0.963215,0,0,0,0.963356,0,0,0,0.963761,0,0,0,0.963501,0,0,0,0.965032,0,0,0,0.965727,0,0,0,0.963453,0,0,0,0.963447,0,0,0,0.961062,0,0,0,0.963429,0,0,0,0.96061,0,0,0,0.959487,0,0,0,0.957783,0,0,0,0.953478,0,0,0,0.965588,0,0,0,0.967986,0,0,0,0.967399,0,0,0,0.961668,0,0,0,0.960632,0,0,0,0.95222,0,0,0,0.934453,0,0,0,0.94082,0,0,0,0.930258,0,0,0,0.932613,0,0,0,0.95964,0,0,0,0.95947,0,0,0,0.9599,0,0,0,0.950732,0,0,0,0.953623,0,0,0,0.962079,0,0,0,0.962571,0,0,0,0.962679,0,0,0,0.946937,0,0,0,0.944567,0,0,0,0.932583,0,0,0,0.933732,0,0,0,0.852938,0,0,0,0.853963,0,0,0,0.964461,0,0,0,0.981532,0,0,0,0.979471,0,0,0,0.964947,0,0,0,0.987464,0,0,0,0.985594,0,0,0,0.984706,0,0,0,0.989291,0,0,0,0.988646,0,0,0,0.99067,0,0,0,0.985191,0,0,0,0.985652,0,0,0,0.988861,0,0,0,0.988482,0,0,0,0.985931,0,0,0,0.986389,0,0,0,0.988968,0,0,0,0.988931,0,0,0,0.990758,0,0,0,0.990765,0,0,0,0.98126,0,0,0,0.98041,0,0,0,0.974105,0,0,0,0.9739,0,0,0,0.981486,0,0,0,0.747676,0,0,0,0.810216,0,0,0,0.836684,0,0,0,0.796943,0,0,0,0.8447,0,0,0,0.869511,0,0,0,0.782497,0,0,0,0.814762,0,0,0,0.825438,0,0,0,0.800566,0,0,0,0.748017,0,0,0,0.74962,0,0,0,0.772818,0,0,0,0.787042,0,0,0,0.805129,0,0,0,0.817335,0,0,0,0.834158,0,0,0,0.850377,0,0,0,0.882694,0,0,0,0.894793,0,0,0,0.916009,0,0,0,0.947827,0,0,0,0.926409,0,0,0,0.943594,0,0,0,0.961068,0,0,0,0.973466,0,0,0,0.975213,0,0,0,0.969994,0,0,0,0.9315,0,0,0,0.913875,0,0,0,0.91884,0,0,0,0.931335,0,0,0,0.952567,0,0,0,0.949318,0,0,0,0.951666,0,0,0,0.954777,0,0,0,0.9612,0,0,0,0.962731,0,0,0,0.958716,0,0,0,0.958968,0,0,0,0.949159,0,0,0,0.944312,0,0,0,0.963924,0,0,0,0.965773,0,0,0,0.967117,0,0,0,0.965253,0,0,0,0.95698,0,0,0,0.958972,0,0,0,0.960765,0,0,0,0.958755,0,0,0,0.96288,0,0,0,0.961627,0,0,0,0.968511,0,0,0,0.966441,0,0,0,0.971557,0,0,0,0.971842,0,0,0,0.92628,0,0,0,0.924689,0,0,0,0.92137,0,0,0,0.922692,0,0,0,0.923237,0,0,0,0.926766,0,0,0,0.919665,0,0,0,0.921765,0,0,0,0.924339,0,0,0,0.921749,0,0,0,0.974526,0,0,0,0.974724,0,0,0,0.979664,0,0,0,0.980238,0,0,0,0.985359,0,0,0,0.988945,0,0,0,0.918228,0,0,0,0.919822,0,0,0,0.915989,0,0,0,0.914555,0,0,0,0.915142,0,0,0,0.917348,0,0,0,0.922644,0,0,0,0.917093,0,0,0,0.920902,0,0,0,0.915504,0,0,0,0.914901,0,0,0,0.865196,0,0,0,0.870174,0,0,0,0.845773,0,0,0,0.894904,0,0,0,0.903145,0,0,0,0.905379,0,0,0,0.899634,0,0,0,0.963631,0,0,0,0.966176,0,0,0,0.96484,0,0,0,0.961989,0,0,0,0.954228,0,0,0,0.956105,0,0,0,0.819548,0,0,0,0.82633,0,0,0,0.811818,0,0,0,0.95673,0,0,0,0.955389,0,0,0,0.955484,0,0,0,0.827551,0,0,0,0.820957,0,0,0,0.822546,0,0,0,0.829588,0,0,0,0.824738,0,0,0,0.830306,0,0,0,0.903538,0,0,0,0.903347,0,0,0,0.898261,0,0,0,0.898673,0,0,0,0.878391,0,0,0,0.885342,0,0,0,0.888326,0,0,0,0.855709,0,0,0,0.845827,0,0,0,0.86054,0,0,0,0.863919,0,0,0,0.852022,0,0,0,0.877222,0,0,0,0.871522,0,0,0,0.874254,0,0,0,0.881542,0,0,0,0.883999,0,0,0,0.87639,0,0,0,0.877051,0,0,0,0.884267,0,0,0,0.906179,0,0,0,0.913753,0,0,0,0.91439,0,0,0,0.909891,0,0,0,0.905399,0,0,0,0.908033,0,0,0,0.905102,0,0,0,0.906402,0,0,0,0.903862,0,0,0,0.906339,0,0,0,0.914581,0,0,0,0.913415,0,0,0,0.913039,0,0,0,0.912806,0,0,0,0.912301,0,0,0,0.913434,0,0,0,0.910491,0,0,0,0.911379,0,0,0,0.641375,0,0,0,0.771998,0,0,0,0.779912,0,0,0,0.859007,0,0,0,0.961302,0,0,0,0.962281,0,0,0,0.977851,0,0,0,0.977722,0,0,0,0.991728,0,0,0,0.991754,0,0,0,0.99119,0,0,0,0.987955,0,0,0,0.989927,0,0,0,0.992249,0,0,0,0.99111,0,0,0,0.988788,0,0,0,0.992075,0,0,0,0.992546,0,0,0,0.985607,0,0,0,0.974349,0,0,0,0.976701,0,0,0,0.943979,0,0,0,0.908081,0,0,0,0.913562,0,0,0,0.946449,0,0,0,0.979908,0,0,0,0.983415,0,0,0,0.97267,0,0,0,0.96827,0,0,0,0.970583,0,0,0,0.972126,0,0,0,0.962695,0,0,0,0.908236,0,0,0,0.907494,0,0,0,0.850884,0,0,0,0.85948,0,0,0,0.848649,0,0,0,0.950941,0,0,0,0.937983,0,0,0,0.940978,0,0,0,0.961229,0,0,0,0.96724,0,0,0,0.965662,0,0,0,0.960667,0,0,0,0.990777,0,0,0,0.990744,0,0,0,0.992655,0,0,0,0.992626,0,0,0,0.992462,0,0,0,0.991585,0,0,0,0.989493,0,0,0,0.950094,0,0,0,0.953274,0,0,0,0.963455,0,0,0,0.966167,0,0,0,0.967727,0,0,0,0.967159,0,0,0,0.966498,0,0,0,0.969222,0,0,0,0.963834,0,0,0,0.963723,0,0,0,0.967958,0,0,0,0.801913,0,0,0,0.864085,0,0,0,0.870526,0,0,0,0.873007,0,0,0,0.857792,0,0,0,0.846279,0,0,0,0.846759,0,0,0,0.849476,0,0,0,0.882237,0,0,0,0.902863,0,0,0,0.698713,0,0,0,0.993086,0,0,0,0.955905,0,0,0,0.954641,0,0,0,0.870125,0,0,0,0.890578,0,0,0,0.890158,0,0,0,0.89869,0,0,0,0.99321,0,0,0,0.993001,0,0,0,0.992929,0,0,0,0.912389,0,0,0,0.912425,0,0,0,0.912496,0,0,0,0.91145,0,0,0,0.912115,0,0,0,0.912301,0,0,0,0.912367,0,0,0,0.867545,0,0,0,0.888564,0,0,0,0.911447,0,0,0,0.924383,0,0,0,0.963388,0,0,0,0.962243,0,0,0,0.969668,0,0,0,0.971515,0,0,0,0.970659,0,0,0,0.955759,0,0,0,0.953444,0,0,0,0.964591,0,0,0,0.963361,0,0,0,0.958123,0,0,0,0.956759,0,0,0,0.96107,0,0,0,0.961359,0,0,0,0.963108,0,0,0,0.9566,0,0,0,0.959325,0,0,0,0.955967,0,0,0,0.953982,0,0,0,0.955816,0,0,0,0.960852,0,0,0,0.963593,0,0,0,0.961223,0,0,0,0.962721,0,0,0,0.838966,0,0,0,0.831594,0,0,0,0.842379,0,0,0,0.862051,0,0,0,0.865587,0,0,0,0.867687,0,0,0,0.857893,0,0,0,0.849167,0,0,0,0.82376,0,0,0,0.823699,0,0,0,0.825063,0,0,0,0.825144,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.837225,0,0,0,0.83759,0,0,0,0.917202,0,0,0,0.920509,0,0,0,0.955649,0,0,0,0.949949,0,0,0,0.968016,0,0,0,0.904076,0,0,0,0.901054,0,0,0,0.941971,0,0,0,0.910025,0,0,0,0.909525,0,0,0,0.870357,0,0,0,0.904286,0,0,0,0.945237,0,0,0,0.944735,0,0,0,0.946328,0,0,0,0.942854,0,0,0,0.940089,0,0,0,0.956904,0,0,0,0.627502,0,0,0,0.691246,0,0,0,0.954879,0,0,0,0.955676,0,0,0,0.961482,0,0,0,0.974729,0,0,0,0.971156,0,0,0,0.967776,0,0,0,0.971332,0,0,0,0.826647,0,0,0,0.97495,0,0,0,0.820934,0,0,0,0.924489,0,0,0,0.912884,0,0,0,0.913121,0,0,0,0.910992,0,0,0,0.908649,0,0,0,0.908087,0,0,0,0.912351,0,0,0,0.912242,0,0,0,0.912209,0,0,0,0.912406,0,0,0,0.912313,0,0,0,0.912286,0,0,0,0.915284,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.809624,0,0,0,0.816858,0,0,0,0.818427,0,0,0,0.869398,0,0,0,0.874458,0,0,0,1,0,0,0,0.985896,0,0,0,0.820761,0,0,0,1,0,0,0,0.916392,0,0,0,0.91252,0,0,0,0.900671,0,0,0,0.955596,0,0,0,0.953669,0,0,0,0.964071,0,0,0,0.962994,0,0,0,0.960966,0,0,0,0.960912,0,0,0,0.962821,0,0,0,0.957065,0,0,0,0.959386,0,0,0,0.954193,0,0,0,0.960261,0,0,0,0.958539,0,0,0,0.957595,0,0,0,0.950974,0,0,0,0.951505,0,0,0,0.948754,0,0,0,0.942725,0,0,0,0.941604,0,0,0,0.935531,0,0,0,0.919152,0,0,0,0.926106,0,0,0,0.967255,0,0,0,0.966711,0,0,0,0.966776,0,0,0,0.967098,0,0,0,0.964703,0,0,0,0.964279,0,0,0,0.964266,0,0,0,0.964724,0,0,0,0.965766,0,0,0,0.96561,0,0,0,0.963752,0,0,0,0.963899,0,0,0,0.962788,0,0,0,0.961743,0,0,0,0.961635,0,0,0,0.963061,0,0,0,0.94651,0,0,0,0.948173,0,0,0,0.95127,0,0,0,0.958021,0,0,0,0.957617,0,0,0,0.95205,0,0,0,0.952053,0,0,0,0.965734,0,0,0,0.965618,0,0,0,0.96619,0,0,0,0.966799,0,0,0,0.964598,0,0,0,0.964674,0,0,0,0.963844,0,0,0,0.963453,0,0,0,0.962902,0,0,0,0.963347,0,0,0,0.954436,0,0,0,0.953029,0,0,0,0.951125,0,0,0,0.95228,0,0,0,0.957014,0,0,0,0.958924,0,0,0,0.959545,0,0,0,0.960542,0,0,0,0.962444,0,0,0,0.96258,0,0,0,0.962282,0,0,0,0.963176,0,0,0,0.963843,0,0,0,0.963081,0,0,0,0.96956,0,0,0,0.968977,0,0,0,0.969786,0,0,0,0.971037,0,0,0,0.96618,0,0,0,0.965091,0,0,0,0.965347,0,0,0,0.966667,0,0,0,0.964452,0,0,0,0.964582,0,0,0,0.964031,0,0,0,0.96387,0,0,0,0.9626,0,0,0,0.962898,0,0,0,0.961391,0,0,0,0.96066,0,0,0,0.957042,0,0,0,0.956113,0,0,0,0.950429,0,0,0,0.948775,0,0,0,0.939775,0,0,0,0.928738,0,0,0,0.930326,0,0,0,0.93878,0,0,0,0.965667,0,0,0,0.965936,0,0,0,0.966059,0,0,0,0.965956,0,0,0,0.962701,0,0,0,0.961293,0,0,0,0.96271,0,0,0,0.956459,0,0,0,0.955826,0,0,0,0.958769,0,0,0,0.958823,0,0,0,0.958598,0,0,0,0.957967,0,0,0,0.951401,0,0,0,0.949711,0,0,0,0.933158,0,0,0,0.941106,0,0,0,0.969155,0,0,0,0.965572,0,0,0,0.965449,0,0,0,0.96616,0,0,0,0.964804,0,0,0,0.963664,0,0,0,0.963513,0,0,0,0.964142,0,0,0,0.962571,0,0,0,0.962229,0,0,0,0.961086,0,0,0,0.965664,0,0,0,0.965887,0,0,0,0.958841,0,0,0,0.957007,0,0,0,0.961079,0,0,0,0.962667,0,0,0,0.963619,0,0,0,0.964842,0,0,0,0.964459,0,0,0,0.963545,0,0,0,0.958729,0,0,0,0.959111,0,0,0,0.959934,0,0,0,0.960783,0,0,0,0.960495,0,0,0,0.965572,0,0,0,0.969603,0,0,0,0.964082,0,0,0,0.958871,0,0,0,0.9589,0,0,0,0.960159,0,0,0,0.961017,0,0,0,0.961987,0,0,0,0.954424,0,0,0,0.953587,0,0,0,0.956378,0,0,0,0.953015,0,0,0,0.960156,0,0,0,0.916467,0,0,0,0.961625,0,0,0,0.961663,0,0,0,0.961577,0,0,0,0.961614,0,0,0,0.961251,0,0,0,0.961431,0,0,0,0.961148,0,0,0,0.961221,0,0,0,0.961844,0,0,0,0.961624,0,0,0,0.961563,0,0,0,0.961699,0,0,0,0.961458,0,0,0,0.961648,0,0,0,0.960839,0,0,0,0.960599,0,0,0,0.960279,0,0,0,0.959938,0,0,0,0.961194,0,0,0,0.959971,0,0,0,0.960432,0,0,0,0.961509,0,0,0,0.959213,0,0,0,0.960133,0,0,0,0.959258,0,0,0,0.959534,0,0,0,0.960153,0,0,0,0.96017,0,0,0,0.961663,0,0,0,0.961581,0,0,0,0.961469,0,0,0,0.96123,0,0,0,0.964538,0,0,0,0.964082,0,0,0,0.948164,0,0,0,0.945922,0,0,0,0.944054,0,0,0,0.962673,0,0,0,0.966,0,0,0,0.965502,0,0,0,0.963951,0,0,0,0.963472,0,0,0,0.963802,0,0,0,0.964308,0,0,0,0.964484,0,0,0,0.964393,0,0,0,0.965475,0,0,0,0.966209,0,0,0,0.966159,0,0,0,0.964444,0,0,0,0.964819,0,0,0,0.963539,0,0,0,0.966352,0,0,0,0.94461,0,0,0,0.966109,0,0,0,0.966247,0,0,0,0.966582,0,0,0,0.966334,0,0,0,0.967825,0,0,0,0.968515,0,0,0,0.966308,0,0,0,0.966338,0,0,0,0.964004,0,0,0,0.966534,0,0,0,0.963361,0,0,0,0.962051,0,0,0,0.960216,0,0,0,0.95582,0,0,0,0.969091,0,0,0,0.970791,0,0,0,0.964431,0,0,0,0.970169,0,0,0,0.962815,0,0,0,0.954353,0,0,0,0.943093,0,0,0,0.936615,0,0,0,0.932575,0,0,0,0.934987,0,0,0,0.96205,0,0,0,0.962246,0,0,0,0.962536,0,0,0,0.953058,0,0,0,0.955997,0,0,0,0.964868,0,0,0,0.965386,0,0,0,0.965496,0,0,0,0.933412,0,0,0,0.945364,0,0,0,0.947458,0,0,0,0.934271,0,0,0,0.853542,0,0,0,0.8531,0,0,0,0.96582,0,0,0,0.96595,0,0,0,0.980221,0,0,0,0.982436,0,0,0,0.986108,0,0,0,0.988002,0,0,0,0.98979,0,0,0,0.985644,0,0,0,0.989223,0,0,0,0.991067,0,0,0,0.985758,0,0,0,0.988911,0,0,0,0.989197,0,0,0,0.986062,0,0,0,0.986201,0,0,0,0.989165,0,0,0,0.989089,0,0,0,0.986508,0,0,0,0.991067,0,0,0,0.99095,0,0,0,0.974887,0,0,0,0.981093,0,0,0,0.981772,0,0,0,0.974548,0,0,0,0.981776,0,0,0,0.8172,0,0,0,0.7617,0,0,0,0.843191,0,0,0,0.874603,0,0,0,0.851323,0,0,0,0.807003,0,0,0,0.83138,0,0,0,0.818166,0,0,0,0.786858,0,0,0,0.808656,0,0,0,0.753251,0,0,0,0.762205,0,0,0,0.774685,0,0,0,0.788827,0,0,0,0.838963,0,0,0,0.818829,0,0,0,0.806408,0,0,0,0.852978,0,0,0,0.885982,0,0,0,0.919225,0,0,0,0.898712,0,0,0,0.945527,0,0,0,0.929031,0,0,0,0.950059,0,0,0,0.962728,0,0,0,0.974491,0,0,0,0.976375,0,0,0,0.970991,0,0,0,0.933383,0,0,0,0.932701,0,0,0,0.920358,0,0,0,0.916273,0,0,0,0.953304,0,0,0,0.9553,0,0,0,0.952205,0,0,0,0.950075,0,0,0,0.962233,0,0,0,0.960056,0,0,0,0.959872,0,0,0,0.963798,0,0,0,0.950509,0,0,0,0.945433,0,0,0,0.964469,0,0,0,0.965943,0,0,0,0.967756,0,0,0,0.966275,0,0,0,0.957406,0,0,0,0.959216,0,0,0,0.961154,0,0,0,0.959299,0,0,0,0.962135,0,0,0,0.963309,0,0,0,0.971831,0,0,0,0.966798,0,0,0,0.968971,0,0,0,0.97228,0,0,0,0.926356,0,0,0,0.922759,0,0,0,0.921528,0,0,0,0.92495,0,0,0,0.920135,0,0,0,0.922245,0,0,0,0.924759,0,0,0,0.922145,0,0,0,0.974932,0,0,0,0.979798,0,0,0,0.974964,0,0,0,0.91835,0,0,0,0.919873,0,0,0,0.916059,0,0,0,0.917377,0,0,0,0.91517,0,0,0,0.914641,0,0,0,0.92292,0,0,0,0.917288,0,0,0,0.921108,0,0,0,0.915629,0,0,0,0.915083,0,0,0,0.848783,0,0,0,0.871787,0,0,0,0.868067,0,0,0,0.905921,0,0,0,0.903442,0,0,0,0.895339,0,0,0,0.900332,0,0,0,0.964489,0,0,0,0.962966,0,0,0,0.96577,0,0,0,0.96698,0,0,0,0.957131,0,0,0,0.955378,0,0,0,0.820328,0,0,0,0.812537,0,0,0,0.827502,0,0,0,0.958061,0,0,0,0.955724,0,0,0,0.955911,0,0,0,0.828684,0,0,0,0.821657,0,0,0,0.823169,0,0,0,0.830726,0,0,0,0.831353,0,0,0,0.82518,0,0,0,0.903585,0,0,0,0.898732,0,0,0,0.898386,0,0,0,0.903486,0,0,0,0.881734,0,0,0,0.885849,0,0,0,0.888542,0,0,0,0.858314,0,0,0,0.848405,0,0,0,0.862388,0,0,0,0.854446,0,0,0,0.865824,0,0,0,0.878099,0,0,0,0.882032,0,0,0,0.874668,0,0,0,0.8723,0,0,0,0.88423,0,0,0,0.876531,0,0,0,0.914275,0,0,0,0.90664,0,0,0,0.914949,0,0,0,0.910156,0,0,0,0.908212,0,0,0,0.905668,0,0,0,0.905233,0,0,0,0.906441,0,0,0,0.913516,0,0,0,0.914707,0,0,0,0.91304,0,0,0,0.913391,0,0,0,0.913604,0,0,0,0.912493,0,0,0,0.911573,0,0,0,0.910655,0,0,0,0.651528,0,0,0,0.865358,0,0,0,0.978247,0,0,0,0.962977,0,0,0,0.991984,0,0,0,0.992037,0,0,0,0.991503,0,0,0,0.988317,0,0,0,0.990272,0,0,0,0.99243,0,0,0,0.989023,0,0,0,0.991298,0,0,0,0.992247,0,0,0,0.992728,0,0,0,0.98593,0,0,0,0.978402,0,0,0,0.975829,0,0,0,0.946468,0,0,0,0.948886,0,0,0,0.916755,0,0,0,0.911249,0,0,0,0.984393,0,0,0,0.981294,0,0,0,0.97475,0,0,0,0.972468,0,0,0,0.970436,0,0,0,0.973758,0,0,0,0.964429,0,0,0,0.909744,0,0,0,0.851711,0,0,0,0.908443,0,0,0,0.863692,0,0,0,0.851885,0,0,0,0.951295,0,0,0,0.941087,0,0,0,0.938233,0,0,0,0.965892,0,0,0,0.967378,0,0,0,0.961345,0,0,0,0.960915,0,0,0,0.990864,0,0,0,0.992692,0,0,0,0.954197,0,0,0,0.951087,0,0,0,0.966667,0,0,0,0.963869,0,0,0,0.968359,0,0,0,0.967943,0,0,0,0.967403,0,0,0,0.969972,0,0,0,0.968913,0,0,0,0.964858,0,0,0,0.965046,0,0,0,0.870935,0,0,0,0.86465,0,0,0,0.873169,0,0,0,0.859616,0,0,0,0.848963,0,0,0,0.848629,0,0,0,0.85182,0,0,0,0.886504,0,0,0,0.904446,0,0,0,0.702406,0,0,0,0.993155,0,0,0,0.956165,0,0,0,0.955116,0,0,0,0.874553,0,0,0,0.890644,0,0,0,0.992978,0,0,0,0.912577,0,0,0,0.912539,0,0,0,0.912643,0,0,0,0.912265,0,0,0,0.91157,0,0,0,0.912452,0,0,0,0.912519,0,0,0,0.869532,0,0,0,0.925239,0,0,0,0.912371,0,0,0,0.962612,0,0,0,0.963692,0,0,0,0.970288,0,0,0,0.972145,0,0,0,0.971434,0,0,0,0.954178,0,0,0,0.956288,0,0,0,0.963921,0,0,0,0.965282,0,0,0,0.957229,0,0,0,0.958621,0,0,0,0.961595,0,0,0,0.963956,0,0,0,0.962331,0,0,0,0.960372,0,0,0,0.957597,0,0,0,0.956434,0,0,0,0.954884,0,0,0,0.956302,0,0,0,0.961871,0,0,0,0.965431,0,0,0,0.963447,0,0,0,0.964797,0,0,0,0.840703,0,0,0,0.844147,0,0,0,0.832537,0,0,0,0.862621,0,0,0,0.865973,0,0,0,0.867889,0,0,0,0.857647,0,0,0,0.850827,0,0,0,0.823875,0,0,0,0.825238,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.822765,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.839066,0,0,0,0.839822,0,0,0,0.958024,0,0,0,0.952367,0,0,0,0.97026,0,0,0,0.907096,0,0,0,0.903737,0,0,0,0.910726,0,0,0,0.910448,0,0,0,0.946132,0,0,0,0.947076,0,0,0,0.947386,0,0,0,0.94365,0,0,0,0.957409,0,0,0,0.955006,0,0,0,0.974833,0,0,0,0.971292,0,0,0,0.827171,0,0,0,0.821058,0,0,0,0.925145,0,0,0,0.913195,0,0,0,0.913024,0,0,0,0.908143,0,0,0,0.908726,0,0,0,0.911078,0,0,0,0.912408,0,0,0,0.912366,0,0,0,0.912234,0,0,0,0.912553,0,0,0,0.91246,0,0,0,0.818436,0,0,0,0.91679,0,0,0,0.913208,0,0,0,0.901669,0,0,0,0.954408,0,0,0,0.956196,0,0,0,0.963571,0,0,0,0.964767,0,0,0,0.961512,0,0,0,0.963649,0,0,0,0.961849,0,0,0,0.96037,0,0,0,0.958034,0,0,0,0.955086,0,0,0,0.961223,0,0,0,0.958157,0,0,0,0.959089,0,0,0,0.957677,0,0,0,0.95703,0,0,0,0.961744,0,0,0,0.961012,0,0,0,0.959579,0,0,0,0.960269,0,0,0,0.960856,0,0,0,0.959478,0,0,0,0.960137,0,0,0,0.957703,0,0,0,0.960208,0,0,0,0.958546,0,0,0,0.958265,0,0,0,0.957752,0,0,0,0.95831,0,0,0,0.961662,0,0,0,0.962516,0,0,0,0.960198,0,0,0,0.961735,0,0,0,0.961177,0,0,0,0.961048,0,0,0,0.960391,0,0,0,0.95856,0,0,0,0.961115,0,0,0,0.958883,0,0,0,0.95916,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],
								"vertices": [-3.03278,23.0541,-0.790304,-3.68158,23.0751,-0.583009,-3.28493,23.3999,-0.614148,-2.9125,23.637,0.431002,-3.22166,23.2849,0.397267,-3.00182,22.9603,0.410347,-2.59325,23.6701,0.588452,-3.47312,23.5887,0.004702,-3.49043,23.5629,-0.298153,-3.94943,23.1177,-0.257809,-3.93346,23.0894,0.036976,-3.20967,23.6439,0.242117,-3.36662,23.4713,0.236337,-3.74614,23.054,0.222362,-4.36661,22.5674,0.198516,-4.12632,22.5359,0.414331,-3.46037,23.0131,0.371222,-4.5156,22.6226,-0.227849,-4.48024,22.5901,0.031811,-4.33767,22.598,-0.510204,-2.86125,22.4244,-0.505994,-2.59292,22.6631,-0.597604,-2.5322,22.6212,-0.448229,-7.74282,19.2779,1.20341,-6.80703,20.1345,0.97738,-7.11861,20.3034,0.932345,-7.82782,19.4443,1.22001,-7.23233,20.3436,0.786305,-7.92452,19.61,1.14739,-7.3495,20.3544,0.618195,-8.02801,19.6699,0.996185,-7.36655,20.2783,0.41879,-8.0999,19.6436,0.81487,-7.1152,19.9434,0.009765,-6.88802,19.7152,-0.001755,-7.96856,19.1826,0.40033,-8.05218,19.4033,0.45825,-6.74687,19.5768,0.15246,-7.87415,19.0498,0.45001,-6.66849,19.499,0.31695,-7.78334,18.9469,0.548595,-6.57216,19.5099,0.60882,-7.70189,18.9089,0.727055,-6.5696,19.689,0.86141,-7.66606,18.9939,0.93977,-6.654,19.8954,0.95635,-7.65649,19.1216,1.14062,-8.12071,19.5959,0.6409,-7.2898,20.1938,0.25206,-6.23274,20.8365,-0.156055,-6.91523,20.6091,0.14031,-6.87978,20.7273,0.296735,-6.16775,21.1648,-0.042709,-5.89102,20.8537,0.62838,-6.27252,20.5553,0.77835,-6.05935,20.3279,0.81085,-5.6796,20.6557,0.688531,-6.73807,20.8433,0.53922,-6.00676,21.2763,0.312581,-6.53928,20.7683,0.719715,-5.956,21.1338,0.491706,-6.15186,19.8821,0.02527,-6.34018,19.9449,-0.1255,-5.91633,20.304,-0.207005,-5.69422,20.3026,-0.13753,-5.94388,20.0916,0.758185,-5.44165,20.5435,0.60683,-5.90486,19.8861,0.553935,-5.35332,20.386,0.369475,-6.02915,19.8371,0.21196,-5.46728,20.3168,0.09807,-6.67084,20.1692,-0.156685,-4.75365,21.6734,0.651436,-4.39946,22.0074,0.558441,-4.61757,22.1877,0.459636,-4.97217,21.8509,0.565056,-4.80342,22.2223,0.232926,-5.17872,21.9046,0.337471,-4.84983,22.2612,0.069776,-5.28886,21.8932,0.135041,-4.93821,22.2338,-0.165929,-5.35034,21.8363,-0.115084,-4.80344,22.1472,-0.430604,-5.33453,21.5934,-0.322024,-4.66034,21.8832,-0.565134,-5.23897,21.308,-0.458849,-4.40557,21.7034,-0.563719,-4.24044,21.5439,-0.424119,-4.91053,21.017,-0.283649,-5.05621,21.1327,-0.442934,-3.98323,21.4722,-0.110494,-4.68596,20.9761,0.017716,-4.08532,21.5253,0.254496,-4.66463,21.0643,0.329901,-4.25422,21.6838,0.503381,-4.62552,21.3139,0.581676,-5.84787,21.2253,0.452616,-5.52689,21.5802,0.409111,-5.69854,21.5213,0.140291,-5.89329,21.3536,0.256546,-5.803,21.3333,-0.138139,-6.08462,21.2033,-0.066504,-5.80786,20.8013,-0.299974,-6.10465,20.8431,-0.196845,-6.06334,20.5738,-0.26204,-6.12877,20.7466,-0.125015,-5.65334,20.5316,-0.290795,-5.38746,20.5678,-0.188744,-5.60141,20.3778,-0.153375,-5.8248,20.3552,-0.2064,-5.19895,20.5394,0.065801,-5.40054,20.3631,0.09387,-5.28919,20.4476,0.375991,-5.00324,20.715,0.351476,-5.35014,20.6338,0.589311,-5.02914,20.9399,0.590856,-5.55877,20.7715,0.686721,-5.17639,21.2144,0.715861,-5.41001,21.4123,0.637611,-5.78474,20.9792,0.619721,-3.83505,22.387,0.484681,-3.65173,22.1472,0.391401,-3.50627,22.0021,0.227641,-3.38716,21.9155,-0.121539,-3.56662,21.9318,-0.452959,-3.77737,22.1369,-0.633399,-4.10464,22.3858,-0.657459,-6.86176,20.4761,-0.0016,-6.17341,20.7331,-0.134305,-6.17632,20.4851,-0.22112,-9.09591,18.6825,0.98544,-9.06369,18.5616,0.87475,-9.10586,18.728,1.14566,-9.01529,18.7577,1.45747,-8.82419,18.643,1.64871,-8.71885,18.5166,1.66128,-8.67016,18.4851,1.57351,-8.7043,18.4176,1.43697,-8.79692,18.3953,1.25028,-8.78834,18.3726,1.11477,-8.96474,18.3635,0.92508,-2.75623,22.8301,-0.739269,-2.79935,22.588,0.138566,-2.67717,22.5092,-0.157689,-2.89106,22.7376,0.299561,-10.7199,16.9876,1.16329,-10.7233,17.0145,1.14142,-10.744,16.9993,1.09048,-10.7598,16.9562,1.096,-10.6507,16.9423,1.11348,-10.6678,16.9544,1.14837,-10.6496,16.9494,1.06708,-10.7121,16.9718,1.01276,-10.725,16.9964,1.03764,-10.6254,17.1103,1.13985,-10.5168,17.2007,1.15968,-10.5443,17.2012,1.06909,-10.6182,17.1342,1.07967,-10.5042,17.1594,0.995574,-10.6212,17.0953,1.02541,-10.4443,17.1278,0.990664,-10.598,17.0403,1.0003,-10.3838,17.1221,1.03828,-10.4931,17.0081,1.05519,-10.3741,17.1192,1.11439,-10.4864,17.0102,1.12759,-10.386,17.1357,1.17524,-10.5123,17.04,1.17096,-10.4637,17.1802,1.197,-10.609,17.0717,1.19333,-11.1928,16.8036,1.66693,-11.202,16.8394,1.64359,-11.2416,16.823,1.58659,-11.2613,16.7677,1.59355,-11.1241,16.7545,1.6035,-11.1348,16.767,1.65022,-11.135,16.7662,1.5481,-11.2245,16.7932,1.48401,-11.2327,16.8229,1.51892,-11.0797,16.9595,1.62608,-10.9362,17.0686,1.63168,-10.9865,17.0883,1.53381,-11.086,16.9925,1.55462,-10.9605,17.0422,1.43599,-11.1058,16.9474,1.48747,-10.9096,16.9876,1.41424,-11.0864,16.8811,1.44735,-10.8272,16.9502,1.46925,-10.9426,16.8455,1.49157,-10.8085,16.9509,1.55829,-10.9205,16.841,1.57752,-10.814,16.97,1.6286,-10.9427,16.873,1.63764,-10.8822,17.0212,1.66129,-11.0465,16.908,1.68284,-11.1625,16.7787,2.15749,-11.176,16.82,2.1373,-11.2273,16.8094,2.08012,-11.2469,16.7495,2.08475,-11.1029,16.7273,2.05433,-11.1063,16.7371,2.10835,-11.1235,16.7455,1.99725,-11.2261,16.7861,1.9629,-11.2292,16.8156,2.00537,-11.0499,16.9458,2.11157,-10.9075,17.0473,2.10779,-10.9747,17.0792,2.01514,-11.0686,16.9884,2.03858,-10.9621,17.0423,1.90604,-11.1007,16.9472,1.9643,-10.904,16.9853,1.87213,-11.0868,16.8785,1.91069,-10.8314,16.9227,1.90164,-10.9289,16.8292,1.93132,-10.7858,16.9198,2.00173,-10.8911,16.8154,2.02018,-10.7708,16.9431,2.07481,-10.9044,16.845,2.0924,-10.8386,16.9927,2.12747,-11.0054,16.8838,2.16241,-10.6426,17.462,1.92956,-10.7766,17.3241,1.95741,-10.6718,17.3416,2.0378,-10.5725,17.4099,2.0296,-10.5706,17.2492,2.0785,-10.519,17.1721,2.04824,-10.4748,17.2508,2.02651,-10.4906,17.3243,2.06439,-10.5858,17.1987,1.80468,-10.6878,17.23,1.7899,-10.5844,17.3274,1.75296,-10.5305,17.2707,1.81022,-10.0098,17.7173,1.91511,-9.98672,17.8605,1.90482,-10.3334,17.6488,1.95923,-10.2983,17.4978,2.01004,-10.389,17.6515,1.73948,-10.064,17.8372,1.61881,-10.088,17.6169,1.61478,-10.4085,17.4806,1.70074,-10.7875,17.0661,2.1319,-10.8777,17.1138,2.09133,-10.8801,17.0072,1.86008,-10.927,17.1113,1.89935,-10.7291,17.0024,1.87453,-10.4796,17.4109,1.73043,-10.4495,17.3244,1.76876,-10.3931,17.3061,2.00778,-10.4002,17.4071,2.02755,-10.7255,17.3357,1.8477,-10.6404,17.4195,1.81921,-10.6728,17.022,2.07129,-10.7057,16.9719,1.98256,-10.5489,17.1464,1.92705,-10.9058,17.1649,1.99854,-10.4896,17.2325,1.91401,-10.4204,17.2935,1.88332,-10.5419,17.5041,1.79905,-10.5183,17.5944,1.88787,-10.3264,17.3769,1.73629,-10.2791,17.3414,1.85225,-10.2627,17.3648,1.98168,-10.0678,17.5466,1.66221,-10.023,17.5498,1.78719,-10.4907,17.5141,1.98057,-10.3988,17.6987,1.85181,-10.1871,17.889,1.79092,-9.79625,17.6277,1.63769,-10.0746,17.5406,1.56968,-9.78917,17.6296,1.51208,-9.7967,17.6084,1.28445,-10.0361,17.5742,1.31784,-10.0195,17.5782,1.24846,-9.80007,17.6219,1.21877,-9.80852,18.1752,1.45383,-10.0164,18.008,1.52447,-9.98224,18.0177,1.58348,-9.80706,18.1916,1.53391,-9.7552,17.6614,1.10553,-9.93402,17.6139,1.11987,-9.92063,17.6672,1.00717,-9.78122,17.7326,0.98462,-9.96858,17.7275,0.964885,-10.0626,17.775,0.984345,-9.88504,17.8783,0.94342,-9.8249,17.8083,0.94265,-9.82451,18.1289,1.18758,-9.9717,17.9818,1.16186,-10.0014,18.013,1.33718,-9.80559,18.1597,1.31561,-9.77666,18.1273,1.04707,-9.88724,18.0413,1.05878,-9.42705,18.4436,0.99807,-9.3928,18.5263,1.3033,-9.29637,18.5405,1.60719,-9.36444,18.5596,1.44516,-8.704,18.331,1.67647,-8.79453,18.3765,1.86348,-8.69682,18.2282,1.83953,-8.88481,18.143,1.34627,-8.78964,18.3233,1.54103,-8.80626,18.163,1.48176,-8.96031,18.1088,1.03909,-8.89463,18.1197,1.21012,-9.06771,18.1804,0.902375,-9.15422,18.251,0.85641,-9.01273,18.1257,0.968505,-9.22831,18.3673,0.85339,-9.23028,17.4308,3.13443,-9.24652,17.4265,3.14417,-9.18894,17.3706,3.16458,-9.15771,17.4082,3.15627,-9.0894,17.3567,3.12862,-9.09159,17.3742,3.11719,-9.18886,17.9603,1.2358,-9.25755,17.9609,1.10322,-9.55242,18.3273,1.02561,-9.55477,18.3438,1.09583,-9.56518,18.3708,1.25191,-9.55263,18.3858,1.36224,-9.54026,18.3912,1.45494,-10.0563,17.6654,1.30337,-10.0979,17.8561,1.34282,-10.0207,17.8462,1.19535,-10.0463,17.6365,1.26267,-10.0013,17.7048,1.96995,-9.97155,17.839,1.95599,-10.089,17.6179,1.58539,-10.0559,17.8397,1.554,-8.9153,18.4813,1.80248,-8.89613,18.3973,1.86413,-9.23828,18.2299,2.07933,-9.40303,18.028,2.21608,-9.17225,17.9882,2.3404,-9.04703,18.0997,2.31258,-9.01074,18.4001,1.9138,-8.86013,18.063,2.25193,-8.82128,18.0251,2.23918,-8.7028,18.0222,1.92638,-9.14174,17.7623,2.02504,-9.16332,17.8418,1.76087,-8.68825,18.0987,1.69462,-9.58323,18.3723,1.30844,-9.8127,18.1726,1.38636,-9.93935,18.0861,1.41102,-9.50735,18.3836,1.60865,-9.57851,18.3673,1.54449,-9.7606,18.1664,1.72624,-9.80187,18.2108,1.6296,-9.89315,18.1221,1.6682,-9.92013,17.992,1.83702,-9.05077,18.5102,1.7488,-9.32997,18.311,1.93285,-10.0446,17.5356,1.46626,-9.77834,17.6152,1.40428,-9.77937,17.5821,1.85977,-9.68113,17.8613,2.25869,-9.59671,17.7716,2.25377,-9.3638,17.8798,2.2572,-10.0287,17.5745,1.91376,-10.0129,17.5696,1.99784,-10.1212,17.9502,1.76041,-9.73806,18.0927,0.96767,-9.90438,17.9559,0.997935,-9.725,18.164,1.81291,-9.8899,17.9903,1.8913,-9.4964,18.3624,1.67854,-9.50048,18.3344,0.943455,-9.17232,17.9973,1.41501,-8.88613,17.8471,2.08327,-9.08415,17.7374,2.18259,-8.71509,18.1258,1.61642,-9.1053,17.6281,2.8489,-9.05321,17.6204,2.84061,-9.05397,17.6431,2.79706,-9.11732,17.6629,2.80874,-9.11313,17.4681,2.62862,-9.17806,17.4937,2.6315,-9.16858,17.5161,2.5999,-9.10396,17.4902,2.59594,-9.16065,17.7627,2.24875,-9.34915,17.8359,1.83872,-9.42823,17.765,2.06043,-9.21739,17.9495,1.60339,-9.13673,17.9215,1.65464,-9.32514,17.9304,1.02616,-9.61219,18.0093,0.88708,-9.49348,17.9692,0.937125,-9.67188,18.0483,0.90373,-9.01755,17.511,2.65874,-9.01669,17.4987,2.67548,-9.2079,17.3349,3.07396,-9.10457,17.3169,3.05746,-9.27116,17.4,3.07377,-9.19944,17.6844,2.69101,-9.23427,17.6249,2.72056,-9.21255,17.6402,2.75481,-9.54104,18.0906,2.09651,-8.77202,17.91,2.11786,-9.02434,17.5788,2.81912,-9.00259,17.5868,2.77427,-9.25223,17.5733,2.75323,-9.22762,17.6129,2.78891,-9.29167,17.4706,2.98786,-9.25101,17.4905,3.02693,-9.22787,17.5491,2.93177,-9.27227,17.5269,2.90183,-9.30026,17.4321,2.97226,-9.28389,17.4913,2.85369,-9.21532,17.3418,2.94643,-9.2246,17.3803,2.80206,-9.0992,17.3203,2.93265,-9.10169,17.3527,2.79195,-9.03889,17.3844,2.86657,-9.05664,17.34,2.97006,-9.01932,17.4536,2.92996,-9.04993,17.3843,3.02429,-9.06257,17.9711,2.4535,-9.17703,17.9106,2.41408,-8.91397,17.9322,2.42926,-8.90972,18.0904,2.27446,-9.25479,17.8485,2.34448,-9.23941,17.7855,2.42387,-9.83574,17.6399,2.26537,-9.90038,17.7193,2.27029,-9.91706,17.8574,2.21902,-9.78516,17.9635,2.17552,-10.0865,17.9801,1.74531,-10.1329,17.9302,1.43785,-10.091,17.9716,1.43685,-10.0167,17.9254,1.06683,-10.0625,17.8712,1.06565,-10.0067,17.4814,2.29929,-10.0184,17.453,2.1784,-9.85869,17.5753,2.12565,-10.113,17.4631,2.07145,-10.2047,17.5482,2.04961,-10.0608,17.4734,1.01228,-10.0883,17.5507,0.96513,-10.1157,17.8047,1.0707,-10.0421,17.4368,1.12108,-10.112,17.4501,1.2385,-10.3492,17.5216,1.62231,-10.3145,17.39,1.61112,-10.2276,17.8492,1.44328,-9.96324,17.9477,2.07677,-10.019,17.8817,2.11359,-9.78363,18.0915,1.98294,-9.67169,18.1692,1.90782,-9.62041,18.1274,2.01207,-9.88528,18.0232,2.03279,-9.99887,18.0581,1.71273,-10.036,18.0295,1.4249,-9.95772,17.985,1.06692,-9.43783,18.3159,1.84936,-9.50806,18.3205,1.78461,-9.76693,17.5676,2.07314,-9.54997,17.7162,2.17249,-9.17681,17.9885,1.51876,-9.24048,17.5757,2.6711,-9.23678,17.5858,2.65843,-9.43333,17.754,2.16406,-9.15646,17.7078,2.3209,-9.07245,17.6813,2.27505,-8.90908,17.7449,2.21252,-8.81915,17.8388,2.23489,-9.07197,17.6105,2.41926,-9.14729,17.6248,2.47522,-8.97363,17.6667,2.39227,-8.94899,17.7144,2.48993,-9.0148,17.7592,2.60473,-9.10455,17.8006,2.59129,-9.18127,17.7726,2.5583,-9.22978,17.6974,2.54149,-9.25099,17.5356,2.71147,-9.18303,17.4525,2.68915,-9.11449,17.4389,2.67663,-9.02714,17.478,2.7176,-9.0821,17.5793,2.89068,-9.01486,17.5346,2.81021,-9.17109,17.6305,2.84755,-9.23241,17.6235,2.61309,-9.15788,17.5544,2.55566,-9.07837,17.5537,2.51244,-8.99449,17.54,2.61693,-9.11677,17.5097,2.99452,-9.12967,17.4791,3.07055,-9.10278,17.5458,2.94699,-9.14424,17.4385,3.13385,-8.97956,17.6059,2.6928,-8.99931,17.5545,2.73241,-9.16338,17.6599,2.79969,-9.13643,17.6975,2.7477,-9.0365,17.7187,2.67813,-9.09529,17.6968,2.75902,-9.0073,17.6249,2.74016,-9.0366,17.6815,2.74451,-10.9228,16.8476,2.55008,-10.9357,16.8889,2.52994,-10.9851,16.8793,2.47143,-11.0045,16.8196,2.47502,-10.326,17.3199,2.43985,-10.256,17.244,2.39027,-10.2027,17.3282,2.36634,-10.2316,17.3976,2.41472,-10.8601,16.7974,2.44787,-10.8654,16.8064,2.50202,-10.3445,17.2632,2.17196,-10.4434,17.3234,2.15543,-10.3689,17.3915,2.1192,-10.2871,17.3395,2.15665,-10.0881,17.7248,2.2791,-10.0571,17.5916,2.33467,-10.1525,17.7335,2.0922,-10.1111,17.8147,2.14825,-10.8788,16.8164,2.39051,-10.9804,16.8576,2.35399,-10.9849,16.8865,2.39671,-10.6703,17.1091,2.5002,-10.7345,17.1461,2.41138,-10.8268,17.0577,2.43535,-10.8102,17.0142,2.50852,-10.7271,17.1116,2.30276,-10.8561,17.0178,2.35987,-10.6514,17.0854,2.25798,-10.8403,16.9499,2.30612,-10.562,17.0269,2.3006,-10.6847,16.8998,2.31325,-10.5319,17.0059,2.3798,-10.6499,16.8849,2.40267,-10.5307,17.0241,2.44852,-10.6656,16.9135,2.47493,-10.5827,17.0836,2.50767,-10.7674,16.9517,2.55993,-10.5391,17.1201,2.50799,-10.6405,17.174,2.48432,-10.692,17.1781,2.29672,-10.6289,17.1063,2.24593,-10.4859,17.1028,2.25822,-10.4708,17.0524,2.34564,-10.2826,17.4625,2.0854,-10.2309,17.3956,2.1162,-10.1254,17.3834,2.35376,-10.1419,17.4753,2.37749,-10.4024,17.5465,2.28812,-10.4098,17.506,2.19238,-10.4882,17.416,2.22521,-10.5223,17.4123,2.33983,-10.4509,17.0839,2.44045,-10.2886,17.2168,2.28344,-10.6645,17.229,2.39456,-10.2291,17.3039,2.26654,-10.412,17.4307,2.40656,-10.3288,17.509,2.38646,-10.1327,17.3569,2.23026,-10.2396,17.5954,2.3262,-10.2801,17.676,2.23069,-10.3132,17.5781,2.15044,-10.1643,17.7607,2.17514,-10.3548,17.4804,1.0818,-10.4563,17.3638,1.0702,-10.4037,17.3843,1.15392,-10.3308,17.4496,1.1705,-10.3372,17.3134,1.20643,-10.2712,17.2517,1.20737,-10.2258,17.3356,1.19778,-10.2765,17.3794,1.2212,-10.2463,17.275,1.00494,-10.3146,17.3176,0.9639,-10.25,17.3848,0.958145,-10.201,17.355,1.02262,-10.1584,17.6559,1.1765,-10.1246,17.5044,1.23873,-10.1176,17.6746,0.98432,-10.4505,17.1965,1.19862,-10.4979,17.2538,1.14198,-10.4971,17.2762,1.05448,-10.4817,17.2161,0.984684,-10.4089,17.1631,0.986939,-10.3251,17.1719,1.02128,-10.2478,17.6217,1.07377,-10.2382,17.5392,0.98582,-10.31,17.448,0.99754,-10.1799,17.4543,0.96522,-10.1402,17.4045,1.00348,-10.1643,17.3852,1.21717,-10.2044,17.4539,1.20883,-10.3853,17.3808,0.99945,-10.3303,17.1833,1.19421,-10.3188,17.1673,1.11115,-10.2279,17.2562,1.11213,-10.1891,17.319,1.11236,-10.1453,17.3571,1.11328,-10.2615,17.5433,1.16749,-10.1966,17.705,1.0695,-10.6637,17.4679,1.48587,-10.7873,17.3357,1.49131,-10.7155,17.3556,1.58462,-10.6192,17.4251,1.59378,-10.7243,17.342,1.39714,-10.6293,17.4202,1.37021,-10.6386,17.2633,1.64076,-10.5734,17.1846,1.62898,-10.5151,17.2795,1.60734,-10.5574,17.3388,1.63717,-10.6023,17.1923,1.39144,-10.6746,17.2371,1.35037,-10.5779,17.3324,1.32978,-10.5214,17.2918,1.39512,-10.3738,17.6688,1.55048,-10.3203,17.3973,1.37312,-10.3831,17.4921,1.30838,-10.371,17.6663,1.34526,-10.8245,17.0917,1.67473,-10.9076,17.1331,1.61273,-10.9195,17.1746,1.51715,-10.8856,16.9985,1.4018,-10.9285,17.1102,1.42662,-10.7349,17.0315,1.43564,-10.4806,17.4162,1.31987,-10.4237,17.3466,1.37078,-10.4119,17.3458,1.61886,-10.4453,17.4309,1.6275,-10.7189,17.0458,1.63252,-10.7359,16.9992,1.54473,-10.5453,17.1836,1.50933,-10.504,17.2691,1.50597,-10.4402,17.3171,1.50109,-10.5295,17.531,1.55794,-10.5308,17.5876,1.4588,-10.2992,17.3632,1.49403,-10.4118,17.7117,1.44783,-10.5394,17.5147,1.37682,3.30468,23.4761,-0.616613,3.68158,23.0751,-0.583008,3.0297,23.1205,-0.771493,3.22283,23.2836,0.397142,3.00182,22.9603,0.410347,3.46037,23.0131,0.371222,3.46186,23.5887,0.004702,3.93346,23.0894,0.036977,3.94943,23.1177,-0.257808,3.47917,23.5629,-0.298153,3.38104,23.4555,0.235807,3.74614,23.054,0.222362,4.12632,22.5359,0.414331,4.36661,22.5674,0.198516,4.51559,22.6226,-0.227849,4.48024,22.5901,0.031811,4.33767,22.598,-0.510204,2.86125,22.4244,-0.505994,2.5322,22.6212,-0.448229,2.59292,22.6631,-0.597604,7.74282,19.2779,1.20341,7.82782,19.4443,1.22001,7.11861,20.3034,0.932346,6.80703,20.1345,0.977381,7.92452,19.61,1.14739,7.23233,20.3436,0.786306,8.02801,19.6699,0.996185,7.3495,20.3544,0.618196,8.0999,19.6436,0.814871,7.36655,20.2783,0.418791,7.96856,19.1826,0.40033,6.88802,19.7152,-0.001755,7.1152,19.9434,0.009766,8.05218,19.4033,0.45825,7.87415,19.0497,0.45001,6.74686,19.5768,0.15246,7.78334,18.9469,0.548595,6.66849,19.499,0.31695,7.70189,18.9089,0.727055,6.57216,19.5099,0.608821,7.66606,18.9939,0.93977,6.5696,19.689,0.861411,7.65648,19.1216,1.14062,6.654,19.8954,0.956351,8.12071,19.5959,0.6409,7.2898,20.1938,0.252061,6.23274,20.8365,-0.156054,6.16775,21.1648,-0.042709,6.87978,20.7273,0.296736,6.91523,20.6091,0.140311,5.89102,20.8537,0.628381,5.6796,20.6557,0.688531,6.05935,20.3279,0.810851,6.27252,20.5553,0.778351,6.00676,21.2763,0.312581,6.73807,20.8433,0.539221,6.53928,20.7683,0.719716,5.95599,21.1338,0.491706,5.91633,20.304,-0.207004,6.34018,19.9449,-0.125499,6.15186,19.8821,0.025271,5.69421,20.3026,-0.137529,5.44165,20.5435,0.606831,5.94388,20.0916,0.758186,5.35332,20.3859,0.369476,5.90486,19.8861,0.553936,5.46727,20.3168,0.098071,6.02915,19.8371,0.211961,6.67084,20.1692,-0.156684,4.75365,21.6734,0.651436,4.97217,21.8509,0.565056,4.61756,22.1877,0.459636,4.39946,22.0074,0.558441,5.17872,21.9046,0.337471,4.80342,22.2223,0.232926,5.28885,21.8932,0.135041,4.84983,22.2612,0.069776,5.35034,21.8363,-0.115084,4.93821,22.2338,-0.165929,5.33453,21.5934,-0.322024,4.80344,22.1471,-0.430604,4.66033,21.8832,-0.565134,5.23897,21.308,-0.458849,4.40556,21.7034,-0.563719,5.05621,21.1327,-0.442934,4.91053,21.017,-0.283649,4.24043,21.5439,-0.424119,4.68596,20.9761,0.017716,3.98323,21.4722,-0.110494,4.66462,21.0643,0.329901,4.08532,21.5253,0.254496,4.62552,21.3139,0.581676,4.25421,21.6838,0.503381,5.84786,21.2253,0.452616,5.89329,21.3535,0.256546,5.69853,21.5213,0.140291,5.52688,21.5802,0.409111,5.803,21.3333,-0.138139,6.08462,21.2033,-0.066504,6.10465,20.8431,-0.196844,5.80785,20.8013,-0.299974,6.12877,20.7466,-0.125014,6.06334,20.5738,-0.262039,5.60141,20.3778,-0.153374,5.38746,20.5678,-0.188744,5.65334,20.5316,-0.290794,5.82479,20.3552,-0.206399,5.40053,20.3631,0.093871,5.19895,20.5394,0.065801,5.28919,20.4476,0.375991,5.00324,20.715,0.351476,5.35014,20.6338,0.589311,5.02914,20.9399,0.590856,5.55876,20.7715,0.686721,5.17639,21.2144,0.715861,5.78474,20.9792,0.619721,5.41001,21.4123,0.637611,3.83505,22.387,0.484681,3.65172,22.1472,0.391401,3.50627,22.0021,0.227641,3.38715,21.9155,-0.121539,3.56662,21.9318,-0.452959,3.77737,22.1369,-0.633399,4.10463,22.3857,-0.657459,6.86175,20.4761,-0.001599,6.17341,20.7331,-0.134304,6.17632,20.4851,-0.221119,9.09591,18.6825,0.98544,9.06369,18.5616,0.87475,9.10586,18.728,1.14566,9.01529,18.7577,1.45747,8.82419,18.643,1.64871,8.71885,18.5166,1.66128,8.67016,18.4851,1.57351,8.7043,18.4176,1.43697,8.79692,18.3953,1.25028,8.78834,18.3726,1.11477,8.96474,18.3635,0.92508,2.78735,22.8231,-0.740448,2.67717,22.5092,-0.157689,2.79935,22.588,0.138566,2.89106,22.7376,0.299562,10.744,16.9993,1.09048,10.7233,17.0145,1.14142,10.7199,16.9876,1.16329,10.7598,16.9562,1.096,10.6678,16.9544,1.14837,10.6507,16.9423,1.11348,10.6496,16.9494,1.06709,10.7121,16.9718,1.01276,10.725,16.9964,1.03764,10.6254,17.1103,1.13986,10.6182,17.1342,1.07967,10.5443,17.2012,1.06909,10.5168,17.2007,1.15968,10.6211,17.0953,1.02541,10.5042,17.1594,0.995575,10.598,17.0404,1.0003,10.4443,17.1278,0.990665,10.4931,17.0081,1.0552,10.3838,17.1221,1.03828,10.4864,17.0102,1.12759,10.3741,17.1192,1.11439,10.5123,17.04,1.17096,10.386,17.1357,1.17524,10.609,17.0717,1.19334,10.4637,17.1802,1.197,11.2416,16.823,1.58659,11.202,16.8394,1.64359,11.1928,16.8037,1.66694,11.2613,16.7677,1.59355,11.1348,16.767,1.65022,11.1241,16.7545,1.6035,11.135,16.7662,1.5481,11.2245,16.7932,1.48401,11.2327,16.8229,1.51892,11.0797,16.9595,1.62609,11.086,16.9925,1.55462,10.9865,17.0883,1.53381,10.9362,17.0686,1.63168,11.1058,16.9474,1.48747,10.9605,17.0422,1.43599,11.0864,16.8811,1.44735,10.9096,16.9876,1.41424,10.9426,16.8455,1.49157,10.8272,16.9503,1.46925,10.9205,16.841,1.57752,10.8085,16.9509,1.55829,10.814,16.97,1.6286,10.9427,16.873,1.63764,11.0465,16.908,1.68284,10.8822,17.0212,1.66129,11.2273,16.8094,2.08012,11.176,16.82,2.1373,11.1625,16.7787,2.15749,11.2469,16.7495,2.08475,11.1063,16.7371,2.10835,11.1029,16.7273,2.05434,11.1235,16.7455,1.99726,11.2261,16.7861,1.9629,11.2292,16.8156,2.00537,11.0499,16.9458,2.11158,11.0686,16.9884,2.03858,10.9747,17.0792,2.01514,10.9075,17.0473,2.10779,11.1007,16.9472,1.9643,10.9621,17.0423,1.90604,11.0868,16.8785,1.9107,10.904,16.9853,1.87213,10.9289,16.8292,1.93132,10.8314,16.9227,1.90165,10.8911,16.8154,2.02018,10.7858,16.9198,2.00173,10.9044,16.845,2.0924,10.7708,16.9431,2.07482,11.0054,16.8838,2.16241,10.8386,16.9927,2.12748,10.6718,17.3416,2.03781,10.7766,17.3241,1.95741,10.6426,17.462,1.92956,10.5724,17.4099,2.02961,10.4748,17.2508,2.02651,10.519,17.1721,2.04825,10.5706,17.2492,2.0785,10.4906,17.3243,2.0644,10.5843,17.3274,1.75297,10.6878,17.23,1.78991,10.5858,17.1987,1.80469,10.5305,17.2707,1.81022,10.3334,17.6488,1.95923,9.98672,17.8605,1.90482,10.0098,17.7173,1.91511,10.2983,17.4978,2.01004,10.389,17.6514,1.73948,10.4085,17.4806,1.70074,10.088,17.6169,1.61478,10.064,17.8372,1.61881,10.8777,17.1138,2.09133,10.7875,17.0661,2.1319,10.8801,17.0072,1.86008,10.927,17.1113,1.89935,10.7291,17.0024,1.87454,10.4495,17.3244,1.76876,10.4796,17.4109,1.73043,10.4002,17.4071,2.02755,10.3931,17.3061,2.00778,10.7255,17.3357,1.8477,10.6404,17.4195,1.81922,10.6728,17.022,2.07129,10.5489,17.1464,1.92705,10.7057,16.9719,1.98256,10.9058,17.1649,1.99855,10.4896,17.2325,1.91402,10.4204,17.2935,1.88332,10.5419,17.5041,1.79905,10.5183,17.5944,1.88787,10.3264,17.3769,1.73629,10.2791,17.3414,1.85225,10.2627,17.3648,1.98168,10.0678,17.5466,1.66221,10.023,17.5498,1.78719,10.4907,17.5141,1.98057,10.3988,17.6987,1.85181,10.1871,17.889,1.79092,9.79625,17.6277,1.63769,9.78917,17.6295,1.51208,10.0746,17.5406,1.56968,9.7967,17.6084,1.28445,9.80006,17.6219,1.21877,10.0195,17.5782,1.24846,10.0361,17.5742,1.31784,9.80852,18.1752,1.45383,9.80706,18.1916,1.53391,9.98224,18.0177,1.58348,10.0164,18.008,1.52447,9.7552,17.6614,1.10553,9.78122,17.7326,0.98462,9.92063,17.6672,1.00717,9.93402,17.6139,1.11987,9.88504,17.8783,0.94342,10.0626,17.775,0.984345,9.96858,17.7275,0.964885,9.8249,17.8083,0.94265,9.82451,18.1289,1.18758,9.80558,18.1597,1.31561,10.0014,18.013,1.33718,9.9717,17.9818,1.16186,9.88724,18.0413,1.05878,9.77666,18.1272,1.04707,9.42705,18.4436,0.99807,9.3928,18.5263,1.30331,9.29637,18.5405,1.60719,9.36444,18.5596,1.44516,8.704,18.331,1.67647,8.69682,18.2282,1.83953,8.79452,18.3765,1.86348,8.88481,18.143,1.34627,8.80626,18.163,1.48176,8.78964,18.3233,1.54103,8.96031,18.1088,1.03909,8.89463,18.1197,1.21012,9.06771,18.1804,0.902375,9.01273,18.1257,0.968505,9.15422,18.251,0.85641,9.22831,18.3673,0.85339,9.23029,17.4308,3.13443,9.15771,17.4082,3.15627,9.18894,17.3706,3.16458,9.24652,17.4265,3.14417,9.09159,17.3742,3.11719,9.0894,17.3567,3.12862,9.25755,17.9609,1.10322,9.18886,17.9603,1.2358,9.55476,18.3438,1.09583,9.55242,18.3273,1.02561,9.56518,18.3708,1.25191,9.54026,18.3912,1.45494,9.55263,18.3858,1.36224,10.0207,17.8462,1.19535,10.0979,17.8561,1.34282,10.0563,17.6654,1.30337,10.0463,17.6365,1.26267,9.97155,17.839,1.95599,10.0013,17.7048,1.96995,10.089,17.6179,1.58539,10.0559,17.8397,1.554,8.89613,18.3973,1.86414,8.91529,18.4813,1.80248,9.23828,18.2299,2.07933,9.17224,17.9882,2.3404,9.40303,18.028,2.21609,9.04703,18.0997,2.31258,9.01074,18.4001,1.9138,8.82128,18.0251,2.23918,8.86013,18.063,2.25193,8.70279,18.0222,1.92638,8.68825,18.0987,1.69463,9.16332,17.8418,1.76087,9.14174,17.7623,2.02504,9.58323,18.3723,1.30844,9.93935,18.0861,1.41102,9.8127,18.1726,1.38636,9.50735,18.3836,1.60865,9.57851,18.3673,1.54449,9.76059,18.1664,1.72624,9.92013,17.992,1.83702,9.89315,18.1221,1.6682,9.80187,18.2108,1.6296,9.32996,18.311,1.93285,9.05076,18.5102,1.7488,9.77834,17.6152,1.40428,10.0446,17.5356,1.46626,9.77936,17.5821,1.85977,9.3638,17.8798,2.2572,9.59671,17.7716,2.25377,9.68114,17.8613,2.25869,10.0287,17.5745,1.91376,10.0129,17.5696,1.99784,10.1212,17.9502,1.76041,9.90438,17.9559,0.997935,9.73806,18.0927,0.96767,9.725,18.164,1.81291,9.8899,17.9902,1.8913,9.4964,18.3623,1.67854,9.50048,18.3344,0.943455,9.17231,17.9973,1.41501,8.88612,17.8471,2.08327,9.08414,17.7374,2.18259,8.71509,18.1258,1.61642,9.1053,17.6281,2.84889,9.11732,17.6629,2.80874,9.05397,17.6431,2.79706,9.05321,17.6204,2.84061,9.16858,17.5161,2.59989,9.17806,17.4937,2.63149,9.11313,17.4681,2.62862,9.10396,17.4902,2.59594,9.16065,17.7627,2.24875,9.34915,17.8359,1.83872,9.42823,17.765,2.06043,9.13672,17.9215,1.65464,9.21738,17.9495,1.60339,9.32514,17.9304,1.02616,9.49348,17.9692,0.937125,9.61219,18.0093,0.88708,9.67188,18.0483,0.90373,9.01755,17.511,2.65873,9.01669,17.4987,2.67548,9.10457,17.3169,3.05746,9.20791,17.3349,3.07396,9.27116,17.4,3.07377,9.19944,17.6844,2.691,9.21255,17.6402,2.75481,9.23427,17.6249,2.72056,9.54103,18.0906,2.09651,8.77201,17.91,2.11786,9.02434,17.5788,2.81911,9.00259,17.5868,2.77427,9.22762,17.6129,2.7889,9.25223,17.5733,2.75323,9.22787,17.5491,2.93177,9.25101,17.4905,3.02693,9.29167,17.4706,2.98786,9.27227,17.5269,2.90183,9.30026,17.4321,2.97226,9.28389,17.4913,2.85369,9.21532,17.3418,2.94643,9.22461,17.3803,2.80205,9.0992,17.3203,2.93265,9.10169,17.3527,2.79195,9.05664,17.34,2.97006,9.03889,17.3844,2.86656,9.01933,17.4536,2.92996,9.04993,17.3843,3.02429,9.06257,17.9711,2.4535,9.17702,17.9106,2.41408,8.91397,17.9322,2.42926,8.90972,18.0904,2.27446,9.25479,17.8485,2.34448,9.23941,17.7855,2.42387,9.83574,17.6399,2.26537,9.90038,17.7193,2.27029,9.91706,17.8574,2.21902,9.78516,17.9635,2.17552,10.0865,17.9801,1.74531,10.1329,17.9302,1.43785,10.091,17.9716,1.43685,10.0167,17.9254,1.06683,10.0625,17.8712,1.06565,9.85869,17.5753,2.12565,10.0184,17.453,2.1784,10.0067,17.4814,2.2993,10.2047,17.5482,2.04962,10.113,17.4631,2.07145,10.0883,17.5507,0.96513,10.0608,17.4734,1.01228,10.1157,17.8047,1.0707,10.0421,17.4368,1.12108,10.112,17.4501,1.2385,10.3145,17.39,1.61112,10.3492,17.5216,1.62231,10.2276,17.8492,1.44328,9.96324,17.9477,2.07677,10.019,17.8817,2.11359,9.78363,18.0915,1.98294,9.67169,18.1692,1.90782,9.62041,18.1274,2.01207,9.88528,18.0231,2.03279,9.99886,18.0581,1.71273,10.036,18.0295,1.4249,9.95771,17.985,1.06692,9.43783,18.3159,1.84936,9.50806,18.3205,1.78461,9.76692,17.5676,2.07314,9.54997,17.7161,2.17249,9.17681,17.9885,1.51876,9.23678,17.5858,2.65843,9.24048,17.5757,2.6711,9.43332,17.754,2.16406,9.15646,17.7078,2.3209,9.07244,17.6813,2.27505,8.90908,17.7449,2.21252,8.81914,17.8388,2.23489,9.14729,17.6248,2.47522,9.07197,17.6105,2.41926,8.97363,17.6667,2.39227,8.94899,17.7144,2.48993,9.0148,17.7592,2.60472,9.10455,17.8006,2.59129,9.18127,17.7726,2.5583,9.22978,17.6974,2.54149,9.25099,17.5356,2.71147,9.18303,17.4525,2.68915,9.11449,17.4389,2.67662,9.02714,17.478,2.71759,9.01486,17.5346,2.81021,9.0821,17.5793,2.89068,9.1711,17.6305,2.84754,9.23241,17.6235,2.61309,9.15788,17.5544,2.55566,9.07837,17.5537,2.51244,8.99449,17.54,2.61693,9.12967,17.4791,3.07054,9.11678,17.5097,2.99452,9.10278,17.5458,2.94698,9.14424,17.4385,3.13385,8.97956,17.6059,2.6928,8.99931,17.5545,2.73241,9.16338,17.6599,2.79969,9.13643,17.6975,2.74769,9.0365,17.7187,2.67813,9.09529,17.6968,2.75902,9.0073,17.6249,2.74016,9.0366,17.6815,2.7445,10.9851,16.8793,2.47143,10.9357,16.8889,2.52995,10.9228,16.8476,2.55008,11.0045,16.8196,2.47502,10.2027,17.3282,2.36634,10.256,17.244,2.39027,10.326,17.3199,2.43985,10.2316,17.3976,2.41473,10.8654,16.8065,2.50203,10.8601,16.7974,2.44787,10.3689,17.3915,2.1192,10.4434,17.3234,2.15543,10.3445,17.2632,2.17197,10.2871,17.3395,2.15665,10.0571,17.5916,2.33468,10.0881,17.7248,2.2791,10.1525,17.7335,2.0922,10.1111,17.8147,2.14825,10.8788,16.8164,2.39052,10.9804,16.8576,2.35399,10.9849,16.8865,2.39671,10.8268,17.0577,2.43535,10.7345,17.1461,2.41139,10.6703,17.1091,2.5002,10.8102,17.0142,2.50852,10.8561,17.0178,2.35988,10.7271,17.1116,2.30276,10.8403,16.9499,2.30612,10.6514,17.0854,2.25799,10.6847,16.8998,2.31325,10.562,17.0269,2.30061,10.6499,16.8849,2.40267,10.5319,17.0059,2.37981,10.5307,17.0241,2.44853,10.6656,16.9135,2.47493,10.7674,16.9517,2.55993,10.5827,17.0836,2.50767,10.6405,17.174,2.48432,10.5391,17.1201,2.508,10.692,17.1781,2.29672,10.6289,17.1063,2.24593,10.4859,17.1029,2.25822,10.4708,17.0524,2.34565,10.2309,17.3956,2.1162,10.2826,17.4625,2.0854,10.1419,17.4753,2.37749,10.1254,17.3834,2.35376,10.4882,17.416,2.22521,10.4098,17.506,2.19238,10.4024,17.5465,2.28812,10.5223,17.4123,2.33983,10.4509,17.0839,2.44045,10.2886,17.2168,2.28344,10.6645,17.229,2.39457,10.2291,17.3039,2.26654,10.412,17.4307,2.40656,10.3288,17.509,2.38646,10.1327,17.3569,2.23026,10.2396,17.5954,2.3262,10.2801,17.676,2.23069,10.3132,17.5781,2.15044,10.1643,17.7606,2.17514,10.4037,17.3843,1.15392,10.4563,17.3638,1.0702,10.3548,17.4803,1.0818,10.3308,17.4496,1.1705,10.2258,17.3356,1.19778,10.2712,17.2517,1.20737,10.3372,17.3134,1.20643,10.2765,17.3794,1.2212,10.25,17.3848,0.958145,10.3146,17.3176,0.9639,10.2463,17.275,1.00494,10.201,17.355,1.02262,10.1246,17.5044,1.23873,10.1584,17.6559,1.1765,10.1176,17.6746,0.98432,10.4979,17.2538,1.14199,10.4505,17.1965,1.19863,10.4971,17.2762,1.05448,10.4089,17.1631,0.98694,10.4817,17.2161,0.984685,10.3251,17.1719,1.02128,10.2382,17.5392,0.98582,10.2478,17.6217,1.07377,10.31,17.448,0.99754,10.1402,17.4045,1.00348,10.1799,17.4543,0.96522,10.2044,17.4539,1.20883,10.1643,17.3852,1.21717,10.3853,17.3808,0.99945,10.3303,17.1833,1.19422,10.2279,17.2562,1.11213,10.3188,17.1673,1.11115,10.1891,17.319,1.11236,10.1453,17.3571,1.11328,10.2615,17.5433,1.16749,10.1966,17.705,1.0695,10.7155,17.3556,1.58462,10.7873,17.3357,1.49131,10.6637,17.4679,1.48587,10.6192,17.4251,1.59378,10.7243,17.342,1.39715,10.6293,17.4202,1.37021,10.5151,17.2795,1.60734,10.5734,17.1846,1.62898,10.6386,17.2633,1.64077,10.5574,17.3388,1.63717,10.5779,17.3324,1.32978,10.6746,17.2371,1.35037,10.6023,17.1923,1.39144,10.5214,17.2918,1.39512,10.3738,17.6688,1.55048,10.3831,17.4921,1.30838,10.3203,17.3973,1.37312,10.371,17.6663,1.34526,10.9076,17.1331,1.61274,10.8245,17.0917,1.67474,10.9195,17.1746,1.51716,10.8856,16.9985,1.4018,10.9284,17.1102,1.42662,10.7349,17.0315,1.43564,10.4237,17.3465,1.37078,10.4806,17.4162,1.31987,10.4453,17.4309,1.6275,10.4119,17.3458,1.61886,10.7189,17.0458,1.63252,10.5453,17.1836,1.50933,10.7359,16.9992,1.54473,10.504,17.2691,1.50598,10.4402,17.3171,1.50109,10.5295,17.531,1.55794,10.5308,17.5875,1.4588,10.2992,17.3632,1.49403,10.4118,17.7117,1.44783,10.5394,17.5147,1.37682,-0.70151,18.3672,1.97079,-0.36869,18.3517,2.09445,-0.4007,18.9406,2.16974,-0.679185,19.049,2.06328,-0.908605,19.0098,1.86427,-1.00245,18.3826,1.73975,-1.53222,18.6861,0.17188,-1.79191,18.6252,0.5717,-1.6967,18.8758,0.57405,-1.79235,18.566,1.0376,-1.70817,19.0444,1.10805,-1.12722,19.1674,1.82474,-1.29274,18.4491,1.61175,-1.46979,19.1627,1.56065,-1.55647,18.5086,1.4324,-2.79541,23.44,-0.859873,-2.68086,24.0661,-0.677908,-2.29745,24.0605,-0.789438,-2.48297,23.2769,-0.969108,-2.53026,23.0709,-0.899914,-0.488795,25.2876,0.965083,-0.63066,25.3495,0.700673,-0.529445,24.7405,0.817717,-0.35292,24.7109,1.06158,-0.65482,25.3622,0.554708,-0.765925,25.3565,0.230383,-0.86103,24.7928,0.312757,-0.67932,24.7344,0.665922,-0.116885,24.7031,1.07991,-0.30896,25.2137,1.01371,-0.17655,25.1389,1.11437,0,24.7146,1.08517,0,25.1441,1.16793,-0.496375,25.4202,-0.145922,-0.36104,25.4425,-0.272922,-0.49809,24.9226,-0.433323,-0.676235,24.9174,-0.298693,0,25.4528,-0.381907,0,24.941,-0.564343,-0.81232,24.8834,-0.082148,-0.63398,25.3829,0.029253,-0.56159,24.4473,0.958817,-0.289385,24.3989,1.12283,-0.04773,24.2862,1.05692,0,24.2826,1.07299,-0.80316,24.4898,0.768667,-1.33384,24.5249,0.259017,-0.885125,24.8414,0.111352,-1.33422,24.625,-0.050393,-0.587795,24.6422,-0.613578,-0.982445,24.6595,-0.544858,-1.25472,24.6639,-0.306518,-0.6769,24.4189,1.05557,-0.337295,24.3431,1.24392,-1.39729,24.4431,0.497052,-0.86987,24.4435,0.921952,-0.655905,24.3493,-0.808583,-1.14464,24.3921,-0.764533,-1.76962,24.5032,-0.252923,-1.62475,24.48,-0.492643,-0.677905,24.2466,1.11095,-0.312785,24.1452,1.31087,-0.05305,24.147,1.22882,0,24.1418,1.22352,-1.44026,24.3386,0.627407,-0.88846,24.2779,1.00191,-0.98202,24.0811,-0.983643,-0.655715,24.0711,-0.940008,0,24.3513,-0.827518,0,24.1424,-0.944083,-2.11011,24.3021,-0.616913,-2.19159,24.4157,-0.360483,-1.41078,24.1291,-0.958978,-1.65407,24.2395,-0.835738,-0.866815,23.7792,-1.1185,-0.643245,23.804,-1.05806,0,23.8349,-1.06902,-2.6135,24.2124,-0.566083,-2.6097,24.3152,-0.368423,-1.16507,23.7851,-1.10786,-1.53182,23.9406,-1.046,-0.881525,24.0997,1.10806,-0.63905,24.0515,1.20818,-1.48272,24.1995,0.769207,-1.8066,24.4817,-0.042358,-1.86324,24.4786,0.051117,-1.63312,24.4728,0.192577,-1.54667,24.5054,0.123342,-2.18687,24.4397,-0.113813,-2.5717,24.3444,-0.142473,-1.67187,24.4375,0.308252,-1.9083,24.4491,0.171272,-1.98387,24.3374,0.337447,-1.69984,24.3465,0.454567,-2.25136,24.3734,0.122112,-2.45809,24.1999,0.312717,-2.20101,24.1994,0.477202,-2.52901,24.3276,0.040467,-2.71007,24.1888,0.133907,-2.85465,24.1892,-0.095738,-2.90919,24.1661,-0.344283,-1.90853,24.2078,0.567362,-2.2275,23.6392,0.870822,-1.99555,23.6666,1.07237,-1.71073,24.2137,0.636522,-2.85304,24.1053,-0.555143,-0.20424,22.9432,-1.15504,-0.57969,23.3026,-1.14656,0,23.5063,-1.15195,0,22.9911,-1.12604,-1.67253,23.7942,1.1786,-1.75278,22.8443,-1.12172,-1.24528,22.5973,-1.14548,-0.264085,23.2059,1.863,0,23.1769,1.80996,0,23.525,1.68058,-0.567995,23.4745,1.6893,-0.43195,22.5338,2.38768,-0.69257,22.0141,2.56008,-0.465255,21.8627,2.39841,-0.14172,22.481,2.21389,-2.14035,22.0589,1.31535,-1.95631,21.6855,1.66373,-2.07178,21.9229,1.87876,-2.19916,22.2564,1.53277,-1.67102,21.8797,-0.722464,-1.57447,22.1402,-0.884629,-1.36381,21.9877,-0.897894,-1.37166,21.6647,-0.748089,-1.37437,23.7094,1.38406,-0.87175,23.6184,1.5555,-0.647805,22.5106,-1.13134,-0.395465,22.0251,-0.999378,-1.04495,21.9262,-0.931414,-0.5893,21.5145,-0.849859,-1.02039,21.4467,-0.780784,-0.383035,21.7864,2.32354,0,22.0714,2.22598,0,22.3073,2.14933,-1.99542,21.8711,1.13669,-1.79791,21.5172,1.54151,-1.92484,21.5714,0.023206,-1.74332,21.4199,-0.347174,-1.65935,20.652,0.038721,-1.76758,20.6496,0.403801,-1.12804,20.2522,-0.372144,-1.40484,19.8012,0.148746,-1.50086,21.0791,-0.420829,-1.15545,20.8287,-0.547234,-0.68734,20.7987,-0.662974,-2.0453,21.6518,0.513331,-2.14918,22.1695,0.263206,-2.07579,22.1853,-0.282739,-0.342235,20.7949,-0.705869,-0.34686,19.9859,-0.540764,-0.737105,20.0199,-0.496739,0,22.0596,-0.898873,-0.147165,22.05,-0.959773,-1.08658,21.4715,2.33731,-1.64027,21.4577,2.0194,-1.51103,21.3959,1.96678,-1.04834,21.4819,2.3025,-1.87787,24.0261,-0.931338,-2.255,23.0029,-0.951033,-2.39385,23.1346,0.545292,-2.33235,23.0812,0.751057,-2.34132,22.9451,0.334692,-2.33072,22.9461,0.575502,-2.36575,22.8712,-0.783198,-2.30935,22.7396,-0.615029,-2.42543,22.7621,-0.622124,-2.56883,22.9075,-0.798019,-2.34746,22.9007,0.055122,-2.31406,22.7811,-0.132434,-2.26182,22.7593,-0.084353,-2.26947,22.8462,0.071907,-2.41555,22.996,0.204737,-2.22861,22.6743,0.402997,-2.19444,22.6278,0.089112,-2.18596,22.5205,-0.174694,-1.29504,22.2249,-1.00631,-1.08868,22.0625,-0.960834,0,20.7972,-0.576839,0,20.1251,-0.440449,-2.41779,23.593,0.703282,-2.06087,24.1694,0.590887,-2.5122,23.0824,0.359067,-2.25887,22.704,0.688952,-2.15665,22.3502,0.851276,-2.20435,22.5325,1.08036,-2.27357,22.8833,0.900112,-2.15501,22.2643,0.640036,-2.31397,22.7233,-0.368243,-2.26632,22.6809,-0.299248,0,22.794,1.97347,-0.085915,22.8574,2.03689,-1.86203,23.524,1.28031,-1.82237,23.3569,1.46635,-1.34403,23.5149,1.58567,-0.387875,21.0104,2.42214,-0.41768,19.9801,2.31038,0,20.0455,2.28252,0,21.1291,2.38782,-1.24168,20.3776,2.03593,-1.49309,20.7836,2.01136,-1.67945,20.5979,1.77303,-1.39678,20.1966,1.87455,-1.80991,20.4222,1.42652,-1.47748,19.9551,1.69692,-1.79112,20.29,0.995271,-1.89609,20.743,0.862291,-1.6614,20.2513,0.420921,-0.95967,19.9359,-0.339589,-0.688565,19.4431,-0.376619,-1.05964,19.5394,-0.187144,-0.308155,19.362,-0.481275,0,19.2555,-0.28681,-0.368805,21.4953,2.35158,0,21.7055,2.29049,-1.42308,21.2481,2.07137,-1.29143,20.9493,2.16681,-0.925745,21.2417,2.36529,-2.08162,23.1821,1.07744,-0.3874,22.9197,2.15966,-2.16968,22.8351,1.30406,-2.23415,22.6108,-0.523204,-1.74542,22.568,-0.993688,-1.73647,22.348,-0.912883,-1.90711,22.2409,-0.702734,-2.11775,22.6656,-0.772539,0,18.8951,2.07655,0,19.5038,2.17465,-0.39883,19.5144,2.20045,-0.67304,19.506,2.13564,-0.86169,19.5126,2.0052,-1.28525,19.5613,1.79144,-1.00103,19.5251,1.92171,-1.0029,19.7837,1.95819,-1.5815,19.2526,0.543265,-1.44688,19.0645,0.184085,-1.13788,18.8832,-0.16167,-1.19205,18.706,-0.189955,-1.64497,19.3624,1.10021,-0.87037,22.5577,-1.1804,-0.79324,18.711,-0.340255,-1.5891,19.67,0.52521,-1.53126,20.0371,0.287166,-1.66358,19.7224,1.08685,-0.660495,19.9366,2.20467,-1.16054,22.2505,-1.0198,-1.03894,22.595,-1.18897,-1.00896,23.6211,-1.14811,-1.47422,19.5066,1.59689,-1.67325,21.2273,1.81449,-1.83479,21.0704,1.5392,-2.05817,21.7857,0.925661,-1.91355,20.9199,1.22188,-1.0803,20.5088,2.19518,-0.799825,20.6951,2.35419,-1.26568,21.6954,2.51321,-1.74386,21.6655,2.24357,-2.04137,22.8233,1.65747,-1.78658,23.2036,1.69166,-1.41354,23.31,1.78839,-1.03499,23.2459,1.95435,-0.80904,23.405,1.77343,-0.79445,22.5366,2.54678,-1.00626,22.2056,2.65433,-0.09006,24.0102,1.36081,-2.50473,22.9539,0.211327,-2.46212,22.8417,0.067271,-2.3976,22.737,-0.166999,-2.37657,22.7182,-0.419199,-0.1841,21.5672,-0.868054,0,18.7087,-0.30311,-0.316995,18.7162,-0.42517,-0.50367,23.1847,1.95873,-0.734975,22.8582,2.37291,-0.839125,23.0625,2.16349,-2.11441,22.45,1.82862,-2.03997,22.1797,2.1154,-1.78876,22.0025,2.40005,-1.43089,21.9923,2.59235,-1.18273,22.6426,2.54795,-1.30989,22.4474,2.6239,-1.55918,22.3587,2.56022,-1.75045,22.3518,2.44181,-1.90546,22.4782,2.24183,-1.93552,22.6437,2.08587,-1.89361,22.8268,1.98212,-1.72907,23.0184,1.94394,-1.49072,23.0993,2.02669,-1.27066,23.0703,2.17914,-1.16266,22.9619,2.30476,-1.09708,22.8174,2.44669,0,21.5631,-0.818709,0,24.0132,1.33582,-1.79281,22.7298,2.24242,-1.71814,22.7477,2.35566,-1.70734,22.833,2.28615,-1.76797,22.8247,2.19122,-1.70966,22.6065,2.39972,-1.78149,22.6617,2.31223,-1.51042,22.6502,2.50827,-1.52168,22.7796,2.44982,-1.63201,22.7225,2.44589,-1.60921,22.6109,2.47978,-1.37885,22.8157,2.43965,-1.43489,22.7426,2.48449,-1.49859,22.8673,2.37733,-1.38357,22.9023,2.35505,-1.44043,22.9508,2.26772,-1.59255,22.9076,2.28194,-1.66166,22.9047,2.14603,-1.55293,22.9605,2.204,0,24.6298,-0.712373,-0.746475,25.2997,0.139413,0,18.3354,1.94207,-0.756155,26.223,0.235327,-0.57717,26.2338,-0.045998,-0.498355,25.7965,-0.093512,-0.66499,25.6224,0.089443,-0.591365,25.8093,0.910338,-0.722295,25.8226,0.577338,-0.466445,25.7693,1.0604,-0.192175,25.4059,1.14651,-0.301895,25.4487,1.05866,-0.72628,25.8401,0.395453,-0.31205,25.7602,1.07691,-0.30789,25.8492,-0.200432,0,25.8967,-0.295212,-0.17772,25.6209,1.22433,-0.493035,25.9935,1.18073,-0.702225,26.2121,0.902167,-0.337055,25.8799,1.22968,-0.75994,26.2454,0.451667,-0.134065,25.7413,1.35618,-0.296065,26.2851,-0.131428,0,25.5977,1.25365,0,25.7218,1.35654,0,25.3911,1.20555,0,26.2923,-0.260183,-2.08114,24.4587,0.077677,-2.0604,24.4809,-0.008658,0.4007,18.9406,2.16974,0.368865,18.349,2.09409,0.70151,18.3672,1.97079,0.679185,19.049,2.06328,1.00245,18.3826,1.73975,0.908605,19.0098,1.86427,1.53222,18.6861,0.17188,1.6967,18.8758,0.57405,1.79191,18.6252,0.5717,1.79318,18.5683,1.03549,1.70817,19.0444,1.10805,1.29274,18.4491,1.61175,1.12722,19.1674,1.82474,1.55841,18.4939,1.42954,1.46979,19.1627,1.56065,2.79541,23.44,-0.859873,2.48297,23.2769,-0.969108,2.29745,24.0605,-0.789438,2.68086,24.0661,-0.677908,2.53026,23.0709,-0.899913,2.56883,22.9075,-0.798018,0.488795,25.2876,0.965083,0.35292,24.7109,1.06158,0.529445,24.7405,0.817717,0.63066,25.3495,0.700673,0.65482,25.3622,0.554708,0.67932,24.7344,0.665922,0.86103,24.7928,0.312757,0.765925,25.3565,0.230383,0.30896,25.2137,1.01371,0.116885,24.7031,1.07991,0.17655,25.1389,1.11437,0.49809,24.9226,-0.433323,0.36104,25.4425,-0.272922,0.496375,25.4202,-0.145922,0.676235,24.9174,-0.298693,0.63398,25.3829,0.029253,0.81232,24.8834,-0.082148,0.289385,24.3989,1.12283,0.56159,24.4473,0.958817,0.04773,24.2863,1.05692,0.80316,24.4898,0.768667,1.33384,24.5249,0.259017,1.33423,24.625,-0.050393,0.885125,24.8414,0.111352,0.587795,24.6422,-0.613578,0.982445,24.6595,-0.544858,1.25472,24.6639,-0.306518,0.337295,24.3431,1.24392,0.6769,24.4189,1.05557,1.39729,24.4431,0.497052,0.86987,24.4435,0.921952,0.655905,24.3493,-0.808583,1.14465,24.3921,-0.764533,1.76962,24.5032,-0.252923,1.62475,24.48,-0.492643,0.312785,24.1452,1.31087,0.677905,24.2466,1.11095,0.05305,24.147,1.22882,1.44026,24.3386,0.627407,0.88846,24.2779,1.00191,0.982021,24.0811,-0.983643,0.655715,24.0711,-0.940008,2.11011,24.3022,-0.616913,2.1916,24.4157,-0.360483,1.41079,24.1291,-0.958978,1.65407,24.2395,-0.835738,0.866816,23.7792,-1.1185,0.643245,23.804,-1.05806,2.6097,24.3152,-0.368423,2.6135,24.2124,-0.566083,1.16507,23.7851,-1.10786,1.53182,23.9406,-1.046,0.881525,24.0997,1.10806,0.63905,24.0515,1.20818,1.48272,24.1995,0.769207,1.8066,24.4817,-0.042358,1.54667,24.5054,0.123342,1.63312,24.4728,0.192577,1.86324,24.4787,0.051117,2.18687,24.4397,-0.113813,2.5717,24.3444,-0.142473,1.67187,24.4375,0.308252,1.69984,24.3465,0.454567,1.98387,24.3374,0.337447,1.9083,24.4491,0.171272,2.20102,24.1994,0.477202,2.45809,24.1999,0.312717,2.25136,24.3734,0.122112,2.71007,24.1888,0.133907,2.52901,24.3276,0.040467,2.85465,24.1892,-0.095738,2.90919,24.1661,-0.344283,1.90853,24.2078,0.567362,1.71073,24.2137,0.636522,1.99555,23.6666,1.07237,2.2275,23.6392,0.870822,2.85304,24.1053,-0.555143,2.59325,23.6701,0.588452,2.9125,23.637,0.431002,3.20967,23.6439,0.242117,0.57969,23.3026,-1.14656,0.20424,22.9432,-1.15504,1.67253,23.7942,1.1786,1.75278,22.8443,-1.12172,1.24528,22.5973,-1.14548,0.264085,23.2059,1.863,0.567995,23.4745,1.6893,0.87037,22.5577,-1.1804,0.647805,22.5106,-1.13134,0.43195,22.5338,2.38768,0.14172,22.481,2.21389,0.465255,21.8627,2.39841,0.69257,22.0141,2.56008,2.07179,21.9229,1.87876,1.95631,21.6855,1.66373,2.14035,22.0589,1.31535,2.19916,22.2564,1.53277,1.67102,21.8797,-0.722464,1.37166,21.6647,-0.748089,1.36381,21.9877,-0.897894,1.57447,22.1402,-0.884629,1.37437,23.7094,1.38406,0.87175,23.6184,1.5555,0.395465,22.0252,-0.999378,1.02039,21.4467,-0.780784,0.5893,21.5145,-0.849859,1.04495,21.9262,-0.931414,1.99542,21.8711,1.13669,1.79791,21.5172,1.54151,1.92484,21.5714,0.023206,1.76758,20.6496,0.403801,1.65935,20.652,0.038721,1.74332,21.4199,-0.347174,1.50086,21.0791,-0.420829,1.40484,19.8012,0.148746,1.12804,20.2522,-0.372144,1.15545,20.8287,-0.547234,0.68734,20.7987,-0.662974,2.14918,22.1695,0.263206,2.0453,21.6518,0.513331,2.07579,22.1853,-0.282739,0.34686,19.9859,-0.540764,0.342235,20.7949,-0.705869,0.737105,20.0199,-0.496739,0.147165,22.05,-0.959774,1.51103,21.3959,1.96678,1.64027,21.4577,2.0194,1.08658,21.4715,2.33731,1.04834,21.4819,2.3025,1.87787,24.0261,-0.931338,2.255,23.0029,-0.951033,2.33235,23.0812,0.751057,2.39385,23.1346,0.545292,2.33072,22.9461,0.575502,2.34132,22.9451,0.334692,2.42543,22.7621,-0.622123,2.30935,22.7396,-0.615029,2.36575,22.8712,-0.783198,2.34746,22.9007,0.055122,2.26947,22.8462,0.071907,2.26182,22.7593,-0.084353,2.31406,22.7811,-0.132433,2.41555,22.996,0.204737,2.22861,22.6743,0.402997,2.19444,22.6278,0.089112,2.18596,22.5205,-0.174694,1.29504,22.2249,-1.00631,1.74542,22.568,-0.993688,1.73647,22.348,-0.912884,1.08868,22.0625,-0.960834,2.41779,23.593,0.703282,2.06087,24.1694,0.590887,2.5122,23.0825,0.359067,2.25887,22.704,0.688952,2.27357,22.8833,0.900112,2.20435,22.5325,1.08036,2.15665,22.3502,0.851277,2.15501,22.2643,0.640037,2.26632,22.6809,-0.299248,2.31397,22.7233,-0.368243,0.085915,22.8574,2.03689,1.34403,23.5149,1.58567,1.82237,23.3569,1.46635,1.86203,23.524,1.28031,0.387875,21.0104,2.42214,0.41768,19.9801,2.31038,1.24168,20.3776,2.03593,1.39678,20.1966,1.87455,1.67945,20.5979,1.77303,1.49309,20.7836,2.01136,1.47748,19.9551,1.69692,1.80991,20.4222,1.42652,1.79112,20.29,0.995271,1.6614,20.2513,0.420921,1.89609,20.743,0.862291,0.688565,19.4431,-0.376619,0.95967,19.9359,-0.339589,1.05964,19.5394,-0.187144,0.308155,19.362,-0.481275,0.368805,21.4953,2.35158,1.42308,21.2481,2.07137,0.925745,21.2417,2.36529,1.29143,20.9493,2.16681,2.08162,23.1821,1.07744,0.3874,22.9197,2.15966,2.16968,22.8351,1.30406,2.23415,22.6108,-0.523204,1.90711,22.2409,-0.702734,2.11775,22.6656,-0.772539,0.39883,19.5144,2.20045,0.86169,19.5126,2.0052,0.67304,19.506,2.13564,1.28525,19.5613,1.79144,1.0029,19.7837,1.95819,1.00103,19.5251,1.9217,1.44688,19.0645,0.184085,1.5815,19.2526,0.543265,1.19205,18.706,-0.189955,1.13788,18.8832,-0.16167,1.64497,19.3624,1.10021,0.794285,18.7129,-0.33946,1.5891,19.67,0.52521,1.53126,20.0371,0.287166,1.66358,19.7224,1.08685,0.660495,19.9366,2.20467,1.16054,22.2505,-1.0198,1.03894,22.595,-1.18897,1.00896,23.6211,-1.14811,1.47422,19.5066,1.59689,1.67325,21.2273,1.81449,1.83479,21.0704,1.5392,2.05817,21.7857,0.925661,1.91355,20.9199,1.22188,1.0803,20.5088,2.19518,0.799825,20.6951,2.35419,1.74386,21.6655,2.24357,1.26568,21.6954,2.51321,1.78658,23.2037,1.69166,2.04137,22.8233,1.65747,1.41354,23.31,1.78839,0.80904,23.405,1.77343,1.03499,23.2458,1.95435,1.00626,22.2057,2.65433,0.79445,22.5366,2.54678,0.09006,24.0102,1.36081,2.50473,22.9539,0.211327,2.46212,22.8417,0.067272,2.3976,22.737,-0.166998,2.37657,22.7182,-0.419198,0.1841,21.5672,-0.868054,0.316995,18.7162,-0.42517,0.50367,23.1847,1.95873,0.734975,22.8582,2.37291,0.839125,23.0625,2.16349,2.11442,22.45,1.82862,2.03997,22.1797,2.1154,1.78876,22.0025,2.40005,1.43089,21.9923,2.59235,1.18273,22.6426,2.54795,1.30989,22.4474,2.6239,1.55918,22.3587,2.56022,1.75045,22.3518,2.44181,1.90546,22.4782,2.24183,1.93552,22.6437,2.08587,1.89361,22.8268,1.98212,1.72907,23.0184,1.94394,1.49072,23.0993,2.02669,1.27066,23.0703,2.17914,1.16266,22.9619,2.30476,1.09708,22.8174,2.44669,0.383035,21.7864,2.32354,1.79281,22.7298,2.24242,1.71814,22.7477,2.35566,1.78149,22.6617,2.31223,1.70966,22.6065,2.39972,1.63201,22.7225,2.44589,1.60921,22.6109,2.47978,1.51042,22.6502,2.50827,1.52168,22.7796,2.44982,1.43489,22.7426,2.48449,1.37885,22.8157,2.43965,1.49859,22.8674,2.37733,1.38357,22.9023,2.35505,1.59255,22.9076,2.28194,1.55293,22.9605,2.204,1.44043,22.9508,2.26772,1.66166,22.9047,2.14603,1.70734,22.833,2.28615,1.76797,22.8247,2.19122,0.746475,25.2997,0.139413,0.66499,25.6224,0.089443,0.756155,26.223,0.235327,0.72628,25.8401,0.395453,0.591365,25.8093,0.910338,0.722295,25.8226,0.577338,0.466445,25.7693,1.0604,0.192175,25.4059,1.14651,0.301895,25.4487,1.05866,0.31205,25.7602,1.07691,0.30789,25.8492,-0.200432,0.498355,25.7965,-0.093512,0.17772,25.6209,1.22433,0.702225,26.2121,0.902167,0.493035,25.9935,1.18073,0.337055,25.8799,1.22968,0.75994,26.2454,0.451667,0.134065,25.7413,1.35618,0.57717,26.2338,-0.045998,0.296065,26.2994,-0.131428,2.08115,24.4587,0.077677,2.0604,24.4809,-0.008658,2.68531,2.73502,-1.1582,2.84669,2.63985,-1.25789,2.7197,2.46051,-1.29874,2.60182,2.43619,-1.24873,3.17783,2.86878,-0.241954,2.9229,2.8442,-0.322199,2.97153,2.33215,-0.177049,3.25812,2.36307,-0.170999,3.4155,2.70866,-1.25025,3.49808,2.31426,-1.30424,3.37511,2.43011,-1.4597,3.30064,2.68275,-1.34269,3.42909,2.84291,-0.386359,3.49701,2.34325,-0.307179,3.63286,2.35806,-0.554079,3.53389,2.78482,-0.697819,2.7672,2.79217,-0.526419,2.65579,2.72829,-0.803784,2.67242,2.30167,-0.582699,2.74547,2.32976,-0.351264,3.04094,2.45682,-1.59447,2.80864,2.41888,-1.44537,2.87294,2.63831,-1.45224,3.04994,2.64702,-1.58516,3.25781,2.66588,-1.49903,3.25739,2.40024,-1.55553,2.82322,1.07191,-1.1677,2.81103,0.45515,-0.651135,2.80981,0.95521,-0.580145,2.73433,1.40274,-0.99511,2.68963,1.0782,-1.40724,2.60985,1.59195,-1.40691,2.76601,2.16833,-1.54876,2.96003,2.25071,-1.71771,2.8853,1.87344,-1.99315,2.60994,1.71219,-1.74785,3.33874,1.8171,-0.04445,3.30787,2.17942,-0.163854,3.00444,2.1239,-0.166369,3.01997,1.74164,-0.077155,2.91002,1.50431,-2.05933,2.59024,1.36493,-1.84285,3.49189,2.03276,-1.3916,3.68703,1.98826,-1.11645,3.61368,1.70218,-1.16338,3.46163,1.76893,-1.49458,3.74055,0.600325,-0.84105,3.73486,1.03646,-0.7818,3.79356,0.826675,-0.568065,3.81539,0.439475,-0.61421,3.49136,1.26235,-1.65477,3.51837,1.62634,-1.56453,3.62471,1.52408,-1.18278,3.68915,1.04163,-1.03587,3.31412,2.20595,-1.66353,3.3437,1.87726,-1.93722,3.40719,1.52404,-1.96777,3.59725,1.85776,-0.222625,3.60435,1.24528,-0.092785,3.70211,1.16819,-0.42464,3.69174,1.94378,-0.457214,2.74344,1.78746,-0.607175,2.84514,1.59635,-0.24692,2.79295,2.06412,-0.325379,2.68325,2.02245,-0.603055,2.6153,1.87661,-0.983985,2.71544,2.15019,-1.41187,3.18016,1.00801,-1.55353,3.22926,0.87543,-1.27307,2.96084,0.85236,-1.18965,2.82044,0.96612,-1.4468,2.94539,0.44287,-0.760305,2.92706,-0.139775,-0.419135,2.82479,-0.15547,-0.347555,2.97598,1.35241,-1.99236,2.69013,1.24323,-1.84862,3.34463,1.31833,-1.91284,3.56025,0.87311,-1.25849,3.45833,1.08751,-1.63432,3.73594,2.34846,-0.888514,3.69653,2.2212,-1.14288,3.5575,2.73991,-1.01285,3.67336,2.64976,-0.881699,3.61097,2.39708,-1.28088,3.69648,2.06505,-1.09505,3.5374,0.0691,-0.63983,3.31854,-0.052985,-0.570825,3.19571,0.25595,-0.70602,3.41705,0.273255,-0.77637,2.74193,0.28741,-0.255865,2.85637,0.36453,-0.03719,2.82176,1.041,-0.1025,3.7396,0.564685,-0.098615,3.82607,0.50012,-0.210485,3.3088,0.678125,0.143515,3.42516,1.29665,0.099225,3.04754,1.26556,0.05475,3.04294,0.645015,0.15477,2.62221,2.70461,-0.931484,2.52522,2.34856,-1.0021,3.68261,2.40129,-0.780419,3.70469,2.20179,-0.816219,3.51142,0.70885,0.13443,3.52204,2.1764,-0.264994,3.66839,2.14561,-0.477199,3.41542,2.15212,-1.55875,3.74193,1.39942,-0.77135,3.73795,1.99073,-0.741549,3.43598,1.90695,-1.67274,2.58922,2.04619,-1.011,2.61793,2.19191,-1.31218,3.75257,0.44403,-0.79663,3.82648,0.25349,-0.635125,3.74758,0.186055,-0.653775,3.85108,-0.03896,-0.54962,3.6994,-0.146495,-0.53424,3.90783,0.18211,-0.50955,3.9056,-0.007225,-0.562775,3.8895,0.53935,-0.29416,3.70791,0.32931,-0.800395,3.10574,-0.07706,0.337865,3.41773,-0.049865,0.329675,3.94394,-0.177365,-0.337865,3.97989,-0.37927,-0.37465,3.99784,-0.018485,-0.062505,3.8019,-0.063235,0.132015,3.8996,-0.08214,0.1062,2.95632,-0.66791,0.03336,2.83981,-0.615405,0.091315,3.74893,-0.671785,-0.095465,3.60455,-0.6974,-0.084995,3.35958,-0.67861,-0.01091,3.94795,-0.522285,-0.34899,2.80959,-0.27282,0.255465,2.92707,-0.149315,0.318105,3.62076,-0.0473,0.270845,3.15758,-0.617195,1.13522,3.2141,-0.40475,1.11041,3.07065,-0.529795,1.01354,3.31717,-0.63773,1.13102,3.44043,-0.417855,1.15701,4.10142,-0.51078,0.227425,4.05907,-0.563415,-0.024285,4.0609,-0.489925,-0.00711,3.57733,-0.663925,1.07619,3.64162,-0.456345,1.01711,4.10278,-0.71442,0.40511,4.05211,-0.51471,0.540605,3.90418,-0.711645,0.78829,3.95203,-0.492595,0.7608,3.8213,-0.48743,0.88547,3.72473,-0.705065,0.98368,3.16785,-0.37757,0.891425,3.01698,-0.462355,0.863505,3.10482,-0.667725,0.87877,3.34463,-0.382145,0.846825,3.23368,-0.705715,0.87723,4.01096,-0.56524,-0.205125,4.00167,-0.41781,-0.227785,4.05065,-0.373025,0.19114,3.5698,-0.351515,0.82349,3.50298,-0.691265,0.790035,4.0142,-0.69461,0.21334,4.00012,-0.41512,0.469265,3.84781,-0.71192,0.59345,3.89755,-0.41426,0.650265,3.7396,-0.72132,0.80148,3.77345,-0.32176,0.65791,2.9425,-0.469585,0.56462,2.95863,-0.620425,0.598855,3.03106,-0.367275,0.58512,3.23197,-0.275825,0.56424,3.46442,-0.24651,0.56638,3.66768,-0.26411,0.474085,3.82646,-0.322285,0.456225,3.9741,-0.25761,0.343855,3.98105,-0.23749,0.106585,3.99896,-0.32589,-0.279215,4.01844,-0.494145,-0.27928,4.01135,-0.655895,0.01184,3.77549,-0.70356,0.33009,3.64057,-0.71916,0.4991,3.38159,-0.686425,0.52787,3.09482,-0.70816,0.57575,-2.68531,2.73502,-1.1582,-2.60182,2.43619,-1.24873,-2.7197,2.46051,-1.29874,-2.84669,2.63985,-1.25789,-3.17783,2.86878,-0.241954,-3.25812,2.36307,-0.170999,-2.97153,2.33215,-0.177049,-2.9229,2.8442,-0.322199,-3.4155,2.70867,-1.25025,-3.30064,2.68275,-1.34269,-3.3751,2.43011,-1.4597,-3.49808,2.31426,-1.30424,-3.42909,2.84291,-0.386359,-3.53389,2.78482,-0.697819,-3.63286,2.35806,-0.554079,-3.49701,2.34325,-0.307179,-2.7672,2.79217,-0.526419,-2.74547,2.32976,-0.351264,-2.67242,2.30167,-0.582699,-2.65579,2.72829,-0.803784,-2.87294,2.63831,-1.45224,-2.80864,2.41888,-1.44537,-3.04094,2.45682,-1.59448,-3.04994,2.64702,-1.58516,-3.25739,2.40024,-1.55553,-3.25781,2.66588,-1.49903,-2.82322,1.07191,-1.1677,-2.73433,1.40274,-0.99511,-2.80981,0.95521,-0.580145,-2.81103,0.45515,-0.651135,-2.68963,1.0782,-1.40724,-2.60985,1.59195,-1.40691,-2.76601,2.16833,-1.54876,-2.60994,1.71219,-1.74785,-2.8853,1.87344,-1.99315,-2.96003,2.25071,-1.71771,-3.33874,1.8171,-0.044449,-3.01997,1.74164,-0.077154,-3.00444,2.1239,-0.166369,-3.30787,2.17942,-0.163854,-2.91002,1.50431,-2.05933,-2.59024,1.36493,-1.84285,-3.49189,2.03276,-1.3916,-3.46163,1.76893,-1.49458,-3.61368,1.70218,-1.16338,-3.68703,1.98826,-1.11645,-3.74055,0.600325,-0.84105,-3.81539,0.439475,-0.61421,-3.79356,0.826675,-0.568065,-3.73486,1.03646,-0.7818,-3.49136,1.26235,-1.65477,-3.68915,1.04163,-1.03587,-3.62471,1.52408,-1.18278,-3.51837,1.62635,-1.56453,-3.3437,1.87726,-1.93722,-3.31412,2.20596,-1.66353,-3.40719,1.52404,-1.96778,-3.70212,1.16819,-0.42464,-3.60435,1.24528,-0.092785,-3.59725,1.85776,-0.222624,-3.69174,1.94378,-0.457214,-2.74344,1.78746,-0.607174,-2.68325,2.02245,-0.603054,-2.79295,2.06412,-0.325379,-2.84514,1.59635,-0.246919,-2.71544,2.15019,-1.41187,-2.6153,1.87661,-0.983985,-3.18016,1.00801,-1.55353,-2.82044,0.96612,-1.4468,-2.96084,0.85236,-1.18965,-3.22926,0.87543,-1.27307,-2.82479,-0.15547,-0.347555,-2.92706,-0.139775,-0.419135,-2.94539,0.44287,-0.760305,-2.69013,1.24323,-1.84862,-2.97598,1.35241,-1.99236,-3.34463,1.31833,-1.91284,-3.45833,1.08751,-1.63432,-3.56025,0.87311,-1.25849,-3.73594,2.34846,-0.888514,-3.67336,2.64976,-0.881699,-3.5575,2.73991,-1.01285,-3.69653,2.2212,-1.14288,-3.69648,2.06505,-1.09505,-3.61097,2.39708,-1.28088,-3.19571,0.25595,-0.70602,-3.31854,-0.052985,-0.570825,-3.5374,0.0691,-0.63983,-3.41705,0.273255,-0.77637,-2.74193,0.28741,-0.255865,-2.82176,1.041,-0.1025,-2.85637,0.36453,-0.03719,-3.7396,0.564685,-0.098615,-3.82607,0.50012,-0.210485,-3.3088,0.678125,0.143515,-3.04294,0.645015,0.15477,-3.04754,1.26556,0.05475,-3.42516,1.29665,0.099225,-2.62221,2.70461,-0.931484,-2.52522,2.34856,-1.0021,-3.70468,2.20179,-0.816219,-3.68261,2.40129,-0.780419,-3.51142,0.70885,0.13443,-3.52204,2.1764,-0.264994,-3.66839,2.14561,-0.477199,-3.41542,2.15212,-1.55875,-3.73795,1.99073,-0.741549,-3.74193,1.39942,-0.77135,-3.43598,1.90695,-1.67274,-2.61793,2.19191,-1.31218,-2.58922,2.04619,-1.011,-3.75258,0.44403,-0.79663,-3.82648,0.25349,-0.635125,-3.85108,-0.03896,-0.54962,-3.74758,0.186055,-0.653775,-3.69941,-0.146495,-0.53424,-3.90783,0.18211,-0.50955,-3.9056,-0.007225,-0.562775,-3.8895,0.53935,-0.29416,-3.70791,0.32931,-0.800395,-3.10574,-0.07706,0.337865,-3.41773,-0.049865,0.329675,-3.97989,-0.37927,-0.37465,-3.94394,-0.177365,-0.337865,-3.99784,-0.018485,-0.062505,-3.8996,-0.08214,0.1062,-3.8019,-0.063235,0.132015,-2.83981,-0.615405,0.091315,-2.95632,-0.66791,0.03336,-3.60455,-0.6974,-0.084995,-3.74893,-0.671785,-0.095465,-3.35958,-0.67861,-0.01091,-3.94795,-0.522285,-0.34899,-2.92707,-0.149315,0.318105,-2.80959,-0.27282,0.255465,-3.62077,-0.0473,0.270845,-3.15758,-0.617195,1.13522,-3.07065,-0.529795,1.01354,-3.2141,-0.40475,1.11041,-3.31717,-0.63773,1.13102,-3.44043,-0.417855,1.15701,-4.10142,-0.51078,0.227425,-4.0609,-0.489925,-0.00711,-4.05907,-0.563415,-0.024285,-3.64162,-0.456345,1.01711,-3.57733,-0.663925,1.07619,-4.10278,-0.71442,0.40511,-4.05211,-0.51471,0.540605,-3.90418,-0.711645,0.78829,-3.95203,-0.492595,0.7608,-3.8213,-0.48743,0.88547,-3.72473,-0.705065,0.98368,-3.16785,-0.37757,0.891425,-3.01698,-0.462355,0.863505,-3.10482,-0.667725,0.87877,-3.34463,-0.382145,0.846825,-3.23368,-0.705715,0.87723,-4.01096,-0.56524,-0.205125,-4.00167,-0.41781,-0.227785,-4.05065,-0.373025,0.19114,-3.5698,-0.351515,0.82349,-3.50298,-0.691265,0.790035,-4.0142,-0.69461,0.21334,-4.00012,-0.41512,0.469265,-3.84781,-0.71192,0.59345,-3.89755,-0.41426,0.650265,-3.7396,-0.72132,0.80148,-3.77345,-0.32176,0.65791,-2.95863,-0.620425,0.598855,-2.9425,-0.469585,0.56462,-3.03106,-0.367275,0.58512,-3.23197,-0.275825,0.56424,-3.46442,-0.24651,0.56638,-3.66768,-0.26411,0.474085,-3.82646,-0.322285,0.456225,-3.9741,-0.25761,0.343855,-3.98105,-0.23749,0.106585,-3.99896,-0.32589,-0.279215,-4.01844,-0.494145,-0.27928,-4.01135,-0.655895,0.01184,-3.77549,-0.70356,0.33009,-3.64057,-0.71916,0.4991,-3.38159,-0.686425,0.52787,-3.09482,-0.70816,0.57575,-0.34601,16.9635,1.67832,0,16.9569,1.68578,0,17.6082,1.92288,-0.383525,17.6074,1.86704,-0.74055,17.5876,1.69827,-1.0351,17.5291,1.49185,-0.988085,17.1783,1.47196,-0.65881,17.0608,1.60638,-1.58268,17.8878,1.37387,-1.77709,17.9851,1.2672,-1.87263,17.7239,1.23435,-1.63177,17.5253,1.37588,-1.9402,18.1723,0.4253,-1.91799,18.3912,0.5598,-1.8336,18.1244,0.14752,-1.90688,18.1377,0.26152,-1.88836,18.2331,0.97337,-1.91206,18.0242,1.01576,-1.95558,18.1859,0.640515,-1.94185,18.1296,0.83911,-0.11676,17.5888,-0.95226,-0.38417,17.6744,-0.918625,-0.444425,17.7193,-0.86791,-0.461765,18.0064,-0.682915,-1.25204,17.5202,1.45257,-1.24015,17.2089,1.36003,0,16.4575,1.53885,-0.46501,16.5302,1.5452,-0.85514,16.8466,1.41766,-0.59714,16.5684,1.48395,-0.025545,17.0343,-1.20647,-0.18119,17.2338,-1.1493,-0.283985,17.4922,-1.03782,-0.895345,16.3353,1.12273,-0.597655,16.4712,1.43455,-0.45555,18.3398,-0.45623,-0.151295,18.0195,-0.578275,-0.77426,17.8848,-0.63582,-0.732095,17.9532,-0.5378,-0.670695,17.9099,-0.633685,-0.636125,17.791,-0.699565,-0.850215,18.0869,-0.42478,-0.928545,18.3937,-0.358575,-1.06589,18.1357,-0.47092,-0.971265,17.9502,-0.571875,-1.33872,17.9694,-0.551725,-1.34093,18.2295,-0.33922,-1.09936,17.915,-0.59601,-1.66118,18.1085,-0.11207,-1.6506,18.3915,0.130995,-1.50899,18.0329,-0.39392,-1.77233,18.2158,0.14643,-1.25579,17.9029,1.53801,-1.02407,17.9275,1.59269,-0.71787,17.9571,1.8636,-1.25191,18.5102,-0.221225,-0.91014,17.875,-0.62585,-0.62256,17.7514,-0.791895,-0.85643,17.8053,-0.699445,-0.54344,17.7748,-0.788955,-0.37756,18.2223,2.07592,0,18.1367,1.96469,-1.97957,17.4869,1.11947,-1.81878,17.2697,1.20437,-0.0133,16.6143,-1.25598,-0.03013,16.8306,-1.18307,0,16.6402,-0.909505,0,16.5037,-0.90416,-2.64791,10.0606,-0.900877,-2.55218,10.5758,-0.863317,-2.4867,10.5423,-1.06307,-2.51555,10.0129,-1.11184,-2.12648,10.4778,-1.22843,-2.2336,9.92129,-1.26262,-1.86343,10.4645,-1.22722,-1.91925,9.89839,-1.27223,-2.88925,10.1659,-0.117727,-2.87817,10.9032,-0.005192,-2.81015,10.8513,-0.462172,-2.87134,10.2254,-0.554222,-1.51768,10.6381,-1.10383,-1.29324,10.7847,-0.986062,-1.33408,9.97932,-1.09373,-1.67386,10.0737,-1.19938,-1.25375,9.97923,0.141073,-1.19374,10.0778,-0.102022,-1.1087,10.8468,0.055953,-1.12971,10.9466,0.389563,-1.12841,10.1051,-0.288177,-1.13707,10.0096,-0.692632,-1.0635,10.8187,-0.537347,-1.09814,10.743,-0.224937,-1.48579,10.9756,0.820488,-2.1567,10.9302,0.920183,-2.24717,10.1382,0.707528,-1.52907,10.0329,0.549508,-2.72001,10.1726,-0.811737,-2.64608,10.6824,-0.777627,-2.75202,7.39382,-1.93396,-2.20247,7.3419,-1.98145,-2.38013,6.49544,-2.16783,-2.93479,6.50424,-2.17537,-3.16752,7.41887,-1.72216,-3.39093,6.5224,-1.93199,-3.47822,7.40799,-1.33367,-3.6218,6.44376,-1.55756,-3.64827,6.42469,-1.20253,-3.48651,7.34436,-0.994378,-2.49749,7.98475,0.055107,-2.82251,8.20164,-0.136483,-2.89003,7.7017,-0.241963,-2.61327,7.27829,-0.028458,-1.83577,7.20557,-1.57385,-1.98655,6.25004,-1.73906,-2.64846,9.2998,0.318088,-2.3177,9.28627,0.515938,-2.24147,9.48872,0.530623,-2.73008,9.64386,0.294598,-1.27456,9.27228,-0.904502,-1.28649,9.40287,-0.296132,-1.56271,8.68619,-0.321323,-1.56391,8.64327,-0.813938,-1.90851,9.22539,-1.2318,-1.85506,9.29596,-1.22637,-1.81621,9.23997,-1.24259,-1.87684,9.12353,-1.27932,-2.40905,9.39088,-1.31432,-2.02033,9.3197,-1.33583,-2.06682,9.21487,-1.37037,-2.47762,9.27648,-1.35458,-2.66145,9.32686,-1.16341,-2.61928,9.41971,-1.12701,-2.76434,9.38511,-1.06163,-2.69591,9.47518,-1.01132,-2.99139,9.00629,-0.321012,-3.08078,9.07572,-0.755387,-3.16233,8.6071,-0.737668,-2.98395,8.43344,-0.358758,-2.93856,9.39208,-0.237307,-2.81453,9.09795,-0.041952,-2.82465,9.29303,0.010598,-2.83373,9.47839,-0.074867,-2.66825,8.93005,0.161777,-2.72833,9.08554,0.204123,-1.34154,12.4848,1.23765,-2.03749,12.2932,1.22689,-2.68372,12.1436,0.833658,-2.70647,10.9056,0.586168,-2.96588,12.0351,0.231018,-2.88992,11.9566,-0.340207,-2.44108,11.603,-1.00109,-2.61092,11.862,-0.813242,-2.2108,11.6731,-1.16046,-1.93688,11.5375,-1.25671,-1.63966,11.7998,-1.33961,-1.62218,10.5826,-1.15067,-1.11569,11.9834,-1.01796,-0.9889,11.8479,-0.802432,-2.17225,12.0495,-1.18399,-2.8826,9.76993,-0.206867,-2.91947,9.78162,-0.634527,-3.00012,9.40901,-0.670827,-2.75106,9.71238,-0.876007,-2.68744,9.67459,-0.931147,-2.85195,9.39704,-0.986812,-2.59183,9.58623,-1.14819,-2.35078,9.50491,-1.31524,-1.98446,9.45996,-1.32634,-1.86609,9.40185,-1.23992,-1.76239,9.46778,-1.26228,-2.76794,10.0868,0.375208,-0.808835,12.1342,-0.346777,-0.61644,12.6688,-0.439362,-0.74531,12.2366,0.037613,-0.915985,11.6997,-0.040267,-0.925985,11.7194,-0.380067,-0.872775,12.7778,0.822274,-0.70818,12.5216,0.348408,-0.551585,13.0374,0.150214,-0.70991,12.8647,0.600269,-1.48128,9.31953,-1.20444,-1.70131,8.74193,-1.18086,-1.77761,7.01072,-1.01347,-1.93777,6.0567,-1.10779,-1.74351,10.0271,-1.18336,-1.90249,9.31323,-1.25361,-2.92761,9.12976,-1.03726,-3.06644,8.6432,-1.10432,-2.75834,9.12923,-1.19865,-2.85365,8.63391,-1.37079,-2.92186,8.62152,-1.19086,-2.85405,9.12861,-1.11302,-2.53098,9.08957,-1.40457,-2.58508,8.57385,-1.53284,-2.05077,9.08088,-1.41811,-2.16497,8.5067,-1.60393,-1.75928,8.43301,-1.30421,-3.28831,7.0994,-0.586178,-2.75816,8.73592,-0.076623,-2.42476,8.25003,0.131967,-2.35894,8.4682,0.203912,-2.64524,8.70457,0.150632,-1.94607,8.50236,0.054152,-2.06313,7.99611,-0.018883,-1.76849,8.21718,-0.322623,-1.71648,8.44292,-0.226788,-1.73848,8.16118,-0.519758,-1.65093,8.45419,-0.488913,-1.62957,8.30804,-0.826543,-1.81265,8.11676,-0.355873,-2.16285,7.48194,-0.076093,-2.35642,8.98125,0.416668,-2.36859,8.80691,0.351437,-2.2449,9.83094,0.637358,-2.73786,9.83806,0.343528,-1.61522,9.60387,0.438988,-2.34965,5.78236,-0.523033,-2.09172,6.8775,-0.469048,-2.33439,6.82308,-0.102898,-2.62332,5.80638,-0.247318,-2.18232,5.69885,-0.779833,-2.0804,6.14595,-0.790723,-2.75382,5.0991,-0.264859,-3.01317,5.83821,-0.182318,-3.1238,5.14872,-0.245104,-3.12043,4.29526,-1.82697,-3.35566,4.41423,-1.64214,-3.41878,5.20078,-0.494319,-3.32498,5.91315,-0.480363,-3.45923,5.89722,-0.723603,-3.55336,5.21092,-0.758509,-2.59401,4.27034,-1.58671,-2.78094,4.50148,-1.79118,-2.43253,4.2296,-1.26963,-2.45753,4.30628,-0.897889,-3.60606,4.46748,-1.47516,-3.62378,5.06574,-1.49885,-3.44526,4.97303,-1.77834,-2.50496,5.03608,-0.531539,-2.10053,5.51304,-1.20291,-2.17162,5.52782,-1.78572,-2.5671,5.78126,-2.13781,-3.04359,5.81157,-2.13572,-3.42912,5.75099,-1.92857,-3.64432,5.72578,-1.57867,-3.69866,5.80675,-1.13431,-2.42405,4.78538,-1.62799,-2.276,4.7474,-1.22735,-2.69117,4.96899,-1.94022,-3.08862,4.9656,-2.02075,-3.70193,5.15858,-1.13023,-1.71477,17.7149,-0.45449,-1.69668,17.9243,-0.253955,-1.54449,17.8491,-0.53626,-1.54545,17.6376,-0.700665,-1.33481,17.5978,-0.874975,-1.33094,17.805,-0.706195,-1.09205,17.7544,-0.75436,-1.03971,17.6256,-0.980135,-0.787095,17.6175,-1.02444,-0.83926,17.7356,-0.78844,-0.604525,17.686,-0.88577,-0.54047,17.6594,-0.954455,-2.04675,17.4079,-0.27335,-1.99494,17.6165,-0.169445,-1.88417,17.5551,-0.391485,-1.9283,17.2683,-0.60646,-1.78076,17.2012,-0.87135,-1.73442,17.4867,-0.6548,-1.56818,17.4136,-0.90505,-1.58102,17.2049,-1.1221,-1.35254,17.2042,-1.30082,-1.33536,17.4074,-1.0778,-1.04293,17.4408,-1.18821,-1.08949,17.2328,-1.39666,-2.04034,17.6702,0.895295,-2.08814,17.5017,0.824985,-2.05466,17.2096,0.942235,-2.11401,17.5962,0.665475,-2.0637,17.7642,0.73508,-2.06672,17.8123,0.53985,-2.14148,17.6072,0.447275,-0.76719,17.4582,-1.21475,-0.52445,17.4911,-1.13519,-0.51119,17.2347,-1.41148,-0.81392,17.2518,-1.42437,-0.21851,17.1426,-1.26356,-0.11268,17.0633,-1.25069,-0.313185,17.1319,-1.41359,-0.3224,17.3977,-1.14867,-2.05662,16.2366,-1.05211,-2.03272,15.8746,-1.19925,-2.25006,15.9725,-0.889156,-2.18515,16.4973,-0.6936,-1.71218,16.0914,-1.67427,-1.6883,15.6944,-1.72714,-1.84632,15.7593,-1.49144,-1.88868,16.1244,-1.35757,-1.42054,15.6836,-1.90775,-1.45558,16.0807,-1.87207,-1.11222,16.0994,-2.00495,-1.06757,15.7086,-2.01483,-2.44452,16.4147,0.571835,-2.41047,16.0625,0.817295,-2.13033,16.8686,0.851275,-2.28633,16.8257,0.631045,-2.37959,16.8322,0.199855,-2.49094,16.3658,0.119245,-2.48409,16.4408,0.37191,-2.33386,16.8538,0.43304,-0.372605,15.7888,-1.86611,-0.72211,15.7517,-1.99451,-0.76505,16.1403,-2.0067,-0.417935,16.2047,-1.88759,-0.056905,15.8978,-1.46511,-0.154095,15.847,-1.68383,-0.183565,16.2604,-1.72426,-0.05845,16.3122,-1.50452,-0.949465,15.4442,1.13587,-0.584935,15.1924,0.829959,-0.659915,15.4966,0.981014,-0.88445,15.8774,1.0732,-2.06225,15.8647,1.0473,-2.52549,15.2891,0.803589,-2.22167,14.9755,1.09307,-2.64427,15.6463,0.522879,-2.55052,16.0196,0.54437,-2.58187,15.9611,0.060745,-2.63342,15.6054,-0.019601,-2.67622,15.6647,0.290174,-2.58772,16.0392,0.3127,-1.50731,14.843,1.32871,-1.4633,15.5846,1.23582,-2.26546,14.7506,-1.05966,-2.23691,14.3535,-1.16229,-2.54145,14.5468,-0.795791,-2.40542,14.879,-0.877241,-1.74296,14.5583,-1.30364,-1.68646,14.2175,-1.35345,-2.0484,14.6535,-1.20196,-1.00635,14.3998,-1.25931,-1.44257,14.5417,-1.3283,-1.16074,14.5502,-1.26161,-0.43504,14.7916,-0.511466,-0.862945,14.6663,-1.06128,-0.59028,14.8096,-0.737916,-0.34829,14.4109,0.309694,-0.37157,14.8498,0.320424,-0.53949,14.7666,0.858634,-0.55475,14.3071,0.895844,-0.983345,14.7665,1.22935,-0.97612,14.2687,1.22639,-2.20637,14.1564,1.20016,-1.44727,14.2497,1.37275,-2.60404,14.7842,0.775939,-2.7013,15.2959,0.498329,-2.81769,14.7349,0.309224,-2.69229,15.2332,-0.065421,-2.77963,14.6576,-0.259506,-2.73858,15.2931,0.243629,-0.41647,14.6924,-0.518891,-0.47068,14.2689,-0.499496,-1.17229,16.2671,1.12912,-0.94407,16.1878,1.10865,-1.54021,17.0683,1.27553,-1.59794,16.9716,1.20708,-1.93501,17.0094,1.05561,-1.95393,17.9117,0.98437,-1.99493,17.8036,0.95629,-1.97606,18.0224,0.81742,-1.99242,18.0799,0.618095,-2.01928,17.9622,0.59366,-2.016,17.914,0.788985,-1.95236,17.8331,-0.01639,-1.89823,17.9956,0.07498,-1.82037,17.9789,-0.03568,-1.84069,17.7711,-0.23782,-2.01398,17.96,0.39647,-1.98368,18.0762,0.421185,-1.95432,18.0432,0.257105,-2.00821,17.8805,0.16583,-2.06087,17.7074,0.087475,-2.1158,17.5002,-0.01784,-2.13975,17.5812,0.22571,-2.06695,17.7869,0.31819,-2.46048,16.2772,-0.16656,-2.36342,16.7472,-0.08835,-2.30258,16.6477,-0.35875,-2.38272,16.1267,-0.56218,-2.44055,15.696,-0.642106,-2.4827,15.3281,-0.622176,-2.57412,15.4917,-0.329971,-2.53352,15.8498,-0.2521,-1.74449,13.6146,-1.37338,-0.97535,13.7721,-1.26964,-1.0288,12.7225,-1.17681,-1.62712,12.6079,-1.38317,-2.324,12.6855,-1.17113,-2.35376,13.6776,-1.19897,-2.72012,12.828,-0.809551,-2.68527,13.845,-0.802866,-2.96407,13.0051,-0.349506,-2.8879,13.9473,-0.321771,-2.99057,13.1054,0.195719,-2.90824,14.0093,0.224769,-2.74951,13.2055,0.803369,-2.70125,14.051,0.750834,-2.10701,13.3584,1.26032,-1.32741,13.5789,1.36841,-0.89197,13.7654,1.08511,-0.544635,13.8437,0.876029,-0.35093,14.0081,0.275794,-0.437445,13.6881,-0.466221,-2.13558,17.3311,0.75592,-2.19245,17.1246,0.681345,-2.23218,17.1842,0.50815,-2.17632,17.3911,0.58305,-2.2046,17.4022,0.365555,-2.28747,17.1652,0.275195,-2.17662,17.2724,-0.11794,-2.23172,17.0203,-0.23939,-2.28045,17.1162,0.034475,-2.20534,17.3554,0.124025,-2.14507,16.8737,-0.53899,-2.09911,17.1292,-0.42178,-1.97886,16.9889,-0.75445,-2.02763,16.6164,-0.9036,-1.86916,16.5085,-1.21705,-1.82414,16.8817,-1.0702,-1.62789,16.8881,-1.32442,-1.70101,16.4785,-1.541,-1.45444,16.483,-1.7391,-1.38243,16.8921,-1.52399,-1.12123,16.9222,-1.62172,-1.11454,16.505,-1.88281,-0.80755,16.9468,-1.64925,-0.506915,16.9256,-1.63027,-0.44834,16.5958,-1.79982,-0.800375,16.5273,-1.90289,-0.262895,16.938,-1.51755,-0.087975,16.8674,-1.37718,-0.07615,16.6565,-1.46343,-0.211825,16.6022,-1.67243,-1.80961,16.8564,1.11206,-2.00636,16.6186,0.98405,-1.78158,16.4775,1.06872,-2.75007,6.82665,-0.081868,-3.06046,6.92787,-0.355563,-1.44277,9.52414,0.055168,-1.95053,9.16319,0.339163,-2.01585,8.98369,0.235057,-1.81065,9.01247,0.126313,-1.79201,9.3601,0.348713,-1.67188,8.89966,-0.099433,-2.08456,8.83813,0.210313,-1.9001,8.83799,0.089122,-1.58153,18.3194,1.39531,-0.867585,14.7073,-1.08811,-0.86217,14.7228,-1.16148,-0.599675,14.8456,-0.791056,-0.584245,14.838,-0.767871,-1.40343,14.6751,-1.38854,-1.13925,14.6706,-1.35301,-1.13884,14.6441,-1.2857,-1.42166,14.6369,-1.34808,-1.68631,14.7621,-1.35993,-1.70768,14.7174,-1.32902,-2.01238,14.8131,-1.22382,-1.97976,14.9823,-1.2864,-0.376085,15.4989,-1.72512,-0.374945,15.1413,-1.41604,-0.763175,15.0793,-1.68745,-0.712935,15.3929,-1.87848,-1.10038,15.042,-1.77525,-1.39257,15.095,-1.73742,-1.41716,15.3426,-1.85954,-1.0582,15.3729,-1.9382,-1.81036,15.1336,-1.47784,-1.65221,14.9967,-1.55455,-1.64651,14.8556,-1.44734,-1.93416,15.0827,-1.36403,-1.98805,15.5256,-1.33787,-1.96358,15.3501,-1.37474,-2.09032,15.2984,-1.26395,-2.22769,15.6269,-1.04266,-0.848215,15.9502,1.03969,-0.64682,15.5874,1.02733,-0.75034,15.8895,1.07623,-0.36715,14.9347,0.329484,-0.35769,14.9721,0.346119,-2.62581,15.1543,-0.354341,-2.52704,14.9894,-0.643276,-0.433345,14.9551,-1.18084,-0.56375,14.8919,-0.922741,-0.83079,14.7793,-1.28861,-0.808475,14.8719,-1.46919,-1.39291,14.7568,-1.47973,-1.40469,14.8879,-1.60035,-1.11522,14.852,-1.61857,-1.12704,14.7361,-1.45551,0.00004,15.7167,-0.948016,0.001095,15.924,-1.24377,-0.01046,16.3391,-1.28425,0,17.8156,-0.70173,0,17.5765,-0.88377,0,17.0745,-1.10184,-0.001,16.7504,-1.00232,-0.364905,18.5562,-0.430045,-0.101385,18.4108,-0.41799,0,18.3664,-0.419015,-3.5833,4.54225,-0.758734,-3.45384,4.54849,-0.481904,-2.59485,4.38659,-0.608554,-2.81749,4.44155,-0.306934,-3.7008,4.51763,-1.08485,-3.15515,4.49763,-0.267299,-2.14251,8.61244,0.143927,-0.99163,11.5765,-0.689097,-2.31422,4.88821,-0.853514,-0.89694,12.0271,0.308483,-1.64749,9.33628,0.045238,-1.35853,9.58526,-0.118757,-2.81615,9.70675,-0.000332,-2.84605,9.88283,-0.026067,-2.1938,15.1767,-1.13641,-2.22983,15.0067,-1.07757,-2.36495,15.1344,-0.891951,-2.32945,15.5035,-0.915596,-1.65205,15.3989,-1.73998,-1.63879,15.1462,-1.63781,-1.79372,15.287,-1.55445,-1.83134,15.464,-1.52748,-1.98211,6.87894,-0.610098,0.34601,16.9635,1.67832,0.38352,17.6074,1.86704,0.988085,17.1783,1.47196,1.0351,17.5291,1.49185,0.74055,17.5876,1.69827,0.658805,17.0608,1.60638,1.87263,17.7239,1.23435,1.77708,17.9851,1.2672,1.58268,17.8878,1.37386,1.63177,17.5253,1.37587,1.9402,18.1723,0.4253,1.90688,18.1377,0.26152,1.8336,18.1244,0.147515,1.91799,18.3912,0.5598,1.91206,18.0242,1.01576,1.88836,18.2331,0.97337,1.95558,18.1859,0.640515,1.94185,18.1296,0.83911,0.11676,17.5888,-0.95226,0.4483,17.993,-0.682915,0.45206,17.7121,-0.86758,0.396515,17.6715,-0.919435,1.24023,17.2089,1.36003,1.25204,17.5202,1.45257,0.46413,16.5309,1.54593,0.85528,16.8466,1.41766,0.597275,16.5684,1.48395,0.297225,17.4904,-1.03729,0.18379,17.2336,-1.1493,0.02574,17.0336,-1.20669,0.896135,16.3366,1.12292,0.59796,16.4715,1.43466,0.151295,18.0195,-0.578275,0.45555,18.3398,-0.45623,0.66435,17.9138,-0.633685,0.715455,17.9616,-0.5378,0.76961,17.8972,-0.63582,0.63952,17.7924,-0.699565,0.825205,18.1046,-0.42478,0.92854,18.3937,-0.358575,1.06588,18.1357,-0.47092,0.964545,17.9711,-0.57205,1.33799,17.973,-0.551685,1.09583,17.9337,-0.596385,1.34092,18.2295,-0.33922,1.66118,18.1085,-0.11207,1.509,18.033,-0.39396,1.6506,18.3915,0.13099,1.85178,18.3114,0.3719,1.68402,18.4468,0.235225,1.25579,17.9029,1.53801,1.02407,17.9275,1.59269,0.71787,17.9571,1.8636,0.37756,18.2223,2.07592,1.25191,18.5102,-0.221225,0.900855,17.8975,-0.62529,0.85414,17.8245,-0.69964,0.62841,17.7515,-0.79157,0.54841,17.7692,-0.789285,1.97971,17.4869,1.11947,1.81919,17.2697,1.20436,0.011615,16.6143,-1.25602,0.000995,16.7504,-1.00232,0.024975,16.831,-1.18264,2.64791,10.0606,-0.900882,2.51555,10.0129,-1.11184,2.48669,10.5423,-1.06308,2.55218,10.5758,-0.863317,2.2336,9.92129,-1.26262,2.12647,10.4778,-1.22844,1.91925,9.89839,-1.27223,1.86343,10.4645,-1.22722,2.88925,10.1659,-0.117732,2.87134,10.2254,-0.554222,2.81015,10.8513,-0.462172,2.87816,10.9032,-0.005197,1.33408,9.97932,-1.09373,1.29324,10.7847,-0.986062,1.51768,10.6381,-1.10383,1.67385,10.0737,-1.19938,1.25375,9.97922,0.141073,1.12971,10.9466,0.389563,1.1087,10.8467,0.055953,1.19373,10.0778,-0.102027,1.1284,10.1051,-0.288182,1.09814,10.743,-0.224937,1.06349,10.8187,-0.537347,1.13706,10.0096,-0.692637,2.24717,10.1382,0.707528,2.1567,10.9301,0.920183,1.48579,10.9756,0.820488,1.52906,10.0329,0.549508,2.72001,10.1726,-0.811737,2.64607,10.6824,-0.777627,2.38012,6.49543,-2.16783,2.20247,7.3419,-1.98145,2.75201,7.39382,-1.93396,2.93479,6.50425,-2.17537,3.16751,7.41887,-1.72216,3.39093,6.5224,-1.932,3.47822,7.40799,-1.33367,3.62179,6.44376,-1.55756,3.64826,6.42469,-1.20253,3.48651,7.34436,-0.994378,2.49748,7.98475,0.055107,2.61326,7.27829,-0.028458,2.89003,7.7017,-0.241968,2.8225,8.20164,-0.136488,1.98654,6.25003,-1.73906,1.83576,7.20557,-1.57385,2.24146,9.48872,0.530623,2.3177,9.28627,0.515938,2.64845,9.29979,0.318088,2.73008,9.64386,0.294598,1.56271,8.68619,-0.321323,1.28649,9.40287,-0.296132,1.27456,9.27228,-0.904507,1.56391,8.64327,-0.813937,1.9085,9.22539,-1.2318,1.87684,9.12354,-1.27932,1.8162,9.23997,-1.24259,1.85505,9.29596,-1.22637,2.06681,9.21487,-1.37038,2.02032,9.3197,-1.33583,2.40904,9.39088,-1.31432,2.47761,9.27648,-1.35459,2.66144,9.32686,-1.16341,2.61927,9.4197,-1.12702,2.69591,9.47518,-1.01133,2.76433,9.38511,-1.06163,3.16233,8.60709,-0.737673,3.08077,9.07571,-0.755392,2.99138,9.00629,-0.321017,2.98395,8.43344,-0.358763,2.82464,9.29303,0.010598,2.81452,9.09795,-0.041957,2.93856,9.39208,-0.237312,2.83372,9.47839,-0.074867,2.72833,9.08554,0.204118,2.66825,8.93005,0.161773,2.03803,12.2932,1.22688,1.34136,12.4848,1.23765,2.70646,10.9056,0.586163,2.68417,12.1436,0.833653,2.96625,12.0351,0.231013,2.88984,11.9566,-0.340212,2.44104,11.603,-1.0011,2.61017,11.862,-0.813247,2.21071,11.6731,-1.16046,1.93688,11.5375,-1.25671,1.63963,11.7998,-1.33961,0.9889,11.8479,-0.802432,1.11614,11.9834,-1.01796,1.62218,10.5826,-1.15067,2.17098,12.0495,-1.18399,3.00012,9.409,-0.670832,2.91947,9.78162,-0.634527,2.8826,9.76992,-0.206872,2.75105,9.71238,-0.876012,2.85194,9.39703,-0.986812,2.68744,9.67459,-0.931152,2.59183,9.58623,-1.14819,2.35077,9.50491,-1.31524,1.98446,9.45996,-1.32634,1.76238,9.46778,-1.26228,1.86609,9.40185,-1.23992,2.76794,10.0868,0.375208,0.807275,12.1342,-0.346777,0.606185,12.6688,-0.439361,0.915985,11.6997,-0.040267,0.7416,12.2366,0.037608,0.925985,11.7194,-0.380067,0.863,12.7778,0.822274,0.697995,12.5216,0.348409,0.69991,12.8647,0.600269,0.54142,13.0374,0.150214,1.48128,9.31953,-1.20444,1.70131,8.74193,-1.18086,1.93776,6.0567,-1.10779,1.77761,7.01072,-1.01347,1.7435,10.0271,-1.18336,1.90248,9.31323,-1.25361,3.06644,8.64319,-1.10433,2.92761,9.12976,-1.03727,2.75834,9.12923,-1.19865,2.85404,9.1286,-1.11302,2.92185,8.62151,-1.19086,2.85364,8.6339,-1.37079,2.58508,8.57384,-1.53284,2.53098,9.08957,-1.40457,2.16497,8.50669,-1.60393,2.05076,9.08088,-1.41812,1.75927,8.43301,-1.30421,3.2883,7.0994,-0.586178,2.75816,8.73592,-0.076628,2.42476,8.25003,0.131967,2.64524,8.70457,0.150627,2.35894,8.4682,0.203907,1.94606,8.50236,0.054147,1.71647,8.44292,-0.226788,1.76849,8.21718,-0.322628,2.06313,7.99612,-0.018888,1.65092,8.45419,-0.488918,1.73847,8.16118,-0.519758,1.62957,8.30804,-0.826548,1.81265,8.11676,-0.355878,2.16285,7.48194,-0.076098,2.35642,8.98125,0.416663,2.36858,8.80691,0.351433,2.73786,9.83806,0.343528,2.2449,9.83094,0.637358,1.61522,9.60387,0.438983,2.34965,5.78236,-0.523038,2.62331,5.80638,-0.247323,2.33439,6.82308,-0.102898,2.09172,6.8775,-0.469048,2.0804,6.14595,-0.790728,2.1823,5.69885,-0.779838,3.01316,5.83821,-0.182323,2.75382,5.0991,-0.264864,3.1238,5.14872,-0.245104,3.12043,4.29526,-1.82697,3.35566,4.41423,-1.64215,3.41878,5.20078,-0.494319,3.55336,5.21092,-0.758509,3.45922,5.89723,-0.723608,3.32497,5.91315,-0.480363,2.59401,4.27034,-1.58671,2.78093,4.50148,-1.79119,2.45752,4.30628,-0.897889,2.43252,4.22961,-1.26963,3.44525,4.97302,-1.77834,3.62377,5.06574,-1.49885,3.60606,4.46748,-1.47516,2.50496,5.03608,-0.531539,2.10052,5.51304,-1.20291,2.17162,5.52782,-1.78573,2.5671,5.78127,-2.13781,3.04359,5.81156,-2.13573,3.42911,5.751,-1.92858,3.64432,5.72577,-1.57867,3.69865,5.80675,-1.13431,2.42404,4.78538,-1.628,2.27599,4.7474,-1.22735,2.69116,4.96899,-1.94022,3.08861,4.9656,-2.02075,3.70193,5.15857,-1.13023,1.71484,17.7149,-0.45453,1.54568,17.6381,-0.701035,1.54446,17.8491,-0.53622,1.69668,17.9243,-0.253955,1.33386,17.601,-0.87461,1.03901,17.6294,-0.980165,1.08854,17.7723,-0.75396,1.33025,17.8087,-0.706235,0.613445,17.6849,-0.8861,0.83965,17.7531,-0.78866,0.790355,17.6199,-1.02442,0.55446,17.6601,-0.95374,1.98508,17.4077,-0.27301,1.86706,17.2682,-0.606375,1.86387,17.5552,-0.391525,1.97521,17.6168,-0.169715,1.72491,17.2012,-0.86563,1.5452,17.2049,-1.09303,1.55264,17.4131,-0.898875,1.71904,17.4867,-0.64895,1.32181,17.2041,-1.26599,1.05883,17.2328,-1.36182,1.03269,17.4407,-1.17657,1.32536,17.4079,-1.06655,2.08841,17.5017,0.824985,2.04048,17.6702,0.89529,2.05549,17.2096,0.942235,2.11414,17.5962,0.66547,2.14258,17.6076,0.447105,2.06571,17.812,0.53991,2.06375,17.7642,0.73508,0.48319,17.2345,-1.37654,0.527035,17.4905,-1.12405,0.759585,17.4581,-1.20315,0.78589,17.2515,-1.38949,0.21234,17.1408,-1.25656,0.326675,17.3949,-1.14162,0.286565,17.1301,-1.38342,0.109405,17.0578,-1.24697,1.97626,16.2365,-1.052,2.10495,16.4973,-0.69365,2.17212,15.9723,-0.88874,1.95221,15.8746,-1.1993,1.62987,16.0915,-1.6744,1.80749,16.1244,-1.35769,1.7646,15.7593,-1.4914,1.60569,15.6944,-1.72715,1.02999,16.0993,-2.00505,1.37281,16.0807,-1.87194,1.33768,15.6836,-1.90775,0.98516,15.7086,-2.01484,2.13248,16.8686,0.851275,2.41697,16.0625,0.817289,2.44912,16.4147,0.57183,2.28892,16.8257,0.63104,2.38235,16.8322,0.200035,2.33628,16.8538,0.43304,2.48848,16.4408,0.37191,2.49419,16.3655,0.11936,0.293005,15.7899,-1.86411,0.336595,16.2044,-1.88711,0.68317,16.1404,-2.00661,0.640045,15.7517,-1.99451,0.035245,15.8976,-1.46541,0.03875,16.3121,-1.50457,0.121885,16.2607,-1.72474,0.130345,15.8459,-1.77199,0.953025,15.4442,1.13587,0.886845,15.8774,1.0732,0.66219,15.4966,0.981014,0.587295,15.1924,0.829959,2.53543,15.2891,0.803584,2.069,15.8647,1.0473,2.23154,14.9755,1.09307,2.65257,15.6463,0.522874,2.55704,16.0196,0.544365,2.58967,15.9614,0.06063,2.59404,16.0392,0.312695,2.68432,15.6647,0.290174,2.64049,15.6052,-0.019316,1.46876,15.5846,1.23582,1.51404,14.843,1.32871,2.26884,14.7506,-1.06011,2.40979,14.8789,-0.876661,2.54776,14.5468,-0.795791,2.23812,14.3535,-1.1623,1.7434,14.5583,-1.30376,2.04951,14.6535,-1.20151,1.68606,14.2175,-1.35345,1.00681,14.3998,-1.25931,1.16176,14.5508,-1.26107,1.44271,14.5418,-1.32818,0.43607,14.8025,-0.511466,0.589515,14.8078,-0.738406,0.863105,14.6657,-1.06181,0.34953,14.4109,0.309694,0.5569,14.3071,0.895844,0.54182,14.7666,0.858634,0.373005,14.8498,0.320424,0.979945,14.2687,1.22639,0.9876,14.7665,1.22935,2.215,14.1564,1.20015,1.45304,14.2497,1.37275,2.71082,15.2959,0.498329,2.61481,14.7842,0.775939,2.82845,14.7349,0.309219,2.70288,15.2334,-0.065711,2.74798,15.2931,0.243624,2.7904,14.6576,-0.259506,0.417485,14.6924,-0.518896,0.4717,14.2689,-0.499496,1.17457,16.2671,1.12912,1.59888,16.9716,1.20708,1.54079,17.0683,1.27553,0.94587,16.1878,1.10865,1.93633,17.0094,1.05561,1.99496,17.8036,0.95629,1.95395,17.9116,0.984365,2.02032,17.9625,0.593595,1.99242,18.0799,0.618095,1.97606,18.0224,0.817415,2.01599,17.914,0.78898,1.95172,17.8328,-0.01612,1.84062,17.7711,-0.23778,1.82037,17.9789,-0.03568,1.89823,17.9956,0.07498,2.01293,17.9596,0.39653,2.00883,17.8808,0.165555,1.95431,18.0432,0.257105,1.98368,18.0762,0.421185,2.12866,17.5809,0.225875,2.06547,17.5003,-0.01818,2.05007,17.7072,0.087745,2.05782,17.7872,0.318125,2.24419,16.6477,-0.358705,2.34495,16.7471,-0.08853,2.44597,16.2774,-0.166675,2.32547,16.1268,-0.562325,2.57294,15.4919,-0.330261,2.47818,15.328,-0.621596,2.39617,15.696,-0.642251,2.52823,15.8496,-0.251986,1.07864,12.7225,-1.17681,0.975245,13.7721,-1.26964,1.74309,13.6146,-1.37338,1.63329,12.6079,-1.38317,2.32198,12.6855,-1.17113,2.35328,13.6776,-1.19897,2.7203,12.828,-0.809551,2.68965,13.845,-0.802871,2.89712,13.9473,-0.321776,2.96847,13.0051,-0.349506,2.99529,13.1054,0.195719,2.9174,14.0093,0.224769,2.75447,13.2055,0.803369,2.71039,14.051,0.750829,2.11192,13.3584,1.26031,1.33084,13.5789,1.36841,0.894565,13.7654,1.08511,0.546135,13.8437,0.876029,0.35183,14.0081,0.275794,0.43795,13.6881,-0.466221,2.19372,17.1246,0.681345,2.13624,17.3311,0.75591,2.23323,17.1842,0.508145,2.28804,17.1651,0.275015,2.20405,17.4018,0.36572,2.17682,17.3911,0.58305,2.26149,17.1162,0.03465,2.17132,17.0203,-0.23944,2.1153,17.2722,-0.117605,2.18638,17.3557,0.12386,2.0649,16.8738,-0.53895,1.94699,16.6165,-0.90372,1.89785,16.9889,-0.754535,2.01848,17.1294,-0.42212,1.79287,16.5084,-1.21113,1.62376,16.4785,-1.53507,1.57164,16.8881,-1.2954,1.74753,16.8817,-1.06431,1.38233,16.483,-1.7276,1.04278,16.505,-1.87111,1.06998,16.9222,-1.58683,1.33109,16.8921,-1.48911,0.376415,16.5961,-1.78869,0.45581,16.9256,-1.59549,0.75648,16.9469,-1.61441,0.72876,16.5272,-1.89136,0.22719,16.938,-1.48843,0.156105,16.6019,-1.66614,0.06014,16.6566,-1.45757,0.073055,16.867,-1.3718,1.8113,16.8564,1.11206,1.78479,16.4775,1.06872,2.00942,16.6186,0.984045,2.75007,6.82665,-0.081873,3.06046,6.92787,-0.355568,1.44277,9.52414,0.055168,1.95053,9.16319,0.339158,1.79201,9.3601,0.348713,1.81065,9.01247,0.126313,2.01585,8.98369,0.235058,1.67188,8.89966,-0.099437,1.90009,8.83799,0.089118,2.08456,8.83812,0.210308,1.58153,18.3194,1.39531,0.848465,14.7079,-1.08757,0.566385,14.8398,-0.767376,0.53929,14.8456,-0.791056,0.801705,14.7228,-1.16116,1.11834,14.6434,-1.28624,1.07817,14.6706,-1.35333,1.34232,14.6753,-1.38865,1.40148,14.6368,-1.3482,1.91928,14.9825,-1.28601,1.99375,14.8131,-1.22426,1.68779,14.7174,-1.32891,1.62563,14.7619,-1.35983,0.29229,15.5305,-1.72706,0.63098,15.3928,-1.87842,0.68136,15.0792,-1.68738,0.292055,15.1393,-1.41618,1.01812,15.042,-1.77525,0.975825,15.373,-1.9382,1.33431,15.3426,-1.85954,1.31008,15.095,-1.73741,1.56492,14.8558,-1.44744,1.57022,14.9967,-1.55454,1.72873,15.1335,-1.47784,1.85386,15.0825,-1.36442,1.90739,15.5256,-1.33783,2.15001,15.6273,-1.04331,2.00982,15.2986,-1.26357,1.88274,15.3501,-1.37474,0.74476,15.8782,1.075,0.639105,15.5941,1.01673,0.85032,15.9502,1.03968,0.35715,14.9694,0.345814,0.368565,14.9347,0.329484,2.53578,14.9895,-0.643861,2.63339,15.1541,-0.354056,0.749395,14.7793,-1.28886,0.482825,14.8918,-0.922671,0.354195,14.9562,-1.18019,0.7269,14.8718,-1.46911,1.0333,14.852,-1.61857,1.32253,14.8879,-1.60036,1.31126,14.7566,-1.47963,1.0457,14.736,-1.45519,0.0002,15.9241,-1.24346,0.010945,16.3391,-1.28421,0.364905,18.5562,-0.430045,0.101385,18.4108,-0.41799,3.58329,4.54225,-0.758739,3.45384,4.54849,-0.481909,2.81748,4.44155,-0.306939,2.59484,4.38659,-0.608559,3.70079,4.51763,-1.08486,3.15515,4.49763,-0.267304,2.14251,8.61243,0.143922,0.991625,11.5765,-0.689097,2.31421,4.88821,-0.853514,0.894805,12.0271,0.308483,1.64749,9.33627,0.045238,1.35853,9.58526,-0.118757,2.84605,9.88282,-0.026072,2.81615,9.70675,-0.000332,2.13581,15.1765,-1.13679,2.27212,15.5032,-0.915086,2.35111,15.1345,-0.892536,2.21213,15.0067,-1.07712,1.56935,15.3989,-1.73998,1.74954,15.464,-1.52753,1.71172,15.287,-1.55445,1.55644,15.1462,-1.63782,1.9821,6.87894,-0.610098,-0.29644,14.9693,0.155419,-0.372985,15.0113,0.139574,-0.316355,14.9482,-0.257641,-0.16589,14.9282,-0.242131,0.31714,14.9482,-0.257641,0.37423,15.0113,0.139574,0.29578,14.9684,0.155769,0.166645,14.9282,-0.242161,-0.0514,15.6788,-1.24737,-0.14021,15.6148,-1.47538,-0.009735,15.7129,-1.12621,-0.39119,14.9513,-0.622316,-0.41067,14.9172,-0.336806,-0.2532,15.0006,-0.898706,-0.152795,15.249,-1.15469,0.149765,15.6098,-1.61269,0.036855,15.6903,-1.29673,0.00859,15.7127,-1.12653,1.77233,18.2158,0.14643,0.36247,14.9543,-0.606161,0.413285,14.9187,-0.336361,0.19741,15.0039,-0.875006,0.158585,15.1745,-1.32032,-0.175525,15.0921,-0.987721,0.160565,15.1051,-0.978911,-0.31132,16.0451,1.25056,0,16.0351,1.29921,0.000165,15.2001,1.08489,-0.363445,15.345,1.01897,-0.24108,14.9836,0.687824,0.00021,14.919,0.738614,-0.60058,15.921,1.15476,-0.289835,15.6983,1.14848,0.00007,15.6322,1.17373,-0.62079,15.69,1.05456,-0.293625,14.9727,0.380879,-0.199985,14.9163,0.175384,0.000185,14.8791,0.409829,0.311645,16.0451,1.25056,0.242175,14.9836,0.687824,0.364725,15.345,1.01897,0.60184,15.921,1.15475,0.2905,15.6983,1.14848,0.294795,14.9728,0.380879,0.20074,14.9163,0.175384,0.074375,15.3398,-1.00707,0.622565,15.69,1.05456,-0.03024,15.4631,-0.911786,-0.07267,15.3293,-1.01558,-0.05322,15.2831,-0.740601,-0.015955,15.2931,-0.786381,0.00019,15.2259,-0.744406,-0.0707,15.1778,-0.632281,-0.037005,15.3523,-0.888646,-0.08997,15.2926,-0.673571,0.032885,15.4646,-0.909571,0.083955,15.2449,-0.777441,0.040775,15.3556,-0.886681,0.052955,15.3011,-0.747476,0.00398,15.4264,-0.821126,0.132065,15.5003,-0.739666,0.093565,15.5692,-0.802111,0.002995,15.4281,-0.823171,0.000625,15.5977,-0.827976,0.00062,15.4288,-0.824041,-0.092315,15.5692,-0.802111,-0.00175,15.4281,-0.823236,-0.130815,15.5003,-0.739666,-0.00273,15.4263,-0.821211,-0.092315,15.4315,-0.677221,-0.00174,15.4246,-0.819246,0.000625,15.403,-0.651356,0.00063,15.4238,-0.818386,0.093565,15.4315,-0.677221,0.003005,15.4246,-0.819186,0.132065,15.5743,-0.658101,0.093565,15.6432,-0.720546,0.000625,15.6717,-0.746411,-0.092315,15.6432,-0.720546,-0.130815,15.5743,-0.658101,-0.092315,15.5055,-0.595656,0.000625,15.477,-0.569791,0.093565,15.5055,-0.595656,0.132065,15.6483,-0.576536,0.093565,15.7172,-0.638981,0.000625,15.7457,-0.664846,-0.092315,15.7172,-0.638981,-0.130815,15.6483,-0.576536,-0.092315,15.5795,-0.514091,0.000625,15.551,-0.488226,0.093565,15.5795,-0.514091,0.10883,15.7223,-0.494971,0.077135,15.779,-0.546375,0.000625,15.8025,-0.567671,-0.075885,15.779,-0.546375,-0.10758,15.7223,-0.494971,-0.075885,15.6656,-0.443566,0.000625,15.6422,-0.422271,0.077135,15.6656,-0.443566,0.090155,15.6433,-0.010891,0.111345,15.6433,-0.119161,0.182115,15.4849,-0.119161,0.14741,15.4849,0.028714,0.03468,15.6433,0.056024,0.05655,15.4849,0.141194,-0.05576,15.4849,0.141194,-0.03389,15.6433,0.056024,-0.14662,15.4849,0.028714,-0.089365,15.6433,-0.010891,-0.181325,15.4849,-0.119161,-0.110555,15.6433,-0.119161,-0.089365,15.6433,-0.227436,-0.14662,15.4849,-0.267041,-0.03389,15.6433,-0.294351,-0.05576,15.4849,-0.358436,0.05655,15.4849,-0.358436,0.03468,15.6433,-0.294351,0.14741,15.4849,-0.267041,0.090155,15.6433,-0.227436,0.182115,15.3265,-0.119161,0.14741,15.3265,0.055334,0.05655,15.3265,0.242469,-0.05576,15.3265,0.242469,-0.14662,15.3265,0.055334,-0.181325,15.3265,-0.119161,-0.14662,15.3265,-0.267041,-0.05576,15.3265,-0.358436,0.05655,15.3265,-0.358436,0.14741,15.3265,-0.267041,0.182115,15.1681,-0.081701,0.14741,15.1681,0.082089,0.05655,15.1681,0.295934,-0.05576,15.1681,0.295934,-0.14662,15.1681,0.082089,-0.181325,15.1681,-0.081701,-0.116405,15.1681,-0.267041,-0.02487,15.218,-0.380546,0.025665,15.218,-0.380546,0.1172,15.1681,-0.267041,0.000355,14.8705,-0.048411,0.001145,14.8581,0.197804,0.001205,14.879,0.386299,-0.00024,14.879,0.386299,-0.00061,14.8581,0.197804,-0.000315,14.8705,-0.048401,0.002335,14.8817,-0.287386,0.00345,14.9417,-0.367311,0.00517,14.9424,-0.367311,0.003365,14.8817,-0.287386,0.0001,15.5297,-0.870485,0.06869,15.194,-0.629056,0.018635,15.2978,-0.787456,-0.075885,15.6803,-0.443566,-0.075885,15.7937,-0.546376,0.077135,15.6803,-0.443566,0.000625,15.6568,-0.422271,0.077135,15.7937,-0.546376,0.000625,15.8171,-0.567671,0.165995,15.1455,-0.565031,-0.162125,15.1499,-0.571866,0.00979,15.0086,-0.458311,0.000165,15.3188,-0.782976,-0.10758,15.737,-0.494971,0.10883,15.737,-0.494971,-1.11157,26.9604,0.805668,-1.1802,26.9835,0.788848,-1.20788,26.9711,0.749783,-1.17888,26.8702,0.792673,-1.12227,26.805,0.826523,-1.09488,26.8857,0.868608,-1.10021,26.6926,0.844668,-1.02638,26.7021,0.842408,-1.30454,27.5033,0.637328,-1.26446,27.4499,0.658883,-1.2857,27.4617,0.682983,-1.32258,27.5181,0.659013,-1.47338,27.5159,0.386463,-1.42818,27.504,0.397673,-1.41819,27.5391,0.419443,-1.46354,27.5623,0.421378,-1.40285,27.5899,0.527288,-1.37878,27.5706,0.509963,-1.47041,27.476,0.366273,-1.41872,27.4518,0.376788,-1.45016,27.2804,0.338423,-1.40402,27.28,0.349828,-1.40455,27.3628,0.358248,-1.45219,27.3966,0.343923,-1.24186,26.8903,0.709128,-1.26361,26.9812,0.722778,-1.27343,26.9071,0.621508,-1.41624,27.1016,0.380838,-1.39029,27.1153,0.387653,-1.34092,26.9813,0.474658,-1.31946,26.9869,0.493558,-1.2408,27.3976,0.662708,-1.23252,27.3587,0.649513,-1.2522,27.35,0.666563,-1.26802,27.4022,0.689383,-1.23445,27.3023,0.630548,-1.21056,27.3096,0.620368,-1.20172,27.2429,0.509693,-1.2029,27.2533,0.576053,-1.19398,27.2731,0.569983,-1.18884,27.2629,0.506868,-1.28314,27.0372,0.585208,-1.30382,26.9922,0.556078,-1.30001,26.9703,0.587558,-1.29771,27.0347,0.644913,-1.32785,27.1099,0.541903,-1.37814,27.1438,0.429593,-1.3335,27.1783,0.495583,-1.39118,27.2066,0.401648,-1.3447,27.2999,0.466573,-1.39403,27.3208,0.385818,-1.21036,27.2615,0.740003,-1.22068,27.2348,0.712043,-1.23968,27.2047,0.713573,-1.19801,27.2312,0.777093,-1.17797,27.5555,0.699573,-1.22999,27.5585,0.720933,-1.21084,27.5128,0.745998,-1.17433,27.4928,0.731368,-1.33135,27.6263,0.412408,-1.40563,27.6351,0.404058,-1.34702,27.6677,0.519303,-1.28028,27.6539,0.522283,-1.35687,27.5635,0.370883,-1.44569,27.5653,0.355768,-1.3593,27.4897,0.345043,-1.44786,27.5142,0.325668,-1.37397,27.3762,0.312458,-1.36924,27.2548,0.314893,-1.43338,27.2746,0.299828,-1.43235,27.396,0.300398,-1.334,27.0958,0.350488,-1.39593,27.0869,0.343148,-1.26414,26.9616,0.433738,-1.31991,26.9472,0.434068,-1.11973,26.7469,0.664598,-1.11616,26.714,0.709098,-1.21942,26.7815,0.562458,-1.19232,26.7882,0.556968,-1.25158,27.5672,0.552788,-1.2153,27.5346,0.621593,-1.25513,27.5741,0.623363,-1.27902,27.5941,0.587903,-1.35722,27.2447,0.367023,-1.40239,27.3545,0.345228,-1.34976,27.3399,0.362283,-1.16907,27.0497,0.642613,-1.16982,26.9471,0.674233,-1.14003,26.994,0.701023,-1.15609,27.0613,0.683778,-1.37279,27.1162,0.396818,-1.36974,27.1355,0.414828,-1.29651,26.9359,0.532223,-1.30144,26.9723,0.549413,-1.18435,26.7147,0.723008,-1.25106,26.7877,0.578888,-1.18763,27.4358,0.765573,-1.16355,27.3048,0.735878,-1.2277,27.4358,0.708288,-1.19521,27.3427,0.672418,-1.16559,27.2874,0.632413,-1.21163,27.252,0.679818,-1.13963,27.2726,0.544863,-1.17928,27.2824,0.476398,-1.20947,27.2389,0.468923,-1.16863,27.2134,0.577673,-1.18192,27.1611,0.512303,-1.23481,27.5264,0.569003,-1.21659,27.4798,0.616663,-1.22031,26.9974,0.526903,-1.26042,27.1115,0.496203,-1.25991,27.1885,0.443238,-1.23427,27.2677,0.412103,-1.36094,27.4723,0.440793,-1.32822,27.5345,0.438168,-1.34876,27.4217,0.365208,-1.3805,27.3905,0.406543,-1.18991,27.0995,0.763058,-1.20208,27.1511,0.784408,-1.22595,27.1402,0.713358,-1.20671,27.1067,0.715673,-1.18569,27.0997,0.736298,-1.13478,27.3997,0.628218,-1.13715,27.423,0.819093,-1.11563,27.2541,0.833338,-1.16027,27.1233,0.826313,-1.1859,27.1157,0.701088,-1.17404,27.0857,0.721043,-1.22311,27.194,0.679153,-1.21947,27.1483,0.689293,-1.18921,27.0084,0.741083,-1.13593,27.0254,0.787438,-1.19327,26.9512,0.578903,-1.23381,26.9875,0.702898,-1.16321,27.1018,0.599288,-0.988955,26.7556,0.712758,-1.14592,27.1996,0.563043,-1.10519,27.2118,0.588713,-1.14794,27.2455,0.606933,-1.16827,27.2307,0.555598,-1.11904,27.1258,0.580748,-1.07736,27.1481,0.604468,-1.10006,27.1116,0.597633,-1.07406,27.1265,0.636543,-1.19121,27.2332,0.739928,-1.20581,27.2111,0.718733,-1.1685,27.2121,0.696898,-1.15072,27.2302,0.713978,-1.15783,27.1823,0.644443,-1.12952,27.1792,0.642763,-1.13019,27.1282,0.640053,-1.16062,27.123,0.637768,-1.13785,27.1017,0.649118,-1.15475,27.0934,0.647268,-1.13811,27.114,0.732813,-1.17145,27.1102,0.712333,-1.18142,27.1905,0.739948,-1.19394,27.2275,0.777463,-1.12125,27.0849,0.708628,-1.16303,27.082,0.714683,-1.12966,27.0865,0.664083,-1.15147,27.0774,0.664108,-1.14837,27.0691,0.688123,-1.11759,27.0806,0.684078,-1.13076,27.2301,0.649233,-1.12456,27.2268,0.700143,-1.07841,27.1752,0.672108,-1.08068,27.1381,0.656083,-1.34403,27.4003,0.472123,-1.31951,27.43,0.480453,-1.29052,26.908,0.526798,-1.27204,26.8734,0.488853,-1.235,26.8765,0.497693,-1.19328,27.2257,0.659808,-1.23157,27.4234,0.591943,-1.2369,27.4639,0.644743,-1.31608,27.3673,0.500358,-1.3024,27.3277,0.497368,-1.20249,27.3496,0.459393,-1.16613,27.3266,0.510243,-1.258,27.3511,0.540388,-1.27641,27.3814,0.518028,-1.22268,27.4055,0.604313,-1.24296,27.4676,0.680898,-1.22015,27.4634,0.692068,-1.39309,27.5203,0.397978,-1.38508,27.5516,0.414713,-1.41265,27.4311,0.362053,-1.24991,27.4784,0.695278,-1.26988,26.846,0.576773,-1.22617,27.5231,0.655263,-1.24757,27.5298,0.672173,-1.36196,27.5645,0.609933,-1.31834,27.544,0.593753,-1.27117,27.6272,0.642583,-1.21618,27.6224,0.629903,-1.28988,27.5526,0.635053,-1.26158,27.5216,0.674628,-1.26042,27.457,0.436128,-1.24564,27.4777,0.507943,-1.26591,27.3964,0.410008,-1.28889,27.3198,0.365508,-1.28629,27.2437,0.360053,-1.28044,27.1377,0.399343,-1.21181,27.4768,0.559238,-1.1765,27.5051,0.576158,-1.18331,27.4895,0.538348,-1.15634,27.4487,0.396458,-1.16305,27.2511,0.321753,-1.13062,27.1301,0.346343,-1.05489,26.9412,0.472798,-1.17532,26.9675,0.505468,-1.03731,26.9243,0.581093,-1.13675,26.854,0.608613,-1.17029,27.2142,0.646573,-1.18765,27.2174,0.691368,-1.17974,27.2222,0.632993,-1.26348,27.0325,0.666248,-1.17891,26.9325,0.623653,-1.36271,27.5643,0.409638,-1.31886,27.6164,0.486303,-1.33715,27.6411,0.499368,-0.29426,27.289,2.23391,-0.47046,27.2486,2.20674,-0.440855,27.0675,2.27609,-0.271085,27.0854,2.29833,-0.778565,26.4988,0.144063,-0.655255,26.5098,-0.080508,-1.05632,27.2607,-0.074467,-1.11397,27.8373,-0.146382,-0.97947,27.7234,-0.403477,-0.935685,27.2417,-0.393072,-1.041,28.3067,-0.243582,-0.877385,28.1092,-0.422827,-1.22202,28.1037,0.251178,-1.09655,28.5655,0.039608,-1.15258,28.5821,0.711723,-1.03291,28.8705,0.560028,-1.01021,28.4238,1.47784,-0.85623,28.56,1.71236,-0.83055,28.8225,1.40101,-0.991125,28.731,1.25953,-0.62722,28.6548,1.90376,-0.30839,28.765,2.0563,-0.36604,29.0205,1.78359,-0.643105,28.9264,1.60399,-0.578255,29.0948,1.30158,-0.84488,28.9864,0.991418,-0.867535,28.2573,1.90637,-0.968575,28.1413,1.69887,-0.908275,27.8607,1.88922,-0.82196,27.8861,2.05489,-0.53297,28.3266,2.11725,-0.701,26.0259,1.31955,-0.83818,26.2309,1.1046,-0.853615,26.2929,1.22868,-0.727025,26.1309,1.43818,-0.77863,26.2934,1.54483,-0.851655,26.4284,1.32607,-0.42504,25.9349,2.00501,-0.488155,26.109,2.14143,-0.641575,26.1673,1.85486,-0.62487,26.0747,1.73999,-0.353915,25.8533,1.87955,-0.55146,25.9443,1.60243,-0.205685,25.8174,2.16078,-0.24833,25.8902,2.23636,-0.23237,26.0702,2.30755,-0.263115,26.1856,2.32603,-0.40314,26.2858,2.24509,-0.543375,26.3506,2.18159,-0.73665,26.5165,1.94836,-0.835975,26.5916,1.60494,-0.90401,26.7373,1.35552,-0.997225,27.0925,1.36668,-0.92777,26.87,1.66082,-0.987855,27.0991,1.75049,-1.02413,27.353,1.49134,-0.98445,27.7586,1.64321,-1.0387,27.7495,1.42179,-0.933035,27.6894,1.80153,-0.880065,26.9753,1.98738,-0.829585,26.7742,1.96187,-0.70246,26.8638,2.22946,-0.725585,27.0234,2.20845,-0.477075,27.4301,2.20941,-0.47542,27.3494,2.22035,-0.31575,27.3644,2.18043,-0.308645,27.4278,2.15846,-0.804625,27.5088,1.9928,-0.844245,27.5255,1.93284,-0.841485,27.4444,1.96064,-0.78298,27.4837,2.0304,-0.84232,27.2665,2.01142,-0.678155,27.2233,2.15622,-0.47811,27.6169,2.22152,-0.47567,27.6742,2.19091,-0.637695,27.681,2.15357,-0.65396,27.6211,2.16379,-0.26162,27.4705,2.18748,-0.203015,27.5285,2.20044,-0.267505,27.5636,2.16171,-0.30897,27.5032,2.17755,-0.338135,27.6193,2.15244,-0.387395,27.5697,2.20064,-0.490665,27.7486,2.23291,-0.338395,27.7095,2.23557,-0.341115,27.867,2.347,-0.541575,27.859,2.25255,-0.082075,27.0387,2.6327,-0.176125,26.9835,2.49688,-0.170005,26.9308,2.60672,-0.097195,26.9634,2.69438,0,26.9717,2.7076,0,27.0529,2.65154,-0.2421,26.9211,2.366,-0.22079,26.944,2.424,-0.19555,26.9638,2.38589,-0.22108,26.9413,2.34846,-0.57312,27.9686,2.26943,-0.343225,28.0048,2.35345,-0.233445,28.2398,2.26174,0,28.2797,2.26328,0,28.6831,2.15885,0,29.022,1.84259,-0.151845,26.8493,2.64486,-0.08623,26.8772,2.72944,-0.076625,26.7995,2.65135,-0.083115,26.7822,2.62228,-0.031875,26.7729,2.65383,-0.04136,26.8047,2.7012,-0.19655,26.9549,2.49894,-0.18234,26.8453,2.56493,-0.17477,26.9177,2.5583,-0.1237,26.8108,2.61014,-0.161805,26.8064,2.55871,-0.39821,26.4727,2.30031,-0.51976,26.4888,2.23684,-0.389125,26.3757,2.25038,-0.176785,26.6558,2.40243,-0.13146,26.7307,2.4195,-0.234085,26.7587,2.35753,-0.298915,26.7153,2.34548,-0.76004,27.5622,2.08339,-0.747125,27.6314,2.06174,-0.797305,27.5889,1.98786,-0.810225,27.5208,2.02427,-0.786265,27.3816,2.04292,-0.74241,27.4469,2.08675,-0.167935,26.2688,2.40031,-0.26706,26.311,2.3622,-0.13819,26.1631,2.36941,-0.904825,27.3761,1.88095,-0.189865,27.4495,2.22086,-0.249345,27.4427,2.19144,-0.266265,26.3448,2.37547,-0.163825,26.2959,2.42568,-0.15844,26.3371,2.44554,-0.257855,26.3852,2.35849,-0.12444,26.4413,2.43313,-0.23054,26.4309,2.33324,-0.02285,26.7228,2.46394,-0.06718,26.725,2.45417,-0.052495,26.6785,2.44219,-0.02596,26.6817,2.43471,-0.27224,26.5277,2.40317,-0.178085,26.5679,2.45042,-0.088435,26.5916,2.49282,-0.373235,26.4391,2.27698,-0.361875,26.3967,2.26192,-0.318825,26.4444,2.30095,-0.335345,26.4582,2.31666,-0.358105,26.4377,2.26398,-0.268295,26.5125,2.4098,-0.247655,26.438,2.40533,-0.15194,26.432,2.45141,-0.18049,26.5264,2.4696,-0.09884,26.5416,2.5201,-0.05807,26.4311,2.49077,0,26.4354,2.49728,0,26.5373,2.52673,-0.20103,26.7644,2.37205,-0.25348,26.8479,2.3388,-0.2387,26.8551,2.31867,-0.16601,26.7742,2.46669,-0.133335,26.7452,2.43748,-0.102605,26.7677,2.46502,-0.068125,26.7391,2.46511,-0.02292,26.7366,2.49234,0,26.7261,2.46536,0,26.7273,2.49405,-0.11151,26.8084,2.59906,-0.056675,26.8319,2.61699,-0.241025,26.8059,2.44885,-0.17459,26.7951,2.50328,-0.147055,26.7987,2.50813,-0.13535,26.8144,2.53931,-0.099875,26.7948,2.47762,-0.141025,26.7892,2.48858,-0.1895,25.8599,1.55994,0,25.8101,2.21095,0,25.8645,2.33831,-0.377375,26.5421,-0.219148,0,27.1916,-0.668397,-0.561225,27.2096,-0.565907,-0.49755,27.628,-0.709287,0,27.6157,-0.795842,-0.7521,29.0618,0.704368,-0.843325,29.0384,0.438808,-0.896085,28.8784,-0.047832,-0.76633,28.3301,-0.511582,-0.85647,28.6092,-0.310047,-0.58489,29.1983,0.748758,-0.52378,28.7709,-0.412297,-0.541845,28.4141,-0.632867,-0.5342,28.988,-0.191457,-0.615815,29.2119,0.319473,-0.604915,28.0933,-0.672697,-1.10455,27.5644,0.155993,-1.20983,27.7007,0.442913,-1.04343,26.961,0.933368,-0.985295,26.6594,1.01868,-0.991805,26.6955,1.14324,-1.05793,27.0093,1.05747,-1.22055,27.8551,0.788888,-1.17497,28.1168,0.989233,-1.15377,27.5952,0.737238,-1.12511,27.4401,0.862953,-1.16077,27.4892,0.983123,-1.09702,27.5528,1.11785,-1.08838,27.2623,0.153568,-0.93164,26.7253,0.337833,-0.827095,26.7231,0.082463,-0.816735,26.4863,0.393387,-0.91894,26.4202,0.979053,-0.81637,26.4563,0.818578,-0.197365,27.366,2.25032,-0.14366,27.1834,2.40177,-0.077875,27.257,2.45104,-0.099,27.6007,2.32933,-0.13898,27.7537,2.3338,-0.19968,27.7096,2.26832,-0.15609,27.582,2.23197,-0.287655,29.2,1.47734,0,29.2214,1.54274,0,29.3413,0.904873,-0.230165,29.3217,0.855883,0,29.0376,-0.293627,0,28.816,-0.474822,0,28.4735,-0.692747,-0.65425,27.3403,2.15733,-0.64131,27.4186,2.15583,-0.333695,27.6428,2.14141,-0.48196,27.6829,2.19812,-0.64736,27.6973,2.15604,-0.754055,27.6596,2.06106,-0.82172,27.6276,1.98128,-0.777445,27.7205,2.05716,-0.93418,27.5105,1.79282,-0.90195,27.5275,1.86173,-0.88119,27.6517,1.90554,0,26.0622,2.39875,-0.218865,26.4189,2.32065,-0.139075,26.4264,2.40628,-0.05843,26.4151,2.4411,-0.30106,26.4493,2.28385,-0.349145,26.4162,2.26149,-0.339795,26.4336,2.24996,-0.342125,26.4432,2.25347,-0.936315,26.496,1.18933,-0.62284,26.7129,2.24419,-0.15075,25.8632,1.77928,-0.247735,29.3106,0.335013,-0.14873,27.4708,2.25257,-0.27644,27.4244,2.17807,-0.927585,26.447,1.09947,-0.02898,26.595,2.46599,0,26.5918,2.47251,0,26.6813,2.43266,0,29.3113,0.352693,0,29.1847,-0.033752,-0.163995,29.1657,-0.034422,-0.107,26.9394,2.38218,-0.06944,26.9401,2.43287,-0.045605,26.9408,2.50024,-0.071725,26.8157,2.5279,-0.049305,26.8903,2.41945,-0.07822,26.9064,2.38055,-0.105025,26.9269,2.38026,-0.34803,26.478,2.32959,0,26.5805,2.48879,-0.40796,26.8259,2.31757,-0.42264,26.9648,2.30488,-0.234455,27.6424,2.21557,-0.264335,27.609,2.16485,-0.690255,27.7498,2.16388,-0.746255,27.8068,2.12848,-0.82817,27.7582,2.00343,-0.316635,27.4375,2.13761,-0.478155,27.4335,2.18609,-0.634115,27.6128,2.15139,-0.475525,27.6097,2.20071,-0.312835,27.5136,2.14475,-0.25482,27.4805,2.14033,-0.388455,27.5651,2.18113,-0.783365,27.52,2.01951,-0.73534,27.565,2.07363,-0.72386,27.4494,2.07521,-0.767995,27.4845,2.02407,-0.245845,27.441,2.14759,-0.627945,27.4245,2.14145,-0.268765,27.4333,2.1357,-0.783425,27.5087,1.99326,-1.05944,27.3519,1.23965,-1.08025,27.2468,0.938263,-1.08019,27.2922,1.03537,-0.31312,26.4414,2.29103,-0.217085,26.422,2.25778,-0.313665,26.4506,2.22671,-0.21276,26.4328,2.29469,-0.127025,26.5027,2.37594,-0.062915,26.4863,2.38933,-0.263375,26.4511,2.27494,-0.320555,26.4733,2.24476,-0.03311,26.4343,2.45512,0,26.4327,2.45806,0,26.4217,2.37737,-0.02273,26.4302,2.3751,-0.247425,26.3822,2.21874,-0.39411,26.4217,2.10115,-0.246205,26.5221,2.27702,-0.13656,26.5834,2.34275,-0.32439,26.5198,2.19719,-0.519055,26.4132,1.96339,-0.27519,26.0662,1.96645,-0.211585,26.2738,2.24007,-0.13522,26.7909,2.23082,-0.26194,26.8245,2.1782,-0.451455,26.7305,2.07002,-0.040015,26.2117,2.32081,0,26.2108,2.32415,0,25.9847,1.93743,-0.44735,26.3903,1.78004,-0.384815,26.0736,1.7224,-0.105005,26.7788,1.97499,-0.239615,26.8725,1.96432,-0.362765,26.7655,1.9093,-0.46392,26.3107,1.58211,-0.28172,26.1079,1.52658,-0.179235,26.8171,1.62241,-0.447915,26.6403,1.65137,0,26.0271,1.70943,-0.01389,26.0073,1.47141,-0.35936,26.3948,1.37506,-0.115445,26.1677,1.35144,-0.191355,26.6328,1.39659,-0.35927,26.5223,1.36084,0,26.1249,1.33723,-0.31253,26.4082,2.30279,-0.329745,26.3624,2.27551,0,26.7989,2.70182,0,26.8916,2.73235,-1.1115,27.1228,0.854833,-1.1083,27.0185,0.827958,-1.16019,27.4384,0.416213,-0.968025,26.6428,0.896648,-0.913555,26.6895,0.762763,0,27.2801,2.46306,-0.71409,26.7281,-0.148957,-0.438605,26.7337,-0.324507,0,26.603,-0.319087,0,26.7342,-0.382622,-1.04492,27.022,0.238973,-0.96797,26.9898,-0.005767,-0.859255,26.9691,-0.286572,-0.50692,26.9603,-0.458637,0,26.9436,-0.544782,-0.30165,27.475,2.13943,0,25.8298,1.5529,0,25.8487,1.76849,-0.09165,27.4733,2.34109,0,27.4934,2.3558,0,27.609,2.32885,-0.149795,28.0147,2.37244,-0.164885,27.8738,2.3695,0,27.7699,2.36078,0,27.8832,2.39171,-0.126015,26.3948,2.31998,0,28.0318,2.39605,-0.03618,26.334,2.48766,-0.31875,26.968,2.32531,-0.062115,26.8129,2.59093,-0.06173,26.7874,2.59591,-0.075545,26.7936,2.54229,-0.052375,26.7641,2.51367,-0.03782,26.7491,2.51289,-0.069105,26.8074,2.57138,-0.058,26.8377,2.5513,-0.025645,26.7445,2.59298,-0.02632,26.9434,2.50197,-0.030605,26.9162,2.4523,0,26.7416,2.59615,0,26.7709,2.6597,0,26.7744,1.9747,0,26.7905,2.28061,0,26.7591,1.68267,0,26.1516,2.38968,0,26.2417,2.4706,0,26.2742,2.48735,0,26.4694,2.41812,0,26.4048,2.46777,0,26.6008,2.42174,0,28.0915,-0.768877,0,26.3309,2.49328,0,26.7106,1.40972,-0.262335,26.8681,2.42291,-0.30417,26.8382,2.33602,-0.406625,26.7292,2.31306,-0.373015,27.4439,2.14522,-0.48354,27.4333,2.1786,-0.624875,27.5975,2.14762,-0.48188,27.5968,2.189,-0.40491,27.558,2.17309,-0.75009,27.5187,2.0326,-0.7087,27.5574,2.0792,-0.70934,27.4652,2.07345,-0.749295,27.4929,2.03535,-0.621665,27.4257,2.13721,-0.754165,27.5068,2.02616,-0.36014,27.5115,2.14753,-0.36046,27.4899,2.14376,1.20788,26.9711,0.749783,1.1802,26.9835,0.788848,1.11157,26.9604,0.805668,1.17888,26.8702,0.792673,1.09488,26.8857,0.868608,1.12227,26.805,0.826523,1.02638,26.7021,0.842408,1.10021,26.6926,0.844668,1.2857,27.4617,0.682983,1.26446,27.4499,0.658883,1.30454,27.5033,0.637328,1.32258,27.5181,0.659013,1.41819,27.5391,0.419443,1.42818,27.504,0.397673,1.47338,27.5159,0.386463,1.46354,27.5623,0.421378,1.40285,27.5899,0.527288,1.37878,27.5706,0.509963,1.41872,27.4518,0.376788,1.47041,27.476,0.366273,1.40455,27.3628,0.358248,1.40402,27.28,0.349828,1.45016,27.2804,0.338423,1.45219,27.3966,0.343923,1.24186,26.8903,0.709128,1.27343,26.9071,0.621508,1.26361,26.9812,0.722778,1.39029,27.1153,0.387653,1.41624,27.1016,0.380838,1.31946,26.9869,0.493558,1.34092,26.9813,0.474658,1.2522,27.35,0.666563,1.23252,27.3586,0.649513,1.2408,27.3976,0.662708,1.26802,27.4022,0.689383,1.23445,27.3023,0.630548,1.21056,27.3096,0.620368,1.19398,27.2731,0.569983,1.2029,27.2533,0.576053,1.20172,27.2429,0.509693,1.18884,27.2629,0.506868,1.28314,27.0372,0.585208,1.29771,27.0347,0.644913,1.30001,26.9703,0.587558,1.30382,26.9922,0.556078,1.32785,27.1099,0.541903,1.37814,27.1438,0.429593,1.3335,27.1783,0.495583,1.39118,27.2066,0.401648,1.3447,27.2999,0.466573,1.39403,27.3208,0.385818,1.23968,27.2047,0.713573,1.22068,27.2348,0.712043,1.21036,27.2615,0.740003,1.19801,27.2312,0.777093,1.21084,27.5128,0.745998,1.22999,27.5585,0.720933,1.17797,27.5555,0.699573,1.17433,27.4928,0.731368,1.34702,27.6677,0.519303,1.40563,27.6351,0.404058,1.33135,27.6263,0.412408,1.28028,27.6539,0.522283,1.44569,27.5653,0.355768,1.35687,27.5635,0.370883,1.44786,27.5142,0.325668,1.3593,27.4897,0.345043,1.37397,27.3762,0.312458,1.43235,27.396,0.300398,1.43338,27.2746,0.299828,1.36924,27.2548,0.314893,1.39593,27.0869,0.343148,1.334,27.0958,0.350488,1.31991,26.9472,0.434068,1.26414,26.9616,0.433738,1.21942,26.7815,0.562458,1.11616,26.714,0.709098,1.11973,26.7469,0.664598,1.19232,26.7882,0.556968,1.25158,27.5672,0.552788,1.27902,27.5941,0.587903,1.25513,27.5741,0.623363,1.2153,27.5346,0.621593,1.34976,27.3399,0.362283,1.35722,27.2447,0.367023,1.40239,27.3545,0.345228,1.14003,26.994,0.701023,1.16982,26.9471,0.674233,1.16907,27.0497,0.642613,1.15609,27.0613,0.683778,1.36974,27.1355,0.414828,1.37279,27.1162,0.396818,1.30144,26.9723,0.549413,1.29651,26.9359,0.532223,1.18435,26.7147,0.723008,1.25106,26.7877,0.578888,1.18763,27.4358,0.765573,1.16355,27.3048,0.735878,1.19521,27.3427,0.672418,1.2277,27.4358,0.708288,1.16559,27.2874,0.632413,1.21163,27.252,0.679818,1.17928,27.2824,0.476398,1.13963,27.2726,0.544863,1.20947,27.2389,0.468923,1.16863,27.2134,0.577673,1.18192,27.1611,0.512303,1.23481,27.5264,0.569003,1.21659,27.4798,0.616663,1.26042,27.1115,0.496203,1.22031,26.9974,0.526903,1.25991,27.1885,0.443238,1.23427,27.2677,0.412103,1.34876,27.4217,0.365208,1.32822,27.5345,0.438168,1.36094,27.4723,0.440793,1.3805,27.3905,0.406543,1.18991,27.0995,0.763058,1.18569,27.0997,0.736298,1.20671,27.1067,0.715673,1.22595,27.1402,0.713358,1.20208,27.1511,0.784408,1.13478,27.3997,0.628218,1.13715,27.423,0.819093,1.11563,27.2541,0.833338,1.16027,27.1233,0.826313,1.17404,27.0857,0.721043,1.1859,27.1157,0.701088,1.21947,27.1483,0.689293,1.22311,27.194,0.679153,1.18921,27.0084,0.741083,1.13593,27.0254,0.787438,1.19327,26.9512,0.578903,1.23381,26.9875,0.702898,1.16321,27.1018,0.599288,0.988955,26.7556,0.712758,1.14794,27.2455,0.606933,1.10519,27.2118,0.588713,1.14592,27.1996,0.563043,1.16827,27.2307,0.555598,1.11904,27.1258,0.580748,1.07736,27.1481,0.604468,1.10006,27.1116,0.597633,1.07406,27.1265,0.636543,1.1685,27.2121,0.696898,1.20581,27.2111,0.718733,1.19121,27.2332,0.739928,1.15072,27.2302,0.713978,1.12952,27.1792,0.642763,1.15783,27.1823,0.644443,1.13019,27.1282,0.640053,1.16062,27.123,0.637768,1.13785,27.1017,0.649118,1.15475,27.0934,0.647268,1.18142,27.1905,0.739948,1.17145,27.1102,0.712333,1.13811,27.114,0.732813,1.19394,27.2275,0.777463,1.16303,27.082,0.714683,1.12125,27.0849,0.708628,1.14837,27.0691,0.688123,1.15147,27.0774,0.664108,1.12966,27.0865,0.664083,1.11759,27.0806,0.684078,1.13076,27.2301,0.649233,1.12456,27.2268,0.700143,1.07841,27.1752,0.672108,1.08068,27.1381,0.656083,1.31951,27.43,0.480453,1.34403,27.4003,0.472123,1.29052,26.908,0.526798,1.27204,26.8734,0.488853,1.235,26.8765,0.497693,1.19328,27.2257,0.659808,1.2369,27.4639,0.644743,1.23157,27.4234,0.591943,1.31608,27.3673,0.500358,1.3024,27.3277,0.497368,1.20249,27.3496,0.459393,1.16613,27.3266,0.510243,1.27641,27.3814,0.518028,1.258,27.3511,0.540388,1.22268,27.4055,0.604313,1.24296,27.4676,0.680898,1.22015,27.4634,0.692068,1.39309,27.5203,0.397978,1.38508,27.5516,0.414713,1.41265,27.4311,0.362053,1.24991,27.4784,0.695278,1.26988,26.846,0.576773,1.22617,27.5231,0.655263,1.24757,27.5298,0.672173,1.36196,27.5645,0.609933,1.31834,27.544,0.593753,1.27117,27.6272,0.642583,1.21618,27.6224,0.629903,1.28988,27.5526,0.635053,1.26158,27.5216,0.674628,1.26042,27.457,0.436128,1.24564,27.4777,0.507943,1.26591,27.3964,0.410008,1.28889,27.3198,0.365508,1.28629,27.2437,0.360053,1.28044,27.1377,0.399343,1.21181,27.4768,0.559238,1.1765,27.5051,0.576158,1.15634,27.4487,0.396458,1.18331,27.4895,0.538348,1.16305,27.2511,0.321753,1.13062,27.1301,0.346343,1.17532,26.9675,0.505468,1.05489,26.9412,0.472798,1.03731,26.9243,0.581093,1.13675,26.854,0.608613,1.18765,27.2174,0.691368,1.17029,27.2142,0.646573,1.17974,27.2222,0.632993,1.26348,27.0325,0.666248,1.17891,26.9325,0.623653,1.36271,27.5643,0.409638,1.31886,27.6164,0.486303,1.33715,27.6411,0.499368,0.440855,27.0675,2.27609,0.47046,27.2486,2.20674,0.29426,27.289,2.23391,0.271085,27.0854,2.29833,0.655255,26.5098,-0.080508,0.778565,26.4988,0.144063,1.05632,27.2607,-0.074467,0.935685,27.2417,-0.393072,0.97947,27.7234,-0.403477,1.11397,27.8373,-0.146382,0.877385,28.1092,-0.422827,1.041,28.3067,-0.243582,1.09655,28.5655,0.039608,1.22202,28.1037,0.251178,1.15258,28.5821,0.711723,1.03291,28.8705,0.560028,1.01021,28.4238,1.47784,0.991125,28.731,1.25953,0.83055,28.8225,1.40101,0.85623,28.56,1.71236,0.62722,28.6548,1.90376,0.643105,28.9264,1.60399,0.36604,29.0205,1.78359,0.30839,28.765,2.0563,0.84488,28.9864,0.991418,0.578255,29.0948,1.30158,0.908275,27.8607,1.88922,0.968575,28.1413,1.69887,0.867535,28.2573,1.90637,0.82196,27.8861,2.05489,0.53297,28.3266,2.11725,0.83818,26.2309,1.1046,0.701,26.0259,1.31955,0.853615,26.2929,1.22868,0.851655,26.4284,1.32607,0.778635,26.2934,1.54483,0.72703,26.1309,1.43818,0.64158,26.1673,1.85486,0.488155,26.109,2.14143,0.42504,25.9349,2.00501,0.62487,26.0747,1.73999,0.353915,25.8533,1.87955,0.55146,25.9443,1.60243,0.205685,25.8174,2.16078,0.24833,25.8902,2.23636,0.40314,26.3101,2.24509,0.263115,26.1856,2.31448,0.23237,26.0702,2.30755,0.543375,26.3506,2.18159,0.736655,26.5165,1.94836,0.904015,26.7373,1.35552,0.83598,26.5916,1.60494,0.987855,27.0991,1.75049,0.927775,26.87,1.66082,0.99723,27.0925,1.36668,1.02413,27.353,1.49134,0.98445,27.7586,1.64321,1.0387,27.7495,1.42179,0.933035,27.6894,1.80153,0.880065,26.9753,1.98738,0.725585,27.0234,2.20845,0.70246,26.8638,2.22946,0.829585,26.7742,1.96187,0.477075,27.4301,2.20941,0.308645,27.4278,2.15846,0.31575,27.3644,2.18043,0.47542,27.3494,2.22035,0.804625,27.5088,1.9928,0.78298,27.4837,2.0304,0.841485,27.4444,1.96064,0.844245,27.5255,1.93284,0.84232,27.2665,2.01142,0.678155,27.2233,2.15622,0.47811,27.6169,2.22153,0.65396,27.6211,2.16379,0.637695,27.681,2.15357,0.47567,27.6742,2.19091,0.26162,27.4705,2.18748,0.30897,27.5032,2.17755,0.267505,27.5636,2.16171,0.203015,27.5285,2.20044,0.387395,27.5697,2.20064,0.338135,27.6193,2.15244,0.341115,27.867,2.347,0.338395,27.7095,2.23557,0.490665,27.7486,2.23291,0.541575,27.859,2.25255,0.082075,27.0387,2.6327,0.097195,26.9634,2.69438,0.170005,26.9308,2.60672,0.176125,26.9835,2.49688,0.2421,26.9211,2.366,0.22108,26.9413,2.34846,0.19555,26.9638,2.38589,0.22079,26.944,2.424,0.57312,27.9686,2.26943,0.233445,28.2398,2.26174,0.343225,28.0048,2.35345,0.151845,26.8493,2.64486,0.08623,26.8772,2.72944,0.076625,26.7995,2.65135,0.04136,26.8047,2.7012,0.031875,26.7729,2.65383,0.083115,26.7822,2.62228,0.19655,26.9549,2.49894,0.18234,26.8453,2.56493,0.17477,26.9177,2.5583,0.1237,26.8108,2.61014,0.161805,26.8064,2.55871,0.394035,26.3855,2.25038,0.51976,26.4888,2.23684,0.394625,26.4829,2.30031,0.234085,26.7587,2.35753,0.13146,26.7307,2.4195,0.176785,26.6558,2.40243,0.298915,26.7153,2.34548,0.76004,27.5622,2.08339,0.810225,27.5208,2.02427,0.797305,27.5889,1.98786,0.747125,27.6314,2.06174,0.74241,27.4469,2.08675,0.786265,27.3816,2.04292,0.167935,26.2688,2.40031,0.13819,26.1631,2.36941,0.26706,26.311,2.3622,0.904825,27.3761,1.88095,0.189865,27.4495,2.22086,0.249345,27.4427,2.19144,0.266265,26.3448,2.37547,0.163825,26.2959,2.42568,0.15844,26.3371,2.44554,0.257855,26.3852,2.35849,0.23054,26.4309,2.33324,0.12444,26.4413,2.43314,0.02285,26.7228,2.46394,0.02596,26.6817,2.43471,0.052495,26.6785,2.44219,0.06718,26.725,2.45417,0.27224,26.552,2.40317,0.178085,26.5679,2.45042,0.088435,26.5916,2.49282,0.372675,26.4473,2.27698,0.365055,26.404,2.26192,0.31801,26.4478,2.30095,0.357725,26.4446,2.26398,0.333265,26.463,2.31666,0.268295,26.5125,2.4098,0.18049,26.5263,2.4696,0.15194,26.432,2.45141,0.247655,26.438,2.40533,0.09884,26.5416,2.5201,0.05807,26.4311,2.49077,0.25348,26.8479,2.3388,0.20103,26.7644,2.37205,0.2387,26.8551,2.31867,0.16601,26.7742,2.46669,0.102605,26.7677,2.46502,0.133335,26.7452,2.43748,0.068125,26.7391,2.46511,0.02292,26.7366,2.49234,0.056675,26.8319,2.61699,0.11151,26.8084,2.59906,0.17459,26.7951,2.50328,0.241025,26.8059,2.44885,0.13535,26.8144,2.53931,0.147055,26.7987,2.50813,0.141025,26.7892,2.48858,0.099875,26.7948,2.47762,0.1895,25.8599,1.55994,0.377375,26.5664,-0.219147,0.49755,27.628,-0.709287,0.561225,27.2096,-0.565907,0.7521,29.0618,0.704368,0.843325,29.0384,0.438808,0.896085,28.8784,-0.047832,0.76633,28.3301,-0.511582,0.85647,28.6092,-0.310047,0.58489,29.1983,0.748758,0.541845,28.4141,-0.632867,0.52378,28.7709,-0.412297,0.5342,28.988,-0.191457,0.615815,29.2119,0.319473,0.604915,28.0933,-0.672697,1.20983,27.7007,0.442913,1.10455,27.5644,0.155993,1.04343,26.961,0.933368,1.05793,27.0093,1.05747,0.991805,26.6955,1.14324,0.985295,26.6594,1.01868,1.17497,28.1168,0.989233,1.22055,27.8551,0.788888,1.15377,27.5952,0.737238,1.16077,27.4892,0.983123,1.12511,27.4401,0.862953,1.09702,27.5528,1.11785,1.08838,27.2623,0.153568,0.93164,26.7253,0.337833,0.816735,26.4863,0.393387,0.827095,26.7231,0.082463,0.91894,26.4202,0.979053,0.81637,26.4563,0.818578,0.197365,27.366,2.25032,0.077875,27.257,2.45104,0.14366,27.1834,2.40177,0.19968,27.7096,2.26832,0.13898,27.7537,2.3338,0.099,27.6007,2.32933,0.15609,27.582,2.23197,0.287655,29.2,1.47734,0.230165,29.3217,0.855883,0.64131,27.4186,2.15583,0.65425,27.3403,2.15733,0.48196,27.6829,2.19812,0.333695,27.6428,2.14141,0.64736,27.6973,2.15604,0.754055,27.6596,2.06105,0.82172,27.6276,1.98128,0.777445,27.7205,2.05716,0.88119,27.6517,1.90554,0.90195,27.5275,1.86173,0.934175,27.5105,1.79282,0.139075,26.4264,2.40628,0.218865,26.4189,2.32065,0.05843,26.4151,2.4411,0.29837,26.4325,2.28385,0.339845,26.4388,2.24996,0.35067,26.4224,2.26149,0.341325,26.4486,2.25347,0.936315,26.496,1.18933,0.62284,26.7129,2.24419,0.15075,25.8632,1.77928,0.247735,29.3106,0.335013,0.14873,27.4708,2.25257,0.27644,27.4244,2.17807,0.927585,26.447,1.09947,0.02898,26.595,2.46599,0.163995,29.1657,-0.034422,0.06944,26.9401,2.43287,0.107,26.9394,2.38218,0.045605,26.9408,2.50024,0.049305,26.8903,2.41945,0.071725,26.8157,2.5279,0.07822,26.9064,2.38055,0.105025,26.9269,2.38026,0.34418,26.4838,2.32959,0.42264,26.9648,2.30488,0.40796,26.8259,2.31757,0.264335,27.609,2.16485,0.234455,27.6424,2.21557,0.690255,27.7498,2.16388,0.746255,27.8068,2.12848,0.82817,27.7582,2.00343,0.478155,27.4335,2.18609,0.316635,27.4375,2.13761,0.475525,27.6097,2.20071,0.634115,27.6128,2.15139,0.25482,27.4805,2.14033,0.312835,27.5136,2.14475,0.388455,27.5651,2.18113,0.73534,27.565,2.07363,0.783365,27.52,2.01951,0.767995,27.4845,2.02407,0.72386,27.4494,2.07521,0.245845,27.441,2.14759,0.627945,27.4245,2.14145,0.268765,27.4333,2.1357,0.783425,27.5087,1.99326,1.05944,27.3519,1.23965,1.08025,27.2468,0.938263,1.08019,27.2922,1.03537,0.31259,26.4443,2.29103,0.31233,26.4535,2.22671,0.217085,26.422,2.25778,0.21276,26.4328,2.29469,0.127025,26.5027,2.37594,0.062915,26.4863,2.38933,0.263375,26.4511,2.27493,0.317215,26.4767,2.24476,0.03311,26.4343,2.45512,0.02273,26.4302,2.3751,0.247425,26.3821,2.21874,0.39374,26.4317,2.10115,0.246205,26.5221,2.27702,0.13656,26.5834,2.34275,0.32439,26.5441,2.19719,0.211585,26.2738,2.24007,0.27519,26.0662,1.96645,0.51906,26.4132,1.96339,0.13522,26.7909,2.23082,0.26194,26.8245,2.1782,0.451455,26.7305,2.07002,0.040015,26.2117,2.32081,0.44735,26.3804,1.78004,0.384815,26.0736,1.7224,0.10501,26.7788,1.97499,0.23962,26.8725,1.96432,0.36277,26.7655,1.9093,0.46392,26.3008,1.58211,0.28172,26.1079,1.52658,0.17924,26.8171,1.62241,0.44792,26.6403,1.65137,0.01389,26.0073,1.47141,0.36129,26.4036,1.37506,0.11545,26.1677,1.35144,0.19136,26.6328,1.39659,0.359275,26.5466,1.36084,0.3149,26.4112,2.30279,0.336035,26.367,2.27551,1.1115,27.1228,0.854833,1.1083,27.0185,0.827958,1.16019,27.4384,0.416213,0.968025,26.6428,0.896648,0.913555,26.6895,0.762763,0.71409,26.7281,-0.148957,0.438605,26.7337,-0.324507,0.96797,26.9898,-0.005767,1.04492,27.022,0.238973,0.859255,26.9691,-0.286572,0.50692,26.9603,-0.458637,0.30165,27.475,2.13943,0.09165,27.4733,2.34109,0.149795,28.0147,2.37244,0.164885,27.8738,2.3695,0.126015,26.3948,2.31998,0.03618,26.334,2.48767,0.31875,26.968,2.32531,0.06173,26.7874,2.59591,0.062115,26.8129,2.59093,0.03782,26.7491,2.51289,0.052375,26.7641,2.51367,0.075545,26.7936,2.54229,0.069105,26.8074,2.57138,0.058,26.8377,2.5513,0.025645,26.7445,2.59298,0.02632,26.9434,2.50197,0.030605,26.9162,2.4523,0.001435,26.2744,2.48687,0.262335,26.8681,2.42291,0.30417,26.8382,2.33602,0.406625,26.7292,2.31306,0.48354,27.4333,2.1786,0.373015,27.4439,2.14522,0.48188,27.5968,2.189,0.624875,27.5975,2.14762,0.40491,27.558,2.17309,0.7087,27.5574,2.0792,0.75009,27.5187,2.0326,0.749295,27.4929,2.03535,0.70934,27.4652,2.07345,0.621665,27.4257,2.13721,0.754165,27.5068,2.02616,0.36046,27.4899,2.14376,0.36014,27.5115,2.14753,-0.373015,27.4439,2.04833,-0.48354,27.4333,2.08171,-0.624875,27.5975,2.05073,-0.48188,27.5968,2.09211,-0.40491,27.558,2.0762,-0.75009,27.5187,1.93571,-0.7087,27.5574,1.98231,-0.70934,27.4652,1.97656,-0.749295,27.4929,1.93846,-0.621665,27.4257,2.04032,-0.754165,27.5068,1.92927,-0.36014,27.5115,2.05064,-0.36046,27.4899,2.04687,0.48354,27.4333,2.08171,0.373015,27.4439,2.04833,0.48188,27.5968,2.09211,0.624875,27.5975,2.05073,0.40491,27.558,2.0762,0.7087,27.5574,1.98231,0.75009,27.5187,1.93571,0.749295,27.4929,1.93846,0.70934,27.4652,1.97656,0.621665,27.4257,2.04032,0.754165,27.5068,1.92927,0.36046,27.4899,2.04687,0.36014,27.5115,2.05064,-0.407536,27.5094,2.15759,-0.513692,27.5094,2.1787,-0.415616,27.4687,2.15759,-0.317541,27.5094,2.09745,-0.332472,27.4343,2.09745,-0.438628,27.4343,2.15759,-0.374992,27.3707,2.09745,-0.473068,27.4113,2.15759,-0.438628,27.3281,2.09745,-0.513692,27.4032,2.15759,-0.513692,27.3132,2.09745,-0.554316,27.4113,2.15759,-0.588756,27.3281,2.09745,-0.588756,27.4343,2.15759,-0.652392,27.3707,2.09745,-0.611768,27.4687,2.15759,-0.694912,27.4343,2.09745,-0.619848,27.5094,2.15759,-0.709843,27.5094,2.09745,-0.611768,27.55,2.15759,-0.694912,27.5844,2.09745,-0.588756,27.5844,2.15759,-0.652392,27.6481,2.09745,-0.554316,27.6074,2.15759,-0.588756,27.6906,2.09745,-0.513692,27.6155,2.15759,-0.513692,27.7055,2.09745,-0.473068,27.6074,2.15759,-0.438628,27.6906,2.09745,-0.438628,27.5844,2.15759,-0.374992,27.6481,2.09745,-0.415616,27.55,2.15759,-0.332472,27.5844,2.09745,0.619924,27.5094,2.15759,0.513768,27.5094,2.1787,0.611843,27.4687,2.15759,0.709919,27.5094,2.09745,0.694988,27.4343,2.09745,0.588832,27.4343,2.15759,0.652468,27.3707,2.09745,0.554392,27.4113,2.15759,0.588832,27.3281,2.09745,0.513768,27.4032,2.15759,0.513768,27.3132,2.09745,0.473144,27.4113,2.15759,0.438704,27.3281,2.09745,0.438704,27.4343,2.15759,0.375068,27.3707,2.09745,0.415692,27.4687,2.15759,0.332548,27.4343,2.09745,0.407612,27.5094,2.15759,0.317617,27.5094,2.09745,0.415692,27.55,2.15759,0.332548,27.5844,2.09745,0.438704,27.5844,2.15759,0.375068,27.6481,2.09745,0.473144,27.6074,2.15759,0.438704,27.6906,2.09745,0.513768,27.6155,2.15759,0.513768,27.7055,2.09745,0.554392,27.6074,2.15759,0.588832,27.6906,2.09745,0.588832,27.5844,2.15759,0.652468,27.6481,2.09745,0.611843,27.55,2.15759,0.694988,27.5844,2.09745],
								"skinIndices": [19,18,0,0,19,0,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,18,19,31,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,18,0,0,19,18,31,0,19,18,31,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,20,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,20,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,20,19,0,0,19,20,0,0,20,19,0,0,20,19,0,0,19,20,0,0,20,19,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,20,19,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,21,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,20,21,0,0,21,20,0,0,20,21,0,0,21,20,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,24,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,20,0,0,21,0,0,0,21,0,0,0,21,0,0,0,26,21,20,0,26,0,0,0,26,0,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,21,20,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,21,0,0,0,21,0,0,0,21,20,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,20,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,27,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,21,0,0,0,26,21,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,26,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,20,0,0,21,0,0,0,26,0,0,0,26,27,0,0,26,21,20,0,28,27,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,26,27,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,27,28,0,0,27,28,0,0,28,0,0,0,28,0,0,0,28,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,21,0,0,0,26,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,28,27,0,0,28,0,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,0,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,27,0,0,28,0,0,0,28,27,0,0,28,0,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,0,0,0,26,27,0,0,26,27,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,27,28,0,0,27,28,0,0,21,0,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,26,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,28,27,0,0,28,27,0,0,28,27,0,0,27,26,0,0,27,0,0,0,27,26,0,0,27,0,0,0,28,0,0,0,28,0,0,0,28,27,0,0,28,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,28,0,0,27,0,0,0,27,28,0,0,27,28,0,0,27,28,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,29,0,8,7,29,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,8,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,9,8,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,10,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,9,10,0,0,10,9,0,0,9,10,0,0,10,9,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,13,0,0,13,0,0,0,12,13,0,0,12,13,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,11,10,0,0,11,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,15,10,0,0,15,0,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,10,9,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,15,10,0,0,10,0,0,0,10,0,0,0,15,10,0,0,10,0,0,0,15,0,0,0,15,10,0,0,15,0,0,0,15,0,0,0,15,10,0,0,15,10,0,0,15,10,0,0,15,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,11,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,9,0,0,10,0,0,0,15,10,0,0,15,10,0,0,15,10,9,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,15,10,0,0,10,0,0,0,10,0,0,0,15,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,16,17,0,0,16,17,0,0,17,0,0,0,17,0,0,0,17,0,0,0,16,0,0,0,16,17,0,0,16,17,0,0,10,0,0,0,15,0,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,10,0,0,15,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,11,10,0,0,10,0,0,0,10,0,0,0,11,10,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,10,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,11,10,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,16,17,0,0,16,17,0,0,10,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,16,15,0,0,16,15,0,0,16,15,0,0,16,15,0,0,16,0,0,0,16,15,0,0,16,15,0,0,16,15,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,16,17,0,0,17,16,0,0,16,17,0,0,16,0,0,0,16,0,0,0,16,15,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,16,0,0,0,16,17,0,0,16,17,0,0,16,0,0,0,16,0,0,0,16,17,0,0,16,17,0,0,16,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,13,0,0,13,0,0,0,12,13,0,0,12,13,0,0,13,0,0,0,13,0,0,0,13,12,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,2,3,1,35,2,3,1,35,2,3,1,0,2,3,1,35,2,3,1,35,2,3,1,35,2,34,35,3,2,34,35,3,2,34,3,35,2,35,3,34,2,3,35,34,2,3,1,35,2,3,35,1,2,3,35,1,2,3,35,34,19,18,0,0,18,19,0,0,18,19,0,0,19,18,0,0,19,18,0,0,5,6,18,4,5,6,18,4,5,18,4,0,5,4,18,7,5,18,6,0,5,18,6,0,18,5,4,0,5,18,4,0,5,4,18,7,5,6,4,18,5,6,4,18,5,4,7,18,5,6,4,7,5,18,6,0,5,18,6,7,5,18,7,0,18,5,7,0,5,6,7,18,5,7,18,0,18,5,0,0,5,18,6,0,4,18,5,7,4,5,18,7,4,5,18,7,4,5,7,18,18,5,4,0,18,5,4,0,18,5,0,0,18,5,0,0,18,5,7,4,18,5,7,0,18,5,0,0,4,18,5,7,4,18,5,7,18,5,4,0,18,4,5,31,18,5,7,4,18,5,4,7,18,5,19,0,18,5,0,0,4,18,5,31,4,18,5,7,4,5,18,7,4,5,7,18,18,5,4,31,18,4,5,31,18,5,4,7,18,4,5,7,7,18,5,4,7,4,18,5,18,19,5,0,18,19,5,0,18,5,4,19,18,5,19,0,18,4,5,7,18,4,7,5,4,7,18,5,18,19,0,0,18,19,0,0,18,4,5,19,18,5,19,4,18,4,5,31,4,18,5,31,18,5,4,31,18,5,19,0,18,5,19,0,18,5,0,0,18,5,0,0,18,19,5,0,18,19,0,0,18,5,0,0,18,5,19,0,18,5,19,0,18,5,4,0,18,19,5,0,18,19,0,0,18,19,5,31,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,5,19,31,18,31,19,4,18,31,4,19,18,5,4,31,18,19,0,0,4,18,3,7,4,18,3,7,4,7,18,3,4,7,3,18,18,31,4,5,18,19,4,3,4,18,3,19,4,31,18,7,4,7,18,5,4,7,18,5,4,31,18,5,31,4,3,29,31,3,4,29,3,4,2,31,4,3,29,31,31,18,3,19,31,3,2,0,31,3,0,0,31,18,3,19,3,18,4,19,3,18,4,19,3,4,18,19,3,4,18,2,18,31,4,5,4,18,31,5,4,3,18,7,3,4,18,2,3,4,18,2,3,2,4,18,3,2,4,18,3,4,2,31,3,4,2,29,4,3,29,31,31,3,18,2,3,2,31,0,3,2,18,19,3,2,18,19,3,2,18,31,3,2,18,31,2,3,31,0,2,3,31,0,3,2,18,4,3,2,4,18,3,2,31,0,3,2,18,19,18,19,31,3,18,19,3,4,3,2,0,0,2,3,0,0,2,3,0,0,3,4,7,2,3,4,18,2,3,2,31,0,3,31,2,0,3,2,31,0,3,2,31,0,18,19,5,0,18,19,4,31,18,19,31,0,18,31,19,0,18,19,31,0,18,31,19,0,19,18,31,4,19,18,31,4,19,18,31,0,19,18,0,0,19,18,31,0,19,18,31,0,19,18,31,0,19,18,31,0,19,18,31,0,31,18,19,0,18,19,31,3,19,18,31,3,4,3,18,19,3,4,18,19,3,2,0,0,2,3,0,0,18,19,31,0,18,19,5,31,18,19,31,0,31,18,19,0,31,18,19,3,31,18,19,3,31,18,19,0,31,18,19,3,19,18,31,0,19,18,31,3,4,29,3,31,4,31,3,29,18,31,4,19,31,18,4,19,31,18,4,5,3,2,31,0,3,2,31,0,3,2,29,0,3,2,31,29,3,2,31,0,3,2,31,0,3,2,31,0,3,2,31,0,3,2,31,0,2,3,31,0,2,3,31,0,3,2,18,31,2,3,31,0,2,3,31,0,2,3,0,0,2,3,34,0,2,0,0,0,2,0,0,0,3,2,4,31,3,4,2,29,3,2,31,0,3,2,31,0,3,2,31,0,18,31,19,4,4,31,3,18,31,18,19,4,19,18,3,4,18,19,4,3,18,3,4,19,18,19,3,4,18,19,4,3,2,3,1,0,2,3,1,0,2,3,1,31,2,3,1,31,2,3,1,31,2,3,31,0,2,3,1,31,2,3,31,0,2,3,34,35,2,34,3,35,2,34,35,0,2,34,35,0,2,3,35,34,4,18,3,19,2,34,0,0,2,3,34,31,2,3,31,0,2,3,31,0,3,2,31,0,4,3,18,19,4,18,3,19,18,4,5,7,2,3,35,31,3,2,31,0,3,2,31,0,31,3,18,2,3,2,31,0,3,2,31,0,3,2,31,0,31,3,2,0,31,3,0,0,31,18,4,19,31,18,4,19,31,18,4,0,31,4,18,0,4,31,18,5,31,4,3,29,31,3,4,0,4,5,18,7,19,18,31,0,19,18,31,0,19,18,31,0,19,18,31,0,3,2,4,31,2,0,0,0,2,34,0,0,4,31,18,29,31,4,3,18,31,4,18,0,31,18,0,0,31,0,0,0,31,0,0,0,31,3,0,0,31,4,0,0,31,4,0,0,31,0,0,0,31,0,0,0,31,0,0,0,31,18,0,0,31,18,4,0,31,18,4,0,31,4,18,0,31,4,18,0,31,4,18,0,31,4,0,0,3,2,4,7,4,5,7,18,31,18,4,0,31,4,18,0,31,4,18,0,31,18,4,0,31,0,0,0,31,18,0,0,31,4,0,0,31,4,0,0,31,4,0,0,31,0,0,0,31,4,18,0,31,4,0,0,31,4,18,0,31,4,18,0,31,4,18,0,31,4,18,0,31,18,4,0,31,4,18,0,5,7,18,4,5,18,6,0,2,3,1,35,6,0,0,0,6,0,0,0,5,6,18,0,5,6,18,0,5,6,0,0,5,6,18,0,5,6,0,0,5,6,4,18,5,6,4,18,5,6,18,0,5,6,0,0,5,6,18,0,5,6,7,18,5,6,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,5,6,0,0,6,0,0,0,5,6,4,0,6,0,0,0,18,5,19,0,18,5,19,0,2,3,1,0,2,3,1,41,2,3,1,41,2,3,1,41,2,3,1,41,2,3,1,41,2,40,41,3,2,40,41,3,2,40,41,3,2,41,40,3,2,3,41,40,2,3,41,1,2,3,1,41,2,3,41,40,2,3,41,1,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,5,6,7,4,5,4,7,18,5,7,4,0,5,6,7,4,5,7,6,0,5,7,4,0,7,5,4,0,5,7,6,0,5,6,4,7,5,4,7,18,5,6,4,7,5,7,18,0,5,7,6,18,5,7,6,0,7,5,18,0,5,7,6,0,7,5,0,0,4,5,7,18,7,4,5,18,4,5,7,18,7,5,4,0,7,5,4,0,7,5,0,0,7,5,0,0,7,5,18,4,7,5,0,0,7,5,0,0,4,7,5,18,7,4,5,29,7,5,4,0,7,4,5,29,7,5,4,18,7,5,4,0,7,5,8,0,7,5,0,0,4,7,5,18,4,7,5,29,4,5,7,18,7,5,4,29,7,4,5,29,7,5,4,18,7,5,4,18,7,8,5,0,7,8,5,0,7,5,4,8,7,5,8,0,7,4,5,18,7,4,5,18,7,8,0,0,7,8,0,0,7,4,5,8,7,5,8,4,7,4,5,29,4,7,5,29,7,5,4,29,7,5,8,0,7,5,0,0,7,5,0,0,7,5,8,0,7,8,5,0,7,8,0,0,7,5,0,0,7,5,4,29,7,5,8,0,7,5,8,0,7,8,5,29,7,8,5,0,7,8,5,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,5,8,29,7,5,4,29,7,29,8,4,7,29,8,4,7,8,0,0,7,8,29,0,8,7,0,0,8,7,0,0,4,7,3,18,4,7,3,18,7,29,4,5,7,8,4,3,7,4,3,8,4,29,7,5,4,29,7,5,4,7,3,8,4,3,7,18,29,4,3,31,4,3,29,31,3,4,2,31,29,3,4,31,29,3,0,0,29,3,2,7,29,7,3,8,29,7,3,8,3,7,8,2,3,7,2,4,3,7,4,2,7,3,4,8,7,29,4,5,4,7,29,5,3,4,7,2,3,2,7,4,3,2,4,7,3,7,4,2,29,3,7,2,3,2,7,29,3,2,7,8,3,2,7,29,3,2,7,29,3,2,7,8,3,2,7,8,2,3,29,0,2,3,29,0,2,3,7,29,3,2,29,0,7,29,8,3,3,2,7,8,7,8,3,2,2,3,0,0,3,2,0,0,2,3,0,0,3,4,7,2,3,2,29,0,3,29,2,0,3,2,29,0,3,2,29,0,7,8,5,0,7,8,29,4,7,29,8,0,7,8,29,0,7,29,8,0,7,8,29,0,8,7,29,0,8,7,29,3,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,29,7,8,0,7,8,29,3,7,8,29,3,7,3,4,8,7,8,3,4,7,8,3,4,3,4,7,2,7,8,29,0,7,8,5,29,7,8,29,0,29,7,8,0,29,7,8,0,29,7,8,0,29,7,8,3,29,7,8,3,8,7,29,3,8,7,29,3,4,29,3,7,29,7,4,5,29,7,4,8,7,29,4,8,3,2,29,0,3,2,29,0,3,2,29,0,3,2,29,0,3,2,29,0,3,2,29,0,2,3,29,0,3,2,29,0,2,3,29,0,2,3,29,0,3,2,7,29,2,3,0,0,2,3,29,0,2,3,40,0,2,0,0,0,3,2,4,31,3,2,29,0,3,2,29,0,3,2,29,0,7,29,8,4,4,29,7,3,29,7,8,4,7,8,3,29,7,8,3,4,7,8,3,4,2,3,1,29,2,3,1,29,2,3,1,29,2,3,29,0,2,3,29,0,2,3,1,29,2,40,3,41,2,3,40,41,2,40,41,0,2,40,41,0,2,3,41,40,2,40,0,0,2,3,40,29,2,3,29,0,2,3,29,0,3,2,29,0,7,3,4,8,7,4,3,8,7,4,5,3,2,3,41,29,3,2,29,0,3,2,29,0,29,3,7,2,3,2,7,29,3,2,29,0,3,2,29,0,29,3,0,0,29,3,2,0,29,7,4,8,29,7,4,8,29,7,4,5,4,29,7,5,29,4,7,0,29,3,4,0,29,4,3,31,4,7,5,18,8,7,29,0,8,7,29,0,8,7,29,0,8,7,29,0,3,2,4,7,2,40,0,0,4,29,7,31,29,4,7,3,29,4,7,0,29,7,0,0,29,0,0,0,29,0,0,0,29,3,0,0,29,4,0,0,29,4,0,0,29,0,0,0,29,0,0,0,29,0,0,0,29,7,0,0,29,7,4,0,29,7,4,0,29,7,4,0,29,4,7,0,29,4,7,0,29,4,7,0,3,4,2,31,29,7,4,0,29,7,4,0,29,7,0,0,29,0,0,0,29,4,0,0,29,0,0,0,29,4,0,0,29,4,7,0,29,4,0,0,29,4,7,0,29,4,7,0,29,4,7,0,29,4,7,0,29,4,7,0,29,4,7,0,29,7,4,0,29,7,4,0,29,7,4,0,5,7,6,0,5,6,7,0,6,0,0,0,5,6,7,0,5,6,0,0,5,6,7,0,5,6,0,0,5,6,4,7,5,6,4,7,6,5,0,0,5,6,7,0,5,6,7,0,6,5,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,5,8,0,7,5,8,0,42,0,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,43,0,0,43,42,0,0,43,0,0,0,43,0,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,0,0,0,43,42,0,0,43,0,0,0,43,0,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,0,0,0,43,44,0,0,43,0,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,42,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,42,0,0,43,42,0,0,43,44,0,0,42,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,0,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,42,0,0,43,42,0,0,42,43,0,0,42,43,0,0,42,43,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,0,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,43,44,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,43,44,0,0,44,43,0,0,43,44,0,0,43,44,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,0,0,0,44,43,0,0,43,44,0,0,44,43,0,0,44,0,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,43,0,0,43,44,0,0,43,44,0,0,44,43,0,0,44,43,0,0,44,43,0,0,44,0,0,0,44,43,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,0,0,0,36,37,0,0,36,0,0,0,37,36,0,0,37,36,0,0,37,0,0,0,37,0,0,0,37,36,0,0,37,36,0,0,36,37,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,38,0,0,37,38,0,0,37,0,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,0,0,0,37,38,0,0,37,38,0,0,37,0,0,0,37,38,0,0,37,36,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,36,0,0,37,36,0,0,36,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,0,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,36,0,0,37,36,0,0,36,37,0,0,36,37,0,0,36,37,0,0,37,0,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,0,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,37,38,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,37,38,0,0,38,37,0,0,38,37,0,0,37,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,37,0,0,37,38,0,0,38,37,0,0,38,0,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,37,0,0,37,38,0,0,37,38,0,0,38,37,0,0,38,37,0,0,38,37,0,0,38,0,0,0,38,37,0,0,1,2,35,41,1,2,35,41,2,1,3,35,2,1,35,3,2,1,35,3,2,1,35,34,2,1,35,34,1,2,35,34,2,35,1,34,2,35,34,1,2,35,34,1,2,35,1,34,2,34,35,1,2,34,35,3,2,34,35,1,2,34,35,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,34,40,2,0,34,2,40,0,34,2,40,0,2,34,40,0,2,35,1,34,2,35,1,34,1,2,41,35,1,35,2,41,1,2,35,34,1,35,2,41,34,40,0,0,34,40,2,0,34,40,2,0,1,35,2,0,1,35,2,41,2,34,40,0,2,34,40,0,34,2,40,35,2,34,40,35,34,2,40,0,34,2,40,0,2,34,35,40,2,34,35,0,2,34,35,40,34,2,35,40,34,2,35,40,2,34,35,40,34,2,35,40,2,34,35,1,2,34,35,1,34,2,35,40,2,34,35,1,2,35,1,3,2,1,35,3,2,1,3,35,2,34,35,0,34,2,35,40,34,2,40,0,34,2,40,35,34,2,40,0,2,3,1,35,2,1,3,35,2,35,34,1,35,2,34,1,34,40,0,0,34,40,0,0,34,40,0,0,40,34,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,36,0,0,35,0,0,0,35,36,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,36,35,0,0,36,35,0,0,36,0,0,0,36,0,0,0,36,35,0,0,36,0,0,0,36,35,0,0,36,0,0,0,36,0,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,0,0,0,36,35,0,0,36,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,36,35,0,0,36,35,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,36,0,0,0,36,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,36,35,0,0,35,36,0,0,36,35,0,0,36,35,0,0,35,36,0,0,35,36,0,0,36,35,0,0,35,36,0,0,36,35,0,0,36,35,0,0,36,0,0,0,35,36,0,0,36,35,0,0,36,35,0,0,35,36,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,36,35,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,34,2,35,40,34,2,35,1,34,2,35,40,34,2,35,0,34,2,35,0,34,2,35,40,34,2,35,40,34,2,35,40,34,2,40,35,34,2,40,35,34,2,40,0,34,2,40,0,35,34,2,0,34,35,2,1,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,35,2,0,34,2,35,0,34,2,35,40,34,35,2,0,2,35,34,1,35,2,34,1,35,2,34,1,35,2,34,1,2,35,34,1,2,35,34,1,35,2,34,1,34,2,40,35,34,2,40,0,34,40,2,0,34,2,40,35,34,40,2,0,34,40,2,0,34,40,2,0,34,40,2,0,35,34,0,0,34,35,0,0,35,34,0,0,35,34,2,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,35,34,2,1,35,34,2,1,35,2,34,1,35,2,34,1,35,34,2,0,35,34,2,0,35,34,2,0,35,34,2,1,34,40,35,0,34,35,0,0,34,0,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,40,0,0,35,1,0,0,35,0,1,0,35,1,0,0,35,1,2,0,35,1,2,0,35,0,0,0,35,0,0,0,35,34,0,0,35,34,2,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,2,0,35,1,0,0,35,1,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,0,34,40,35,34,0,40,35,34,0,40,35,0,1,0,0,35,1,0,35,0,1,0,35,0,1,0,35,1,0,0,35,0,1,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,0,34,40,35,0,34,0,35,1,2,34,35,1,2,0,35,2,1,34,35,2,1,34,35,2,34,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,2,35,34,1,34,2,35,1,2,34,35,1,2,34,35,1,34,2,35,1,2,35,34,1,2,34,35,1,2,34,35,1,2,34,35,1,34,35,2,1,35,34,2,1,35,34,2,1,2,35,34,1,35,34,2,0,35,34,2,0,35,34,2,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,34,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,34,0,35,2,34,1,35,2,34,1,35,2,34,1,35,2,34,1,35,2,34,1,35,34,2,1,35,34,2,0,35,34,2,0,35,34,2,1,35,34,2,1,35,34,2,0,35,34,2,0,34,35,2,0,35,34,2,0,34,35,0,0,34,35,2,0,34,35,2,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,0,0,0,34,40,0,0,34,40,0,0,34,40,0,0,34,40,0,0,35,2,1,34,35,2,1,34,35,1,2,34,36,0,0,0,36,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,2,35,3,34,35,34,0,40,35,34,0,40,35,34,0,40,35,34,0,40,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,34,35,40,0,34,35,40,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,35,34,0,0,35,34,0,0,34,35,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,1,2,0,1,35,0,0,1,35,2,0,0,35,1,0,0,35,1,0,35,34,0,0,35,34,0,0,34,35,0,40,34,35,0,40,34,35,0,40,34,35,0,40,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,40,34,0,35,34,40,0,0,34,40,0,0,2,34,40,0,34,40,2,0,34,40,2,0,34,40,0,0,2,34,0,0,2,34,40,0,2,40,34,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,35,36,0,0,35,0,0,0,36,0,0,0,35,0,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,36,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,34,35,0,0,34,35,0,0,34,35,0,0,34,35,0,0,36,0,0,0,1,2,41,35,2,1,41,3,2,1,41,40,2,1,41,40,2,1,41,3,1,2,41,40,2,41,40,1,2,41,40,1,2,41,1,40,2,41,1,40,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,40,34,2,0,2,40,34,0,40,2,34,0,40,2,34,0,2,41,1,40,2,41,1,40,1,41,2,35,1,2,41,40,1,41,2,35,40,34,2,0,40,34,2,0,40,34,0,0,1,41,2,0,1,41,2,35,2,40,34,0,2,40,34,0,40,2,34,0,2,40,34,41,40,2,34,41,40,2,34,0,2,40,34,41,2,40,41,0,2,40,41,34,40,2,41,34,40,2,41,34,40,2,41,34,2,40,41,34,2,40,41,1,40,2,41,34,2,40,41,1,2,40,41,1,2,40,41,1,2,41,1,40,2,1,41,3,2,1,3,41,2,3,1,41,2,40,41,0,40,2,34,41,40,2,34,41,40,2,34,0,40,2,34,0,2,41,40,1,41,2,40,1,40,34,0,0,40,34,0,0,40,34,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,42,0,0,41,0,0,0,41,42,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,42,0,0,0,42,41,0,0,42,41,0,0,42,0,0,0,42,41,0,0,42,0,0,0,42,41,0,0,42,0,0,0,42,0,0,0,42,41,0,0,42,41,0,0,42,0,0,0,42,41,0,0,42,41,0,0,42,0,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,42,41,0,0,41,42,0,0,41,42,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,42,0,0,41,42,0,0,42,0,0,0,42,0,0,0,41,0,0,0,41,42,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,42,41,0,0,42,41,0,0,42,41,0,0,41,42,0,0,42,41,0,0,41,42,0,0,42,41,0,0,42,0,0,0,41,42,0,0,42,41,0,0,41,42,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,42,41,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,40,2,41,34,40,2,41,0,40,2,41,34,40,2,41,34,40,2,41,0,40,2,41,34,40,2,41,34,40,2,41,34,40,2,34,0,40,2,34,41,40,2,34,41,40,2,34,0,40,41,2,0,40,41,2,0,40,41,2,0,40,41,2,1,40,41,2,0,40,41,2,0,40,41,2,0,40,41,2,0,40,41,2,0,40,2,41,34,40,2,41,34,40,2,41,0,41,2,40,1,2,41,40,1,41,2,40,1,41,2,40,1,41,2,40,1,2,41,40,1,2,41,40,1,40,34,2,0,40,2,34,0,40,2,34,0,40,34,2,0,40,34,2,0,40,34,2,0,40,34,2,0,40,34,0,0,41,40,0,0,41,40,2,0,41,40,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,0,0,0,40,41,0,0,40,41,0,0,40,41,0,0,41,2,40,1,41,40,2,1,41,40,2,1,41,2,40,1,41,40,2,1,41,40,2,1,41,40,2,0,41,40,2,0,40,34,0,0,40,34,0,0,40,0,0,0,40,41,0,0,40,34,0,0,40,34,0,0,40,34,0,0,40,34,0,0,41,1,0,0,41,1,2,0,41,1,0,0,41,1,0,0,41,0,0,0,41,1,2,0,41,0,0,0,41,40,0,0,41,40,2,0,41,40,0,0,41,40,2,0,41,40,0,0,41,40,0,0,41,1,0,0,41,1,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,0,40,1,41,40,0,34,41,40,0,0,41,0,1,0,41,0,1,0,41,0,1,0,0,41,1,0,41,0,1,0,41,1,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,0,40,1,41,0,40,0,41,1,2,40,41,2,1,40,41,2,1,40,41,1,2,0,41,2,40,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,2,41,40,1,40,2,41,1,40,2,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,2,40,41,1,41,40,2,1,41,40,2,1,40,41,2,1,2,41,40,1,41,40,2,0,41,40,2,0,41,40,2,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,0,0,0,41,40,0,0,41,40,0,0,41,0,0,0,41,0,0,0,41,40,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,40,0,41,2,40,1,41,2,40,1,41,2,40,1,41,40,2,1,41,40,2,1,41,2,40,1,41,40,2,1,41,40,2,0,41,40,2,1,41,40,2,1,41,40,2,0,41,40,2,0,40,41,2,0,41,40,2,0,40,41,0,0,40,41,0,0,40,41,2,0,40,41,2,0,40,41,0,0,40,0,0,0,40,41,0,0,40,41,0,0,40,34,0,0,40,34,0,0,40,34,0,0,40,0,0,0,40,34,0,0,40,34,0,0,40,34,0,0,40,34,0,0,41,2,1,40,41,1,2,40,41,2,1,40,42,0,0,0,42,0,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,2,41,3,40,41,40,0,0,41,40,0,34,41,40,0,34,40,41,0,34,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,40,34,41,0,40,41,0,0,40,41,0,34,40,41,34,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,41,40,0,0,40,41,0,0,40,41,0,0,41,40,0,0,40,41,0,0,41,40,0,0,41,40,0,0,40,41,0,0,1,41,0,2,1,41,0,0,41,1,2,0,0,41,1,0,0,41,1,0,41,40,0,0,41,40,0,0,40,41,0,34,40,41,0,34,40,41,0,34,40,41,0,34,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,34,0,0,40,34,0,0,2,40,0,0,2,40,34,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,41,42,0,0,41,0,0,0,42,0,0,0,41,0,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,42,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,40,41,0,0,40,41,0,0,40,41,0,0,40,41,0,0,42,0,0,0,0,35,1,0,0,35,1,34,0,35,34,1,0,35,1,34,0,41,40,1,0,41,1,40,0,41,1,40,0,41,1,40,34,40,0,35,34,40,35,0,34,40,0,35,35,34,0,40,35,0,34,1,34,35,0,40,34,40,35,0,40,34,41,0,40,34,0,41,40,34,0,41,2,40,41,1,41,40,0,34,41,0,40,1,40,41,0,34,40,41,34,0,34,35,0,40,40,41,0,34,1,35,2,41,1,41,35,2,1,0,41,35,1,0,35,0,0,1,35,0,0,1,0,0,1,35,2,0,1,35,0,41,1,0,41,35,1,35,0,0,0,35,1,0,0,35,1,0,0,1,0,0,1,41,2,35,0,1,41,0,1,0,41,0,1,41,2,0,1,41,0,35,0,41,1,0,0,41,1,0,40,34,0,41,1,41,0,0,34,40,0,35,34,40,0,35,34,0,40,35,34,40,0,35,0,40,34,35,0,34,40,35,34,40,0,35,34,0,40,35,40,34,0,41,40,0,34,41,40,34,0,41,40,0,34,41,40,34,0,35,40,34,0,1,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,35,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,0,34,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,40,34,0,1,1,0,41,40,1,0,41,40,1,0,41,40,1,0,41,40,1,0,41,0,1,0,0,0,1,0,0,0,1,0,41,35,1,0,35,0,1,0,35,41,1,0,35,34,1,0,35,40,1,0,40,34,1,0,35,34,1,0,40,34,1,0,34,40,1,0,40,41,1,0,40,41,1,0,41,40,1,0,40,41,1,0,41,40,1,0,41,0,1,0,0,0,1,0,0,0,1,0,35,0,1,0,35,34,1,0,35,34,1,0,35,34,1,0,41,40,1,0,41,40,0,1,41,40,1,0,41,0,1,0,0,0,1,0,0,0,1,0,35,0,0,1,35,34,0,1,35,40,0,1,40,35,0,1,40,41,0,1,41,40,0,1,41,40,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,35,34,0,1,35,34,0,1,35,40,0,1,41,40,0,1,41,40,40,34,0,35,0,40,34,41,40,34,0,41,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,40,41,34,0,34,35,40,0,1,40,34,40,34,0,35,1,0,0,0,1,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0],
								"uvs": [[0.0674,0.75925,0.06255,0.75965,0.0604,0.7548,0.1702,0.7169,0.1553,0.708,0.15385,0.69145,0.1837,0.7082,0.049,0.755,0.0542,0.7548,0.0548,0.76045,0.0484,0.761,0.16285,0.73015,0.154,0.72105,0.0431,0.7616,0.0442,0.7768,0.0377,0.7766,0.0385,0.7605,0.05515,0.7778,0.04955,0.7773,0.0613,0.77765,0.15925,0.74365,0.08375,0.7652,0.0795,0.76325,0.0857,0.76285,0.03595,0.88735,0.03825,0.8572,0.04485,0.8603,0.04,0.8871,0.04815,0.861,0.0444,0.88625,0.05205,0.8619,0.0487,0.88635,0.05615,0.86205,0.0531,0.8868,0.0685,0.8595,0.07495,0.85795,0.06925,0.8878,0.06345,0.8869,0.08045,0.8594,0.0732,0.88885,0.0849,0.86065,0.0772,0.88995,0.0171,0.8604,0.02195,0.8592,0.0235,0.8888,0.0215,0.88915,0.0274,0.8579,0.0266,0.88825,0.03245,0.85725,0.03185,0.8874,0.0571,0.8867,0.06,0.8609,0.06465,0.8302,0.05915,0.8472,0.0558,0.8459,0.05825,0.8254,0.03875,0.8282,0.03835,0.84035,0.0321,0.8394,0.03175,0.8279,0.05035,0.84335,0.04955,0.8229,0.04495,0.84195,0.0448,0.82475,0.0818,0.8422,0.0775,0.84325,0.07645,0.8328,0.07975,0.8299,0.0262,0.83985,0.0255,0.8258,0.02015,0.84125,0.0185,0.8264,0.0144,0.8428,0.0133,0.8286,0.0865,0.8443,0.0856,0.82875,0.0701,0.8468,0.03245,0.7958,0.03295,0.7865,0.04,0.78655,0.03905,0.7957,0.0466,0.78815,0.04575,0.79725,0.05025,0.78775,0.05045,0.79845,0.0556,0.78885,0.056,0.7993,0.06195,0.78705,0.0623,0.80215,0.06825,0.7887,0.06865,0.80485,0.07495,0.78815,0.0811,0.7894,0.0798,0.80665,0.07435,0.8053,0.0873,0.7897,0.086,0.80905,0.0128,0.80865,0.01085,0.7903,0.0168,0.7904,0.01815,0.806,0.02485,0.79,0.02455,0.80035,0.0452,0.821,0.0455,0.80915,0.05195,0.81165,0.05,0.8192,0.05885,0.815,0.05805,0.82285,0.06805,0.82195,0.0651,0.8269,0.06955,0.83075,0.06655,0.82965,0.0737,0.82395,0.0782,0.82095,0.0793,0.8273,0.07675,0.83045,0.0854,0.82255,0.08545,0.8263,0.0187,0.82475,0.0131,0.82705,0.01235,0.8221,0.0182,0.81665,0.0253,0.82305,0.025,0.81315,0.0316,0.8241,0.0322,0.81075,0.0391,0.8109,0.03915,0.82425,0.0297,0.7763,0.0221,0.77645,0.01525,0.7768,0.01035,0.77655,0.0836,0.7773,0.0898,0.7765,0.077,0.77645,0.06755,0.77665,0.0627,0.8472,0.0672,0.8315,0.0699,0.8348,0.05445,0.91505,0.06075,0.9146,0.05065,0.9159,0.04425,0.91595,0.03885,0.9157,0.0353,0.9155,0.032,0.91495,0.02975,0.914,0.0271,0.91305,0.02505,0.913,0.0224,0.91395,0.06755,0.91625,0.07475,0.7628,0.0119,0.7582,0.00655,0.75875,0.02115,0.7575,0.02785,0.7573,0.0622,0.97605,0.06285,0.9753,0.06415,0.97565,0.0643,0.9768,0.07015,0.97385,0.0711,0.9737,0.07215,0.97485,0.07035,0.97625,0.069,0.9737,0.06785,0.97515,0.06535,0.9748,0.0665,0.975,0.06225,0.9728,0.0616,0.9673,0.06325,0.96685,0.0636,0.97205,0.06495,0.96665,0.06505,0.97215,0.06615,0.966,0.06645,0.9723,0.0679,0.9655,0.0685,0.9708,0.0671,0.9724,0.06905,0.9653,0.06975,0.9705,0.0703,0.96525,0.071,0.9708,0.07165,0.9652,0.0727,0.9719,0.06085,0.9736,0.0603,0.9671,0.05235,0.9882,0.0533,0.9873,0.0549,0.98795,0.05495,0.9894,0.0776,0.98295,0.07875,0.9829,0.07985,0.9843,0.0777,0.9858,0.0763,0.98265,0.0748,0.9843,0.0566,0.98705,0.05805,0.9874,0.05285,0.984,0.0525,0.9801,0.0546,0.97965,0.0547,0.9832,0.0568,0.9795,0.0566,0.98355,0.0584,0.97885,0.0584,0.9839,0.07385,0.97625,0.07565,0.97575,0.07595,0.97925,0.0742,0.981,0.07735,0.9758,0.07745,0.979,0.07885,0.9759,0.0789,0.9794,0.0805,0.9763,0.0808,0.9809,0.05095,0.9848,0.05085,0.9799,0.0406,0.9914,0.04165,0.9904,0.04335,0.99105,0.0434,0.9926,0.0894,0.9857,0.09055,0.9856,0.09175,0.9871,0.0895,0.98865,0.08795,0.98545,0.08645,0.98715,0.0451,0.99005,0.04665,0.99045,0.0411,0.98695,0.0407,0.98275,0.04295,0.9823,0.04305,0.98605,0.0452,0.98205,0.04505,0.9864,0.0469,0.98135,0.04695,0.9867,0.08515,0.97865,0.08705,0.97825,0.08755,0.98185,0.08575,0.98375,0.08885,0.97815,0.08915,0.98155,0.09045,0.9782,0.09065,0.98195,0.0922,0.97865,0.0927,0.9835,0.0391,0.9878,0.03895,0.98255,0.04315,0.9709,0.04315,0.9748,0.04105,0.97445,0.0404,0.9716,0.09225,0.96915,0.09055,0.9698,0.0906,0.96665,0.09245,0.9662,0.08615,0.9696,0.08435,0.9699,0.08395,0.9662,0.08595,0.9663,0.037,0.95805,0.03825,0.9558,0.04105,0.96485,0.03815,0.9668,0.04585,0.9641,0.0454,0.9554,0.04695,0.9576,0.04815,0.96595,0.0387,0.9817,0.04085,0.9797,0.04715,0.98035,0.0451,0.97905,0.08495,0.9766,0.08675,0.97455,0.0839,0.9635,0.08575,0.9639,0.09035,0.96425,0.09205,0.9637,0.0452,0.974,0.0457,0.9708,0.0906,0.9745,0.09235,0.9768,0.0888,0.97445,0.0884,0.9699,0.04295,0.9791,0.0883,0.96655,0.08805,0.9642,0.04545,0.9678,0.04335,0.9672,0.08555,0.9616,0.0835,0.96155,0.08795,0.96185,0.0902,0.96185,0.09225,0.9611,0.0834,0.95475,0.0824,0.95525,0.087,0.95485,0.04115,0.9684,0.0435,0.96415,0.0385,0.9695,0.0382,0.9722,0.0385,0.97445,0.0475,0.97405,0.04785,0.9709,0.0478,0.9681,0.0416,0.95665,0.08375,0.9503,0.08095,0.95465,0.0804,0.94975,0.0749,0.9493,0.0744,0.9534,0.073,0.9526,0.07305,0.9489,0.0478,0.94455,0.0478,0.95095,0.04545,0.9511,0.0456,0.94485,0.0706,0.948,0.06985,0.95145,0.0672,0.95085,0.06705,0.9483,0.0648,0.94965,0.06225,0.94995,0.0627,0.9466,0.06445,0.9465,0.0548,0.94295,0.0562,0.94795,0.0521,0.9494,0.0511,0.94375,0.05765,0.9421,0.05815,0.945,0.05535,0.9321,0.0491,0.9332,0.04065,0.93415,0.04515,0.93355,0.08865,0.92265,0.09395,0.9185,0.09485,0.9213,0.0786,0.9285,0.0779,0.9206,0.08435,0.92545,0.08325,0.92805,0.0712,0.92905,0.07435,0.9206,0.0755,0.92805,0.06685,0.9308,0.0613,0.9289,0.06945,0.92985,0.05865,0.92935,0.00985,0.95595,0.00995,0.9573,0.0045,0.9567,0.0069,0.9552,0.0056,0.9531,0.00675,0.95315,0.0757,0.93495,0.07245,0.9349,0.05635,0.93605,0.0543,0.93665,0.0504,0.9374,0.0481,0.9379,0.0459,0.9383,0.0559,0.95385,0.0534,0.9535,0.057,0.95125,0.05695,0.95385,0.0357,0.9578,0.03535,0.95645,0.04715,0.9573,0.04815,0.9553,0.0302,0.92855,0.03465,0.9282,0.03165,0.93025,0.1028,0.95455,0.1046,0.94615,0.10705,0.94885,0.0246,0.93835,0.03175,0.9318,0.02755,0.9389,0.02405,0.94225,0.02395,0.9346,0.02275,0.9335,0.025,0.92925,0.09505,0.92575,0.09735,0.93385,0.0909,0.93385,0.08975,0.9255,0.04925,0.93835,0.04955,0.94465,0.04965,0.94805,0.0424,0.93895,0.04405,0.9394,0.04085,0.94575,0.0433,0.94565,0.0429,0.9488,0.0393,0.95195,0.0366,0.9303,0.03295,0.9387,0.078,0.9543,0.07765,0.9495,0.0886,0.9505,0.1023,0.94785,0.1011,0.94585,0.1042,0.9442,0.09045,0.9551,0.0922,0.9544,0.0918,0.9557,0.09095,0.9561,0.0419,0.95535,0.05965,0.9408,0.0606,0.9461,0.03845,0.9463,0.0367,0.95215,0.04025,0.9395,0.0583,0.93495,0.07945,0.93545,0.10225,0.93015,0.1038,0.9356,0.0869,0.92655,0.01535,0.94805,0.0144,0.94715,0.0151,0.9463,0.016,0.94755,0.1148,0.9374,0.11505,0.93975,0.1142,0.9395,0.11395,0.9371,0.10515,0.93845,0.091,0.937,0.0967,0.93905,0.08555,0.9369,0.0872,0.93485,0.06995,0.9375,0.06235,0.93975,0.06735,0.9412,0.0604,0.9407,0.1144,0.93415,0.1222,0.94205,0.12185,0.9403,0.123,0.9396,0.12425,0.94135,0.12385,0.94525,0.1221,0.9443,0.11365,0.94875,0.11535,0.9465,0.11515,0.94885,0.02955,0.9462,0.02515,0.94575,0.0217,0.93205,0.0217,0.92885,0.0134,0.9462,0.0138,0.94535,0.117,0.94595,0.117,0.9483,0.01425,0.9553,0.01285,0.9546,0.01435,0.95215,0.01555,0.95405,0.12065,0.9444,0.1208,0.9466,0.1191,0.9468,0.1188,0.94405,0.1204,0.942,0.1184,0.9415,0.12,0.93985,0.11815,0.93905,0.11775,0.9374,0.1196,0.93835,0.01005,0.94865,0.00785,0.95075,0.00735,0.9495,0.0088,0.9472,0.0215,0.9418,0.0226,0.9441,0.0212,0.9373,0.02435,0.9359,0.11015,0.9488,0.10755,0.9438,0.10995,0.9443,0.0979,0.95125,0.09975,0.954,0.0292,0.95685,0.02595,0.95825,0.0255,0.95285,0.03005,0.9522,0.0421,0.9541,0.05055,0.95375,0.0501,0.9522,0.0591,0.9486,0.0597,0.94985,0.09955,0.9585,0.0972,0.9588,0.095,0.953,0.0949,0.9594,0.09345,0.95975,0.0674,0.95535,0.06545,0.9531,0.06015,0.9511,0.0691,0.9561,0.0722,0.95315,0.0711,0.9564,0.0813,0.9589,0.0796,0.9594,0.0814,0.9552,0.051,0.95565,0.0328,0.9549,0.03215,0.9567,0.0344,0.94965,0.03565,0.9461,0.03245,0.9466,0.03355,0.9525,0.0424,0.9517,0.0499,0.9505,0.0585,0.947,0.0358,0.94,0.03785,0.9406,0.0936,0.95095,0.0981,0.9431,0.08275,0.9359,0.08305,0.92055,0.0868,0.92055,0.1152,0.94395,0.1005,0.943,0.10815,0.9389,0.1072,0.9358,0.1061,0.9321,0.01935,0.93615,0.0175,0.9354,0.0205,0.9322,0.1097,0.9364,0.1109,0.93915,0.10935,0.93375,0.0168,0.9394,0.0149,0.9379,0.0182,0.94175,0.0194,0.94385,0.02065,0.94595,0.11235,0.9443,0.11245,0.9488,0.1165,0.944,0.11645,0.94025,0.11615,0.938,0.1156,0.93495,0.01365,0.9482,0.01215,0.94635,0.0156,0.94955,0.11405,0.9438,0.11295,0.93935,0.1122,0.93695,0.11245,0.9332,0.01115,0.9513,0.01025,0.95265,0.01255,0.9498,0.00875,0.9542,0.0145,0.94335,0.013,0.94235,0.01225,0.94355,0.01295,0.9445,0.01085,0.9449,0.012,0.94385,0.0167,0.9514,0.0167,0.9486,0.0176,0.94995,0.01745,0.94675,0.01865,0.9485,0.0166,0.94425,0.0165,0.9466,0.0146,0.94475,0.01585,0.94525,0.02835,0.9889,0.0294,0.98795,0.03105,0.9886,0.0311,0.9901,0.10265,0.96545,0.10075,0.96605,0.10025,0.9634,0.1022,0.96305,0.1017,0.97965,0.10285,0.9795,0.10415,0.98095,0.102,0.9826,0.09675,0.96635,0.0949,0.96645,0.0941,0.9644,0.09585,0.9639,0.0301,0.9631,0.0267,0.96525,0.1017,0.958,0.03695,0.9646,0.0348,0.9623,0.03165,0.95825,0.1003,0.97945,0.09885,0.98125,0.03285,0.98755,0.0344,0.98795,0.0286,0.9808,0.0308,0.98035,0.03085,0.98355,0.0289,0.98445,0.0331,0.98005,0.03285,0.9839,0.03475,0.979,0.03475,0.9842,0.09715,0.973,0.099,0.97245,0.09965,0.9759,0.09795,0.97785,0.10075,0.9724,0.1012,0.97555,0.10225,0.9724,0.1027,0.9759,0.10405,0.9726,0.10485,0.9773,0.02685,0.98535,0.02685,0.98025,0.02665,0.9796,0.02875,0.9783,0.033,0.97755,0.0349,0.97815,0.09695,0.97225,0.09835,0.97025,0.1002,0.9703,0.0935,0.9622,0.095,0.9618,0.09955,0.9611,0.10145,0.96065,0.03165,0.9689,0.03395,0.969,0.0334,0.9723,0.0312,0.97285,0.10195,0.9703,0.10415,0.97195,0.0988,0.9663,0.03085,0.9777,0.0981,0.96355,0.02905,0.97265,0.0291,0.96935,0.0973,0.9613,0.02985,0.96615,0.0323,0.96525,0.0343,0.9659,0.0325,0.9626,0.02715,0.9674,0.02675,0.97,0.0267,0.9726,0.03565,0.97175,0.03615,0.96945,0.03645,0.967,0.06235,0.95995,0.0629,0.96255,0.0613,0.9625,0.0604,0.96065,0.0718,0.9613,0.0705,0.96145,0.0706,0.9598,0.07195,0.95975,0.06755,0.9613,0.06645,0.9614,0.06635,0.9596,0.06755,0.95955,0.0593,0.9541,0.05795,0.9561,0.0634,0.95285,0.06025,0.9662,0.0617,0.96505,0.0633,0.9646,0.0649,0.9645,0.0663,0.9647,0.0679,0.96395,0.06175,0.95705,0.0638,0.9574,0.0645,0.9597,0.0661,0.95795,0.0678,0.9579,0.071,0.9581,0.07185,0.95785,0.06445,0.9618,0.07025,0.96365,0.0715,0.9646,0.0689,0.9635,0.0688,0.96125,0.06885,0.95995,0.0692,0.95815,0.06025,0.95825,0.0722,0.9559,0.06125,0.95315,0.059,0.9595,0.0589,0.9615,0.0596,0.96305,0.054,0.96915,0.05435,0.97265,0.0524,0.97245,0.05145,0.96985,0.05625,0.97175,0.05665,0.96875,0.0806,0.9661,0.0789,0.96635,0.0791,0.9639,0.0808,0.964,0.07485,0.966,0.07305,0.9659,0.0729,0.9633,0.07485,0.9633,0.05065,0.9599,0.0488,0.96205,0.075,0.95905,0.0727,0.95915,0.07315,0.95335,0.05835,0.95935,0.05505,0.9583,0.05055,0.9792,0.0525,0.9773,0.0545,0.9767,0.0586,0.97795,0.0566,0.97665,0.0737,0.9746,0.07545,0.9725,0.073,0.9609,0.07495,0.96095,0.07935,0.9615,0.081,0.9613,0.07905,0.97275,0.0807,0.9748,0.07735,0.9725,0.07695,0.9661,0.07705,0.9636,0.0772,0.96155,0.05175,0.9669,0.0537,0.9658,0.0775,0.9595,0.0528,0.959,0.0493,0.96785,0.04965,0.97065,0.05005,0.9728,0.05865,0.9715,0.0587,0.96875,0.05585,0.9661,0.0584,0.96625,0.0726,0.9529,0.0794,0.9176,0.07455,0.5086,0.07265,0.51395,0.0656,0.51065,0.09625,0.5102,0.10355,0.51055,0.0964,0.51245,0.0859,0.5086,0.08635,0.51265,0.07995,0.51215,0.08075,0.5086,0.0914,0.50955,0.0922,0.51275,0.0975,0.52835,0.0909,0.52965,0.08,0.5306,0.08555,0.53085,0.074,0.52935,0.05225,0.51635,0.05045,0.5108,0.05635,0.5098,0.0992,0.64665,0.0952,0.6464,0.0904,0.6203,0.0969,0.6173,0.0908,0.6456,0.0871,0.62095,0.08655,0.64565,0.08325,0.62185,0.08215,0.6461,0.07915,0.622,0.0661,0.6471,0.062,0.618,0.0684,0.6195,0.07185,0.64625,0.06215,0.6481,0.05655,0.61945,0.0582,0.6492,0.0521,0.6206,0.109,0.64805,0.1105,0.6192,0.1153,0.6204,0.11095,0.6484,0.1085,0.64755,0.1077,0.61795,0.1033,0.6467,0.1027,0.61735,0.0782,0.64605,0.0753,0.62085,0.0707,0.59095,0.07705,0.5863,0.0795,0.60625,0.07615,0.6075,0.09645,0.589,0.1034,0.5887,0.10305,0.59995,0.0968,0.60085,0.0857,0.5838,0.0849,0.6038,0.0903,0.6024,0.09045,0.58565,0.05895,0.5935,0.05945,0.6037,0.05515,0.60265,0.05565,0.59065,0.1096,0.58665,0.1089,0.60035,0.11395,0.58725,0.11225,0.6017,0.11905,0.5894,0.118,0.60325,0.0505,0.6047,0.04985,0.58955,0.0668,0.6071,0.1027,0.5574,0.09615,0.55735,0.0952,0.54535,0.1022,0.5453,0.0895,0.55885,0.08865,0.5469,0.0848,0.56,0.085,0.5465,0.07925,0.5608,0.0797,0.5476,0.073,0.5636,0.0734,0.54585,0.06715,0.54745,0.06675,0.56625,0.06155,0.5469,0.06105,0.56665,0.0556,0.568,0.05545,0.54815,0.0495,0.5703,0.04925,0.54845,0.1225,0.56995,0.11425,0.56735,0.1156,0.5491,0.1224,0.549,0.1079,0.56185,0.11025,0.5487,0.09,0.582,0.08525,0.58025,0.0833,0.5729,0.08975,0.57045,0.07645,0.5761,0.07725,0.5838,0.07025,0.5877,0.06735,0.5829,0.0688,0.59045,0.06585,0.59145,0.05615,0.58815,0.05725,0.5819,0.0617,0.58485,0.0587,0.59115,0.05,0.58715,0.0501,0.5835,0.12005,0.5831,0.1193,0.5879,0.11375,0.5856,0.1142,0.57775,0.1098,0.584,0.1101,0.5743,0.10355,0.585,0.10295,0.572,0.096,0.58515,0.0961,0.57215,0.10505,0.5286,0.11035,0.529,0.11715,0.5301,0.12375,0.52975,0.04675,0.5298,0.05195,0.5312,0.0595,0.52975,0.0678,0.52995,0.07265,0.60755,0.06815,0.59225,0.06545,0.5954,0.0753,0.6733,0.06905,0.67285,0.0791,0.6741,0.08545,0.67415,0.09085,0.67395,0.09435,0.6737,0.09765,0.6732,0.09985,0.67225,0.1043,0.6713,0.10635,0.67125,0.109,0.6722,0.0623,0.67445,0.0595,0.50955,0.04245,0.5127,0.1198,0.51195,0.12615,0.5123,0.11105,0.5113,0.0679,0.73215,0.06915,0.7318,0.06985,0.73255,0.06775,0.7332,0.05995,0.73135,0.061,0.73025,0.06195,0.73035,0.0617,0.7327,0.0631,0.7302,0.06425,0.73165,0.0667,0.7313,0.06555,0.7315,0.06975,0.72935,0.06845,0.7286,0.0688,0.7235,0.0704,0.7239,0.067,0.72875,0.0671,0.72325,0.0656,0.72885,0.0659,0.7227,0.0636,0.7274,0.0642,0.7222,0.06495,0.72895,0.06235,0.7271,0.06305,0.722,0.0611,0.72735,0.0618,0.72195,0.0594,0.7285,0.06045,0.72185,0.07115,0.7301,0.07175,0.72375,0.0769,0.74415,0.0785,0.74355,0.07945,0.7444,0.0769,0.7456,0.05225,0.74055,0.0534,0.73915,0.0545,0.73925,0.05445,0.742,0.05585,0.73895,0.0573,0.74055,0.07525,0.74325,0.0738,0.74365,0.07895,0.7403,0.0771,0.7395,0.0772,0.7361,0.0793,0.7365,0.07525,0.7399,0.07505,0.73595,0.07345,0.7402,0.07345,0.7353,0.05615,0.7356,0.05645,0.73225,0.05825,0.7327,0.0579,0.7373,0.05465,0.73535,0.05475,0.73225,0.0533,0.73235,0.05325,0.7358,0.05135,0.73725,0.0516,0.73275,0.08085,0.7411,0.08095,0.7363,0.08845,0.7471,0.09015,0.7465,0.09115,0.74745,0.0884,0.74865,0.04045,0.7433,0.04165,0.74185,0.0428,0.74195,0.04265,0.74485,0.0442,0.74165,0.0457,0.74335,0.0867,0.74615,0.08515,0.7465,0.09065,0.7431,0.08875,0.7422,0.08885,0.73855,0.09105,0.739,0.08675,0.74255,0.0866,0.73835,0.08485,0.7429,0.0849,0.73765,0.04465,0.7382,0.04515,0.73465,0.047,0.73505,0.0464,0.74,0.04305,0.7379,0.0433,0.73455,0.04155,0.7383,0.04175,0.7346,0.03955,0.73975,0.04,0.73505,0.09265,0.74395,0.0928,0.7388,0.0907,0.73095,0.08865,0.7313,0.08865,0.72745,0.09135,0.72815,0.0416,0.72335,0.04165,0.72645,0.03995,0.7258,0.03975,0.7229,0.0482,0.7229,0.0478,0.7265,0.046,0.72625,0.0462,0.723,0.09075,0.72155,0.09365,0.7127,0.0949,0.7149,0.0936,0.72345,0.086,0.72085,0.0837,0.72265,0.085,0.71445,0.08655,0.7123,0.0909,0.73605,0.09305,0.73795,0.08465,0.7367,0.0867,0.7354,0.0472,0.73305,0.0454,0.73105,0.04645,0.7207,0.04825,0.7203,0.04015,0.72045,0.04185,0.721,0.08665,0.73045,0.08615,0.7274,0.0416,0.731,0.03985,0.73325,0.04375,0.72655,0.0434,0.731,0.08885,0.73545,0.04385,0.72325,0.0441,0.721,0.08635,0.72445,0.08845,0.7239,0.04665,0.71845,0.04865,0.7184,0.0442,0.7187,0.04195,0.7187,0.03995,0.71795,0.04875,0.7117,0.04975,0.7122,0.0452,0.7118,0.09065,0.725,0.0883,0.72085,0.0933,0.7261,0.0936,0.72875,0.0933,0.73095,0.0843,0.73055,0.08395,0.7275,0.08405,0.72475,0.0903,0.71355,0.0484,0.70735,0.05175,0.70685,0.0512,0.7116,0.05725,0.7064,0.05905,0.70595,0.0591,0.7096,0.0577,0.71035,0.08415,0.70175,0.08635,0.70205,0.0865,0.70815,0.08415,0.70795,0.0615,0.70515,0.065,0.7054,0.06485,0.7079,0.06225,0.7085,0.06935,0.70375,0.0698,0.707,0.06725,0.7067,0.0676,0.70365,0.0772,0.70015,0.08085,0.70095,0.0799,0.70645,0.0758,0.70505,0.07385,0.7022,0.07435,0.69935,0.07665,0.6896,0.08285,0.6907,0.09125,0.6916,0.0868,0.69105,0.04355,0.6804,0.0374,0.6791,0.0383,0.6764,0.05355,0.6861,0.04895,0.68565,0.0478,0.68315,0.0542,0.6784,0.0609,0.68665,0.0566,0.6857,0.05775,0.6784,0.0652,0.68835,0.0626,0.6874,0.07075,0.6865,0.07335,0.68695,0.12185,0.71275,0.1248,0.712,0.12715,0.71345,0.1218,0.71405,0.12495,0.71,0.12605,0.70995,0.05965,0.69235,0.0564,0.6924,0.07765,0.69405,0.07565,0.6935,0.0816,0.6948,0.08605,0.69565,0.08385,0.69525,0.075,0.70825,0.07855,0.71045,0.0761,0.7108,0.07505,0.7108,0.09655,0.71335,0.0962,0.71465,0.0848,0.7142,0.0838,0.7122,0.10165,0.68615,0.1002,0.6878,0.09725,0.68585,0.02935,0.7115,0.02515,0.70595,0.02755,0.70335,0.1072,0.69565,0.10775,0.6994,0.10425,0.69625,0.1001,0.68935,0.1068,0.68685,0.10905,0.6909,0.10785,0.692,0.0372,0.6834,0.04245,0.68315,0.0413,0.69135,0.0349,0.69135,0.08275,0.6957,0.0823,0.70515,0.0824,0.70185,0.08955,0.6963,0.0879,0.6967,0.0911,0.7029,0.0926,0.709,0.08905,0.7059,0.0886,0.70285,0.0989,0.69605,0.0953,0.6879,0.05445,0.70655,0.05415,0.7113,0.0436,0.70755,0.028,0.70145,0.03105,0.703,0.02985,0.705,0.0418,0.71205,0.04125,0.713,0.0404,0.71265,0.04,0.71135,0.09,0.71225,0.07145,0.70325,0.07235,0.6981,0.09345,0.70345,0.09515,0.70915,0.0917,0.6968,0.0737,0.6924,0.05265,0.6929,0.0337,0.6848,0.0284,0.69305,0.0453,0.6842,0.1164,0.70505,0.11575,0.7046,0.11665,0.70335,0.11735,0.70415,0.01805,0.69685,0.0172,0.6971,0.01745,0.6948,0.0183,0.69455,0.02705,0.69585,0.04125,0.6944,0.03555,0.6964,0.045,0.6923,0.0466,0.6943,0.06215,0.69485,0.0647,0.69845,0.0697,0.6971,0.07165,0.698,0.01785,0.69165,0.0093,0.69695,0.01045,0.69765,0.0101,0.69935,0.00805,0.6987,0.0084,0.7025,0.0102,0.70155,0.0186,0.70585,0.0171,0.706,0.0169,0.70365,0.1067,0.7029,0.1023,0.70335,0.1101,0.68645,0.1101,0.6895,0.1183,0.70325,0.1179,0.70245,0.0152,0.70545,0.01525,0.70315,0.1174,0.70905,0.1189,0.71145,0.1175,0.7121,0.1162,0.7109,0.01315,0.704,0.01145,0.7038,0.01165,0.70165,0.01345,0.7013,0.01185,0.6993,0.01385,0.6988,0.0123,0.69725,0.01415,0.6964,0.0127,0.69575,0.0145,0.69485,0.12165,0.7056,0.1229,0.7042,0.1243,0.70645,0.12385,0.7077,0.1103,0.699,0.1092,0.7012,0.11055,0.6946,0.10745,0.69325,0.0246,0.70105,0.02205,0.7059,0.02225,0.7015,0.03435,0.70825,0.0324,0.71095,0.10635,0.70985,0.1059,0.7151,0.10265,0.71375,0.1018,0.70925,0.0898,0.71105,0.08145,0.7107,0.08185,0.7092,0.07295,0.7057,0.07235,0.7069,0.03725,0.71,0.0352,0.71535,0.03255,0.7153,0.0387,0.7169,0.03715,0.7162,0.0666,0.7101,0.0647,0.7123,0.07185,0.70815,0.063,0.713,0.06095,0.7133,0.0599,0.71015,0.05255,0.71625,0.05085,0.7157,0.05075,0.71215,0.081,0.7126,0.0991,0.71185,0.09975,0.7136,0.0975,0.7067,0.0962,0.70325,0.0994,0.70375,0.09835,0.70955,0.0895,0.70875,0.08205,0.7076,0.0735,0.70415,0.0961,0.6973,0.094,0.6979,0.0386,0.708,0.03415,0.70035,0.0494,0.6933,0.0454,0.67835,0.0491,0.6784,0.01705,0.7012,0.03165,0.70025,0.02405,0.69625,0.025,0.69325,0.0261,0.6896,0.11125,0.68965,0.11425,0.69275,0.11245,0.6935,0.0213,0.6965,0.0225,0.69385,0.0229,0.6912,0.11685,0.69515,0.11495,0.6966,0.11355,0.6989,0.11235,0.70095,0.11115,0.703,0.01975,0.7059,0.01985,0.7015,0.0157,0.70125,0.0158,0.6976,0.0161,0.6954,0.01665,0.6924,0.11955,0.70335,0.1181,0.7052,0.11615,0.7065,0.0182,0.70105,0.01925,0.6967,0.02005,0.69435,0.0198,0.6907,0.12145,0.70955,0.12055,0.7082,0.11915,0.70675,0.12295,0.71105,0.11875,0.6995,0.1172,0.7005,0.11945,0.70065,0.1188,0.7016,0.11975,0.70095,0.12085,0.702,0.11505,0.7083,0.11505,0.7056,0.11415,0.7069,0.1143,0.7038,0.1131,0.70545,0.11515,0.70135,0.11525,0.70365,0.11715,0.70185,0.11585,0.70235,0.101,0.7447,0.10265,0.74405,0.1037,0.74505,0.10095,0.7462,0.03185,0.72015,0.0313,0.7227,0.0294,0.7221,0.0299,0.71975,0.0279,0.7372,0.0292,0.73585,0.03035,0.736,0.03005,0.73885,0.03795,0.7211,0.03715,0.72305,0.0353,0.72295,0.0362,0.7206,0.1053,0.72195,0.1019,0.7199,0.0304,0.71485,0.0972,0.71905,0.0951,0.72135,0.1002,0.7151,0.03175,0.73575,0.03315,0.7375,0.09925,0.7437,0.0977,0.74405,0.1012,0.7398,0.10125,0.7367,0.10345,0.7371,0.1031,0.7407,0.0992,0.74015,0.09895,0.7364,0.09735,0.74045,0.0973,0.73535,0.0324,0.7323,0.03305,0.72895,0.0349,0.72945,0.03405,0.7342,0.03085,0.73195,0.0313,0.7289,0.0298,0.7289,0.02935,0.7323,0.02725,0.7337,0.028,0.7291,0.10515,0.74155,0.10515,0.7366,0.10325,0.73465,0.10535,0.736,0.09905,0.73395,0.09715,0.73455,0.0351,0.72875,0.0337,0.72675,0.0319,0.72685,0.037,0.71855,0.03855,0.7189,0.03065,0.71745,0.0325,0.71785,0.0986,0.72885,0.09805,0.7256,0.1004,0.72555,0.1008,0.7294,0.0301,0.72685,0.02795,0.72845,0.03325,0.72295,0.1012,0.7341,0.03395,0.7203,0.10295,0.7292,0.10295,0.72595,0.03475,0.7181,0.10215,0.72285,0.09975,0.72195,0.0977,0.7226,0.0995,0.7194,0.10485,0.72405,0.1052,0.7266,0.1053,0.72915,0.0964,0.72825,0.0959,0.72605,0.0956,0.72365,0.0707,0.71925,0.0691,0.7193,0.06965,0.71675,0.0716,0.71745,0.0615,0.7166,0.06155,0.71825,0.06025,0.7181,0.06015,0.71655,0.0657,0.71645,0.06565,0.7182,0.06455,0.7181,0.0645,0.7164,0.07405,0.713,0.07275,0.71105,0.06865,0.70985,0.07035,0.7217,0.0718,0.72285,0.06875,0.72125,0.0658,0.7214,0.06715,0.7212,0.0642,0.72065,0.06825,0.7143,0.0703,0.7139,0.06755,0.7165,0.0643,0.71475,0.06595,0.7148,0.06025,0.71475,0.0611,0.71495,0.0676,0.71855,0.0618,0.72035,0.0606,0.72125,0.0633,0.718,0.0632,0.7202,0.0632,0.7168,0.06285,0.715,0.07175,0.7151,0.0599,0.7128,0.07075,0.71015,0.07305,0.71635,0.0731,0.71825,0.07245,0.7198,0.07945,0.72905,0.07745,0.72925,0.07785,0.72585,0.08035,0.72655,0.0756,0.72835,0.07525,0.72545,0.053,0.72065,0.05325,0.723,0.05155,0.72275,0.05135,0.7207,0.0592,0.72005,0.05905,0.72255,0.05725,0.72265,0.05725,0.72,0.08315,0.7188,0.08135,0.7167,0.05895,0.71035,0.0594,0.716,0.0571,0.7159,0.07695,0.71515,0.07365,0.7162,0.0793,0.7338,0.08125,0.73565,0.0773,0.7332,0.07325,0.7344,0.07525,0.73315,0.0584,0.7311,0.0567,0.72905,0.0572,0.71775,0.0591,0.7177,0.05115,0.7181,0.0528,0.71825,0.05305,0.72925,0.05145,0.7313,0.05515,0.72275,0.05475,0.72905,0.05505,0.72035,0.0549,0.7183,0.08005,0.7236,0.07815,0.72255,0.05465,0.71635,0.0792,0.71585,0.0825,0.72455,0.08215,0.7273,0.0818,0.7294,0.07325,0.72815,0.0732,0.72545,0.07345,0.72305,0.07605,0.72285,0.0595,0.7099,0.0409,0.6755,0.28105,0.50295,0.29375,0.5048,0.2909,0.52365,0.279,0.5256,0.2677,0.52245,0.26825,0.50195,0.2517,0.9901,0.23255,0.9948,0.2339,0.9861,0.2194,0.50225,0.22025,0.5189,0.2054,0.51345,0.206,0.5029,0.25555,0.52685,0.25155,0.50185,0.23795,0.52455,0.236,0.50235,0.18485,0.7922,0.1988,0.7727,0.2133,0.77845,0.198,0.80475,0.19275,0.8111,0.17275,0.79885,0.46635,0.9705,0.46755,0.98035,0.45435,0.9744,0.4541,0.9645,0.4682,0.8395,0.46745,0.8453,0.45115,0.8422,0.4504,0.83835,0.45465,0.9563,0.4645,0.9645,0.4628,0.95845,0.4552,0.95125,0.4634,0.95125,0.46845,0.86015,0.46825,0.8665,0.4525,0.865,0.45285,0.8592,0.46725,0.8766,0.45185,0.8768,0.45275,0.8526,0.46805,0.85295,0.28125,0.7243,0.292,0.72165,0.29105,0.73425,0.2787,0.7364,0.3027,0.7184,0.29905,0.7333,0.30535,0.71775,0.30535,0.7338,0.27105,0.7262,0.27085,0.73765,0.26635,0.74185,0.24705,0.73615,0.26555,0.74465,0.24905,0.74665,0.2771,0.74905,0.2848,0.7507,0.28155,0.76295,0.2663,0.7613,0.2688,0.74685,0.25445,0.75475,0.27775,0.71895,0.29045,0.71575,0.24595,0.72815,0.2699,0.72035,0.2787,0.7756,0.25955,0.773,0.2334,0.7545,0.2404,0.76295,0.2771,0.71235,0.2923,0.70815,0.3021,0.7104,0.30535,0.71035,0.24455,0.72285,0.26845,0.7141,0.2653,0.7865,0.27855,0.7867,0.30535,0.77585,0.30535,0.7847,0.2216,0.769,0.2179,0.7585,0.24855,0.78385,0.2393,0.7778,0.26965,0.79845,0.279,0.7974,0.30535,0.7969,0.2022,0.76695,0.2023,0.759,0.2573,0.79755,0.24315,0.7907,0.2684,0.7071,0.2785,0.70485,0.2428,0.716,0.23065,0.74675,0.2279,0.74285,0.236,0.7379,0.23955,0.74065,0.21675,0.7489,0.20265,0.7504,0.2346,0.7335,0.22585,0.73795,0.22225,0.73035,0.23345,0.7273,0.21315,0.73955,0.204,0.7313,0.2132,0.72385,0.2032,0.7433,0.1953,0.7393,0.19115,0.74885,0.1904,0.75865,0.22445,0.72015,0.2088,0.6931,0.22075,0.68745,0.2328,0.71895,0.16685,0.7754,0.19265,0.76695,0.1595,0.75845,0.2955,0.8298,0.2813,0.81605,0.30535,0.8093,0.30535,0.82735,0.23515,0.6911,0.22915,0.8282,0.25065,0.8394,0.29405,0.6661,0.30535,0.66585,0.30535,0.68095,0.2818,0.6768,0.28715,0.6376,0.2811,0.6196,0.28625,0.61955,0.29635,0.63875,0.2142,0.623,0.22905,0.6098,0.22995,0.6175,0.2184,0.6293,0.23765,0.86785,0.24105,0.8569,0.24795,0.8632,0.24905,0.87665,0.24825,0.68525,0.26925,0.6821,0.2777,0.8446,0.2879,0.8637,0.26235,0.86645,0.28035,0.88305,0.2639,0.88505,0.28945,0.6174,0.30535,0.6253,0.30535,0.6333,0.21195,0.617,0.22965,0.60525,0.21795,0.8889,0.23455,0.88935,0.23795,0.9194,0.2252,0.92535,0.2587,0.9311,0.24335,0.95085,0.2441,0.901,0.25865,0.9095,0.27655,0.91005,0.18365,0.61365,0.19515,0.6147,0.18095,0.6358,0.1657,0.64465,0.28975,0.91,0.2894,0.9395,0.27765,0.93865,0.30535,0.86405,0.298,0.8638,0.26755,0.60775,0.24685,0.6043,0.24875,0.60305,0.26805,0.60665,0.2296,0.7848,0.2057,0.81865,0.19155,0.6742,0.19905,0.66695,0.184,0.6636,0.19205,0.66125,0.1969,0.8234,0.19675,0.833,0.18995,0.82795,0.1873,0.8164,0.17675,0.6653,0.1692,0.6653,0.17145,0.66275,0.1768,0.66305,0.1792,0.66775,0.1874,0.65585,0.1777,0.65545,0.16895,0.6598,0.249,0.85325,0.2592,0.86095,0.30535,0.91095,0.30535,0.93515,0.1986,0.6988,0.21845,0.71865,0.18225,0.6775,0.19565,0.64955,0.2001,0.6339,0.2056,0.64045,0.203,0.65685,0.19345,0.63195,0.1628,0.6664,0.1655,0.66315,0.30535,0.6504,0.2989,0.6522,0.2277,0.67795,0.23075,0.6685,0.2505,0.6742,0.29065,0.5926,0.2874,0.55655,0.30535,0.55885,0.30535,0.597,0.2552,0.5687,0.24875,0.58265,0.2379,0.57555,0.2469,0.56165,0.22475,0.56855,0.24,0.5525,0.2116,0.5644,0.20845,0.5826,0.19765,0.5831,0.2004,0.56435,0.26465,0.9428,0.2839,0.96015,0.26315,0.95625,0.29525,0.9623,0.30535,0.96625,0.29055,0.6078,0.30535,0.6138,0.253,0.59815,0.25795,0.58895,0.27245,0.59925,0.213,0.66665,0.2888,0.6514,0.2142,0.65035,0.15475,0.6672,0.1615,0.66185,0.229,0.83945,0.23055,0.8483,0.22355,0.8541,0.20945,0.83625,0.30535,0.5216,0.30535,0.54155,0.2871,0.5417,0.27625,0.54045,0.2673,0.5397,0.2491,0.5397,0.2608,0.53945,0.26115,0.54805,0.2323,0.9722,0.25185,0.9759,0.2675,0.9787,0.2675,0.98565,0.20445,0.5289,0.21935,0.5302,0.26805,0.84205,0.20315,0.83995,0.2868,0.98265,0.2327,0.9566,0.23775,0.94325,0.21775,0.54185,0.20295,0.5444,0.27695,0.5545,0.2553,0.85335,0.26045,0.8401,0.26365,0.8039,0.23705,0.53655,0.2398,0.59605,0.2283,0.5911,0.2041,0.61465,0.21855,0.5873,0.26335,0.57425,0.27505,0.5815,0.26355,0.60945,0.24615,0.6093,0.2257,0.64705,0.2349,0.66,0.24975,0.66425,0.265,0.66115,0.27225,0.6701,0.2763,0.63305,0.27115,0.62185,0.30045,0.7031,0.1513,0.6861,0.1765,0.67105,0.1484,0.6788,0.1698,0.6734,0.1456,0.6736,0.16475,0.66895,0.182,0.83285,0.18915,0.83595,0.1877,0.8408,0.1773,0.8411,0.2962,0.882,0.2171,0.8586,0.30715,0.98205,0.2969,0.9816,0.1811,0.8264,0.1931,0.838,0.1913,0.84065,0.1793,0.8146,0.2849,0.6621,0.27795,0.6441,0.2735,0.6529,0.22715,0.6337,0.23505,0.6241,0.2462,0.61795,0.2583,0.6161,0.26375,0.63305,0.26075,0.6264,0.25295,0.6241,0.24635,0.6249,0.2388,0.63045,0.2356,0.63695,0.2353,0.64375,0.2402,0.65105,0.2495,0.6529,0.2584,0.64995,0.2629,0.6453,0.26585,0.63945,0.30535,0.8828,0.2294,0.9374,0.30535,0.70385,0.2428,0.63875,0.24525,0.6366,0.2451,0.64025,0.24265,0.6419,0.2466,0.6338,0.24345,0.63595,0.25285,0.63385,0.2525,0.6367,0.249,0.6348,0.2501,0.63275,0.25615,0.63905,0.25485,0.63635,0.2526,0.64035,0.2558,0.6425,0.2533,0.645,0.24875,0.64275,0.24505,0.64545,0.24925,0.64595,0.4677,0.9849,0.4536,0.9809,0.30535,0.7646,0.30535,0.75075,0.4521,0.8475,0.4656,0.8481,0.30535,0.505,0.49315,0.8472,0.4927,0.85785,0.4796,0.85985,0.4751,0.8513,0.47975,0.9749,0.4814,0.98575,0.4791,0.96895,0.4706,0.95865,0.47135,0.96415,0.48155,0.99125,0.4821,0.8413,0.47815,0.96485,0.4804,0.8675,0.48055,0.8766,0.4755,0.95835,0.4865,0.96725,0.49025,0.9775,0.48325,0.96305,0.49205,0.98775,0.491,0.9943,0.48035,0.9559,0.49265,0.86795,0.47505,0.95125,0.47965,0.95125,0.47065,0.95125,0.4923,0.8766,0.2198,0.7416,0.2209,0.7449,0.31995,0.52315,0.31785,0.50475,0.32895,0.5028,0.3317,0.5251,0.3431,0.502,0.3418,0.52305,0.3601,0.99085,0.37845,0.9867,0.3788,0.996,0.3915,0.50205,0.4085,0.50325,0.4079,0.51355,0.38925,0.5186,0.36105,0.5035,0.35375,0.52685,0.3747,0.5027,0.37135,0.52475,0.42705,0.79235,0.41155,0.80475,0.3964,0.77845,0.41075,0.7727,0.4167,0.8111,0.4399,0.79885,0.43455,0.81435,0.4221,0.8164,0.46635,0.9319,0.4541,0.93795,0.45435,0.928,0.46755,0.92205,0.4677,0.9175,0.4536,0.9215,0.4545,0.91045,0.46695,0.90715,0.4645,0.93795,0.45465,0.94615,0.4628,0.944,0.452,0.8878,0.46775,0.88595,0.46795,0.89225,0.45235,0.8936,0.46755,0.8995,0.45225,0.9002,0.3195,0.73425,0.3186,0.72165,0.3292,0.7243,0.3317,0.7364,0.3116,0.7333,0.30795,0.7184,0.3439,0.74185,0.3395,0.73765,0.33925,0.7262,0.36305,0.73615,0.36105,0.74665,0.3447,0.74465,0.3289,0.76295,0.3257,0.7507,0.3333,0.74905,0.34395,0.7613,0.3415,0.74685,0.3557,0.75475,0.3201,0.71575,0.33265,0.71895,0.3641,0.72815,0.3404,0.72035,0.3317,0.7756,0.35065,0.773,0.37655,0.7545,0.3696,0.76295,0.31825,0.70815,0.3333,0.71235,0.30855,0.7104,0.3655,0.72285,0.34185,0.7141,0.345,0.7865,0.33185,0.7867,0.3882,0.769,0.39185,0.7585,0.36155,0.78385,0.3707,0.7778,0.3407,0.79845,0.3314,0.7974,0.40725,0.759,0.4074,0.76695,0.35285,0.79755,0.3669,0.7907,0.3419,0.7071,0.3319,0.70485,0.3672,0.716,0.37925,0.74675,0.37045,0.74065,0.37395,0.7379,0.38195,0.74285,0.393,0.7489,0.4069,0.7504,0.3753,0.7335,0.37645,0.7273,0.38755,0.73035,0.384,0.73795,0.3965,0.72385,0.4056,0.7313,0.39655,0.73955,0.41425,0.7393,0.40635,0.7433,0.4183,0.74885,0.41905,0.75865,0.38535,0.72015,0.37715,0.71895,0.389,0.68745,0.40085,0.6931,0.4168,0.76695,0.4429,0.77555,0.42915,0.7087,0.43915,0.7174,0.4484,0.74385,0.44815,0.7586,0.4432,0.7303,0.32915,0.81605,0.3151,0.8298,0.3748,0.6911,0.3807,0.8282,0.35945,0.8394,0.3165,0.6661,0.32865,0.6768,0.34225,0.84205,0.3327,0.8446,0.32335,0.6376,0.31425,0.63875,0.32425,0.61955,0.32935,0.6196,0.37995,0.6175,0.38085,0.6098,0.3955,0.623,0.39135,0.6293,0.3747,0.86785,0.36105,0.87665,0.36215,0.8632,0.37135,0.8569,0.36185,0.68525,0.34105,0.6821,0.32265,0.8637,0.34635,0.88505,0.3301,0.88305,0.3479,0.86645,0.39775,0.617,0.3802,0.60525,0.39605,0.8889,0.38995,0.9267,0.3773,0.92075,0.3797,0.88935,0.3659,0.901,0.3689,0.95145,0.3515,0.9311,0.35155,0.9095,0.33385,0.91005,0.4284,0.6358,0.41955,0.61455,0.43475,0.61625,0.44935,0.64055,0.32115,0.9395,0.3208,0.91,0.33585,0.93865,0.3126,0.8638,0.36135,0.60305,0.3632,0.6043,0.34275,0.60775,0.34225,0.60665,0.3803,0.7848,0.4039,0.81865,0.4133,0.66695,0.42075,0.6742,0.4202,0.66125,0.4282,0.6636,0.4195,0.82795,0.41275,0.833,0.4126,0.8234,0.4358,0.66675,0.4358,0.66455,0.44105,0.66425,0.44325,0.6668,0.4334,0.66925,0.4248,0.65585,0.43485,0.65695,0.4439,0.6551,0.3611,0.85325,0.3809,0.83945,0.37935,0.8483,0.351,0.86095,0.4109,0.6988,0.39135,0.71865,0.42995,0.6775,0.45155,0.6952,0.4167,0.64955,0.4094,0.65685,0.404,0.64045,0.4095,0.6339,0.41605,0.63195,0.44835,0.66335,0.45105,0.6666,0.3117,0.6522,0.3596,0.6742,0.37915,0.6685,0.38215,0.67795,0.3199,0.5926,0.32315,0.55655,0.35495,0.5687,0.3632,0.56165,0.37205,0.57555,0.3613,0.58265,0.37,0.5525,0.38505,0.56855,0.3981,0.5644,0.41405,0.5618,0.416,0.58075,0.4025,0.5821,0.3263,0.9615,0.3456,0.9428,0.35005,0.95805,0.31425,0.9617,0.32,0.6078,0.35715,0.59815,0.3379,0.59925,0.35225,0.58895,0.3967,0.66665,0.32175,0.6514,0.39555,0.65035,0.45445,0.6614,0.45655,0.66855,0.3886,0.8541,0.4002,0.83625,0.3234,0.5417,0.34205,0.5398,0.33415,0.54045,0.361,0.5397,0.3491,0.54805,0.3494,0.53945,0.3641,0.9762,0.38085,0.9731,0.34585,0.9867,0.3469,0.98005,0.4083,0.5271,0.38935,0.5302,0.40655,0.8401,0.32625,0.9819,0.38315,0.95915,0.37755,0.9446,0.41155,0.5439,0.39105,0.5395,0.3334,0.5545,0.35485,0.85335,0.34975,0.8401,0.3466,0.8039,0.37225,0.53675,0.3702,0.59605,0.3816,0.5911,0.4055,0.61465,0.39325,0.58635,0.34685,0.57425,0.33535,0.5815,0.36395,0.6093,0.3467,0.60945,0.375,0.66,0.38415,0.64705,0.3603,0.66425,0.3381,0.6701,0.34525,0.66115,0.3392,0.62185,0.3341,0.63305,0.3102,0.7031,0.4361,0.67255,0.45615,0.6888,0.44265,0.6749,0.4599,0.68365,0.46265,0.67945,0.4477,0.67045,0.4217,0.8408,0.4203,0.83595,0.4296,0.8323,0.43425,0.84055,0.3144,0.882,0.31455,0.9822,0.4305,0.82585,0.41815,0.84065,0.4164,0.838,0.397,0.86055,0.32555,0.6621,0.33245,0.6441,0.33685,0.6529,0.3827,0.6337,0.3749,0.6241,0.36385,0.61795,0.3519,0.6161,0.3465,0.63305,0.34945,0.6264,0.35715,0.6241,0.3637,0.6249,0.3712,0.63045,0.37435,0.63695,0.37465,0.64375,0.3698,0.65105,0.3606,0.6529,0.3518,0.64995,0.34735,0.6453,0.34445,0.63945,0.3211,0.6174,0.3858,0.93875,0.3672,0.63875,0.3648,0.6366,0.3666,0.63595,0.36345,0.6338,0.3611,0.6348,0.36,0.63275,0.3573,0.63385,0.3576,0.6367,0.3553,0.63635,0.35405,0.63905,0.35755,0.64035,0.35435,0.6425,0.3613,0.64275,0.36085,0.64595,0.3568,0.645,0.365,0.64545,0.36495,0.64025,0.36735,0.6419,0.4651,0.90435,0.45545,0.9051,0.4746,0.90115,0.492,0.90525,0.48025,0.91115,0.47975,0.9275,0.47985,0.91665,0.4791,0.93345,0.4706,0.9438,0.47135,0.9383,0.47815,0.9376,0.4799,0.8849,0.4791,0.8926,0.4755,0.9441,0.4904,0.92475,0.4848,0.935,0.48155,0.9392,0.49305,0.9118,0.48035,0.94655,0.4922,0.8946,0.49215,0.8845,0.38995,0.7416,0.3889,0.7449,0.09015,0.7637,0.04385,0.7557,0.03935,0.75605,0.44775,0.72685,0.45015,0.7135,0.3787,0.08155,0.3831,0.0912,0.36945,0.0905,0.4721,0.1001,0.46205,0.1008,0.4569,0.0888,0.46615,0.0868,0.34365,0.09125,0.333,0.0925,0.33775,0.0801,0.3507,0.08265,0.39305,0.0906,0.39475,0.07565,0.3986,0.0787,0.402,0.09155,0.3551,0.09045,0.36085,0.0829,0.3688,0.0825,0.32115,0.0947,0.31175,0.09645,0.3112,0.0842,0.32325,0.08345,0.426,0.08625,0.4431,0.08875,0.45145,0.1015,0.4326,0.0997,0.41725,0.0962,0.41,0.08245,0.28685,0.05155,0.30005,0.04665,0.30605,0.0593,0.2876,0.0648,0.46965,0.0651,0.47245,0.06745,0.47305,0.07125,0.4632,0.0722,0.4437,0.08045,0.42775,0.08135,0.42965,0.07445,0.44475,0.07165,0.3518,0.0681,0.35135,0.0752,0.3374,0.0716,0.3385,0.06395,0.43095,0.06715,0.4433,0.06695,0.3967,0.0704,0.38815,0.06795,0.39015,0.06415,0.3978,0.0612,0.3897,0.0465,0.3864,0.05185,0.38145,0.04785,0.3866,0.0446,0.4011,0.0525,0.39905,0.05845,0.3908,0.06005,0.3941,0.05035,0.4045,0.0701,0.40995,0.06335,0.41165,0.0567,0.36165,0.07125,0.36165,0.0644,0.3703,0.0636,0.36925,0.07165,0.3088,0.0688,0.32705,0.06485,0.32325,0.0723,0.3089,0.07285,0.4747,0.07555,0.45595,0.08035,0.45125,0.09335,0.45105,0.0845,0.459,0.0837,0.4619,0.09215,0.4657,0.06665,0.4615,0.06815,0.46365,0.05565,0.46685,0.0544,0.4628,0.08655,0.46565,0.09335,0.4565,0.11375,0.45505,0.10965,0.4638,0.1064,0.4669,0.1091,0.4422,0.10945,0.4449,0.1052,0.4417,0.08225,0.443,0.09465,0.43915,0.09635,0.43675,0.08285,0.3804,0.0784,0.3873,0.07295,0.3911,0.07735,0.3874,0.06895,0.4457,0.0567,0.45235,0.0549,0.4549,0.0628,0.4483,0.06335,0.3113,0.05185,0.3192,0.05045,0.32675,0.0575,0.36055,0.0579,0.37045,0.0564,0.3436,0.055,0.35105,0.06055,0.33795,0.0585,0.3284,0.052,0.4831,0.0977,0.4802,0.0844,0.37725,0.0794,0.3792,0.0733,0.3514,0.05645,0.36095,0.0771,0.3689,0.077,0.4003,0.0681,0.37955,0.0597,0.37795,0.0699,0.40245,0.06375,0.47755,0.07985,0.46345,0.0829,0.30535,0.09825,0.289,0.0903,0.43285,0.06645,0.4342,0.0637,0.4305,0.0594,0.43235,0.0581,0.43755,0.058,0.43575,0.05185,0.4418,0.0506,0.42945,0.05245,0.43135,0.0518,0.3809,0.0443,0.38325,0.0424,0.4399,0.06305,0.28765,0.07015,0.2866,0.07725,0.3018,0.0439,0.3243,0.04195,0.33935,0.0439,0.4291,0.04345,0.43045,0.0416,0.3793,0.03805,0.38145,0.0358,0.3615,0.04945,0.37085,0.048,0.4655,0.0327,0.46895,0.0326,0.4429,0.0317,0.44705,0.0319,0.4542,0.03195,0.43535,0.0372,0.30915,0.042,0.3147,0.0412,0.34945,0.0456,0.30245,0.0384,0.30805,0.0057,0.3137,0.00915,0.30725,0.01005,0.32605,0.0041,0.32255,0.0091,0.37305,0.0203,0.3743,0.0165,0.3771,0.01935,0.33835,0.0039,0.3388,0.0105,0.36465,0.01405,0.3659,0.0177,0.35755,0.00885,0.35805,0.0137,0.34835,0.0117,0.3486,0.0048,0.3134,0.0219,0.3075,0.0207,0.30315,0.0171,0.3233,0.02265,0.4671,0.01275,0.4647,0.0062,0.46925,0.0071,0.47075,0.01365,0.4297,0.03275,0.4288,0.0356,0.42775,0.03115,0.42865,0.0283,0.377,0.0302,0.38065,0.03025,0.3382,0.02225,0.4558,0.01205,0.4534,0.0055,0.43495,0.02445,0.4339,0.02,0.36765,0.0298,0.4438,0.01525,0.44275,0.01085,0.35815,0.02405,0.4482,0.01035,0.44715,0.00595,0.3478,0.0226,0.30815,0.02885,0.3029,0.02525,0.3139,0.0293,0.3237,0.03005,0.33865,0.03055,0.34845,0.0314,0.35945,0.03375,0.36885,0.03675,0.3779,0.0332,0.38095,0.03235,0.43,0.03615,0.4289,0.0386,0.4351,0.0293,0.44345,0.02155,0.44775,0.0186,0.4552,0.01965,0.4665,0.0204,0.47005,0.0209,0.0265,0.1001,0.03245,0.0868,0.0417,0.0888,0.03655,0.1008,0.15495,0.09125,0.1479,0.08265,0.16085,0.0801,0.1656,0.0925,0.10555,0.0906,0.0966,0.09155,0.1,0.0787,0.10385,0.07565,0.1435,0.09045,0.12915,0.0905,0.1298,0.0825,0.13775,0.0829,0.17745,0.0947,0.17535,0.08345,0.1874,0.0842,0.18685,0.09645,0.04715,0.1015,0.0555,0.08875,0.0726,0.08625,0.066,0.0997,0.0886,0.08245,0.08135,0.0962,0.21175,0.05155,0.211,0.0648,0.19255,0.0593,0.19855,0.04665,0.02895,0.0651,0.0354,0.0722,0.02555,0.07125,0.02615,0.06745,0.0549,0.08045,0.05385,0.07165,0.06895,0.07445,0.07085,0.08135,0.1468,0.0681,0.1601,0.06395,0.1612,0.0716,0.14725,0.0752,0.06765,0.06715,0.0553,0.06695,0.1019,0.0704,0.1008,0.0612,0.10845,0.06415,0.11045,0.06795,0.1089,0.0465,0.112,0.0446,0.11715,0.04785,0.1122,0.05185,0.0975,0.0525,0.1045,0.05035,0.1078,0.06005,0.09955,0.05845,0.08865,0.06335,0.0941,0.0701,0.08695,0.0567,0.1283,0.0636,0.13695,0.0644,0.13695,0.07125,0.12935,0.07165,0.1898,0.0688,0.1897,0.07285,0.17535,0.0723,0.17155,0.06485,0.04265,0.08035,0.0239,0.07555,0.04735,0.09335,0.0367,0.09215,0.0396,0.0837,0.04755,0.0845,0.0329,0.06665,0.03175,0.0544,0.03495,0.05565,0.0371,0.06815,0.03295,0.09335,0.0358,0.08655,0.0421,0.11375,0.0317,0.1091,0.0348,0.1064,0.04355,0.10965,0.0537,0.1052,0.0564,0.10945,0.05945,0.09635,0.0556,0.09465,0.0569,0.08225,0.06185,0.08285,0.1182,0.0784,0.1199,0.08155,0.1155,0.0912,0.1113,0.07295,0.1112,0.06895,0.1075,0.07735,0.0437,0.0628,0.04625,0.0549,0.0529,0.0567,0.0503,0.06335,0.1873,0.05185,0.17185,0.0575,0.1794,0.05045,0.13805,0.0579,0.12815,0.0564,0.155,0.055,0.1702,0.052,0.16065,0.0585,0.14755,0.06055,0.0155,0.0977,0.0184,0.0844,0.1194,0.0733,0.12135,0.0794,0.1472,0.05645,0.13765,0.0771,0.1297,0.077,0.0983,0.0681,0.12065,0.0699,0.11905,0.0597,0.09615,0.06375,0.03515,0.0829,0.02105,0.07985,0.2096,0.0903,0.19325,0.09825,0.0644,0.0637,0.06575,0.06645,0.0681,0.0594,0.06625,0.0581,0.06285,0.05185,0.06105,0.058,0.0568,0.0506,0.06915,0.05245,0.06725,0.0518,0.11535,0.0424,0.1177,0.0443,0.0587,0.06305,0.21095,0.07015,0.212,0.07725,0.1968,0.0439,0.1743,0.04195,0.15925,0.0439,0.06815,0.0416,0.0695,0.04345,0.1193,0.03805,0.11715,0.0358,0.12775,0.048,0.1371,0.04945,0.02965,0.0326,0.0331,0.0327,0.05155,0.0319,0.0557,0.0317,0.0444,0.03195,0.06325,0.0372,0.1839,0.0412,0.18945,0.042,0.14915,0.0456,0.19615,0.0384,0.19055,0.0057,0.19135,0.01005,0.1849,0.00915,0.17255,0.0041,0.17605,0.0091,0.12555,0.0203,0.1215,0.01935,0.1243,0.0165,0.1598,0.0105,0.16025,0.0039,0.13395,0.01405,0.1327,0.0177,0.14105,0.00885,0.14055,0.0137,0.15025,0.0117,0.15,0.0048,0.1852,0.0219,0.1911,0.0207,0.19545,0.0171,0.1753,0.02265,0.0315,0.01275,0.02785,0.01365,0.02935,0.0071,0.0339,0.0062,0.0689,0.03275,0.06995,0.0283,0.07085,0.03115,0.0698,0.0356,0.1216,0.0302,0.11795,0.03025,0.1604,0.02225,0.0428,0.01205,0.0452,0.0055,0.06365,0.02445,0.0647,0.02,0.13095,0.0298,0.0548,0.01525,0.05585,0.01085,0.14045,0.02405,0.0504,0.01035,0.05145,0.00595,0.1508,0.0226,0.1957,0.02525,0.19045,0.02885,0.1847,0.0293,0.1749,0.03005,0.15995,0.03055,0.15015,0.0314,0.13915,0.03375,0.1297,0.03675,0.1207,0.0332,0.1176,0.03235,0.0686,0.03615,0.06965,0.0386,0.0635,0.0293,0.0551,0.02155,0.0508,0.0186,0.0434,0.01965,0.0321,0.0204,0.0285,0.0209,0.237,0.45995,0.2496,0.45955,0.2498,0.47925,0.23555,0.4789,0.22095,0.47765,0.2077,0.47495,0.2117,0.46515,0.2248,0.4626,0.1794,0.48205,0.16615,0.48225,0.16635,0.4749,0.18275,0.4728,0.1249,0.47835,0.12595,0.4861,0.1121,0.4765,0.11775,0.47655,0.14805,0.4854,0.1531,0.4801,0.1334,0.4805,0.14415,0.4808,0.02125,0.46545,0.0305,0.46685,0.03375,0.4679,0.03665,0.4769,0.1977,0.47445,0.20135,0.46505,0.2491,0.4444,0.23245,0.4465,0.21675,0.45585,0.22695,0.4484,0.01355,0.4495,0.01905,0.45525,0.025,0.462,0.2128,0.4396,0.22635,0.44465,0.0395,0.4877,0.0259,0.4801,0.04685,0.4724,0.04665,0.47565,0.043,0.4737,0.04145,0.47025,0.05225,0.47965,0.05825,0.48755,0.06305,0.4788,0.0564,0.4737,0.07295,0.47205,0.07785,0.4804,0.0623,0.4721,0.0961,0.4767,0.1007,0.4866,0.0826,0.47375,0.05405,0.49745,0.0374,0.49415,0.1487,0.4961,0.1204,0.49445,0.20375,0.4996,0.18575,0.49995,0.1934,0.4849,0.2053,0.48625,0.22115,0.4889,0.2206,0.49955,0.07535,0.48985,0.02665,0.49155,0.02525,0.4994,0.0222,0.4909,0.0517,0.4716,0.0405,0.46805,0.0489,0.46975,0.0376,0.4692,0.2358,0.49715,0.25,0.4944,0.1645,0.4677,0.1767,0.46445,0.00945,0.4394,0.00995,0.4452,0.00305,0.4431,0.0019,0.43855,0.0969,0.27035,0.09515,0.2836,0.08545,0.2826,0.0849,0.2689,0.0701,0.28135,0.07125,0.26665,0.0596,0.281,0.059,0.26665,0.1397,0.27455,0.13775,0.2933,0.1196,0.29085,0.1205,0.27455,0.0417,0.2867,0.0334,0.2923,0.03375,0.2699,0.04565,0.2717,0.21395,0.27275,0.22215,0.27485,0.2235,0.29475,0.21525,0.29815,0.0145,0.2751,0.02285,0.271,0.0203,0.29515,0.01065,0.29315,0.20255,0.29995,0.1811,0.29815,0.1793,0.27815,0.2002,0.2758,0.10585,0.27335,0.10375,0.2862,0.07275,0.2055,0.05485,0.2053,0.05655,0.18555,0.0732,0.1837,0.0898,0.20535,0.09005,0.18325,0.1094,0.20525,0.10585,0.18125,0.1202,0.18135,0.12385,0.20535,0.17735,0.2274,0.1609,0.23175,0.16055,0.21915,0.1773,0.2091,0.0404,0.20365,0.04155,0.18045,0.1695,0.2577,0.1816,0.25945,0.1823,0.2641,0.1631,0.26585,0.0308,0.25495,0.02155,0.25945,0.01955,0.2395,0.0283,0.2376,0.0507,0.25185,0.0488,0.2529,0.04575,0.2519,0.04775,0.2505,0.0739,0.25375,0.05875,0.2527,0.0589,0.2509,0.07495,0.2518,0.087,0.2541,0.0865,0.25515,0.0963,0.2553,0.0952,0.25705,0.1423,0.24975,0.12255,0.24905,0.1256,0.23925,0.146,0.23745,0.1425,0.2577,0.15665,0.2515,0.15715,0.25545,0.15065,0.2599,0.1683,0.2489,0.1671,0.25185,0.20335,0.3414,0.18395,0.3346,0.1616,0.32845,0.1598,0.29565,0.14035,0.32375,0.12075,0.32045,0.09105,0.312,0.10035,0.31785,0.0796,0.3142,0.06825,0.31075,0.05795,0.31715,0.048,0.28435,0.03695,0.3225,0.02795,0.321,0.0788,0.3234,0.1399,0.2657,0.12075,0.26405,0.12225,0.2561,0.105,0.26225,0.0969,0.261,0.1043,0.2547,0.0854,0.25825,0.0728,0.2557,0.0587,0.2555,0.0512,0.2547,0.04595,0.25675,0.15855,0.27465,0.0145,0.3289,0.01725,0.3425,0.0069,0.3315,0.0085,0.3181,0.0149,0.31865,0.21825,0.3487,0.2295,0.3399,0.2359,0.3324,0.2394,0.35115,0.22585,0.34915,0.0049,0.3522,0.03835,0.2546,0.0375,0.2404,0.0278,0.1995,0.02515,0.1759,0.05025,0.2707,0.05235,0.2532,0.1064,0.2496,0.1083,0.23845,0.08895,0.2502,0.0882,0.23805,0.09805,0.2374,0.09775,0.2497,0.07525,0.2489,0.0743,0.237,0.05675,0.2491,0.057,0.2355,0.04065,0.23475,0.14255,0.20225,0.16045,0.24415,0.17875,0.2332,0.18105,0.23825,0.1703,0.24425,0.1963,0.2395,0.1937,0.2277,0.20555,0.23315,0.20525,0.2369,0.212,0.23145,0.21365,0.2357,0.02805,0.23365,0.2058,0.23235,0.1931,0.2153,0.1814,0.25145,0.1812,0.2478,0.18045,0.27225,0.1615,0.2698,0.20175,0.26635,0.1923,0.1714,0.2006,0.1992,0.18815,0.1995,0.1779,0.17265,0.1997,0.16935,0.2012,0.179,0.1739,0.15565,0.1662,0.1725,0.1626,0.15595,0.0714,0.1342,0.0726,0.08975,0.08455,0.08985,0.08605,0.1368,0.15065,0.1565,0.1531,0.17325,0.13995,0.1716,0.13695,0.156,0.0454,0.13475,0.0468,0.09105,0.0588,0.0901,0.05775,0.14075,0.0286,0.09345,0.0338,0.09285,0.03005,0.13325,0.02245,0.1349,0.1005,0.1386,0.10365,0.15105,0.0887,0.14875,0.03995,0.0916,0.18735,0.15395,0.0168,0.16325,0.02495,0.16325,0.01565,0.1774,0.0418,0.1645,0.0579,0.17,0.07375,0.16895,0.089,0.1663,0.1045,0.1654,0.12165,0.16795,0.04315,0.1462,0.02925,0.14475,0.057,0.1508,0.0721,0.14975,0.12,0.1539,0.08925,0.4641,0.0936,0.4707,0.0809,0.46795,0.0778,0.4618,0.06705,0.4609,0.06975,0.4669,0.0595,0.4671,0.05525,0.4622,0.04505,0.46265,0.04875,0.46775,0.03905,0.46615,0.0364,0.46585,0.10515,0.455,0.1064,0.4607,0.0966,0.4591,0.0927,0.45075,0.082,0.44885,0.0854,0.4572,0.0745,0.45495,0.07105,0.44885,0.0612,0.44905,0.064,0.4551,0.05285,0.45665,0.05175,0.4505,0.1533,0.4693,0.1529,0.46455,0.16215,0.4592,0.1446,0.4651,0.1449,0.46985,0.13575,0.46925,0.135,0.4634,0.0428,0.45795,0.0342,0.46085,0.03235,0.4524,0.0425,0.45185,0.01985,0.45195,0.0166,0.45015,0.02485,0.4499,0.02605,0.45905,0.08525,0.4245,0.0807,0.4162,0.093,0.4188,0.09825,0.432,0.06385,0.42095,0.06155,0.4124,0.0698,0.4135,0.0744,0.42155,0.05295,0.41315,0.05515,0.42135,0.04565,0.42295,0.04365,0.41525,0.1508,0.43535,0.16095,0.4276,0.16145,0.45015,0.15195,0.44655,0.1333,0.44355,0.1327,0.4315,0.14265,0.43465,0.14315,0.4458,0.02605,0.41825,0.03525,0.4172,0.037,0.42495,0.02785,0.42745,0.0129,0.41975,0.0192,0.4192,0.02085,0.42915,0.01445,0.43075,0.21135,0.4169,0.22615,0.41145,0.22125,0.4196,0.2116,0.4282,0.1756,0.42515,0.1608,0.40735,0.174,0.401,0.15,0.41555,0.15075,0.42485,0.132,0.4214,0.13005,0.4131,0.14145,0.41515,0.1418,0.4244,0.19615,0.3996,0.1954,0.41915,0.08605,0.3923,0.0833,0.38235,0.10075,0.38695,0.0955,0.3952,0.06565,0.3882,0.06435,0.3795,0.0768,0.39045,0.0433,0.3834,0.05585,0.3875,0.0461,0.38685,0.01045,0.39055,0.03455,0.387,0.02225,0.3877,0.23985,0.39055,0.23965,0.4022,0.2272,0.3996,0.2267,0.38765,0.21135,0.3988,0.2123,0.3865,0.17685,0.3807,0.1989,0.38515,0.1589,0.39465,0.1491,0.40675,0.14195,0.39205,0.12855,0.4043,0.1219,0.3895,0.1401,0.4062,0.0161,0.38745,0.00625,0.3918,0.00535,0.38365,0.0187,0.38105,0.2015,0.43845,0.20885,0.43535,0.19105,0.461,0.18735,0.45775,0.1727,0.4562,0.15375,0.4766,0.1537,0.4734,0.1446,0.4776,0.1349,0.47695,0.13575,0.4736,0.1449,0.47425,0.1095,0.467,0.11145,0.472,0.10505,0.47185,0.0995,0.4656,0.127,0.472,0.1264,0.47525,0.11895,0.47365,0.1177,0.4686,0.1168,0.46375,0.11545,0.45805,0.12545,0.46125,0.1263,0.467,0.12135,0.42815,0.122,0.44,0.11105,0.43655,0.10655,0.42335,0.10515,0.4137,0.106,0.40545,0.11805,0.40975,0.1199,0.4179,0.06615,0.36385,0.04425,0.3682,0.0416,0.34105,0.06025,0.3373,0.08365,0.33895,0.08555,0.365,0.1023,0.3428,0.1029,0.36935,0.12,0.3479,0.1206,0.37205,0.13785,0.35135,0.1388,0.3743,0.158,0.35535,0.1568,0.3764,0.1809,0.3614,0.20285,0.36915,0.21685,0.3746,0.22725,0.37655,0.24065,0.3795,0.00545,0.37675,0.0179,0.3697,0.15265,0.45985,0.15195,0.45455,0.1436,0.4544,0.1441,0.4596,0.13445,0.458,0.13365,0.452,0.11445,0.45215,0.11275,0.4459,0.1236,0.4494,0.12435,0.4553,0.1013,0.4414,0.1029,0.4476,0.09065,0.4434,0.08845,0.4338,0.0772,0.4308,0.07905,0.4402,0.06865,0.4404,0.0663,0.42965,0.05735,0.43025,0.05875,0.4408,0.0502,0.4423,0.0472,0.4316,0.0406,0.44395,0.0312,0.44415,0.0291,0.4362,0.03885,0.4331,0.02305,0.44555,0.01595,0.44465,0.01555,0.4395,0.02195,0.43695,0.17975,0.4534,0.1723,0.44525,0.1821,0.4428,0.17515,0.1985,0.1583,0.1995,0.2112,0.26175,0.19425,0.2557,0.19375,0.2504,0.2012,0.2503,0.19875,0.26085,0.21305,0.24065,0.20645,0.2468,0.19175,0.24745,0.1992,0.24665,0.4594,0.48725,0.4614,0.4937,0.4446,0.4964,0.44075,0.487,0.4731,0.49955,0.4722,0.4912,0.4765,0.49065,0.03395,0.38665,0.03505,0.388,0.02245,0.38755,0.0223,0.38775,0.0537,0.3888,0.04525,0.3885,0.0449,0.3878,0.0545,0.38855,0.06265,0.39185,0.0636,0.39165,0.0747,0.3941,0.0725,0.3977,0.02515,0.41185,0.02315,0.40175,0.03595,0.4019,0.0347,0.40955,0.0446,0.40075,0.0521,0.40065,0.05245,0.40625,0.0433,0.4086,0.0657,0.4001,0.06,0.39735,0.06065,0.39355,0.0703,0.39935,0.0751,0.40835,0.07235,0.40495,0.0774,0.40395,0.0872,0.41125,0.2122,0.4293,0.2211,0.4239,0.2173,0.42975,0.239,0.40555,0.2389,0.4083,0.0066,0.3967,0.1177,0.4021,0.1055,0.39775,0.02445,0.39655,0.02395,0.39005,0.0359,0.3912,0.03665,0.39565,0.0527,0.3915,0.0527,0.39535,0.0451,0.3957,0.0452,0.3913,0.0005,0.41545,0.0066,0.42045,0.00865,0.432,0.01955,0.47395,0.0175,0.4661,0.01165,0.45105,0.00415,0.4446,0.07365,0.49595,0.31895,0.4815,0.3132,0.4997,0.30515,0.48485,0.03655,0.498,0.4621,0.49845,0.13405,0.1409,0.13025,0.09415,0.14705,0.09575,0.1484,0.1416,0.16665,0.09745,0.17605,0.09655,0.1852,0.13945,0.1706,0.1404,0.1182,0.13995,0.1598,0.1408,0.15795,0.097,0.18965,0.2418,0.0235,0.3146,0.19695,0.14955,0.01925,0.14675,0.19415,0.13635,0.0963,0.09105,0.1124,0.0931,0.2264,0.3284,0.2061,0.2577,0.21735,0.2636,0.22115,0.2584,0.22765,0.2748,0.23055,0.29095,0.2341,0.3185,0.1509,0.2652,0.14835,0.2679,0.0824,0.40175,0.0847,0.3984,0.09415,0.4008,0.09305,0.4095,0.05935,0.40665,0.0593,0.4008,0.06485,0.40405,0.06735,0.40725,0.1819,0.0954,0.18465,0.09425,0.01695,0.1975,0.0207,0.23035,0.02075,0.23575,0.25015,0.49975,0.23475,0.49965,0.2064,0.1974,0.2624,0.4599,0.26395,0.479,0.28695,0.46475,0.29145,0.4745,0.27855,0.47755,0.27425,0.4625,0.3323,0.4741,0.332,0.48165,0.31615,0.4723,0.37375,0.4772,0.38155,0.47585,0.38755,0.4763,0.3714,0.4844,0.34505,0.47915,0.3497,0.48445,0.3648,0.47905,0.35395,0.47965,0.4779,0.4652,0.4629,0.47635,0.46535,0.4675,0.46825,0.46645,0.29635,0.46545,0.30055,0.47405,0.26575,0.44635,0.28175,0.45535,0.2717,0.4479,0.47355,0.4613,0.47965,0.4548,0.4853,0.4493,0.2865,0.43975,0.27215,0.44415,0.4734,0.4799,0.45615,0.4735,0.45265,0.4755,0.452,0.4722,0.4575,0.4701,0.4475,0.47965,0.43625,0.47875,0.44255,0.47375,0.42685,0.4719,0.4372,0.4724,0.4218,0.48045,0.4043,0.47655,0.41735,0.4737,0.3986,0.4854,0.32855,0.4929,0.32875,0.49805,0.3491,0.4955,0.29575,0.49975,0.2793,0.49975,0.27855,0.4887,0.294,0.4863,0.26445,0.4971,0.26545,0.49985,0.42315,0.48915,0.3895,0.48715,0.40245,0.4945,0.3759,0.493,0.4472,0.47135,0.4502,0.4692,0.45855,0.46795,0.46135,0.46885,0.33485,0.46685,0.32335,0.4638,0.4893,0.43905,0.49795,0.44165,0.4945,0.4442,0.4889,0.445,0.4024,0.27015,0.4143,0.26885,0.41355,0.2824,0.4032,0.28345,0.4278,0.2665,0.42855,0.28105,0.4405,0.2664,0.44,0.28065,0.35895,0.2741,0.3783,0.27455,0.3793,0.2905,0.361,0.29315,0.46325,0.269,0.466,0.292,0.45745,0.28655,0.45365,0.2711,0.28635,0.27325,0.28695,0.29845,0.2785,0.29475,0.27855,0.27525,0.48175,0.2734,0.48925,0.29305,0.47935,0.2947,0.4738,0.26985,0.3195,0.27805,0.31845,0.2981,0.2969,0.29995,0.2957,0.27575,0.3934,0.2732,0.3952,0.28595,0.44295,0.18515,0.44475,0.2049,0.427,0.20515,0.4264,0.18335,0.4102,0.20525,0.4096,0.18315,0.39035,0.2053,0.39375,0.18135,0.3793,0.1813,0.37525,0.2052,0.3213,0.2272,0.322,0.20915,0.3386,0.2191,0.33805,0.2316,0.45705,0.18065,0.45815,0.2038,0.31675,0.26395,0.3176,0.25915,0.3299,0.25755,0.33595,0.2656,0.47865,0.2428,0.479,0.25735,0.47175,0.2535,0.47255,0.23965,0.44845,0.25255,0.4517,0.2512,0.45415,0.25255,0.45035,0.25335,0.4403,0.25115,0.44015,0.25315,0.42505,0.25345,0.42435,0.251,0.4121,0.25345,0.4124,0.2548,0.4036,0.25695,0.4029,0.255,0.37335,0.2391,0.3766,0.2487,0.3568,0.24945,0.3533,0.23735,0.34215,0.25485,0.34255,0.25115,0.35685,0.25735,0.3487,0.25935,0.3321,0.25175,0.3308,0.2488,0.3157,0.33445,0.2962,0.34115,0.33975,0.29535,0.33815,0.32835,0.35905,0.32365,0.3787,0.3204,0.40815,0.3117,0.3986,0.3177,0.4195,0.31395,0.43125,0.3104,0.44075,0.31695,0.47085,0.32105,0.4614,0.3226,0.45145,0.2842,0.4199,0.32325,0.37685,0.25575,0.37825,0.26405,0.3594,0.2654,0.39395,0.26215,0.39475,0.2546,0.4021,0.26095,0.4135,0.258,0.4261,0.2555,0.44035,0.25545,0.45365,0.2568,0.4481,0.2544,0.33975,0.2738,0.4826,0.32865,0.482,0.34245,0.49235,0.31825,0.49395,0.33125,0.48255,0.3187,0.28345,0.34915,0.27135,0.34045,0.27545,0.3494,0.2615,0.3534,0.2643,0.3321,0.49435,0.35215,0.46185,0.2549,0.4612,0.24035,0.4719,0.17595,0.47245,0.20005,0.44925,0.2705,0.44655,0.2532,0.39085,0.2383,0.39255,0.24955,0.4103,0.24985,0.4011,0.24965,0.401,0.23725,0.41095,0.23785,0.4252,0.23665,0.42405,0.24805,0.44265,0.23535,0.44225,0.24965,0.4584,0.2347,0.3568,0.2021,0.33865,0.24385,0.3199,0.23305,0.32885,0.2443,0.31795,0.2384,0.3029,0.23935,0.2937,0.23685,0.29285,0.23305,0.30465,0.22715,0.2856,0.2357,0.28655,0.2311,0.4738,0.23395,0.2921,0.23185,0.30595,0.21505,0.3178,0.2516,0.318,0.24775,0.33705,0.26915,0.31835,0.2721,0.2968,0.26665,0.30895,0.1711,0.318,0.17245,0.30905,0.19915,0.29955,0.2015,0.2988,0.18005,0.30245,0.1691,0.3306,0.17295,0.3225,0.1558,0.33325,0.15615,0.42765,0.13425,0.41255,0.13665,0.4146,0.0898,0.4259,0.08975,0.349,0.15635,0.3628,0.15575,0.35955,0.1715,0.3466,0.1731,0.45155,0.1347,0.4421,0.13655,0.4394,0.09005,0.4509,0.0909,0.46535,0.1331,0.46525,0.0931,0.47035,0.0926,0.476,0.1358,0.40995,0.1486,0.3954,0.151,0.39825,0.13825,0.4587,0.09185,0.3142,0.1537,0.48125,0.16765,0.48125,0.1779,0.46865,0.1632,0.4549,0.16425,0.44145,0.1695,0.42575,0.1686,0.41015,0.1662,0.39485,0.16545,0.37775,0.16805,0.4553,0.14595,0.46865,0.14475,0.4426,0.1505,0.42705,0.14945,0.37955,0.1538,0.40995,0.46375,0.4214,0.4614,0.4186,0.46765,0.40615,0.4706,0.4322,0.46035,0.44395,0.46165,0.44,0.4671,0.42975,0.46665,0.45995,0.4656,0.45065,0.46745,0.45395,0.4619,0.4623,0.46525,0.39475,0.45515,0.4069,0.4508,0.40275,0.4589,0.39325,0.46055,0.41735,0.44885,0.42755,0.4489,0.42445,0.4546,0.41355,0.45695,0.4375,0.449,0.44715,0.4503,0.44625,0.456,0.43495,0.4547,0.3465,0.46385,0.346,0.4684,0.33745,0.45855,0.35495,0.46425,0.36465,0.4625,0.36375,0.4682,0.3545,0.4687,0.4669,0.45215,0.4648,0.46035,0.45625,0.4573,0.4566,0.4516,0.4793,0.45145,0.4728,0.4582,0.4744,0.44955,0.4824,0.4497,0.41415,0.4244,0.4014,0.4321,0.406,0.41855,0.4187,0.41605,0.43565,0.42075,0.42515,0.4215,0.4295,0.41325,0.4378,0.41205,0.4538,0.42235,0.44425,0.42105,0.44625,0.4128,0.4556,0.4147,0.33795,0.45,0.3387,0.4276,0.3487,0.4356,0.3475,0.4466,0.3662,0.44355,0.35635,0.4458,0.35695,0.43495,0.36685,0.4317,0.4741,0.418,0.47205,0.42695,0.4625,0.42435,0.46435,0.4167,0.4869,0.41915,0.48495,0.4304,0.47905,0.42885,0.47885,0.4192,0.2877,0.417,0.28735,0.4286,0.2781,0.41935,0.27315,0.4109,0.33885,0.4075,0.32405,0.42505,0.32535,0.40105,0.34955,0.41605,0.34885,0.4252,0.36755,0.42175,0.3578,0.42485,0.35815,0.41565,0.3695,0.4134,0.30355,0.41945,0.303,0.39965,0.41225,0.3918,0.4032,0.39475,0.3982,0.3868,0.41545,0.38205,0.4325,0.3878,0.42155,0.38985,0.43445,0.37925,0.45515,0.38485,0.4519,0.3875,0.4424,0.3872,0.48295,0.38995,0.47655,0.39025,0.46355,0.38785,0.25955,0.391,0.2729,0.3873,0.27205,0.39925,0.26015,0.40225,0.2871,0.3863,0.28795,0.39865,0.3225,0.38065,0.30045,0.38505,0.3504,0.4071,0.34045,0.39475,0.3573,0.39225,0.3708,0.40455,0.35925,0.4066,0.3772,0.3896,0.4942,0.3861,0.49555,0.39335,0.48165,0.38975,0.48015,0.38145,0.29725,0.43925,0.3126,0.4576,0.30775,0.46125,0.29065,0.436,0.3271,0.45555,0.34525,0.4724,0.3448,0.4755,0.3635,0.47235,0.36385,0.47575,0.354,0.47625,0.35415,0.47305,0.39005,0.4667,0.39985,0.4653,0.39475,0.472,0.388,0.4717,0.3725,0.471,0.38195,0.468,0.3804,0.47285,0.3728,0.47425,0.3744,0.4607,0.3846,0.45805,0.38295,0.4633,0.37345,0.46625,0.3885,0.43675,0.37755,0.4401,0.378,0.42835,0.3928,0.4236,0.38135,0.4099,0.39315,0.4053,0.3945,0.41395,0.37945,0.41805,0.45605,0.34065,0.4554,0.3684,0.4333,0.36355,0.4383,0.3372,0.41495,0.33895,0.4136,0.36485,0.3966,0.34285,0.39625,0.3694,0.3786,0.37225,0.37915,0.34795,0.3615,0.3514,0.3604,0.37445,0.34145,0.3553,0.34245,0.37645,0.3185,0.36125,0.2966,0.36905,0.2829,0.3743,0.27285,0.376,0.2593,0.37915,0.49405,0.3785,0.482,0.36825,0.34745,0.4544,0.34685,0.4593,0.356,0.45415,0.366,0.45165,0.3652,0.45745,0.3555,0.45895,0.37605,0.4493,0.38705,0.4461,0.38555,0.4523,0.37545,0.45505,0.3984,0.4415,0.41115,0.43385,0.409,0.4435,0.397,0.44785,0.42215,0.43075,0.4331,0.4296,0.4301,0.4405,0.42045,0.4403,0.44185,0.43,0.45205,0.4311,0.4488,0.4421,0.44005,0.4408,0.4705,0.43565,0.4682,0.4438,0.4586,0.44365,0.46055,0.43245,0.4763,0.4453,0.4776,0.4365,0.4835,0.4392,0.483,0.4443,0.3198,0.45285,0.31695,0.44275,0.3271,0.4451,0.3244,0.1984,0.3409,0.19945,0.2884,0.26185,0.3049,0.2557,0.30035,0.26085,0.2982,0.25025,0.30555,0.25035,0.2867,0.24045,0.29265,0.24695,0.30025,0.2468,0.30745,0.2474,0.46385,0.3879,0.47705,0.38965,0.47725,0.3892,0.4642,0.38945,0.4533,0.3884,0.45395,0.38925,0.44555,0.38895,0.4439,0.38885,0.42625,0.3971,0.42355,0.39345,0.43455,0.3913,0.43625,0.3912,0.4749,0.4125,0.4647,0.4093,0.463,0.40145,0.47475,0.4004,0.4544,0.40025,0.4559,0.40815,0.4467,0.4057,0.4469,0.40015,0.4386,0.39305,0.439,0.39675,0.4332,0.39965,0.4287,0.3987,0.4242,0.40825,0.41215,0.41085,0.4217,0.4036,0.42665,0.40455,0.28415,0.4284,0.2779,0.424,0.28735,0.42985,0.25995,0.4082,0.26055,0.40475,0.4963,0.39395,0.39345,0.39755,0.38155,0.40215,0.4638,0.39135,0.47665,0.39135,0.47445,0.3951,0.4626,0.39475,0.454,0.3953,0.44635,0.3948,0.4466,0.39115,0.4543,0.39135,0.49255,0.41955,0.49955,0.41465,0.4995,0.43765,0.4902,0.43145,0.4831,0.4663,0.48085,0.47415,0.4872,0.45125,0.42465,0.49495,0.38225,0.4821,0.36535,0.14075,0.35075,0.14145,0.35145,0.09575,0.3681,0.09405,0.3285,0.09715,0.32585,0.1404,0.31725,0.13945,0.32345,0.09755,0.3817,0.1398,0.33555,0.1408,0.33695,0.0969,0.30945,0.2417,0.4751,0.3146,0.30635,0.1493,0.4802,0.1481,0.30955,0.1365,0.4026,0.0907,0.3862,0.0929,0.2743,0.32955,0.2929,0.2576,0.2818,0.2632,0.27305,0.27525,0.27765,0.2576,0.2713,0.2905,0.2653,0.3202,0.35075,0.2674,0.3483,0.2647,0.4164,0.4012,0.4063,0.40915,0.40455,0.40045,0.41365,0.39775,0.43985,0.4062,0.4318,0.40685,0.4342,0.40355,0.43965,0.40025,0.31235,0.0945,0.31485,0.0957,0.4824,0.1974,0.4812,0.2318,0.4796,0.23595,0.1695,0.4932,0.16945,0.49875,0.2944,0.19975,0.00955,0.3991,0.00785,0.3975,0.0109,0.39265,0.0084,0.3957,0.4867,0.3941,0.4944,0.39535,0.4938,0.39665,0.48845,0.39845,0.00735,0.4136,0.0153,0.41325,0.0031,0.4147,0.01575,0.39075,0.0103,0.39125,0.01845,0.39695,0.0124,0.4024,0.4801,0.4135,0.49025,0.41205,0.4959,0.41315,0.3925,0.4796,0.4841,0.39085,0.4873,0.3913,0.47995,0.3951,0.47735,0.3996,0.01505,0.4003,0.4794,0.39635,0.23695,0.4355,0.24945,0.43575,0.24935,0.4215,0.2352,0.42275,0.23955,0.4147,0.24915,0.415,0.22525,0.4328,0.23795,0.4293,0.24925,0.4285,0.22375,0.42815,0.24065,0.41065,0.2408,0.40675,0.24375,0.4075,0.2495,0.4113,0.26205,0.43555,0.2582,0.4149,0.26365,0.4228,0.2739,0.43285,0.2611,0.42935,0.2578,0.40735,0.2576,0.4109,0.2549,0.4078,0.2579,0.384,0.2547,0.3858,0.2531,0.37855,0.2554,0.3758,0.27545,0.42805,0.24575,0.3783,0.24775,0.37955,0.2479,0.38565,0.2443,0.3857,0.2473,0.3903,0.2486,0.38955,0.24945,0.39095,0.2473,0.3929,0.24695,0.38715,0.24565,0.39125,0.2508,0.38565,0.2512,0.37945,0.2562,0.3901,0.2537,0.39125,0.25205,0.3874,0.2519,0.3902,0.24175,0.3844,0.24335,0.3758,0.24215,0.39,0.252,0.2124,0.2495,0.3817,0.2494,0.3849,0.25195,0.39285,0.2504,0.38955,0.504,0.4248,0.09535,0.4958,0.10815,0.4801,0.4858,0.3994,0.2403,0.4049,0.2566,0.4048,0.01085,0.39665,0.24505,0.4008,0.2434,0.39465,0.2535,0.4011,0.2557,0.3952,0.2495,0.4109,0.24955,0.4109,0.2495,0.408,0.24945,0.40415,0.24945,0.3973,0.24945,0.40045,0.2494,0.39905,0.24945,0.3892,0.24945,0.3868,0.6437,0.62155,0.65325,0.6469,0.6297,0.67265,0.61115,0.667,0.6131,0.6183,0.6045,0.6227,0.6024,0.61975,0.6163,0.61065,0.6274,0.61555,0.62645,0.6049,0.63415,0.5913,0.6409,0.5868,0.5433,0.67595,0.5514,0.67065,0.55305,0.67365,0.5444,0.67925,0.5108,0.65575,0.51365,0.65565,0.51335,0.66175,0.5111,0.66425,0.5218,0.6768,0.5217,0.6733,0.51185,0.6493,0.51575,0.6477,0.52685,0.6248,0.52875,0.6261,0.52315,0.63685,0.51805,0.63935,0.604,0.608,0.59765,0.61965,0.592,0.60315,0.5458,0.60575,0.54575,0.6082,0.5678,0.59955,0.5698,0.60195,0.5566,0.66445,0.5581,0.6593,0.5606,0.6593,0.55915,0.66655,0.5602,0.6518,0.5587,0.65215,0.55155,0.6352,0.55835,0.64185,0.5561,0.64385,0.5497,0.6375,0.58,0.6171,0.5768,0.6078,0.58235,0.60775,0.57995,0.61995,0.56495,0.62065,0.5484,0.61515,0.5509,0.6235,0.5397,0.62035,0.5371,0.63575,0.5282,0.63285,0.57735,0.6532,0.5757,0.649,0.57815,0.64565,0.58435,0.6523,0.55115,0.6917,0.55085,0.6875,0.5586,0.6826,0.5603,0.689,0.5022,0.66945,0.5073,0.6692,0.51705,0.68315,0.5175,0.68645,0.50065,0.6556,0.50615,0.65785,0.50105,0.6472,0.5062,0.6492,0.50885,0.6323,0.51935,0.61795,0.52305,0.6211,0.5133,0.6359,0.5395,0.5964,0.54295,0.60105,0.5647,0.5885,0.56625,0.5923,0.6135,0.5846,0.62045,0.5875,0.59685,0.58315,0.59665,0.57975,0.5286,0.67745,0.54035,0.67855,0.5365,0.68355,0.53045,0.6828,0.53435,0.6236,0.52235,0.6348,0.52625,0.6349,0.5837,0.623,0.59605,0.6124,0.59565,0.6197,0.5877,0.62715,0.547,0.6092,0.5475,0.613,0.5789,0.5991,0.57775,0.6049,0.62115,0.58855,0.5983,0.5864,0.56815,0.67315,0.57455,0.65705,0.5598,0.67095,0.563,0.6583,0.56255,0.6504,0.57055,0.64895,0.5539,0.6422,0.5446,0.63745,0.54705,0.63135,0.56235,0.6375,0.559,0.6257,0.5341,0.674,0.54435,0.67155,0.57405,0.6068,0.56035,0.6177,0.5477,0.6227,0.5377,0.62995,0.5222,0.6559,0.51635,0.66455,0.51785,0.64375,0.5249,0.64305,0.59345,0.63585,0.5915,0.64335,0.5837,0.6385,0.587,0.6345,0.5903,0.63455,0.5537,0.6631,0.57075,0.6783,0.58555,0.66165,0.59545,0.64605,0.5848,0.6348,0.5898,0.6321,0.5752,0.64225,0.58025,0.6378,0.5985,0.62375,0.6001,0.62915,0.5843,0.6057,0.5952,0.61905,0.57435,0.6258,0.59745,0.67545,0.59465,0.6783,0.5922,0.67195,0.5998,0.66295,0.5621,0.63485,0.56455,0.63875,0.5633,0.64395,0.55835,0.6378,0.5707,0.6276,0.5721,0.6326,0.5741,0.6274,0.5777,0.63265,0.5797,0.6504,0.5787,0.64675,0.5765,0.6456,0.57725,0.64885,0.5729,0.63895,0.57335,0.6387,0.57725,0.6326,0.57705,0.63155,0.58045,0.6301,0.58075,0.6288,0.58935,0.63605,0.5868,0.6346,0.5832,0.64615,0.5847,0.65195,0.5891,0.63155,0.5895,0.63135,0.5836,0.6294,0.5841,0.6281,0.58765,0.62845,0.5866,0.62985,0.5698,0.64495,0.5762,0.6478,0.57775,0.64065,0.57895,0.6355,0.53215,0.6499,0.5309,0.6544,0.5807,0.59535,0.5794,0.58825,0.5795,0.5842,0.57065,0.6447,0.5455,0.66345,0.54895,0.6713,0.53855,0.6485,0.5393,0.64495,0.5367,0.644,0.545,0.6457,0.54285,0.65165,0.5399,0.65195,0.5487,0.6622,0.55325,0.67395,0.55555,0.6736,0.5128,0.6579,0.51275,0.66355,0.51605,0.64405,0.55405,0.67605,0.59195,0.59215,0.54555,0.67905,0.54675,0.681,0.53405,0.68085,0.53445,0.67745,0.53505,0.68995,0.5355,0.6953,0.53905,0.6818,0.54745,0.6802,0.5458,0.71095,0.5449,0.72175,0.5395,0.72215,0.5404,0.7085,0.5496,0.71955,0.5504,0.70955,0.55715,0.7171,0.5569,0.7091,0.57335,0.7063,0.56425,0.71315,0.5617,0.70645,0.56865,0.70215,0.5322,0.71815,0.53665,0.70555,0.52725,0.7106,0.53395,0.70325,0.53925,0.70445,0.5456,0.7025,0.55595,0.69935,0.562,0.6953,0.57235,0.6848,0.578,0.6888,0.57835,0.6812,0.5876,0.6825,0.5919,0.68705,0.58015,0.697,0.57035,0.64265,0.57515,0.64575,0.56795,0.64265,0.5857,0.6235,0.59125,0.6072,0.5116,0.6633,0.5159,0.67735,0.51605,0.6799,0.58545,0.69225,0.5401,0.70115,0.55455,0.693,0.7182,0.76255,0.70445,0.75775,0.70995,0.74145,0.72265,0.7431,0.586,0.69345,0.5926,0.6829,0.57935,0.7113,0.56955,0.7168,0.55915,0.78585,0.5617,0.8316,0.54875,0.82525,0.54685,0.7879,0.5655,0.8673,0.55055,0.856,0.58685,0.8472,0.58705,0.88255,0.62365,0.87815,0.626,0.9015,0.66125,0.86085,0.68075,0.8685,0.67495,0.89155,0.65935,0.8847,0.7019,0.87355,0.72785,0.87895,0.72175,0.899,0.6962,0.89595,0.6937,0.9151,0.6595,0.9089,0.6818,0.84525,0.6663,0.8383,0.67035,0.81595,0.6814,0.81795,0.70895,0.85015,0.59065,0.7039,0.60035,0.67605,0.6375,0.6797,0.6579,0.66245,0.66,0.6792,0.64155,0.6923,0.7165,0.6493,0.7058,0.66465,0.6877,0.66835,0.6878,0.6536,0.721,0.6368,0.68765,0.639,0.7362,0.6413,0.73435,0.6477,0.734,0.65465,0.72465,0.6622,0.7098,0.67,0.699,0.68295,0.6818,0.6988,0.6573,0.70585,0.63945,0.7205,0.63795,0.75235,0.65625,0.7303,0.65945,0.7492,0.64475,0.77405,0.65545,0.80825,0.64405,0.80895,0.66245,0.80155,0.6746,0.73685,0.67635,0.72055,0.6944,0.72605,0.69105,0.73845,0.7009,0.7725,0.70275,0.7662,0.7148,0.77055,0.71385,0.7773,0.6722,0.78325,0.6686,0.78555,0.67025,0.7772,0.6745,0.77905,0.67485,0.7606,0.68945,0.7554,0.70185,0.79595,0.7032,0.8002,0.69,0.8014,0.6876,0.7959,0.7189,0.78165,0.72455,0.7862,0.7188,0.78985,0.71515,0.7852,0.7137,0.79445,0.7082,0.7913,0.7052,0.8076,0.71675,0.80335,0.721,0.81215,0.70365,0.81235,0.74575,0.73805,0.7356,0.7344,0.7417,0.7303,0.7467,0.7324,0.75075,0.73325,0.75075,0.739,0.7284,0.727,0.7313,0.72965,0.72875,0.73165,0.72685,0.72885,0.70425,0.8201,0.7226,0.8216,0.7319,0.8444,0.7499,0.8475,0.7499,0.8731,0.7499,0.8994,0.744,0.72595,0.7478,0.7283,0.747,0.7228,0.74615,0.7209,0.74925,0.7216,0.7492,0.72455,0.73555,0.73155,0.7405,0.72465,0.7393,0.7295,0.74405,0.72235,0.7415,0.72185,0.7096,0.69065,0.7002,0.69725,0.70635,0.6799,0.73455,0.70575,0.7391,0.71155,0.72925,0.71455,0.7247,0.71075,0.67715,0.7903,0.67825,0.79665,0.6725,0.79185,0.6732,0.7853,0.67665,0.7699,0.6792,0.7743,0.7371,0.66615,0.7264,0.6675,0.7381,0.6595,0.6657,0.77205,0.72585,0.7787,0.71965,0.7785,0.67405,0.59365,0.7268,0.67265,0.7383,0.6711,0.7383,0.6742,0.72705,0.6778,0.73925,0.6792,0.72705,0.68025,0.7488,0.71055,0.745,0.71085,0.74575,0.7073,0.74815,0.70725,0.72395,0.6947,0.7339,0.69815,0.74235,0.6999,0.7102,0.68545,0.70865,0.68055,0.71395,0.68415,0.71405,0.6867,0.7106,0.68405,0.72465,0.6917,0.72575,0.6855,0.73575,0.6868,0.7345,0.6951,0.7421,0.6968,0.74475,0.68695,0.7499,0.68725,0.7499,0.6963,0.73215,0.71485,0.72805,0.7216,0.72655,0.7222,0.73895,0.7171,0.73965,0.7132,0.74275,0.7148,0.74515,0.7121,0.749,0.7127,0.75075,0.7107,0.75075,0.7126,0.74405,0.72115,0.74495,0.7195,0.7347,0.72055,0.73965,0.71975,0.74145,0.7189,0.7422,0.72,0.7429,0.7168,0.74155,0.7179,0.72215,0.6076,0.7187,0.58175,0.7499,0.64135,0.7499,0.64765,0.52125,0.7748,0.53525,0.78415,0.5286,0.82175,0.5063,0.8254,0.6512,0.9232,0.62935,0.91965,0.5935,0.9076,0.55095,0.87435,0.56965,0.8917,0.6699,0.9374,0.5683,0.9121,0.54675,0.8851,0.5916,0.92915,0.63705,0.9401,0.5377,0.8585,0.5715,0.8075,0.5885,0.81605,0.6128,0.74535,0.61935,0.71645,0.6268,0.7183,0.6202,0.7483,0.61025,0.82375,0.62665,0.84155,0.60325,0.8037,0.60995,0.78885,0.6166,0.7924,0.6254,0.79545,0.56885,0.78305,0.58185,0.73055,0.5697,0.7337,0.5586,0.7166,0.57205,0.69655,0.8781,0.6907,0.8671,0.6697,0.88105,0.6601,0.8881,0.69015,0.72625,0.77025,0.73565,0.75025,0.74345,0.7561,0.7399,0.79235,0.73725,0.80245,0.72875,0.8002,0.72955,0.7904,0.7243,0.9195,0.74995,0.9198,0.74985,0.98035,0.71475,0.9624,0.57995,0.9582,0.55275,0.93335,0.537,0.9107,0.6889,0.76495,0.68815,0.7711,0.71445,0.79585,0.7042,0.8022,0.6899,0.803,0.67855,0.79925,0.67195,0.79575,0.67875,0.80465,0.6607,0.7853,0.6642,0.78635,0.6675,0.79795,0.7499,0.6536,0.7244,0.6797,0.7345,0.6819,0.74355,0.6828,0.7139,0.6818,0.71145,0.6819,0.71145,0.68325,0.71005,0.68335,0.6317,0.69915,0.70035,0.71355,0.73495,0.6216,0.6629,0.9714,0.7307,0.7801,0.71715,0.7765,0.6267,0.69525,0.61965,0.69315,0.7474,0.7028,0.7499,0.7024,0.7503,0.70715,0.6862,0.9977,0.62025,0.98625,0.61685,0.9678,0.7433,0.71845,0.74325,0.71845,0.74345,0.71855,0.7446,0.7174,0.7433,0.71815,0.74325,0.71835,0.7142,0.6895,0.7499,0.69945,0.7145,0.72005,0.7123,0.73165,0.7236,0.79635,0.71925,0.79335,0.6889,0.8079,0.6859,0.81225,0.67535,0.8076,0.71305,0.77905,0.70025,0.7743,0.68815,0.79415,0.70095,0.79435,0.7132,0.78355,0.7163,0.7807,0.7075,0.79,0.67385,0.78405,0.678,0.7892,0.6795,0.7755,0.67475,0.77985,0.71695,0.77975,0.68825,0.7726,0.7159,0.77875,0.673,0.7827,0.63085,0.77655,0.6131,0.771,0.61895,0.77385,0.71605,0.68235,0.72325,0.68885,0.7122,0.6863,0.8945,0.5597,0.89995,0.563,0.8998,0.5566,0.8949,0.55525,0.9032,0.56085,0.90375,0.5557,0.8914,0.5591,0.89035,0.5561,0.70975,0.68695,0.7468,0.67845,0.7497,0.67835,0.74985,0.6901,0.746,0.68995,0.89,0.5509,0.88375,0.5571,0.8879,0.5566,0.8932,0.5567,0.89245,0.56515,0.8993,0.5708,0.8867,0.56575,0.8886,0.5586,0.8758,0.5571,0.88105,0.5268,0.89285,0.5445,0.89845,0.58095,0.8909,0.5813,0.88115,0.57485,0.90375,0.54135,0.90625,0.54115,0.90625,0.51365,0.8683,0.5537,0.86595,0.53335,0.88725,0.59175,0.8793,0.5877,0.8741,0.5797,0.98085,0.5509,0.9879,0.5537,0.98375,0.53335,0.97295,0.53815,0.9952,0.59175,0.99475,0.5877,0.97215,0.58345,0.99355,0.5797,0.9828,0.5693,0.95915,0.5199,0.95985,0.53245,0.97305,0.5549,0.96375,0.5439,0.9676,0.56915,0.97265,0.56195,0.95915,0.5414,0.71645,0.67955,0.7135,0.6742,0.75075,0.7243,0.75075,0.7291,0.60675,0.7617,0.6069,0.7735,0.60295,0.76295,0.6049,0.7527,0.60135,0.75425,0.5912,0.80055,0.6014,0.79555,0.5821,0.79645,0.58885,0.80125,0.61175,0.71675,0.60895,0.69395,0.6025,0.71875,0.74985,0.75765,0.5589,0.73785,0.5487,0.7362,0.5478,0.7078,0.5392,0.7215,0.5729,0.7607,0.56205,0.76155,0.5506,0.7645,0.54,0.7602,0.5254,0.74915,0.71385,0.78075,0.7499,0.60185,0.7499,0.61915,0.7405,0.7785,0.74985,0.78015,0.74985,0.79295,0.73845,0.82205,0.7362,0.81135,0.7505,0.80395,0.75055,0.81205,0.7346,0.6899,0.89945,0.5563,0.75055,0.82305,0.60785,0.74145,0.6075,0.7261,0.5978,0.7285,0.60375,0.74795,0.5988,0.74985,0.6076,0.788,0.57695,0.78105,0.5901,0.745,0.583,0.7504,0.5777,0.7692,0.9051,0.5572,0.7472,0.67385,0.71965,0.7319,0.74545,0.7188,0.74675,0.71905,0.7456,0.71685,0.7468,0.7147,0.748,0.71415,0.74565,0.7181,0.74485,0.7182,0.74945,0.71805,0.7435,0.71845,0.74345,0.7183,0.75075,0.7181,0.75075,0.72175,0.90625,0.59485,0.90625,0.5798,0.95915,0.5874,0.95915,0.5953,0.7499,0.65925,0.7499,0.66555,0.75,0.66985,0.90625,0.5601,0.90625,0.5549,0.90625,0.5693,0.88795,0.55645,0.5103,0.8662,0.5521,0.6957,0.74985,0.67375,0.90625,0.5564,0.8657,0.52095,0.95915,0.57405,0.74985,0.6827,0.74985,0.57725,0.73205,0.724,0.7217,0.7209,0.7155,0.712,0.70805,0.7793,0.69945,0.77545,0.68825,0.79265,0.6998,0.79325,0.7059,0.7897,0.67535,0.7833,0.6792,0.78875,0.67975,0.7767,0.6756,0.7802,0.6882,0.77385,0.6748,0.78185,0.7093,0.7843,0.7091,0.78205,0.60455,0.6205,0.60665,0.62345,0.61545,0.61905,0.6187,0.61145,0.63005,0.61635,0.6291,0.60565,0.6438,0.5876,0.63695,0.59205,0.55425,0.6744,0.55255,0.6714,0.54425,0.6767,0.5454,0.68,0.51375,0.6625,0.51405,0.6564,0.51115,0.6565,0.51145,0.665,0.52235,0.6776,0.52225,0.67405,0.5162,0.64845,0.5122,0.6501,0.52375,0.63765,0.52945,0.62685,0.5275,0.62555,0.5185,0.64015,0.60615,0.6088,0.5939,0.6039,0.5997,0.62045,0.5468,0.60895,0.54685,0.6065,0.5713,0.6027,0.56925,0.6003,0.5619,0.66005,0.55935,0.66005,0.55785,0.6652,0.5604,0.66735,0.5615,0.6526,0.55995,0.6529,0.55735,0.64465,0.55965,0.64265,0.5527,0.636,0.5508,0.6383,0.5817,0.61785,0.5817,0.62075,0.5841,0.60855,0.57845,0.6086,0.56635,0.62145,0.54945,0.61595,0.552,0.6243,0.5406,0.6211,0.538,0.6365,0.52885,0.6336,0.5798,0.64645,0.57735,0.6498,0.579,0.65395,0.58615,0.65305,0.5599,0.68335,0.552,0.68825,0.5523,0.69245,0.5616,0.6898,0.5175,0.68395,0.50755,0.67,0.50235,0.6702,0.51795,0.6872,0.5064,0.6586,0.50075,0.6564,0.50645,0.64995,0.50115,0.64795,0.5091,0.63305,0.51365,0.6367,0.52365,0.62185,0.51985,0.6187,0.5439,0.60185,0.5404,0.59715,0.56765,0.59305,0.5661,0.58925,0.59885,0.58395,0.62295,0.58825,0.61585,0.5854,0.5987,0.58055,0.52925,0.67825,0.53115,0.68355,0.5373,0.6843,0.5413,0.6793,0.5269,0.6357,0.53515,0.6244,0.52295,0.6356,0.59765,0.62045,0.5981,0.6132,0.5855,0.6238,0.58955,0.62795,0.54855,0.6138,0.54805,0.60995,0.5794,0.60565,0.58055,0.5999,0.62365,0.5893,0.60035,0.5872,0.5696,0.67395,0.57615,0.65785,0.5644,0.65905,0.5611,0.6717,0.56395,0.6512,0.5721,0.64975,0.54565,0.63825,0.5551,0.643,0.5481,0.6321,0.5637,0.63825,0.5603,0.6265,0.5349,0.6748,0.54535,0.67235,0.56165,0.6185,0.5756,0.60755,0.54875,0.62345,0.53855,0.63075,0.5183,0.6445,0.5168,0.6653,0.52275,0.65665,0.5255,0.64385,0.5954,0.63665,0.5922,0.6353,0.58885,0.63525,0.58545,0.63925,0.59345,0.64415,0.55485,0.66385,0.5723,0.67905,0.58735,0.66245,0.5975,0.64685,0.5917,0.6329,0.5866,0.63555,0.58195,0.63855,0.5768,0.643,0.60055,0.62455,0.6022,0.62995,0.5861,0.60645,0.5972,0.61985,0.57595,0.6266,0.5995,0.6762,0.6019,0.66375,0.59415,0.6727,0.59665,0.6791,0.5647,0.6447,0.56595,0.63955,0.56345,0.6356,0.5596,0.63855,0.57225,0.62835,0.57365,0.63335,0.5757,0.6282,0.57935,0.6334,0.57815,0.64635,0.58035,0.6475,0.5814,0.6512,0.5789,0.6496,0.5749,0.6395,0.5745,0.63975,0.5789,0.6334,0.5787,0.6323,0.5822,0.63085,0.58245,0.62955,0.58495,0.6469,0.5886,0.6354,0.59125,0.6368,0.5865,0.65275,0.5914,0.63215,0.591,0.6323,0.5895,0.6292,0.5859,0.6289,0.58535,0.63015,0.58845,0.63065,0.57135,0.6457,0.57785,0.64855,0.57945,0.64145,0.5806,0.63625,0.53165,0.65515,0.5329,0.6507,0.5824,0.59615,0.5811,0.589,0.5812,0.58495,0.57215,0.64545,0.55005,0.6721,0.54655,0.66425,0.5394,0.64925,0.5402,0.6457,0.53755,0.64475,0.546,0.64645,0.5408,0.65275,0.54385,0.65245,0.5498,0.66295,0.5544,0.6747,0.55675,0.6744,0.51315,0.6587,0.5131,0.6643,0.5165,0.64485,0.55525,0.67685,0.5939,0.5929,0.54655,0.67985,0.5478,0.68175,0.53485,0.6816,0.53525,0.6782,0.53585,0.6907,0.53635,0.6961,0.53995,0.6826,0.54855,0.68095,0.54685,0.7117,0.54135,0.70925,0.5404,0.72295,0.5459,0.7225,0.5507,0.7203,0.5515,0.7103,0.5584,0.71785,0.55815,0.70985,0.56305,0.7072,0.56565,0.7139,0.5749,0.70705,0.57015,0.70295,0.5375,0.70635,0.53295,0.71895,0.53475,0.70405,0.5279,0.7114,0.5466,0.7033,0.54015,0.7052,0.55715,0.7001,0.5633,0.69605,0.57965,0.6896,0.5739,0.68555,0.58,0.682,0.58945,0.68325,0.59385,0.6878,0.58185,0.6978,0.57675,0.64655,0.57185,0.64345,0.5694,0.64345,0.5875,0.6243,0.5932,0.608,0.51195,0.66405,0.51635,0.6781,0.51645,0.6807,0.58725,0.693,0.541,0.70195,0.55575,0.6938,0.78985,0.74145,0.79535,0.75775,0.78155,0.76255,0.77715,0.7431,0.92275,0.6911,0.93515,0.71545,0.9229,0.70925,0.90855,0.6804,0.9422,0.78565,0.9553,0.7875,0.9531,0.8244,0.93955,0.83115,0.95165,0.8551,0.93605,0.86685,0.91395,0.88235,0.9138,0.84705,0.8766,0.8781,0.87435,0.9015,0.83875,0.8609,0.84065,0.88475,0.825,0.89155,0.8192,0.86855,0.798,0.87355,0.8037,0.89595,0.7781,0.899,0.772,0.87895,0.8406,0.9089,0.8062,0.9151,0.8296,0.8161,0.83365,0.83835,0.8181,0.8453,0.81855,0.81815,0.7909,0.8502,0.77765,0.60755,0.7811,0.58175,0.82585,0.59365,0.812,0.6388,0.8607,0.678,0.85745,0.6914,0.83945,0.6787,0.84135,0.66175,0.812,0.6682,0.7938,0.6636,0.78325,0.64925,0.8119,0.6534,0.77875,0.63675,0.7636,0.6413,0.7654,0.6477,0.79065,0.6708,0.77505,0.66115,0.7668,0.6545,0.8016,0.68285,0.81795,0.6987,0.8602,0.72015,0.84235,0.70555,0.84045,0.74915,0.84355,0.7302,0.86195,0.75225,0.85525,0.77405,0.8445,0.80835,0.856,0.809,0.8375,0.80165,0.82525,0.7368,0.8088,0.73845,0.80545,0.726,0.82345,0.7205,0.7989,0.7725,0.78595,0.7773,0.785,0.77055,0.7971,0.7662,0.82775,0.78335,0.82545,0.7791,0.82965,0.7773,0.83135,0.7857,0.82505,0.76065,0.8104,0.7554,0.798,0.79595,0.8126,0.7965,0.81005,0.8018,0.79665,0.8003,0.7809,0.78165,0.78465,0.7852,0.781,0.78985,0.7752,0.7862,0.7916,0.7913,0.7861,0.79445,0.7788,0.8122,0.78305,0.8034,0.7947,0.80775,0.79625,0.81245,0.7558,0.73805,0.7548,0.7324,0.7598,0.7303,0.7659,0.7344,0.77315,0.727,0.7747,0.72885,0.7728,0.73165,0.77025,0.72965,0.7956,0.8202,0.7679,0.8444,0.7772,0.82165,0.7575,0.72595,0.7537,0.7283,0.75455,0.7228,0.7523,0.72455,0.7523,0.7216,0.75535,0.7209,0.766,0.73155,0.761,0.72465,0.76225,0.7295,0.75745,0.72235,0.76,0.72185,0.7951,0.67995,0.80055,0.69725,0.79205,0.6909,0.7723,0.71455,0.76245,0.71155,0.7652,0.70575,0.77595,0.71075,0.82285,0.79075,0.82675,0.78545,0.82745,0.7921,0.82175,0.79705,0.8207,0.77435,0.82325,0.7699,0.7627,0.666,0.76175,0.65935,0.774,0.66675,0.8342,0.7721,0.846,0.64625,0.7739,0.7787,0.7801,0.7785,0.8563,0.62155,0.77305,0.67265,0.7617,0.6711,0.76145,0.6742,0.77225,0.6778,0.7724,0.68025,0.7602,0.6792,0.7527,0.71055,0.75245,0.70725,0.7549,0.7073,0.7565,0.71085,0.77585,0.6947,0.7659,0.69815,0.7574,0.6999,0.79145,0.6857,0.79285,0.6806,0.7877,0.68435,0.7911,0.68425,0.7876,0.68695,0.77515,0.6917,0.7653,0.6951,0.76405,0.6868,0.7741,0.6855,0.75765,0.6968,0.755,0.68695,0.77355,0.7216,0.7694,0.71485,0.775,0.7222,0.7626,0.7171,0.75875,0.7148,0.76185,0.7132,0.75635,0.7121,0.75255,0.7127,0.75655,0.7195,0.7575,0.72115,0.7619,0.71975,0.7668,0.72055,0.7593,0.72,0.76005,0.7189,0.76,0.7179,0.75865,0.7168,0.9467,0.7159,0.93295,0.69265,0.9746,0.81905,0.9679,0.78375,0.98425,0.78025,0.99655,0.81655,0.849,0.9232,0.8711,0.9197,0.90765,0.9076,0.9518,0.87335,0.93235,0.8913,0.83025,0.93745,0.9574,0.8836,0.93515,0.91165,0.9101,0.9294,0.8635,0.9402,0.966,0.8567,0.91185,0.816,0.92925,0.80735,0.8872,0.7453,0.87975,0.7482,0.87275,0.7177,0.8801,0.71575,0.8735,0.84155,0.88995,0.8237,0.8969,0.8037,0.8835,0.7924,0.89015,0.78885,0.8747,0.79545,0.9319,0.78295,0.91885,0.7291,0.9088,0.69995,0.9325,0.73265,0.89585,0.66665,0.7735,0.77025,0.7563,0.7561,0.7641,0.75025,0.77105,0.80025,0.7638,0.80245,0.75985,0.79235,0.7702,0.7904,0.77555,0.9195,0.78515,0.9624,0.9558,0.9326,0.9222,0.9605,0.97125,0.90735,0.8117,0.77115,0.81095,0.76495,0.79565,0.80225,0.78535,0.7959,0.81015,0.80335,0.82145,0.79955,0.828,0.79595,0.8212,0.80495,0.83245,0.7981,0.83575,0.78645,0.83925,0.78535,0.76525,0.6819,0.77335,0.6818,0.7562,0.6828,0.78775,0.68205,0.7902,0.6835,0.7902,0.68215,0.7916,0.68355,0.86725,0.69805,0.7995,0.71355,0.7648,0.6216,0.83755,0.97135,0.76905,0.7801,0.78265,0.7765,0.8718,0.69365,0.75235,0.7028,0.88325,0.96895,0.8784,0.98795,0.81455,0.9971,0.7583,0.71845,0.75825,0.71845,0.7581,0.71855,0.7582,0.71815,0.7569,0.7174,0.75825,0.71835,0.78745,0.6897,0.7875,0.73165,0.7853,0.72,0.78055,0.79335,0.7762,0.79635,0.81105,0.80815,0.81405,0.81245,0.82455,0.8078,0.7996,0.7743,0.7867,0.77905,0.7989,0.79435,0.8121,0.7948,0.78345,0.7807,0.7866,0.78355,0.7923,0.79,0.82205,0.78975,0.8261,0.78415,0.82515,0.7799,0.8204,0.7755,0.78285,0.77975,0.8116,0.7726,0.78385,0.77875,0.8269,0.78275,0.86915,0.77655,0.88695,0.77095,0.8811,0.77385,0.7856,0.6826,0.78945,0.68655,0.7766,0.68885,0.8943,0.5602,0.8947,0.55545,0.8996,0.5569,0.89975,0.56375,0.9035,0.5559,0.90295,0.5614,0.89125,0.55955,0.8902,0.55635,0.7919,0.6872,0.7526,0.67845,0.75375,0.68995,0.88985,0.55085,0.893,0.55695,0.8878,0.5569,0.8836,0.55745,0.8923,0.56595,0.8991,0.572,0.88845,0.559,0.88655,0.5666,0.8927,0.544,0.881,0.52515,0.87575,0.55745,0.89825,0.5828,0.89075,0.58315,0.8811,0.57635,0.906,0.5112,0.906,0.54045,0.9035,0.54065,0.8683,0.55385,0.86595,0.53215,0.88715,0.5943,0.87925,0.59,0.87405,0.5815,0.984,0.52995,0.98815,0.55165,0.98115,0.54865,0.9733,0.5351,0.9954,0.5921,0.9725,0.5833,0.995,0.58785,0.9938,0.5793,0.9831,0.56825,0.9596,0.5156,0.9603,0.529,0.97345,0.5529,0.9642,0.5412,0.968,0.56805,0.973,0.5604,0.9596,0.5385,0.7852,0.6798,0.788,0.675,0.8932,0.7735,0.89335,0.76165,0.8972,0.76295,0.8952,0.7527,0.89875,0.75425,0.90895,0.80055,0.89875,0.79555,0.91135,0.80125,0.9181,0.79645,0.8877,0.71595,0.89695,0.71775,0.94455,0.7371,0.95575,0.73585,0.9599,0.71,0.9685,0.72375,0.9396,0.76115,0.92785,0.76045,0.9519,0.76405,0.96315,0.75955,0.97505,0.7454,0.78595,0.78075,0.75925,0.7785,0.76265,0.82205,0.76485,0.81135,0.7652,0.6899,0.8992,0.5566,0.8926,0.7261,0.8923,0.74145,0.90235,0.7285,0.8964,0.74795,0.90135,0.74985,0.8925,0.788,0.92325,0.78105,0.9101,0.745,0.91715,0.7504,0.9225,0.7692,0.90485,0.5575,0.7525,0.67385,0.78015,0.7319,0.7548,0.71905,0.75605,0.7188,0.7535,0.71415,0.7547,0.7147,0.7559,0.71685,0.75585,0.7181,0.75665,0.7182,0.75205,0.71805,0.758,0.71845,0.7581,0.7183,0.906,0.5976,0.906,0.5816,0.9596,0.5959,0.9596,0.5875,0.7501,0.66985,0.906,0.5551,0.906,0.5606,0.906,0.5704,0.88785,0.55675,0.99805,0.8628,0.9528,0.69525,0.906,0.5567,0.86575,0.51895,0.9596,0.5733,0.7695,0.724,0.7781,0.7209,0.7843,0.712,0.8004,0.77545,0.79175,0.7793,0.80005,0.79325,0.8121,0.79335,0.7939,0.7897,0.82095,0.7895,0.82455,0.7833,0.82425,0.7802,0.8201,0.7767,0.81165,0.77385,0.8251,0.78185,0.7907,0.78205,0.7905,0.7843,0.705,0.7873,0.7031,0.78665,0.69645,0.78725,0.6972,0.788,0.6873,0.7773,0.688,0.7781,0.69655,0.77815,0.69735,0.77735,0.70275,0.77985,0.7012,0.7803,0.6785,0.78245,0.6805,0.7825,0.68295,0.78035,0.6814,0.7799,0.67855,0.7841,0.68135,0.7859,0.6829,0.78545,0.6805,0.7839,0.6875,0.7885,0.6882,0.78765,0.6782,0.7832,0.68025,0.78315,0.70585,0.7843,0.7059,0.7829,0.70385,0.7829,0.70385,0.7841,0.7947,0.78785,0.8025,0.7885,0.80355,0.7875,0.7973,0.78695,0.8125,0.7778,0.8024,0.77785,0.80345,0.77895,0.81155,0.7789,0.79695,0.78035,0.7991,0.78095,0.8213,0.78295,0.8184,0.7804,0.81625,0.781,0.8186,0.78305,0.82125,0.7846,0.81855,0.7844,0.8163,0.78585,0.81845,0.78645,0.81135,0.7879,0.81225,0.789,0.8216,0.7837,0.81885,0.78365,0.79385,0.7848,0.7966,0.78455,0.7966,0.7834,0.7938,0.7834,0.802754,0.273678,0.746834,0.25192,0.806435,0.250717,0.86171,0.29682,0.868951,0.24947,0.801745,0.227938,0.859774,0.202307,0.788494,0.208554,0.832628,0.161766,0.768607,0.1957,0.790983,0.136379,0.745332,0.192066,0.743506,0.129185,0.72233,0.196917,0.696027,0.13847,0.703387,0.210824,0.656706,0.167396,0.690738,0.230522,0.63132,0.208745,0.686644,0.253647,0.623807,0.256128,0.692326,0.276389,0.635115,0.302588,0.705667,0.295571,0.663008,0.341187,0.725621,0.307685,0.703328,0.365877,0.7485,0.311273,0.749927,0.373277,0.770823,0.305932,0.795491,0.362198,0.78989,0.293072,0.834821,0.336362]]
							},
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "E6A25D04-08FC-473B-AF43-0CE1C1E64A70",
							"type": "Group",
							"name": "hf hairs",
							"userData": {
								"bones": [
									{
										"name": "Genitals",
										"rotq": [0,0,0,1],
										"parent": -1,
										"pos": [-0.000027,15.0028,0.169405]
									},
									{
										"name": "1.Hips",
										"rotq": [0,0,0,1],
										"parent": 0,
										"pos": [0.000027,0.144162,0.321899]
									},
									{
										"name": "2.LowerBack",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "3.Spine",
										"rotq": [0,0,0,1],
										"parent": 2,
										"pos": [0.008712,3.25595,0.069768]
									},
									{
										"name": "4.Chest",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "5.Neck",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "6.Head",
										"rotq": [0,0,0,1],
										"parent": 5,
										"pos": [-0.023034,1.46401,0.411038]
									},
									{
										"name": "7.LeftScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "8.LeftArm",
										"rotq": [0,0,0,1],
										"parent": 7,
										"pos": [2.52983,-0.937077,-0.361347]
									},
									{
										"name": "9.LeftForeArm",
										"rotq": [0,0,0,1],
										"parent": 8,
										"pos": [3.19505,-2.63784,0.444198]
									},
									{
										"name": "10.LeftHand",
										"rotq": [0,0,0,1],
										"parent": 9,
										"pos": [3.19611,-2.32051,1.02422]
									},
									{
										"name": "11.LeftHandFinger",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "12.LeftHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 11,
										"pos": [0.476265,-0.405676,0.16763]
									},
									{
										"name": "13.LeftHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 12,
										"pos": [0.366805,-0.348112,0.094266]
									},
									{
										"name": "14.LeftThumbBone",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "15.LeftThumb",
										"rotq": [0,0,0,1],
										"parent": 14,
										"pos": [-1.1345,0.465408,0.302213]
									},
									{
										"name": "16.LeftThumb1",
										"rotq": [0,0,0,1],
										"parent": 15,
										"pos": [0.180056,-0.478939,0.60054]
									},
									{
										"name": "17.LeftThumb2",
										"rotq": [0,0,0,1],
										"parent": 16,
										"pos": [0.092886,-0.289543,0.386178]
									},
									{
										"name": "18.RightScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "19.RightArm",
										"rotq": [0,0,0,1],
										"parent": 18,
										"pos": [-2.52867,-0.937096,-0.361214]
									},
									{
										"name": "20.RightForeArm",
										"rotq": [0,0,0,1],
										"parent": 19,
										"pos": [-3.19598,-2.63734,0.444101]
									},
									{
										"name": "21.RightHand",
										"rotq": [0,0,0,1],
										"parent": 20,
										"pos": [-3.196,-2.32064,1.032]
									},
									{
										"name": "22.RightHandFinger",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "23.RightHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 22,
										"pos": [-0.499381,-0.387148,0.109694]
									},
									{
										"name": "24.RightHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 23,
										"pos": [-0.373054,-0.338717,0.107148]
									},
									{
										"name": "25.RightThumbBone",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "26.RightThumb",
										"rotq": [0,0,0,1],
										"parent": 25,
										"pos": [1.19745,0.436272,0.257659]
									},
									{
										"name": "27.RightThumb1",
										"rotq": [0,0,0,1],
										"parent": 26,
										"pos": [-0.176136,-0.458651,0.585481]
									},
									{
										"name": "28.RightThumb2",
										"rotq": [0,0,0,1],
										"parent": 27,
										"pos": [-0.070728,-0.239492,0.362029]
									},
									{
										"name": "29.LeftBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "30.LeftBoobBone",
										"rotq": [0,0,0,1],
										"parent": 29,
										"pos": [1.79366,0.798965,-0.440115]
									},
									{
										"name": "31.RightBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "32.RightBoobBone",
										"rotq": [0,0,0,1],
										"parent": 31,
										"pos": [-1.73021,0.798965,-0.440115]
									},
									{
										"name": "33.RightHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "34.RightButt",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "35.RightUpLeg",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "36.RightLeg",
										"rotq": [0,0,0,1],
										"parent": 35,
										"pos": [-0.851619,-7.12582,-0.664236]
									},
									{
										"name": "37.RightFoot",
										"rotq": [0,0,0,1],
										"parent": 36,
										"pos": [-0.7531,-6.81598,-0.370799]
									},
									{
										"name": "38.RightToeBase",
										"rotq": [0,0,0,1],
										"parent": 37,
										"pos": [-0.3779,-2.27964,0.987525]
									},
									{
										"name": "39.LeftHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "40.LeftButt",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "41.LeftUpLeg",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "42.LeftLeg",
										"rotq": [0,0,0,1],
										"parent": 41,
										"pos": [0.852048,-7.1256,-0.664335]
									},
									{
										"name": "43.LeftFoot",
										"rotq": [0,0,0,1],
										"parent": 42,
										"pos": [0.753052,-6.8162,-0.3707]
									},
									{
										"name": "44.LeftToeBase",
										"rotq": [0,0,0,1],
										"parent": 43,
										"pos": [0.377549,-2.27926,0.988361]
									}],
								"name": "rlc_female_hairsGeometry.v6",
								"influencesPerVertex": 4,
								"metadata": {
									"materials": 1,
									"bones": 45,
									"vertices": 292,
									"generator": "io_three",
									"version": 3,
									"type": "Geometry",
									"faces": 379,
									"uvs": 1
								},
								"materials": [
									{
										"colorSpecular": [0.5,0.5,0.5],
										"visible": true,
										"colorEmissive": [0,0,0],
										"DbgColor": 15658734,
										"transparent": false,
										"DbgName": "HFHairsMaterial",
										"depthTest": true,
										"depthWrite": true,
										"opacity": 1,
										"shading": "standard",
										"blending": "NormalBlending",
										"wireframe": false,
										"colorDiffuse": [1,1,1],
										"DbgIndex": 0,
										"specularCoef": 50
									}],
								"faces": [10,75,76,77,0,0,1,2,10,210,211,212,0,3,4,5,10,221,222,223,0,6,7,8,10,275,276,277,0,9,10,11,10,3,39,38,0,12,13,14,10,0,2,1,0,15,16,17,10,2,23,1,0,16,18,17,10,3,40,42,0,12,19,20,10,22,2,5,0,21,16,22,10,2,0,5,0,16,15,22,10,19,29,4,0,23,24,25,10,30,22,6,0,26,21,27,10,22,5,6,0,21,22,27,10,12,7,29,0,28,29,24,10,7,4,29,0,29,25,24,10,14,30,15,0,30,26,31,10,30,6,15,0,26,27,31,10,35,8,9,0,32,33,34,10,8,20,9,0,33,35,34,10,9,20,10,0,34,35,36,10,20,16,10,0,35,37,36,10,18,11,12,0,38,39,28,10,11,7,12,0,39,29,28,10,17,14,13,0,40,30,41,10,14,15,13,0,30,31,41,10,16,21,18,0,37,42,38,10,21,11,18,0,42,39,38,10,10,17,27,0,36,40,43,10,17,13,27,0,40,41,43,10,17,18,14,0,40,38,30,10,18,12,14,0,38,28,30,10,30,29,22,0,26,24,21,10,29,19,22,0,24,23,21,10,20,28,16,0,35,44,37,10,28,21,16,0,44,42,37,10,2,22,25,0,16,21,45,10,22,19,25,0,21,23,45,10,23,2,24,0,18,16,46,10,2,25,24,0,16,45,46,10,37,26,35,0,47,48,32,10,26,8,35,0,48,33,32,10,10,16,17,0,36,37,40,10,16,18,17,0,37,38,40,10,9,10,31,0,34,36,49,10,10,27,31,0,36,43,49,10,8,34,20,0,33,50,35,10,34,28,20,0,50,44,35,10,14,12,30,0,30,28,26,10,12,29,30,0,28,24,26,10,35,9,36,0,32,34,51,10,9,31,36,0,34,49,51,10,8,26,32,0,33,48,52,10,26,33,32,0,48,53,52,10,34,8,32,0,50,33,52,10,37,35,41,0,47,32,54,10,35,36,41,0,32,51,54,10,26,37,38,0,48,47,14,10,37,40,38,0,47,19,14,10,33,26,39,0,53,48,13,10,26,38,39,0,48,14,13,10,37,41,40,0,47,54,19,10,41,42,40,0,54,20,19,10,3,38,40,0,12,14,19,10,43,44,48,0,55,56,57,10,44,46,48,0,56,58,57,10,44,45,46,0,56,59,58,10,45,47,46,0,60,61,62,10,46,47,48,0,62,61,57,10,47,49,48,0,61,63,57,10,48,49,53,0,57,63,64,10,49,79,53,0,63,65,64,10,65,114,285,0,66,67,68,10,114,113,285,0,67,69,68,10,101,51,61,0,70,71,72,10,51,62,61,0,71,73,72,10,63,62,50,0,74,73,75,10,62,51,50,0,73,71,75,10,52,43,53,0,76,55,64,10,43,48,53,0,55,57,64,10,55,56,52,0,77,78,76,10,56,54,52,0,78,79,76,10,53,55,52,0,64,77,76,10,54,56,74,0,79,78,80,10,56,291,74,0,78,81,80,10,74,291,270,0,80,81,82,10,291,57,270,0,81,83,82,10,289,58,72,0,84,85,86,10,58,59,72,0,85,87,86,10,286,60,271,0,88,89,90,10,60,67,271,0,89,91,90,10,67,60,62,0,91,89,73,10,60,61,62,0,89,72,73,10,67,62,64,0,91,73,92,10,62,63,64,0,73,74,92,10,70,65,287,0,93,66,94,10,65,285,287,0,66,68,94,10,64,66,67,0,92,95,91,10,66,271,67,0,95,90,91,10,287,69,68,0,94,96,97,10,69,288,68,0,96,98,97,10,70,287,68,0,93,94,97,10,59,71,72,0,87,99,86,10,71,272,72,0,99,100,86,10,288,290,73,0,98,101,102,10,290,77,73,0,101,2,102,10,68,288,73,0,97,98,102,10,273,74,270,0,103,80,82,10,76,73,77,0,1,102,2,10,75,55,76,0,0,77,1,10,55,78,76,0,77,104,1,10,55,53,78,0,77,64,104,10,53,79,78,0,64,65,104,10,93,80,91,0,105,106,107,10,80,277,91,0,106,11,107,10,277,81,91,0,11,108,107,10,81,90,91,0,108,109,107,10,90,81,83,0,109,108,110,10,81,82,83,0,108,111,110,10,84,282,86,0,112,113,114,10,282,85,86,0,113,115,114,10,284,278,85,0,116,117,115,10,278,86,85,0,117,114,115,10,87,88,284,0,118,119,116,10,88,278,284,0,119,117,116,10,51,89,50,0,120,121,122,10,89,280,50,0,121,123,122,10,281,63,280,0,124,125,123,10,63,50,280,0,125,122,123,10,90,98,91,0,109,126,107,10,98,92,91,0,126,127,107,10,100,93,92,0,128,105,127,10,93,91,92,0,105,107,127,10,83,94,90,0,110,129,109,10,94,98,90,0,129,126,109,10,99,95,96,0,130,131,132,10,96,97,99,0,133,134,130,10,94,95,98,0,129,131,126,10,95,99,98,0,131,130,126,10,100,92,99,0,128,127,130,10,92,98,99,0,127,126,130,10,97,100,99,0,134,128,130,10,89,51,283,0,121,120,135,10,51,101,283,0,120,136,135,10,102,115,103,0,137,138,139,10,115,106,103,0,138,140,139,10,105,106,104,0,141,140,142,10,106,115,104,0,140,138,142,10,106,105,109,0,140,141,143,10,105,108,109,0,141,144,143,10,103,106,107,0,139,140,145,10,106,109,107,0,140,143,145,10,109,108,111,0,143,144,146,10,108,112,111,0,144,147,146,10,107,109,110,0,145,143,148,10,109,111,110,0,143,146,148,10,111,112,113,0,146,147,149,10,112,101,113,0,147,150,149,10,110,111,114,0,148,146,151,10,111,113,114,0,146,149,151,10,104,115,123,0,142,138,152,10,115,122,123,0,138,153,152,10,115,102,122,0,138,137,153,10,102,116,122,0,137,154,153,10,117,124,118,0,155,156,157,10,124,121,118,0,156,158,157,10,124,119,121,0,156,159,158,10,119,120,121,0,159,160,158,10,118,121,116,0,157,158,154,10,121,122,116,0,158,153,154,10,121,120,122,0,158,160,153,10,120,123,122,0,160,152,153,10,119,124,125,0,159,156,161,10,117,125,124,0,155,161,156,10,137,138,126,0,162,163,164,10,138,128,126,0,163,165,164,10,126,144,137,0,164,166,162,10,144,129,137,0,166,167,162,10,131,127,138,0,168,169,163,10,127,128,138,0,169,165,163,10,129,130,137,0,167,170,162,10,130,134,137,0,170,171,162,10,131,138,132,0,168,163,172,10,138,149,132,0,163,173,172,10,130,133,134,0,170,174,171,10,133,140,134,0,174,175,171,10,132,149,135,0,172,173,176,10,149,136,135,0,173,177,176,10,137,134,138,0,162,171,163,10,134,149,138,0,171,173,163,10,133,139,140,0,174,178,175,10,139,155,140,0,178,179,175,10,141,135,156,0,180,176,181,10,135,136,156,0,176,177,181,10,142,147,162,0,182,183,184,10,143,144,146,0,185,166,186,10,144,126,146,0,166,164,186,10,150,128,152,0,187,165,188,10,128,127,152,0,165,169,188,10,146,126,150,0,186,164,187,10,126,128,150,0,164,165,187,10,153,145,146,0,189,190,186,10,145,143,146,0,190,185,186,10,142,158,147,0,182,191,183,10,140,155,136,0,175,179,177,10,155,156,136,0,179,181,177,10,141,156,148,0,180,181,192,10,156,157,148,0,181,193,192,10,134,140,149,0,171,175,173,10,140,136,149,0,175,177,173,10,154,150,151,0,194,187,195,10,150,152,151,0,187,188,195,10,153,146,154,0,189,186,194,10,146,150,154,0,186,187,194,10,160,155,161,0,196,179,197,10,155,139,161,0,179,178,197,10,156,155,157,0,181,179,193,10,155,160,157,0,179,196,193,10,159,158,142,0,198,191,182,10,158,159,157,0,191,198,193,10,159,148,157,0,198,192,193,10,157,160,158,0,193,196,191,10,160,147,158,0,196,183,191,10,160,161,147,0,196,197,183,10,161,162,147,0,197,184,183,10,167,184,171,0,199,200,201,10,184,163,171,0,200,202,201,10,181,178,164,0,203,204,205,10,178,165,164,0,204,206,205,10,170,166,180,0,207,208,209,10,166,163,180,0,208,202,209,10,178,184,165,0,204,200,206,10,184,167,165,0,200,199,206,10,177,181,168,0,210,203,211,10,181,164,168,0,203,205,211,10,169,174,170,0,212,213,207,10,174,166,170,0,213,208,207,10,163,166,171,0,202,208,201,10,166,187,171,0,208,214,201,10,168,176,177,0,211,215,210,10,172,173,174,0,216,217,213,10,173,186,174,0,217,218,213,10,172,174,175,0,216,213,219,10,174,169,175,0,213,212,219,10,176,182,177,0,215,220,210,10,185,178,179,0,221,204,222,10,178,181,179,0,204,203,222,10,183,180,184,0,223,209,200,10,180,163,184,0,209,202,200,10,179,181,182,0,222,203,220,10,181,177,182,0,203,210,220,10,183,184,185,0,223,200,221,10,184,178,185,0,200,204,221,10,166,174,187,0,208,213,214,10,174,186,187,0,213,218,214,10,197,190,188,0,224,225,226,10,190,189,188,0,225,227,226,10,189,190,191,0,227,225,228,10,193,196,192,0,229,230,231,10,196,198,192,0,230,232,231,10,193,194,196,0,229,233,230,10,194,195,196,0,233,234,230,10,195,191,196,0,234,228,230,10,191,190,196,0,228,225,230,10,197,198,190,0,224,232,225,10,198,196,190,0,232,230,225,10,199,194,200,0,235,233,236,10,194,193,200,0,233,229,236,10,193,192,200,0,229,231,236,10,192,201,200,0,231,237,236,10,202,203,209,0,238,239,240,10,203,204,209,0,239,241,240,10,205,204,203,0,242,241,239,10,215,208,210,0,243,244,3,10,208,206,210,0,244,245,3,10,210,206,211,0,3,245,4,10,206,207,211,0,245,246,4,10,206,204,207,0,245,241,246,10,204,205,207,0,241,242,246,10,204,206,209,0,241,245,240,10,206,208,209,0,245,244,240,10,213,210,212,0,247,3,5,10,213,214,210,0,247,248,3,10,214,215,210,0,248,243,3,10,216,217,221,0,249,250,6,10,217,222,221,0,250,7,6,10,218,219,220,0,251,252,253,10,219,223,220,0,252,8,253,10,219,221,223,0,252,6,8,10,224,227,225,0,254,255,256,10,225,227,226,0,256,255,257,10,228,229,230,0,258,259,260,10,230,229,231,0,260,259,261,10,230,231,226,0,260,261,257,10,226,231,225,0,257,261,256,10,235,238,232,0,57,262,55,10,232,238,239,0,55,262,263,10,233,235,232,0,264,57,55,10,234,235,233,0,265,57,264,10,236,238,234,0,266,262,265,10,234,238,235,0,265,262,57,10,253,237,236,0,267,268,266,10,236,237,238,0,266,268,262,10,238,237,239,0,262,268,263,10,239,237,240,0,263,268,76,10,237,252,240,0,268,269,76,10,240,252,241,0,76,269,79,10,252,242,241,0,269,270,79,10,241,242,243,0,79,270,80,10,242,244,243,0,270,271,80,10,243,244,245,0,80,271,82,10,244,247,245,0,271,272,82,10,245,247,246,0,82,272,273,10,248,247,249,0,274,272,275,10,249,247,244,0,275,272,271,10,249,244,250,0,275,271,276,10,250,244,242,0,276,271,270,10,251,250,252,0,277,276,269,10,252,250,242,0,269,276,270,10,253,251,237,0,267,277,268,10,237,251,252,0,268,277,269,10,256,254,258,0,278,279,280,10,258,254,260,0,280,279,281,10,258,255,256,0,280,282,278,10,256,255,257,0,278,282,283,10,261,259,258,0,284,285,280,10,258,259,255,0,280,285,282,10,267,261,260,0,286,284,281,10,260,261,258,0,281,284,280,10,266,263,265,0,287,288,289,10,265,263,262,0,289,288,290,10,268,266,264,0,291,287,292,10,264,266,265,0,292,287,289,10,261,267,266,0,284,286,287,10,266,267,263,0,287,286,288,10,259,261,268,0,285,284,291,10,268,261,266,0,291,284,287,10,265,269,264,0,289,293,292,10,269,265,262,0,293,289,290,10,289,72,57,0,84,86,83,10,72,270,57,0,86,82,83,10,286,271,58,0,88,90,85,10,271,59,58,0,90,87,85,10,271,66,59,0,90,95,87,10,66,71,59,0,95,99,87,10,72,272,270,0,86,100,82,10,272,273,270,0,100,103,82,10,81,274,82,0,108,294,111,10,274,279,82,0,294,295,111,10,277,276,81,0,11,10,108,10,276,274,81,0,10,294,108,10,80,275,277,0,106,9,11,10,86,276,84,0,114,10,112,10,276,275,84,0,10,9,112,10,278,274,86,0,117,294,114,10,274,276,86,0,294,10,114,10,88,279,278,0,119,295,117,10,279,274,278,0,295,294,117,10,280,85,281,0,123,115,124,10,85,282,281,0,115,113,124,10,89,284,280,0,121,116,123,10,284,85,280,0,116,115,123,10,283,87,89,0,135,118,121,10,87,284,89,0,118,116,121,10,61,285,101,0,72,68,70,10,285,113,101,0,68,69,70,10,61,60,285,0,72,89,68,10,60,287,285,0,89,94,68,10,60,286,287,0,89,88,94,10,286,69,287,0,88,96,94,10,58,288,286,0,85,98,88,10,288,69,286,0,98,96,88,10,58,289,288,0,85,84,98,10,289,290,288,0,84,101,98,10,57,77,289,0,83,2,84,10,77,290,289,0,2,101,84,10,291,75,57,0,81,0,83,10,75,77,57,0,0,2,83,10,56,55,291,0,78,77,81,10,55,75,291,0,77,0,81],
								"skinWeights": [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],
								"vertices": [0.594845,23.4459,-1.40249,0.57224,22.975,-1.36533,1.16581,23.7005,-1.16802,-0.09784,29.511,0.949749,1.86847,25.0094,-0.343367,0.48124,24.1694,-1.38526,0.3496,24.9932,-1.1944,1.75987,25.6976,0.089243,1.04198,29.193,0.056189,0.866845,28.4417,-0.594297,1.0018,27.6819,-0.762607,1.70049,26.4794,0.380988,1.65139,25.7699,-0.295297,0.12277,26.6871,-0.820017,1.1279,25.8722,-0.943437,0.243735,25.7548,-0.997067,1.48514,27.4689,-0.204752,1.11446,26.8339,-0.840897,1.57799,26.6615,-0.230792,1.75194,24.46,-0.768487,1.34418,28.33,-0.153362,1.65741,27.2575,0.533503,1.17381,24.4221,-1.07988,1.14084,23.1255,-1.08837,1.47009,23.4109,-1.25293,1.56328,23.8288,-1.02847,0.5766,29.6111,0.639389,0.05156,27.5361,-0.765022,1.51845,28.1627,0.715978,1.68417,24.9834,-0.656487,1.21925,25.14,-1.1204,-0.04722,28.3769,-0.626152,1.01284,29.3148,0.865689,0.55455,29.5883,0.996509,1.3426,28.9049,0.738438,0.65136,29.188,-0.346956,-0.190915,28.9284,-0.486781,0.36436,29.5529,0.311919,0.292505,29.6754,0.823504,0.361,29.5912,1.00598,0.12184,29.6499,0.657544,-0.135735,29.5318,0.000934,-0.028095,29.543,0.573259,1.53971,24.9793,0.269588,1.62197,24.3748,-0.621382,1.5309,23.6901,-1.25371,1.8424,24.5301,-0.734367,1.68905,24.6512,-0.800562,1.86665,25.2759,0.045508,1.68305,25.5388,-0.353642,-0.334535,28.8888,2.02548,-0.26522,29.1946,1.79747,1.42839,25.7006,0.977073,1.84431,25.93,0.488003,1.27419,26.4196,1.50285,1.7914,26.8296,0.975458,1.5479,26.6295,1.24824,1.24616,28.1319,2.02186,0.830235,28.8734,2.1311,0.649505,28.5377,2.39628,0.25264,29.294,2.14318,-0.109,29.3636,1.87307,-0.22356,29.0524,2.1806,-0.314135,28.647,2.14014,-0.16967,28.5717,2.20652,0.242135,29.6895,0.863254,0.192595,28.4186,2.22429,0.07208,28.9817,2.39048,1.01679,29.3148,0.865689,0.75177,29.2819,1.84299,0.55847,29.6298,0.913109,0.45074,28.2268,2.24206,0.840805,28.2531,2.3168,1.34461,28.9047,0.728639,1.10597,27.0638,1.85044,1.70607,27.5899,1.35397,1.6136,28.0085,0.431318,1.50659,28.4177,1.66215,1.64623,27.2338,0.196813,1.68439,26.4719,-0.065972,-0.977325,27.7515,1.67758,-1.38472,28.365,1.58672,-1.32671,28.7838,0.973818,-1.61006,28.1449,0.683828,-0.747065,28.3001,1.97958,-0.638965,28.7817,2.22026,-0.80637,28.6708,2.1893,-0.480485,29.4988,1.41547,-0.747965,29.4186,1.33965,-0.449655,29.162,2.00051,-1.59629,27.7054,1.20211,-1.36695,27.5413,1.48389,-1.53818,26.3641,0.915993,-1.10437,27.3772,1.45586,-1.85065,26.5863,0.128863,-1.89489,25.4117,-0.177777,-1.78937,24.2985,-0.690577,-1.4874,24.9755,-0.013482,-1.8194,26.5306,0.655673,-1.82405,25.1461,-0.097367,-1.31533,26.1854,0.882733,-0.188625,29.3866,1.48194,-1.48671,27.8337,-0.134332,-1.1908,28.8665,0.225723,-1.60012,27.5515,0.904798,-1.21715,28.6806,1.18682,-1.28825,28.8117,0.791729,-0.86064,29.4377,0.417024,-0.93664,29.194,1.40749,-0.909845,29.3823,0.951254,-0.399445,29.6531,0.564454,-0.437395,29.5997,1.11868,-0.493685,29.4227,1.52849,-0.162545,29.5418,1.23483,0.05777,29.5783,0.817884,-1.64694,27.6677,0.440133,-1.63636,26.6123,-0.469087,-1.56973,24.6449,-0.933917,-1.60552,25.1359,-0.819072,-1.78591,24.4692,-0.628392,-1.79017,25.1529,-0.123072,-1.84024,25.074,-0.547977,-1.72596,26.531,0.024923,-1.75297,26.4804,0.495333,-1.74266,24.5947,-0.881402,-1.61557,24.1466,-0.976037,-0.272565,25.4319,-1.24006,1.17347,25.1879,-1.09694,0.555045,25.4491,-1.33712,-0.96339,26.7077,-0.910637,-0.777525,28.0018,-0.779522,1.16009,27.0693,-0.814292,0.963515,28.4891,-0.549292,-0.696955,28.7706,-0.566122,-0.155215,28.1127,-1.0897,0.711185,29.1948,-0.359611,0.438185,29.0471,-0.596677,-0.243665,26.8756,-1.21935,0.55681,26.9504,-1.19125,-0.692635,29.1893,-0.266966,-0.20517,28.9779,-0.773942,0.610165,29.4219,0.033854,0.11705,29.4807,0.847344,-0.95541,23.8942,-1.1945,-1.11778,25.125,-1.14717,-0.85409,23.3248,-1.2605,-0.118185,23.887,-1.555,-0.12372,29.6066,0.558049,0.537445,29.6091,0.434594,0.549795,28.1968,-0.997677,0.572525,23.9025,-1.45987,1.18061,23.0404,-1.09685,1.23575,23.9198,-1.23751,0.01628,22.9952,-1.51701,0.559855,22.9485,-1.4286,-0.257295,29.4907,-0.290811,0.299675,29.5001,-0.173076,0.237795,29.6173,0.165269,0.200805,29.6158,0.548159,0.38951,29.5809,0.682699,-0.242725,29.6397,0.177569,-0.597695,29.4005,0.022619,-0.395025,29.4894,0.455654,-1.30296,26.6248,-0.771152,-0.855785,29.3272,0.972979,-1.19332,28.9001,0.772474,-1.30165,25.6532,-0.872987,-1.46319,28.0831,0.321998,-0.341795,29.5078,1.06655,-0.313285,24.7765,-1.24507,-0.18257,25.5136,-1.18226,-1.64445,27.0344,0.002753,-1.18552,23.6464,-1.14816,-1.59354,24.3176,-0.888977,-1.28694,24.7098,-1.07943,-0.58686,23.3412,-1.18217,0.119065,29.4781,0.858784,-0.26641,29.5871,0.505749,-0.98632,29.0587,-0.227026,-0.05218,29.3989,-0.233936,-0.050165,26.3844,-1.10253,-0.70317,29.4914,0.115894,0.000115,29.5241,0.358504,-0.140935,27.9701,-0.950262,-1.14464,28.0253,-0.590912,-0.09901,28.9057,-0.704091,-1.59214,24.9191,-0.836802,-1.70442,25.87,-0.285127,1.30822,24.3394,-0.475207,0.55439,24.7662,-0.509352,1.01791,25.8996,0.599028,0.55156,25.993,0.569898,1.48218,28.3684,0.772138,1.46989,28.1523,1.15751,1.13766,27.5195,1.21297,1.14596,26.7398,0.479353,1.16258,27.0992,1.00694,1.63312,25.8804,0.239258,1.64266,27.3132,0.561558,0.98674,28.1872,1.89232,1.19094,28.7351,1.59801,1.28106,28.9225,0.841409,-0.85673,23.2973,-1.12764,-0.412345,23.3373,-1.25045,-1.09964,24.6711,-0.852397,-0.600025,24.5597,-0.609022,-1.24598,25.6587,0.030923,-0.683925,25.2995,-0.389642,-1.2267,26.1659,-0.576677,-1.21516,24.5628,-0.970997,-1.17908,26.8264,0.402043,-0.583515,26.0699,0.191138,-0.820545,26.7842,1.01318,-0.923955,27.0165,0.824733,-0.7257,27.5939,0.219128,-1.04418,27.2446,-0.252562,-1.48562,24.567,-0.711527,-1.06054,24.632,-0.641172,-1.00422,28.5328,0.542708,-1.50674,26.9753,0.781308,-1.01404,27.8816,1.46285,-1.54198,25.7423,0.403788,-1.07939,25.5453,0.206178,-1.18186,26.6512,0.685383,1.53634,23.9989,-1.20649,1.6278,25.1203,0.134728,1.23465,25.0707,0.205673,1.37911,24.3163,-0.822197,1.07548,28.4953,1.67789,1.33769,28.6838,1.31428,1.13091,26.4297,0.928438,1.62887,26.4731,0.758908,1.58273,24.5585,-0.549777,1.47445,23.8816,-1.06501,1.64932,24.8342,-0.753182,1.78717,24.6926,-0.615822,1.6434,25.6522,-0.270837,1.79906,26.0221,0.526013,1.81793,25.4067,0.090908,1.5076,25.1225,0.320868,1.40521,25.8052,0.988243,1.25557,26.4832,1.48346,1.49714,27.5915,1.31838,1.13603,27.1213,1.8101,1.34404,28.3939,1.63199,1.00767,27.8874,2.12932,0.694805,28.5059,2.35619,0.997425,28.9428,1.8281,1.0238,29.1232,0.882974,1.34312,28.8462,0.753449,1.56916,28.0067,0.472443,1.61181,27.2544,0.250808,1.54695,26.8723,1.1132,1.64788,26.5343,0.002473,-1.14958,28.4277,0.236428,-1.56479,27.284,0.844843,-1.29896,28.4704,0.783053,-1.10996,28.2498,1.2876,-1.60673,27.3881,0.428523,-1.70175,26.3243,0.477963,-1.46324,27.5368,-0.086187,-1.67754,26.3696,0.056498,-1.52513,24.7103,-0.933157,-1.5661,25.1276,-0.742137,-1.72914,24.5244,-0.552977,-1.68798,24.6434,-0.804447,-1.77781,25.0674,-0.482447,-1.59726,26.4424,-0.386127,-1.7342,25.1351,-0.086892,-1.57664,24.2367,-0.861097,1.01005,27.9053,2.18438,0.390485,28.7961,2.40745,0.64785,28.0409,2.1807,0.826355,27.7856,2.11934,-1.05035,28.8927,1.95236,-0.85029,28.1257,1.89932,-0.973785,28.5092,2.08073,-1.17033,28.0253,1.78227,-0.85409,29.0475,2.03979,-0.99173,29.2524,1.26381,-0.48675,28.8452,2.1749,-0.47843,28.5316,2.09999,-0.64384,28.4162,2.05984,-0.307245,29.4427,1.4487,-0.63411,29.1066,2.08016,0.02647,29.5901,1.43253,0.571125,29.0999,2.16159,0.4332,29.4858,1.7033,0.951985,29.0861,1.81271,1.13005,28.4986,2.04036,1.27539,28.7449,1.76391,1.43655,27.3438,1.63401],
								"skinIndices": [6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0],
								"uvs": [[0.826719,0.580212,0.634819,0.574512,0.783919,0.683212,0.90019,0.730614,0.99449,0.709514,0.99699,0.942414,0.8062,0.332192,0.9911,0.366992,0.9914,0.598492,0.9933,0.8402,0.9403,0.8421,0.9339,0.739,0.8737,0.9874,0.7416,0.9697,0.8374,0.9739,0.9357,0.2545,0.7717,0.2638,0.9364,0.0124,0.7938,0.0132,0.8984,0.9728,0.9586,0.9722,0.7681,0.3539,0.9469,0.3479,0.6435,0.3623,0.6567,0.427,0.5491,0.4377,0.7951,0.4373,0.9882,0.4328,0.6581,0.5216,0.4975,0.531,0.8171,0.5297,0.9832,0.5098,0.9113,0.8598,0.7629,0.8654,0.8852,0.7954,0.7499,0.7905,0.8572,0.7158,0.7151,0.7033,0.659,0.6173,0.469,0.6233,0.8215,0.6318,0.9923,0.6068,0.4842,0.7083,0.9955,0.6925,0.5072,0.8065,0.6646,0.264,0.7103,0.014,0.9378,0.9229,0.7922,0.9347,1.0203,0.7834,0.5537,0.868,1.0458,0.8518,0.6049,0.9124,0.6509,0.9393,1.069,0.9217,0.989119,0.255412,0.989819,0.125712,0.870869,0.259812,0.910419,0.130912,0.969219,0.013312,0.842319,0.013312,0.764519,0.130612,0.887819,0.130912,0.731819,0.256512,0.850319,0.400312,0.696019,0.385712,0.590719,0.942812,0.594019,0.995012,0.743119,0.945512,0.730719,0.992112,0.781119,0.991512,0.831519,0.991012,0.821619,0.936912,0.900119,0.928412,0.984119,0.919312,0.912019,0.983812,0.991519,0.394812,0.849519,0.481712,0.919919,0.481712,0.991519,0.481612,0.991419,0.550712,0.908519,0.565412,0.930869,0.672812,0.874219,0.677212,0.851219,0.737012,0.841219,0.790012,0.929819,0.737712,0.921019,0.790512,0.837119,0.826312,0.833019,0.862612,0.918919,0.825812,0.916819,0.861212,0.990419,0.871012,0.593219,0.869912,0.749219,0.864012,0.990419,0.824612,0.755319,0.826712,0.601919,0.802512,0.761319,0.789512,0.990419,0.778212,0.990419,0.719312,0.772619,0.736312,0.607019,0.696512,0.990419,0.660412,0.664619,0.485812,0.9927,0.6362,0.993,0.7382,0.9276,0.6359,0.8774,0.7425,0.8624,0.6357,0.7442,0.6368,0.7544,0.741,0.9931,0.8912,0.9934,0.9422,0.946,0.8916,0.9473,0.9411,0.8909,0.94,0.8918,0.892,0.7623,0.9358,0.7634,0.8904,0.8395,0.9866,0.8754,0.9633,0.9415,0.9846,0.9466,0.9628,0.9939,0.964,0.9885,0.9858,0.8753,0.3842,0.9338,0.3874,0.9923,0.3906,0.7994,0.392,0.8937,0.1718,0.8448,0.1736,0.8956,0.0114,0.9571,0.0114,0.9922,0.17,0.7624,0.9605,0.7624,0.9853,0.109513,0.4993,0.218713,0.5073,0.105213,0.7223,0.215913,0.7344,0.310113,0.728,0.308213,0.5083,0.210213,0.8061,0.308213,0.8149,0.098913,0.8065,0.212313,0.8997,0.307813,0.9038,0.096813,0.8995,0.204413,0.9987,0.307813,0.9985,0.088213,0.9983,0.306213,0.2938,0.220813,0.3044,0.129113,0.3065,0.195513,0.0272,0.263413,0.0394,0.166013,0.1224,0.242013,0.1344,0.313013,0.0549,0.308113,0.1256,0.309313,0.0005,0.1822,0.593601,0.3381,0.595101,0.1734,0.436501,0.3543,0.438501,0.0039,0.416001,0.0036,0.582201,0.5035,0.602901,0.5585,0.427101,0.0448,0.720401,0.2023,0.720101,0.4635,0.756001,0.3244,0.723201,0.0826,0.801401,0.2095,0.803501,0.4264,0.832401,0.3259,0.803801,0.0999,0.881801,0.2103,0.866601,0.4477,0.871701,0.326,0.869201,0.2661,0.977101,0.2234,0.956901,0.1123,0.950901,0.004,0.272101,0.1857,0.274101,0.3963,0.274401,0.5543,0.258101,0.2121,0.006201,0.0042,0.005601,0.336,0.957201,0.4478,0.916201,0.3299,0.916901,0.4118,0.005901,0.535,0.003101,0.2155,0.919201,0.1002,0.920401,0.4366,0.966301,0.855113,0.694,0.645113,0.6888,0.860513,0.5557,0.643613,0.5369,0.643413,0.8639,0.645013,0.791,0.835713,0.873,0.858913,0.7919,0.419113,0.4391,0.633613,0.4129,0.418413,0.5399,0.641013,0.9315,0.792313,0.9303,0.433813,0.3407,0.627613,0.2958,0.824013,0.4113,0.637613,0.9818,0.635013,0.0233,0.797613,0.024,0.820613,0.2626,0.464013,0.0267,0.476713,0.9276,0.432713,0.794,0.438413,0.8651,0.416513,0.6872,0.1783,0.373792,0.0859,0.409192,0.1361,0.191492,0.0095,0.210892,0.0126,0.456392,0.1222,0.727392,0.1174,0.545092,0.2227,0.662592,0.203,0.508092,0.0114,0.733992,0.0098,0.598392,0.0099,0.901992,0.1247,0.876892,0.2212,0.850592,0.91739,0.022914,1.00119,0.049714,0.87589,0.260714,0.95289,0.282514,0.99829,0.284414,0.83449,0.750914,0.84639,0.545014,0.91489,0.509114,0.99439,0.483614,0.90479,0.940614,0.84049,0.942314,0.7815,0.040692,0.9908,0.111292,0.7678,0.930192,0.7692,0.632192,0.9913,0.925492,0.796,0.005792,0.991,0.004392,0.7836,0.237192,0.9917,0.264392,0.9895,0.801292,0.797,0.835792,0.9914,0.572492,0.7743,0.575492,0.870619,0.319412,0.992619,0.315212,0.992519,0.208712,0.781819,0.255312,0.680319,0.315912,0.591519,0.385712,0.838019,0.409712,0.789719,0.481712,0.756919,0.580212,0.695319,0.683212,0.662819,0.789512,0.892619,0.790512,0.433219,0.802512,0.440619,0.696512,0.480519,0.574512,0.523519,0.485812,0.141113,0.7596,0.305613,0.7488,0.137013,0.5267,0.299113,0.5185,0.004113,0.528,0.001313,0.752,0.133813,0.3442,0.007113,0.3295,0.270013,0.3476,0.102513,0.2124,0.215213,0.2013,0.070713,0.1315,0.171513,0.1186,0.004313,0.1959,-0.002987,0.1456,0.002513,0.1044,0.8917,0.844,0.7645,0.8451]]
							},
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "5DF95FF7-EE44-41AE-9871-C59794A99C83",
							"type": "Group",
							"name": "hf tshirt",
							"userData": {
								"uvs": [[0.5845,0.8858,0.5751,0.8588,0.613,0.8602,0.5065,0.8879,0.5065,0.1129,0.578,0.1133,0.5742,0.1463,0.6364,0.1209,0.631,0.1503,0.68,0.1241,0.6786,0.1534,0.652,0.8878,0.6484,0.8605,0.7062,0.8535,0.6095,0.8073,0.5586,0.8059,0.569,0.7515,0.5065,0.805,0.5065,0.7446,0.5065,0.2061,0.5683,0.2094,0.5626,0.2563,0.6218,0.2068,0.6169,0.2563,0.6759,0.2073,0.692,0.2613,0.648,0.7547,0.6965,0.755,0.701,0.8041,0.566,0.7311,0.6151,0.7334,0.5065,0.7273,0.5594,0.2817,0.5065,0.2633,0.6147,0.2756,0.6933,0.2759,0.6399,0.7345,0.7003,0.7426,0.6054,0.6885,0.5746,0.6903,0.5589,0.6354,0.5065,0.6857,0.5065,0.6402,0.5065,0.3224,0.5243,0.3277,0.528,0.3663,0.5951,0.3746,0.5555,0.3744,0.5712,0.3598,0.6971,0.3171,0.6977,0.3226,0.6629,0.3373,0.6477,0.6769,0.616,0.6207,0.6413,0.6108,0.5065,0.3795,0.5416,0.4322,0.5065,0.4237,0.5852,0.4353,0.6432,0.4004,0.6337,0.4467,0.6069,0.4471,0.5987,0.5578,0.6003,0.528,0.6287,0.5311,0.5976,0.619,0.5488,0.6033,0.5065,0.6061,0.6308,0.4985,0.6034,0.488,0.6072,0.5889,0.6155,0.3911,0.636,0.3384,0.6599,0.677,0.6802,0.6869,0.5339,0.4511,0.5065,0.4399,0.554,0.4718,0.5897,0.4849,0.5704,0.5051,0.5779,0.5572,0.5523,0.5504,0.5605,0.5297,0.5389,0.5718,0.5321,0.5601,0.5065,0.5727,0.5065,0.5644,0.1836,0.5543,0.1889,0.5862,0.1624,0.5813,0.1105,0.5406,0.1234,0.538,0.1196,0.575,0.0241,0.5568,0.0743,0.5474,0.0677,0.5798,0.2544,0.5523,0.2553,0.5815,0.2286,0.5775,0.1387,0.5349,0.1573,0.5524,0.0926,0.5439,0.0857,0.5779,0.228,0.5476,0.2831,0.5551,0.3006,0.5568,0.3021,0.5791,0.5639,0.7197,0.5065,0.7164,0.6145,0.7217,0.6379,0.7199,0.6344,0.6891,0.6669,0.6994,0.6941,0.2851,0.6964,0.3109,0.6148,0.3253,0.5926,0.3104,0.6131,0.2894,0.5065,0.2916,0.5769,0.2973,0.5336,0.3035,0.6711,0.6882,0.5836,0.5282,0.6157,0.7531,0.6416,0.8064,0.6138,0.8867,0.5737,0.3257,0.5709,0.3427,0.5573,0.3407,0.5879,0.3251,0.5842,0.3394,0.5854,0.315,0.5594,0.3163,0.5734,0.3139,0.5906,0.3507,0.7027,0.7348,0.5418,0.328,0.5557,0.3273,0.6033,0.3238,0.5772,0.3057,0.5528,0.3122,0.5494,0.3525,0.1389,0.5738,0.5659,0.8321,0.6122,0.8341,0.6449,0.8336,0.6257,0.1792,0.6772,0.1822,0.5705,0.1789,0.4012,0.8602,0.4386,0.8588,0.4294,0.8858,0.5065,0.8588,0.5065,0.1456,0.4395,0.1463,0.4358,0.1133,0.3833,0.1503,0.378,0.1209,0.3363,0.1534,0.309,0.8535,0.3661,0.8605,0.3626,0.8878,0.4046,0.8073,0.3985,0.7531,0.4447,0.7515,0.455,0.8059,0.451,0.2563,0.4454,0.2094,0.3973,0.2563,0.3925,0.2068,0.323,0.2613,0.3665,0.7547,0.3728,0.8064,0.3141,0.8041,0.3991,0.7334,0.4476,0.7311,0.4542,0.2817,0.3995,0.2756,0.3217,0.2759,0.3148,0.7426,0.3746,0.7345,0.4087,0.6885,0.4547,0.6354,0.4391,0.6903,0.4852,0.3663,0.4425,0.3598,0.458,0.3744,0.4188,0.3746,0.3518,0.3373,0.3173,0.3226,0.3179,0.3171,0.3732,0.6108,0.3982,0.6207,0.3668,0.6769,0.4718,0.4322,0.4287,0.4353,0.4072,0.4471,0.3806,0.4467,0.3713,0.4004,0.3857,0.5311,0.4138,0.528,0.4153,0.5578,0.4164,0.619,0.4262,0.5879,0.4647,0.6033,0.4107,0.488,0.3836,0.4985,0.3803,0.5844,0.4069,0.5889,0.3987,0.3911,0.3018,0.7033,0.3334,0.6876,0.3442,0.6879,0.4794,0.4511,0.4595,0.4718,0.4433,0.5051,0.4243,0.4849,0.4531,0.5297,0.4612,0.5504,0.4359,0.5572,0.4812,0.5601,0.4745,0.5718,0.1624,0.1334,0.189,0.1384,0.1837,0.1068,0.1102,0.093,0.1031,0.1282,0.1193,0.1271,0.0232,0.1092,0.0247,0.1314,0.0671,0.1319,0.229,0.1296,0.2559,0.1337,0.255,0.1048,0.1385,0.0873,0.1387,0.1259,0.0737,0.0998,0.0852,0.13,0.2285,0.1,0.281,0.1324,0.4498,0.7197,0.3997,0.7217,0.3124,0.7348,0.3057,0.7129,0.3519,0.6981,0.3994,0.3253,0.3186,0.3109,0.3209,0.2851,0.4214,0.3104,0.4108,0.3238,0.4797,0.3035,0.4369,0.2973,0.3784,0.3384,0.3037,0.7079,0.38,0.6891,0.4302,0.5282,0.3766,0.7199,0.4004,0.8867,0.4563,0.3407,0.4428,0.3427,0.4401,0.3257,0.4296,0.3394,0.426,0.3251,0.4285,0.315,0.4403,0.3139,0.4542,0.3163,0.4889,0.3277,0.4366,0.3057,0.4233,0.3507,0.401,0.2894,0.4641,0.3525,0.4578,0.3273,0.4716,0.328,0.4607,0.3122,0.1231,0.0904,0.5065,0.8301,0.4477,0.8321,0.4019,0.8341,0.3696,0.8336,0.3886,0.1792,0.3389,0.2073,0.4432,0.1789,0.5065,0.1779,0.3377,0.1822,0.3117,0.8271,0.7034,0.8271,0.0256,0.5791,0.0617,0.6088,0.2831,0.5801,0.3035,0.5991,0.256,0.6075,0.2291,0.6042,0.1936,0.6147,0.167,0.6071,0.1391,0.6086,0.1034,0.5761,0.1162,0.6081,0.0796,0.6083,0.061,0.1612,0.079,0.1607,0.0966,0.1602,0.1159,0.1606,0.1389,0.161,0.167,0.1595,0.1938,0.1672,0.2295,0.1566,0.2566,0.16,0.2805,0.1558,0.0261,0.1516,0.3044,0.1516,0.2828,0.1074,0.303,0.1314,0.3547,0.677,0.2797,0.6033,0.7134,0.7033,0.7115,0.7079,0.7095,0.7129,0.0921,0.0964,0.3874,0.5585,0.5877,0.5879,0.6269,0.5585,0.634,0.5844,0.5065,0.2807,0.7089,0.8803,0.3348,0.1241,0.3062,0.8803,0.3185,0.755,0.1573,0.1048,0.027,0.5991,0.097,0.6078,0.3015,0.1092]],
								"vertices": [0.89508,17.7732,-0.892128,0.80002,18.2487,-0.643638,1.39247,18.222,-0.542533,1.51056,17.7247,-0.801133,0,17.7732,-0.947373,0,18.2349,-0.719648,0,17.3442,2.19177,0.89508,17.3442,1.9378,0.88994,18.0211,2.01463,0,18.0073,2.26072,1.87147,17.4487,1.49701,1.73064,18.1044,1.4974,2.26636,17.5271,0.756787,2.1136,18.1206,0.780257,2.15166,17.6614,-0.128698,1.94545,18.1977,-0.069823,1.21406,19.2282,-0.239698,0.624565,19.2271,-0.461333,0.814675,20.3839,-0.643957,1.38448,20.3981,-0.361902,0,19.1879,-0.575658,0,20.4427,-0.770112,0,19.3195,2.30531,0.880455,19.3587,2.07377,0.905225,20.4191,2.3216,0,20.4779,2.41816,1.56083,19.2779,1.62052,1.69748,20.3889,1.88825,1.83618,19.2836,0.825033,2.00741,20.3722,0.753048,1.5167,19.2564,0.038837,1.70585,20.3894,-0.017407,0.80687,20.8624,-0.775612,1.44747,20.869,-0.516597,0,20.9185,-0.849772,0.9461,21.1609,2.4225,0,21.1434,2.42403,1.77241,20.9167,1.97079,2.04496,20.8915,0.701966,1.73768,20.8933,-0.287407,1.53666,21.9838,-1.01683,1.04407,21.8664,-1.09909,0.886395,23.1382,-1.33073,0,21.9163,-1.16584,0,23.0556,-1.23744,0,22.3575,2.43297,0.37737,22.4,2.48098,0.474655,23.0085,2.20405,0,23.1023,2.10442,1.82932,23.3721,1.79606,1.0392,23.3155,2.07331,1.38396,23.1134,2.20656,1.88476,23.001,2.19317,2.35189,22.5125,0.331448,2.4739,22.4469,0.105988,2.42435,22.8138,0.605193,2.2208,22.6433,1.38674,2.24682,22.5164,-0.888717,1.9306,23.4191,-1.2577,2.37014,23.5102,-1.11772,2.5338,22.6468,-0.847267,0.64906,24.0653,1.44034,0,23.9483,1.58893,1.52566,24.0962,1.19513,2.36597,23.6408,0.855323,2.466,24.1121,0.490923,1.92866,24.1751,0.868513,2.03351,23.5299,1.32819,1.87189,24.4951,-0.6529,1.87195,24.5735,-0.115232,2.51024,24.3972,-0.141847,2.56474,24.3024,-0.609231,1.60795,23.4464,-1.30422,0.711131,23.9156,-1.17893,1.50446,24.0825,-1.0456,0,23.886,-1.14235,2.47656,24.2721,0.350388,1.89208,24.4399,0.461468,1.88549,23.9659,-0.996307,2.4551,23.9141,-0.903237,2.51113,22.5711,-0.486442,2.28525,22.515,-0.442502,0.420685,24.3306,1.23789,0,24.2252,1.39695,0.882636,24.4163,0.950168,1.57851,24.4675,0.584353,1.09749,24.6489,0.497833,1.40292,24.6142,-0.653432,0.766261,24.8411,-0.440557,1.00404,24.8441,-0.048997,1.48298,24.6278,-0.089057,0.539161,24.5861,-0.891557,0.25899,24.7927,-0.605992,0,24.5616,-0.750997,0,24.7947,-0.630687,2.654,23.4049,0.749803,2.83295,23.9538,0.435903,2.89643,24.2339,-0.228867,2.91811,24.093,-0.574417,2.65855,23.3592,-1.04323,2.70815,22.5052,-0.832082,2.69583,22.3055,0.068138,2.65975,22.6629,0.522258,2.87055,24.1489,0.183438,2.78957,23.7762,-0.876467,2.70315,22.4241,-0.466302,0.801975,21.1354,-0.865132,0,21.1899,-0.906642,1.48701,21.1647,-0.613732,1.8133,21.2732,-0.456942,2.02924,22.1013,-0.934572,2.15375,22.1286,-0.278402,2.1225,21.275,0.670269,2.3168,22.1643,0.580853,2.18793,22.3389,1.919,1.87503,21.2998,2.0432,1.87275,21.937,2.41238,2.06117,22.338,2.16305,0,21.5881,2.4456,1.37297,21.5545,2.51107,0.54723,21.832,2.53285,1.51387,22.4557,2.61134,1.42835,22.8622,2.43472,1.11541,22.819,2.53889,1.05726,22.4708,2.65711,1.86973,22.4195,2.45399,1.75093,22.8221,2.38372,1.7387,22.1238,2.49071,1.45406,22.1064,2.60707,1.12139,22.1717,2.69593,1.46492,21.8234,2.53972,0.910542,22.9326,2.38775,0.717415,22.454,2.60461,0.929795,22.0411,2.62569,0,18.6988,-0.581353,0.680435,18.7261,-0.484873,1.22931,18.7123,-0.287573,1.67836,18.7264,-0.011778,1.94462,18.7213,0.809247,1.53351,18.7004,1.51049,0.852475,18.6884,2.02871,0,18.661,2.26703,-1.39247,18.222,-0.542533,-0.80002,18.2487,-0.643638,-0.89508,17.7732,-0.892128,-1.51056,17.7247,-0.801133,-0.88994,18.0211,2.01463,-0.89508,17.3442,1.9378,-1.73064,18.1044,1.4974,-1.87147,17.4487,1.49701,-2.1136,18.1206,0.780257,-2.26636,17.5271,0.756787,-1.94545,18.1977,-0.069823,-2.15166,17.6614,-0.128698,-1.21406,19.2282,-0.239698,-1.38448,20.3981,-0.361902,-0.814675,20.3839,-0.643957,-0.624565,19.2271,-0.461333,-0.905225,20.4191,2.3216,-0.880455,19.3587,2.07377,-1.73269,20.3815,1.91378,-1.63626,19.2647,1.67831,-1.97954,20.3753,0.750244,-1.79217,19.2848,0.823818,-1.70585,20.3894,-0.017407,-1.5167,19.2564,0.038837,-1.44747,20.869,-0.516597,-0.80687,20.8624,-0.775612,-0.9461,21.1609,2.4225,-1.80738,20.906,1.99545,-2.01741,20.8969,0.698938,-1.73768,20.8933,-0.287407,-1.53666,21.9838,-1.01683,-0.886395,23.1382,-1.33073,-1.04407,21.8664,-1.09909,-0.474655,23.0085,2.20405,-0.37737,22.4,2.48098,-1.38396,23.1134,2.20656,-1.0392,23.3155,2.07331,-1.82932,23.3721,1.79606,-1.81429,22.9501,2.12251,-2.42435,22.8138,0.605193,-2.4739,22.4469,0.105988,-2.35189,22.5125,0.331448,-2.2208,22.6433,1.38674,-2.37014,23.5102,-1.11772,-1.9306,23.4191,-1.2577,-2.24682,22.5164,-0.888717,-2.5338,22.6468,-0.847267,-0.64906,24.0653,1.44034,-1.52566,24.0962,1.19513,-1.92866,24.1751,0.868513,-2.466,24.1121,0.490923,-2.36597,23.6408,0.855323,-2.03351,23.5299,1.32819,-2.51533,24.4119,-0.141614,-1.871,24.5692,-0.116118,-1.86245,24.4689,-0.637037,-2.55665,24.2764,-0.592327,-1.60794,23.4464,-1.30422,-1.50446,24.0825,-1.0456,-0.71113,23.9156,-1.17893,-1.89643,24.4537,0.467013,-2.48122,24.2818,0.355623,-2.4551,23.9141,-0.903237,-1.88549,23.9659,-0.996307,-2.50965,22.5662,-0.463022,-2.28435,22.515,-0.452912,-0.420685,24.3306,1.23789,-0.882635,24.4163,0.950168,-1.09749,24.6489,0.497833,-1.57851,24.4675,0.584353,-1.00404,24.8441,-0.048997,-0.76626,24.8411,-0.440557,-1.40291,24.6142,-0.653432,-1.48298,24.6278,-0.089057,-0.25899,24.7927,-0.605992,-0.53916,24.5861,-0.891557,-2.82946,23.9553,0.436423,-2.65126,23.4072,0.750803,-2.9145,24.0942,-0.574227,-2.89276,24.2355,-0.228042,-2.70649,22.5066,-0.832227,-2.65582,23.3606,-1.04394,-2.65751,22.6643,0.523048,-2.69373,22.3069,0.068498,-2.86681,24.1501,0.185028,-2.78639,23.7775,-0.876717,-2.70052,22.4132,-0.411347,-0.801975,21.1354,-0.865132,-1.48701,21.1647,-0.613732,-2.09572,21.2833,0.667705,-2.3168,22.1643,0.580853,-2.13789,22.1251,-0.362002,-2.22741,22.3377,1.93933,-1.90885,21.2824,2.06566,-1.83471,21.9487,2.38032,-2.02877,22.3331,2.13989,-0.54723,21.832,2.53285,-1.37472,21.5584,2.51206,-2.02924,22.1013,-0.934572,-1.8133,21.2732,-0.456942,-1.11541,22.819,2.53889,-1.43717,22.8807,2.45982,-1.51387,22.4557,2.61134,-1.05554,22.4673,2.65356,-1.75872,22.824,2.38153,-1.81243,22.4117,2.40762,-1.7387,22.1238,2.49071,-1.45406,22.1064,2.60707,-1.12139,22.1717,2.69593,-1.46492,21.8234,2.53972,-0.91199,22.9263,2.3793,-0.717415,22.454,2.60461,-0.929794,22.0411,2.62569,-0.680435,18.7261,-0.484873,-1.22931,18.7123,-0.287573,-1.67836,18.7264,-0.011778,-1.90253,18.7091,0.804642,-1.64823,18.7138,1.60922,-0.852475,18.6884,2.02871,2.91615,23.2243,-0.976697,2.86387,22.3788,-0.818517,2.87896,22.279,-0.392092,2.89405,22.1792,0.034333,2.86999,22.5281,0.448188,2.91126,23.1943,0.655558,3.16069,23.8124,0.386763,3.22246,24.0389,0.034333,3.24136,24.088,-0.306592,3.2572,23.9814,-0.592317,3.0883,23.653,-0.852552,-2.91615,23.2243,-0.976697,-3.0883,23.653,-0.852552,-3.2572,23.9814,-0.592317,-3.24136,24.088,-0.306592,-3.22246,24.0389,0.034333,-3.16069,23.8124,0.386763,-2.91126,23.1943,0.655558,-2.86999,22.5281,0.448188,-2.89405,22.1792,0.034333,-2.87896,22.279,-0.392092,-2.86387,22.3788,-0.818518],
								"metadata": {
									"type": "Geometry",
									"vertices": 283,
									"version": 3,
									"uvs": 1,
									"materials": 1,
									"bones": 45,
									"generator": "io_three",
									"faces": 520
								},
								"bones": [
									{
										"name": "Genitals",
										"rotq": [0,0,0,1],
										"parent": -1,
										"pos": [-0.000027,15.0028,0.169405]
									},
									{
										"name": "1.Hips",
										"rotq": [0,0,0,1],
										"parent": 0,
										"pos": [0.000027,0.144162,0.321899]
									},
									{
										"name": "2.LowerBack",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "3.Spine",
										"rotq": [0,0,0,1],
										"parent": 2,
										"pos": [0.008712,3.25595,0.069768]
									},
									{
										"name": "4.Chest",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "5.Neck",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "6.Head",
										"rotq": [0,0,0,1],
										"parent": 5,
										"pos": [-0.023034,1.46401,0.411038]
									},
									{
										"name": "7.LeftScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "8.LeftArm",
										"rotq": [0,0,0,1],
										"parent": 7,
										"pos": [2.52983,-0.937077,-0.361347]
									},
									{
										"name": "9.LeftForeArm",
										"rotq": [0,0,0,1],
										"parent": 8,
										"pos": [3.19505,-2.63784,0.444198]
									},
									{
										"name": "10.LeftHand",
										"rotq": [0,0,0,1],
										"parent": 9,
										"pos": [3.19611,-2.32051,1.02422]
									},
									{
										"name": "11.LeftHandFinger",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "12.LeftHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 11,
										"pos": [0.476265,-0.405676,0.16763]
									},
									{
										"name": "13.LeftHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 12,
										"pos": [0.366805,-0.348112,0.094266]
									},
									{
										"name": "14.LeftThumbBone",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "15.LeftThumb",
										"rotq": [0,0,0,1],
										"parent": 14,
										"pos": [-1.1345,0.465408,0.302213]
									},
									{
										"name": "16.LeftThumb1",
										"rotq": [0,0,0,1],
										"parent": 15,
										"pos": [0.180056,-0.478939,0.60054]
									},
									{
										"name": "17.LeftThumb2",
										"rotq": [0,0,0,1],
										"parent": 16,
										"pos": [0.092886,-0.289543,0.386178]
									},
									{
										"name": "18.RightScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "19.RightArm",
										"rotq": [0,0,0,1],
										"parent": 18,
										"pos": [-2.52867,-0.937096,-0.361214]
									},
									{
										"name": "20.RightForeArm",
										"rotq": [0,0,0,1],
										"parent": 19,
										"pos": [-3.19598,-2.63734,0.444101]
									},
									{
										"name": "21.RightHand",
										"rotq": [0,0,0,1],
										"parent": 20,
										"pos": [-3.196,-2.32064,1.032]
									},
									{
										"name": "22.RightHandFinger",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "23.RightHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 22,
										"pos": [-0.499381,-0.387148,0.109694]
									},
									{
										"name": "24.RightHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 23,
										"pos": [-0.373054,-0.338717,0.107148]
									},
									{
										"name": "25.RightThumbBone",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "26.RightThumb",
										"rotq": [0,0,0,1],
										"parent": 25,
										"pos": [1.19745,0.436272,0.257659]
									},
									{
										"name": "27.RightThumb1",
										"rotq": [0,0,0,1],
										"parent": 26,
										"pos": [-0.176136,-0.458651,0.585481]
									},
									{
										"name": "28.RightThumb2",
										"rotq": [0,0,0,1],
										"parent": 27,
										"pos": [-0.070728,-0.239492,0.362029]
									},
									{
										"name": "29.LeftBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "30.LeftBoobBone",
										"rotq": [0,0,0,1],
										"parent": 29,
										"pos": [1.79366,0.798965,-0.440115]
									},
									{
										"name": "31.RightBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "32.RightBoobBone",
										"rotq": [0,0,0,1],
										"parent": 31,
										"pos": [-1.73021,0.798965,-0.440115]
									},
									{
										"name": "33.RightHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "34.RightButt",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "35.RightUpLeg",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "36.RightLeg",
										"rotq": [0,0,0,1],
										"parent": 35,
										"pos": [-0.851619,-7.12582,-0.664236]
									},
									{
										"name": "37.RightFoot",
										"rotq": [0,0,0,1],
										"parent": 36,
										"pos": [-0.7531,-6.81598,-0.370799]
									},
									{
										"name": "38.RightToeBase",
										"rotq": [0,0,0,1],
										"parent": 37,
										"pos": [-0.3779,-2.27964,0.987525]
									},
									{
										"name": "39.LeftHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "40.LeftButt",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "41.LeftUpLeg",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "42.LeftLeg",
										"rotq": [0,0,0,1],
										"parent": 41,
										"pos": [0.852048,-7.1256,-0.664335]
									},
									{
										"name": "43.LeftFoot",
										"rotq": [0,0,0,1],
										"parent": 42,
										"pos": [0.753052,-6.8162,-0.3707]
									},
									{
										"name": "44.LeftToeBase",
										"rotq": [0,0,0,1],
										"parent": 43,
										"pos": [0.377549,-2.27926,0.988361]
									}],
								"name": "rlc_female_tshirtGeometry.v6",
								"skinIndices": [2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,3,0,2,3,1,0,2,3,1,0,2,3,1,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,2,0,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,3,2,0,0,2,3,0,0,3,2,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,29,3,2,4,3,2,4,0,29,3,2,0,3,2,0,0,3,2,0,0,3,8,7,2,3,7,2,0,7,3,4,0,3,4,2,0,3,4,7,18,29,31,4,3,29,3,4,2,29,4,3,7,31,4,29,3,29,4,7,2,29,4,3,2,29,3,4,7,29,4,3,2,29,7,3,2,8,7,3,0,7,29,3,8,29,2,3,4,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,4,7,29,18,4,7,18,3,7,4,29,8,7,8,0,0,7,8,0,0,7,4,8,0,29,7,4,3,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,4,18,0,7,8,0,0,4,7,18,3,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,0,0,0,8,0,0,0,4,7,18,3,4,7,18,3,7,4,0,0,7,4,0,0,7,4,0,0,7,0,0,0,7,18,0,0,7,0,0,0,7,0,0,0,7,18,4,0,7,18,4,5,7,18,4,5,7,18,5,4,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,0,0,0,7,8,3,0,7,8,0,0,7,8,0,0,8,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,8,2,0,3,2,8,0,3,8,2,0,3,29,2,8,29,3,2,7,29,2,3,4,29,3,7,8,29,2,3,4,29,2,3,4,3,31,29,2,29,3,2,4,29,3,2,4,29,2,3,4,29,2,3,4,29,2,3,4,29,2,3,4,29,2,3,4,29,4,3,2,29,2,3,4,29,2,3,4,29,2,3,4,29,3,2,4,29,3,4,2,29,3,4,2,29,4,3,2,2,0,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,1,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,1,0,2,3,1,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,2,3,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,31,3,2,4,3,31,2,0,2,3,0,0,2,3,0,0,3,18,19,2,18,3,4,7,3,2,0,0,31,3,4,18,31,4,18,2,31,3,4,2,31,3,4,18,31,18,3,4,31,4,3,2,31,18,3,19,18,19,3,0,3,31,18,2,31,2,3,4,18,19,0,0,18,19,0,0,18,19,0,0,19,18,0,0,4,18,31,7,18,31,4,19,18,4,19,0,18,19,0,0,18,19,0,0,31,18,3,4,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,7,4,0,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,19,0,0,0,19,3,0,0,4,18,7,0,18,4,7,0,18,4,0,0,18,4,0,0,18,7,0,0,18,7,0,0,18,0,0,0,18,0,0,0,18,7,4,5,18,7,4,0,18,19,0,0,19,18,0,0,18,19,0,0,18,19,0,0,19,18,0,0,19,18,0,0,19,18,3,0,19,0,0,0,18,19,0,0,18,19,0,0,19,0,0,0,3,2,0,0,3,2,0,0,3,31,2,19,31,3,2,18,3,2,19,0,31,2,3,4,31,3,2,18,31,2,3,4,31,2,3,4,31,4,2,3,31,3,2,4,3,2,19,0,3,19,2,0,31,3,4,2,31,3,4,2,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,3,4,2,31,4,18,2,31,2,4,18,2,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0],
								"skinWeights": [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.737966,0.171303,0.090731,0,0.828507,0.100316,0.071177,0,0.860428,0.125272,0.0143,0,0.825763,0.108028,0.066209,0,0.91989,0.08011,0,0,0.890978,0.109022,0,0,0.940082,0.059918,0,0,0.908565,0.091435,0,0,0.994044,0.005956,0,0,0.98338,0.01662,0,0,0.911344,0.088656,0,0,0.982998,0.017002,0,0,0.51167,0.48833,0,0,0.605231,0.394769,0,0,1,0,0,0,0.643137,0.356863,0,0,0.582078,0.417922,0,0,0.523725,0.476275,0,0,0.666975,0.333025,0,0,0.852715,0.147285,0,0,0.620119,0.379881,0,0,0.559582,0.440418,0,0,0.72937,0.27063,0,0,0.561723,0.438277,0,0,0.884921,0.115079,0,0,0.603046,0.396954,0,0,0.66019,0.33981,0,0,0.703591,0.296409,0,0,0.676402,0.323598,0,0,0.549341,0.450659,0,0,0.834665,0.082667,0.082667,0,0.526199,0.473801,0,0,0.671912,0.328088,0,0,0.695229,0.304771,0,0,0.877809,0.109937,0.012254,0,0.95298,0.04702,0,0,0.505671,0.385609,0.10872,0,0.882835,0.117165,0,0,0.510581,0.295777,0.103937,0.089705,0.481799,0.375021,0.077486,0.047011,0.859474,0.088608,0.033675,0.012916,0.757163,0.126638,0.091168,0.016844,0.374767,0.215911,0.204886,0.156894,0.861161,0.069274,0.035066,0.034499,0.737593,0.117457,0.079401,0.032774,0.886105,0.05539,0.050264,0.00824,0.932288,0.041265,0.014205,0.006121,0.411828,0.33696,0.192987,0.058225,0.419424,0.310801,0.269775,0,0.607163,0.392837,0,0,0.992362,0.001528,0.001528,0.001528,0.506395,0.493605,0,0,0.886287,0.113713,0,0,0.729556,0.270444,0,0,0.519204,0.480796,0,0,0.49113,0.320213,0.129732,0.058925,0.55911,0.221534,0.219356,0,0.749261,0.120856,0.104363,0.025519,0.946535,0.053465,0,0,0.984524,0.015476,0,0,0.97543,0.02457,0,0,0.573877,0.376163,0.04996,0,1,0,0,0,1,0,0,0,0.920671,0.079329,0,0,0.843948,0.156052,0,0,1,0,0,0,0.81771,0.102525,0.079764,0,1,0,0,0,0.376878,0.315106,0.2466,0.061415,0.964477,0.035523,0,0,1,0,0,0,1,0,0,0,0.823462,0.176538,0,0,0.490634,0,0,0,0.47933,0,0,0,0.450053,0.439957,0.10999,0,0.523771,0.239216,0.237013,0,0.82893,0.17107,0,0,0.983047,0.016953,0,0,0.946169,0.053831,0,0,1,0,0,0,0.965989,0.034011,0,0,1,0,0,0,1,0,0,0,0.863462,0.091024,0.045513,0,0.768933,0.176692,0.030512,0.022181,0.63271,0.287891,0.072265,0.006531,0.522054,0.33596,0.091604,0.045543,0.657599,0.342401,0,0,0.76674,0.23326,0,0,0.600252,0.399748,0,0,0.560215,0.439785,0,0,0.549781,0.450219,0,0,0.629484,0.370516,0,0,0.475366,0,0,0,0.565333,0.434667,0,0,0.654272,0.345728,0,0,0.545244,0.454756,0,0,0.561122,0,0,0,0.738259,0.261741,0,0,0.806332,0.193668,0,0,0.771474,0.228526,0,0,0.772714,0.227286,0,0,0.81531,0.092345,0.092345,0,0.808484,0.191516,0,0,0.865809,0.134191,0,0,0.703522,0.253178,0.029506,0.013793,1,0,0,0,0.867954,0.131972,0.000064,0.000011,1,0,0,0,1,0,0,0,0.411269,0.329735,0.258997,0,0.950906,0.049094,0,0,0.975405,0.024595,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.998631,0.001014,0.000355,0,1,0,0,0,1,0,0,0,1,0,0,0,0.998078,0.001922,0,0,0.901788,0.062688,0.033205,0.00116,0.935764,0.0578,0.006435,0,0.999351,0.000556,0.000092,0,1,0,0,0,1,0,0,0,0.988148,0.011852,0,0,0.91564,0.08436,0,0,0.868494,0.131506,0,0,0.809939,0.190061,0,0,0.622506,0.377494,0,0,0.684734,0.314077,0.001189,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.940659,0.043631,0.015709,0,0.831886,0.096398,0.071716,0,0.940575,0.059425,0,0,0.972677,0.027323,0,0,0.929105,0.070895,0,0,0.980097,0.019903,0,0,0.984353,0.015647,0,0,0.99609,0.00391,0,0,0.929277,0.070723,0,0,0.602958,0.397042,0,0,0.629189,0.370811,0,0,0.960574,0.039426,0,0,0.558656,0.441344,0,0,0.619935,0.380065,0,0,0.581093,0.418907,0,0,0.765622,0.234377,0,0,0.610418,0.389582,0,0,0.940793,0.059207,0,0,0.602293,0.397707,0,0,0.918828,0.081172,0,0,0.565291,0.434709,0,0,0.532971,0.467029,0,0,0.52755,0.47245,0,0,0.501008,0.476411,0.022582,0,0.611729,0.388271,0,0,0.555614,0.444386,0,0,0.853444,0.083154,0.063402,0,0.475978,0.371123,0.111084,0.041814,0.992168,0.007832,0,0,0.897273,0.084206,0.012506,0.003871,0.957225,0.021079,0.021079,0.000616,0.860588,0.068694,0.057113,0.004535,0.744578,0.11028,0.092152,0.04952,0.775446,0.106257,0.060533,0.055105,0.996103,0.002877,0.00102,0,0.726255,0.174606,0.099139,0,0.486953,0.476347,0.0367,0,0.448535,0.385163,0.138466,0.027835,1,0,0,0,0.773819,0.226181,0,0,0.838776,0.161224,0,0,0.534343,0.465657,0,0,0.551261,0.448739,0,0,0.459673,0.27719,0.196875,0.051954,0.682391,0.187491,0.130118,0,0.974835,0.025165,0,0,0.85368,0.14632,0,0,0.84906,0.15094,0,0,0.608734,0.285849,0.066359,0.039058,0.852464,0.147536,0,0,1,0,0,0,1,0,0,0,0.828538,0.171462,0,0,0.921467,0.078533,0,0,1,0,0,0,0.763985,0.110953,0.10287,0,1,0,0,0,0.857175,0.142825,0,0,0.829091,0.170909,0,0,0.993778,0.006222,0,0,0.603962,0,0,0,0.761978,0.238022,0,0,0.453081,0.435997,0.110922,0,0.826714,0.172642,0.000643,0,0.9457,0.0543,0,0,0.98252,0.01748,0,0,0.992877,0.007123,0,0,0.921657,0.078343,0,0,1,0,0,0,1,0,0,0,0.634175,0.311392,0.030572,0.022182,0.78377,0.17055,0.04568,0,0.686678,0.313322,0,0,0.500333,0.499667,0,0,0.547923,0.452077,0,0,0.577443,0.422557,0,0,0.63558,0.36442,0,0,0.558157,0.441843,0,0,0.595187,0.374791,0.030022,0,0.560428,0,0,0,0.600462,0.399538,0,0,0.532654,0.467346,0,0,0.638683,0,0,0,0.615611,0.384389,0,0,0.59118,0.40882,0,0,0.75033,0.24967,0,0,0.471319,0.427514,0.06972,0.031447,0.83452,0.08274,0.08274,0,1,0,0,0,0.905394,0.093816,0.000617,0.000169,1,0,0,0,1,0,0,0,0.884307,0.053069,0.04591,0.012422,0.973801,0.013193,0.006238,0.005934,0.811713,0.094143,0.094143,0,0.679002,0.320998,0,0,0.957717,0.038894,0.003389,0,0.98562,0.00821,0.00617,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.899821,0.09669,0.003085,0.000202,0.998671,0.000665,0.000665,0,0.997274,0.000909,0.000909,0.000909,1,0,0,0,0.986905,0.013095,0,0,0.924556,0.075444,0,0,0.87318,0.12682,0,0,0.827941,0.172059,0,0,0.737733,0.262267,0,0,0.591374,0.408626,0,0,0.700453,0,0,0,0.641663,0,0,0,0.592438,0,0,0,0.552687,0.447313,0,0,0.504921,0.495079,0,0,0.517576,0.482424,0,0,0.54947,0.45053,0,0,0.56351,0.43649,0,0,0.581156,0.418844,0,0,0.606126,0.393874,0,0,0.681343,0.318657,0,0,0.627492,0.372508,0,0,0.586182,0.413818,0,0,0.570023,0.429977,0,0,0.560726,0.439274,0,0,0.54006,0.45994,0,0,0.650275,0.349725,0,0,0.736528,0.263472,0,0,0.637425,0,0,0,0.689863,0,0,0,0.689503,0,0,0],
								"influencesPerVertex": 4,
								"faces": [10,0,1,2,0,0,1,2,10,1,0,4,0,1,0,3,10,6,7,8,0,4,5,6,10,7,10,11,0,5,7,8,10,10,12,13,0,7,9,10,10,14,15,13,0,11,12,13,10,16,17,18,0,14,15,16,10,17,20,21,0,15,17,18,10,22,23,24,0,19,20,21,10,23,26,27,0,20,22,23,10,26,28,29,0,22,24,25,10,31,29,28,0,26,27,28,10,18,32,33,0,16,29,30,10,21,34,32,0,18,31,29,10,24,35,25,0,21,32,33,10,24,27,37,0,21,23,34,10,27,29,38,0,23,25,35,10,31,39,38,0,26,36,37,10,40,41,42,0,38,39,40,10,43,44,42,0,41,42,40,10,45,46,47,0,43,44,45,10,49,50,51,0,46,47,48,10,53,54,55,0,49,50,51,10,57,58,59,0,52,53,54,10,48,61,62,0,55,56,57,10,50,63,61,0,47,58,56,10,64,65,66,0,59,60,61,10,68,69,70,0,62,63,64,10,72,42,73,0,65,40,66,10,44,75,73,0,42,67,66,10,65,76,77,0,60,68,69,10,59,58,78,0,54,53,70,10,67,56,55,0,71,72,51,10,57,60,80,0,52,73,74,10,61,82,83,0,56,75,76,10,61,63,84,0,56,58,77,10,85,86,84,0,78,79,77,10,87,88,89,0,80,81,82,10,91,92,88,0,83,84,81,10,93,94,92,0,85,86,84,10,64,95,96,0,87,88,89,10,71,70,97,0,90,91,92,10,60,59,99,0,93,94,95,10,54,101,102,0,96,97,98,10,76,65,96,0,99,100,89,10,59,79,104,0,94,101,102,10,55,102,95,0,103,98,88,10,80,60,100,0,104,105,106,10,106,107,43,0,107,108,41,10,108,106,41,0,109,107,39,10,109,110,111,0,110,111,112,10,112,113,114,0,113,114,115,10,116,115,114,0,116,117,115,10,118,119,120,0,118,119,120,10,113,53,56,0,114,49,72,10,110,57,81,0,111,52,121,10,57,110,72,0,52,111,65,10,78,58,72,0,70,53,65,10,68,87,90,0,62,80,122,10,66,77,85,0,61,69,78,10,67,66,63,0,71,61,58,10,56,67,49,0,72,71,46,10,40,42,72,0,38,40,65,10,109,108,40,0,110,109,38,10,19,33,39,0,123,30,36,10,30,16,19,0,124,14,123,10,3,2,15,0,125,2,12,10,121,122,123,0,126,127,128,10,121,125,126,0,126,129,130,10,127,125,121,0,131,129,126,10,129,128,121,0,132,133,126,10,120,46,45,0,120,44,43,10,119,115,116,0,119,117,116,10,114,49,52,0,115,46,134,10,34,107,106,0,31,108,107,10,32,106,108,0,29,107,109,10,39,33,108,0,36,30,109,10,39,109,112,0,36,110,135,10,37,38,112,0,34,35,113,10,37,115,119,0,34,117,119,10,35,119,118,0,32,119,118,10,50,49,63,0,47,46,58,10,61,48,47,0,56,55,45,10,123,122,51,0,128,127,48,10,132,124,123,0,136,137,128,10,117,52,126,0,138,134,130,10,51,122,126,0,48,127,130,10,130,116,127,0,139,116,131,10,117,125,127,0,138,129,131,10,133,129,132,0,140,132,136,10,130,128,129,0,139,133,132,10,119,130,133,0,119,139,140,10,46,120,132,0,44,120,136,10,47,46,132,0,45,44,136,10,50,47,131,0,47,45,141,10,90,89,86,0,122,82,79,10,77,69,90,0,69,63,122,10,69,77,76,0,63,69,68,10,70,76,103,0,91,99,142,10,20,17,135,0,17,15,143,10,135,17,16,0,143,15,14,10,136,16,30,0,144,14,124,10,137,30,28,0,145,124,28,10,139,138,28,0,146,147,24,10,140,139,26,0,148,146,22,10,140,23,22,0,148,20,19,10,142,143,144,0,149,150,151,10,143,5,4,0,150,152,3,10,6,9,146,0,4,153,154,10,147,146,148,0,155,154,156,10,149,148,150,0,157,156,158,10,150,152,153,0,159,160,161,10,154,155,156,0,162,163,164,10,157,156,21,0,165,164,18,10,22,25,158,0,19,33,166,10,159,158,160,0,167,166,168,10,161,160,162,0,169,168,170,10,164,165,163,0,171,172,173,10,166,167,156,0,174,175,164,10,167,34,21,0,175,31,18,10,168,158,25,0,176,166,33,10,158,168,169,0,166,176,177,10,160,169,170,0,168,177,178,10,170,171,164,0,179,180,171,10,172,173,174,0,181,182,183,10,173,44,43,0,182,42,41,10,45,48,175,0,43,55,184,10,177,178,179,0,185,186,187,10,181,182,183,0,188,189,190,10,185,186,187,0,191,192,193,10,48,62,189,0,55,57,194,10,178,189,190,0,186,194,195,10,191,192,193,0,196,197,198,10,195,196,197,0,199,200,201,10,199,200,201,0,202,203,204,10,201,75,44,0,204,67,42,10,202,203,192,0,205,206,197,10,185,204,205,0,191,207,208,10,194,193,181,0,209,198,188,10,182,206,207,0,210,211,212,10,83,208,189,0,76,213,194,10,189,208,209,0,194,213,214,10,209,210,211,0,214,215,216,10,212,213,214,0,217,218,219,10,213,216,217,0,218,220,221,10,216,94,93,0,220,86,85,10,218,219,193,0,222,223,224,10,198,220,221,0,225,226,227,10,188,222,223,0,228,229,230,10,224,225,182,0,231,232,233,10,203,226,218,0,234,235,222,10,185,223,227,0,236,230,237,10,219,224,181,0,223,231,238,10,182,225,228,0,233,232,239,10,229,174,43,0,240,183,41,10,230,172,174,0,241,181,183,10,231,232,233,0,242,243,244,10,234,232,231,0,245,246,247,10,236,237,234,0,248,249,245,10,118,238,239,0,118,250,251,10,184,183,232,0,252,190,246,10,183,207,233,0,253,212,244,10,199,240,187,0,202,254,193,10,205,200,199,0,208,203,202,10,215,214,197,0,255,219,201,10,211,202,191,0,216,205,196,10,190,191,194,0,195,196,209,10,179,194,184,0,187,209,252,10,199,173,172,0,202,182,181,10,241,240,172,0,256,254,181,10,171,166,155,0,180,174,163,10,165,164,155,0,172,171,163,10,152,142,145,0,160,149,257,10,242,243,244,0,258,259,260,10,244,243,246,0,260,259,261,10,244,247,248,0,260,262,263,10,244,249,250,0,260,264,265,10,45,176,238,0,43,266,250,10,239,251,236,0,251,267,248,10,180,179,234,0,268,187,245,10,229,107,34,0,240,108,31,10,230,229,167,0,241,240,175,10,171,241,230,0,180,256,241,10,231,241,171,0,242,256,180,10,169,235,231,0,177,269,247,10,239,235,169,0,251,269,177,10,118,239,168,0,118,251,176,10,178,190,179,0,186,195,187,10,175,48,189,0,184,55,194,10,242,252,177,0,258,270,185,10,242,245,253,0,258,271,272,10,237,247,246,0,249,262,261,10,246,243,177,0,261,259,185,10,251,249,248,0,267,264,263,10,248,247,237,0,263,262,249,10,245,250,253,0,271,265,272,10,250,249,251,0,265,264,267,10,254,251,239,0,273,267,251,10,253,254,238,0,272,273,250,10,175,252,253,0,184,270,272,10,178,177,252,0,186,185,270,10,210,212,215,0,215,217,255,10,202,211,215,0,205,216,255,10,203,202,196,0,206,205,200,10,226,203,195,0,235,234,274,10,20,134,255,0,17,275,276,10,154,157,255,0,162,165,276,10,165,154,256,0,172,162,277,10,163,165,257,0,173,172,278,10,259,161,163,0,279,169,280,10,260,159,161,0,281,167,169,10,22,159,260,0,19,167,281,10,9,141,260,0,153,282,281,10,146,260,259,0,154,281,279,10,148,259,258,0,156,279,283,10,152,150,258,0,160,159,284,10,142,152,257,0,149,160,278,10,143,142,256,0,150,149,277,10,5,143,255,0,152,150,276,10,5,134,135,0,152,275,143,10,1,135,136,0,1,143,144,10,2,136,137,0,2,144,145,10,15,137,138,0,12,145,285,10,11,13,138,0,8,10,147,10,8,11,139,0,6,8,146,10,9,8,140,0,153,6,148,10,100,99,261,0,286,95,287,10,105,100,262,0,288,106,289,10,101,264,265,0,97,290,291,10,102,265,266,0,98,291,292,10,95,266,267,0,88,292,293,10,103,96,267,0,142,89,293,10,97,103,268,0,92,142,294,10,98,97,269,0,295,92,296,10,99,104,271,0,95,102,297,10,223,272,273,0,230,298,299,10,220,274,275,0,226,300,301,10,276,226,221,0,302,235,227,10,226,276,277,0,235,302,303,10,219,218,277,0,223,222,303,10,224,219,278,0,231,223,304,10,225,224,279,0,232,231,305,10,225,280,281,0,232,306,307,10,222,282,272,0,229,308,298,10,228,281,282,0,239,307,309,10,206,228,222,0,310,239,311,10,207,206,188,0,212,211,312,10,233,207,187,0,244,212,193,10,233,240,241,0,244,254,256,10,101,105,263,0,97,288,313,10,54,80,105,0,96,104,288,10,81,80,54,0,121,74,314,10,111,81,53,0,112,121,315,10,112,111,113,0,135,112,316,10,273,274,220,0,299,300,226,10,204,227,220,0,317,237,226,10,204,198,197,0,207,318,201,10,197,214,200,0,201,219,203,10,200,214,217,0,203,219,221,10,75,201,217,0,67,204,221,10,75,93,91,0,67,85,83,10,74,73,91,0,319,66,83,10,68,78,74,0,62,70,319,10,68,71,79,0,62,320,321,10,79,71,98,0,101,90,295,10,271,104,98,0,297,102,295,10,35,36,25,0,32,322,33,10,36,168,25,0,322,176,33,10,250,254,253,0,265,273,272,10,129,124,132,0,132,137,136,10,131,47,132,0,141,45,136,10,176,175,253,0,266,184,272,10,176,253,238,0,266,272,250,10,120,133,132,0,120,140,136,10,3,0,2,0,125,0,2,10,5,1,4,0,152,1,3,10,9,6,8,0,153,4,6,10,8,7,11,0,6,5,8,10,11,10,13,0,8,7,10,10,12,14,13,0,323,11,13,10,19,16,18,0,123,14,16,10,18,17,21,0,16,15,18,10,25,22,24,0,33,19,21,10,24,23,27,0,21,20,23,10,27,26,29,0,23,22,25,10,30,31,28,0,124,26,28,10,19,18,33,0,123,16,30,10,18,21,32,0,16,18,29,10,35,24,37,0,32,21,34,10,37,27,38,0,34,23,35,10,29,31,38,0,27,26,37,10,41,43,42,0,39,41,40,10,48,45,47,0,55,43,45,10,52,49,51,0,134,46,48,10,56,53,55,0,72,49,51,10,60,57,59,0,73,52,54,10,67,64,66,0,71,59,61,10,71,68,70,0,320,62,64,10,74,72,73,0,319,65,66,10,42,44,73,0,40,42,66,10,66,65,77,0,61,60,69,10,79,59,78,0,321,54,70,10,64,67,55,0,59,71,51,10,81,57,80,0,121,52,74,10,62,61,83,0,57,56,76,10,82,61,84,0,75,56,77,10,63,85,84,0,58,78,77,10,90,87,89,0,122,80,82,10,87,91,88,0,80,83,81,10,91,93,92,0,83,85,84,10,65,64,96,0,100,87,89,10,98,71,97,0,295,90,92,10,100,60,99,0,286,93,95,10,55,54,102,0,103,96,98,10,103,76,96,0,142,99,89,10,99,59,104,0,95,94,102,10,64,55,95,0,87,103,88,10,105,80,100,0,288,104,106,10,41,106,43,0,39,107,41,10,40,108,41,0,38,109,39,10,112,109,111,0,135,110,112,10,115,112,114,0,117,113,115,10,117,116,114,0,138,116,115,10,114,113,56,0,115,114,72,10,111,110,81,0,112,111,121,10,58,57,72,0,53,52,65,10,74,78,72,0,319,70,65,10,69,68,90,0,63,62,122,10,63,66,85,0,58,61,78,10,49,67,63,0,46,71,58,10,114,56,49,0,115,72,46,10,110,40,72,0,111,38,65,10,110,109,40,0,111,110,38,10,31,19,39,0,26,123,36,10,31,30,19,0,26,124,123,10,14,3,15,0,11,125,12,10,124,121,123,0,137,126,128,10,122,121,126,0,127,126,130,10,128,127,121,0,133,131,126,10,124,129,121,0,137,132,126,10,118,120,45,0,118,120,43,10,130,119,116,0,139,119,116,10,117,114,52,0,138,115,134,10,32,34,106,0,29,31,107,10,33,32,108,0,30,29,109,10,109,39,108,0,110,36,109,10,38,39,112,0,37,36,135,10,115,37,112,0,117,34,113,10,35,37,119,0,32,34,119,10,36,35,118,0,322,32,118,10,50,61,47,0,47,56,45,10,131,123,51,0,141,128,48,10,131,132,123,0,141,136,128,10,125,117,126,0,129,138,130,10,52,51,126,0,134,48,130,10,128,130,127,0,133,139,131,10,116,117,127,0,116,138,131,10,133,130,129,0,140,139,132,10,120,119,133,0,120,119,140,10,51,50,131,0,48,47,141,10,85,90,86,0,78,122,79,10,85,77,90,0,78,69,122,10,70,69,76,0,64,63,68,10,97,70,103,0,92,91,142,10,134,20,135,0,275,17,143,10,136,135,16,0,144,143,14,10,137,136,30,0,145,144,124,10,138,137,28,0,285,145,28,10,26,139,28,0,22,146,24,10,23,140,26,0,20,148,22,10,141,140,22,0,282,148,19,10,145,142,144,0,257,149,151,10,144,143,4,0,151,150,3,10,147,6,146,0,155,4,154,10,149,147,148,0,157,155,156,10,151,149,150,0,324,157,158,10,151,150,153,0,325,159,161,10,157,154,156,0,165,162,164,10,20,157,21,0,17,165,18,10,159,22,158,0,167,19,166,10,161,159,160,0,169,167,168,10,163,161,162,0,280,169,170,10,162,164,163,0,326,171,173,10,155,166,156,0,163,174,164,10,156,167,21,0,164,175,18,10,160,158,169,0,168,166,177,10,162,160,170,0,170,168,178,10,162,170,164,0,326,179,171,10,174,173,43,0,183,182,41,10,176,45,175,0,266,43,184,10,180,177,179,0,268,185,187,10,184,181,183,0,252,188,190,10,188,185,187,0,312,191,193,10,194,191,193,0,209,196,198,10,198,195,197,0,318,199,201,10,173,199,201,0,182,202,204,10,173,201,44,0,182,204,42,10,191,202,192,0,196,205,197,10,186,185,205,0,192,191,208,10,184,194,181,0,252,209,188,10,183,182,207,0,253,210,212,10,62,83,189,0,57,76,194,10,190,189,209,0,195,194,214,10,190,209,211,0,195,214,216,10,215,212,214,0,255,217,219,10,214,213,217,0,219,218,221,10,217,216,93,0,221,220,85,10,192,218,193,0,327,222,224,10,195,198,221,0,274,225,227,10,185,188,223,0,236,228,230,10,181,224,182,0,238,231,233,10,192,203,218,0,327,234,222,10,204,185,227,0,317,236,237,10,193,219,181,0,224,223,238,10,206,182,228,0,310,233,239,10,107,229,43,0,108,240,41,10,229,230,174,0,240,241,183,10,235,234,231,0,269,245,247,10,235,236,234,0,269,248,245,10,234,184,232,0,245,252,246,10,232,183,233,0,243,253,244,10,186,199,187,0,192,202,193,10,186,205,199,0,192,208,202,10,196,215,197,0,200,255,201,10,190,211,191,0,195,216,196,10,179,190,194,0,187,195,209,10,234,179,184,0,245,187,252,10,240,199,172,0,254,202,181,10,230,241,172,0,241,256,181,10,164,171,155,0,171,180,163,10,154,165,155,0,162,172,163,10,153,152,145,0,161,160,257,10,245,242,244,0,271,258,260,10,247,244,246,0,262,260,261,10,249,244,248,0,264,260,263,10,245,244,250,0,271,260,265,10,118,45,238,0,118,43,250,10,235,239,236,0,269,251,248,10,237,180,234,0,249,268,245,10,167,229,34,0,175,240,31,10,166,230,167,0,174,241,175,10,166,171,230,0,174,180,241,10,170,231,171,0,179,242,180,10,170,169,231,0,178,177,247,10,168,239,169,0,176,251,177,10,36,118,168,0,322,118,176,10,178,175,189,0,186,184,194,10,243,242,177,0,259,258,185,10,252,242,253,0,270,258,272,10,180,237,246,0,268,249,261,10,180,246,177,0,268,261,185,10,236,251,248,0,248,267,263,10,236,248,237,0,248,263,249,10,254,250,251,0,273,265,267,10,238,254,239,0,250,273,251,10,175,178,252,0,184,186,270,10,211,210,215,0,216,215,255,10,196,202,215,0,200,205,255,10,195,203,196,0,199,206,200,10,221,226,195,0,227,235,274,10,157,20,255,0,165,17,276,10,256,154,255,0,277,162,276,10,257,165,256,0,278,172,277,10,258,163,257,0,284,173,278,10,258,259,163,0,283,279,280,10,259,260,161,0,279,281,169,10,141,22,260,0,282,19,281,10,146,9,260,0,154,153,281,10,148,146,259,0,156,154,279,10,150,148,258,0,158,156,283,10,257,152,258,0,278,160,284,10,256,142,257,0,277,149,278,10,255,143,256,0,276,150,277,10,134,5,255,0,275,152,276,10,1,5,135,0,1,152,143,10,2,1,136,0,2,1,144,10,15,2,137,0,12,2,145,10,13,15,138,0,13,12,285,10,139,11,138,0,146,8,147,10,140,8,139,0,148,6,146,10,141,9,140,0,282,153,148,10,262,100,261,0,328,286,287,10,263,105,262,0,313,288,289,10,102,101,265,0,98,97,291,10,95,102,266,0,88,98,292,10,96,95,267,0,89,88,293,10,268,103,267,0,294,142,293,10,269,97,268,0,296,92,294,10,270,98,269,0,329,295,296,10,261,99,271,0,287,95,297,10,227,223,273,0,237,230,299,10,221,220,275,0,227,226,301,10,275,276,221,0,301,302,227,10,218,226,277,0,222,235,303,10,278,219,277,0,304,223,303,10,279,224,278,0,305,231,304,10,280,225,279,0,306,232,305,10,228,225,281,0,239,232,307,10,223,222,272,0,230,229,298,10,222,228,282,0,311,239,309,10,188,206,222,0,330,310,311,10,187,207,188,0,193,212,312,10,240,233,187,0,254,244,193,10,231,233,241,0,242,244,256,10,264,101,263,0,290,97,313,10,101,54,105,0,97,96,288,10,53,81,54,0,315,121,314,10,113,111,53,0,316,112,315,10,227,273,220,0,237,299,226,10,198,204,220,0,225,317,226,10,205,204,197,0,208,207,201,10,205,197,200,0,208,201,203,10,201,200,217,0,204,203,221,10,93,75,217,0,85,67,221,10,73,75,91,0,66,67,83,10,87,74,91,0,80,319,83,10,87,68,74,0,80,62,319,10,78,68,79,0,70,62,321,10,104,79,98,0,102,101,295,10,270,271,98,0,329,297,295],
								"materials": [
									{
										"blending": "NormalBlending",
										"specularCoef": 50,
										"depthWrite": true,
										"opacity": 1,
										"transparent": false,
										"doubleSided": true,
										"colorDiffuse": [1,1,1],
										"shading": "standard",
										"DbgColor": 15658734,
										"colorEmissive": [0,0,0],
										"wireframe": false,
										"colorSpecular": [0.5,0.5,0.5],
										"DbgName": "HFTshirtMaterial",
										"depthTest": true,
										"DbgIndex": 0,
										"visible": true
									}]
							},
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "6ABD9AB3-4408-457B-A53D-28573B621373",
							"type": "Group",
							"name": "hf frilly  skirt",
							"userData": {
								"uvs": [[0.6952,0.8543,0.7036,0.8541,0.7036,0.7578,0.5725,0.8528,0.5808,0.8534,0.5808,0.7578,0.4504,0.8443,0.4579,0.8455,0.4579,0.7578,0.417,0.8411,0.4243,0.8422,0.417,0.7578,0.3284,0.8354,0.3351,0.8363,0.3351,0.7578,0.2942,0.8343,0.3009,0.8346,0.2942,0.7578,0.2058,0.8331,0.2123,0.8333,0.2123,0.7578,0.1714,0.8338,0.1779,0.8333,0.1714,0.7578,0.0826,0.8369,0.0895,0.8364,0.0895,0.7578,0.0486,0.8397,0.0556,0.8387,0.0486,0.7578,0.9492,0.8462,0.9492,0.7578,0.9415,0.847,0.9083,0.8494,0.9161,0.8487,0.9083,0.7578,0.8183,0.8508,0.8264,0.8501,0.8264,0.7578,0.7854,0.8519,0.7936,0.8517,0.7854,0.7578,0.6626,0.8536,0.671,0.8541,0.6626,0.7578,0.5398,0.8508,0.548,0.8519,0.5398,0.7578,0.859,0.8483,0.8666,0.7578,0.8669,0.8514,0.875,0.8507,0.9764,0.7578,0.974,0.8437,0.0122,0.843,0.0195,0.8423,0.0148,0.7578,0.1216,0.8362,0.1273,0.7578,0.1284,0.836,0.1351,0.8355,0.2476,0.8342,0.2548,0.7578,0.2543,0.8346,0.2609,0.8345,0.3716,0.8384,0.3785,0.839,0.3799,0.7578,0.3856,0.8395,0.4933,0.8476,0.5024,0.7578,0.501,0.848,0.5089,0.8488,0.6146,0.8538,0.6229,0.8541,0.6238,0.7578,0.6313,0.8547,0.7521,0.8499,0.7439,0.7578,0.7357,0.8556,0.7442,0.8552,0.9814,0.843,0.6831,0.9938,0.7036,0.9938,0.5603,0.9938,0.5808,0.9938,0.4375,0.9938,0.4579,0.9938,0.417,0.9938,0.3147,0.9938,0.3351,0.9938,0.2942,0.9938,0.1918,0.9938,0.2123,0.9938,0.1714,0.9938,0.069,0.9938,0.0895,0.9938,0.0486,0.9938,0.9287,0.9938,0.9492,0.9938,0.9083,0.9938,0.8059,0.9938,0.8264,0.9938,0.7854,0.9938,0.6626,0.9938,0.5398,0.9938,0.8469,0.9938,0.8673,0.9938,0.8878,0.9938,0.9697,0.9938,0.0076,0.9938,0.0281,0.9938,0.11,0.9938,0.1304,0.9938,0.1509,0.9938,0.2328,0.9938,0.2533,0.9938,0.2737,0.9938,0.3556,0.9938,0.3761,0.9938,0.3965,0.9938,0.4784,0.9938,0.4989,0.9938,0.5193,0.9938,0.6012,0.9938,0.6217,0.9938,0.6422,0.9938,0.765,0.9938,0.724,0.9938,0.7445,0.9938,0.9901,0.9938]],
								"vertices": [2.4013,17.5203,0.760642,2.14464,17.4684,1.29487,1.66074,17.4414,1.54885,0.987245,17.3786,2.171,1.40492,17.4096,1.87001,0.473525,17.3719,2.20691,-0.51556,17.3529,2.34123,0.000115,17.3526,2.38023,-0.910195,17.3775,2.05178,-1.41496,17.391,1.87302,-1.82823,17.4116,1.625,-1.97836,17.4462,1.2466,-2.42393,17.4899,0.749652,-2.40878,17.5465,0.148757,-1.92568,17.5917,-0.299363,-1.68505,17.6466,-0.867203,-1.15369,17.6745,-1.12756,-0.461945,17.6755,-1.09013,0.000115,17.6989,-1.30738,0.52059,17.6993,-1.27584,1.03512,17.6717,-0.945543,1.67297,17.6668,-0.849963,2.18783,17.5706,0.210167,2.10337,17.6254,-0.379453,2.31894,15.8602,2.1756,3.74344,13.4455,2.65185,3.41568,16.2019,0.267147,5.11106,13.9985,-0.557658,2.21591,16.5739,-1.81033,3.30266,14.3863,-3.73255,-0.05144,16.684,-2.42545,-0.16102,14.527,-4.80179,-2.5094,16.4287,-0.999593,-3.62192,14.2122,-2.33417,-3.3361,16.1826,0.375107,-4.88007,13.9698,-0.258858,-0.888655,15.7509,2.7863,-1.43521,13.4041,3.43829,1.67734,15.7791,2.62887,2.71876,13.3651,3.31985,2.97997,16.29,-0.224868,2.85765,16.3211,-0.398743,4.04353,14.109,-1.47679,4.36559,14.05,-0.985838,3.35378,16.1049,0.808797,3.49074,16.1628,0.485547,5.28475,13.9275,0.032547,2.62311,16.0217,1.27345,3.22888,16.0686,1.01176,4.93698,13.8633,0.565757,4.10539,13.8351,0.849282,2.3722,15.9593,1.62249,2.43886,15.9919,1.44041,3.62186,13.788,1.27555,3.51692,13.5745,1.74098,1.9456,15.7897,2.56926,2.18994,15.823,2.38322,3.39733,13.3829,3.17255,0.70218,15.8049,2.48469,0.91497,15.8191,2.40552,1.60537,13.3904,2.71614,1.02778,13.5734,2.88023,0.14127,15.7317,2.89323,0.516885,15.7867,2.58605,0.578215,13.5447,3.12231,0.346065,13.3802,3.63752,-0.543545,15.7246,2.93294,-0.23886,15.7202,2.95752,-0.584165,13.3616,3.79166,-1.39159,15.8481,2.24356,-1.19972,15.8191,2.40541,-1.61553,13.5809,2.91331,-2.09036,13.628,2.52194,-2.22819,15.8617,2.1674,-1.64933,15.8593,2.18056,-2.72671,13.6464,2.36826,-3.4223,13.6162,2.59965,-2.75996,15.9173,1.85658,-2.52219,15.8904,2.00702,-4.16531,13.6635,2.20588,-2.76899,16.0487,1.1228,-2.84862,15.9677,1.57513,-4.41685,13.7486,1.49849,-4.02991,13.82,0.925362,-2.85697,16.1109,0.775452,-2.7658,16.087,0.909242,-4.03993,13.8877,0.363367,-4.28883,13.9348,0.007607,-3.37325,16.305,-0.308793,-3.40643,16.2389,0.060797,-5.10603,14.0747,-1.13083,-2.63507,16.4101,-0.895308,-3.19052,16.354,-0.582308,-4.62243,14.1698,-1.92141,-3.97454,14.1789,-2.02058,-2.36174,16.555,-1.70488,-2.46748,16.4573,-1.15926,-3.51205,14.2703,-2.81709,-3.72024,14.3636,-3.38656,-1.81722,16.6249,-2.09502,-2.18067,16.5953,-1.9302,-3.1924,14.4494,-4.10011,-0.85346,16.6155,-2.04278,-1.50556,16.6388,-2.17292,-2.23909,14.4798,-4.35213,-1.66621,14.4151,-4.02041,-0.47534,16.629,-2.11813,-0.663355,16.6138,-2.0335,-1.08118,14.4115,-3.9905,-0.5033,14.4444,-4.26412,0.569465,16.6913,-2.46593,0.21486,16.6944,-2.48338,0.67327,14.5501,-4.99374,1.23039,16.6,-1.95631,0.813895,16.6712,-2.35361,1.43167,14.5056,-4.62366,1.62826,14.4166,-4.0157,1.60098,16.5692,-1.78392,1.38885,16.5779,-1.83282,2.10309,14.3696,-3.62434,2.73944,14.3511,-3.47066,2.78911,16.4988,-1.39094,2.48806,16.5509,-1.68167,4.1043,14.338,-3.33087,2.84824,16.3562,-0.594538,2.8868,16.4531,-1.13553,4.36222,14.2452,-2.55941,4.0335,14.1767,-2.03878],
								"metadata": {
									"type": "Geometry",
									"vertices": 128,
									"version": 3,
									"uvs": 1,
									"materials": 1,
									"bones": 45,
									"generator": "io_three",
									"faces": 112
								},
								"bones": [
									{
										"name": "Genitals",
										"rotq": [0,0,0,1],
										"parent": -1,
										"pos": [-0.000027,15.0028,0.169405]
									},
									{
										"name": "1.Hips",
										"rotq": [0,0,0,1],
										"parent": 0,
										"pos": [0.000027,0.144162,0.321899]
									},
									{
										"name": "2.LowerBack",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "3.Spine",
										"rotq": [0,0,0,1],
										"parent": 2,
										"pos": [0.008712,3.25595,0.069768]
									},
									{
										"name": "4.Chest",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "5.Neck",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "6.Head",
										"rotq": [0,0,0,1],
										"parent": 5,
										"pos": [-0.023034,1.46401,0.411038]
									},
									{
										"name": "7.LeftScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "8.LeftArm",
										"rotq": [0,0,0,1],
										"parent": 7,
										"pos": [2.52983,-0.937077,-0.361347]
									},
									{
										"name": "9.LeftForeArm",
										"rotq": [0,0,0,1],
										"parent": 8,
										"pos": [3.19505,-2.63784,0.444198]
									},
									{
										"name": "10.LeftHand",
										"rotq": [0,0,0,1],
										"parent": 9,
										"pos": [3.19611,-2.32051,1.02422]
									},
									{
										"name": "11.LeftHandFinger",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "12.LeftHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 11,
										"pos": [0.476265,-0.405676,0.16763]
									},
									{
										"name": "13.LeftHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 12,
										"pos": [0.366805,-0.348112,0.094266]
									},
									{
										"name": "14.LeftThumbBone",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "15.LeftThumb",
										"rotq": [0,0,0,1],
										"parent": 14,
										"pos": [-1.1345,0.465408,0.302213]
									},
									{
										"name": "16.LeftThumb1",
										"rotq": [0,0,0,1],
										"parent": 15,
										"pos": [0.180056,-0.478939,0.60054]
									},
									{
										"name": "17.LeftThumb2",
										"rotq": [0,0,0,1],
										"parent": 16,
										"pos": [0.092886,-0.289543,0.386178]
									},
									{
										"name": "18.RightScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "19.RightArm",
										"rotq": [0,0,0,1],
										"parent": 18,
										"pos": [-2.52867,-0.937096,-0.361214]
									},
									{
										"name": "20.RightForeArm",
										"rotq": [0,0,0,1],
										"parent": 19,
										"pos": [-3.19598,-2.63734,0.444101]
									},
									{
										"name": "21.RightHand",
										"rotq": [0,0,0,1],
										"parent": 20,
										"pos": [-3.196,-2.32064,1.032]
									},
									{
										"name": "22.RightHandFinger",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "23.RightHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 22,
										"pos": [-0.499381,-0.387148,0.109694]
									},
									{
										"name": "24.RightHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 23,
										"pos": [-0.373054,-0.338717,0.107148]
									},
									{
										"name": "25.RightThumbBone",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "26.RightThumb",
										"rotq": [0,0,0,1],
										"parent": 25,
										"pos": [1.19745,0.436272,0.257659]
									},
									{
										"name": "27.RightThumb1",
										"rotq": [0,0,0,1],
										"parent": 26,
										"pos": [-0.176136,-0.458651,0.585481]
									},
									{
										"name": "28.RightThumb2",
										"rotq": [0,0,0,1],
										"parent": 27,
										"pos": [-0.070728,-0.239492,0.362029]
									},
									{
										"name": "29.LeftBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "30.LeftBoobBone",
										"rotq": [0,0,0,1],
										"parent": 29,
										"pos": [1.79366,0.798965,-0.440115]
									},
									{
										"name": "31.RightBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "32.RightBoobBone",
										"rotq": [0,0,0,1],
										"parent": 31,
										"pos": [-1.73021,0.798965,-0.440115]
									},
									{
										"name": "33.RightHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "34.RightButt",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "35.RightUpLeg",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "36.RightLeg",
										"rotq": [0,0,0,1],
										"parent": 35,
										"pos": [-0.851619,-7.12582,-0.664236]
									},
									{
										"name": "37.RightFoot",
										"rotq": [0,0,0,1],
										"parent": 36,
										"pos": [-0.7531,-6.81598,-0.370799]
									},
									{
										"name": "38.RightToeBase",
										"rotq": [0,0,0,1],
										"parent": 37,
										"pos": [-0.3779,-2.27964,0.987525]
									},
									{
										"name": "39.LeftHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "40.LeftButt",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "41.LeftUpLeg",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "42.LeftLeg",
										"rotq": [0,0,0,1],
										"parent": 41,
										"pos": [0.852048,-7.1256,-0.664335]
									},
									{
										"name": "43.LeftFoot",
										"rotq": [0,0,0,1],
										"parent": 42,
										"pos": [0.753052,-6.8162,-0.3707]
									},
									{
										"name": "44.LeftToeBase",
										"rotq": [0,0,0,1],
										"parent": 43,
										"pos": [0.377549,-2.27926,0.988361]
									}],
								"name": "rlc_female_frilly_skirt2Geometry.v6",
								"skinIndices": [40,41,1,0,40,41,1,0,40,41,1,0,1,41,40,35,1,41,40,0,1,41,40,35,1,35,34,41,1,35,41,34,1,35,34,41,1,35,34,0,34,35,1,0,34,35,1,0,34,35,1,0,34,35,0,0,34,35,0,0,34,35,0,0,34,40,1,35,34,1,40,0,1,40,34,0,40,1,34,0,40,1,34,0,40,41,0,0,40,41,0,0,40,41,0,0,41,40,1,0,41,40,35,1,40,41,0,0,41,40,0,0,40,41,0,0,41,40,35,34,40,34,0,0,40,35,34,41,34,35,0,0,35,34,40,0,35,34,0,0,35,34,0,0,35,1,34,41,35,41,1,34,41,40,1,0,41,40,35,1,40,41,0,0,40,41,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,1,0,41,40,1,0,41,40,35,1,1,41,40,35,1,41,40,35,41,35,1,40,41,35,1,40,1,35,41,40,1,41,40,35,41,35,1,40,35,41,1,40,1,35,34,41,1,35,41,34,35,41,1,34,35,34,1,0,35,34,1,41,35,34,41,1,35,34,1,41,35,34,1,0,35,34,1,0,35,34,1,41,35,34,41,1,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,34,35,0,0,35,34,0,0,35,34,0,0,34,35,0,0,34,35,0,0,35,34,40,0,35,34,40,0,34,35,0,0,34,35,0,0,35,34,40,0,35,34,40,0,34,35,40,0,34,35,0,0,35,34,40,41,34,40,0,0,34,40,35,0,35,34,40,41,35,34,40,41,34,40,0,0,34,40,0,0,35,40,34,41,40,35,34,41,40,34,0,0,40,34,0,0,40,41,35,34,40,34,0,0,40,34,0,0,40,41,35,34,40,41,35,34,40,41,0,0,40,0,0,0,40,41,34,35,40,41,34,35,40,41,0,0,40,41,0,0,41,40,35,34,40,41,0,0,40,41,0,0,41,40,0,0,41,40,0,0],
								"skinWeights": [0.168952,0.122793,0.018212,0,0.146829,0.12708,0.058183,0,0.12089,0.116367,0.09817,0,0.216446,0.091958,0.082198,0.010583,0.140799,0.108636,0.104766,0,0.320547,0.071841,0.059757,0.038486,0.297725,0.08031,0.065426,0.027733,0.338163,0.061004,0.054821,0.041805,0.194399,0.096594,0.086548,0.002036,0.127948,0.115675,0.110591,0,0.130592,0.128159,0.085813,0,0.144777,0.128063,0.057902,0,0.171465,0.131731,0.020346,0,0.201711,0.113217,0,0,0.22925,0.070571,0,0,0.271293,0.042926,0,0,0.261325,0.027223,0.019286,0.002623,0.177499,0.078548,0.067553,0,0.134995,0.126889,0.104693,0,0.208702,0.071994,0.062357,0,0.240202,0.020127,0.011617,0,0.266526,0.037851,0,0,0.195109,0.100548,0,0,0.237661,0.073891,0,0,0.331726,0.278676,0.034081,0,0.656942,0.11404,0.024836,0.023396,0.346558,0.333507,0,0,0.678327,0.193122,0,0,0.833173,0.07152,0,0,0.473181,0.389788,0.033012,0.032373,0.574871,0.335514,0,0,0.444006,0.208733,0.180273,0.125675,0.693132,0.126506,0,0,0.576357,0.265752,0.054209,0,0.343748,0.317575,0,0,0.687162,0.161451,0,0,0.176695,0.161799,0.107756,0.040804,0.482245,0.111943,0.084066,0.070695,0.287537,0.232369,0.119071,0,0.596089,0.10227,0.064212,0.05909,0.408869,0.284923,0,0,0.467131,0.251047,0,0,0.610602,0.268578,0,0,0.639804,0.23258,0,0,0.345754,0.321219,0,0,0.344949,0.333779,0,0,0.691478,0.174709,0,0,0.330411,0.306771,0,0,0.346393,0.314637,0,0,0.689456,0.164319,0,0,0.68129,0.152184,0,0,0.327406,0.296031,0,0,0.326424,0.301358,0,0,0.674719,0.141418,0,0,0.671885,0.130165,0,0,0.311156,0.253159,0.082765,0,0.326188,0.268323,0.057232,0,0.634484,0.106912,0.04822,0.042365,0.346989,0.138325,0.091287,0.054632,0.332666,0.160544,0.113972,0.04177,0.500955,0.11254,0.093208,0.082114,0.401,0.157111,0.127848,0.068301,0.24161,0.095806,0.094641,0.050756,0.333435,0.122522,0.075277,0.065016,0.304034,0.216774,0.144854,0.055415,0.296697,0.250064,0.123332,0.04076,0.175222,0.145425,0.078009,0.060795,0.199408,0.123581,0.075148,0.060761,0.399665,0.169443,0.10297,0.053457,0.25933,0.215051,0.112874,0,0.221742,0.168491,0.167771,0.005193,0.517094,0.083724,0.081314,0.074744,0.571976,0.098578,0.057093,0.055215,0.327251,0.274824,0.022134,0,0.288487,0.244359,0.076603,0,0.616851,0.110474,0.029684,0.026582,0.65426,0.115901,0.006852,0.003666,0.349398,0.291554,0,0,0.339573,0.284028,0,0,0.682915,0.119788,0,0,0.334599,0.305922,0,0,0.348777,0.296904,0,0,0.69282,0.127196,0,0,0.687463,0.139916,0,0,0.332395,0.311095,0,0,0.330375,0.309566,0,0,0.683834,0.14972,0,0,0.682754,0.156003,0,0,0.336744,0.335181,0,0,0.342318,0.323787,0,0,0.67851,0.177126,0,0,0.642077,0.154986,0,0,0.35691,0.319014,0,0,0.647154,0.206469,0.016939,0,0.60885,0.236726,0.035331,0,0.807187,0.080947,0,0,0.730561,0.110324,0,0,0.550477,0.282891,0.070279,0,0.538662,0.28106,0.090644,0,0.858201,0.043256,0.011953,0,0.83052,0.06829,0,0,0.497337,0.283655,0.129383,0.015727,0.829754,0.097147,0,0,0.861103,0.039294,0.021181,0,0.433488,0.288427,0.182501,0.042537,0.373174,0.297998,0.225629,0.057108,0.657733,0.253911,0,0,0.76446,0.155833,0,0,0.314324,0.287661,0.280906,0.072856,0.37893,0.244801,0.23523,0.097952,0.791393,0.129469,0,0,0.679507,0.232268,0,0,0.485796,0.172618,0.16051,0.140063,0.903719,0.000795,0,0,0.839462,0.081951,0,0,0.505446,0.226781,0.116982,0.108761,0.509888,0.271753,0.08778,0.086799,0.884855,0.008687,0,0,0.902128,0,0,0,0.476991,0.346891,0.064979,0.064708,0.435727,0.415677,0.047825,0.047373,0.745995,0.124889,0,0,0.797629,0.094238,0,0,0.534025,0.342883,0.011499,0.010445,0.555307,0.20793,0,0,0.693105,0.150155,0,0,0.569608,0.314851,0,0,0.58252,0.301964,0,0],
								"influencesPerVertex": 4,
								"faces": [10,67,62,7,0,0,1,2,10,78,73,9,0,3,4,5,10,89,34,12,0,6,7,8,10,92,88,13,0,9,10,11,10,100,95,15,0,12,13,14,10,103,99,16,0,15,16,17,10,111,30,18,0,18,19,20,10,114,110,19,0,21,22,23,10,122,28,21,0,24,25,26,10,125,121,23,0,27,28,29,10,26,0,45,0,30,31,32,10,48,44,1,0,33,34,35,10,56,24,4,0,36,37,38,10,38,55,3,0,39,40,41,10,36,66,6,0,42,43,44,10,81,77,10,0,45,46,47,11,24,51,2,4,0,37,48,49,38,10,52,47,2,0,50,51,49,11,22,0,26,40,0,52,31,30,53,10,41,124,22,0,54,55,56,11,28,117,20,21,0,25,57,58,26,10,118,113,20,0,59,60,58,11,30,106,17,18,0,19,61,62,20,10,107,102,17,0,63,64,62,10,96,32,14,0,65,66,67,10,32,91,14,0,66,68,67,11,34,84,11,12,0,7,69,70,8,10,85,80,11,0,71,72,70,10,74,69,8,0,73,74,75,11,70,36,6,8,0,76,42,44,75,11,59,38,3,5,0,77,39,41,78,10,63,58,5,0,79,80,78,10,40,41,22,0,53,81,52,11,0,1,44,45,0,31,35,34,32,11,47,48,1,2,0,51,33,35,49,10,51,52,2,0,48,50,49,11,55,56,4,3,0,40,36,38,41,10,58,59,5,0,80,77,78,11,62,63,5,7,0,1,79,78,2,11,66,67,7,6,0,43,0,2,44,10,69,70,8,0,74,76,75,11,73,74,8,9,0,4,73,75,5,11,77,78,9,10,0,46,3,5,47,11,80,81,10,11,0,72,45,47,70,10,84,85,11,0,69,71,70,11,88,89,12,13,0,10,6,8,11,11,91,92,13,14,0,68,9,11,67,11,95,96,14,15,0,13,65,67,14,11,99,100,15,16,0,16,12,14,17,11,102,103,16,17,0,64,15,17,62,10,106,107,17,0,61,63,62,11,110,111,18,19,0,22,18,20,23,11,113,114,19,20,0,60,21,23,58,10,117,118,20,0,57,59,58,11,121,122,21,23,0,28,24,26,29,11,124,125,23,22,0,55,27,29,56,11,68,65,62,67,0,82,83,1,0,11,79,76,73,78,0,84,85,4,3,11,90,35,34,89,0,86,87,7,6,11,93,90,88,92,0,88,86,10,9,11,101,98,95,100,0,89,90,13,12,11,104,101,99,103,0,91,89,16,15,11,112,31,30,111,0,92,93,19,18,11,115,112,110,114,0,94,92,22,21,11,123,29,28,122,0,95,96,25,24,11,126,123,121,125,0,97,95,28,27,11,46,27,26,45,0,98,99,30,32,11,49,46,44,48,0,100,98,34,33,11,57,25,24,56,0,101,102,37,36,11,39,57,55,38,0,103,101,40,39,11,37,68,66,36,0,104,82,43,42,11,82,79,77,81,0,105,84,46,45,11,25,54,51,24,0,102,106,48,37,11,53,50,47,52,0,107,108,51,50,11,27,43,40,26,0,99,109,53,30,11,42,127,124,41,0,110,111,55,54,11,29,120,117,28,0,96,112,57,25,11,119,116,113,118,0,113,114,60,59,11,31,109,106,30,0,93,115,61,19,11,108,105,102,107,0,116,117,64,63,11,97,33,32,96,0,118,119,66,65,11,33,94,91,32,0,119,120,68,66,11,35,87,84,34,0,87,121,69,7,11,86,83,80,85,0,122,123,72,71,11,75,72,69,74,0,124,125,74,73,11,71,37,36,70,0,126,104,42,76,11,60,39,38,59,0,127,103,39,77,11,64,61,58,63,0,128,129,80,79,11,43,42,41,40,0,109,130,81,53,10,46,45,44,0,98,32,34,11,50,49,48,47,0,108,100,33,51,11,54,53,52,51,0,106,107,50,48,10,57,56,55,0,101,36,40,11,61,60,59,58,0,129,127,77,80,11,65,64,63,62,0,83,128,79,1,10,68,67,66,0,82,0,43,11,72,71,70,69,0,125,126,76,74,11,76,75,74,73,0,85,124,73,4,10,79,78,77,0,84,3,46,11,83,82,81,80,0,123,105,45,72,11,87,86,85,84,0,121,122,71,69,10,90,89,88,0,86,6,10,11,94,93,92,91,0,120,88,9,68,11,98,97,96,95,0,90,118,65,13,10,101,100,99,0,89,12,16,11,105,104,103,102,0,117,91,15,64,11,109,108,107,106,0,115,116,63,61,10,112,111,110,0,92,18,22,11,116,115,114,113,0,114,94,21,60,11,120,119,118,117,0,112,113,59,57,10,123,122,121,0,95,24,28,11,127,126,125,124,0,111,97,27,55],
								"materials": [
									{
										"blending": "NormalBlending",
										"specularCoef": 50,
										"depthWrite": true,
										"opacity": 1,
										"transparent": false,
										"doubleSided": true,
										"colorDiffuse": [1,1,1],
										"shading": "standard",
										"DbgColor": 15658734,
										"colorEmissive": [0,0,0],
										"wireframe": false,
										"colorSpecular": [0.5,0.5,0.5],
										"DbgName": "HFFlirtySkirtMaterial",
										"depthTest": true,
										"DbgIndex": 0,
										"visible": true
									}]
							},
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "677F0360-845D-4A0B-B1DF-8D33676B44EC",
							"type": "Group",
							"name": "hf frilly dress",
							"userData": {
								"uvs": [[0.6952,0.8543,0.7036,0.8541,0.7036,0.7578,0.5725,0.8528,0.5808,0.8534,0.5808,0.7578,0.4504,0.8443,0.4579,0.8455,0.4579,0.7578,0.417,0.8411,0.4243,0.8422,0.417,0.7578,0.3284,0.8354,0.3351,0.8363,0.3351,0.7578,0.2942,0.8343,0.3009,0.8346,0.2942,0.7578,0.2058,0.8331,0.2123,0.8333,0.2123,0.7578,0.1714,0.8338,0.1779,0.8333,0.1714,0.7578,0.0826,0.8369,0.0895,0.8364,0.0895,0.7578,0.0486,0.8397,0.0556,0.8387,0.0486,0.7578,0.9492,0.8462,0.9492,0.7578,0.9415,0.847,0.9083,0.8494,0.9161,0.8487,0.9083,0.7578,0.8183,0.8508,0.8264,0.8501,0.8264,0.7578,0.7854,0.8519,0.7936,0.8517,0.7854,0.7578,0.6626,0.8536,0.671,0.8541,0.6626,0.7578,0.5398,0.8508,0.548,0.8519,0.5398,0.7578,0.859,0.8483,0.8666,0.7578,0.8669,0.8514,0.875,0.8507,0.974,0.8437,0.0122,0.843,0.0195,0.8423,0.0148,0.7578,0.1216,0.8362,0.1273,0.7578,0.1284,0.836,0.1351,0.8355,0.2476,0.8342,0.2548,0.7578,0.2543,0.8346,0.2609,0.8345,0.3716,0.8384,0.3785,0.839,0.3799,0.7578,0.3856,0.8395,0.4933,0.8476,0.5024,0.7578,0.501,0.848,0.5089,0.8488,0.6146,0.8538,0.6229,0.8541,0.6238,0.7578,0.6313,0.8547,0.7521,0.8499,0.7357,0.8556,0.7442,0.8552,0.7439,0.7578,0.9814,0.843,0.9764,0.7578,0.7036,0.9938,0.5808,0.9938,0.4579,0.9938,0.417,0.9938,0.4375,0.9938,0.3351,0.9938,0.2942,0.9938,0.3147,0.9938,0.2123,0.9938,0.1714,0.9938,0.1918,0.9938,0.0895,0.9938,0.0486,0.9938,0.069,0.9938,0.9492,0.9938,0.9083,0.9938,0.9287,0.9938,0.8264,0.9938,0.7854,0.9938,0.8059,0.9938,0.6626,0.9938,0.6831,0.9938,0.5603,0.9938,0.8469,0.9938,0.8673,0.9938,0.8878,0.9938,0.9697,0.9938,0.0076,0.9938,0.0281,0.9938,0.11,0.9938,0.1304,0.9938,0.1509,0.9938,0.2328,0.9938,0.2533,0.9938,0.2737,0.9938,0.3761,0.9938,0.3965,0.9938,0.4784,0.9938,0.5193,0.9938,0.6217,0.9938,0.6422,0.9938,0.765,0.9938,0.7445,0.9938,0.9901,0.9938,0.724,0.9938,0.6012,0.9938,0.5398,0.9938,0.4989,0.9938,0.3556,0.9938,0.1122,0.652,0.1133,0.6138,0.1395,0.6484,0.8869,0.47115,0.8544,0.5065,0.8537,0.4395,0.1465,0.7062,0.11595,0.68045,0.8497,0.3833,0.8466,0.3363,0.8775,0.3564,0.1927,0.6095,0.1941,0.5586,0.2485,0.569,0.195,0.5065,0.2554,0.5065,0.7939,0.5065,0.7906,0.5683,0.7437,0.5626,0.7932,0.6218,0.7437,0.6169,0.7927,0.6759,0.7387,0.692,0.2453,0.648,0.245,0.6965,0.1959,0.701,0.2689,0.566,0.2666,0.6151,0.2727,0.5065,0.7183,0.5594,0.7367,0.5065,0.7244,0.6147,0.7241,0.6933,0.2655,0.6399,0.2574,0.7003,0.3115,0.6054,0.3097,0.5746,0.3646,0.5589,0.3143,0.5065,0.3598,0.5065,0.6776,0.5065,0.6723,0.5243,0.6337,0.528,0.6254,0.5951,0.6256,0.5555,0.6402,0.5712,0.6829,0.6971,0.6774,0.6977,0.6627,0.6629,0.3231,0.6477,0.3793,0.616,0.3892,0.6413,0.6205,0.5065,0.5678,0.5416,0.5763,0.5065,0.5647,0.5852,0.5996,0.6432,0.5533,0.6337,0.5529,0.6069,0.4422,0.5987,0.472,0.6003,0.4689,0.6287,0.381,0.5976,0.3967,0.5488,0.3939,0.5065,0.5015,0.6308,0.512,0.6034,0.4111,0.6072,0.6089,0.6155,0.6616,0.636,0.323,0.6599,0.3131,0.6802,0.5489,0.5339,0.5601,0.5065,0.5282,0.554,0.5151,0.5897,0.4949,0.5704,0.4428,0.5779,0.4496,0.5523,0.4703,0.5605,0.4282,0.5389,0.4399,0.5321,0.4273,0.5065,0.4356,0.5065,0.4457,0.1836,0.4138,0.1889,0.4187,0.1624,0.4594,0.1105,0.462,0.1234,0.425,0.1196,0.4432,0.0241,0.4526,0.0743,0.4202,0.0677,0.4477,0.2544,0.4185,0.2553,0.4225,0.2286,0.4651,0.1387,0.4476,0.1573,0.4561,0.0926,0.4221,0.0857,0.4524,0.228,0.4449,0.2831,0.4432,0.3006,0.4209,0.3021,0.2803,0.5639,0.2836,0.5065,0.2783,0.6145,0.2801,0.6379,0.3109,0.6344,0.3006,0.6669,0.7149,0.6941,0.6891,0.6964,0.6747,0.6148,0.6896,0.5926,0.7106,0.6131,0.7084,0.5065,0.7027,0.5769,0.6965,0.5336,0.3118,0.6711,0.4718,0.5836,0.2469,0.6157,0.1936,0.6416,0.1412,0.5065,0.1412,0.5751,0.11315,0.5455,0.6743,0.5737,0.6573,0.5709,0.6593,0.5573,0.6749,0.5879,0.6606,0.5842,0.685,0.5854,0.6837,0.5594,0.6861,0.5734,0.6493,0.5906,0.2652,0.7027,0.672,0.5418,0.6727,0.5557,0.6762,0.6033,0.6943,0.5772,0.6878,0.5528,0.6475,0.5494,0.4262,0.1389,0.1679,0.5659,0.1659,0.6122,0.1664,0.6449,0.8208,0.6257,0.8178,0.6772,0.8211,0.5705,0.1395,0.3661,0.1398,0.4012,0.1133,0.4004,0.8791,0.6364,0.8775,0.6582,0.8497,0.631,0.1412,0.4386,0.11315,0.46795,0.8829,0.6072,0.8867,0.4358,0.8829,0.4069,0.1142,0.5845,0.1398,0.613,0.1927,0.4046,0.2469,0.3985,0.2485,0.4447,0.1941,0.455,0.7437,0.451,0.7906,0.4454,0.7437,0.3973,0.7932,0.3925,0.7387,0.323,0.2453,0.3665,0.1936,0.3728,0.1959,0.3141,0.2666,0.3991,0.2689,0.4476,0.7183,0.4542,0.7244,0.3995,0.7241,0.3217,0.2574,0.3148,0.2655,0.3746,0.3115,0.4087,0.3646,0.4547,0.3097,0.4391,0.6337,0.4852,0.6402,0.4425,0.6256,0.458,0.6254,0.4188,0.6627,0.3518,0.6774,0.3173,0.6829,0.3179,0.3892,0.3732,0.3793,0.3982,0.3231,0.3668,0.5678,0.4718,0.5647,0.4287,0.5529,0.4072,0.5533,0.3806,0.5996,0.3713,0.4689,0.3857,0.472,0.4138,0.4422,0.4153,0.381,0.4164,0.4121,0.4262,0.3967,0.4647,0.512,0.4107,0.5015,0.3836,0.4156,0.3803,0.4111,0.4069,0.6089,0.3987,0.2967,0.3018,0.3124,0.3334,0.3121,0.3442,0.5489,0.4794,0.5282,0.4595,0.4949,0.4433,0.5151,0.4243,0.4703,0.4531,0.4496,0.4612,0.4428,0.4359,0.4399,0.4812,0.4282,0.4745,0.8666,0.1624,0.8616,0.189,0.8932,0.1837,0.907,0.1102,0.8718,0.1031,0.8729,0.1193,0.8908,0.0232,0.8686,0.0247,0.8681,0.0671,0.8704,0.229,0.8663,0.2559,0.8952,0.255,0.9127,0.1385,0.8741,0.1387,0.9002,0.0737,0.87,0.0852,0.9,0.2285,0.8676,0.281,0.2803,0.4498,0.2783,0.3997,0.2652,0.3124,0.2871,0.3057,0.3019,0.3519,0.6747,0.3994,0.6891,0.3186,0.7149,0.3209,0.6896,0.4214,0.6762,0.4108,0.6965,0.4797,0.7027,0.4369,0.6616,0.3784,0.2921,0.3037,0.3109,0.38,0.4718,0.4302,0.2801,0.3766,0.6593,0.4563,0.6573,0.4428,0.6743,0.4401,0.6606,0.4296,0.6749,0.426,0.685,0.4285,0.6861,0.4403,0.6837,0.4542,0.6723,0.4889,0.6943,0.4366,0.6493,0.4233,0.7106,0.401,0.6475,0.4641,0.6727,0.4578,0.672,0.4716,0.6878,0.4607,0.9096,0.1231,0.1699,0.5065,0.1679,0.4477,0.1659,0.4019,0.1664,0.3696,0.8208,0.3886,0.7927,0.3389,0.8211,0.4432,0.8221,0.5065,0.8178,0.3377,0.1465,0.309,0.1729,0.3117,0.1729,0.7034,0.8466,0.6786,0.8537,0.5742,0.4209,0.0256,0.3912,0.0617,0.4199,0.2831,0.4009,0.3035,0.3925,0.256,0.3958,0.2291,0.3853,0.1936,0.3929,0.167,0.3914,0.1391,0.4239,0.1034,0.3919,0.1162,0.3917,0.0796,0.8388,0.061,0.8393,0.079,0.8398,0.0966,0.8394,0.1159,0.839,0.1389,0.8405,0.167,0.8328,0.1938,0.8434,0.2295,0.84,0.2566,0.8442,0.2805,0.8484,0.0261,0.8484,0.3044,0.8926,0.2828,0.8686,0.303,0.323,0.3547,0.3967,0.2797,0.2967,0.7134,0.2921,0.7115,0.2871,0.7095,0.9036,0.0921,0.4415,0.3874,0.4121,0.5877,0.4415,0.6269,0.4156,0.634,0.7193,0.5065,0.8871,0.5065,0.8869,0.54225,0.1142,0.4294,0.11595,0.3344,0.8867,0.578,0.1197,0.7089,0.8759,0.68,0.245,0.3185,0.8952,0.1573,0.1122,0.3626,0.4009,0.027,0.3922,0.097,0.8908,0.3015,0.1197,0.3062,0.8791,0.378,0.8759,0.3348,0.1121,0.5065]],
								"vertices": [2.4013,17.5203,0.760642,2.14464,17.4684,1.29487,1.66074,17.4414,1.54885,0.987245,17.3786,2.171,1.40492,17.4096,1.87001,0.473525,17.3719,2.20691,-0.51556,17.3529,2.34123,0.000115,17.3526,2.38023,-0.910195,17.3775,2.05178,-1.41496,17.391,1.87302,-1.82823,17.4116,1.625,-1.97836,17.4462,1.2466,-2.42393,17.4899,0.749652,-2.40878,17.5465,0.148757,-1.92568,17.5917,-0.299363,-1.68505,17.6466,-0.867203,-1.15369,17.6745,-1.12756,-0.461945,17.6755,-1.09013,0.000115,17.6989,-1.30738,0.52059,17.6993,-1.27584,1.03512,17.6717,-0.945543,1.67297,17.6668,-0.849963,2.18783,17.5706,0.210167,2.10337,17.6254,-0.379453,2.31894,15.8602,2.1756,3.74344,13.4455,2.65185,3.41568,16.2019,0.267147,5.11106,13.9985,-0.557658,2.21591,16.5739,-1.81033,3.30266,14.3863,-3.73255,-0.05144,16.684,-2.42545,-0.16102,14.527,-4.80179,-2.5094,16.4287,-0.999593,-3.62192,14.2122,-2.33417,-3.3361,16.1826,0.375107,-4.88007,13.9698,-0.258858,-0.888655,15.7509,2.7863,-1.43521,13.4041,3.43829,1.67734,15.7791,2.62887,2.71876,13.3651,3.31985,2.97997,16.29,-0.224868,2.85765,16.3211,-0.398743,4.04353,14.109,-1.47679,4.36559,14.05,-0.985838,3.35378,16.1049,0.808797,3.49074,16.1628,0.485547,5.28475,13.9275,0.032547,2.62311,16.0217,1.27345,3.22888,16.0686,1.01176,4.93698,13.8633,0.565757,4.10539,13.8351,0.849282,2.3722,15.9593,1.62249,2.43886,15.9919,1.44041,3.62186,13.788,1.27555,3.51692,13.5745,1.74098,1.9456,15.7897,2.56926,2.18994,15.823,2.38322,3.39733,13.3829,3.17255,0.70218,15.8049,2.48469,0.91497,15.8191,2.40552,1.60537,13.3904,2.71614,1.02778,13.5734,2.88023,0.14127,15.7317,2.89323,0.516885,15.7867,2.58605,0.578215,13.5447,3.12231,0.346065,13.3802,3.63752,-0.543545,15.7246,2.93294,-0.23886,15.7202,2.95752,-0.584165,13.3616,3.79166,-1.39159,15.8481,2.24356,-1.19972,15.8191,2.40541,-1.61553,13.5809,2.91331,-2.09036,13.628,2.52194,-2.22819,15.8617,2.1674,-1.64933,15.8593,2.18056,-2.72671,13.6464,2.36826,-3.4223,13.6162,2.59965,-2.75996,15.9173,1.85658,-2.52219,15.8904,2.00702,-4.16531,13.6635,2.20588,-2.76899,16.0487,1.1228,-2.84862,15.9677,1.57513,-4.41685,13.7486,1.49849,-4.02991,13.82,0.925362,-2.85697,16.1109,0.775452,-2.7658,16.087,0.909242,-4.03993,13.8877,0.363367,-4.28883,13.9348,0.007607,-3.37325,16.305,-0.308793,-3.40643,16.2389,0.060797,-5.10603,14.0747,-1.13083,-2.63507,16.4101,-0.895308,-3.19052,16.354,-0.582308,-4.62243,14.1698,-1.92141,-3.97454,14.1789,-2.02058,-2.36174,16.555,-1.70488,-2.46748,16.4573,-1.15926,-3.51205,14.2703,-2.81709,-3.72024,14.3636,-3.38656,-1.81722,16.6249,-2.09502,-2.18067,16.5953,-1.9302,-3.1924,14.4494,-4.10011,-0.85346,16.6155,-2.04278,-1.50556,16.6388,-2.17292,-2.23909,14.4798,-4.35213,-1.66621,14.4151,-4.02041,-0.47534,16.629,-2.11813,-0.663355,16.6138,-2.0335,-1.08118,14.4115,-3.9905,-0.5033,14.4444,-4.26412,0.569465,16.6913,-2.46593,0.21486,16.6944,-2.48338,0.67327,14.5501,-4.99374,1.23039,16.6,-1.95631,0.813895,16.6712,-2.35361,1.43167,14.5056,-4.62366,1.62826,14.4166,-4.0157,1.60098,16.5692,-1.78392,1.38885,16.5779,-1.83282,2.10309,14.3696,-3.62434,2.73944,14.3511,-3.47066,2.78911,16.4988,-1.39094,2.48806,16.5509,-1.68167,4.1043,14.338,-3.33087,2.84824,16.3562,-0.594538,2.8868,16.4531,-1.13553,4.36222,14.2452,-2.55941,4.0335,14.1767,-2.03878,0.80002,18.2487,-0.643638,1.39247,18.222,-0.542533,0,18.2349,-0.719648,0.88994,18.0211,2.01463,0,18.0073,2.26072,1.73064,18.1044,1.4974,2.1136,18.1206,0.780257,1.94545,18.1977,-0.069823,1.21406,19.2282,-0.239698,0.624565,19.2271,-0.461333,0.814675,20.3839,-0.643957,1.38448,20.3981,-0.361902,0,19.1879,-0.575658,0,20.4427,-0.770112,0,19.3195,2.30531,0.880455,19.3587,2.07377,0.905225,20.4191,2.3216,0,20.4779,2.41816,1.56083,19.2779,1.62052,1.69748,20.3889,1.88825,1.83618,19.2836,0.825033,2.00741,20.3722,0.753048,1.5167,19.2564,0.038837,1.70585,20.3894,-0.017407,0.80687,20.8624,-0.775612,1.44747,20.869,-0.516597,0,20.9185,-0.849772,0.9461,21.1609,2.4225,0,21.1434,2.42403,1.77241,20.9167,1.97079,2.04496,20.8915,0.701966,1.73768,20.8933,-0.287407,1.53666,21.9838,-1.01683,1.04407,21.8664,-1.09909,0.886395,23.1382,-1.33073,0,21.9163,-1.16584,0,23.0556,-1.23744,0,22.3575,2.43297,0.37737,22.4,2.48098,0.474655,23.0085,2.20405,0,23.1023,2.10442,1.82932,23.3721,1.79606,1.0392,23.3155,2.07331,1.38396,23.1134,2.20656,1.88476,23.001,2.19317,2.35189,22.5125,0.331448,2.4739,22.4469,0.105988,2.42435,22.8138,0.605193,2.2208,22.6433,1.38674,2.24682,22.5164,-0.888717,1.9306,23.4191,-1.2577,2.37014,23.5102,-1.11772,2.5338,22.6468,-0.847267,0.64906,24.0653,1.44034,0,23.9483,1.58893,1.52566,24.0962,1.19513,2.36597,23.6408,0.855323,2.466,24.1121,0.490923,1.92866,24.1751,0.868513,2.03351,23.5299,1.32819,1.87189,24.4951,-0.6529,1.87195,24.5735,-0.115232,2.51024,24.3972,-0.141847,2.56474,24.3024,-0.609231,1.60795,23.4464,-1.30422,0.711131,23.9156,-1.17893,1.50446,24.0825,-1.0456,0,23.886,-1.14235,2.47656,24.2721,0.350388,1.89208,24.4399,0.461468,1.88549,23.9659,-0.996307,2.4551,23.9141,-0.903237,2.51113,22.5711,-0.486442,2.28525,22.515,-0.442502,0.420685,24.3306,1.23789,0,24.2252,1.39695,0.882636,24.4163,0.950168,1.57851,24.4675,0.584353,1.09749,24.6489,0.497833,1.40292,24.6142,-0.653432,0.766261,24.8411,-0.440557,1.00404,24.8441,-0.048997,1.48298,24.6278,-0.089057,0.539161,24.5861,-0.891557,0.25899,24.7927,-0.605992,0,24.5616,-0.750997,0,24.7947,-0.630687,2.654,23.4049,0.749803,2.83295,23.9538,0.435903,2.89643,24.2339,-0.228867,2.91811,24.093,-0.574417,2.65855,23.3592,-1.04323,2.70815,22.5052,-0.832082,2.69583,22.3055,0.068138,2.65975,22.6629,0.522258,2.87055,24.1489,0.183438,2.78957,23.7762,-0.876467,2.70315,22.4241,-0.466302,0.801975,21.1354,-0.865132,0,21.1899,-0.906642,1.48701,21.1647,-0.613732,1.8133,21.2732,-0.456942,2.02924,22.1013,-0.934572,2.15375,22.1286,-0.278402,2.1225,21.275,0.670269,2.3168,22.1643,0.580853,2.18793,22.3389,1.919,1.87503,21.2998,2.0432,1.87275,21.937,2.41238,2.06117,22.338,2.16305,0,21.5881,2.4456,1.37297,21.5545,2.51107,0.54723,21.832,2.53285,1.51387,22.4557,2.61134,1.42835,22.8622,2.43472,1.11541,22.819,2.53889,1.05726,22.4708,2.65711,1.86973,22.4195,2.45399,1.75093,22.8221,2.38372,1.7387,22.1238,2.49071,1.45406,22.1064,2.60707,1.12139,22.1717,2.69593,1.46492,21.8234,2.53972,0.910542,22.9326,2.38775,0.717415,22.454,2.60461,0.929795,22.0411,2.62569,0,18.6988,-0.581353,0.680435,18.7261,-0.484873,1.22931,18.7123,-0.287573,1.67836,18.7264,-0.011778,1.94462,18.7213,0.809247,1.53351,18.7004,1.51049,0.852475,18.6884,2.02871,0,18.661,2.26703,-1.39247,18.222,-0.542533,-0.80002,18.2487,-0.643638,-0.88994,18.0211,2.01463,-1.73064,18.1044,1.4974,-2.1136,18.1206,0.780257,-1.94545,18.1977,-0.069823,-1.21406,19.2282,-0.239698,-1.38448,20.3981,-0.361902,-0.814675,20.3839,-0.643957,-0.624565,19.2271,-0.461333,-0.905225,20.4191,2.3216,-0.880455,19.3587,2.07377,-1.73269,20.3815,1.91378,-1.63626,19.2647,1.67831,-1.97954,20.3753,0.750244,-1.79217,19.2848,0.823818,-1.70585,20.3894,-0.017407,-1.5167,19.2564,0.038837,-1.44747,20.869,-0.516597,-0.80687,20.8624,-0.775612,-0.9461,21.1609,2.4225,-1.80738,20.906,1.99545,-2.01741,20.8969,0.698938,-1.73768,20.8933,-0.287407,-1.53666,21.9838,-1.01683,-0.886395,23.1382,-1.33073,-1.04407,21.8664,-1.09909,-0.474655,23.0085,2.20405,-0.37737,22.4,2.48098,-1.38396,23.1134,2.20656,-1.0392,23.3155,2.07331,-1.82932,23.3721,1.79606,-1.81429,22.9501,2.12251,-2.42435,22.8138,0.605193,-2.4739,22.4469,0.105988,-2.35189,22.5125,0.331448,-2.2208,22.6433,1.38674,-2.37014,23.5102,-1.11772,-1.9306,23.4191,-1.2577,-2.24682,22.5164,-0.888717,-2.5338,22.6468,-0.847267,-0.64906,24.0653,1.44034,-1.52566,24.0962,1.19513,-1.92866,24.1751,0.868513,-2.466,24.1121,0.490923,-2.36597,23.6408,0.855323,-2.03351,23.5299,1.32819,-2.51533,24.4119,-0.141614,-1.871,24.5692,-0.116118,-1.86245,24.4689,-0.637037,-2.55665,24.2764,-0.592327,-1.60794,23.4464,-1.30422,-1.50446,24.0825,-1.0456,-0.71113,23.9156,-1.17893,-1.89643,24.4537,0.467013,-2.48122,24.2818,0.355623,-2.4551,23.9141,-0.903237,-1.88549,23.9659,-0.996307,-2.50965,22.5662,-0.463022,-2.28435,22.515,-0.452912,-0.420685,24.3306,1.23789,-0.882635,24.4163,0.950168,-1.09749,24.6489,0.497833,-1.57851,24.4675,0.584353,-1.00404,24.8441,-0.048997,-0.76626,24.8411,-0.440557,-1.40291,24.6142,-0.653432,-1.48298,24.6278,-0.089057,-0.25899,24.7927,-0.605992,-0.53916,24.5861,-0.891557,-2.82946,23.9553,0.436423,-2.65126,23.4072,0.750803,-2.9145,24.0942,-0.574227,-2.89276,24.2355,-0.228042,-2.70649,22.5066,-0.832227,-2.65582,23.3606,-1.04394,-2.65751,22.6643,0.523048,-2.69373,22.3069,0.068498,-2.86681,24.1501,0.185028,-2.78639,23.7775,-0.876717,-2.70052,22.4132,-0.411347,-0.801975,21.1354,-0.865132,-1.48701,21.1647,-0.613732,-2.09572,21.2833,0.667705,-2.3168,22.1643,0.580853,-2.13789,22.1251,-0.362002,-2.22741,22.3377,1.93933,-1.90885,21.2824,2.06566,-1.83471,21.9487,2.38032,-2.02877,22.3331,2.13989,-0.54723,21.832,2.53285,-1.37472,21.5584,2.51206,-2.02924,22.1013,-0.934572,-1.8133,21.2732,-0.456942,-1.11541,22.819,2.53889,-1.43717,22.8807,2.45982,-1.51387,22.4557,2.61134,-1.05554,22.4673,2.65356,-1.75872,22.824,2.38153,-1.81243,22.4117,2.40762,-1.7387,22.1238,2.49071,-1.45406,22.1064,2.60707,-1.12139,22.1717,2.69593,-1.46492,21.8234,2.53972,-0.91199,22.9263,2.3793,-0.717415,22.454,2.60461,-0.929794,22.0411,2.62569,-0.680435,18.7261,-0.484873,-1.22931,18.7123,-0.287573,-1.67836,18.7264,-0.011778,-1.90253,18.7091,0.804642,-1.64823,18.7138,1.60922,-0.852475,18.6884,2.02871,2.91615,23.2243,-0.976697,2.86387,22.3788,-0.818517,2.87896,22.279,-0.392092,2.89405,22.1792,0.034333,2.86999,22.5281,0.448188,2.91126,23.1943,0.655558,3.16069,23.8124,0.386763,3.22246,24.0389,0.034333,3.24136,24.088,-0.306592,3.2572,23.9814,-0.592317,3.0883,23.653,-0.852552,-2.91615,23.2243,-0.976697,-3.0883,23.653,-0.852552,-3.2572,23.9814,-0.592317,-3.24136,24.088,-0.306592,-3.22246,24.0389,0.034333,-3.16069,23.8124,0.386763,-2.91126,23.1943,0.655558,-2.86999,22.5281,0.448188,-2.89405,22.1792,0.034333,-2.87896,22.279,-0.392092,-2.86387,22.3788,-0.818518],
								"metadata": {
									"type": "Geometry",
									"vertices": 397,
									"version": 3,
									"uvs": 1,
									"materials": 1,
									"bones": 45,
									"generator": "io_three",
									"faces": 714
								},
								"bones": [
									{
										"name": "Genitals",
										"rotq": [0,0,0,1],
										"parent": -1,
										"pos": [-0.000027,15.0028,0.169405]
									},
									{
										"name": "1.Hips",
										"rotq": [0,0,0,1],
										"parent": 0,
										"pos": [0.000027,0.144162,0.321899]
									},
									{
										"name": "2.LowerBack",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "3.Spine",
										"rotq": [0,0,0,1],
										"parent": 2,
										"pos": [0.008712,3.25595,0.069768]
									},
									{
										"name": "4.Chest",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "5.Neck",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "6.Head",
										"rotq": [0,0,0,1],
										"parent": 5,
										"pos": [-0.023034,1.46401,0.411038]
									},
									{
										"name": "7.LeftScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "8.LeftArm",
										"rotq": [0,0,0,1],
										"parent": 7,
										"pos": [2.52983,-0.937077,-0.361347]
									},
									{
										"name": "9.LeftForeArm",
										"rotq": [0,0,0,1],
										"parent": 8,
										"pos": [3.19505,-2.63784,0.444198]
									},
									{
										"name": "10.LeftHand",
										"rotq": [0,0,0,1],
										"parent": 9,
										"pos": [3.19611,-2.32051,1.02422]
									},
									{
										"name": "11.LeftHandFinger",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "12.LeftHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 11,
										"pos": [0.476265,-0.405676,0.16763]
									},
									{
										"name": "13.LeftHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 12,
										"pos": [0.366805,-0.348112,0.094266]
									},
									{
										"name": "14.LeftThumbBone",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "15.LeftThumb",
										"rotq": [0,0,0,1],
										"parent": 14,
										"pos": [-1.1345,0.465408,0.302213]
									},
									{
										"name": "16.LeftThumb1",
										"rotq": [0,0,0,1],
										"parent": 15,
										"pos": [0.180056,-0.478939,0.60054]
									},
									{
										"name": "17.LeftThumb2",
										"rotq": [0,0,0,1],
										"parent": 16,
										"pos": [0.092886,-0.289543,0.386178]
									},
									{
										"name": "18.RightScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "19.RightArm",
										"rotq": [0,0,0,1],
										"parent": 18,
										"pos": [-2.52867,-0.937096,-0.361214]
									},
									{
										"name": "20.RightForeArm",
										"rotq": [0,0,0,1],
										"parent": 19,
										"pos": [-3.19598,-2.63734,0.444101]
									},
									{
										"name": "21.RightHand",
										"rotq": [0,0,0,1],
										"parent": 20,
										"pos": [-3.196,-2.32064,1.032]
									},
									{
										"name": "22.RightHandFinger",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "23.RightHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 22,
										"pos": [-0.499381,-0.387148,0.109694]
									},
									{
										"name": "24.RightHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 23,
										"pos": [-0.373054,-0.338717,0.107148]
									},
									{
										"name": "25.RightThumbBone",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "26.RightThumb",
										"rotq": [0,0,0,1],
										"parent": 25,
										"pos": [1.19745,0.436272,0.257659]
									},
									{
										"name": "27.RightThumb1",
										"rotq": [0,0,0,1],
										"parent": 26,
										"pos": [-0.176136,-0.458651,0.585481]
									},
									{
										"name": "28.RightThumb2",
										"rotq": [0,0,0,1],
										"parent": 27,
										"pos": [-0.070728,-0.239492,0.362029]
									},
									{
										"name": "29.LeftBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "30.LeftBoobBone",
										"rotq": [0,0,0,1],
										"parent": 29,
										"pos": [1.79366,0.798965,-0.440115]
									},
									{
										"name": "31.RightBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "32.RightBoobBone",
										"rotq": [0,0,0,1],
										"parent": 31,
										"pos": [-1.73021,0.798965,-0.440115]
									},
									{
										"name": "33.RightHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "34.RightButt",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "35.RightUpLeg",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "36.RightLeg",
										"rotq": [0,0,0,1],
										"parent": 35,
										"pos": [-0.851619,-7.12582,-0.664236]
									},
									{
										"name": "37.RightFoot",
										"rotq": [0,0,0,1],
										"parent": 36,
										"pos": [-0.7531,-6.81598,-0.370799]
									},
									{
										"name": "38.RightToeBase",
										"rotq": [0,0,0,1],
										"parent": 37,
										"pos": [-0.3779,-2.27964,0.987525]
									},
									{
										"name": "39.LeftHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "40.LeftButt",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "41.LeftUpLeg",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "42.LeftLeg",
										"rotq": [0,0,0,1],
										"parent": 41,
										"pos": [0.852048,-7.1256,-0.664335]
									},
									{
										"name": "43.LeftFoot",
										"rotq": [0,0,0,1],
										"parent": 42,
										"pos": [0.753052,-6.8162,-0.3707]
									},
									{
										"name": "44.LeftToeBase",
										"rotq": [0,0,0,1],
										"parent": 43,
										"pos": [0.377549,-2.27926,0.988361]
									}],
								"name": "rlc_female_frilly_dressGeometry.v6",
								"skinIndices": [40,41,1,0,41,40,1,0,41,40,1,0,41,40,1,35,41,40,1,0,1,41,40,35,35,1,34,41,1,35,41,34,35,34,1,41,35,34,1,0,35,34,1,0,34,35,1,0,34,35,1,0,34,35,0,0,34,35,0,0,34,35,0,0,34,40,1,35,34,40,1,0,40,34,1,0,40,34,1,0,40,34,1,0,40,41,0,0,40,41,0,0,40,41,0,0,41,40,1,0,41,40,35,1,41,40,0,0,41,40,0,0,40,41,0,0,41,40,35,34,40,34,0,0,40,35,34,41,34,35,0,0,35,34,40,0,35,34,0,0,35,34,0,0,35,34,1,41,35,41,34,1,41,40,1,0,41,40,35,1,40,41,0,0,40,41,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,0,0,41,40,1,0,41,40,1,0,41,40,35,1,41,1,40,35,41,1,40,35,41,35,40,1,41,35,1,40,41,35,1,40,41,1,35,40,41,35,1,40,35,41,1,40,35,34,41,1,35,41,1,34,35,41,1,34,35,34,1,0,35,34,1,41,35,41,34,1,35,34,41,1,35,34,1,0,35,34,1,0,35,34,41,1,35,34,41,1,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,35,34,0,0,34,35,0,0,34,35,0,0,35,34,40,0,35,34,40,0,34,35,0,0,34,35,0,0,35,34,40,0,35,34,40,0,34,35,40,0,34,35,0,0,35,34,40,41,34,40,0,0,34,40,35,0,35,34,40,41,35,34,40,41,34,40,0,0,34,40,0,0,35,34,40,41,40,35,34,41,40,34,0,0,40,34,0,0,40,41,35,34,40,34,0,0,40,34,0,0,40,41,35,34,40,41,35,34,40,41,0,0,40,0,0,0,40,41,35,34,41,40,35,34,40,41,0,0,40,41,0,0,41,40,35,34,40,41,0,0,40,41,0,0,41,40,0,0,41,40,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,1,0,2,3,1,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,2,0,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,3,2,0,0,2,3,0,0,3,2,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,29,3,2,4,3,2,4,0,29,3,2,0,3,2,0,0,3,2,0,0,3,8,7,2,3,7,2,0,3,7,4,0,3,4,2,0,3,4,7,18,29,31,4,3,29,3,4,2,29,4,3,7,31,4,29,3,29,4,7,2,29,4,3,2,29,3,4,7,29,4,3,2,29,7,3,2,8,7,3,0,7,29,3,8,29,2,4,7,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,4,7,29,18,4,7,18,3,7,4,29,8,7,8,0,0,7,8,0,0,7,4,8,0,29,7,4,3,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,4,18,0,7,8,0,0,4,7,18,3,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,0,0,0,8,0,0,0,4,7,18,3,4,7,18,3,7,4,0,0,7,4,0,0,7,4,0,0,7,0,0,0,7,18,0,0,7,0,0,0,7,0,0,0,7,18,4,0,7,18,4,5,7,18,4,5,7,18,5,4,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,0,0,0,7,8,3,0,7,8,0,0,7,8,0,0,8,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,8,2,0,3,2,8,0,3,8,2,0,3,29,2,8,29,3,2,7,29,3,2,4,29,3,7,8,29,2,3,4,29,3,2,4,3,31,29,2,29,3,2,4,29,3,2,4,29,2,3,4,29,2,3,4,29,2,3,4,29,2,3,4,29,2,3,4,29,4,3,2,29,2,3,4,29,2,3,4,29,2,3,4,29,3,2,4,29,3,4,2,29,3,4,2,29,4,3,2,2,0,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,1,0,2,0,0,0,2,0,0,0,2,3,1,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,2,3,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,31,3,2,4,3,31,2,0,2,3,0,0,3,2,0,0,3,18,19,2,3,18,4,7,3,2,0,0,31,3,4,18,31,4,18,2,31,3,4,2,31,3,4,18,31,18,3,4,31,4,3,2,31,18,3,19,18,19,3,0,3,31,18,2,31,2,3,4,18,19,0,0,18,19,0,0,18,19,0,0,19,18,0,0,4,18,31,7,18,31,4,19,18,4,19,0,18,19,0,0,18,19,0,0,31,18,3,4,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,7,4,0,18,19,0,0,18,19,0,0,18,19,0,0,18,19,0,0,19,0,0,0,19,3,0,0,4,18,7,0,18,4,7,0,18,4,0,0,18,4,0,0,18,7,0,0,18,7,0,0,18,0,0,0,18,0,0,0,18,7,4,5,18,7,4,0,18,19,0,0,19,18,0,0,18,19,0,0,18,19,0,0,19,18,0,0,19,18,0,0,19,18,3,0,19,0,0,0,18,19,0,0,18,19,0,0,19,0,0,0,3,2,0,0,3,2,0,0,3,31,2,19,31,3,2,18,3,2,19,0,31,2,3,4,31,3,2,18,31,2,3,4,31,2,3,4,31,4,2,3,31,3,2,4,3,2,19,0,3,19,2,0,31,3,4,2,31,3,4,2,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,2,3,4,31,3,4,2,31,4,18,2,31,2,4,18,2,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0],
								"skinWeights": [0.569062,0.493281,0.018212,0,0.521607,0.505306,0.058183,0,0.528009,0.459916,0.09817,0,0.465592,0.348943,0.216446,0.052761,0.522128,0.42218,0.140799,0,0.320547,0.317453,0.221394,0.167451,0.36592,0.297725,0.26993,0.128328,0.338163,0.245985,0.2245,0.152641,0.493933,0.400741,0.194399,0.010574,0.524025,0.453648,0.127948,0,0.53222,0.491073,0.085813,0,0.532066,0.519756,0.057902,0,0.58966,0.500294,0.020346,0,0.681703,0.42256,0,0,0.813813,0.276663,0,0,0.91893,0.160576,0,0,0.936811,0.091774,0.019286,0.010383,0.710373,0.254239,0.078548,0,0.474371,0.416207,0.134995,0,0.715148,0.227221,0.071994,0,0.935492,0.048112,0.020127,0,0.876416,0.148446,0,0,0.660497,0.405968,0,0,0.763501,0.283117,0,0,0.62663,0.441374,0.034081,0,0.962361,0.14007,0.035823,0.023396,0.585412,0.510043,0,0,0.929188,0.221805,0,0,0.921755,0.09437,0,0,0.608443,0.420239,0.041797,0.037115,0.632015,0.39225,0,0,0.463547,0.255919,0.200139,0.156487,0.900059,0.181417,0,0,0.755818,0.315567,0.060533,0,0.610963,0.511104,0,0,0.951782,0.202492,0,0,0.535224,0.295559,0.161799,0.125527,0.780864,0.184086,0.103653,0.084066,0.581589,0.394072,0.119071,0,0.877981,0.126299,0.093127,0.05909,0.589844,0.490235,0,0,0.651011,0.417281,0,0,0.829062,0.305756,0,0,0.875479,0.266837,0,0,0.618821,0.482031,0,0,0.606688,0.492204,0,0,0.952957,0.201876,0,0,0.61901,0.481873,0,0,0.625539,0.476398,0,0,0.963984,0.192631,0,0,0.975767,0.182751,0,0,0.626904,0.475254,0,0,0.620697,0.480458,0,0,0.986884,0.17343,0,0,1,0.162433,0,0,0.603731,0.411846,0.082765,0,0.617475,0.425878,0.057232,0,0.918568,0.129775,0.068739,0.042365,0.379347,0.346989,0.209902,0.147525,0.404355,0.332666,0.240683,0.103589,0.779557,0.17244,0.107137,0.093208,0.666474,0.257115,0.127848,0.095179,0.30739,0.306399,0.24161,0.138221,0.359266,0.333435,0.187718,0.185073,0.529717,0.371887,0.144854,0.080952,0.498494,0.426694,0.123332,0.058314,0.481913,0.23408,0.204605,0.175222,0.408044,0.251995,0.199408,0.181666,0.660225,0.284274,0.10297,0.079963,0.570031,0.428032,0.112874,0,0.548546,0.377426,0.167771,0.013047,0.824425,0.131663,0.120871,0.074744,0.873446,0.13631,0.085632,0.057093,0.624738,0.475073,0.022134,0,0.587625,0.450705,0.076603,0,0.933176,0.151333,0.040841,0.029684,0.986088,0.158176,0.010488,0.003666,0.640741,0.48414,0,0,0.640051,0.484765,0,0,1,0.158831,0,0,0.614016,0.50834,0,0,0.634918,0.489413,0,0,0.993084,0.165093,0,0,0.976636,0.179986,0,0,0.607157,0.514551,0,0,0.606814,0.514861,0,0,0.964284,0.191172,0,0,0.95679,0.197958,0,0,0.586336,0.533404,0,0,0.604054,0.51736,0,0,0.932084,0.220329,0,0,0.857376,0.228553,0,0,0.562002,0.554754,0,0,0.873768,0.252424,0.019475,0,0.812397,0.286018,0.040143,0,0.967325,0.10713,0,0,0.924691,0.154214,0,0,0.716025,0.333194,0.077841,0,0.695486,0.328594,0.099657,0,1,0.055664,0.013098,0,0.983465,0.089306,0,0,0.631219,0.325993,0.13983,0.020272,0.952781,0.1049,0,0,0.994489,0.042675,0.027015,0,0.538068,0.324179,0.192893,0.053623,0.459825,0.332494,0.236739,0.071465,0.767894,0.278765,0,0,0.884109,0.169478,0,0,0.386565,0.312821,0.301245,0.090997,0.39634,0.300697,0.261636,0.122193,0.860161,0.14964,0,0,0.745913,0.271131,0,0,0.507018,0.214872,0.196733,0.155449,1,0.000936,0,0,0.911861,0.094662,0,0,0.528086,0.282593,0.143534,0.120837,0.533702,0.339252,0.107901,0.096612,0.99115,0.011605,0,0,0.902922,0,0,0,0.500657,0.434258,0.079761,0.072526,0.524198,0.460712,0.058824,0.053773,0.857349,0.171187,0,0,0.895123,0.126134,0,0,0.709218,0.381803,0.015037,0.012368,0.728209,0.32521,0,0,0.822658,0.212562,0,0,0.768784,0.356295,0,0,0.78619,0.341701,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.860428,0.125272,0.0143,0,0.825763,0.108028,0.066209,0,0.890978,0.109022,0,0,0.908565,0.091435,0,0,0.98338,0.01662,0,0,0.911344,0.088656,0,0,0.982998,0.017002,0,0,0.51167,0.48833,0,0,0.605231,0.394769,0,0,1,0,0,0,0.643137,0.356863,0,0,0.582078,0.417922,0,0,0.523725,0.476275,0,0,0.666975,0.333025,0,0,0.852715,0.147285,0,0,0.620119,0.379881,0,0,0.559582,0.440418,0,0,0.72937,0.27063,0,0,0.561723,0.438277,0,0,0.884921,0.115079,0,0,0.604175,0.395825,0,0,0.697204,0.302796,0,0,0.778627,0.221374,0,0,0.719632,0.280368,0,0,0.549341,0.450659,0,0,0.834665,0.082667,0.082667,0,0.526199,0.473801,0,0,0.69665,0.30335,0,0,0.784846,0.215154,0,0,0.928609,0.064231,0.007159,0,0.95298,0.04702,0,0,0.647598,0.290043,0.06236,0,0.897662,0.102338,0,0,0.65875,0.206232,0.072471,0.062547,0.481799,0.375021,0.077486,0.047011,0.859474,0.088608,0.033675,0.012916,0.757221,0.126647,0.091098,0.016845,0.420623,0.242329,0.229956,0.053733,0.861161,0.069274,0.035066,0.034499,0.737593,0.117457,0.079401,0.032774,0.886106,0.05539,0.050264,0.00824,0.932288,0.041265,0.014205,0.006121,0.411799,0.336936,0.193044,0.058221,0.419424,0.310801,0.269775,0,0.607043,0.39276,0.000198,0,0.992371,0.001528,0.001528,0.001528,0.506395,0.493605,0,0,0.886287,0.113713,0,0,0.729556,0.270444,0,0,0.519204,0.480796,0,0,0.49113,0.320213,0.129732,0.058925,0.55911,0.221534,0.219356,0,0.749261,0.120856,0.104363,0.025519,0.946535,0.053465,0,0,0.984524,0.015476,0,0,0.97543,0.02457,0,0,0.573877,0.376163,0.04996,0,1,0,0,0,1,0,0,0,0.920671,0.079329,0,0,0.843948,0.156052,0,0,1,0,0,0,0.81771,0.102525,0.079764,0,1,0,0,0,0.376878,0.315106,0.2466,0.061415,0.964477,0.035523,0,0,1,0,0,0,1,0,0,0,0.823462,0.176538,0,0,0.490634,0,0,0,0.47933,0,0,0,0.450053,0.439957,0.10999,0,0.523771,0.239216,0.237013,0,0.82893,0.17107,0,0,0.983047,0.016953,0,0,0.946169,0.053831,0,0,1,0,0,0,0.965989,0.034011,0,0,1,0,0,0,1,0,0,0,0.863462,0.091024,0.045513,0,0.770229,0.176989,0.030564,0.022218,0.633091,0.288064,0.072309,0.006535,0.524593,0.337593,0.092049,0.045764,0.657599,0.342401,0,0,0.76674,0.23326,0,0,0.600252,0.399748,0,0,0.560215,0.439785,0,0,0.549781,0.450219,0,0,0.629484,0.370516,0,0,0.475366,0,0,0,0.565141,0.43452,0.000339,0,0.654272,0.345728,0,0,0.545244,0.454756,0,0,0.561122,0,0,0,0.883335,0.116665,0,0,0.888128,0.111872,0,0,0.93999,0.06001,0,0,0.925558,0.074442,0,0,0.61066,0.19467,0.19467,0,0.670143,0.329857,0,0,0.847256,0.152744,0,0,0.70464,0.251991,0.029553,0.013815,0.999994,0.000006,0,0,0.867954,0.131972,0.000064,0.000011,1,0,0,0,1,0,0,0,0.411269,0.329735,0.258997,0,0.950906,0.049094,0,0,0.975405,0.024595,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.998631,0.001014,0.000355,0,1,0,0,0,1,0,0,0,1,0,0,0,0.998078,0.001922,0,0,0.901788,0.062688,0.033205,0.00116,0.935765,0.0578,0.006435,0,0.999351,0.000556,0.000092,0,1,0,0,0,1,0,0,0,0.988148,0.011852,0,0,0.91564,0.08436,0,0,0.868494,0.131506,0,0,0.809939,0.190061,0,0,0.622506,0.377494,0,0,0.684734,0.314077,0.001189,0,1,0,0,0,1,0,0,0,0.940659,0.043631,0.015709,0,0.940575,0.059425,0,0,0.929105,0.070895,0,0,0.984353,0.015647,0,0,0.929277,0.070723,0,0,0.60179,0.39821,0,0,0.629189,0.370811,0,0,0.960574,0.039426,0,0,0.558656,0.441344,0,0,0.619935,0.380065,0,0,0.581093,0.418907,0,0,0.765622,0.234377,0,0,0.610418,0.389582,0,0,0.940793,0.059207,0,0,0.579882,0.420118,0,0,0.918828,0.081172,0,0,0.797542,0.202458,0,0,0.752553,0.247447,0,0,0.52755,0.47245,0,0,0.501008,0.476411,0.022582,0,0.60932,0.39068,0,0,0.736538,0.263462,0,0,0.936927,0.035787,0.027286,0,0.607033,0.297425,0.069413,0.026129,0.996015,0.003985,0,0,0.878736,0.103125,0.012247,0.003791,0.957225,0.021079,0.021079,0.000616,0.860589,0.068694,0.057113,0.004535,0.744578,0.11028,0.092152,0.04952,0.775446,0.106257,0.060533,0.055105,0.996103,0.002877,0.00102,0,0.726255,0.174606,0.099139,0,0.486953,0.476347,0.0367,0,0.448535,0.385163,0.138466,0.027835,1,0,0,0,0.773819,0.226181,0,0,0.838776,0.161224,0,0,0.534343,0.465657,0,0,0.551261,0.448739,0,0,0.45969,0.2772,0.196883,0.051956,0.682391,0.187491,0.130118,0,0.974835,0.025165,0,0,0.85368,0.14632,0,0,0.84906,0.15094,0,0,0.608734,0.285849,0.066359,0.039058,0.852464,0.147536,0,0,1,0,0,0,1,0,0,0,0.828538,0.171462,0,0,0.921467,0.078533,0,0,1,0,0,0,0.781325,0.113471,0.105204,0,1,0,0,0,0.857175,0.142825,0,0,0.829091,0.170909,0,0,0.993778,0.006222,0,0,0.603962,0,0,0,0.776424,0.223576,0,0,0.453081,0.435997,0.110922,0,0.826714,0.172642,0.000643,0,0.9457,0.0543,0,0,0.98252,0.01748,0,0,0.992877,0.007123,0,0,0.921657,0.078343,0,0,1,0,0,0,1,0,0,0,0.635241,0.311916,0.030623,0.022219,0.78377,0.17055,0.04568,0,0.686678,0.313322,0,0,0.500333,0.499667,0,0,0.547923,0.452077,0,0,0.577443,0.422557,0,0,0.63558,0.36442,0,0,0.558157,0.441843,0,0,0.595187,0.374791,0.030022,0,0.560428,0,0,0,0.600462,0.399538,0,0,0.532654,0.467346,0,0,0.638683,0,0,0,1,0,0,0,0.933453,0.066547,0,0,0.75033,0.24967,0,0,0.471319,0.427514,0.06972,0.031447,0.715736,0.142132,0.142132,0,1,0,0,0,0.905394,0.093816,0.000617,0.000169,1,0,0,0,1,0,0,0,0.884307,0.053069,0.04591,0.012422,0.973801,0.013193,0.006238,0.005934,0.73862,0.13069,0.13069,0,0.970137,0.029863,0,0,0.957717,0.038894,0.003389,0,0.98562,0.00821,0.00617,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.899821,0.09669,0.003085,0.000202,0.998671,0.000665,0.000665,0,0.997274,0.000909,0.000909,0.000909,1,0,0,0,0.986905,0.013095,0,0,0.924556,0.075444,0,0,0.87318,0.12682,0,0,0.827941,0.172059,0,0,0.737733,0.262267,0,0,0.591374,0.408626,0,0,0.700453,0,0,0,0.641663,0,0,0,0.592438,0,0,0,0.552687,0.447313,0,0,0.504921,0.495079,0,0,0.517576,0.482424,0,0,0.54947,0.45053,0,0,0.56351,0.43649,0,0,0.581156,0.418844,0,0,0.606126,0.393874,0,0,0.681343,0.318657,0,0,0.627492,0.372508,0,0,0.586182,0.413818,0,0,0.570023,0.429977,0,0,0.560726,0.439274,0,0,0.54006,0.45994,0,0,0.650275,0.349725,0,0,0.736528,0.263472,0,0,0.637425,0,0,0,0.689863,0,0,0,0.689503,0,0,0],
								"influencesPerVertex": 4,
								"faces": [10,67,62,7,0,0,1,2,10,78,73,9,0,3,4,5,10,89,34,12,0,6,7,8,10,92,88,13,0,9,10,11,10,100,95,15,0,12,13,14,10,103,99,16,0,15,16,17,10,111,30,18,0,18,19,20,10,114,110,19,0,21,22,23,10,122,28,21,0,24,25,26,10,125,121,23,0,27,28,29,10,26,0,45,0,30,31,32,10,48,44,1,0,33,34,35,10,56,24,4,0,36,37,38,10,38,55,3,0,39,40,41,10,36,66,6,0,42,43,44,10,81,77,10,0,45,46,47,10,51,2,4,0,48,49,38,10,52,47,2,0,50,51,49,10,0,26,40,0,31,30,52,10,41,124,22,0,53,54,55,10,117,20,21,0,56,57,26,10,118,113,20,0,58,59,57,10,106,17,18,0,60,61,20,10,107,102,17,0,62,63,61,10,96,32,14,0,64,65,66,10,32,91,14,0,65,67,66,10,84,11,12,0,68,69,8,10,85,80,11,0,70,71,69,10,74,69,8,0,72,73,74,10,70,36,6,0,75,42,44,10,59,38,3,0,76,39,41,10,63,58,5,0,77,78,79,10,40,41,22,0,52,80,81,10,0,1,44,0,31,35,34,10,47,48,1,0,51,33,35,10,51,52,2,0,48,50,49,10,55,56,4,0,40,36,38,10,58,59,5,0,78,76,79,10,63,5,7,0,77,79,2,10,67,7,6,0,0,2,44,10,69,70,8,0,73,75,74,10,74,8,9,0,72,74,5,10,78,9,10,0,3,5,47,10,80,81,10,0,71,45,47,10,84,85,11,0,68,70,69,10,89,12,13,0,6,8,11,10,91,92,13,0,67,9,11,10,96,14,15,0,64,66,14,10,99,100,15,0,16,12,14,10,102,103,16,0,63,15,17,10,106,107,17,0,60,62,61,10,111,18,19,0,18,20,23,10,113,114,19,0,59,21,23,10,117,118,20,0,56,58,57,10,121,122,21,0,28,24,26,10,124,125,23,0,54,27,29,10,65,62,67,0,82,1,0,10,76,73,78,0,83,4,3,10,35,34,89,0,84,7,6,10,93,90,88,0,85,86,10,10,98,95,100,0,87,13,12,10,104,101,99,0,88,89,16,10,31,30,111,0,90,19,18,10,115,112,110,0,91,92,22,10,29,28,122,0,93,25,24,10,126,123,121,0,94,95,28,10,27,26,45,0,96,30,32,10,49,46,44,0,97,98,34,10,25,24,56,0,99,37,36,10,39,57,55,0,100,101,40,10,37,68,66,0,102,103,43,10,79,77,81,0,104,46,45,10,54,51,24,0,105,48,37,10,53,50,47,0,106,107,51,10,43,40,26,0,108,52,30,10,42,127,124,0,109,110,54,10,120,117,28,0,111,56,25,10,119,116,113,0,112,113,59,10,109,106,30,0,114,60,19,10,108,105,102,0,115,116,63,10,33,32,96,0,117,65,64,10,33,94,91,0,117,118,67,10,87,84,34,0,119,68,7,10,83,80,85,0,120,71,70,10,72,69,74,0,121,73,72,10,71,37,36,0,122,102,42,10,60,39,38,0,123,100,39,10,61,58,63,0,124,78,77,10,42,41,40,0,125,80,52,10,46,45,44,0,98,32,34,10,50,49,48,0,107,97,33,10,53,52,51,0,106,50,48,10,57,56,55,0,101,36,40,10,61,60,59,0,124,123,76,10,64,63,62,0,126,77,1,10,68,67,66,0,103,0,43,10,72,71,70,0,121,122,75,10,75,74,73,0,127,72,4,10,79,78,77,0,104,3,46,10,83,82,81,0,120,128,45,10,86,85,84,0,129,70,68,10,90,89,88,0,86,6,10,10,94,93,92,0,118,85,9,10,97,96,95,0,130,64,13,10,101,100,99,0,89,12,16,10,105,104,103,0,116,88,15,10,108,107,106,0,115,62,60,10,112,111,110,0,92,18,22,10,116,115,114,0,113,91,21,10,119,118,117,0,112,58,56,10,123,122,121,0,95,24,28,10,127,126,125,0,110,94,27,10,23,21,135,0,131,132,133,10,6,132,264,0,134,135,136,10,134,22,135,0,137,138,133,10,265,266,11,0,139,140,141,10,136,137,138,0,142,143,144,10,137,140,141,0,143,145,146,10,142,143,144,0,147,148,149,10,143,146,147,0,148,150,151,10,146,148,149,0,150,152,153,10,151,149,148,0,154,155,156,10,138,152,153,0,144,157,158,10,141,154,152,0,146,159,157,10,144,155,145,0,149,160,161,10,144,147,157,0,149,151,162,10,147,149,158,0,151,153,163,10,151,159,158,0,154,164,165,10,160,161,162,0,166,167,168,10,163,164,162,0,169,170,168,10,165,166,167,0,171,172,173,10,169,170,171,0,174,175,176,10,173,174,175,0,177,178,179,10,177,178,179,0,180,181,182,10,168,181,182,0,183,184,185,10,170,183,181,0,175,186,184,10,184,185,186,0,187,188,189,10,188,189,190,0,190,191,192,10,192,162,193,0,193,168,194,10,164,195,193,0,170,195,194,10,185,196,197,0,188,196,197,10,179,178,198,0,182,181,198,10,187,176,175,0,199,200,179,10,177,180,200,0,180,201,202,10,181,202,203,0,184,203,204,10,181,183,204,0,184,186,205,10,205,206,204,0,206,207,205,10,207,208,209,0,208,209,210,10,211,212,208,0,211,212,209,10,213,214,212,0,213,214,212,10,184,215,216,0,215,216,217,10,191,190,217,0,218,219,220,10,180,179,219,0,221,222,223,10,174,221,222,0,224,225,226,10,196,185,216,0,227,228,217,10,179,199,224,0,222,229,230,10,175,222,215,0,231,226,216,10,200,180,220,0,232,233,234,10,226,227,163,0,235,236,169,10,228,226,161,0,237,235,167,10,229,230,231,0,238,239,240,10,232,233,234,0,241,242,243,10,236,235,234,0,244,245,243,10,238,239,240,0,246,247,248,10,233,173,176,0,242,177,200,10,230,177,201,0,239,180,249,10,177,230,192,0,180,239,193,10,198,178,192,0,198,181,193,10,188,207,210,0,190,208,250,10,186,197,205,0,189,197,206,10,187,186,183,0,199,189,186,10,176,187,169,0,200,199,174,10,160,162,192,0,166,168,193,10,229,228,160,0,238,237,166,10,139,153,159,0,251,158,164,10,150,136,139,0,252,142,251,10,130,128,19,0,253,254,255,10,241,242,243,0,256,257,258,10,241,245,246,0,256,259,260,10,247,245,241,0,261,259,256,10,249,248,241,0,262,263,256,10,240,166,165,0,248,172,171,10,239,235,236,0,247,245,244,10,234,169,172,0,243,174,264,10,154,227,226,0,159,236,235,10,152,226,228,0,157,235,237,10,159,153,228,0,164,158,237,10,159,229,232,0,164,238,265,10,157,158,232,0,162,163,241,10,157,235,239,0,162,245,247,10,155,239,238,0,160,247,246,10,170,169,183,0,175,174,186,10,181,168,167,0,184,183,173,10,243,242,171,0,258,257,176,10,252,244,243,0,266,267,258,10,237,172,246,0,268,264,260,10,171,242,246,0,176,257,260,10,250,236,247,0,269,244,261,10,237,245,247,0,268,259,261,10,253,249,252,0,270,262,266,10,250,248,249,0,269,263,262,10,239,250,253,0,247,269,270,10,166,240,252,0,172,248,266,10,167,166,252,0,173,172,266,10,170,167,251,0,175,173,271,10,210,209,206,0,250,210,207,10,197,189,210,0,197,191,250,10,189,197,196,0,191,197,196,10,190,196,223,0,219,227,272,10,140,137,255,0,145,143,273,10,255,137,136,0,273,143,142,10,256,136,150,0,274,142,252,10,257,150,148,0,275,252,156,10,259,258,148,0,276,277,152,10,260,259,146,0,278,276,150,10,260,143,142,0,278,148,147,10,267,262,15,0,279,280,281,10,2,1,133,0,282,283,284,10,263,130,17,0,285,253,286,10,2,133,4,0,282,284,287,10,8,264,9,0,288,136,289,10,21,20,129,0,132,290,291,10,268,269,270,0,292,293,294,10,271,270,141,0,295,294,146,10,142,145,272,0,147,161,296,10,273,272,274,0,297,296,298,10,275,274,276,0,299,298,300,10,278,279,277,0,301,302,303,10,280,281,270,0,304,305,294,10,281,154,141,0,305,159,146,10,282,272,145,0,306,296,161,10,272,282,283,0,296,306,307,10,274,283,284,0,298,307,308,10,284,285,278,0,309,310,301,10,286,287,288,0,311,312,313,10,287,164,163,0,312,170,169,10,165,168,289,0,171,183,314,10,291,292,293,0,315,316,317,10,295,296,297,0,318,319,320,10,299,300,301,0,321,322,323,10,168,182,303,0,183,185,324,10,292,303,304,0,316,324,325,10,305,306,307,0,326,327,328,10,309,310,311,0,329,330,331,10,313,314,315,0,332,333,334,10,315,195,164,0,334,195,170,10,316,317,306,0,335,336,327,10,299,318,319,0,321,337,338,10,308,307,295,0,339,328,318,10,296,320,321,0,340,341,342,10,203,322,303,0,204,343,324,10,303,322,323,0,324,343,344,10,323,324,325,0,344,345,346,10,326,327,328,0,347,348,349,10,327,330,331,0,348,350,351,10,330,214,213,0,350,214,213,10,332,333,307,0,352,353,354,10,312,334,335,0,355,356,357,10,302,336,337,0,358,359,360,10,338,339,296,0,361,362,363,10,317,340,332,0,364,365,352,10,299,337,341,0,366,360,367,10,333,338,295,0,353,361,368,10,296,339,342,0,363,362,369,10,343,288,163,0,370,313,169,10,344,286,288,0,371,311,313,10,345,346,347,0,372,373,374,10,348,346,345,0,375,376,377,10,350,351,348,0,378,379,375,10,238,352,353,0,246,380,381,10,298,297,346,0,382,320,376,10,297,321,347,0,383,342,374,10,313,354,301,0,332,384,323,10,319,314,313,0,338,333,332,10,329,328,311,0,385,349,331,10,325,316,305,0,346,335,326,10,304,305,308,0,325,326,339,10,293,308,298,0,317,339,382,10,313,287,286,0,332,312,311,10,355,354,286,0,386,384,311,10,285,280,269,0,310,304,293,10,279,278,269,0,302,301,293,10,264,265,9,0,136,139,289,10,356,357,358,0,387,388,389,10,358,357,360,0,389,388,390,10,358,361,362,0,389,391,392,10,358,363,364,0,389,393,394,10,165,290,352,0,171,395,380,10,353,365,350,0,381,396,378,10,294,293,348,0,397,317,375,10,343,227,154,0,370,236,159,10,344,343,281,0,371,370,305,10,285,355,344,0,310,386,371,10,345,355,285,0,372,386,310,10,283,349,345,0,307,398,377,10,353,349,283,0,381,398,307,10,238,353,282,0,246,381,306,10,292,304,293,0,316,325,317,10,289,168,303,0,314,183,324,10,356,366,291,0,387,399,315,10,356,359,367,0,387,400,401,10,351,361,360,0,379,391,390,10,360,357,291,0,390,388,315,10,365,363,362,0,396,393,392,10,362,361,351,0,392,391,379,10,359,364,367,0,400,394,401,10,364,363,365,0,394,393,396,10,368,365,353,0,402,396,381,10,367,368,352,0,401,402,380,10,289,366,367,0,314,399,401,10,292,291,366,0,316,315,399,10,324,326,329,0,345,347,385,10,316,325,329,0,335,346,385,10,317,316,310,0,336,335,330,10,340,317,309,0,365,364,403,10,140,254,369,0,145,404,405,10,268,271,369,0,292,295,405,10,279,268,370,0,302,292,406,10,277,279,371,0,303,302,407,10,373,275,277,0,408,299,409,10,374,273,275,0,410,297,299,10,142,273,374,0,147,297,410,10,132,261,374,0,135,411,410,10,264,374,373,0,136,410,408,10,265,373,372,0,139,408,412,10,267,266,372,0,279,413,414,10,262,267,371,0,280,279,407,10,263,262,370,0,285,280,406,10,130,263,369,0,253,285,405,10,130,254,255,0,253,404,273,10,128,255,256,0,254,273,274,10,129,256,257,0,291,274,275,10,135,257,258,0,133,275,415,10,133,134,258,0,284,416,277,10,131,133,259,0,417,284,276,10,132,131,260,0,135,417,278,10,220,219,375,0,418,223,419,10,225,220,376,0,420,234,421,10,221,378,379,0,225,422,423,10,222,379,380,0,226,423,424,10,215,380,381,0,216,424,425,10,223,216,381,0,272,217,425,10,217,223,382,0,220,272,426,10,218,217,383,0,427,220,428,10,219,224,385,0,223,230,429,10,337,386,387,0,360,430,431,10,334,388,389,0,356,432,433,10,390,340,335,0,434,365,357,10,340,390,391,0,365,434,435,10,333,332,391,0,353,352,435,10,338,333,392,0,361,353,436,10,339,338,393,0,362,361,437,10,339,394,395,0,362,438,439,10,336,396,386,0,359,440,430,10,342,395,396,0,369,439,441,10,320,342,336,0,442,369,443,10,321,320,302,0,342,341,444,10,347,321,301,0,374,342,323,10,347,354,355,0,374,384,386,10,221,225,377,0,225,420,445,10,174,200,225,0,224,232,420,10,201,200,174,0,249,202,446,10,231,201,173,0,240,249,447,10,232,231,233,0,265,240,448,10,387,388,334,0,431,432,356,10,318,341,334,0,449,367,356,10,318,312,311,0,337,450,331,10,311,328,314,0,331,349,333,10,314,328,331,0,333,349,351,10,195,315,331,0,195,334,351,10,195,213,211,0,195,213,211,10,194,193,211,0,451,194,211,10,188,198,194,0,190,198,451,10,188,191,199,0,190,452,453,10,199,191,218,0,229,218,427,10,385,224,218,0,429,230,427,10,155,156,145,0,160,454,161,10,156,282,145,0,454,306,161,10,364,368,367,0,394,402,401,10,249,244,252,0,262,267,266,10,251,167,252,0,271,173,266,10,290,289,367,0,395,314,401,10,290,367,352,0,395,401,380,10,240,253,252,0,248,270,266,10,132,7,5,0,135,455,456,10,262,263,16,0,280,285,457,10,266,267,13,0,413,279,458,10,131,3,4,0,417,459,287,10,133,131,4,0,284,417,287,10,139,136,138,0,251,142,144,10,138,137,141,0,144,143,146,10,145,142,144,0,161,147,149,10,144,143,147,0,149,148,151,10,147,146,149,0,151,150,153,10,150,151,148,0,252,154,156,10,139,138,153,0,251,144,158,10,138,141,152,0,144,146,157,10,155,144,157,0,160,149,162,10,157,147,158,0,162,151,163,10,149,151,158,0,155,154,165,10,161,163,162,0,167,169,168,10,168,165,167,0,183,171,173,10,172,169,171,0,264,174,176,10,176,173,175,0,200,177,179,10,180,177,179,0,201,180,182,10,187,184,186,0,199,187,189,10,191,188,190,0,452,190,192,10,194,192,193,0,451,193,194,10,162,164,193,0,168,170,194,10,186,185,197,0,189,188,197,10,199,179,198,0,453,182,198,10,184,187,175,0,187,199,179,10,201,177,200,0,249,180,202,10,182,181,203,0,185,184,204,10,202,181,204,0,203,184,205,10,183,205,204,0,186,206,205,10,210,207,209,0,250,208,210,10,207,211,208,0,208,211,209,10,211,213,212,0,211,213,212,10,185,184,216,0,228,215,217,10,218,191,217,0,427,218,220,10,220,180,219,0,418,221,223,10,175,174,222,0,231,224,226,10,223,196,216,0,272,227,217,10,219,179,224,0,223,222,230,10,184,175,215,0,215,231,216,10,225,200,220,0,420,232,234,10,161,226,163,0,167,235,169,10,160,228,161,0,166,237,167,10,232,229,231,0,265,238,240,10,235,232,234,0,245,241,243,10,237,236,234,0,268,244,243,10,234,233,176,0,243,242,200,10,231,230,201,0,240,239,249,10,178,177,192,0,181,180,193,10,194,198,192,0,451,198,193,10,189,188,210,0,191,190,250,10,183,186,205,0,186,189,206,10,169,187,183,0,174,199,186,10,234,176,169,0,243,200,174,10,230,160,192,0,239,166,193,10,230,229,160,0,239,238,166,10,151,139,159,0,154,251,164,10,151,150,139,0,154,252,251,10,244,241,243,0,267,256,258,10,242,241,246,0,257,256,260,10,248,247,241,0,263,261,256,10,244,249,241,0,267,262,256,10,238,240,165,0,246,248,171,10,250,239,236,0,269,247,244,10,237,234,172,0,268,243,264,10,152,154,226,0,157,159,235,10,153,152,228,0,158,157,237,10,229,159,228,0,238,164,237,10,158,159,232,0,165,164,265,10,235,157,232,0,245,162,241,10,155,157,239,0,160,162,247,10,156,155,238,0,454,160,246,10,170,181,167,0,175,184,173,10,251,243,171,0,271,258,176,10,251,252,243,0,271,266,258,10,245,237,246,0,259,268,260,10,172,171,246,0,264,176,260,10,248,250,247,0,263,269,261,10,236,237,247,0,244,268,261,10,253,250,249,0,270,269,262,10,240,239,253,0,248,247,270,10,171,170,251,0,176,175,271,10,205,210,206,0,206,250,207,10,205,197,210,0,206,197,250,10,190,189,196,0,192,191,196,10,217,190,223,0,220,219,272,10,254,140,255,0,404,145,273,10,256,255,136,0,274,273,142,10,257,256,150,0,275,274,252,10,258,257,148,0,415,275,156,10,146,259,148,0,150,276,152,10,143,260,146,0,148,278,150,10,261,260,142,0,411,278,147,10,15,262,16,0,281,280,457,10,131,132,5,0,417,135,456,10,0,22,134,0,460,138,137,10,21,129,135,0,132,291,133,10,1,0,134,0,283,461,416,10,133,1,134,0,284,283,416,10,271,268,270,0,295,292,294,10,140,271,141,0,145,295,146,10,273,142,272,0,297,147,296,10,275,273,274,0,299,297,298,10,277,275,276,0,409,299,300,10,276,278,277,0,462,301,303,10,269,280,270,0,293,304,294,10,270,281,141,0,294,305,146,10,274,272,283,0,298,296,307,10,276,274,284,0,300,298,308,10,276,284,278,0,462,309,301,10,288,287,163,0,313,312,169,10,290,165,289,0,395,171,314,10,294,291,293,0,397,315,317,10,298,295,297,0,382,318,320,10,302,299,301,0,444,321,323,10,308,305,307,0,339,326,328,10,312,309,311,0,450,329,331,10,287,313,315,0,312,332,334,10,287,315,164,0,312,334,170,10,305,316,306,0,326,335,327,10,300,299,319,0,322,321,338,10,298,308,295,0,382,339,318,10,297,296,321,0,383,340,342,10,182,203,303,0,185,204,324,10,304,303,323,0,325,324,344,10,304,323,325,0,325,344,346,10,329,326,328,0,385,347,349,10,328,327,331,0,349,348,351,10,331,330,213,0,351,350,213,10,306,332,307,0,463,352,354,10,309,312,335,0,403,355,357,10,299,302,337,0,366,358,360,10,295,338,296,0,368,361,363,10,306,317,332,0,463,364,352,10,318,299,341,0,449,366,367,10,307,333,295,0,354,353,368,10,320,296,342,0,442,363,369,10,227,343,163,0,236,370,169,10,343,344,288,0,370,371,313,10,349,348,345,0,398,375,377,10,349,350,348,0,398,378,375,10,348,298,346,0,375,382,376,10,346,297,347,0,373,383,374,10,300,313,301,0,322,332,323,10,300,319,313,0,322,338,332,10,310,329,311,0,330,385,331,10,304,325,305,0,325,346,326,10,293,304,308,0,317,325,339,10,348,293,298,0,375,317,382,10,354,313,286,0,384,332,311,10,344,355,286,0,371,386,311,10,278,285,269,0,301,310,293,10,268,279,269,0,292,302,293,10,14,267,15,0,464,279,281,10,359,356,358,0,400,387,389,10,361,358,360,0,391,389,390,10,363,358,362,0,393,389,392,10,359,358,364,0,400,389,394,10,238,165,352,0,246,171,380,10,349,353,350,0,398,381,378,10,351,294,348,0,379,397,375,10,281,343,154,0,305,370,159,10,280,344,281,0,304,371,305,10,280,285,344,0,304,310,371,10,284,345,285,0,309,372,310,10,284,283,345,0,308,307,377,10,282,353,283,0,306,381,307,10,156,238,282,0,454,246,306,10,292,289,303,0,316,314,324,10,357,356,291,0,388,387,315,10,366,356,367,0,399,387,401,10,294,351,360,0,397,379,390,10,294,360,291,0,397,390,315,10,350,365,362,0,378,396,392,10,350,362,351,0,378,392,379,10,368,364,365,0,402,394,396,10,352,368,353,0,380,402,381,10,289,292,366,0,314,316,399,10,325,324,329,0,346,345,385,10,310,316,329,0,330,335,385,10,309,317,310,0,329,336,330,10,335,340,309,0,357,365,403,10,271,140,369,0,295,145,405,10,370,268,369,0,406,292,405,10,371,279,370,0,407,302,406,10,372,277,371,0,414,303,407,10,372,373,277,0,412,408,409,10,373,374,275,0,408,410,299,10,261,142,374,0,411,147,410,10,264,132,374,0,136,135,410,10,265,264,373,0,139,136,408,10,266,265,372,0,140,139,412,10,371,267,372,0,407,279,414,10,370,262,371,0,406,280,407,10,369,263,370,0,405,285,406,10,254,130,369,0,404,253,405,10,128,130,255,0,254,253,273,10,129,128,256,0,291,254,274,10,135,129,257,0,133,291,275,10,134,135,258,0,137,133,415,10,259,133,258,0,276,284,277,10,260,131,259,0,278,417,276,10,261,132,260,0,411,135,278,10,376,220,375,0,465,418,419,10,377,225,376,0,445,420,421,10,222,221,379,0,226,225,423,10,215,222,380,0,216,226,424,10,216,215,381,0,217,216,425,10,382,223,381,0,426,272,425,10,383,217,382,0,428,220,426,10,384,218,383,0,466,427,428,10,375,219,385,0,419,223,429,10,341,337,387,0,367,360,431,10,335,334,389,0,357,356,433,10,389,390,335,0,433,434,357,10,332,340,391,0,352,365,435,10,392,333,391,0,436,353,435,10,393,338,392,0,437,361,436,10,394,339,393,0,438,362,437,10,342,339,395,0,369,362,439,10,337,336,386,0,360,359,430,10,336,342,396,0,443,369,441,10,302,320,336,0,467,442,443,10,301,321,302,0,323,342,444,10,354,347,301,0,384,374,323,10,345,347,355,0,372,374,386,10,378,221,377,0,422,225,445,10,221,174,225,0,225,224,420,10,173,201,174,0,447,249,446,10,233,231,173,0,448,240,447,10,341,387,334,0,367,431,356,10,312,318,334,0,355,449,356,10,319,318,311,0,338,337,331,10,319,311,314,0,338,331,333,10,315,314,331,0,334,333,351,10,213,195,331,0,213,195,351,10,193,195,211,0,194,195,211,10,207,194,211,0,208,451,211,10,207,188,194,0,208,190,451,10,198,188,199,0,198,190,453,10,224,199,218,0,230,229,427,10,384,385,218,0,466,429,427,10,13,267,14,0,458,279,464,10,22,23,135,0,138,131,133,10,20,128,129,0,290,254,291,10,3,131,5,0,459,417,456,10,12,266,13,0,468,413,458,10,265,10,9,0,139,469,289,10,6,7,132,0,134,455,135,10,8,6,264,0,288,134,136,10,10,265,11,0,469,139,141,10,266,12,11,0,140,470,141,10,16,263,17,0,457,285,286,10,130,18,17,0,253,471,286,10,130,19,18,0,253,255,471,10,128,20,19,0,254,290,255,10,24,51,4,0,37,48,38,10,22,0,40,0,81,31,52,10,28,117,21,0,25,56,26,10,30,106,18,0,19,60,20,10,34,84,12,0,7,68,8,10,8,70,6,0,74,75,44,10,5,59,3,0,79,76,41,10,45,0,44,0,32,31,34,10,2,47,1,0,49,51,35,10,3,55,4,0,41,40,38,10,62,63,7,0,1,77,2,10,66,67,6,0,43,0,44,10,73,74,9,0,4,72,5,10,77,78,10,0,46,3,47,10,11,80,10,0,69,71,47,10,88,89,13,0,10,6,11,10,14,91,13,0,66,67,11,10,95,96,15,0,13,64,14,10,16,99,15,0,17,16,14,10,17,102,16,0,61,63,17,10,110,111,19,0,22,18,23,10,20,113,19,0,57,59,23,10,23,121,21,0,29,28,26,10,22,124,23,0,55,54,29,10,68,65,67,0,103,82,0,10,79,76,78,0,104,83,3,10,90,35,89,0,86,84,6,10,92,93,88,0,9,85,10,10,101,98,100,0,89,87,12,10,103,104,99,0,15,88,16,10,112,31,111,0,92,90,18,10,114,115,110,0,21,91,22,10,123,29,122,0,95,93,24,10,125,126,121,0,27,94,28,10,46,27,45,0,98,96,32,10,48,49,44,0,33,97,34,10,57,25,56,0,101,99,36,10,38,39,55,0,39,100,40,10,36,37,66,0,42,102,43,10,82,79,81,0,128,104,45,10,25,54,24,0,99,105,37,10,52,53,47,0,50,106,51,10,27,43,26,0,96,108,30,10,41,42,124,0,53,109,54,10,29,120,28,0,93,111,25,10,118,119,113,0,58,112,59,10,31,109,30,0,90,114,19,10,107,108,102,0,62,115,63,10,97,33,96,0,130,117,64,10,32,33,91,0,65,117,67,10,35,87,34,0,84,119,7,10,86,83,85,0,129,120,70,10,75,72,74,0,127,121,72,10,70,71,36,0,75,122,42,10,59,60,38,0,76,123,39,10,64,61,63,0,126,124,77,10,43,42,40,0,108,125,52,10,47,50,48,0,51,107,33,10,54,53,51,0,105,106,48,10,58,61,59,0,78,124,76,10,65,64,62,0,82,126,1,10,69,72,70,0,73,121,75,10,76,75,73,0,83,127,4,10,80,83,81,0,71,120,45,10,87,86,84,0,119,129,68,10,91,94,92,0,67,118,9,10,98,97,95,0,87,130,13,10,102,105,103,0,63,116,15,10,109,108,106,0,114,115,60,10,113,116,114,0,59,113,21,10,120,119,117,0,111,112,56,10,124,127,125,0,54,110,27],
								"materials": [
									{
										"blending": "NormalBlending",
										"specularCoef": 50,
										"depthWrite": true,
										"opacity": 1,
										"transparent": false,
										"doubleSided": true,
										"colorDiffuse": [1,1,1],
										"shading": "phong",
										"DbgColor": 15658734,
										"colorAmbient": [1,1,1],
										"colorEmissive": [0,0,0],
										"wireframe": false,
										"colorSpecular": [0.5,0.5,0.5],
										"DbgName": "HFFrillyDressMaterial",
										"depthTest": true,
										"DbgIndex": 0,
										"visible": true
									}]
							},
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "0B2221CD-CFDC-473B-BB8C-87214D41EF1D",
							"type": "Group",
							"name": "hf skeleton",
							"userData": {
								"bones": [
									{
										"name": "Genitals",
										"rotq": [0,0,0,1],
										"parent": -1,
										"pos": [-0.000027,15.0028,0.169405]
									},
									{
										"name": "1.Hips",
										"rotq": [0,0,0,1],
										"parent": 0,
										"pos": [0.000027,0.144162,0.321899]
									},
									{
										"name": "2.LowerBack",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "3.Spine",
										"rotq": [0,0,0,1],
										"parent": 2,
										"pos": [0.008712,3.25595,0.069768]
									},
									{
										"name": "4.Chest",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "5.Neck",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "6.Head",
										"rotq": [0,0,0,1],
										"parent": 5,
										"pos": [-0.023034,1.46401,0.411038]
									},
									{
										"name": "7.LeftScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "8.LeftArm",
										"rotq": [0,0,0,1],
										"parent": 7,
										"pos": [2.52983,-0.937077,-0.361347]
									},
									{
										"name": "9.LeftForeArm",
										"rotq": [0,0,0,1],
										"parent": 8,
										"pos": [3.19505,-2.63784,0.444198]
									},
									{
										"name": "10.LeftHand",
										"rotq": [0,0,0,1],
										"parent": 9,
										"pos": [3.19611,-2.32051,1.02422]
									},
									{
										"name": "11.LeftHandFinger",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "12.LeftHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 11,
										"pos": [0.476265,-0.405676,0.16763]
									},
									{
										"name": "13.LeftHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 12,
										"pos": [0.366805,-0.348112,0.094266]
									},
									{
										"name": "14.LeftThumbBone",
										"rotq": [0,0,0,1],
										"parent": 10,
										"pos": [1.0844,-0.702997,0.311596]
									},
									{
										"name": "15.LeftThumb",
										"rotq": [0,0,0,1],
										"parent": 14,
										"pos": [-1.1345,0.465408,0.302213]
									},
									{
										"name": "16.LeftThumb1",
										"rotq": [0,0,0,1],
										"parent": 15,
										"pos": [0.180056,-0.478939,0.60054]
									},
									{
										"name": "17.LeftThumb2",
										"rotq": [0,0,0,1],
										"parent": 16,
										"pos": [0.092886,-0.289543,0.386178]
									},
									{
										"name": "18.RightScapula",
										"rotq": [0,0,0,1],
										"parent": 4,
										"pos": [0.063054,2.16348,-0.12585]
									},
									{
										"name": "19.RightArm",
										"rotq": [0,0,0,1],
										"parent": 18,
										"pos": [-2.52867,-0.937096,-0.361214]
									},
									{
										"name": "20.RightForeArm",
										"rotq": [0,0,0,1],
										"parent": 19,
										"pos": [-3.19598,-2.63734,0.444101]
									},
									{
										"name": "21.RightHand",
										"rotq": [0,0,0,1],
										"parent": 20,
										"pos": [-3.196,-2.32064,1.032]
									},
									{
										"name": "22.RightHandFinger",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "23.RightHandFinger1",
										"rotq": [0,0,0,1],
										"parent": 22,
										"pos": [-0.499381,-0.387148,0.109694]
									},
									{
										"name": "24.RightHandFinger2",
										"rotq": [0,0,0,1],
										"parent": 23,
										"pos": [-0.373054,-0.338717,0.107148]
									},
									{
										"name": "25.RightThumbBone",
										"rotq": [0,0,0,1],
										"parent": 21,
										"pos": [-1.14875,-0.745953,0.339327]
									},
									{
										"name": "26.RightThumb",
										"rotq": [0,0,0,1],
										"parent": 25,
										"pos": [1.19745,0.436272,0.257659]
									},
									{
										"name": "27.RightThumb1",
										"rotq": [0,0,0,1],
										"parent": 26,
										"pos": [-0.176136,-0.458651,0.585481]
									},
									{
										"name": "28.RightThumb2",
										"rotq": [0,0,0,1],
										"parent": 27,
										"pos": [-0.070728,-0.239492,0.362029]
									},
									{
										"name": "29.LeftBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "30.LeftBoobBone",
										"rotq": [0,0,0,1],
										"parent": 29,
										"pos": [1.79366,0.798965,-0.440115]
									},
									{
										"name": "31.RightBoob",
										"rotq": [0,0,0,1],
										"parent": 3,
										"pos": [-0.072112,1.56253,0.174991]
									},
									{
										"name": "32.RightBoobBone",
										"rotq": [0,0,0,1],
										"parent": 31,
										"pos": [-1.73021,0.798965,-0.440115]
									},
									{
										"name": "33.RightHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "34.RightButt",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "35.RightUpLeg",
										"rotq": [0,0,0,1],
										"parent": 33,
										"pos": [-1.43938,-1.60251,0.041129]
									},
									{
										"name": "36.RightLeg",
										"rotq": [0,0,0,1],
										"parent": 35,
										"pos": [-0.851619,-7.12582,-0.664236]
									},
									{
										"name": "37.RightFoot",
										"rotq": [0,0,0,1],
										"parent": 36,
										"pos": [-0.7531,-6.81598,-0.370799]
									},
									{
										"name": "38.RightToeBase",
										"rotq": [0,0,0,1],
										"parent": 37,
										"pos": [-0.3779,-2.27964,0.987525]
									},
									{
										"name": "39.LeftHip",
										"rotq": [0,0,0,1],
										"parent": 1,
										"pos": [0,2.30816,-0.491099]
									},
									{
										"name": "40.LeftButt",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "41.LeftUpLeg",
										"rotq": [0,0,0,1],
										"parent": 39,
										"pos": [1.439,-1.60251,0.04113]
									},
									{
										"name": "42.LeftLeg",
										"rotq": [0,0,0,1],
										"parent": 41,
										"pos": [0.852048,-7.1256,-0.664335]
									},
									{
										"name": "43.LeftFoot",
										"rotq": [0,0,0,1],
										"parent": 42,
										"pos": [0.753052,-6.8162,-0.3707]
									},
									{
										"name": "44.LeftToeBase",
										"rotq": [0,0,0,1],
										"parent": 43,
										"pos": [0.377549,-2.27926,0.988361]
									}],
								"name": "rlc_female_skeletonGeometry.v6",
								"influencesPerVertex": 4,
								"metadata": {
									"materials": 1,
									"bones": 45,
									"vertices": 5059,
									"generator": "io_three",
									"version": 3,
									"type": "Geometry",
									"faces": 9464,
									"uvs": 1
								},
								"materials": [
									{
										"colorSpecular": [0.5,0.5,0.5],
										"visible": true,
										"colorEmissive": [0,0,0],
										"DbgColor": 15658734,
										"transparent": false,
										"DbgName": "BonesMaterial",
										"depthTest": true,
										"depthWrite": true,
										"opacity": 1,
										"shading": "lambert",
										"blending": "NormalBlending",
										"wireframe": false,
										"colorDiffuse": [1,1,1],
										"DbgIndex": 0,
										"specularCoef": 50
									}],
								"faces": [10,0,1,2,0,0,1,2,10,2,1,3,0,3,4,5,10,2,3,0,0,6,7,8,10,3,1,0,0,9,10,11,10,4,5,6,0,12,13,14,10,7,6,5,0,15,16,17,10,4,6,7,0,18,19,20,10,5,4,7,0,21,22,23,10,10,9,8,0,24,25,26,10,11,12,13,0,27,28,29,10,12,11,14,0,30,31,32,10,11,13,14,0,33,34,35,10,13,12,14,0,36,37,38,10,15,16,17,0,39,40,41,10,18,19,17,0,42,43,44,10,15,19,16,0,45,46,47,10,19,15,17,0,43,48,44,10,18,16,19,0,49,47,46,10,18,17,16,0,50,51,52,10,20,21,22,0,53,54,55,10,22,21,23,0,56,57,58,10,20,22,23,0,59,56,58,10,20,23,21,0,60,61,62,10,24,25,26,0,63,64,65,10,26,27,24,0,65,66,63,10,24,28,25,0,67,68,69,10,26,25,29,0,70,71,72,10,26,29,27,0,70,72,73,10,27,29,28,0,74,75,76,10,24,27,28,0,77,78,79,10,28,29,25,0,68,80,69,10,30,31,32,0,81,82,83,10,33,34,35,0,84,85,86,10,35,36,33,0,87,88,84,10,36,30,33,0,89,90,84,10,31,36,35,0,91,92,93,10,31,34,32,0,94,95,96,10,30,36,31,0,97,98,99,10,30,32,33,0,100,101,102,10,34,33,32,0,85,84,103,10,31,35,34,0,104,105,106,10,37,38,39,0,107,108,109,10,40,39,38,0,110,111,112,10,41,42,37,0,113,114,115,10,40,38,43,0,116,117,118,10,44,41,39,0,119,113,120,10,43,39,40,0,121,122,123,10,41,37,39,0,124,107,109,10,44,43,42,0,125,126,127,10,41,44,42,0,113,128,114,10,42,43,38,0,129,126,130,10,37,42,38,0,107,131,108,10,43,44,39,0,121,132,122,10,45,46,47,0,133,134,135,10,48,49,50,0,136,137,138,10,51,48,50,0,139,136,138,10,45,47,48,0,140,141,142,10,48,47,49,0,143,144,145,10,50,46,45,0,146,147,148,10,49,47,46,0,149,150,151,10,50,49,46,0,152,149,151,10,51,50,45,0,153,154,155,10,51,45,48,0,156,140,142,10,52,53,54,0,157,158,159,10,55,56,52,0,160,161,162,10,57,55,52,0,163,164,165,10,58,54,53,0,166,167,168,10,55,57,54,0,169,170,171,10,56,59,53,0,172,173,174,10,56,55,58,0,175,176,177,10,58,59,56,0,177,178,175,10,57,52,54,0,179,157,159,10,59,58,53,0,180,166,168,10,58,55,54,0,181,169,182,10,56,53,52,0,172,174,183,10,60,61,62,0,184,185,186,10,63,64,65,0,187,188,189,10,63,66,64,0,187,190,188,10,61,63,65,0,191,192,193,10,67,61,60,0,194,185,184,10,68,62,65,0,195,196,197,10,66,63,67,0,198,199,200,10,68,66,67,0,201,198,200,10,62,61,65,0,202,191,193,10,68,67,62,0,203,204,205,10,67,60,62,0,206,207,208,10,63,61,67,0,209,210,211,10,64,68,65,0,212,195,197,10,64,66,68,0,213,214,215,10,69,70,71,0,216,217,218,10,72,73,74,0,219,220,221,10,75,72,74,0,222,223,221,10,72,76,71,0,224,225,226,10,73,71,70,0,227,228,229,10,76,69,71,0,230,216,218,10,70,69,74,0,217,216,231,10,74,69,75,0,232,233,234,10,72,71,73,0,224,226,235,10,72,69,76,0,236,237,238,10,72,75,69,0,239,240,241,10,74,73,70,0,242,227,229,10,77,78,79,0,243,244,245,10,80,81,82,0,246,247,248,10,83,81,80,0,249,247,246,10,80,79,78,0,250,251,252,10,84,82,81,0,253,254,255,10,84,78,77,0,256,244,243,10,83,78,84,0,257,258,259,10,81,83,84,0,260,261,262,10,82,79,80,0,263,264,265,10,79,82,77,0,264,263,266,10,83,80,78,0,267,250,252,10,77,82,84,0,268,269,270,10,85,86,87,0,271,272,273,10,88,89,90,0,274,275,276,10,90,91,88,0,276,277,274,10,86,91,92,0,278,279,280,10,87,86,92,0,273,272,281,10,85,91,86,0,282,283,284,10,88,91,85,0,285,286,287,10,87,92,89,0,288,289,290,10,89,92,90,0,291,292,293,10,91,90,92,0,294,295,296,10,89,85,87,0,297,298,299,10,88,85,89,0,300,301,302,10,93,94,95,0,303,304,305,10,94,93,96,0,306,307,308,10,97,95,98,0,309,310,311,10,99,95,94,0,312,313,314,10,99,100,95,0,312,315,313,10,98,96,97,0,316,317,318,10,96,93,97,0,319,320,321,10,100,99,96,0,322,323,324,10,98,100,96,0,325,322,324,10,97,93,95,0,326,303,305,10,99,94,96,0,327,306,308,10,95,100,98,0,328,329,330,10,101,102,103,0,331,332,333,10,104,105,106,0,334,335,336,10,107,105,104,0,337,335,334,10,101,108,102,0,338,339,340,10,109,106,105,0,341,336,335,10,110,111,112,0,342,343,344,10,110,112,113,0,342,344,345,10,114,113,115,0,346,345,347,10,116,117,118,0,348,349,350,10,118,119,116,0,350,351,348,10,120,121,122,0,352,353,354,10,123,122,124,0,355,354,356,10,124,125,126,0,357,358,359,10,119,127,128,0,360,361,362,10,129,130,131,0,363,364,365,10,131,132,129,0,365,366,363,10,123,124,133,0,367,368,369,10,123,134,120,0,367,370,371,10,131,135,136,0,372,373,374,10,136,132,131,0,374,375,372,10,133,124,137,0,376,357,377,10,129,127,130,0,378,361,379,10,138,120,134,0,380,381,382,10,139,140,141,0,383,384,385,10,142,143,144,0,386,387,388,10,144,145,146,0,388,389,390,10,128,147,116,0,391,392,393,10,121,125,122,0,394,395,396,10,131,148,135,0,397,398,399,10,131,130,148,0,397,400,398,10,133,138,134,0,401,402,403,10,133,149,138,0,401,404,402,10,150,148,151,0,405,406,407,10,150,152,136,0,405,408,409,10,137,153,154,0,410,411,412,10,154,155,137,0,412,413,410,10,106,109,126,0,414,415,359,10,118,156,157,0,350,416,417,10,157,119,118,0,417,351,350,10,158,106,126,0,418,419,420,10,126,159,158,0,420,421,418,10,151,141,140,0,422,423,424,10,154,153,143,0,425,426,387,10,142,155,154,0,386,427,425,10,160,112,161,0,428,429,430,10,114,162,163,0,431,432,433,10,114,163,110,0,431,433,434,10,164,165,166,0,435,436,437,10,162,114,108,0,438,439,440,10,115,113,160,0,441,442,443,10,160,167,115,0,443,444,441,10,107,168,169,0,445,446,447,10,145,168,158,0,448,446,449,10,139,167,170,0,450,451,452,10,171,145,172,0,453,448,454,10,171,168,145,0,453,446,448,10,173,174,175,0,455,456,457,10,176,172,144,0,458,459,460,10,144,165,176,0,460,436,458,10,173,162,108,0,455,438,440,10,145,144,172,0,389,388,461,10,159,120,158,0,462,381,449,10,127,157,151,0,361,463,422,10,151,148,130,0,422,464,379,10,142,158,120,0,465,449,381,10,101,132,136,0,466,375,374,10,101,117,132,0,466,467,375,10,109,137,124,0,415,377,357,10,153,105,143,0,468,469,470,10,177,108,101,0,471,472,473,10,164,110,163,0,474,434,433,10,162,175,163,0,432,475,433,10,176,174,172,0,476,477,478,10,160,161,178,0,479,480,481,10,160,178,170,0,479,481,482,10,161,169,171,0,480,483,484,10,179,171,172,0,485,486,487,10,178,179,172,0,488,489,490,10,156,101,103,0,491,331,333,10,108,114,102,0,339,346,340,10,105,107,166,0,335,337,492,10,115,103,102,0,347,493,340,10,114,110,113,0,346,342,345,10,102,114,115,0,340,346,347,10,111,166,107,0,343,492,337,10,166,111,110,0,492,343,342,10,125,159,126,0,494,421,420,10,128,132,147,0,495,496,497,10,132,128,127,0,496,495,498,10,123,120,122,0,355,352,354,10,116,147,117,0,499,500,467,10,125,124,122,0,358,357,501,10,132,117,147,0,375,467,500,10,116,119,128,0,502,360,362,10,120,159,121,0,381,462,503,10,138,149,155,0,504,505,506,10,135,150,136,0,507,508,509,10,150,135,148,0,508,507,510,10,137,155,149,0,511,506,505,10,134,123,133,0,370,367,369,10,129,132,127,0,363,366,512,10,137,149,133,0,377,513,376,10,140,139,173,0,384,383,514,10,142,144,146,0,386,388,390,10,103,115,167,0,515,516,517,10,107,104,168,0,518,519,520,10,125,121,159,0,395,394,521,10,180,150,151,0,522,405,407,10,150,180,152,0,405,522,408,10,156,118,117,0,416,350,349,10,157,156,103,0,523,524,515,10,106,158,104,0,525,526,519,10,180,151,140,0,527,422,424,10,152,180,140,0,528,527,424,10,142,154,143,0,386,425,387,10,112,160,113,0,429,428,529,10,161,112,111,0,430,429,530,10,169,161,111,0,531,430,530,10,110,164,166,0,532,435,437,10,166,165,105,0,437,436,469,10,111,107,169,0,533,445,447,10,103,167,157,0,515,517,534,10,158,168,104,0,449,446,535,10,170,167,160,0,482,517,479,10,171,169,168,0,453,447,446,10,167,141,157,0,451,536,537,10,141,167,139,0,536,451,450,10,146,145,158,0,538,448,449,10,139,170,174,0,450,452,539,10,143,105,144,0,470,469,460,10,165,144,105,0,436,460,469,10,177,140,108,0,540,541,542,10,140,173,108,0,541,543,542,10,162,173,175,0,438,455,457,10,174,173,139,0,539,544,450,10,127,119,157,0,361,360,463,10,130,127,151,0,379,361,422,10,138,142,120,0,380,465,381,10,142,138,155,0,465,380,545,10,177,136,152,0,546,374,547,10,177,101,136,0,546,466,374,10,153,137,109,0,468,377,415,10,101,156,117,0,466,491,467,10,109,124,126,0,415,357,359,10,177,152,140,0,471,548,549,10,153,109,105,0,468,415,469,10,151,157,141,0,422,463,423,10,142,146,158,0,465,538,449,10,164,176,165,0,474,550,551,10,176,164,163,0,550,474,433,10,175,176,163,0,552,476,553,10,175,174,176,0,552,477,476,10,161,171,178,0,480,484,481,10,170,178,174,0,452,554,539,10,171,179,178,0,486,485,554,10,174,178,172,0,555,488,490,10,181,182,183,0,556,557,558,10,182,184,185,0,559,560,561,10,186,181,183,0,562,563,564,10,186,184,181,0,562,565,563,10,185,186,182,0,561,566,559,10,181,184,182,0,567,560,559,10,184,186,185,0,568,569,570,10,186,183,182,0,571,572,573,10,187,188,189,0,574,575,576,10,190,189,188,0,577,578,579,10,191,189,192,0,580,581,582,10,193,190,188,0,583,584,585,10,191,192,193,0,586,587,583,10,187,189,191,0,574,576,588,10,192,194,193,0,589,590,591,10,190,194,189,0,577,592,578,10,190,193,194,0,584,583,593,10,193,188,187,0,583,585,594,10,192,189,194,0,582,595,596,10,187,191,193,0,597,586,583,10,195,196,197,0,598,599,600,10,197,196,198,0,601,602,603,10,199,195,197,0,604,598,600,10,199,197,198,0,605,601,603,10,196,195,198,0,606,607,608,10,199,198,195,0,609,610,611,10,200,201,202,0,612,613,614,10,203,202,201,0,615,616,617,10,203,201,204,0,615,617,618,10,200,203,204,0,619,620,621,10,202,203,200,0,622,620,619,10,200,204,201,0,623,624,625,10,205,206,207,0,626,627,628,10,208,207,209,0,629,630,631,10,207,206,209,0,632,633,634,10,208,205,207,0,635,636,637,10,210,209,206,0,638,634,633,10,205,208,211,0,636,635,639,10,211,208,209,0,640,641,642,10,205,210,206,0,643,644,645,10,210,211,209,0,646,647,631,10,210,205,211,0,648,636,639,10,212,213,214,0,649,650,651,10,213,215,214,0,652,653,654,10,216,217,212,0,655,656,657,10,217,215,213,0,658,659,660,10,215,218,214,0,661,662,663,10,212,218,216,0,657,664,655,10,218,212,214,0,665,649,651,10,218,215,216,0,666,667,668,10,217,213,212,0,669,670,671,10,216,215,217,0,668,667,672,10,219,220,221,0,673,674,675,10,222,219,223,0,676,677,678,10,221,224,223,0,679,680,681,10,225,222,224,0,682,683,684,10,219,221,223,0,685,686,687,10,219,222,225,0,688,689,690,10,223,224,222,0,691,692,693,10,220,219,225,0,674,673,694,10,220,225,224,0,695,696,697,10,220,224,221,0,698,680,679,10,226,227,228,0,699,700,701,10,228,227,229,0,701,700,702,10,229,230,231,0,703,704,705,10,230,227,232,0,706,707,708,10,229,231,226,0,709,710,711,10,232,231,230,0,712,713,714,10,231,232,226,0,715,716,717,10,230,229,227,0,704,703,718,10,226,232,227,0,719,708,720,10,228,229,226,0,721,709,711,10,233,234,235,0,722,723,724,10,236,233,235,0,725,726,727,10,234,237,238,0,728,729,730,10,235,234,238,0,731,728,730,10,239,236,238,0,732,733,734,10,237,239,238,0,735,736,737,10,240,233,239,0,738,739,732,10,233,236,239,0,726,725,740,10,234,240,237,0,728,741,729,10,238,236,235,0,742,743,744,10,240,234,233,0,745,746,747,10,240,239,237,0,738,732,748,10,241,242,243,0,749,750,751,10,244,243,245,0,752,753,754,10,245,242,246,0,755,756,757,10,244,241,243,0,758,759,760,10,241,244,246,0,761,762,763,10,242,245,243,0,764,765,766,10,242,241,246,0,767,768,769,10,245,246,244,0,755,757,770,10,247,248,249,0,771,772,773,10,250,251,252,0,774,775,776,10,248,253,250,0,777,778,779,10,253,251,250,0,778,780,779,10,252,254,249,0,781,782,783,10,252,249,250,0,776,784,774,10,248,250,249,0,777,779,785,10,253,248,247,0,786,787,788,10,251,254,252,0,789,790,791,10,254,247,249,0,792,793,783,10,251,253,254,0,794,795,796,10,253,247,254,0,797,793,792,10,255,256,257,0,798,799,800,10,258,257,256,0,801,800,799,10,259,260,261,0,802,803,804,10,262,259,261,0,805,802,804,10,262,261,263,0,805,804,806,10,258,262,263,0,807,808,809,10,255,259,256,0,810,811,812,10,262,256,259,0,813,814,815,10,261,257,258,0,816,817,818,10,257,261,260,0,817,816,819,10,263,261,258,0,820,821,822,10,258,256,262,0,823,824,825,10,259,255,257,0,811,810,826,10,260,259,257,0,827,828,829,10,264,265,266,0,830,831,832,10,267,268,269,0,833,834,835,10,267,270,264,0,836,837,838,10,264,266,267,0,839,840,841,10,268,265,270,0,842,843,844,10,270,267,269,0,845,846,847,10,268,271,266,0,848,849,850,10,266,265,268,0,850,851,848,10,271,267,266,0,852,853,854,10,264,270,265,0,830,855,831,10,269,268,270,0,856,842,844,10,267,271,268,0,833,857,834,10,272,273,274,0,858,859,860,10,275,276,277,0,861,862,863,10,276,275,278,0,862,861,864,10,274,273,275,0,865,866,867,10,274,276,279,0,868,869,870,10,276,274,277,0,871,872,873,10,272,274,279,0,858,860,874,10,275,277,274,0,867,875,865,10,273,272,275,0,876,877,878,10,278,275,272,0,879,880,881,10,272,279,278,0,882,883,884,10,276,278,279,0,885,886,887,10,280,281,282,0,888,889,890,10,283,284,285,0,891,892,893,10,283,281,286,0,894,895,896,10,280,282,287,0,888,890,897,10,283,286,284,0,891,898,892,10,284,280,287,0,899,900,901,10,280,284,286,0,900,899,902,10,285,282,281,0,903,904,905,10,282,285,287,0,906,907,908,10,287,285,284,0,909,910,911,10,281,280,286,0,912,913,914,10,281,283,285,0,915,916,917,10,288,289,290,0,918,919,920,10,291,292,293,0,921,922,923,10,289,288,291,0,924,925,926,10,291,293,289,0,927,928,929,10,290,293,292,0,930,931,932,10,288,294,295,0,933,934,935,10,291,288,295,0,936,937,938,10,288,290,294,0,918,920,939,10,294,290,292,0,940,930,932,10,290,289,293,0,941,942,943,10,292,295,294,0,944,945,946,10,291,295,292,0,921,947,922,10,296,297,298,0,948,949,950,10,299,300,296,0,951,952,948,10,301,302,303,0,953,954,955,10,303,304,305,0,955,956,957,10,306,300,299,0,958,959,960,10,299,305,306,0,960,961,958,10,305,304,306,0,961,962,958,10,307,308,309,0,963,964,965,10,309,308,310,0,966,967,968,10,309,310,302,0,966,968,969,10,311,309,301,0,970,971,972,10,299,312,313,0,973,974,975,10,299,313,305,0,973,975,976,10,298,314,312,0,977,978,974,10,315,316,317,0,979,980,981,10,318,319,320,0,982,983,984,10,321,322,323,0,985,986,987,10,324,314,325,0,988,989,990,10,322,326,327,0,991,992,993,10,327,311,328,0,993,994,995,10,325,314,329,0,990,989,996,10,329,330,331,0,996,997,998,10,326,330,327,0,992,997,993,10,312,314,324,0,974,978,999,10,332,333,324,0,1000,1001,999,10,328,311,334,0,1002,970,1003,10,331,320,319,0,1004,1005,1006,10,335,326,322,0,1007,1008,1009,10,319,332,324,0,1006,1010,1011,10,328,315,322,0,1012,979,986,10,313,336,337,0,975,1013,1014,10,313,333,338,0,1015,1016,1017,10,338,336,313,0,1017,1018,1015,10,339,340,341,0,1019,1020,1021,10,342,343,341,0,1022,1023,1024,10,342,344,345,0,1022,1025,1026,10,346,347,348,0,1027,1028,1029,10,348,349,344,0,1029,1030,1031,10,349,350,351,0,1032,1033,1034,10,341,352,346,0,1035,1036,1037,10,342,341,346,0,1038,1035,1037,10,353,354,355,0,1039,1040,1041,10,355,347,353,0,1041,1042,1039,10,356,347,357,0,1043,1042,1044,10,358,355,354,0,1045,1041,1040,10,359,360,361,0,1046,1047,1048,10,358,362,363,0,1045,1049,1050,10,363,357,358,0,1050,1044,1045,10,363,359,361,0,1050,1046,1048,10,364,365,366,0,1051,1052,1053,10,367,368,364,0,1054,1055,1051,10,369,368,370,0,1056,1055,1057,10,365,371,372,0,1058,1059,1060,10,373,370,374,0,1061,1057,1062,10,374,375,373,0,1062,1063,1061,10,376,369,373,0,1064,1056,1061,10,377,378,379,0,1065,1066,1067,10,377,379,371,0,1065,1067,1059,10,371,380,377,0,1059,1068,1065,10,376,373,375,0,1064,1061,1063,10,376,381,382,0,1064,1069,1070,10,383,384,385,0,1071,1072,1073,10,386,345,387,0,1074,1075,1076,10,388,389,366,0,1077,1078,1079,10,370,390,391,0,1057,1080,1081,10,391,374,370,0,1081,1062,1057,10,367,366,389,0,1082,1079,1078,10,389,392,368,0,1078,1083,1084,10,368,392,390,0,1055,1085,1080,10,388,331,330,0,1077,1004,1086,10,391,390,330,0,1087,1088,997,10,345,344,387,0,1089,1025,1090,10,393,362,378,0,1091,1049,1092,10,394,363,395,0,1093,1050,1094,10,378,395,393,0,1092,1094,1091,10,396,382,381,0,1095,1070,1069,10,381,359,394,0,1069,1096,1097,10,329,314,309,0,996,989,1098,10,329,327,330,0,996,993,997,10,351,397,398,0,1034,1099,1100,10,399,400,340,0,1101,1102,1103,10,351,398,401,0,1034,1100,1104,10,402,403,404,0,1105,1106,1107,10,405,323,406,0,1108,1109,1110,10,404,332,407,0,1111,1112,1113,10,316,405,408,0,1114,1115,1116,10,407,403,402,0,1117,1118,1119,10,407,318,403,0,1117,982,1118,10,406,323,317,0,1120,1121,1122,10,317,316,408,0,1123,1124,1125,10,317,408,406,0,1123,1125,1126,10,409,333,332,0,1127,1001,1000,10,315,334,410,0,1128,1129,1130,10,411,321,323,0,1131,985,987,10,405,410,411,0,1132,1130,1131,10,412,413,414,0,1133,1134,1135,10,415,413,412,0,1136,1134,1133,10,416,414,413,0,1137,1135,1134,10,414,416,417,0,1138,1139,1140,10,418,419,420,0,1141,1142,1143,10,421,422,423,0,1144,1145,1146,10,424,338,425,0,1147,1148,1149,10,424,426,427,0,1147,1150,1151,10,428,429,427,0,1152,1153,1154,10,416,430,431,0,1139,1155,1156,10,432,433,434,0,1157,1158,1159,10,425,435,418,0,1160,1161,1162,10,436,437,438,0,1163,1164,1165,10,438,439,440,0,1166,1167,1168,10,441,442,443,0,1169,1170,1171,10,444,445,446,0,1172,1173,1174,10,447,448,449,0,1175,1176,1177,10,447,449,450,0,1175,1177,1178,10,423,451,441,0,1179,1180,1181,10,420,445,452,0,1182,1183,1184,10,453,447,423,0,1185,1175,1146,10,441,451,420,0,1181,1180,1182,10,452,454,441,0,1186,1187,1169,10,441,443,453,0,1188,1189,1190,10,445,439,452,0,1191,1192,1186,10,453,455,447,0,1193,1194,1195,10,440,445,444,0,1168,1196,1197,10,455,456,447,0,1198,1199,1200,10,436,457,456,0,1201,1202,1199,10,457,438,440,0,1202,1203,1204,10,457,440,444,0,1205,1168,1206,10,454,439,442,0,1207,1208,1209,10,442,458,459,0,1210,1211,1212,10,459,460,438,0,1212,1213,1214,10,437,461,462,0,1215,1216,1217,10,439,463,458,0,1218,1219,1220,10,458,442,439,0,1220,1221,1218,10,439,438,460,0,1167,1166,1222,10,437,464,461,0,1164,1223,1224,10,445,420,465,0,1225,1226,1227,10,465,466,445,0,1227,1228,1225,10,447,450,467,0,1175,1229,1230,10,465,468,469,0,1227,1231,1232,10,470,471,467,0,1233,1234,1235,10,472,447,467,0,1236,1175,1230,10,466,446,445,0,1228,1237,1238,10,465,469,466,0,1227,1232,1228,10,422,416,413,0,1239,1137,1134,10,418,473,415,0,1240,1241,1136,10,474,427,475,0,1242,1243,1244,10,476,417,477,0,1245,1246,1247,10,429,412,475,0,1248,1133,1244,10,424,474,336,0,1249,1242,1018,10,476,477,478,0,1245,1247,1250,10,478,337,336,0,1250,1251,1018,10,421,430,416,0,1252,1253,1137,10,426,425,418,0,1254,1255,1240,10,479,338,333,0,1256,1257,1001,10,334,337,480,0,1129,1258,1259,10,410,480,481,0,1130,1259,1260,10,320,482,483,0,1005,1261,1262,10,484,485,486,0,1263,1264,1265,10,486,487,484,0,1265,1266,1263,10,484,488,489,0,1263,1267,1268,10,486,490,487,0,1265,1269,1266,10,491,482,492,0,1270,1261,1271,10,400,483,491,0,1272,1262,1270,10,487,490,397,0,1266,1269,1099,10,397,493,487,0,1099,1273,1266,10,481,480,486,0,1274,1275,1265,10,494,409,495,0,1276,1277,1278,10,494,495,496,0,1276,1278,1279,10,481,486,485,0,1274,1265,1264,10,485,410,481,0,1264,1280,1274,10,397,490,398,0,1099,1269,1100,10,479,497,498,0,1281,1282,1283,10,479,498,338,0,1281,1283,1284,10,432,499,480,0,1285,1286,1287,10,494,500,479,0,1288,1289,1290,10,480,499,490,0,1275,1291,1269,10,501,496,495,0,1292,1293,1294,10,502,485,503,0,1295,1296,1297,10,504,505,506,0,1298,1299,1300,10,507,508,502,0,1301,1302,1303,10,501,509,506,0,1304,1305,1306,10,510,511,501,0,1307,1308,1304,10,512,513,514,0,1309,1310,1311,10,511,320,483,0,1308,1312,1313,10,501,483,496,0,1304,1313,1314,10,484,489,512,0,1315,1316,1317,10,504,511,515,0,1318,1319,1320,10,516,411,502,0,1321,1322,1323,10,516,502,508,0,1321,1323,1324,10,403,495,409,0,1325,1326,1327,10,403,320,511,0,1325,1328,1319,10,331,372,320,0,1004,1060,1005,10,335,321,489,0,1329,1330,1331,10,335,391,326,0,1329,1087,992,10,497,500,517,0,1332,1333,1334,10,401,490,499,0,1335,1336,1337,10,499,518,401,0,1337,1338,1335,10,505,497,519,0,1339,1332,1340,10,519,506,505,0,1340,1341,1339,10,518,499,508,0,1342,1343,1302,10,519,517,520,0,1344,1345,1346,10,520,521,522,0,1346,1347,1348,10,520,522,519,0,1346,1348,1344,10,523,401,518,0,1349,1335,1338,10,517,399,520,0,1345,1350,1346,10,505,515,524,0,1351,1320,1352,10,525,497,505,0,1353,1354,1351,10,516,526,527,0,1321,1355,1356,10,508,499,526,0,1324,1286,1355,10,526,528,529,0,1355,1357,1358,10,529,527,526,0,1358,1356,1355,10,498,497,525,0,1359,1354,1353,10,526,499,432,0,1355,1286,1285,10,435,525,419,0,1360,1361,1142,10,383,530,531,0,1362,1363,1364,10,532,533,345,0,1365,1366,1367,10,345,386,532,0,1367,1368,1365,10,533,448,343,0,1366,1176,1023,10,533,343,345,0,1366,1023,1026,10,534,362,354,0,1369,1049,1040,10,535,536,534,0,1370,1371,1369,10,493,397,350,0,1273,1099,1033,10,360,350,361,0,1372,1033,1373,10,535,537,536,0,1370,1374,1371,10,356,361,350,0,1375,1373,1033,10,482,372,371,0,1261,1060,1059,10,379,492,482,0,1067,1271,1261,10,488,538,375,0,1376,1377,1063,10,375,374,488,0,1063,1062,1376,10,375,538,359,0,1063,1377,1096,10,466,469,539,0,1228,1232,1378,10,470,450,540,0,1233,1379,1380,10,385,541,542,0,1073,1381,1382,10,542,543,385,0,1382,1383,1073,10,387,544,545,0,1384,1385,1386,10,387,545,546,0,1384,1386,1387,10,449,540,450,0,1177,1388,1178,10,543,542,468,0,1389,1390,1391,10,544,467,471,0,1385,1392,1393,10,374,489,488,0,1394,1268,1267,10,351,523,544,0,1034,1395,1396,10,351,401,523,0,1034,1104,1395,10,547,544,523,0,1397,1396,1395,10,548,524,521,0,1398,1399,1400,10,515,510,521,0,1401,1402,1400,10,527,513,516,0,1403,1404,1405,10,544,547,467,0,1406,1407,1408,10,351,387,344,0,1034,1090,1025,10,549,518,507,0,1409,1338,1410,10,549,507,514,0,1411,1412,1413,10,549,514,513,0,1411,1413,1414,10,548,465,419,0,1398,1415,1142,10,548,419,525,0,1398,1142,1361,10,525,524,548,0,1361,1399,1398,10,472,467,547,0,1236,1230,1397,10,312,296,298,0,1416,948,950,10,312,299,296,0,1416,951,948,10,301,303,305,0,953,955,957,10,298,307,309,0,950,963,965,10,307,298,297,0,963,950,949,10,301,309,302,0,1417,966,969,10,298,309,314,0,1418,1098,989,10,311,305,334,0,970,976,1003,10,311,301,305,0,970,972,976,10,332,319,318,0,1010,1006,1419,10,323,315,317,0,987,979,981,10,315,323,322,0,979,987,986,10,403,318,320,0,1118,982,984,10,322,327,328,0,991,993,995,10,331,325,329,0,998,990,996,10,333,312,324,0,1001,974,999,10,328,334,315,0,1002,1003,1420,10,331,319,325,0,1004,1006,1421,10,335,322,321,0,1007,1009,1422,10,325,319,324,0,1421,1006,1011,10,334,313,337,0,1423,975,1014,10,313,334,305,0,975,1423,976,10,313,312,333,0,1015,1424,1016,10,339,341,446,0,1019,1021,1425,10,341,343,446,0,1021,1426,1425,10,343,342,345,0,1023,1022,1026,10,346,352,347,0,1027,1427,1028,10,342,348,344,0,1428,1029,1031,10,348,342,346,0,1029,1428,1027,10,537,352,340,0,1429,1427,1430,10,344,349,351,0,1025,1032,1034,10,341,340,352,0,1035,1103,1036,10,353,535,354,0,1039,1370,1040,10,535,353,537,0,1370,1039,1374,10,361,356,357,0,1048,1043,1044,10,357,355,358,0,1044,1041,1045,10,355,357,347,0,1041,1044,1042,10,358,354,362,0,1045,1040,1049,10,363,361,357,0,1050,1048,1044,10,348,356,349,0,1431,1043,1432,10,356,348,347,0,1043,1431,1042,10,537,347,352,0,1374,1042,1433,10,347,537,353,0,1042,1374,1039,10,349,356,350,0,1032,1375,1033,10,380,364,369,0,1434,1051,1056,10,364,380,365,0,1051,1434,1052,10,367,364,366,0,1054,1051,1053,10,373,369,370,0,1061,1056,1057,10,369,364,368,0,1056,1051,1055,10,371,365,380,0,1059,1058,1068,10,366,365,372,0,1079,1058,1060,10,380,382,377,0,1434,1070,1435,10,380,376,382,0,1434,1064,1070,10,376,380,369,0,1064,1434,1056,10,376,375,381,0,1064,1063,1069,10,530,383,339,0,1436,1071,1437,10,339,383,385,0,1437,1071,1073,10,386,387,546,0,1074,1076,1438,10,366,372,388,0,1079,1060,1077,10,367,389,368,0,1082,1078,1084,10,370,368,390,0,1057,1055,1080,10,389,330,392,0,1439,997,1440,10,390,392,330,0,1088,1440,997,10,389,388,330,0,1078,1077,1086,10,326,391,330,0,992,1087,997,10,530,339,446,0,1441,1019,1425,10,363,393,395,0,1050,1091,1094,10,393,363,362,0,1091,1050,1049,10,396,394,395,0,1442,1093,1094,10,363,394,359,0,1050,1093,1046,10,378,377,395,0,1092,1443,1094,10,396,381,394,0,1095,1069,1097,10,382,395,377,0,1444,1094,1443,10,395,382,396,0,1094,1444,1445,10,329,311,327,0,996,994,993,10,311,329,309,0,994,996,1098,10,536,340,400,0,1446,1430,1447,10,340,536,537,0,1430,1446,1429,10,351,350,397,0,1034,1033,1099,10,408,405,406,0,1448,1108,1110,10,402,404,407,0,1449,1111,1113,10,318,407,332,0,1450,1451,1452,10,409,332,404,0,1127,1000,1453,10,403,409,404,0,1118,1127,1453,10,405,316,410,0,1132,980,1130,10,316,315,410,0,980,1128,1130,10,405,411,323,0,1132,1131,987,10,429,415,412,0,1454,1455,1456,10,473,418,420,0,1457,1141,1143,10,550,421,423,0,1458,1144,1146,10,421,550,551,0,1144,1458,1459,10,473,420,451,0,1457,1182,1180,10,423,422,451,0,1146,1145,1460,10,422,473,451,0,1461,1457,1180,10,426,424,425,0,1150,1147,1149,10,432,430,433,0,1462,1463,1464,10,430,432,478,0,1463,1462,1465,10,430,478,477,0,1463,1465,1466,10,431,430,477,0,1467,1463,1466,10,477,417,431,0,1468,1140,1156,10,426,428,427,0,1469,1152,1154,10,427,429,475,0,1154,1153,1470,10,429,428,415,0,1153,1152,1471,10,416,431,417,0,1139,1156,1140,10,433,551,434,0,1158,1459,1159,10,528,551,550,0,1472,1459,1458,10,551,528,434,0,1459,1472,1159,10,418,435,419,0,1141,1360,1142,10,455,437,436,0,1473,1164,1163,10,437,455,443,0,1164,1473,1474,10,441,454,442,0,1169,1187,1170,10,447,456,448,0,1175,1475,1176,10,441,453,423,0,1181,1476,1179,10,441,420,452,0,1181,1182,1184,10,452,439,454,0,1186,1192,1187,10,453,443,455,0,1193,1171,1194,10,440,439,445,0,1168,1167,1196,10,455,436,456,0,1198,1201,1199,10,457,436,438,0,1202,1201,1203,10,457,446,343,0,1477,1478,1479,10,446,457,444,0,1478,1477,1480,10,343,456,457,0,1023,1475,1481,10,456,343,448,0,1475,1023,1176,10,442,438,437,0,1209,1482,1483,10,438,442,459,0,1214,1210,1212,10,442,437,462,0,1484,1215,1217,10,462,464,443,0,1485,1486,1487,10,442,462,443,0,1488,1485,1487,10,463,439,460,0,1489,1167,1222,10,437,443,464,0,1164,1474,1223,10,447,550,423,0,1175,1458,1146,10,448,533,449,0,1176,1366,1177,10,420,419,465,0,1143,1142,1415,10,447,472,550,0,1175,1236,1458,10,450,470,467,0,1379,1233,1235,10,422,415,473,0,1239,1136,1241,10,415,422,413,0,1136,1239,1134,10,422,421,416,0,1239,1252,1137,10,475,552,474,0,1244,1490,1242,10,552,414,476,0,1490,1135,1245,10,414,417,476,0,1135,1246,1245,10,476,474,552,0,1245,1242,1490,10,475,412,552,0,1244,1133,1490,10,414,552,412,0,1135,1490,1133,10,474,424,427,0,1242,1249,1243,10,338,424,336,0,1017,1249,1018,10,478,432,337,0,1250,1285,1251,10,474,478,336,0,1242,1250,1018,10,478,474,476,0,1250,1242,1245,10,428,418,415,0,1491,1240,1136,10,430,421,551,0,1253,1252,1492,10,428,426,418,0,1491,1254,1240,10,433,430,551,0,1493,1253,1492,10,479,409,494,0,1256,1127,1494,10,409,479,333,0,1127,1256,1001,10,410,334,480,0,1130,1129,1259,10,400,496,483,0,1495,1279,1496,10,496,400,494,0,1279,1495,1276,10,491,483,482,0,1270,1262,1261,10,488,493,538,0,1267,1273,1497,10,493,488,484,0,1273,1267,1263,10,493,484,487,0,1273,1263,1266,10,400,491,536,0,1272,1270,1498,10,500,494,400,0,1499,1276,1495,10,536,491,534,0,1498,1270,1500,10,432,480,337,0,1285,1287,1251,10,497,479,500,0,1501,1290,1502,10,480,490,486,0,1275,1269,1265,10,509,495,504,0,1503,1294,1298,10,501,495,509,0,1292,1294,1503,10,485,502,410,0,1296,1295,1504,10,509,504,506,0,1503,1298,1300,10,503,507,502,0,1505,1301,1303,10,507,503,514,0,1301,1505,1506,10,515,511,510,0,1507,1508,1509,10,516,513,411,0,1405,1404,1510,10,411,489,321,0,1510,1268,1511,10,489,411,513,0,1268,1510,1404,10,489,513,512,0,1268,1404,1512,10,510,501,506,0,1307,1304,1306,10,514,485,512,0,1311,1513,1309,10,485,514,503,0,1513,1311,1514,10,501,511,483,0,1304,1308,1313,10,484,512,485,0,1315,1317,1296,10,505,504,515,0,1351,1318,1320,10,504,403,511,0,1318,1325,1319,10,403,504,495,0,1325,1318,1326,10,502,411,410,0,1323,1322,1515,10,331,388,372,0,1004,1077,1060,10,519,497,517,0,1340,1332,1334,10,507,518,508,0,1301,1342,1302,10,549,523,518,0,1409,1349,1338,10,400,517,500,0,1272,1345,1502,10,517,400,399,0,1345,1272,1350,10,401,398,490,0,1516,1517,1518,10,525,505,524,0,1353,1351,1352,10,516,508,526,0,1321,1324,1355,10,425,498,435,0,1519,1283,1520,10,498,425,338,0,1283,1519,1284,10,435,498,525,0,1521,1359,1353,10,432,434,528,0,1285,1522,1357,10,526,432,528,0,1355,1285,1357,10,528,550,472,0,1523,1524,1525,10,531,466,539,0,1364,1526,1527,10,466,531,530,0,1526,1364,1363,10,449,533,532,0,1177,1366,1365,10,530,446,466,0,1441,1425,1528,10,535,534,354,0,1370,1369,1040,10,360,493,350,0,1372,1273,1033,10,362,492,378,0,1529,1271,1066,10,492,362,534,0,1271,1529,1500,10,492,534,491,0,1271,1500,1270,10,538,360,359,0,1497,1372,1530,10,538,493,360,0,1497,1273,1372,10,379,482,371,0,1067,1261,1059,10,492,379,378,0,1271,1067,1066,10,381,375,359,0,1069,1063,1096,10,541,385,384,0,1381,1073,1072,10,465,543,468,0,1531,1389,1391,10,544,471,545,0,1385,1393,1386,10,320,372,482,0,1005,1060,1261,10,335,374,391,0,1532,1394,1533,10,374,335,489,0,1394,1532,1268,10,543,520,399,0,1534,1535,1536,10,521,543,548,0,1537,1538,1539,10,543,521,520,0,1538,1537,1540,10,523,549,547,0,1395,1541,1397,10,547,549,527,0,1397,1541,1403,10,547,527,529,0,1397,1403,1542,10,515,521,524,0,1401,1400,1399,10,513,527,549,0,1404,1403,1541,10,548,543,465,0,1539,1538,1543,10,339,399,340,0,1019,1536,1020,10,399,339,385,0,1536,1019,1544,10,385,543,399,0,1544,1534,1536,10,387,351,544,0,1545,1546,1547,10,519,510,506,0,1548,1307,1306,10,510,519,522,0,1307,1548,1549,10,510,522,521,0,1307,1549,1550,10,472,529,528,0,1236,1542,1551,10,529,472,547,0,1542,1236,1397,10,553,554,555,0,1552,1553,1554,10,556,557,558,0,1555,1556,1557,10,558,559,556,0,1557,1558,1555,10,554,560,561,0,1559,1560,1561,10,554,562,555,0,1559,1562,1563,10,555,562,557,0,1564,1565,1566,10,563,564,565,0,1567,1568,1569,10,566,565,567,0,1570,1571,1572,10,566,568,569,0,1570,1573,1574,10,570,571,572,0,1575,1576,1577,10,573,567,565,0,1578,1572,1571,10,565,572,571,0,1571,1579,1580,10,573,574,567,0,1578,1581,1572,10,573,575,576,0,1582,1583,1584,10,577,578,579,0,1585,1586,1587,10,580,579,581,0,1588,1589,1590,10,580,582,577,0,1588,1591,1592,10,580,577,579,0,1588,1592,1589,10,583,584,578,0,1593,1594,1586,10,579,585,586,0,1595,1596,1597,10,579,586,581,0,1595,1597,1598,10,578,584,587,0,1599,1600,1601,10,588,580,581,0,1602,1603,1604,10,588,581,574,0,1602,1604,1605,10,589,583,582,0,1606,1607,1608,10,582,590,589,0,1608,1609,1606,10,586,585,568,0,1610,1611,1612,10,591,584,589,0,1613,1614,1606,10,590,592,589,0,1615,1616,1617,10,593,568,585,0,1618,1619,1620,10,587,584,591,0,1621,1622,1623,10,594,592,595,0,1624,1616,1625,10,596,597,598,0,1626,1627,1628,10,594,599,592,0,1629,1630,1631,10,588,574,576,0,1632,1633,1634,10,600,599,594,0,1635,1636,1637,10,596,595,576,0,1626,1625,1634,10,601,602,603,0,1638,1639,1640,10,604,605,601,0,1641,1642,1638,10,606,603,602,0,1643,1640,1639,10,602,589,607,0,1639,1644,1645,10,608,609,610,0,1646,1647,1648,10,608,593,609,0,1646,1649,1647,10,609,602,601,0,1650,1651,1652,10,601,610,609,0,1652,1653,1650,10,591,589,602,0,1654,1655,1651,10,602,593,591,0,1651,1656,1654,10,603,607,611,0,1640,1645,1657,10,603,606,607,0,1640,1643,1645,10,604,603,608,0,1658,1659,1660,10,612,593,608,0,1661,1662,1660,10,612,608,603,0,1661,1660,1659,10,603,611,612,0,1659,1663,1661,10,613,611,607,0,1664,1657,1645,10,576,575,596,0,1584,1583,1665,10,596,614,597,0,1665,1666,1667,10,600,572,599,0,1635,1668,1636,10,600,597,614,0,1635,1669,1670,10,576,574,573,0,1584,1671,1582,10,574,568,566,0,1672,1673,1674,10,615,616,593,0,1675,1676,1677,10,564,563,599,0,1678,1679,1636,10,617,599,563,0,1680,1636,1679,10,563,569,617,0,1679,1681,1680,10,617,613,618,0,1680,1682,1683,10,592,599,618,0,1684,1685,1686,10,589,618,613,0,1687,1686,1688,10,619,611,620,0,1689,1690,1691,10,619,621,622,0,1692,1693,1694,10,622,611,619,0,1694,1695,1692,10,620,611,613,0,1696,1697,1698,10,623,617,622,0,1699,1700,1701,10,621,620,623,0,1702,1703,1699,10,569,622,617,0,1704,1705,1706,10,615,612,561,0,1707,1708,1709,10,557,624,625,0,1710,1711,1712,10,554,561,612,0,1559,1561,1713,10,558,625,568,0,1557,1714,1715,10,593,616,558,0,1677,1676,1557,10,625,569,568,0,1714,1716,1715,10,560,553,559,0,1717,1552,1718,10,554,553,560,0,1553,1552,1717,10,556,553,555,0,1719,1552,1554,10,559,553,556,0,1718,1552,1719,10,558,616,559,0,1557,1676,1558,10,616,560,559,0,1720,1721,1722,10,560,616,615,0,1721,1720,1707,10,560,615,561,0,1721,1707,1709,10,556,555,557,0,1723,1564,1566,10,572,565,564,0,1724,1569,1568,10,566,563,565,0,1570,1725,1571,10,563,566,569,0,1725,1570,1574,10,570,575,571,0,1575,1583,1576,10,571,573,565,0,1580,1578,1571,10,570,572,600,0,1726,1727,1728,10,570,600,614,0,1726,1728,1729,10,575,614,596,0,1583,1666,1665,10,614,575,570,0,1666,1583,1575,10,575,573,571,0,1583,1582,1576,10,583,577,582,0,1593,1585,1730,10,577,583,578,0,1585,1593,1586,10,579,587,585,0,1731,1601,1732,10,578,587,579,0,1599,1601,1731,10,582,588,590,0,1733,1602,1734,10,588,582,580,0,1602,1733,1603,10,589,584,583,0,1606,1614,1607,10,574,586,568,0,1735,1610,1612,10,586,574,581,0,1610,1735,1736,10,593,587,591,0,1618,1621,1623,10,587,593,585,0,1621,1618,1620,10,590,595,592,0,1615,1625,1616,10,595,590,588,0,1625,1615,1632,10,598,594,595,0,1628,1624,1625,10,596,598,595,0,1626,1628,1625,10,588,576,595,0,1632,1634,1625,10,600,598,597,0,1635,1737,1669,10,598,600,594,0,1737,1635,1637,10,604,601,603,0,1641,1638,1640,10,606,602,607,0,1643,1639,1645,10,602,609,593,0,1651,1650,1656,10,610,604,608,0,1738,1658,1660,10,605,604,610,0,1739,1658,1738,10,601,605,610,0,1740,1741,1742,10,574,566,567,0,1672,1674,1743,10,564,599,572,0,1678,1636,1668,10,599,617,618,0,1636,1680,1683,10,589,592,618,0,1687,1684,1686,10,589,613,607,0,1687,1688,1744,10,621,619,620,0,1745,1689,1691,10,623,620,613,0,1746,1696,1698,10,617,623,613,0,1700,1699,1747,10,621,623,622,0,1702,1699,1701,10,612,615,593,0,1708,1707,1748,10,624,557,562,0,1711,1710,1749,10,625,624,569,0,1750,1751,1704,10,569,624,622,0,1704,1751,1705,10,554,611,562,0,1559,1752,1562,10,611,554,612,0,1752,1559,1713,10,611,624,562,0,1752,1753,1562,10,622,624,611,0,1754,1753,1752,10,593,558,568,0,1677,1557,1715,10,558,557,625,0,1557,1556,1714,10,626,627,628,0,1755,1756,1757,10,629,630,631,0,1758,1759,1760,10,632,628,629,0,1761,1762,1763,10,632,629,633,0,1761,1763,1764,10,632,633,626,0,1761,1764,1765,10,633,631,634,0,1766,1767,1768,10,634,635,626,0,1768,1769,1770,10,628,636,630,0,1771,1772,1773,10,637,635,638,0,1774,1775,1776,10,639,631,630,0,1777,1760,1759,10,640,630,636,0,1778,1773,1772,10,636,627,637,0,1772,1779,1780,10,637,641,642,0,1780,1781,1782,10,637,638,643,0,1774,1776,1783,10,644,639,645,0,1784,1777,1785,10,643,638,639,0,1786,1787,1788,10,642,644,645,0,1789,1790,1791,10,632,626,628,0,1792,1755,1757,10,633,629,631,0,1793,1758,1760,10,633,634,626,0,1766,1768,1770,10,636,628,627,0,1772,1771,1779,10,629,628,630,0,1794,1771,1773,10,634,631,635,0,1768,1767,1769,10,627,626,635,0,1756,1755,1775,10,637,627,635,0,1774,1756,1775,10,640,639,630,0,1795,1777,1759,10,631,638,635,0,1767,1787,1769,10,639,638,631,0,1788,1787,1767,10,640,636,637,0,1778,1772,1780,10,642,645,640,0,1782,1796,1778,10,642,640,637,0,1782,1778,1780,10,645,639,640,0,1785,1777,1795,10,641,637,643,0,1797,1774,1783,10,644,643,639,0,1798,1786,1788,10,642,641,643,0,1789,1799,1800,10,642,643,644,0,1789,1800,1790,10,646,647,648,0,1801,1802,1803,10,646,648,649,0,1801,1803,1804,10,650,646,651,0,1805,1806,1807,10,650,652,653,0,1805,1808,1809,10,654,655,656,0,1810,1811,1812,10,652,651,649,0,1813,1814,1815,10,650,653,656,0,1816,1817,1818,10,657,658,659,0,1819,1820,1821,10,660,661,658,0,1822,1823,1820,10,660,657,662,0,1822,1819,1824,10,663,664,665,0,1825,1826,1827,10,665,666,663,0,1827,1828,1825,10,663,667,668,0,1825,1829,1830,10,658,668,667,0,1831,1832,1833,10,648,659,658,0,1834,1835,1831,10,669,662,670,0,1836,1837,1838,10,671,670,665,0,1839,1838,1840,10,654,670,662,0,1841,1838,1837,10,662,655,654,0,1837,1842,1841,10,648,667,649,0,1834,1833,1843,10,648,647,659,0,1834,1844,1835,10,649,667,663,0,1845,1829,1825,10,672,659,647,0,1846,1821,1847,10,664,673,674,0,1826,1848,1849,10,674,665,664,0,1849,1827,1826,10,664,668,675,0,1826,1830,1850,10,676,675,668,0,1851,1852,1832,10,677,678,674,0,1853,1854,1849,10,675,679,677,0,1850,1855,1853,10,680,679,675,0,1856,1857,1852,10,681,669,671,0,1858,1836,1839,10,682,671,674,0,1859,1839,1860,10,674,678,682,0,1860,1861,1859,10,680,683,679,0,1856,1862,1857,10,661,684,683,0,1863,1864,1862,10,685,686,681,0,1865,1866,1858,10,685,678,687,0,1865,1861,1867,10,683,688,689,0,1862,1868,1869,10,689,679,683,0,1869,1857,1862,10,688,690,686,0,1870,1871,1872,10,688,685,687,0,1870,1873,1874,10,688,691,689,0,1870,1875,1876,10,691,687,678,0,1877,1878,1879,10,691,677,679,0,1877,1880,1881,10,660,681,686,0,1882,1883,1884,10,651,646,649,0,1885,1801,1804,10,652,650,651,0,1808,1805,1807,10,654,653,666,0,1810,1809,1886,10,653,654,656,0,1809,1810,1812,10,653,652,666,0,1887,1813,1888,10,646,656,647,0,1889,1818,1890,10,656,646,650,0,1818,1889,1816,10,657,660,658,0,1819,1822,1820,10,669,660,662,0,1891,1822,1824,10,664,663,668,0,1826,1825,1830,10,648,658,667,0,1834,1831,1833,10,658,676,668,0,1831,1851,1832,10,676,658,661,0,1851,1831,1863,10,665,670,666,0,1840,1838,1892,10,671,669,670,0,1839,1836,1838,10,672,647,656,0,1893,1894,1895,10,672,656,655,0,1893,1895,1896,10,692,666,652,0,1897,1898,1899,10,692,652,649,0,1897,1899,1900,10,654,666,670,0,1841,1892,1838,10,692,649,663,0,1901,1845,1825,10,692,663,666,0,1901,1825,1828,10,672,662,657,0,1846,1824,1819,10,672,657,659,0,1846,1819,1821,10,662,672,655,0,1824,1846,1902,10,673,664,675,0,1848,1826,1850,10,674,671,665,0,1860,1839,1840,10,681,660,669,0,1903,1822,1891,10,673,677,674,0,1848,1853,1849,10,673,675,677,0,1848,1850,1853,10,676,680,675,0,1851,1856,1852,10,680,676,661,0,1856,1851,1863,10,682,681,671,0,1859,1858,1839,10,661,660,684,0,1904,1882,1905,10,680,661,683,0,1856,1863,1862,10,682,685,681,0,1859,1865,1858,10,685,682,678,0,1865,1859,1861,10,688,683,684,0,1868,1862,1864,10,685,688,686,0,1873,1870,1872,10,691,688,687,0,1875,1870,1874,10,690,688,684,0,1871,1870,1906,10,677,691,678,0,1880,1877,1879,10,689,691,679,0,1907,1877,1881,10,690,684,660,0,1908,1905,1882,10,690,660,686,0,1908,1882,1884,10,693,694,695,0,1909,1910,1911,10,693,695,696,0,1909,1911,1912,10,696,697,693,0,1912,1913,1909,10,696,695,698,0,1914,1915,1916,10,699,698,700,0,1917,1916,1918,10,699,700,701,0,1917,1918,1919,10,702,703,704,0,1920,1921,1922,10,702,701,700,0,1920,1923,1924,10,693,705,706,0,1909,1925,1926,10,697,707,705,0,1913,1927,1925,10,707,708,705,0,1927,1928,1925,10,707,701,709,0,1929,1919,1930,10,702,704,710,0,1920,1922,1931,10,711,709,701,0,1932,1933,1923,10,712,710,704,0,1934,1935,1936,10,712,703,693,0,1934,1937,1938,10,702,700,698,0,1939,1940,1941,10,698,695,694,0,1941,1942,1943,10,713,711,710,0,1944,1945,1946,10,713,712,706,0,1944,1947,1948,10,713,705,708,0,1944,1949,1950,10,699,696,698,0,1917,1914,1916,10,696,699,697,0,1914,1917,1951,10,697,699,701,0,1951,1917,1919,10,693,703,694,0,1938,1937,1952,10,693,697,705,0,1909,1913,1925,10,707,697,701,0,1929,1951,1919,10,702,711,701,0,1920,1932,1923,10,711,702,710,0,1932,1920,1931,10,703,712,704,0,1937,1934,1936,10,706,712,693,0,1953,1934,1938,10,703,698,694,0,1954,1941,1943,10,702,698,703,0,1939,1941,1954,10,709,708,707,0,1930,1955,1929,10,711,713,709,0,1945,1944,1956,10,712,713,710,0,1947,1944,1946,10,705,713,706,0,1949,1944,1948,10,709,713,708,0,1956,1944,1950,10,714,715,716,0,1957,1958,1959,10,714,716,717,0,1957,1959,1960,10,714,718,715,0,1957,1961,1958,10,719,720,721,0,1962,1963,1964,10,719,722,723,0,1962,1965,1966,10,724,725,721,0,1967,1968,1969,10,721,725,726,0,1970,1971,1972,10,726,727,719,0,1972,1973,1974,10,726,719,721,0,1972,1974,1970,10,718,728,729,0,1975,1976,1977,10,714,730,718,0,1957,1978,1961,10,728,731,732,0,1979,1980,1981,10,718,733,731,0,1975,1982,1983,10,731,728,718,0,1983,1976,1975,10,718,723,733,0,1975,1984,1982,10,724,723,718,0,1967,1985,1961,10,717,732,734,0,1986,1987,1988,10,734,732,731,0,1989,1981,1980,10,716,715,729,0,1990,1991,1992,10,734,727,726,0,1988,1973,1972,10,735,731,733,0,1993,1983,1982,10,715,718,729,0,1994,1975,1977,10,730,714,717,0,1978,1957,1960,10,732,717,736,0,1987,1986,1995,10,728,732,736,0,1979,1981,1996,10,728,736,729,0,1979,1996,1997,10,722,719,735,0,1965,1962,1998,10,720,719,723,0,1963,1962,1966,10,724,720,723,0,1967,1999,1985,10,720,724,721,0,1999,1967,1969,10,722,735,733,0,2000,1993,1982,10,722,733,723,0,2000,1982,1984,10,719,737,735,0,2001,2002,2003,10,727,737,719,0,2004,2002,2001,10,730,717,725,0,2005,1986,1971,10,724,730,725,0,1967,1978,1968,10,730,724,718,0,1978,1967,1961,10,717,734,725,0,1986,1988,1971,10,736,716,729,0,2006,1990,1992,10,717,716,736,0,2007,1990,2006,10,734,726,725,0,1988,1972,1971,10,735,737,731,0,2003,2002,1980,10,734,737,727,0,1989,2002,2004,10,737,734,731,0,2002,1989,1980,10,738,739,740,0,2008,2009,2010,10,741,742,740,0,2011,2012,2010,10,743,739,738,0,2013,2014,2015,10,741,744,745,0,2016,2017,2018,10,744,739,745,0,2019,2020,2021,10,746,738,740,0,2022,2008,2010,10,744,740,739,0,2023,2024,2025,10,746,740,742,0,2022,2010,2012,10,741,747,742,0,2026,2027,2028,10,743,742,747,0,2029,2030,2031,10,747,745,743,0,2032,2018,2033,10,743,745,739,0,2013,2034,2014,10,742,743,738,0,2028,2035,2036,10,746,742,738,0,2037,2028,2036,10,741,740,744,0,2016,2038,2017,10,747,741,745,0,2032,2016,2018,10,748,749,750,0,2039,2040,2041,10,751,748,752,0,2042,2043,2044,10,753,754,755,0,2045,2046,2047,10,756,753,755,0,2048,2045,2047,10,757,755,754,0,2049,2050,2051,10,749,757,754,0,2052,2049,2051,10,748,756,757,0,2053,2054,2055,10,752,748,750,0,2056,2039,2041,10,748,751,756,0,2043,2042,2057,10,753,756,751,0,2058,2057,2042,10,757,756,755,0,2059,2048,2047,10,750,749,754,0,2060,2052,2051,10,749,748,757,0,2061,2053,2055,10,753,752,754,0,2062,2063,2064,10,752,753,751,0,2063,2062,2065,10,750,754,752,0,2066,2064,2063,10,758,759,760,0,2067,2068,2069,10,758,761,759,0,2067,2070,2068,10,762,763,760,0,2071,2072,2073,10,762,760,759,0,2071,2073,2074,10,764,763,762,0,2075,2076,2077,10,765,758,763,0,2078,2079,2080,10,762,759,766,0,2081,2082,2083,10,765,764,766,0,2084,2085,2086,10,764,767,766,0,2085,2087,2086,10,758,765,761,0,2067,2088,2070,10,765,766,761,0,2088,2089,2070,10,763,758,760,0,2072,2090,2073,10,767,764,762,0,2091,2075,2077,10,763,764,765,0,2076,2075,2092,10,766,759,761,0,2083,2082,2093,10,767,762,766,0,2094,2081,2083,10,768,769,770,0,2095,2096,2097,10,769,771,772,0,2098,2099,2100,10,773,770,772,0,2101,2102,2100,10,773,771,774,0,2103,2104,2105,10,775,776,777,0,2106,2107,2108,10,775,774,776,0,2106,2109,2107,10,778,773,775,0,2110,2111,2112,10,778,779,768,0,2110,2113,2114,10,769,777,771,0,2115,2116,2117,10,770,769,772,0,2097,2096,2118,10,768,777,769,0,2095,2119,2096,10,771,773,772,0,2120,2101,2100,10,774,771,776,0,2105,2104,2121,10,775,773,774,0,2122,2103,2105,10,779,775,777,0,2123,2106,2108,10,768,779,777,0,2124,2123,2108,10,778,775,779,0,2110,2112,2113,10,773,778,770,0,2111,2110,2125,10,778,768,770,0,2110,2114,2125,10,776,771,777,0,2126,2117,2116,10,780,781,782,0,2127,2128,2129,10,780,782,783,0,2127,2129,2130,10,784,785,781,0,2131,2132,2133,10,786,787,788,0,2134,2135,2136,10,787,785,788,0,2135,2137,2136,10,781,787,782,0,2138,2139,2140,10,783,784,780,0,2141,2142,2143,10,788,784,783,0,2144,2142,2141,10,782,787,783,0,2145,2146,2147,10,787,786,783,0,2146,2148,2147,10,784,781,780,0,2149,2128,2127,10,788,785,784,0,2150,2132,2131,10,781,785,787,0,2138,2151,2139,10,786,788,783,0,2152,2144,2141,10,789,790,791,0,2153,2154,2155,10,791,792,789,0,2155,2156,2153,10,793,794,795,0,2157,2158,2159,10,796,793,797,0,2160,2161,2162,10,789,796,798,0,2163,2164,2165,10,796,792,793,0,2166,2167,2168,10,796,789,792,0,2164,2163,2169,10,795,790,797,0,2170,2171,2172,10,798,797,790,0,2173,2172,2171,10,792,791,794,0,2156,2155,2174,10,795,791,790,0,2175,2155,2154,10,795,794,791,0,2176,2177,2178,10,797,793,795,0,2179,2157,2159,10,798,796,797,0,2180,2160,2162,10,790,789,798,0,2181,2163,2165,10,792,794,793,0,2167,2177,2168,10,799,800,801,0,2182,2183,2184,10,802,803,804,0,2185,2186,2187,10,805,804,803,0,2188,2187,2186,10,806,805,800,0,2189,2190,2191,10,807,804,799,0,2192,2193,2194,10,801,807,799,0,2195,2192,2194,10,799,806,800,0,2182,2196,2183,10,799,804,806,0,2197,2198,2199,10,805,806,804,0,2200,2199,2198,10,803,807,800,0,2186,2201,2202,10,807,803,802,0,2201,2186,2185,10,801,800,807,0,2203,2204,2205,10,805,803,800,0,2190,2206,2191,10,804,807,802,0,2193,2192,2207,10,808,809,810,0,2208,2209,2210,10,811,812,810,0,2211,2212,2213,10,813,808,810,0,2214,2208,2210,10,808,813,814,0,2215,2216,2217,10,814,813,812,0,2217,2216,2218,10,811,814,812,0,2219,2220,2221,10,810,809,811,0,2213,2222,2211,10,811,808,814,0,2223,2224,2225,10,809,808,811,0,2226,2224,2223,10,813,810,812,0,2227,2228,2229,10,815,816,817,0,2230,2231,2232,10,815,817,818,0,2230,2232,2233,10,817,819,820,0,2234,2235,2236,10,820,821,817,0,2236,2237,2234,10,821,818,817,0,2237,2238,2234,10,822,821,820,0,2239,2240,2241,10,823,824,825,0,2242,2243,2244,10,826,825,824,0,2245,2246,2247,10,827,826,816,0,2248,2245,2249,10,824,823,820,0,2250,2251,2252,10,824,820,819,0,2250,2252,2253,10,824,819,826,0,2250,2253,2254,10,822,825,827,0,2239,2244,2255,10,827,821,822,0,2256,2257,2258,10,817,816,819,0,2232,2231,2259,10,823,822,820,0,2242,2239,2241,10,822,823,825,0,2239,2242,2244,10,826,827,825,0,2245,2248,2246,10,819,816,826,0,2259,2231,2260,10,815,827,816,0,2261,2248,2249,10,818,827,815,0,2262,2256,2263,10,821,827,818,0,2257,2256,2262,10,828,829,830,0,2264,2265,2266,10,831,832,829,0,2267,2268,2269,10,829,828,831,0,2269,2270,2267,10,831,833,832,0,2267,2271,2268,10,832,834,829,0,2268,2272,2269,10,835,832,833,0,2273,2274,2275,10,836,835,837,0,2276,2273,2277,10,838,839,830,0,2278,2279,2280,10,837,835,830,0,2281,2282,2280,10,830,840,837,0,2280,2283,2281,10,841,833,838,0,2284,2275,2285,10,831,828,839,0,2286,2287,2288,10,834,832,836,0,2272,2268,2289,10,840,834,836,0,2290,2291,2292,10,840,836,837,0,2290,2292,2293,10,839,828,830,0,2294,2264,2266,10,840,830,829,0,2295,2266,2265,10,840,829,834,0,2295,2265,2296,10,841,835,833,0,2284,2273,2275,10,835,836,832,0,2273,2276,2274,10,838,835,841,0,2278,2282,2297,10,835,838,830,0,2282,2278,2280,10,838,831,839,0,2298,2286,2288,10,833,831,838,0,2299,2286,2298,10,842,843,844,0,2300,2301,2302,10,844,845,846,0,2303,2304,2305,10,847,846,845,0,2306,2307,2308,10,847,848,849,0,2306,2309,2310,10,849,843,842,0,2311,2312,2313,10,848,850,843,0,2314,2315,2312,10,851,846,852,0,2316,2305,2317,10,852,849,842,0,2318,2319,2320,10,852,842,851,0,2318,2320,2321,10,844,843,853,0,2302,2301,2322,10,844,853,845,0,2303,2323,2304,10,844,846,851,0,2303,2305,2316,10,847,845,848,0,2306,2308,2309,10,846,847,849,0,2307,2306,2310,10,849,848,843,0,2311,2314,2312,10,850,853,843,0,2324,2322,2301,10,850,845,853,0,2325,2326,2327,10,848,845,850,0,2328,2326,2325,10,852,846,849,0,2329,2307,2310,10,851,842,844,0,2330,2300,2302,10,854,855,856,0,2331,2332,2333,10,857,856,858,0,2334,2333,2335,10,859,858,860,0,2336,2337,2338,10,861,859,860,0,2339,2340,2341,10,862,863,861,0,2342,2343,2344,10,864,855,854,0,2345,2346,2347,10,858,865,860,0,2337,2348,2338,10,864,856,855,0,2349,2350,2351,10,863,862,859,0,2352,2353,2340,10,862,854,857,0,2354,2355,2356,10,857,854,856,0,2334,2331,2333,10,859,857,858,0,2336,2357,2337,10,865,861,860,0,2358,2339,2341,10,861,865,864,0,2339,2358,2359,10,861,863,859,0,2339,2352,2340,10,864,862,861,0,2345,2342,2344,10,862,864,854,0,2342,2345,2347,10,858,864,865,0,2360,2349,2361,10,856,864,858,0,2350,2349,2360,10,859,862,857,0,2362,2354,2356,10,866,867,868,0,2363,2364,2365,10,867,866,869,0,2366,2367,2368,10,870,871,867,0,2369,2370,2366,10,872,870,873,0,2371,2372,2373,10,874,875,872,0,2374,2375,2371,10,876,875,874,0,2376,2377,2378,10,872,875,868,0,2379,2380,2381,10,872,868,871,0,2379,2381,2382,10,876,866,868,0,2383,2363,2365,10,868,867,871,0,2365,2364,2384,10,870,867,869,0,2369,2366,2368,10,870,869,873,0,2369,2368,2385,10,872,873,874,0,2371,2373,2374,10,875,876,868,0,2377,2376,2386,10,869,876,873,0,2387,2388,2389,10,866,876,869,0,2390,2388,2387,10,873,876,874,0,2389,2388,2391,10,870,872,871,0,2392,2379,2382,10,877,878,879,0,2393,2394,2395,10,877,879,880,0,2393,2395,2396,10,879,881,882,0,2397,2398,2399,10,882,880,879,0,2399,2400,2397,10,883,882,881,0,2401,2402,2403,10,884,878,877,0,2404,2405,2406,10,877,885,886,0,2406,2407,2408,10,884,883,881,0,2409,2410,2411,10,887,886,882,0,2412,2413,2402,10,877,880,885,0,2393,2396,2414,10,883,887,882,0,2401,2412,2402,10,884,886,883,0,2404,2408,2415,10,886,884,877,0,2408,2404,2406,10,883,886,887,0,2415,2408,2416,10,879,884,881,0,2417,2409,2411,10,878,884,879,0,2418,2409,2417,10,880,886,885,0,2419,2420,2421,10,882,886,880,0,2422,2420,2419,10,888,889,890,0,2423,2424,2425,10,891,892,893,0,2426,2427,2428,10,892,888,893,0,2427,2429,2428,10,894,895,896,0,2430,2431,2432,10,894,897,890,0,2433,2434,2435,10,898,896,895,0,2436,2432,2431,10,898,888,892,0,2437,2438,2439,10,895,890,889,0,2440,2435,2441,10,897,893,890,0,2442,2443,2425,10,893,888,890,0,2443,2423,2425,10,892,891,896,0,2427,2426,2444,10,894,896,891,0,2430,2432,2445,10,895,894,890,0,2440,2433,2435,10,897,891,893,0,2446,2426,2428,10,894,891,897,0,2447,2448,2449,10,889,898,895,0,2450,2436,2431,10,898,892,896,0,2436,2451,2432,10,888,898,889,0,2438,2437,2452,10,899,900,901,0,2453,2454,2455,10,899,902,900,0,2453,2456,2454,10,899,903,904,0,2457,2458,2459,10,902,899,904,0,2460,2457,2459,10,905,906,907,0,2461,2462,2463,10,908,907,906,0,2464,2465,2466,10,909,904,903,0,2467,2459,2458,10,909,910,904,0,2468,2469,2470,10,909,901,910,0,2468,2471,2469,10,905,907,911,0,2461,2463,2472,10,908,900,902,0,2473,2454,2456,10,903,899,901,0,2474,2453,2455,10,905,904,910,0,2475,2459,2476,10,904,905,911,0,2459,2475,2477,10,904,911,902,0,2459,2477,2460,10,905,910,906,0,2461,2478,2462,10,900,908,906,0,2479,2464,2466,10,909,903,901,0,2480,2474,2455,10,910,900,906,0,2481,2479,2466,10,901,900,910,0,2482,2479,2481,10,902,907,908,0,2483,2484,2485,10,911,907,902,0,2486,2484,2483,10,912,913,914,0,2487,2488,2489,10,914,915,916,0,2490,2491,2492,10,917,918,915,0,2493,2494,2495,10,918,917,919,0,2496,2497,2498,10,919,912,918,0,2498,2499,2496,10,916,918,912,0,2500,2501,2502,10,916,912,914,0,2500,2502,2503,10,912,919,913,0,2487,2504,2488,10,914,920,915,0,2490,2505,2491,10,920,914,913,0,2505,2490,2506,10,915,918,916,0,2495,2494,2507,10,919,920,913,0,2508,2509,2510,10,917,920,919,0,2511,2512,2513,10,915,920,917,0,2514,2512,2511,10,921,922,923,0,2515,2516,2517,10,924,925,921,0,2518,2519,2520,10,924,921,923,0,2518,2520,2521,10,926,925,927,0,2522,2523,2524,10,922,926,927,0,2525,2526,2527,10,922,924,923,0,2528,2529,2530,10,921,925,926,0,2531,2523,2522,10,925,924,927,0,2532,2533,2534,10,922,927,924,0,2535,2534,2533,10,921,926,922,0,2515,2536,2516,10,928,929,930,0,2537,2538,2539,10,931,932,928,0,2540,2541,2542,10,932,933,928,0,2541,2543,2542,10,934,932,931,0,2544,2545,2546,10,935,934,936,0,2547,2544,2548,10,936,934,937,0,2549,2550,2551,10,937,930,929,0,2551,2552,2553,10,936,937,929,0,2549,2551,2553,10,930,934,931,0,2554,2555,2556,10,930,937,934,0,2554,2557,2555,10,935,936,929,0,2558,2559,2560,10,935,932,934,0,2547,2545,2544,10,930,931,928,0,2561,2540,2542,10,933,929,928,0,2562,2538,2537,10,933,935,929,0,2563,2558,2560,10,932,935,933,0,2564,2558,2563,10,938,939,940,0,2565,2566,2567,10,939,938,941,0,2568,2569,2570,10,942,943,939,0,2571,2572,2568,10,944,945,946,0,2573,2574,2575,10,940,943,945,0,2576,2577,2578,10,941,938,940,0,2579,2580,2581,10,941,940,944,0,2579,2581,2582,10,946,945,943,0,2583,2584,2585,10,940,939,943,0,2586,2587,2588,10,941,942,939,0,2570,2571,2568,10,944,946,941,0,2573,2575,2589,10,941,946,942,0,2589,2575,2590,10,940,945,944,0,2576,2578,2591,10,942,946,943,0,2592,2583,2585,10,947,948,949,0,2593,2594,2595,10,950,951,952,0,2596,2597,2598,10,952,951,947,0,2599,2600,2601,10,948,951,950,0,2602,2603,2604,10,948,947,951,0,2605,2601,2600,10,953,949,950,0,2606,2607,2608,10,953,950,952,0,2606,2608,2609,10,953,947,949,0,2610,2593,2595,10,948,950,949,0,2602,2604,2611,10,953,952,947,0,2612,2599,2601,10,954,955,956,0,2613,2614,2615,10,954,956,957,0,2613,2615,2616,10,958,954,959,0,2617,2618,2619,10,960,959,957,0,2620,2621,2622,10,955,958,960,0,2623,2624,2625,10,955,960,956,0,2623,2625,2626,10,955,954,958,0,2627,2628,2629,10,959,960,958,0,2619,2630,2617,10,956,960,957,0,2631,2620,2622,10,954,957,959,0,2632,2633,2634,10,961,962,963,0,2635,2636,2637,10,964,961,965,0,2638,2639,2640,10,966,967,968,0,2641,2642,2643,10,969,968,967,0,2644,2643,2642,10,963,962,967,0,2645,2646,2647,10,968,965,963,0,2648,2640,2649,10,963,966,968,0,2650,2651,2652,10,967,962,969,0,2647,2646,2653,10,965,961,963,0,2654,2635,2637,10,964,965,968,0,2638,2640,2648,10,969,964,968,0,2644,2655,2643,10,967,966,963,0,2647,2656,2645,10,969,962,964,0,2657,2658,2659,10,964,962,961,0,2659,2658,2660,10,970,971,972,0,2661,2662,2663,10,973,974,970,0,2664,2665,2666,10,974,975,971,0,2667,2668,2669,10,975,972,971,0,2670,2663,2662,10,970,974,971,0,2671,2672,2673,10,975,973,972,0,2674,2675,2676,10,970,972,973,0,2677,2676,2675,10,975,974,973,0,2668,2667,2678,10,976,977,978,0,2679,2680,2681,10,977,979,980,0,2682,2683,2684,10,981,978,977,0,2685,2686,2682,10,982,983,980,0,2687,2688,2689,10,980,984,981,0,2689,2690,2691,10,985,976,983,0,2692,2693,2694,10,985,977,986,0,2695,2696,2697,10,987,984,983,0,2698,2699,2694,10,977,976,986,0,2700,2701,2702,10,981,977,980,0,2685,2682,2684,10,979,982,980,0,2703,2687,2689,10,984,980,983,0,2690,2689,2688,10,983,982,985,0,2694,2704,2692,10,983,976,987,0,2694,2693,2698,10,986,976,985,0,2705,2706,2707,10,977,985,979,0,2696,2695,2708,10,979,985,982,0,2708,2695,2709,10,978,987,976,0,2681,2710,2679,10,978,984,987,0,2711,2712,2713,10,981,984,978,0,2714,2712,2711,10,988,989,990,0,2715,2716,2717,10,991,992,993,0,2718,2719,2720,10,988,994,995,0,2721,2722,2723,10,994,988,990,0,2722,2721,2724,10,992,994,990,0,2725,2726,2727,10,992,990,993,0,2725,2727,2728,10,995,994,991,0,2729,2730,2731,10,992,991,994,0,2732,2733,2734,10,988,991,989,0,2715,2735,2716,10,993,989,991,0,2720,2736,2718,10,988,995,991,0,2737,2738,2739,10,990,989,993,0,2717,2716,2740,10,996,997,998,0,2741,2742,2743,10,999,1000,998,0,2744,2745,2746,10,1001,1002,1003,0,2747,2748,2749,10,997,1001,999,0,2750,2751,2752,10,997,999,998,0,2750,2752,2753,10,1004,1000,1003,0,2754,2755,2756,10,1004,996,1000,0,2754,2757,2755,10,996,998,1000,0,2741,2743,2758,10,1000,999,1003,0,2745,2744,2759,10,1001,997,1002,0,2760,2761,2762,10,1004,1002,997,0,2763,2762,2761,10,996,1004,997,0,2764,2763,2761,10,999,1001,1003,0,2765,2747,2749,10,1002,1004,1003,0,2766,2754,2756,10,1005,1006,1007,0,2767,2768,2769,10,1006,1008,1009,0,2770,2771,2772,10,1010,1011,1005,0,2773,2774,2775,10,1008,1010,1009,0,2776,2777,2778,10,1007,1006,1009,0,2779,2770,2772,10,1007,1009,1005,0,2780,2781,2775,10,1009,1010,1005,0,2781,2773,2775,10,1011,1010,1006,0,2782,2783,2784,10,1006,1010,1008,0,2784,2783,2785,10,1005,1011,1006,0,2767,2786,2768,10,1012,1013,1014,0,2787,2788,2789,10,1012,1015,1016,0,2790,2791,2792,10,1014,1013,1016,0,2793,2794,2795,10,1012,1014,1015,0,2787,2789,2796,10,1014,1016,1015,0,2797,2798,2799,10,1013,1012,1016,0,2800,2790,2792,10,1017,1018,1019,0,2801,2802,2803,10,1017,1019,1020,0,2804,2805,2806,10,1021,1019,1018,0,2807,2808,2809,10,1022,1021,1018,0,2810,2811,2812,10,1021,1020,1019,0,2813,2814,2815,10,1022,1018,1023,0,2816,2817,2818,10,1022,1023,1017,0,2819,2820,2804,10,1018,1017,1023,0,2802,2801,2821,10,1021,1022,1020,0,2811,2810,2822,10,1020,1022,1017,0,2806,2819,2804,10,1024,1025,1026,0,2823,2824,2825,10,1027,1028,1024,0,2826,2827,2828,10,1027,1026,1028,0,2829,2830,2831,10,1027,1024,1026,0,2832,2833,2834,10,1025,1028,1026,0,2835,2836,2837,10,1028,1025,1024,0,2836,2835,2838,10,1029,1030,1031,0,2839,2840,2841,10,1032,1029,1033,0,2842,2843,2844,10,1030,1032,1031,0,2845,2846,2847,10,1034,1033,1035,0,2848,2849,2850,10,1034,1035,1036,0,2851,2852,2853,10,1033,1029,1035,0,2854,2839,2855,10,1032,1030,1029,0,2842,2856,2843,10,1032,1036,1031,0,2857,2853,2858,10,1036,1032,1034,0,2853,2857,2851,10,1035,1029,1031,0,2859,2860,2861,10,1036,1035,1031,0,2862,2859,2861,10,1034,1032,1033,0,2863,2842,2844,10,1037,1038,1039,0,2864,2865,2866,10,1039,1040,1037,0,2866,2867,2864,10,1041,1038,1037,0,2868,2869,2870,10,1039,1041,1040,0,2871,2872,2873,10,1040,1041,1037,0,2874,2868,2870,10,1038,1041,1039,0,2875,2876,2877,10,1042,1043,1044,0,2878,2879,2880,10,1045,1043,1042,0,2881,2882,2883,10,1042,1046,1047,0,2884,2885,2886,10,1048,1044,1045,0,2887,2888,2889,10,1045,1044,1043,0,2890,2891,2892,10,1048,1049,1047,0,2893,2894,2895,10,1048,1047,1046,0,2893,2895,2896,10,1049,1042,1047,0,2897,2883,2898,10,1049,1048,1045,0,2899,2887,2889,10,1046,1042,1044,0,2900,2878,2880,10,1048,1046,1044,0,2901,2900,2880,10,1042,1049,1045,0,2883,2897,2881,10,1050,1051,1052,0,2902,2903,2904,10,1050,1053,1051,0,2905,2906,2907,10,1050,1052,1053,0,2908,2909,2910,10,1052,1051,1053,0,2911,2912,2913,10,1054,1055,1056,0,2914,2915,2916,10,1054,1056,1057,0,2917,2918,2919,10,1058,1059,1060,0,2920,2921,2922,10,1061,1054,1057,0,2923,2917,2919,10,1059,1057,1056,0,2924,2925,2926,10,1060,1061,1058,0,2922,2927,2920,10,1061,1060,1055,0,2928,2929,2930,10,1059,1058,1057,0,2921,2920,2931,10,1055,1059,1056,0,2932,2933,2934,10,1054,1061,1055,0,2935,2936,2937,10,1058,1061,1057,0,2938,2923,2919,10,1055,1060,1059,0,2932,2939,2933,10,1062,1063,1064,0,2940,2941,2942,10,1064,1065,1066,0,2942,2943,2944,10,1067,1068,1069,0,2945,2946,2947,10,1070,1065,1071,0,2948,2949,2950,10,1068,1072,1073,0,2951,2952,2953,10,1073,1063,1068,0,2953,2954,2951,10,1070,1069,1062,0,2955,2956,2957,10,1070,1062,1066,0,2955,2957,2958,10,1070,1067,1069,0,2955,2959,2956,10,1074,1075,1076,0,2960,2961,2962,10,1073,1072,1074,0,2953,2952,2963,10,1062,1064,1066,0,2940,2942,2944,10,1071,1068,1067,0,2964,2946,2945,10,1063,1069,1068,0,2954,2965,2951,10,1062,1069,1063,0,2966,2965,2954,10,1065,1070,1066,0,2949,2948,2967,10,1067,1070,1071,0,2968,2948,2950,10,1064,1073,1076,0,2942,2969,2970,10,1064,1076,1065,0,2942,2970,2943,10,1073,1064,1063,0,2969,2942,2941,10,1072,1068,1071,0,2971,2946,2964,10,1072,1071,1075,0,2971,2964,2972,10,1065,1075,1071,0,2949,2973,2950,10,1073,1074,1076,0,2974,2960,2962,10,1076,1075,1065,0,2975,2973,2949,10,1074,1072,1075,0,2976,2971,2972,10,1077,1078,1079,0,2977,2978,2979,10,1079,1080,1077,0,2979,2980,2977,10,1081,1082,1083,0,2981,2982,2983,10,1078,1077,1083,0,2984,2985,2986,10,1083,1080,1084,0,2987,2988,2989,10,1082,1079,1078,0,2990,2991,2984,10,1081,1083,1084,0,2981,2983,2992,10,1080,1079,1085,0,2980,2979,2993,10,1082,1078,1083,0,2990,2984,2986,10,1084,1080,1085,0,2994,2995,2996,10,1084,1085,1081,0,2994,2996,2997,10,1080,1083,1077,0,2988,2987,2998,10,1085,1082,1081,0,2999,3000,3001,10,1079,1082,1085,0,3002,3000,2999,10,1086,1087,1088,0,3003,3004,3005,10,1088,1089,1086,0,3005,3006,3003,10,1086,1089,1090,0,3007,3008,3009,10,1086,1090,1091,0,3007,3009,3010,10,1092,1088,1087,0,3011,3012,3013,10,1092,1087,1093,0,3011,3013,3014,10,1090,1089,1092,0,3015,3016,3017,10,1093,1090,1092,0,3018,3019,3020,10,1090,1093,1091,0,3019,3018,3021,10,1088,1092,1089,0,3022,3017,3016,10,1087,1091,1093,0,3023,3024,3025,10,1091,1087,1086,0,3024,3023,3026,10,1094,1095,1096,0,3027,3028,3029,10,1097,1098,1099,0,3030,3031,3032,10,1100,1101,1102,0,3033,3034,3035,10,1098,1097,1103,0,3036,3037,3038,10,1104,1097,1102,0,3039,3037,3040,10,1104,1103,1097,0,3039,3038,3037,10,1100,1099,1096,0,3041,3042,3043,10,1100,1096,1095,0,3041,3043,3044,10,1094,1105,1095,0,3027,3045,3028,10,1100,1097,1099,0,3033,3030,3032,10,1097,1100,1102,0,3030,3033,3035,10,1101,1100,1095,0,3046,3041,3044,10,1101,1105,1104,0,3047,3048,3049,10,1101,1104,1102,0,3047,3049,3050,10,1105,1101,1095,0,3048,3047,3051,10,1096,1103,1094,0,3052,3053,3054,10,1103,1096,1099,0,3053,3052,3055,10,1103,1099,1098,0,3053,3055,3056,10,1094,1104,1105,0,3057,3039,3058,10,1103,1104,1094,0,3038,3039,3057,10,1106,1107,1108,0,3059,3060,3061,10,1109,1110,1111,0,3062,3063,3064,10,1111,1112,1109,0,3064,3065,3062,10,1108,1111,1110,0,3066,3067,3068,10,1113,1110,1109,0,3069,3070,3071,10,1106,1113,1107,0,3059,3072,3060,10,1112,1113,1109,0,3073,3074,3075,10,1113,1112,1107,0,3074,3073,3076,10,1108,1110,1106,0,3066,3068,3077,10,1110,1113,1106,0,3070,3069,3078,10,1108,1107,1111,0,3079,3080,3081,10,1111,1107,1112,0,3081,3080,3082,10,1114,1115,1116,0,3083,3084,3085,10,1116,1115,1117,0,3086,3087,3088,10,1116,1117,1118,0,3086,3088,3089,10,1119,1120,1118,0,3090,3091,3092,10,1120,1121,1122,0,3093,3094,3095,10,1114,1116,1118,0,3096,3097,3098,10,1114,1118,1120,0,3096,3098,3099,10,1115,1121,1117,0,3087,3100,3088,10,1119,1117,1121,0,3101,3102,3103,10,1118,1117,1119,0,3092,3104,3090,10,1114,1122,1115,0,3083,3105,3084,10,1120,1119,1121,0,3093,3106,3094,10,1114,1120,1122,0,3107,3093,3095,10,1122,1121,1115,0,3108,3109,3110,10,1123,1124,1125,0,3111,3112,3113,10,1126,1127,1128,0,3114,3115,3116,10,1128,1124,1126,0,3116,3117,3114,10,1125,1129,1123,0,3113,3118,3111,10,1129,1127,1126,0,3119,3120,3121,10,1124,1128,1125,0,3122,3123,3124,10,1123,1126,1124,0,3125,3126,3127,10,1126,1123,1129,0,3121,3128,3119,10,1125,1127,1129,0,3129,3130,3131,10,1128,1127,1125,0,3132,3130,3129,10,1130,1131,1132,0,3133,3134,3135,10,1133,1134,1135,0,3136,3137,3138,10,1133,1135,1136,0,3136,3138,3139,10,1132,1137,1138,0,3140,3141,3142,10,1139,1140,1131,0,3143,3144,3134,10,1136,1137,1141,0,3145,3146,3147,10,1136,1141,1142,0,3145,3147,3148,10,1136,1142,1143,0,3139,3149,3150,10,1143,1133,1136,0,3150,3136,3139,10,1137,1131,1140,0,3141,3151,3152,10,1144,1141,1137,0,3153,3154,3141,10,1145,1135,1134,0,3155,3156,3157,10,1145,1132,1138,0,3155,3158,3159,10,1145,1138,1135,0,3155,3159,3156,10,1146,1143,1142,0,3160,3161,3162,10,1146,1144,1140,0,3160,3163,3164,10,1146,1139,1143,0,3160,3165,3161,10,1139,1147,1143,0,3143,3166,3167,10,1130,1133,1131,0,3133,3168,3134,10,1133,1130,1134,0,3168,3133,3169,10,1136,1138,1137,0,3145,3170,3146,10,1135,1138,1136,0,3171,3170,3145,10,1137,1132,1131,0,3141,3140,3151,10,1131,1147,1139,0,3134,3166,3143,10,1147,1131,1133,0,3166,3134,3168,10,1143,1147,1133,0,3150,3172,3136,10,1144,1137,1140,0,3153,3141,3152,10,1130,1145,1134,0,3173,3155,3157,10,1132,1145,1130,0,3158,3155,3173,10,1141,1146,1142,0,3174,3160,3162,10,1144,1146,1141,0,3163,3160,3174,10,1139,1146,1140,0,3165,3160,3164,10,1148,1149,1150,0,3175,3176,3177,10,1151,1148,1152,0,3178,3179,3180,10,1153,1150,1154,0,3181,3182,3183,10,1155,1156,1154,0,3184,3185,3186,10,1157,1151,1158,0,3187,3188,3189,10,1154,1150,1149,0,3190,3191,3192,10,1154,1159,1157,0,3190,3193,3194,10,1160,1161,1153,0,3195,3196,3197,10,1155,1158,1160,0,3184,3189,3198,10,1149,1151,1159,0,3199,3178,3200,10,1148,1151,1149,0,3179,3178,3199,10,1157,1159,1151,0,3187,3201,3188,10,1151,1152,1158,0,3178,3180,3202,10,1156,1153,1154,0,3203,3181,3183,10,1148,1161,1152,0,3175,3204,3205,10,1161,1148,1150,0,3204,3175,3177,10,1153,1161,1150,0,3206,3204,3177,10,1157,1155,1154,0,3187,3184,3186,10,1155,1157,1158,0,3184,3187,3189,10,1159,1154,1149,0,3193,3190,3192,10,1156,1160,1153,0,3207,3195,3197,10,1155,1160,1156,0,3208,3195,3207,10,1160,1152,1161,0,3209,3180,3210,10,1158,1152,1160,0,3202,3180,3209,10,1162,1163,1164,0,3211,3212,3213,10,1162,1164,1165,0,3211,3213,3214,10,1166,1167,1168,0,3215,3216,3217,10,1169,1170,1166,0,3218,3219,3220,10,1166,1168,1165,0,3221,3222,3223,10,1168,1162,1165,0,3222,3224,3223,10,1163,1169,1164,0,3225,3226,3227,10,1166,1170,1167,0,3215,3228,3216,10,1167,1171,1168,0,3229,3230,3231,10,1163,1171,1167,0,3232,3230,3229,10,1162,1171,1163,0,3233,3230,3232,10,1171,1162,1168,0,3230,3233,3231,10,1165,1164,1169,0,3234,3235,3218,10,1165,1169,1166,0,3234,3218,3220,10,1169,1163,1170,0,3226,3225,3236,10,1170,1163,1167,0,3236,3225,3237,10,1172,1173,1174,0,3238,3239,3240,10,1172,1175,1176,0,3238,3241,3242,10,1177,1178,1179,0,3243,3244,3245,10,1176,1179,1172,0,3246,3245,3247,10,1180,1181,1173,0,3248,3249,3239,10,1182,1177,1183,0,3250,3251,3252,10,1184,1173,1181,0,3253,3254,3255,10,1184,1182,1183,0,3253,3256,3257,10,1185,1179,1178,0,3258,3259,3260,10,1185,1182,1184,0,3258,3261,3262,10,1185,1184,1180,0,3258,3262,3263,10,1185,1180,1179,0,3258,3263,3259,10,1184,1181,1180,0,3253,3255,3264,10,1180,1186,1179,0,3248,3265,3266,10,1175,1172,1174,0,3241,3238,3240,10,1176,1177,1179,0,3246,3243,3245,10,1184,1174,1173,0,3253,3267,3254,10,1174,1184,1183,0,3267,3253,3257,10,1180,1172,1186,0,3248,3238,3265,10,1172,1180,1173,0,3238,3248,3239,10,1182,1178,1177,0,3250,3268,3251,10,1172,1179,1186,0,3247,3245,3269,10,1175,1183,1176,0,3270,3271,3272,10,1174,1183,1175,0,3273,3271,3270,10,1176,1183,1177,0,3272,3271,3274,10,1182,1185,1178,0,3261,3258,3260,10,1187,1188,1189,0,3275,3276,3277,10,1187,1189,1190,0,3275,3277,3278,10,1191,1192,1193,0,3279,3280,3281,10,1187,1194,1188,0,3275,3282,3276,10,1192,1191,1195,0,3280,3279,3283,10,1193,1196,1197,0,3284,3285,3286,10,1198,1190,1193,0,3287,3288,3284,10,1188,1195,1191,0,3289,3290,3291,10,1188,1193,1190,0,3292,3293,3294,10,1188,1191,1193,0,3292,3295,3293,10,1199,1197,1196,0,3296,3297,3298,10,1199,1192,1195,0,3296,3299,3300,10,1199,1200,1197,0,3296,3301,3297,10,1200,1198,1197,0,3302,3303,3304,10,1200,1201,1194,0,3302,3305,3282,10,1187,1198,1200,0,3275,3303,3302,10,1187,1200,1194,0,3275,3302,3282,10,1198,1187,1190,0,3303,3275,3278,10,1193,1192,1196,0,3281,3280,3306,10,1197,1198,1193,0,3286,3287,3284,10,1201,1188,1194,0,3307,3289,3308,10,1188,1201,1195,0,3289,3307,3290,10,1189,1188,1190,0,3309,3292,3294,10,1192,1199,1196,0,3299,3296,3298,10,1201,1199,1195,0,3310,3296,3300,10,1200,1199,1201,0,3301,3296,3310,10,1202,1203,1204,0,3311,3312,3313,10,1205,1206,1202,0,3314,3315,3311,10,1205,1202,1204,0,3314,3311,3313,10,1207,1208,1209,0,3316,3317,3318,10,1210,1211,1212,0,3319,3320,3321,10,1210,1202,1206,0,3319,3322,3323,10,1212,1207,1203,0,3324,3325,3326,10,1213,1209,1208,0,3327,3328,3329,10,1213,1206,1209,0,3327,3330,3328,10,1211,1213,1208,0,3331,3332,3333,10,1203,1202,1214,0,3312,3311,3334,10,1203,1207,1204,0,3335,3316,3336,10,1214,1210,1212,0,3337,3319,3321,10,1210,1214,1202,0,3319,3337,3322,10,1208,1207,1212,0,3333,3338,3339,10,1208,1212,1211,0,3333,3339,3331,10,1204,1209,1205,0,3336,3318,3340,10,1209,1204,1207,0,3318,3336,3316,10,1214,1212,1203,0,3341,3324,3326,10,1213,1210,1206,0,3342,3319,3323,10,1211,1210,1213,0,3320,3319,3342,10,1206,1205,1209,0,3315,3314,3343,10,1215,1216,1217,0,3344,3345,3346,10,1218,1219,1220,0,3347,3348,3349,10,1221,1222,1223,0,3350,3351,3352,10,1224,1223,1225,0,3353,3352,3354,10,1226,1227,1225,0,3355,3356,3357,10,1228,1217,1216,0,3358,3359,3360,10,1220,1219,1229,0,3361,3362,3363,10,1230,1229,1222,0,3364,3363,3365,10,1231,1224,1227,0,3366,3367,3368,10,1231,1226,1216,0,3366,3369,3370,10,1215,1220,1230,0,3371,3372,3373,10,1231,1230,1221,0,3366,3373,3374,10,1229,1223,1222,0,3375,3376,3377,10,1229,1219,1218,0,3375,3378,3379,10,1229,1218,1217,0,3375,3379,3380,10,1228,1225,1223,0,3381,3382,3376,10,1218,1215,1217,0,3347,3344,3346,10,1215,1218,1220,0,3344,3347,3349,10,1224,1221,1223,0,3353,3350,3352,10,1227,1224,1225,0,3383,3353,3354,10,1228,1226,1225,0,3358,3355,3357,10,1226,1228,1216,0,3355,3358,3360,10,1230,1220,1229,0,3364,3361,3363,10,1221,1230,1222,0,3384,3364,3365,10,1226,1231,1227,0,3369,3366,3368,10,1215,1231,1216,0,3371,3366,3370,10,1231,1215,1230,0,3366,3371,3373,10,1224,1231,1221,0,3367,3366,3374,10,1228,1229,1217,0,3381,3375,3380,10,1229,1228,1223,0,3375,3381,3376,10,1232,1233,1234,0,3385,3386,3387,10,1235,1236,1237,0,3388,3389,3390,10,1235,1238,1239,0,3388,3391,3392,10,1240,1241,1242,0,3393,3394,3395,10,1240,1243,1237,0,3393,3396,3397,10,1244,1234,1245,0,3398,3399,3400,10,1245,1239,1238,0,3400,3401,3402,10,1238,1235,1246,0,3403,3404,3405,10,1246,1232,1244,0,3405,3406,3407,10,1233,1241,1234,0,3408,3409,3410,10,1243,1235,1237,0,3411,3404,3412,10,1243,1246,1235,0,3411,3405,3404,10,1241,1247,1239,0,3409,3413,3414,10,1241,1245,1234,0,3409,3415,3410,10,1241,1240,1236,0,3409,3416,3417,10,1232,1241,1233,0,3385,3418,3386,10,1244,1232,1234,0,3419,3385,3387,10,1241,1232,1242,0,3418,3385,3420,10,1247,1235,1239,0,3421,3388,3392,10,1235,1247,1236,0,3388,3421,3389,10,1243,1240,1242,0,3396,3393,3395,10,1236,1240,1237,0,3422,3393,3397,10,1246,1244,1245,0,3423,3398,3400,10,1246,1245,1238,0,3423,3400,3402,10,1232,1243,1242,0,3406,3411,3424,10,1246,1243,1232,0,3405,3411,3406,10,1245,1241,1239,0,3415,3409,3414,10,1247,1241,1236,0,3413,3409,3417,10,1248,1249,1250,0,3425,3426,3427,10,1251,1252,1253,0,3428,3429,3430,10,1251,1254,1255,0,3428,3431,3432,10,1251,1255,1256,0,3433,3434,3435,10,1257,1258,1250,0,3436,3437,3438,10,1257,1255,1254,0,3436,3439,3440,10,1257,1254,1258,0,3436,3440,3437,10,1259,1256,1255,0,3441,3442,3439,10,1253,1252,1260,0,3443,3444,3445,10,1261,1260,1262,0,3446,3445,3447,10,1263,1262,1260,0,3448,3447,3445,10,1260,1252,1264,0,3445,3444,3449,10,1265,1263,1260,0,3450,3448,3445,10,1259,1250,1266,0,3441,3438,3451,10,1267,1266,1250,0,3452,3453,3454,10,1249,1263,1265,0,3455,3456,3457,10,1268,1267,1265,0,3458,3459,3460,10,1269,1270,1256,0,3461,3462,3463,10,1271,1268,1269,0,3464,3465,3461,10,1269,1272,1264,0,3461,3466,3467,10,1271,1256,1273,0,3468,3442,3469,10,1254,1251,1253,0,3470,3471,3472,10,1254,1248,1258,0,3470,3473,3474,10,1248,1262,1249,0,3425,3475,3426,10,1258,1248,1250,0,3476,3425,3427,10,1262,1248,1261,0,3475,3425,3477,10,1263,1249,1262,0,3456,3455,3478,10,1270,1252,1251,0,3479,3480,3433,10,1270,1251,1256,0,3479,3433,3435,10,1257,1259,1255,0,3436,3441,3439,10,1259,1257,1250,0,3441,3436,3438,10,1261,1253,1260,0,3446,3443,3445,10,1272,1260,1264,0,3481,3445,3449,10,1260,1272,1265,0,3445,3481,3450,10,1259,1273,1256,0,3441,3469,3442,10,1273,1259,1266,0,3469,3441,3451,10,1252,1270,1264,0,3482,3462,3467,10,1249,1267,1250,0,3455,3452,3454,10,1267,1249,1265,0,3452,3455,3457,10,1267,1268,1266,0,3459,3458,3483,10,1272,1268,1265,0,3484,3458,3460,10,1269,1268,1272,0,3485,3458,3484,10,1271,1269,1256,0,3464,3461,3463,10,1270,1269,1264,0,3462,3461,3467,10,1273,1266,1268,0,3469,3451,3486,10,1271,1273,1268,0,3468,3469,3486,10,1261,1254,1253,0,3487,3470,3472,10,1248,1254,1261,0,3473,3470,3487,10,1274,1275,1276,0,3488,3489,3490,10,1277,1278,1279,0,3491,3492,3493,10,1280,1277,1281,0,3494,3491,3495,10,1281,1282,1280,0,3495,3496,3494,10,1283,1281,1277,0,3497,3495,3491,10,1283,1277,1279,0,3497,3491,3493,10,1284,1285,1286,0,3498,3499,3500,10,1286,1287,1284,0,3500,3501,3498,10,1285,1288,1286,0,3499,3502,3500,10,1289,1281,1283,0,3503,3495,3497,10,1289,1282,1281,0,3503,3496,3495,10,1290,1276,1288,0,3504,3490,3505,10,1287,1288,1276,0,3506,3505,3490,10,1275,1274,1278,0,3507,3508,3509,10,1291,1278,1277,0,3510,3509,3511,10,1276,1275,1291,0,3512,3513,3514,10,1291,1280,1282,0,3514,3515,3516,10,1291,1282,1276,0,3514,3516,3512,10,1292,1279,1278,0,3517,3518,3519,10,1292,1278,1274,0,3517,3519,3520,10,1283,1279,1292,0,3521,3518,3517,10,1292,1290,1288,0,3517,3522,3523,10,1285,1293,1283,0,3524,3525,3521,10,1282,1284,1287,0,3516,3526,3527,10,1287,1276,1282,0,3527,3512,3516,10,1290,1274,1276,0,3504,3488,3490,10,1285,1284,1289,0,3499,3498,3528,10,1293,1285,1289,0,3529,3499,3528,10,1293,1289,1283,0,3530,3503,3497,10,1287,1286,1288,0,3506,3531,3505,10,1291,1275,1278,0,3510,3507,3509,10,1280,1291,1277,0,3532,3510,3511,10,1290,1292,1274,0,3522,3517,3520,10,1285,1292,1288,0,3524,3517,3523,10,1292,1285,1283,0,3517,3524,3521,10,1282,1289,1284,0,3516,3533,3526,10,1294,1295,1296,0,3534,3535,3536,10,1296,1297,1298,0,3536,3537,3538,10,1299,1295,1300,0,3539,3535,3540,10,1299,1296,1295,0,3539,3536,3535,10,1301,1302,1303,0,3541,3542,3543,10,1297,1299,1304,0,3544,3545,3546,10,1303,1304,1301,0,3543,3546,3541,10,1305,1298,1297,0,3547,3548,3544,10,1305,1303,1302,0,3547,3543,3542,10,1306,1307,1308,0,3549,3550,3551,10,1309,1302,1301,0,3552,3553,3554,10,1309,1308,1310,0,3552,3551,3555,10,1309,1310,1305,0,3552,3555,3556,10,1311,1308,1307,0,3557,3558,3559,10,1304,1299,1300,0,3560,3561,3562,10,1304,1300,1307,0,3560,3562,3563,10,1304,1306,1301,0,3560,3564,3565,10,1310,1294,1298,0,3566,3567,3568,10,1294,1296,1298,0,3534,3536,3538,10,1299,1297,1296,0,3539,3537,3536,10,1303,1297,1304,0,3543,3544,3546,10,1303,1305,1297,0,3543,3547,3544,10,1309,1306,1308,0,3552,3549,3551,10,1306,1309,1301,0,3549,3552,3554,10,1302,1309,1305,0,3553,3552,3556,10,1311,1300,1295,0,3557,3569,3570,10,1300,1311,1307,0,3569,3557,3559,10,1310,1311,1294,0,3571,3557,3572,10,1308,1311,1310,0,3558,3557,3571,10,1294,1311,1295,0,3572,3557,3570,10,1306,1304,1307,0,3564,3560,3563,10,1305,1310,1298,0,3573,3566,3568,10,1312,1313,1314,0,3574,3575,3576,10,1315,1314,1316,0,3577,3576,3578,10,1317,1312,1315,0,3579,3580,3581,10,1318,1319,1317,0,3582,3583,3579,10,1320,1321,1314,0,3584,3585,3586,10,1322,1323,1315,0,3587,3588,3577,10,1324,1315,1323,0,3589,3581,3590,10,1325,1326,1327,0,3591,3592,3593,10,1328,1316,1327,0,3594,3595,3596,10,1317,1329,1312,0,3579,3597,3580,10,1320,1330,1331,0,3598,3599,3600,10,1317,1319,1331,0,3601,3602,3603,10,1329,1331,1330,0,3604,3603,3605,10,1329,1330,1313,0,3604,3605,3606,10,1325,1332,1333,0,3607,3608,3609,10,1325,1333,1326,0,3607,3609,3610,10,1325,1318,1334,0,3607,3611,3612,10,1328,1326,1333,0,3594,3613,3614,10,1335,1323,1322,0,3615,3616,3617,10,1336,1322,1337,0,3618,3617,3619,10,1336,1337,1338,0,3618,3619,3620,10,1339,1334,1318,0,3621,3622,3582,10,1339,1324,1323,0,3621,3589,3590,10,1332,1339,1335,0,3623,3624,3625,10,1332,1336,1338,0,3623,3626,3627,10,1332,1338,1333,0,3623,3627,3628,10,1315,1312,1314,0,3577,3574,3576,10,1322,1315,1316,0,3587,3577,3578,10,1324,1317,1315,0,3589,3579,3581,10,1317,1324,1318,0,3579,3589,3582,10,1331,1319,1321,0,3600,3629,3630,10,1320,1331,1321,0,3598,3600,3630,10,1318,1321,1319,0,3631,3630,3629,10,1340,1320,1314,0,3632,3584,3586,10,1340,1314,1313,0,3632,3586,3633,10,1314,1321,1316,0,3586,3585,3595,10,1327,1321,1318,0,3634,3630,3631,10,1327,1316,1321,0,3596,3595,3585,10,1337,1322,1316,0,3619,3617,3635,10,1325,1327,1318,0,3591,3593,3636,10,1328,1337,1316,0,3594,3637,3595,10,1326,1328,1327,0,3613,3594,3596,10,1312,1329,1313,0,3574,3638,3575,10,1330,1340,1313,0,3639,3632,3633,10,1320,1340,1330,0,3584,3632,3639,10,1329,1317,1331,0,3604,3601,3603,10,1332,1325,1334,0,3608,3607,3612,10,1338,1328,1333,0,3640,3594,3614,10,1337,1328,1338,0,3637,3594,3640,10,1336,1335,1322,0,3618,3615,3617,10,1324,1339,1318,0,3589,3621,3582,10,1335,1339,1323,0,3641,3621,3590,10,1339,1332,1334,0,3624,3623,3642,10,1336,1332,1335,0,3626,3623,3625,10,1341,1342,1343,0,3643,3644,3645,10,1341,1343,1344,0,3643,3645,3646,10,1345,1342,1341,0,3647,3648,3649,10,1346,1341,1347,0,3650,3649,3651,10,1348,1349,1350,0,3652,3653,3654,10,1350,1343,1342,0,3654,3655,3656,10,1348,1351,1349,0,3652,3657,3653,10,1352,1350,1349,0,3658,3659,3660,10,1353,1354,1355,0,3661,3662,3663,10,1352,1349,1351,0,3658,3660,3664,10,1356,1347,1344,0,3665,3666,3667,10,1356,1344,1355,0,3665,3667,3668,10,1357,1347,1356,0,3669,3666,3665,10,1356,1355,1354,0,3665,3668,3670,10,1346,1358,1345,0,3671,3672,3673,10,1345,1358,1359,0,3674,3675,3676,10,1360,1359,1351,0,3677,3676,3657,10,1346,1357,1361,0,3671,3678,3679,10,1362,1351,1359,0,3680,3657,3676,10,1363,1354,1353,0,3681,3662,3661,10,1364,1353,1351,0,3682,3661,3664,10,1365,1361,1357,0,3683,3684,3669,10,1366,1354,1363,0,3685,3670,3686,10,1367,1368,1362,0,3687,3688,3680,10,1362,1368,1369,0,3689,3690,3691,10,1370,1363,1364,0,3692,3693,3694,10,1369,1364,1362,0,3691,3694,3689,10,1371,1372,1373,0,3695,3696,3697,10,1365,1370,1373,0,3698,3699,3700,10,1372,1361,1365,0,3701,3702,3698,10,1374,1375,1376,0,3703,3704,3705,10,1374,1376,1377,0,3703,3705,3706,10,1371,1376,1375,0,3707,3705,3704,10,1378,1373,1370,0,3708,3697,3709,10,1379,1352,1355,0,3710,3711,3712,10,1380,1381,1382,0,3713,3714,3715,10,1378,1370,1369,0,3716,3717,3718,10,1380,1369,1368,0,3713,3718,3719,10,1383,1384,1358,0,3720,3721,3672,10,1383,1361,1385,0,3720,3679,3722,10,1383,1385,1375,0,3720,3722,3723,10,1367,1358,1384,0,3687,3675,3724,10,1367,1386,1381,0,3687,3725,3726,10,1387,1375,1374,0,3727,3704,3703,10,1374,1382,1381,0,3703,3728,3729,10,1347,1341,1344,0,3730,3643,3646,10,1346,1345,1341,0,3650,3647,3649,10,1357,1346,1347,0,3731,3650,3651,10,1348,1350,1342,0,3652,3654,3656,10,1348,1345,1360,0,3652,3674,3677,10,1348,1360,1351,0,3652,3677,3657,10,1345,1348,1342,0,3674,3652,3656,10,1352,1353,1355,0,3658,3661,3663,10,1353,1352,1351,0,3661,3658,3664,10,1366,1357,1356,0,3685,3669,3665,10,1366,1356,1354,0,3685,3665,3670,10,1360,1345,1359,0,3677,3674,3676,10,1346,1383,1358,0,3671,3720,3672,10,1383,1346,1361,0,3720,3671,3679,10,1364,1363,1353,0,3682,3681,3661,10,1362,1364,1351,0,3732,3682,3664,10,1366,1365,1357,0,3685,3683,3669,10,1365,1366,1363,0,3683,3685,3686,10,1367,1362,1359,0,3687,3680,3676,10,1367,1359,1358,0,3687,3676,3675,10,1369,1370,1364,0,3691,3692,3694,10,1370,1365,1363,0,3733,3683,3686,10,1377,1371,1373,0,3734,3695,3697,10,1376,1371,1377,0,3735,3695,3734,10,1372,1365,1373,0,3701,3698,3700,10,1382,1374,1377,0,3728,3703,3706,10,1372,1385,1361,0,3736,3737,3738,10,1385,1372,1371,0,3737,3736,3707,10,1385,1371,1375,0,3737,3707,3704,10,1378,1382,1377,0,3708,3739,3734,10,1378,1377,1373,0,3708,3734,3697,10,1352,1379,1350,0,3711,3710,3740,10,1344,1379,1355,0,3741,3710,3712,10,1343,1379,1344,0,3742,3710,3741,10,1350,1379,1343,0,3740,3710,3742,10,1380,1368,1381,0,3713,3719,3714,10,1378,1380,1382,0,3716,3713,3715,10,1380,1378,1369,0,3713,3716,3718,10,1387,1383,1375,0,3743,3720,3723,10,1383,1387,1384,0,3720,3743,3721,10,1386,1367,1384,0,3725,3687,3724,10,1368,1367,1381,0,3688,3687,3726,10,1387,1386,1384,0,3727,3744,3745,10,1386,1387,1374,0,3744,3727,3703,10,1386,1374,1381,0,3744,3703,3729,10,1388,1389,1390,0,3746,3747,3748,10,1388,1391,1392,0,3746,3749,3750,10,1389,1393,1394,0,3751,3752,3753,10,1391,1395,1392,0,3754,3755,3756,10,1396,1397,1395,0,3757,3758,3755,10,1398,1397,1396,0,3759,3760,3761,10,1398,1388,1390,0,3759,3762,3763,10,1399,1400,1401,0,3764,3765,3766,10,1401,1402,1403,0,3766,3767,3768,10,1404,1399,1403,0,3769,3770,3771,10,1405,1406,1404,0,3772,3773,3769,10,1404,1400,1399,0,3769,3774,3770,10,1407,1408,1409,0,3775,3776,3777,10,1409,1410,1411,0,3777,3778,3779,10,1409,1411,1407,0,3777,3779,3775,10,1412,1413,1414,0,3780,3781,3782,10,1414,1408,1415,0,3782,3783,3784,10,1414,1409,1408,0,3785,3777,3776,10,1414,1413,1416,0,3785,3786,3787,10,1416,1410,1409,0,3787,3778,3777,10,1405,1403,1417,0,3788,3768,3789,10,1418,1403,1402,0,3790,3768,3767,10,1418,1402,1415,0,3790,3767,3791,10,1415,1408,1417,0,3791,3792,3789,10,1401,1400,1419,0,3793,3794,3795,10,1419,1413,1412,0,3795,3796,3797,10,1419,1412,1415,0,3795,3797,3798,10,1420,1413,1419,0,3799,3796,3795,10,1421,1419,1400,0,3800,3795,3794,10,1404,1406,1422,0,3801,3802,3803,10,1411,1410,1423,0,3804,3805,3806,10,1423,1406,1424,0,3806,3807,3808,10,1423,1424,1407,0,3806,3808,3809,10,1425,1422,1406,0,3810,3811,3807,10,1423,1410,1426,0,3806,3805,3812,10,1426,1410,1416,0,3813,3814,3815,10,1416,1413,1420,0,3815,3816,3817,10,1427,1428,1429,0,3818,3819,3820,10,1430,1429,1431,0,3821,3822,3823,10,1430,1431,1432,0,3821,3823,3824,10,1433,1395,1432,0,3825,3826,3827,10,1434,1435,1436,0,3828,3829,3830,10,1434,1428,1427,0,3828,3831,3832,10,1430,1437,1438,0,3833,3834,3835,10,1438,1427,1430,0,3835,3818,3833,10,1439,1437,1430,0,3836,3837,3838,10,1430,1432,1397,0,3838,3839,3840,10,1395,1397,1432,0,3826,3841,3827,10,1440,1393,1392,0,3842,3843,3756,10,1440,1392,1435,0,3842,3756,3844,10,1440,1441,1394,0,3842,3845,3846,10,1439,1442,1437,0,3847,3848,3849,10,1398,1390,1442,0,3759,3763,3848,10,1443,1390,1389,0,3850,3851,3852,10,1389,1394,1444,0,3852,3853,3854,10,1445,1441,1438,0,3855,3856,3857,10,1446,1438,1437,0,3858,3857,3859,10,1442,1390,1443,0,3848,3763,3860,10,1447,1394,1441,0,3861,3862,3863,10,1447,1448,1444,0,3864,3865,3866,10,1449,1442,1443,0,3867,3868,3869,10,1437,1450,1446,0,3859,3870,3858,10,1451,1452,1443,0,3871,3872,3869,10,1451,1444,1448,0,3871,3873,3874,10,1453,1454,1455,0,3875,3876,3877,10,1453,1455,1452,0,3875,3877,3878,10,1453,1448,1454,0,3875,3879,3876,10,1456,1445,1446,0,3880,3855,3858,10,1457,1446,1450,0,3881,3858,3870,10,1457,1450,1458,0,3881,3870,3882,10,1459,1457,1458,0,3883,3884,3885,10,1459,1458,1455,0,3883,3885,3886,10,1449,1452,1455,0,3887,3888,3889,10,1460,1459,1454,0,3890,3891,3892,10,1428,1420,1421,0,3819,3799,3800,10,1429,1421,1400,0,3820,3800,3794,10,1429,1400,1431,0,3822,3893,3823,10,1422,1432,1431,0,3894,3824,3823,10,1404,1431,1400,0,3895,3823,3893,10,1425,1426,1436,0,3810,3812,3896,10,1434,1436,1426,0,3828,3830,3813,10,1434,1461,1420,0,3828,3897,3817,10,1391,1388,1396,0,3749,3746,3898,10,1393,1388,1392,0,3899,3746,3750,10,1389,1388,1393,0,3747,3746,3899,10,1391,1396,1395,0,3754,3757,3755,10,1388,1398,1396,0,3762,3759,3761,10,1399,1401,1403,0,3764,3766,3768,10,1406,1405,1424,0,3900,3788,3901,10,1405,1404,1403,0,3772,3769,3771,10,1412,1414,1415,0,3780,3782,3784,10,1414,1416,1409,0,3785,3787,3777,10,1407,1417,1408,0,3902,3789,3792,10,1424,1417,1407,0,3901,3789,3902,10,1405,1417,1424,0,3788,3789,3901,10,1418,1415,1417,0,3790,3791,3789,10,1418,1417,1403,0,3790,3789,3768,10,1402,1419,1415,0,3903,3795,3798,10,1401,1419,1402,0,3793,3795,3903,10,1421,1420,1419,0,3800,3799,3795,10,1411,1423,1407,0,3804,3806,3809,10,1423,1425,1406,0,3806,3810,3807,10,1425,1423,1426,0,3810,3806,3812,10,1461,1426,1416,0,3897,3813,3815,10,1461,1416,1420,0,3897,3815,3817,10,1430,1427,1429,0,3833,3818,3820,10,1433,1435,1395,0,3825,3904,3826,10,1435,1433,1436,0,3904,3825,3896,10,1440,1434,1427,0,3905,3828,3832,10,1434,1440,1435,0,3828,3905,3829,10,1438,1441,1427,0,3835,3906,3818,10,1439,1430,1397,0,3836,3838,3840,10,1441,1440,1427,0,3906,3907,3818,10,1392,1395,1435,0,3908,3826,3904,10,1393,1440,1394,0,3843,3842,3846,10,1398,1439,1397,0,3759,3847,3760,10,1439,1398,1442,0,3847,3759,3848,10,1451,1443,1389,0,3909,3850,3852,10,1451,1389,1444,0,3909,3852,3854,10,1446,1445,1438,0,3858,3855,3857,10,1447,1444,1394,0,3861,3910,3862,10,1445,1447,1441,0,3911,3861,3863,10,1447,1460,1448,0,3864,3890,3865,10,1460,1447,1445,0,3890,3864,3912,10,1437,1449,1450,0,3913,3867,3914,10,1449,1437,1442,0,3867,3913,3868,10,1452,1449,1443,0,3872,3867,3869,10,1451,1453,1452,0,3871,3915,3872,10,1453,1451,1448,0,3915,3871,3874,10,1457,1456,1446,0,3881,3880,3858,10,1457,1459,1456,0,3884,3883,3916,10,1454,1459,1455,0,3917,3883,3886,10,1458,1449,1455,0,3918,3887,3889,10,1450,1449,1458,0,3919,3887,3918,10,1448,1460,1454,0,3865,3890,3892,10,1456,1460,1445,0,3920,3890,3912,10,1459,1460,1456,0,3891,3890,3920,10,1429,1428,1421,0,3820,3819,3800,10,1404,1422,1431,0,3895,3894,3823,10,1422,1433,1432,0,3811,3825,3827,10,1425,1433,1422,0,3810,3825,3811,10,1433,1425,1436,0,3825,3810,3896,10,1461,1434,1426,0,3897,3828,3813,10,1428,1434,1420,0,3831,3828,3817,10,1462,1463,1464,0,3921,3922,3923,10,1462,1464,1465,0,3921,3923,3924,10,1462,1466,1467,0,3921,3925,3926,10,1468,1464,1463,0,3927,3928,3929,10,1469,1470,1467,0,3930,3931,3932,10,1467,1470,1471,0,3933,3934,3935,10,1471,1462,1467,0,3935,3936,3933,10,1472,1473,1474,0,3937,3938,3939,10,1474,1475,1476,0,3939,3940,3941,10,1477,1478,1479,0,3942,3943,3944,10,1476,1477,1472,0,3941,3942,3937,10,1476,1475,1480,0,3941,3940,3945,10,1480,1478,1477,0,3945,3943,3942,10,1481,1482,1483,0,3946,3947,3948,10,1484,1485,1481,0,3949,3950,3946,10,1486,1482,1487,0,3951,3947,3952,10,1487,1488,1489,0,3952,3953,3954,10,1481,1485,1490,0,3946,3950,3955,10,1490,1488,1487,0,3955,3953,3952,10,1491,1472,1477,0,3956,3957,3958,10,1491,1477,1479,0,3956,3958,3959,10,1491,1479,1483,0,3956,3959,3960,10,1491,1483,1482,0,3956,3960,3961,10,1491,1482,1486,0,3956,3961,3962,10,1492,1475,1474,0,3963,3964,3965,10,1492,1474,1473,0,3963,3965,3966,10,1492,1473,1486,0,3963,3966,3967,10,1489,1488,1492,0,3968,3969,3963,10,1492,1488,1493,0,3963,3969,3970,10,1494,1485,1484,0,3971,3972,3973,10,1494,1484,1483,0,3971,3973,3974,10,1495,1485,1494,0,3975,3972,3971,10,1496,1494,1478,0,3976,3971,3977,10,1478,1497,1496,0,3977,3978,3976,10,1493,1488,1490,0,3979,3980,3981,10,1490,1485,1495,0,3981,3982,3983,10,1498,1499,1500,0,3984,3985,3986,10,1500,1501,1498,0,3986,3987,3984,10,1502,1500,1499,0,3988,3989,3990,10,1503,1504,1505,0,3991,3992,3993,10,1506,1507,1498,0,3994,3995,3996,10,1498,1501,1506,0,3996,3997,3994,10,1508,1509,1499,0,3998,3999,3990,10,1470,1510,1499,0,4000,4001,3990,10,1499,1509,1511,0,3990,3999,4002,10,1469,1510,1470,0,4003,4004,4005,10,1507,1512,1498,0,4006,4007,4008,10,1469,1465,1504,0,4003,4009,3992,10,1507,1464,1468,0,4010,4011,4012,10,1468,1512,1507,0,4012,4013,4010,10,1513,1514,1471,0,4014,4015,4016,10,1511,1471,1470,0,4002,4016,4000,10,1515,1468,1463,0,4017,4018,4019,10,1463,1514,1516,0,4019,4020,4021,10,1508,1512,1517,0,3998,4022,4023,10,1516,1514,1513,0,4024,4015,4014,10,1518,1517,1512,0,4025,4026,4027,10,1518,1519,1517,0,4028,4029,4030,10,1520,1509,1521,0,4031,4032,4033,10,1520,1522,1516,0,4031,4034,4035,10,1523,1521,1509,0,4036,4037,4038,10,1524,1525,1526,0,4039,4040,4041,10,1526,1515,1524,0,4041,4042,4039,10,1525,1527,1528,0,4043,4044,4045,10,1523,1517,1529,0,4046,4047,4048,10,1527,1530,1529,0,4049,4050,4051,10,1520,1531,1532,0,4052,4053,4054,10,1532,1522,1520,0,4054,4055,4052,10,1520,1521,1531,0,4052,4056,4053,10,1519,1526,1528,0,4029,4057,4058,10,1519,1528,1529,0,4029,4058,4059,10,1519,1529,1517,0,4029,4059,4030,10,1533,1493,1501,0,4060,3970,3987,10,1502,1510,1497,0,3988,4001,4061,10,1480,1475,1500,0,3945,3940,3989,10,1505,1495,1496,0,3993,3975,3976,10,1503,1496,1497,0,3991,3976,3978,10,1503,1497,1510,0,3991,3978,4004,10,1501,1493,1534,0,3997,4062,4063,10,1506,1534,1495,0,3994,4063,4064,10,1463,1462,1514,0,3922,3921,4065,10,1466,1462,1465,0,3925,3921,3924,10,1469,1466,1465,0,3930,4066,4067,10,1466,1469,1467,0,4066,3930,3932,10,1462,1471,1514,0,3936,3935,4068,10,1476,1472,1474,0,3941,3937,3939,10,1476,1480,1477,0,3941,3945,3942,10,1484,1481,1483,0,3949,3946,3948,10,1489,1486,1487,0,3954,3951,3952,10,1481,1487,1482,0,3946,3952,3947,10,1487,1481,1490,0,3952,3946,3955,10,1472,1535,1473,0,3957,4069,4070,10,1535,1472,1491,0,4069,3957,3956,10,1535,1491,1486,0,4069,3956,3962,10,1473,1535,1486,0,4070,4069,3962,10,1489,1492,1486,0,3968,3963,3967,10,1492,1533,1475,0,3963,4060,3964,10,1533,1492,1493,0,4060,3963,3970,10,1478,1480,1497,0,3943,3945,4061,10,1479,1494,1483,0,4071,3971,3974,10,1478,1494,1479,0,3977,3971,4071,10,1496,1495,1494,0,3976,3975,3971,10,1534,1493,1490,0,4072,3979,3981,10,1534,1490,1495,0,4072,3981,3983,10,1502,1499,1510,0,3988,3990,4001,10,1503,1469,1504,0,3991,4003,3992,10,1469,1503,1510,0,4003,3991,4004,10,1504,1506,1505,0,4073,3994,4074,10,1506,1504,1507,0,3994,4073,3995,10,1498,1508,1499,0,4075,3998,3990,10,1508,1498,1512,0,3998,4075,4022,10,1511,1470,1499,0,4002,4000,3990,10,1465,1507,1504,0,4076,4010,4077,10,1464,1507,1465,0,4011,4010,4076,10,1513,1511,1509,0,4014,4002,3999,10,1511,1513,1471,0,4002,4014,4016,10,1524,1515,1463,0,4078,4017,4019,10,1524,1463,1516,0,4078,4019,4021,10,1508,1523,1509,0,3998,4079,3999,10,1523,1508,1517,0,4079,3998,4023,10,1468,1518,1512,0,4080,4025,4027,10,1518,1468,1515,0,4025,4080,4081,10,1518,1526,1519,0,4028,4057,4029,10,1526,1518,1515,0,4057,4028,4082,10,1513,1520,1516,0,4083,4031,4035,10,1520,1513,1509,0,4031,4083,4032,10,1524,1522,1525,0,4039,4034,4040,10,1522,1524,1516,0,4034,4039,4035,10,1527,1525,1532,0,4044,4043,4084,10,1526,1525,1528,0,4085,4043,4045,10,1532,1525,1522,0,4084,4043,4086,10,1521,1530,1531,0,4087,4088,4089,10,1523,1530,1521,0,4046,4088,4087,10,1530,1523,1529,0,4088,4046,4048,10,1531,1527,1532,0,4090,4049,4091,10,1530,1527,1531,0,4050,4049,4090,10,1528,1527,1529,0,4092,4049,4051,10,1533,1500,1475,0,4060,3986,3964,10,1500,1533,1501,0,3986,4060,3987,10,1480,1502,1497,0,3945,3988,4061,10,1502,1480,1500,0,3988,3945,3989,10,1503,1505,1496,0,3991,3993,3976,10,1506,1501,1534,0,3994,3997,4063,10,1505,1506,1495,0,4074,3994,4064,10,1536,1537,1538,0,4093,4094,4095,10,1539,1540,1537,0,4096,4097,4094,10,1536,1541,1542,0,4093,4098,4099,10,1541,1543,1544,0,4100,4101,4102,10,1545,1542,1541,0,4103,4104,4100,10,1546,1544,1547,0,4105,4106,4107,10,1548,1546,1547,0,4108,4105,4107,10,1549,1547,1550,0,4109,4107,4110,10,1551,1552,1553,0,4111,4112,4113,10,1553,1550,1551,0,4113,4114,4111,10,1551,1537,1540,0,4111,4115,4116,10,1542,1554,1539,0,4099,4117,4096,10,1555,1554,1542,0,4118,4119,4104,10,1556,1539,1554,0,4120,4096,4117,10,1555,1548,1557,0,4118,4121,4122,10,1558,1557,1548,0,4123,4124,4108,10,1549,1553,1559,0,4109,4125,4126,10,1559,1553,1552,0,4127,4113,4112,10,1560,1552,1540,0,4128,4112,4116,10,1540,1561,1560,0,4116,4129,4128,10,1557,1562,1563,0,4122,4130,4131,10,1564,1562,1557,0,4132,4133,4124,10,1558,1559,1565,0,4123,4126,4134,10,1560,1565,1559,0,4128,4135,4127,10,1566,1567,1568,0,4136,4137,4138,10,1566,1568,1569,0,4136,4138,4139,10,1569,1565,1560,0,4140,4141,4142,10,1560,1561,1570,0,4142,4143,4144,10,1571,1572,1568,0,4145,4146,4147,10,1573,1570,1561,0,4148,4149,4150,10,1574,1567,1566,0,4151,4152,4153,10,1575,1547,1544,0,4154,4155,4156,10,1575,1544,1543,0,4154,4156,4157,10,1575,1543,1538,0,4154,4157,4158,10,1575,1538,1550,0,4154,4158,4159,10,1564,1565,1576,0,4132,4134,4160,10,1577,1576,1572,0,4161,4160,4162,10,1556,1578,1574,0,4120,4163,4151,10,1573,1561,1556,0,4148,4150,4120,10,1563,1562,1579,0,4131,4130,4164,10,1563,1580,1578,0,4131,4165,4166,10,1581,1554,1563,0,4167,4119,4131,10,1579,1572,1571,0,4168,4146,4145,10,1571,1574,1578,0,4145,4169,4170,10,1543,1536,1538,0,4171,4093,4095,10,1541,1536,1543,0,4098,4093,4171,10,1536,1539,1537,0,4093,4096,4094,10,1539,1536,1542,0,4096,4093,4099,10,1545,1541,1544,0,4103,4100,4102,10,1546,1545,1544,0,4172,4103,4102,10,1545,1582,1542,0,4103,4173,4104,10,1548,1545,1546,0,4121,4103,4172,10,1545,1548,1582,0,4103,4121,4173,10,1549,1548,1547,0,4109,4108,4107,10,1553,1549,1550,0,4125,4109,4110,10,1538,1551,1550,0,4174,4111,4114,10,1537,1551,1538,0,4115,4111,4174,10,1552,1551,1540,0,4112,4111,4116,10,1582,1555,1542,0,4173,4118,4104,10,1555,1582,1548,0,4118,4173,4121,10,1540,1556,1561,0,4097,4120,4150,10,1556,1540,1539,0,4120,4097,4096,10,1549,1558,1548,0,4109,4123,4108,10,1558,1549,1559,0,4123,4109,4126,10,1560,1559,1552,0,4128,4127,4112,10,1563,1555,1557,0,4131,4118,4122,10,1563,1554,1555,0,4131,4119,4118,10,1558,1564,1557,0,4123,4132,4124,10,1564,1558,1565,0,4132,4123,4134,10,1570,1566,1569,0,4175,4136,4139,10,1570,1569,1560,0,4144,4140,4142,10,1567,1571,1568,0,4176,4145,4147,10,1574,1571,1567,0,4169,4145,4176,10,1573,1574,1566,0,4148,4151,4153,10,1573,1566,1570,0,4148,4153,4149,10,1569,1576,1565,0,4139,4177,4178,10,1576,1569,1568,0,4177,4139,4138,10,1576,1568,1572,0,4177,4138,4179,10,1547,1575,1550,0,4155,4154,4159,10,1577,1579,1562,0,4161,4180,4133,10,1564,1577,1562,0,4132,4161,4133,10,1577,1564,1576,0,4161,4132,4160,10,1579,1577,1572,0,4180,4161,4162,10,1581,1556,1554,0,4181,4120,4117,10,1556,1581,1578,0,4120,4181,4163,10,1573,1556,1574,0,4148,4120,4151,10,1580,1563,1579,0,4165,4131,4164,10,1581,1563,1578,0,4167,4131,4166,10,1580,1579,1571,0,4182,4168,4145,10,1580,1571,1578,0,4182,4145,4170,10,1583,1584,1585,0,4183,4184,4185,10,1583,1586,1587,0,4183,4186,4187,10,1588,1589,1585,0,4188,4189,4190,10,1590,1591,1592,0,4191,4192,4193,10,1586,1585,1589,0,4194,4190,4189,10,1593,1594,1591,0,4195,4196,4197,10,1587,1595,1591,0,4198,4199,4192,10,1596,1597,1587,0,4200,4201,4187,10,1598,1599,1595,0,4202,4203,4199,10,1600,1592,1601,0,4204,4193,4205,10,1600,1601,1602,0,4204,4205,4206,10,1601,1594,1588,0,4207,4208,4209,10,1601,1588,1584,0,4207,4209,4210,10,1601,1584,1602,0,4207,4210,4211,10,1603,1593,1604,0,4212,4195,4213,10,1598,1597,1605,0,4202,4214,4215,10,1598,1606,1607,0,4202,4216,4217,10,1607,1599,1598,0,4217,4203,4202,10,1596,1586,1608,0,4200,4186,4218,10,1609,1589,1593,0,4219,4189,4220,10,1609,1608,1586,0,4219,4221,4194,10,1606,1609,1603,0,4222,4223,4224,10,1606,1603,1607,0,4222,4224,4225,10,1606,1605,1608,0,4222,4226,4227,10,1602,1583,1590,0,4228,4183,4229,10,1583,1602,1584,0,4183,4228,4184,10,1590,1583,1587,0,4229,4183,4187,10,1583,1585,1586,0,4183,4185,4186,10,1588,1594,1589,0,4188,4230,4189,10,1600,1590,1592,0,4204,4191,4193,10,1600,1602,1590,0,4204,4206,4191,10,1590,1587,1591,0,4191,4198,4192,10,1593,1589,1594,0,4220,4189,4230,10,1595,1593,1591,0,4231,4195,4197,10,1586,1596,1587,0,4186,4200,4187,10,1604,1593,1595,0,4213,4195,4231,10,1599,1604,1595,0,4232,4213,4231,10,1587,1598,1595,0,4198,4202,4199,10,1598,1587,1597,0,4202,4198,4214,10,1584,1588,1585,0,4233,4188,4190,10,1601,1591,1594,0,4234,4197,4196,10,1591,1601,1592,0,4197,4234,4235,10,1607,1604,1599,0,4236,4213,4232,10,1603,1604,1607,0,4212,4213,4236,10,1606,1598,1605,0,4216,4202,4215,10,1605,1596,1608,0,4237,4200,4218,10,1597,1596,1605,0,4201,4200,4237,10,1603,1609,1593,0,4238,4219,4220,10,1589,1609,1586,0,4189,4219,4194,10,1609,1606,1608,0,4223,4222,4227,10,1610,1611,1612,0,4239,4240,4241,10,1610,1612,1613,0,4239,4241,4242,10,1613,1614,1610,0,4242,4243,4239,10,1615,1616,1617,0,4244,4245,4246,10,1618,1619,1614,0,4247,4248,4249,10,1620,1615,1614,0,4250,4244,4249,10,1621,1622,1623,0,4251,4252,4253,10,1617,1616,1622,0,4254,4255,4252,10,1622,1616,1620,0,4252,4255,4256,10,1624,1625,1611,0,4257,4258,4259,10,1626,1623,1625,0,4260,4261,4258,10,1625,1627,1612,0,4258,4262,4263,10,1625,1612,1611,0,4258,4263,4259,10,1625,1623,1627,0,4258,4261,4262,10,1618,1621,1626,0,4264,4265,4266,10,1627,1620,1613,0,4267,4268,4269,10,1611,1619,1624,0,4240,4270,4271,10,1610,1619,1611,0,4239,4270,4240,10,1619,1610,1614,0,4270,4239,4243,10,1618,1615,1617,0,4247,4244,4246,10,1615,1618,1614,0,4244,4247,4249,10,1615,1620,1616,0,4244,4250,4245,10,1613,1620,1614,0,4272,4250,4249,10,1626,1621,1623,0,4273,4251,4253,10,1621,1617,1622,0,4251,4254,4252,10,1623,1622,1627,0,4253,4252,4274,10,1627,1622,1620,0,4274,4252,4256,10,1624,1626,1625,0,4257,4260,4258,10,1619,1618,1624,0,4275,4264,4276,10,1621,1618,1617,0,4265,4264,4277,10,1624,1618,1626,0,4276,4264,4266,10,1612,1627,1613,0,4278,4267,4269,10,1628,1629,1630,0,4279,4280,4281,10,1631,1632,1633,0,4282,4283,4284,10,1634,1633,1635,0,4285,4284,4286,10,1634,1635,1636,0,4285,4286,4287,10,1637,1638,1639,0,4288,4289,4290,10,1640,1641,1642,0,4291,4292,4293,10,1640,1637,1639,0,4291,4288,4290,10,1639,1643,1640,0,4290,4294,4291,10,1634,1636,1642,0,4295,4296,4297,10,1638,1644,1628,0,4298,4299,4300,10,1632,1630,1629,0,4301,4302,4303,10,1645,1635,1633,0,4304,4305,4306,10,1645,1629,1644,0,4307,4308,4309,10,1646,1631,1647,0,4310,4311,4312,10,1646,1628,1630,0,4310,4313,4314,10,1643,1628,1646,0,4315,4313,4310,10,1640,1646,1647,0,4316,4310,4312,10,1636,1644,1638,0,4317,4309,4318,10,1628,1644,1629,0,4279,4319,4280,10,1633,1647,1631,0,4284,4320,4282,10,1634,1647,1633,0,4285,4320,4284,10,1637,1640,1642,0,4288,4291,4293,10,1634,1642,1647,0,4295,4297,4321,10,1641,1647,1642,0,4322,4321,4297,10,1643,1638,1628,0,4323,4298,4300,10,1638,1643,1639,0,4298,4323,4324,10,1645,1632,1629,0,4304,4301,4303,10,1632,1645,1633,0,4301,4304,4306,10,1636,1645,1644,0,4317,4307,4309,10,1635,1645,1636,0,4325,4307,4317,10,1632,1646,1630,0,4326,4310,4314,10,1631,1646,1632,0,4311,4310,4326,10,1640,1643,1646,0,4316,4315,4310,10,1641,1640,1647,0,4327,4316,4312,10,1637,1636,1638,0,4328,4317,4318,10,1636,1637,1642,0,4317,4328,4329,10,1648,1649,1650,0,4330,4331,4332,10,1648,1651,1652,0,4330,4333,4334,10,1653,1654,1649,0,4335,4336,4331,10,1655,1656,1657,0,4337,4338,4339,10,1658,1659,1660,0,4340,4341,4342,10,1660,1661,1658,0,4342,4343,4340,10,1662,1656,1655,0,4344,4345,4346,10,1662,1649,1654,0,4344,4347,4348,10,1663,1654,1664,0,4349,4348,4350,10,1665,1652,1658,0,4351,4352,4340,10,1666,1658,1661,0,4353,4340,4343,10,1667,1656,1668,0,4354,4338,4355,10,1669,1653,1652,0,4356,4335,4334,10,1664,1654,1653,0,4357,4336,4335,10,1670,1669,1665,0,4358,4359,4360,10,1670,1671,1664,0,4358,4361,4362,10,1672,1673,1661,0,4363,4364,4365,10,1672,1667,1668,0,4363,4354,4355,10,1672,1670,1673,0,4363,4366,4364,10,1666,1661,1673,0,4353,4343,4367,10,1666,1673,1670,0,4353,4367,4368,10,1671,1663,1664,0,4369,4349,4350,10,1650,1657,1660,0,4370,4371,4372,10,1650,1659,1651,0,4370,4373,4374,10,1648,1653,1649,0,4330,4335,4331,10,1653,1648,1652,0,4335,4330,4334,10,1660,1667,1661,0,4375,4354,4365,10,1667,1660,1657,0,4354,4375,4339,10,1667,1657,1656,0,4354,4339,4338,10,1651,1659,1652,0,4376,4341,4352,10,1658,1652,1659,0,4340,4352,4341,10,1650,1662,1655,0,4377,4344,4346,10,1649,1662,1650,0,4347,4344,4377,10,1662,1663,1656,0,4344,4349,4345,10,1663,1662,1654,0,4349,4344,4348,10,1656,1663,1668,0,4345,4349,4378,10,1666,1665,1658,0,4353,4351,4340,10,1665,1669,1652,0,4379,4356,4334,10,1669,1664,1653,0,4356,4357,4335,10,1671,1670,1672,0,4361,4358,4380,10,1669,1670,1664,0,4359,4358,4362,10,1667,1672,1661,0,4354,4363,4365,10,1666,1670,1665,0,4353,4368,4351,10,1671,1668,1663,0,4369,4378,4349,10,1668,1671,1672,0,4378,4369,4381,10,1659,1650,1660,0,4373,4370,4372,10,1648,1650,1651,0,4382,4370,4374,10,1657,1650,1655,0,4371,4370,4383,10,1674,1675,1676,0,4384,4385,4386,10,1674,1677,1678,0,4384,4387,4388,10,1679,1680,1681,0,4389,4390,4391,10,1682,1681,1683,0,4392,4391,4393,10,1684,1685,1676,0,4394,4395,4396,10,1686,1683,1687,0,4397,4398,4399,10,1687,1678,1677,0,4399,4400,4401,10,1688,1682,1686,0,4402,4403,4404,10,1677,1674,1688,0,4405,4406,4402,10,1679,1688,1674,0,4407,4402,4406,10,1679,1674,1676,0,4407,4406,4408,10,1675,1687,1683,0,4409,4410,4411,10,1675,1681,1680,0,4409,4412,4413,10,1674,1689,1675,0,4384,4414,4385,10,1689,1674,1678,0,4414,4384,4388,10,1682,1679,1681,0,4392,4389,4391,10,1686,1682,1683,0,4415,4392,4393,10,1675,1684,1676,0,4416,4394,4396,10,1679,1684,1680,0,4417,4394,4418,10,1684,1679,1685,0,4394,4417,4395,10,1685,1679,1676,0,4395,4417,4396,10,1688,1686,1687,0,4419,4397,4399,10,1688,1687,1677,0,4419,4399,4401,10,1675,1689,1678,0,4409,4420,4421,10,1688,1679,1682,0,4402,4407,4403,10,1681,1675,1683,0,4412,4409,4411,10,1684,1675,1680,0,4422,4409,4413,10,1687,1675,1678,0,4410,4409,4421,10,1690,1691,1692,0,4423,4424,4425,10,1693,1694,1691,0,4426,4427,4424,10,1695,1696,1697,0,4428,4429,4430,10,1698,1699,1700,0,4431,4432,4433,10,1701,1692,1702,0,4434,4435,4436,10,1703,1702,1700,0,4437,4436,4438,10,1704,1697,1696,0,4439,4440,4441,10,1705,1694,1693,0,4442,4443,4444,10,1706,1703,1699,0,4445,4446,4447,10,1706,1698,1697,0,4445,4448,4449,10,1704,1693,1690,0,4450,4451,4452,10,1706,1690,1701,0,4445,4452,4453,10,1695,1700,1702,0,4454,4455,4456,10,1705,1702,1692,0,4457,4456,4458,10,1691,1694,1705,0,4459,4460,4457,10,1701,1690,1692,0,4461,4423,4425,10,1690,1693,1691,0,4423,4426,4424,10,1698,1695,1697,0,4431,4428,4430,10,1695,1698,1700,0,4428,4431,4433,10,1703,1701,1702,0,4437,4434,4436,10,1699,1703,1700,0,4462,4437,4438,10,1705,1704,1696,0,4442,4439,4441,10,1704,1705,1693,0,4439,4442,4444,10,1698,1706,1699,0,4448,4445,4447,10,1704,1706,1697,0,4450,4445,4449,10,1706,1704,1690,0,4445,4450,4452,10,1703,1706,1701,0,4446,4445,4453,10,1695,1705,1696,0,4454,4457,4463,10,1705,1695,1702,0,4457,4454,4456,10,1691,1705,1692,0,4459,4457,4458,10,1707,1708,1709,0,4464,4465,4466,10,1710,1711,1712,0,4467,4468,4469,10,1713,1710,1714,0,4470,4471,4472,10,1712,1715,1716,0,4473,4474,4475,10,1714,1707,1709,0,4476,4477,4478,10,1714,1712,1707,0,4476,4479,4477,10,1717,1715,1711,0,4480,4481,4468,10,1716,1717,1713,0,4482,4483,4484,10,1716,1715,1717,0,4482,4485,4483,10,1709,1708,1718,0,4466,4465,4486,10,1707,1712,1708,0,4487,4473,4488,10,1716,1718,1708,0,4482,4486,4465,10,1714,1710,1712,0,4489,4467,4469,10,1709,1713,1714,0,4490,4470,4472,10,1713,1709,1718,0,4470,4490,4491,10,1708,1712,1716,0,4488,4473,4475,10,1712,1711,1715,0,4473,4492,4474,10,1713,1717,1710,0,4493,4480,4467,10,1710,1717,1711,0,4467,4480,4468,10,1718,1716,1713,0,4486,4482,4484,10,1719,1720,1721,0,4494,4495,4496,10,1719,1721,1722,0,4494,4496,4497,10,1719,1723,1724,0,4494,4498,4499,10,1725,1726,1727,0,4500,4501,4502,10,1725,1728,1729,0,4500,4503,4504,10,1729,1720,1724,0,4505,4506,4507,10,1727,1726,1723,0,4508,4509,4510,10,1730,1725,1729,0,4511,4500,4504,10,1729,1724,1730,0,4505,4507,4512,10,1723,1731,1730,0,4498,4513,4514,10,1720,1729,1728,0,4506,4505,4515,10,1727,1719,1722,0,4508,4516,4517,10,1720,1719,1724,0,4495,4494,4499,10,1728,1725,1727,0,4503,4500,4502,10,1719,1727,1723,0,4516,4508,4510,10,1720,1728,1721,0,4518,4519,4520,10,1722,1728,1727,0,4521,4519,4522,10,1721,1728,1722,0,4520,4519,4521,10,1726,1730,1731,0,4501,4511,4523,10,1725,1730,1726,0,4500,4511,4501,10,1723,1726,1731,0,4510,4509,4524,10,1724,1723,1730,0,4499,4498,4514,10,1732,1733,1734,0,4525,4526,4527,10,1732,1734,1735,0,4525,4527,4528,10,1736,1737,1738,0,4529,4530,4531,10,1739,1738,1737,0,4532,4533,4534,10,1737,1734,1733,0,4534,4535,4536,10,1735,1740,1732,0,4537,4538,4539,10,1732,1741,1742,0,4525,4540,4541,10,1743,1740,1736,0,4542,4543,4529,10,1733,1742,1739,0,4536,4544,4532,10,1740,1744,1732,0,4538,4545,4539,10,1745,1743,1738,0,4546,4542,4531,10,1745,1739,1741,0,4546,4547,4548,10,1745,1741,1744,0,4546,4548,4549,10,1740,1745,1744,0,4538,4550,4545,10,1742,1741,1739,0,4544,4551,4532,10,1743,1745,1740,0,4542,4546,4543,10,1739,1737,1733,0,4532,4534,4536,10,1735,1736,1740,0,4537,4552,4538,10,1733,1732,1742,0,4526,4525,4541,10,1732,1744,1741,0,4525,4553,4540,10,1743,1736,1738,0,4542,4529,4531,10,1737,1736,1734,0,4554,4555,4556,10,1734,1736,1735,0,4556,4555,4557,10,1739,1745,1738,0,4547,4546,4531,10,1746,1747,1748,0,4558,4559,4560,10,1749,1748,1747,0,4561,4562,4563,10,1750,1751,1752,0,4564,4565,4566,10,1747,1752,1751,0,4567,4568,4569,10,1747,1751,1749,0,4567,4569,4570,10,1746,1748,1753,0,4558,4560,4571,10,1749,1750,1754,0,4572,4573,4574,10,1750,1749,1751,0,4573,4572,4575,10,1749,1754,1748,0,4561,4576,4562,10,1753,1750,1752,0,4577,4564,4566,10,1753,1752,1746,0,4577,4566,4578,10,1748,1750,1753,0,4579,4580,4581,10,1754,1750,1748,0,4582,4580,4579,10,1752,1747,1746,0,4568,4567,4583,10,1755,1756,1757,0,4584,4585,4586,10,1755,1757,1758,0,4584,4586,4587,10,1759,1760,1761,0,4588,4589,4590,10,1760,1757,1756,0,4591,4592,4593,10,1758,1762,1755,0,4594,4595,4596,10,1755,1763,1756,0,4584,4597,4585,10,1764,1762,1759,0,4598,4599,4588,10,1765,1760,1756,0,4600,4591,4593,10,1762,1766,1755,0,4595,4601,4596,10,1767,1764,1761,0,4602,4598,4590,10,1767,1765,1763,0,4602,4603,4604,10,1767,1763,1766,0,4602,4604,4605,10,1762,1767,1766,0,4595,4606,4601,10,1756,1763,1765,0,4593,4607,4600,10,1764,1767,1762,0,4598,4602,4599,10,1758,1759,1762,0,4594,4608,4595,10,1755,1766,1763,0,4584,4609,4597,10,1764,1759,1761,0,4598,4588,4590,10,1760,1765,1761,0,4591,4600,4610,10,1760,1759,1757,0,4611,4612,4613,10,1757,1759,1758,0,4613,4612,4614,10,1765,1767,1761,0,4603,4602,4590,10,1768,1769,1770,0,4615,4616,4617,10,1771,1772,1773,0,4618,4619,4620,10,1771,1770,1769,0,4621,4622,4623,10,1774,1775,1776,0,4624,4625,4626,10,1774,1777,1778,0,4627,4628,4629,10,1773,1779,1780,0,4620,4630,4631,10,1781,1779,1772,0,4632,4633,4634,10,1772,1769,1778,0,4634,4623,4635,10,1774,1782,1777,0,4624,4636,4637,10,1773,1780,1782,0,4638,4639,4636,10,1783,1768,1770,0,4640,4641,4642,10,1783,1776,1775,0,4640,4643,4644,10,1784,1782,1780,0,4645,4646,4631,10,1778,1784,1781,0,4635,4647,4632,10,1774,1768,1775,0,4627,4615,4648,10,1768,1774,1769,0,4615,4627,4616,10,1783,1773,1776,0,4649,4620,4650,10,1783,1771,1773,0,4649,4618,4620,10,1772,1771,1769,0,4634,4621,4623,10,1776,1773,1774,0,4626,4638,4624,10,1769,1774,1778,0,4616,4627,4629,10,1773,1772,1779,0,4620,4619,4630,10,1781,1772,1778,0,4632,4634,4635,10,1774,1773,1782,0,4624,4638,4636,10,1771,1783,1770,0,4651,4640,4642,10,1768,1783,1775,0,4641,4640,4644,10,1781,1784,1779,0,4652,4645,4630,10,1782,1784,1777,0,4646,4645,4653,10,1779,1784,1780,0,4630,4645,4631,10,1784,1778,1777,0,4654,4629,4628,10,1785,1786,1787,0,4655,4656,4657,10,1788,1789,1790,0,4658,4659,4660,10,1786,1789,1788,0,4661,4662,4663,10,1790,1789,1785,0,4664,4665,4666,10,1791,1788,1792,0,4667,4668,4669,10,1792,1790,1785,0,4670,4671,4672,10,1789,1786,1785,0,4662,4661,4673,10,1791,1785,1787,0,4674,4655,4657,10,1792,1788,1790,0,4675,4658,4660,10,1791,1792,1785,0,4676,4670,4672,10,1787,1786,1788,0,4677,4661,4663,10,1788,1791,1787,0,4668,4667,4678,10,1793,1794,1795,0,4679,4680,4681,10,1795,1796,1797,0,4682,4683,4684,10,1798,1797,1799,0,4685,4686,4687,10,1794,1793,1798,0,4688,4689,4690,10,1800,1796,1794,0,4691,4692,4693,10,1800,1799,1796,0,4691,4694,4692,10,1798,1799,1800,0,4685,4687,4695,10,1795,1794,1796,0,4681,4680,4696,10,1800,1794,1798,0,4697,4688,4690,10,1799,1797,1796,0,4698,4684,4683,10,1797,1793,1795,0,4699,4700,4701,10,1798,1793,1797,0,4702,4700,4699,10,1801,1802,1803,0,4703,4704,4705,10,1802,1804,1805,0,4706,4707,4708,10,1806,1803,1807,0,4709,4710,4711,10,1806,1807,1808,0,4709,4711,4712,10,1804,1806,1808,0,4713,4714,4715,10,1805,1807,1803,0,4716,4717,4718,10,1805,1803,1802,0,4716,4718,4719,10,1808,1805,1804,0,4720,4721,4722,10,1805,1808,1807,0,4721,4720,4723,10,1806,1801,1803,0,4724,4703,4705,10,1802,1801,1804,0,4706,4725,4707,10,1806,1804,1801,0,4714,4713,4726,10,1809,1810,1811,0,4727,4728,4729,10,1812,1811,1813,0,4730,4729,4731,10,1810,1814,1815,0,4732,4733,4734,10,1816,1817,1818,0,4735,4736,4737,10,1816,1812,1819,0,4738,4739,4740,10,1820,1816,1818,0,4741,4738,4742,10,1820,1818,1814,0,4741,4742,4743,10,1818,1815,1814,0,4744,4745,4746,10,1815,1818,1817,0,4745,4744,4747,10,1812,1809,1811,0,4730,4727,4729,10,1819,1812,1813,0,4748,4730,4731,10,1811,1810,1815,0,4749,4750,4751,10,1810,1820,1814,0,4732,4752,4733,10,1810,1809,1820,0,4732,4753,4752,10,1816,1819,1813,0,4735,4754,4755,10,1816,1813,1817,0,4735,4755,4736,10,1812,1820,1809,0,4739,4741,4756,10,1816,1820,1812,0,4738,4741,4739,10,1817,1811,1815,0,4757,4749,4751,10,1813,1811,1817,0,4758,4749,4757,10,1821,1822,1823,0,4759,4760,4761,10,1821,1824,1825,0,4759,4762,4763,10,1826,1827,1828,0,4764,4765,4766,10,1822,1826,1828,0,4767,4768,4769,10,1828,1823,1822,0,4769,4770,4767,10,1821,1825,1826,0,4771,4772,4773,10,1821,1823,1824,0,4759,4761,4762,10,1826,1824,1827,0,4774,4775,4776,10,1824,1826,1825,0,4775,4774,4777,10,1824,1828,1827,0,4778,4779,4780,10,1823,1828,1824,0,4781,4779,4778,10,1822,1821,1826,0,4782,4771,4773,10,1829,1830,1831,0,4783,4784,4785,10,1832,1833,1834,0,4786,4787,4788,10,1830,1833,1835,0,4789,4790,4791,10,1835,1831,1830,0,4791,4792,4789,10,1836,1832,1834,0,4793,4794,4795,10,1829,1831,1836,0,4783,4785,4796,10,1832,1835,1833,0,4786,4797,4787,10,1835,1832,1831,0,4798,4799,4800,10,1831,1832,1836,0,4800,4799,4801,10,1830,1829,1833,0,4802,4803,4804,10,1833,1829,1834,0,4804,4803,4805,10,1834,1829,1836,0,4806,4783,4796,10,1837,1838,1839,0,4807,4808,4809,10,1840,1841,1842,0,4810,4811,4812,10,1839,1838,1843,0,4813,4814,4815,10,1842,1841,1837,0,4816,4817,4818,10,1837,1844,1838,0,4807,4819,4808,10,1844,1845,1843,0,4820,4821,4815,10,1841,1846,1837,0,4817,4822,4818,10,1841,1847,1846,0,4817,4823,4822,10,1842,1848,1839,0,4824,4825,4826,10,1842,1839,1840,0,4824,4826,4827,10,1849,1844,1850,0,4828,4829,4830,10,1849,1850,1846,0,4828,4830,4831,10,1849,1846,1847,0,4828,4831,4832,10,1845,1849,1847,0,4833,4834,4835,10,1848,1837,1839,0,4836,4807,4809,10,1843,1841,1840,0,4837,4811,4810,10,1840,1839,1843,0,4838,4813,4815,10,1848,1842,1837,0,4839,4816,4818,10,1837,1850,1844,0,4807,4840,4819,10,1841,1845,1847,0,4811,4833,4835,10,1845,1841,1843,0,4833,4811,4837,10,1838,1844,1843,0,4814,4820,4815,10,1845,1844,1849,0,4821,4820,4841,10,1846,1850,1837,0,4842,4840,4807,10,1851,1852,1853,0,4843,4844,4845,10,1854,1855,1856,0,4846,4847,4848,10,1855,1857,1856,0,4849,4850,4851,10,1855,1854,1857,0,4852,4853,4854,10,1852,1851,1856,0,4855,4856,4848,10,1853,1856,1857,0,4857,4858,4859,10,1851,1854,1856,0,4856,4846,4848,10,1857,1851,1853,0,4860,4843,4845,10,1851,1857,1854,0,4843,4860,4861,10,1852,1856,1853,0,4862,4863,4864,10,1858,1859,1860,0,4865,4866,4867,10,1861,1862,1860,0,4868,4869,4870,10,1859,1858,1862,0,4871,4872,4873,10,1861,1859,1862,0,4874,4875,4876,10,1858,1860,1862,0,4877,4878,4879,10,1860,1859,1861,0,4867,4866,4880,10,1863,1864,1865,0,4881,4882,4883,10,1866,1867,1868,0,4884,4885,4886,10,1868,1864,1863,0,4887,4888,4889,10,1868,1867,1864,0,4887,4890,4888,10,1869,1865,1866,0,4891,4892,4893,10,1865,1869,1863,0,4883,4894,4881,10,1868,1869,1866,0,4895,4896,4897,10,1869,1868,1863,0,4896,4895,4898,10,1866,1864,1867,0,4899,4900,4901,10,1864,1866,1865,0,4900,4899,4902,10,1870,1871,1872,0,4903,4904,4905,10,1871,1873,1874,0,4906,4907,4908,10,1870,1872,1874,0,4909,4910,4911,10,1874,1873,1870,0,4911,4912,4909,10,1871,1874,1872,0,4906,4908,4913,10,1871,1870,1873,0,4914,4915,4916,10,1875,1876,1877,0,4917,4918,4919,10,1878,1879,1880,0,4920,4921,4922,10,1876,1879,1878,0,4923,4924,4925,10,1881,1880,1875,0,4926,4927,4928,10,1881,1877,1878,0,4929,4930,4931,10,1879,1882,1880,0,4932,4933,4934,10,1881,1878,1880,0,4935,4920,4922,10,1877,1876,1878,0,4936,4923,4925,10,1877,1881,1875,0,4937,4926,4928,10,1882,1879,1876,0,4938,4924,4923,10,1875,1882,1876,0,4939,4940,4941,10,1880,1882,1875,0,4942,4940,4939,10,1883,1884,1885,0,4943,4944,4945,10,1886,1887,1884,0,4946,4947,4948,10,1885,1887,1886,0,4949,4950,4951,10,1886,1883,1885,0,4951,4952,4949,10,1885,1884,1887,0,4953,4954,4955,10,1886,1884,1883,0,4956,4957,4958,10,1888,1889,1890,0,4959,4960,4961,10,1891,1892,1893,0,4962,4963,4964,10,1894,1890,1892,0,4965,4966,4967,10,1894,1891,1888,0,4965,4968,4969,10,1888,1895,1889,0,4959,4970,4960,10,1895,1891,1889,0,4971,4962,4972,10,1891,1894,1892,0,4968,4965,4967,10,1888,1890,1894,0,4959,4961,4973,10,1889,1891,1893,0,4972,4962,4964,10,1891,1895,1888,0,4974,4975,4976,10,1893,1892,1890,0,4977,4978,4979,10,1889,1893,1890,0,4980,4981,4982,10,1896,1897,1898,0,4983,4984,4985,10,1898,1899,1896,0,4985,4986,4983,10,1898,1897,1900,0,4987,4988,4989,10,1899,1900,1896,0,4990,4991,4992,10,1899,1898,1900,0,4993,4987,4989,10,1897,1896,1900,0,4994,4995,4996,10,1901,1902,1903,0,4997,4998,4999,10,1903,1902,1904,0,5000,5001,5002,10,1903,1905,1901,0,4999,5003,4997,10,1906,1901,1905,0,5004,5005,5006,10,1902,1907,1904,0,5001,5007,5002,10,1907,1906,1908,0,5008,5009,5010,10,1907,1908,1904,0,5008,5010,5011,10,1909,1904,1908,0,5012,5011,5010,10,1903,1909,1908,0,5013,5014,5015,10,1903,1908,1905,0,5013,5015,5016,10,1909,1903,1904,0,5017,5018,5019,10,1902,1906,1907,0,5020,5004,5021,10,1901,1906,1902,0,5005,5004,5020,10,1906,1905,1908,0,5022,5016,5015,10,1910,1911,1912,0,5023,5024,5025,10,1910,1913,1914,0,5023,5026,5027,10,1910,1914,1915,0,5023,5027,5028,10,1916,1915,1917,0,5029,5030,5031,10,1916,1918,1911,0,5029,5032,5033,10,1913,1919,1920,0,5034,5035,5036,10,1920,1914,1913,0,5036,5037,5034,10,1912,1921,1919,0,5038,5039,5035,10,1918,1921,1912,0,5040,5041,5042,10,1922,1923,1924,0,5043,5044,5045,10,1922,1924,1925,0,5043,5045,5046,10,1926,1924,1923,0,5047,5048,5049,10,1923,1927,1926,0,5049,5050,5047,10,1928,1929,1930,0,5051,5052,5053,10,1931,1930,1925,0,5054,5055,5056,10,1925,1932,1933,0,5056,5057,5058,10,1932,1934,1933,0,5057,5059,5058,10,1935,1931,1936,0,5060,5061,5062,10,1933,1934,1937,0,5063,5064,5065,10,1938,1939,1940,0,5066,5067,5068,10,1938,1940,1941,0,5066,5068,5069,10,1938,1942,1943,0,5070,5071,5072,10,1938,1944,1942,0,5066,5073,5074,10,1945,1946,1940,0,1597,5075,5076,10,1943,1942,1947,0,1603,5077,5078,10,1944,1941,1948,0,5079,5080,5081,10,1944,1948,1949,0,5079,5081,5082,10,1944,1947,1942,0,5079,5083,5084,10,1945,1934,1927,0,5085,5086,5087,10,1950,1951,1948,0,5088,5089,5090,10,1948,1941,1950,0,5090,5091,5088,10,1946,1927,1951,0,5092,5093,5089,10,1952,1949,1953,0,5094,5095,5096,10,1954,1947,1949,0,5097,5098,5095,10,1955,1956,1957,0,5099,5100,5101,10,1955,1957,1952,0,5099,5101,5094,10,1952,1953,1955,0,5094,5096,5099,10,1953,1958,1955,0,5102,5103,5104,10,1937,1934,1954,0,5105,5106,5097,10,1955,1958,1959,0,5107,5108,5109,10,1960,1961,1962,0,5110,5111,5112,10,1963,1949,1964,0,5113,5114,5115,10,1964,1962,1965,0,5115,5112,5116,10,1961,1966,1967,0,5117,5118,5119,10,1960,1964,1966,0,5120,5121,5122,10,1966,1961,1960,0,5122,5123,5120,10,1964,1949,1948,0,5121,5124,5125,10,1965,1962,1968,0,5116,5112,5126,10,1962,1969,1967,0,5127,5128,5129,10,1962,1961,1969,0,5127,5130,5128,10,1967,1951,1970,0,5129,5131,5132,10,1970,1919,1968,0,5132,5133,5134,10,1963,1919,1971,0,5113,5135,5136,10,1956,1928,1935,0,5137,5051,5060,10,1958,1930,1929,0,5108,5138,5139,10,1959,1929,1928,0,5109,5139,5140,10,1937,1936,1933,0,5065,5062,5063,10,1926,1927,1934,0,5141,5142,5143,10,1972,1958,1973,0,5144,5108,5145,10,1973,1971,1972,0,5145,5146,5144,10,1972,1923,1922,0,5144,5147,5148,10,1953,1949,1971,0,5149,5150,5151,10,1953,1971,1973,0,5149,5151,5152,10,1973,1958,1953,0,5152,5153,5149,10,1974,1975,1976,0,5154,5155,5156,10,1974,1919,1975,0,5154,5157,5155,10,1975,1919,1977,0,5158,5159,5160,10,1971,1919,1974,0,5161,5162,5163,10,1976,1972,1971,0,5164,5165,5166,10,1978,1974,1976,0,5167,5168,5164,10,1972,1977,1923,0,5169,5170,5171,10,1917,1970,1951,0,5172,5173,5174,10,1918,1979,1921,0,5175,5176,5177,10,1977,1921,1979,0,5170,5178,5179,10,1970,1920,1919,0,5180,5036,5035,10,1916,1917,1951,0,5029,5031,5181,10,1916,1951,1927,0,5029,5181,5182,10,1979,1918,1927,0,5183,5032,5182,10,1913,1910,1912,0,5026,5023,5025,10,1916,1910,1915,0,5029,5184,5030,10,1910,1916,1911,0,5184,5029,5033,10,1913,1912,1919,0,5034,5038,5035,10,1914,1920,1917,0,5185,5186,5172,10,1914,1917,1915,0,5185,5172,5187,10,1911,1918,1912,0,5188,5040,5042,10,1930,1922,1925,0,5189,5043,5046,10,1922,1930,1958,0,5190,5191,5192,10,1925,1926,1932,0,5056,5047,5057,10,1926,1925,1924,0,5047,5056,5048,10,1931,1928,1930,0,5061,5051,5053,10,1931,1925,1933,0,5054,5056,5058,10,1935,1928,1931,0,5060,5051,5061,10,1933,1936,1931,0,5063,5062,5061,10,1939,1943,1980,0,5193,5072,5194,10,1938,1943,1939,0,5070,5072,5193,10,1938,1941,1944,0,5066,5069,5073,10,1939,1945,1940,0,5195,1597,5076,10,1945,1939,1980,0,1597,5195,5196,10,1940,1950,1941,0,5197,5198,5199,10,1950,1940,1946,0,5198,5197,1600,10,1980,1954,1934,0,5200,5201,5202,10,1943,1954,1980,0,1603,5201,5200,10,1954,1943,1947,0,5201,1603,5078,10,1944,1949,1947,0,5079,5082,5083,10,1946,1945,1927,0,5203,5085,5087,10,1945,1980,1934,0,5085,5204,5086,10,1950,1946,1951,0,5088,5092,5089,10,1954,1952,1936,0,5097,5094,5205,10,1952,1954,1949,0,5094,5097,5095,10,1954,1936,1937,0,5097,5205,5105,10,1955,1959,1956,0,5107,5109,5206,10,1952,1957,1936,0,5094,5101,5205,10,1964,1960,1962,0,5115,5110,5112,10,1965,1963,1964,0,5116,5113,5115,10,1969,1961,1967,0,5207,5117,5119,10,1951,1967,1966,0,5208,5119,5118,10,1951,1964,1948,0,5209,5121,5125,10,1964,1951,1966,0,5121,5209,5122,10,1963,1968,1919,0,5113,5126,5135,10,1965,1968,1963,0,5116,5126,5113,10,1968,1962,1967,0,5134,5127,5129,10,1968,1967,1970,0,5134,5129,5132,10,1957,1935,1936,0,5210,5060,5062,10,1957,1956,1935,0,5210,5137,5060,10,1959,1958,1929,0,5109,5108,5139,10,1956,1959,1928,0,5206,5109,5140,10,1934,1932,1926,0,5143,5211,5141,10,1958,1972,1922,0,5108,5144,5148,10,1963,1971,1949,0,5212,5151,5150,10,1976,1975,1977,0,5213,5158,5160,10,1978,1971,1974,0,5214,5161,5163,10,1978,1976,1971,0,5167,5164,5166,10,1972,1976,1977,0,5165,5164,5215,10,1970,1917,1920,0,5173,5172,5186,10,1977,1979,1923,0,5170,5179,5171,10,1921,1977,1919,0,5039,5216,5035,10,1918,1916,1927,0,5032,5029,5182,10,1923,1979,1927,0,5217,5183,5182,10,1981,1982,1983,0,5218,5219,5220,10,1984,1985,1981,0,5221,5222,5223,10,1984,1981,1986,0,5221,5223,5224,10,1984,1987,1985,0,5221,5225,5222,10,1986,1988,1984,0,5226,5227,5228,10,1985,1989,1982,0,5229,5230,5231,10,1990,1989,1985,0,5232,5233,5234,10,1990,1988,1991,0,5232,5235,5236,10,1990,1992,1989,0,5232,5237,5233,10,1983,1991,1988,0,5238,5239,5227,10,1993,1982,1989,0,5240,5231,5230,10,1994,1995,1993,0,5241,5242,5243,10,1996,1997,1992,0,5244,5245,5237,10,1994,1996,1991,0,5246,5247,5239,10,1998,1993,1997,0,5248,5240,5249,10,1986,1981,1983,0,5250,5218,5220,10,1988,1987,1984,0,5235,5251,5252,10,1990,1987,1988,0,5232,5251,5235,10,1987,1990,1985,0,5251,5232,5234,10,1981,1985,1982,0,5253,5229,5231,10,1986,1983,1988,0,5226,5238,5227,10,1993,1995,1982,0,5243,5242,5219,10,1995,1983,1982,0,5242,5220,5219,10,1990,1991,1992,0,5232,5236,5237,10,1983,1995,1991,0,5238,5254,5239,10,1993,1989,1992,0,5240,5230,5255,10,1997,1993,1992,0,5249,5240,5255,10,1991,1996,1992,0,5236,5244,5237,10,1998,1994,1993,0,5256,5241,5243,10,1995,1994,1991,0,5254,5246,5239,10,1997,1994,1998,0,5257,5258,5259,10,1997,1996,1994,0,5257,5260,5258,10,1999,2000,2001,0,5261,5262,5263,10,2002,2003,2004,0,5264,5265,5266,10,1999,2005,2006,0,5267,5268,5269,10,2001,2000,2002,0,5270,5271,5272,10,2001,2002,2004,0,5270,5272,5273,10,2006,2002,1999,0,5274,5275,5276,10,2002,2000,1999,0,5277,5278,5279,10,2001,2005,1999,0,5263,5280,5261,10,2004,2005,2001,0,5281,5282,5283,10,2003,2005,2004,0,5284,5282,5281,10,2006,2003,2002,0,5285,5265,5264,10,2006,2005,2003,0,5286,5287,5288,10,2007,2008,2009,0,5289,5290,5291,10,2008,2010,2011,0,5292,5293,5294,10,2012,2007,2009,0,5295,5296,5297,10,2013,2014,2009,0,5298,5299,5300,10,2009,2008,2013,0,5301,5302,5303,10,2014,2011,2012,0,5299,5304,5305,10,2008,2007,2010,0,5290,5289,5306,10,2011,2013,2008,0,5294,5307,5292,10,2014,2013,2011,0,5299,5298,5304,10,2012,2009,2014,0,5295,5297,5308,10,2012,2010,2007,0,5309,5310,5311,10,2011,2010,2012,0,5312,5310,5309,10,2015,2016,2017,0,5313,5314,5315,10,2018,2019,2020,0,5316,5317,5318,10,2019,2021,2020,0,5317,5319,5318,10,2022,2023,2020,0,5320,5321,5322,10,2023,2017,2016,0,5323,5324,5325,10,2018,2024,2015,0,5316,5326,5327,10,2025,2016,2024,0,5328,5325,5329,10,2024,2018,2026,0,5330,5331,5332,10,2024,2026,2025,0,5330,5332,5333,10,2017,2022,2027,0,5324,5334,5335,10,2017,2027,2028,0,5324,5335,5336,10,2027,2022,2021,0,5337,5338,5339,10,2015,2024,2016,0,5340,5341,5342,10,2019,2018,2015,0,5317,5316,5327,10,2026,2018,2020,0,5343,5316,5318,10,2025,2020,2023,0,5344,5322,5321,10,2026,2020,2025,0,5345,5322,5344,10,2022,2020,2021,0,5320,5322,5346,10,2025,2023,2016,0,5328,5323,5325,10,2023,2022,2017,0,5323,5334,5324,10,2015,2028,2019,0,5313,5347,5348,10,2028,2015,2017,0,5347,5313,5315,10,2019,2027,2021,0,5349,5337,5339,10,2028,2027,2019,0,5350,5337,5349,10,2029,2030,2031,0,5351,5352,5353,10,2032,2033,2030,0,5354,5355,5356,10,2032,2029,2031,0,5357,5358,5359,10,2029,2034,2030,0,5351,5360,5352,10,2033,2031,2030,0,5361,5362,5363,10,2032,2031,2033,0,5364,5365,5366,10,2032,2034,2029,0,5357,5367,5358,10,2034,2032,2030,0,5368,5354,5356,10,2035,2036,2037,0,5369,5370,5371,10,2038,2039,2040,0,5372,5373,5374,10,2038,2041,2042,0,5372,5375,5376,10,2038,2037,2036,0,5377,5378,5379,10,2035,2041,2036,0,5380,5381,5382,10,2041,2035,2042,0,5381,5380,5383,10,2040,2039,2037,0,5384,5385,5386,10,2038,2042,2039,0,5372,5376,5373,10,2039,2035,2037,0,5387,5369,5371,10,2035,2039,2042,0,5388,5389,5390,10,2038,2040,2037,0,5391,5384,5386,10,2041,2038,2036,0,5392,5377,5379,10,2043,2044,2045,0,5393,5394,5395,10,2046,2047,2048,0,5396,5397,5398,10,2048,2044,2046,0,5398,5399,5396,10,2047,2049,2045,0,5400,5401,5402,10,2045,2044,2048,0,5403,5404,5405,10,2043,2045,2049,0,5393,5395,5406,10,2043,2046,2044,0,5407,5408,5409,10,2048,2047,2045,0,5410,5400,5402,10,2043,2049,2046,0,5411,5412,5413,10,2046,2049,2047,0,5413,5412,5414,10,2050,2051,2052,0,5415,5416,5417,10,2053,2054,2051,0,5418,5419,5420,10,2054,2055,2050,0,5421,5422,5423,10,2054,2050,2052,0,5421,5423,5424,10,2054,2052,2051,0,5425,5426,5427,10,2051,2050,2056,0,5416,5415,5428,10,2056,2055,2053,0,5429,5430,5431,10,2055,2056,2050,0,5430,5429,5432,10,2053,2051,2056,0,5418,5420,5433,10,2054,2053,2055,0,5419,5418,5434,10,2057,2058,2059,0,5435,5436,5437,10,2059,2060,2057,0,5437,5438,5435,10,2061,2062,2063,0,5439,5440,5441,10,2058,2060,2061,0,5442,5443,5444,10,2058,2061,2063,0,5442,5444,5445,10,2058,2057,2060,0,5442,5446,5443,10,2064,2062,2065,0,5447,5448,5449,10,2064,2059,2062,0,5447,5450,5448,10,2059,2064,2060,0,5451,5452,5453,10,2060,2065,2061,0,5454,5455,5456,10,2065,2062,2061,0,5457,5440,5439,10,2058,2063,2059,0,5458,5459,5460,10,2062,2059,2063,0,5461,5460,5459,10,2064,2065,2060,0,5462,5455,5454,10,2066,2067,2068,0,5463,5464,5465,10,2066,2068,2069,0,5463,5465,5466,10,2067,2070,2071,0,5467,5468,5469,10,2072,2071,2073,0,5470,5471,5472,10,2069,2074,2066,0,5473,5474,5475,10,2074,2073,2075,0,5474,5476,5477,10,2069,2067,2072,0,5478,5479,5480,10,2069,2072,2073,0,5478,5480,5481,10,2070,2067,2066,0,5482,5464,5463,10,2071,2070,2074,0,5483,5484,5485,10,2071,2074,2075,0,5483,5485,5486,10,2072,2067,2071,0,5487,5467,5469,10,2075,2073,2071,0,5488,5472,5471,10,2074,2069,2073,0,5474,5473,5476,10,2067,2069,2068,0,5479,5478,5489,10,2070,2066,2074,0,5482,5463,5490,10,2076,2077,2078,0,5491,5492,5493,10,2079,2080,2076,0,5494,5495,5496,10,2076,2081,2079,0,5496,5497,5494,10,2082,2080,2079,0,5498,5499,5500,10,2082,2083,2080,0,5498,5501,5499,10,2077,2083,2082,0,5502,5503,5504,10,2079,2081,2078,0,5505,5506,5507,10,2079,2078,2082,0,5505,5507,5508,10,2081,2076,2078,0,5509,5491,5493,10,2078,2077,2082,0,5510,5502,5504,10,2083,2077,2080,0,5511,5512,5513,10,2080,2077,2076,0,5513,5512,5514,10,2084,2085,2086,0,5515,5516,5517,10,2087,2088,2089,0,5518,5519,5520,10,2086,2090,2084,0,5521,5522,5523,10,2085,2091,2087,0,5524,5525,5526,10,2085,2087,2089,0,5524,5526,5527,10,2091,2090,2087,0,5528,5529,5530,10,2085,2084,2090,0,5516,5515,5531,10,2091,2085,2090,0,5532,5516,5531,10,2089,2086,2085,0,5533,5534,5535,10,2086,2089,2088,0,5534,5533,5536,10,2090,2088,2087,0,5537,5519,5518,10,2090,2086,2088,0,5522,5521,5538,10,2092,2093,2094,0,5539,5540,5541,10,2094,2093,2095,0,5542,5543,5544,10,2095,2096,2094,0,5544,5545,5542,10,2096,2097,2098,0,5546,5547,5548,10,2098,2099,2096,0,5548,5549,5546,10,2098,2100,2101,0,5550,5551,5552,10,2102,2096,2099,0,5553,5554,5555,10,2102,2099,2101,0,5553,5555,5556,10,2097,2103,2098,0,5547,5557,5548,10,2100,2103,2092,0,5551,5558,5559,10,2098,2103,2100,0,5550,5558,5551,10,2094,2101,2100,0,5541,5560,5561,10,2094,2100,2092,0,5541,5561,5539,10,2102,2094,2096,0,5562,5542,5545,10,2095,2097,2096,0,5563,5547,5546,10,2099,2098,2101,0,5564,5550,5552,10,2102,2101,2094,0,5565,5560,5541,10,2095,2093,2092,0,5544,5543,5566,10,2103,2095,2092,0,5567,5568,5569,10,2097,2095,2103,0,5570,5568,5567,10,2104,2105,2106,0,5571,5572,5573,10,2107,2108,2104,0,5574,5575,5576,10,2109,2104,2110,0,5577,5576,5578,10,2111,2112,2106,0,5579,5580,5581,10,2111,2113,2114,0,5579,5582,5583,10,2114,2115,2112,0,5583,5584,5580,10,2112,2115,2109,0,5585,5586,5587,10,2112,2109,2110,0,5585,5587,5588,10,2112,2110,2106,0,5585,5588,5589,10,2105,2104,2108,0,5572,5571,5590,10,2109,2107,2104,0,5577,5574,5576,10,2113,2107,2114,0,5591,5592,5593,10,2109,2114,2107,0,5594,5593,5592,10,2112,2111,2114,0,5580,5579,5583,10,2105,2111,2106,0,5595,5579,5581,10,2113,2108,2107,0,5596,5597,5598,10,2111,2108,2113,0,5599,5597,5596,10,2105,2108,2111,0,5600,5597,5599,10,2115,2114,2109,0,5601,5593,5594,10,2110,2104,2106,0,5602,5571,5573,10,2116,2117,2118,0,5603,5604,5605,10,2117,2116,2119,0,5604,5603,5606,10,2118,2120,2121,0,5607,5608,5609,10,2122,2121,2123,0,5610,5611,5612,10,2124,2123,2119,0,5613,5614,5615,10,2124,2119,2116,0,5613,5615,5616,10,2124,2118,2122,0,5617,5618,5619,10,2124,2125,2118,0,5617,5620,5618,10,2123,2120,2117,0,5621,5622,5623,10,2123,2117,2119,0,5621,5623,5624,10,2125,2116,2118,0,5625,5603,5605,10,2120,2118,2117,0,5608,5607,5626,10,2122,2118,2121,0,5627,5607,5609,10,2124,2122,2123,0,5628,5610,5612,10,2125,2124,2116,0,5629,5613,5616,10,2123,2121,2120,0,5612,5611,5630,10,2126,2127,2128,0,5631,5632,5633,10,2129,2130,2126,0,5634,5635,5636,10,2131,2129,2126,0,5637,5634,5636,10,2126,2132,2131,0,5636,5638,5637,10,2129,2133,2134,0,5639,5640,5641,10,2135,2134,2136,0,5642,5643,5644,10,2136,2132,2128,0,5645,5646,5647,10,2126,2130,2127,0,5631,5648,5632,10,2127,2130,2135,0,5632,5648,5649,10,2131,2133,2129,0,5637,5650,5634,10,2134,2133,2136,0,5641,5640,5651,10,2127,2135,2136,0,5652,5642,5644,10,2134,2135,2129,0,5653,5654,5655,10,2129,2135,2130,0,5655,5654,5656,10,2128,2127,2136,0,5657,5652,5644,10,2132,2126,2128,0,5658,5631,5633,10,2131,2136,2133,0,5659,5645,5660,10,2132,2136,2131,0,5646,5645,5659,10,2137,2138,2139,0,5661,5662,5663,10,2140,2141,2142,0,5664,5665,5666,10,2143,2144,2139,0,5667,5668,5669,10,2141,2140,2145,0,5665,5664,5670,10,2143,2141,2145,0,5671,5672,5673,10,2143,2137,2141,0,5671,5674,5672,10,2146,2147,2142,0,5675,5676,5677,10,2146,2142,2139,0,5675,5677,5678,10,2142,2137,2139,0,5679,5661,5663,10,2137,2142,2141,0,5661,5679,5680,10,2147,2140,2142,0,5681,5664,5666,10,2140,2144,2145,0,5682,5683,5684,10,2144,2147,2146,0,5683,5685,5686,10,2147,2144,2140,0,5685,5683,5682,10,2139,2138,2143,0,5669,5687,5667,10,2145,2144,2143,0,5684,5683,5688,10,2143,2138,2137,0,5667,5687,5689,10,2146,2139,2144,0,5690,5669,5668,10,2148,2149,2150,0,5691,5692,5693,10,2151,2152,2153,0,5694,5695,5696,10,2154,2155,2148,0,5697,5698,5699,10,2148,2156,2154,0,5699,5700,5697,10,2157,2148,2155,0,5701,5699,5698,10,2154,2150,2151,0,5702,5703,5704,10,2154,2156,2150,0,5702,5705,5703,10,2157,2149,2158,0,5706,5707,5708,10,2156,2148,2150,0,5709,5691,5693,10,2158,2148,2157,0,5710,5691,5711,10,2148,2158,2149,0,5691,5710,5692,10,2151,2149,2152,0,5712,5713,5714,10,2149,2151,2150,0,5713,5712,5715,10,2159,2153,2155,0,5716,5696,5717,10,2154,2159,2155,0,5697,5718,5698,10,2159,2151,2153,0,5716,5694,5696,10,2159,2154,2151,0,5719,5702,5704,10,2152,2155,2153,0,5695,5717,5696,10,2149,2157,2152,0,5707,5706,5720,10,2152,2157,2155,0,5720,5706,5721,10,2160,2161,2162,0,5722,5723,5724,10,2163,2164,2165,0,5725,5726,5727,10,2165,2166,2163,0,5727,5728,5725,10,2163,2167,2160,0,5725,5729,5730,10,2160,2168,2164,0,5730,5731,5726,10,2169,2170,2166,0,5732,5733,5734,10,2171,2169,2172,0,5735,5736,5737,10,2171,2173,2162,0,5735,5738,5739,10,2166,2170,2174,0,5734,5733,5740,10,2174,2163,2166,0,5741,5742,5743,10,2174,2167,2163,0,5741,5744,5742,10,2171,2172,2164,0,5745,5746,5747,10,2160,2173,2168,0,5722,5748,5749,10,2173,2160,2162,0,5748,5722,5724,10,2164,2163,2160,0,5726,5725,5730,10,2165,2169,2166,0,5750,5732,5734,10,2172,2169,2165,0,5751,5732,5750,10,2164,2172,2165,0,5752,5751,5750,10,2162,2161,2170,0,5739,5753,5754,10,2169,2162,2170,0,5736,5739,5754,10,2171,2162,2169,0,5735,5739,5736,10,2167,2161,2160,0,5755,5723,5722,10,2174,2170,2161,0,5756,5754,5753,10,2167,2174,2161,0,5744,5741,5757,10,2168,2171,2164,0,5758,5745,5747,10,2173,2171,2168,0,5759,5745,5758,10,2175,2176,2177,0,5760,5761,5762,10,2175,2178,2179,0,5760,5763,5764,10,2176,2179,2180,0,5761,5764,5765,10,2181,2177,2176,0,5766,5767,5768,10,2182,2183,2184,0,5769,5770,5771,10,2185,2186,2184,0,5772,5773,5771,10,2179,2178,2187,0,5774,5775,5776,10,2175,2181,2182,0,5777,5778,5779,10,2175,2186,2187,0,5777,5780,5781,10,2175,2187,2178,0,5777,5781,5782,10,2184,2183,2188,0,5783,5784,5785,10,2184,2188,2180,0,5783,5785,5786,10,2184,2180,2185,0,5783,5786,5787,10,2176,2175,2179,0,5761,5760,5764,10,2188,2176,2180,0,5788,5761,5765,10,2188,2181,2176,0,5789,5766,5768,10,2181,2188,2183,0,5766,5789,5790,10,2182,2181,2183,0,5791,5766,5790,10,2186,2182,2184,0,5773,5769,5771,10,2187,2186,2179,0,5776,5792,5774,10,2179,2185,2180,0,5774,5793,5794,10,2185,2179,2186,0,5793,5774,5792,10,2186,2175,2182,0,5780,5777,5779,10,2181,2175,2177,0,5778,5777,5795,10,2189,2190,2191,0,5796,5797,5798,10,2192,2190,2189,0,5799,5800,5801,10,2189,2193,2192,0,5801,5802,5799,10,2193,2189,2194,0,5803,5804,5805,10,2195,2191,2190,0,5806,5807,5808,10,2194,2189,2191,0,5809,5796,5798,10,2192,2193,2195,0,5810,5811,5812,10,2194,2191,2195,0,5813,5814,5815,10,2195,2193,2194,0,5816,5803,5805,10,2192,2195,2190,0,5817,5806,5808,10,2196,2197,2198,0,5818,5819,5820,10,2196,2198,2199,0,5818,5820,5821,10,2197,2200,2201,0,5822,5823,5824,10,2202,2203,2201,0,5825,5826,5827,10,2202,2201,2200,0,5825,5827,5828,10,2203,2202,2204,0,5826,5825,5829,10,2202,2200,2204,0,5830,5831,5832,10,2197,2196,2204,0,5833,5834,5832,10,2198,2201,2203,0,5835,5836,5837,10,2198,2197,2201,0,5838,5822,5824,10,2199,2203,2204,0,5839,5826,5829,10,2199,2204,2196,0,5840,5841,5842,10,2200,2197,2204,0,5831,5833,5832,10,2199,2198,2203,0,5843,5835,5837,10,2205,2206,2207,0,5844,5845,5846,10,2208,2209,2206,0,5847,5848,5849,10,2210,2211,2212,0,5850,5851,5852,10,2213,2207,2210,0,5853,5854,5850,10,2210,2212,2213,0,5850,5852,5853,10,2205,2207,2213,0,5855,5856,5857,10,2206,2205,2214,0,5849,5858,5859,10,2214,2208,2206,0,5859,5847,5849,10,2209,2211,2215,0,5860,5861,5862,10,2206,2215,2207,0,5845,5863,5846,10,2215,2206,2209,0,5863,5845,5864,10,2211,2209,2208,0,5865,5866,5867,10,2211,2208,2214,0,5865,5867,5868,10,2211,2214,2212,0,5851,5869,5852,10,2213,2212,2205,0,5857,5870,5855,10,2205,2212,2214,0,5855,5870,5871,10,2210,2215,2211,0,5872,5862,5861,10,2207,2215,2210,0,5873,5862,5872,10,2216,2217,2218,0,5874,5875,5876,10,2219,2220,2217,0,5877,5878,5875,10,2221,2222,2216,0,5879,5880,5881,10,2222,2223,2224,0,5882,5883,5884,10,2220,2219,2224,0,5885,5886,5887,10,2223,2221,2220,0,5888,5889,5890,10,2218,2220,2221,0,5891,5890,5889,10,2224,2219,2222,0,5892,5893,5894,10,2217,2216,2219,0,5875,5874,5877,10,2217,2220,2218,0,5875,5878,5876,10,2218,2221,2216,0,5895,5879,5881,10,2223,2222,2221,0,5883,5882,5896,10,2223,2220,2224,0,5897,5885,5887,10,2219,2216,2222,0,5893,5898,5894,10,2225,2226,2227,0,5899,5900,5901,10,2228,2229,2226,0,5902,5903,5900,10,2230,2231,2232,0,5904,5905,5906,10,2233,2229,2228,0,5907,5908,5909,10,2232,2226,2233,0,5910,5911,5912,10,2232,2227,2226,0,5910,5913,5911,10,2229,2233,2226,0,5914,5912,5911,10,2225,2230,2228,0,5915,5916,5917,10,2225,2228,2226,0,5899,5902,5900,10,2234,2225,2227,0,5918,5919,5920,10,2234,2231,2225,0,5921,5905,5922,10,2227,2231,2234,0,5920,5923,5924,10,2232,2231,2227,0,5906,5905,5925,10,2233,2230,2232,0,5907,5926,5927,10,2230,2233,2228,0,5926,5907,5909,10,2225,2231,2230,0,5915,5928,5916,10,2235,2236,2237,0,5929,5930,5931,10,2236,2238,2237,0,5930,5932,5931,10,2239,2240,2241,0,5933,5934,5935,10,2242,2236,2235,0,5936,5937,5938,10,2240,2235,2237,0,5939,5940,5941,10,2243,2240,2237,0,5942,5939,5941,10,2239,2235,2240,0,5943,5940,5939,10,2238,2236,2244,0,5932,5930,5944,10,2238,2244,2245,0,5945,5946,5947,10,2242,2244,2236,0,5948,5946,5949,10,2244,2242,2246,0,5946,5948,5950,10,2246,2245,2244,0,5950,5947,5946,10,2241,2245,2246,0,5935,5951,5952,10,2246,2239,2241,0,5952,5933,5935,10,2242,2239,2246,0,5936,5953,5954,10,2235,2239,2242,0,5938,5955,5936,10,2243,2237,2238,0,5956,5957,5958,10,2240,2243,2245,0,5959,5956,5960,10,2240,2245,2241,0,5959,5960,5961,10,2238,2245,2243,0,5958,5960,5956,10,2247,2248,2249,0,5962,5963,5964,10,2249,2250,2247,0,5965,5966,5967,10,2251,2252,2248,0,5968,5969,5970,10,2249,2248,2252,0,5971,5972,5973,10,2247,2250,2253,0,5974,5975,5976,10,2247,2253,2248,0,5962,5977,5963,10,2249,2254,2250,0,5965,5978,5966,10,2250,2252,2251,0,5979,5980,5981,10,2252,2250,2254,0,5980,5979,5982,10,2253,2251,2248,0,5983,5968,5970,10,2254,2249,2252,0,5984,5971,5973,10,2250,2251,2253,0,5975,5985,5976,10,2255,2256,2257,0,5986,5987,5988,10,2258,2259,2257,0,5989,5990,5991,10,2260,2255,2257,0,5992,5993,5994,10,2261,2262,2260,0,5995,5996,5997,10,2263,2264,2262,0,5998,5999,6000,10,2261,2263,2262,0,6001,6002,6003,10,2261,2265,2263,0,6001,6004,6002,10,2258,2265,2259,0,6005,6006,6007,10,2259,2265,2257,0,6008,6009,6010,10,2255,2262,2256,0,6011,6000,6012,10,2256,2258,2257,0,6013,5989,5991,10,2255,2260,2262,0,5993,5992,6014,10,2257,2261,2260,0,6010,5995,5997,10,2264,2263,2265,0,6015,6016,6006,10,2258,2264,2265,0,6005,6015,6006,10,2261,2257,2265,0,5995,6010,6009,10,2262,2264,2256,0,6000,5999,6012,10,2258,2256,2264,0,6017,6018,6019,10,2266,2267,2268,0,6020,6021,6022,10,2269,2270,2271,0,6023,6024,6025,10,2269,2271,2266,0,6023,6025,6026,10,2272,2273,2274,0,6027,6028,6029,10,2272,2275,2276,0,6027,6030,6031,10,2272,2277,2273,0,6027,6032,6028,10,2275,2278,2276,0,6033,6034,6035,10,2274,2279,2278,0,6036,6037,6034,10,2280,2281,2277,0,6038,6039,6040,10,2280,2272,2276,0,6038,6041,6042,10,2282,2283,2273,0,6043,6044,6045,10,2282,2277,2281,0,6043,6046,6047,10,2284,2279,2274,0,6048,6049,6050,10,2268,2279,2270,0,6051,6037,6024,10,2285,2270,2279,0,6052,6053,6049,10,2285,2286,2287,0,6052,6054,6055,10,2287,2288,2267,0,6056,6057,6058,10,2267,2276,2268,0,6021,6042,6022,10,2268,2278,2279,0,6051,6034,6037,10,2289,2285,2279,0,6059,6052,6049,10,2288,2281,2267,0,6057,6047,6058,10,2271,2285,2287,0,6060,6061,6062,10,2284,2283,2286,0,6048,6063,6054,10,2284,2289,2279,0,6048,6059,6049,10,2282,2286,2283,0,6043,6064,6044,10,2266,2290,2267,0,6020,6065,6021,10,2269,2266,2268,0,6066,6020,6022,10,2270,2285,2271,0,6053,6052,6067,10,2290,2287,2267,0,6068,6056,6058,10,2275,2272,2274,0,6030,6027,6029,10,2275,2274,2278,0,6033,6036,6034,10,2272,2280,2277,0,6041,6038,6040,10,2277,2282,2273,0,6046,6043,6045,10,2273,2284,2274,0,6069,6048,6050,10,2283,2284,2273,0,6063,6048,6069,10,2269,2268,2270,0,6023,6051,6024,10,2288,2287,2286,0,6057,6056,6064,10,2280,2267,2281,0,6038,6021,6039,10,2267,2280,2276,0,6021,6038,6042,10,2268,2276,2278,0,6051,6035,6034,10,2289,2286,2285,0,6059,6054,6052,10,2290,2271,2287,0,6070,6060,6062,10,2266,2271,2290,0,6071,6060,6070,10,2284,2286,2289,0,6048,6054,6059,10,2288,2282,2281,0,6057,6043,6047,10,2282,2288,2286,0,6043,6057,6064,10,2291,2292,2293,0,6072,6073,6074,10,2294,2295,2291,0,6075,6076,6072,10,2296,2294,2293,0,6077,6078,6079,10,2296,2293,2292,0,6077,6079,6080,10,2296,2292,2297,0,6077,6080,6081,10,2298,2299,2300,0,6082,6083,6084,10,2301,2300,2297,0,6085,6084,6086,10,2302,2291,2295,0,6087,6088,6089,10,2302,2299,2298,0,6087,6090,6091,10,2303,2291,2304,0,6092,6072,6093,10,2305,2306,2303,0,6094,6095,6092,10,2307,2303,2306,0,6096,6097,6098,10,2307,2308,2309,0,6096,6099,6100,10,2297,2307,2310,0,6086,6101,6102,10,2301,2310,2311,0,6085,6102,6103,10,2307,2309,2310,0,6101,6104,6102,10,2298,2311,2312,0,6091,6105,6106,10,2312,2304,2291,0,6106,6107,6088,10,2296,2297,2300,0,6108,6109,6110,10,2300,2299,2295,0,6110,6111,6112,10,2313,2310,2309,0,1944,6113,6114,10,2313,2308,2306,0,1944,1947,1948,10,2313,2305,2304,0,1944,6115,6116,10,2313,2312,2311,0,1944,6117,6118,10,2294,2291,2293,0,6075,6072,6074,10,2301,2298,2300,0,6085,6082,6084,10,2299,2302,2295,0,6090,6087,6089,10,2291,2303,2292,0,6072,6092,6073,10,2305,2303,2304,0,6094,6092,6093,10,2308,2307,2306,0,6099,6096,6098,10,2307,2292,2303,0,6096,6080,6097,10,2297,2292,2307,0,6081,6080,6096,10,2301,2297,2310,0,6085,6086,6102,10,2298,2301,2311,0,6082,6085,6103,10,2302,2298,2312,0,6087,6091,6106,10,2302,2312,2291,0,6087,6106,6088,10,2294,2300,2295,0,6119,6110,6112,10,2296,2300,2294,0,6108,6110,6119,10,2308,2313,2309,0,1947,1944,6114,10,2305,2313,2306,0,6115,1944,1948,10,2312,2313,2304,0,6117,1944,6116,10,2310,2313,2311,0,6113,1944,6118,10,2314,2315,2316,0,1803,6120,6121,10,2316,2317,2318,0,6121,6122,6123,10,2319,2320,2321,0,6124,6125,6126,10,2319,2322,2317,0,6124,6127,6128,10,2320,2323,2324,0,6125,6129,6130,10,2322,2321,2324,0,6131,6132,6133,10,2319,2325,2323,0,6134,6135,6136,10,2319,2316,2315,0,6134,6137,6138,10,2326,2327,2328,0,6139,6140,6141,10,2329,2330,2331,0,6142,6143,6144,10,2331,2326,2329,0,6144,6139,6142,10,2332,2333,2334,0,6145,6146,6147,10,2332,2335,2336,0,6145,6148,6149,10,2337,2336,2338,0,6150,6151,6152,10,2338,2339,2330,0,6152,6153,6154,10,2340,2328,2327,0,6155,6156,6157,10,2341,2334,2333,0,6158,6159,6160,10,2342,2324,2333,0,6161,6162,6163,10,2340,2333,2324,0,6155,6160,6164,10,2340,2323,2328,0,6155,6165,6156,10,2314,2338,2329,0,6166,6152,6167,10,2318,2337,2338,0,6168,6150,6152,10,2332,2337,2318,0,6145,6169,6170,10,2326,2328,2323,0,6139,6141,6171,10,2315,2329,2326,0,6172,6142,6139,10,2335,2343,2344,0,6148,6173,6174,10,2344,2336,2335,0,6174,6149,6148,10,2335,2334,2345,0,6148,6147,6175,10,2341,2345,2334,0,6158,6176,6159,10,2331,2346,2327,0,6144,6177,6140,10,2347,2348,2344,0,6178,6179,6174,10,2344,2348,2349,0,6180,6181,6182,10,2349,2339,2344,0,6182,6153,6180,10,2350,2327,2346,0,6183,6157,6184,10,2331,2330,2351,0,6185,6186,6187,10,2345,2352,2347,0,6188,6189,6190,10,2353,2351,2330,0,6191,6192,6154,10,2350,2354,2352,0,6183,6193,6194,10,2353,2355,2351,0,6191,6195,6192,10,2353,2348,2356,0,6191,6181,6196,10,2355,2354,2357,0,6197,6198,6199,10,2355,2358,2351,0,6197,6200,6201,10,2355,2359,2352,0,6197,6202,6203,10,2359,2356,2348,0,6204,6205,6206,10,2359,2347,2352,0,6204,6190,6189,10,2357,2346,2331,0,6207,6208,6185,10,2314,2316,2318,0,1803,6121,6123,10,2322,2319,2321,0,6127,6124,6126,10,2316,2319,2317,0,6209,6124,6128,10,2320,2324,2321,0,6125,6130,6126,10,2317,2322,2318,0,6210,6131,6211,10,2320,2319,2323,0,6212,6134,6136,10,2325,2319,2315,0,6135,6134,6138,10,2326,2331,2327,0,6139,6144,6140,10,2335,2332,2334,0,6148,6145,6147,10,2337,2332,2336,0,6169,6145,6149,10,2338,2336,2339,0,6152,6151,6153,10,2329,2338,2330,0,6167,6152,6154,10,2341,2340,2327,0,6158,6155,6157,10,2340,2341,2333,0,6155,6158,6160,10,2342,2318,2322,0,6161,6213,6214,10,2342,2322,2324,0,6161,6214,6162,10,2324,2323,2340,0,6164,6165,6155,10,2315,2314,2329,0,6215,6166,6167,10,2314,2318,2338,0,6166,6168,6152,10,2342,2332,2318,0,6216,6145,6170,10,2342,2333,2332,0,6216,6146,6145,10,2325,2326,2323,0,6217,6139,6171,10,2325,2315,2326,0,6217,6172,6139,10,2343,2335,2345,0,6173,6148,6175,10,2344,2339,2336,0,6180,6153,6151,10,2350,2341,2327,0,6183,6158,6157,10,2341,2350,2345,0,6158,6183,6176,10,2343,2345,2347,0,6173,6175,6178,10,2343,2347,2344,0,6173,6178,6174,10,2349,2330,2339,0,6182,6154,6153,10,2353,2349,2348,0,6191,6182,6181,10,2349,2353,2330,0,6182,6191,6154,10,2350,2346,2354,0,6183,6184,6193,10,2345,2350,2352,0,6176,6183,6194,10,2357,2354,2346,0,6218,6193,6184,10,2355,2353,2356,0,6195,6191,6196,10,2358,2355,2357,0,6200,6197,6199,10,2359,2355,2356,0,6202,6197,6219,10,2354,2355,2352,0,6198,6197,6203,10,2347,2359,2348,0,6190,6204,6206,10,2358,2357,2331,0,6220,6207,6185,10,2358,2331,2351,0,6220,6185,6187,10,2360,2361,2362,0,6221,6222,6223,10,2363,2361,2364,0,6224,6225,6226,10,2365,2366,2367,0,6227,6228,6229,10,2368,2369,2370,0,6230,6231,6232,10,2371,2372,2370,0,6233,6234,6232,10,2373,2374,2368,0,6235,6236,6230,10,2372,2375,2376,0,6237,6238,6239,10,2377,2362,2378,0,6240,6241,6242,10,2378,2363,2379,0,6242,6243,6244,10,2366,2360,2376,0,6245,6246,6239,10,2380,2367,2366,0,6247,6229,6228,10,2370,2372,2368,0,6248,6249,6250,10,2381,2372,2360,0,6251,6249,6252,10,2379,2369,2373,0,6253,6254,6255,10,2379,2382,2369,0,6253,6256,6254,10,2379,2364,2382,0,6253,6257,6256,10,2382,2375,2371,0,6256,6258,6259,10,2375,2382,2367,0,6258,6256,6260,10,2383,2384,2385,0,6261,6262,6263,10,2386,2387,2388,0,6264,6265,6266,10,2385,2389,2388,0,6263,6267,6268,10,2378,2390,2391,0,6269,6270,6271,10,2391,2392,2378,0,6271,6272,6269,10,2390,2393,2391,0,6270,6273,6271,10,2394,2395,2396,0,6274,6275,6276,10,2397,2398,2399,0,6277,6278,6279,10,2399,2393,2390,0,6279,6280,6281,10,2400,2401,2402,0,6282,6283,6284,10,2396,2395,2400,0,6285,6286,6282,10,2391,2393,2399,0,6287,6288,6289,10,2399,2398,2403,0,6289,6290,6291,10,2404,2401,2400,0,6292,6293,6294,10,2400,2395,2394,0,6294,6295,6296,10,2378,2405,2397,0,6297,6298,6277,10,2378,2397,2390,0,6297,6277,6281,10,2366,2402,2406,0,6299,6284,6300,10,2394,2384,2407,0,6296,6301,6302,10,2408,2409,2387,0,6303,6304,6305,10,2410,2411,2385,0,6306,6307,6308,10,2412,2385,2387,0,6309,6308,6310,10,2387,2409,2412,0,6310,6311,6309,10,2413,2414,2408,0,6312,6313,6303,10,2408,2387,2386,0,6303,6305,6314,10,2411,2415,2385,0,6307,6315,6308,10,2388,2416,2417,0,6316,6317,6318,10,2418,2392,2386,0,6319,6320,6321,10,2418,2388,2417,0,6319,6322,6323,10,2418,2363,2392,0,6319,6324,6320,10,2378,2362,2405,0,6242,6241,6325,10,2406,2360,2366,0,6326,6246,6245,10,2403,2398,2397,0,6327,6328,6329,10,2402,2401,2404,0,6330,6331,6332,10,2403,2397,2405,0,6333,6334,6335,10,2411,2410,2408,0,6336,6337,6338,10,2411,2408,2414,0,6336,6338,6339,10,2417,2416,2411,0,6340,6341,6336,10,2417,2405,2418,0,6342,6343,6344,10,2406,2404,2407,0,6345,6332,6346,10,2405,2361,2418,0,6347,6348,6349,10,2389,2361,2360,0,6350,6351,6352,10,2419,2414,2420,0,6353,6339,6354,10,2421,2415,2422,0,6355,6356,6357,10,2420,2403,2417,0,6358,6359,6360,10,2416,2407,2422,0,6361,6362,6363,10,2420,2417,2419,0,6358,6360,6364,10,2422,2407,2421,0,6365,6366,6367,10,2419,2417,2414,0,6353,6340,6368,10,2420,2414,2403,0,6369,6370,6371,10,2423,2424,2392,0,6372,6373,6320,10,2425,2426,2384,0,6374,6375,6262,10,2386,2424,2413,0,6376,6377,6378,10,2385,2415,2426,0,6379,6380,6381,10,2423,2391,2413,0,6382,6383,6378,10,2391,2403,2414,0,6383,6384,6385,10,2365,2367,2361,0,6227,6229,6225,10,2361,2367,2364,0,6225,6229,6226,10,2368,2374,2369,0,6230,6236,6231,10,2370,2369,2371,0,6232,6231,6233,10,2369,2374,2373,0,6231,6236,6386,10,2373,2377,2379,0,6235,6387,6388,10,2377,2373,2368,0,6387,6235,6230,10,2372,2371,2375,0,6237,6389,6238,10,2377,2378,2379,0,6240,6242,6244,10,2376,2380,2366,0,6239,6390,6245,10,2364,2379,2363,0,6391,6244,6243,10,2375,2380,2376,0,6392,6247,6393,10,2360,2372,2376,0,6252,6249,6394,10,2381,2362,2377,0,6251,6395,6396,10,2362,2381,2360,0,6397,6398,6399,10,2372,2381,2368,0,6400,6401,6402,10,2381,2377,2368,0,6401,6403,6402,10,2367,2380,2375,0,6404,6405,6406,10,2367,2382,2364,0,6407,6408,6409,10,2382,2371,2369,0,6410,6411,6412,10,2365,2384,2366,0,6413,6414,6245,10,2392,2363,2378,0,6320,6324,6415,10,2384,2389,2385,0,6262,6416,6263,10,2389,2384,2365,0,6416,6262,6417,10,2387,2385,2388,0,6418,6263,6268,10,2396,2384,2394,0,6276,6419,6274,10,2384,2396,2366,0,6419,6276,6420,10,2397,2399,2390,0,6277,6279,6281,10,2396,2400,2402,0,6285,6282,6284,10,2366,2396,2402,0,6299,6285,6284,10,2391,2399,2403,0,6287,6289,6291,10,2404,2400,2394,0,6292,6294,6296,10,2404,2394,2407,0,6292,6296,6302,10,2412,2408,2410,0,6421,6303,6422,10,2408,2412,2409,0,6303,6421,6304,10,2412,2410,2385,0,6309,6306,6308,10,2413,2408,2386,0,6312,6303,6314,10,2388,2389,2416,0,6268,6267,6423,10,2388,2418,2386,0,6322,6319,6321,10,2361,2363,2418,0,6424,6425,6426,10,2389,2365,2361,0,6427,6428,6424,10,2404,2406,2402,0,6332,6345,6330,10,2417,2411,2414,0,6340,6336,6339,10,2411,2416,2415,0,6429,6430,6431,10,2417,2403,2405,0,6342,6432,6343,10,2416,2406,2407,0,6433,6345,6346,10,2406,2416,2389,0,6345,6433,6350,10,2405,2362,2361,0,6347,6434,6348,10,2406,2389,2360,0,6345,6350,6352,10,2416,2422,2415,0,6435,6436,6437,10,2415,2421,2407,0,6438,6439,6440,10,2392,2424,2386,0,6320,6373,6441,10,2423,2392,2391,0,6372,6320,6442,10,2407,2384,2426,0,6443,6444,6445,10,2383,2425,2384,0,6261,6374,6262,10,2423,2413,2424,0,6382,6378,6377,10,2425,2383,2426,0,6446,6447,6381,10,2383,2385,2426,0,6447,6379,6381,10,2391,2414,2413,0,6383,6385,6378,10,2426,2415,2407,0,6381,6380,6448,10,2427,2399,2398,0,6449,6279,6278,10,2399,2427,2393,0,6279,6449,6280,10,2428,2427,2398,0,6450,6449,6278,10,2429,2430,2401,0,6451,6452,6283,10,2429,2400,2395,0,6451,6282,6286,10,2400,2429,2401,0,6282,6451,6283,10,2431,2432,2433,0,6453,6454,6455,10,2434,2435,2436,0,6456,6457,6458,10,2437,2438,2439,0,6459,6460,6461,10,2439,2438,2440,0,6461,6460,6462,10,2440,2441,2439,0,6462,6463,6461,10,2438,2442,2440,0,6464,6465,6466,10,2443,2444,2437,0,6467,6468,6459,10,2445,2446,2441,0,6469,6470,6471,10,2443,2431,2447,0,6472,6473,6474,10,2447,2435,2448,0,6474,6475,6476,10,2449,2450,2446,0,6477,6478,6479,10,2451,2452,2449,0,6480,6481,6482,10,2439,2441,2446,0,6483,6484,6485,10,2453,2439,2446,0,6486,6483,6485,10,2453,2446,2450,0,6487,6488,6489,10,2450,2431,2453,0,6489,6490,6487,10,2440,2442,2445,0,6491,6492,6493,10,2452,2454,2434,0,6494,6495,6496,10,2444,2448,2454,0,6497,6498,6499,10,2452,2451,2445,0,6494,6500,6501,10,2454,2445,2442,0,6499,6502,6492,10,2455,2449,2456,0,6503,6504,6505,10,2457,2458,2436,0,6506,6507,6508,10,2458,2459,2460,0,6507,6509,6510,10,2458,2460,2461,0,6507,6510,6511,10,2461,2436,2458,0,6511,6508,6507,10,2462,2456,2461,0,6512,6505,6513,10,2463,2460,2459,0,6514,6515,6509,10,2464,2465,2435,0,6516,6517,6518,10,2466,2465,2464,0,6519,6520,6521,10,2464,2467,2466,0,6521,6522,6519,10,2468,2469,2470,0,6523,6524,6525,10,2449,2471,2468,0,6526,6527,6523,10,2466,2467,2472,0,6528,6529,6530,10,2472,2465,2466,0,6530,6531,6528,10,2473,2469,2468,0,6532,6533,6534,10,2468,2471,2473,0,6534,6535,6532,10,2464,2435,2447,0,6521,6536,6537,10,2449,2470,2473,0,6526,6525,6538,10,2473,2432,2449,0,6538,6539,6526,10,2455,2471,2449,0,6540,6527,6526,10,2435,2465,2472,0,6541,6531,6530,10,2473,2471,2455,0,6532,6535,6542,10,2455,2462,2474,0,6542,6543,6544,10,2475,2463,2459,0,6545,6546,6547,10,2475,2459,2458,0,6545,6547,6548,10,2461,2475,2476,0,6549,6550,6551,10,2477,2436,2461,0,6552,6553,6549,10,2461,2456,2478,0,6513,6505,6554,10,2432,2450,2449,0,6555,6478,6477,10,2478,2456,2433,0,6556,6557,6558,10,2472,2467,2464,0,6559,6560,6561,10,2470,2469,2473,0,6562,6563,6564,10,2479,2464,2447,0,6565,6566,6567,10,2475,2480,2476,0,6568,6569,6570,10,2481,2461,2478,0,6571,6572,6573,10,2431,2433,2477,0,6453,6455,6574,10,2482,2480,2483,0,6575,6576,6577,10,2484,2485,2486,0,6578,6579,6580,10,2483,2479,2476,0,6581,6582,6583,10,2483,2476,2482,0,6581,6583,6584,10,2481,2487,2484,0,6585,6586,6587,10,2476,2480,2482,0,6570,6576,6575,10,2486,2485,2481,0,6588,6589,6590,10,2483,2480,2479,0,6591,6592,6593,10,2462,2460,2488,0,6512,6510,6594,10,2489,2457,2435,0,6595,6506,6596,10,2457,2489,2490,0,6506,6595,6597,10,2491,2474,2462,0,6598,6599,6512,10,2490,2489,2458,0,6600,6601,6602,10,2479,2480,2489,0,6593,6603,6604,10,2474,2484,2487,0,6605,6606,6607,10,2488,2485,2484,0,6608,6609,6606,10,2431,2450,2432,0,6453,6610,6454,10,2434,2436,2433,0,6456,6458,6611,10,2452,2433,2449,0,6481,6611,6482,10,2433,2452,2434,0,6611,6481,6456,10,2437,2444,2438,0,6459,6468,6460,10,2444,2442,2438,0,6612,6613,6614,10,2440,2445,2441,0,6466,6469,6471,10,2444,2443,2448,0,6612,6615,6616,10,2448,2443,2447,0,6476,6472,6474,10,2451,2446,2445,0,6617,6479,6618,10,2446,2451,2449,0,6479,6617,6477,10,2434,2448,2435,0,6619,6476,6475,10,2443,2437,2453,0,6620,6621,6486,10,2431,2443,2453,0,6622,6623,6624,10,2439,2453,2437,0,6483,6486,6621,10,2454,2442,2444,0,6499,6492,6497,10,2434,2454,2448,0,6496,6495,6625,10,2454,2452,2445,0,6495,6494,6501,10,2456,2449,2433,0,6626,6477,6627,10,2435,2457,2436,0,6596,6506,6628,10,2455,2456,2462,0,6503,6505,6512,10,2460,2462,2461,0,6510,6512,6513,10,2470,2449,2468,0,6525,6526,6523,10,2489,2472,2479,0,6629,6530,6565,10,2472,2489,2435,0,6530,6629,6541,10,2487,2473,2455,0,6630,6532,6542,10,2487,2455,2474,0,6630,6542,6544,10,2463,2475,2492,0,6546,6545,6631,10,2463,2492,2460,0,6632,6633,6634,10,2480,2475,2458,0,6635,6545,6548,10,2485,2460,2492,0,6636,6634,6633,10,2477,2461,2476,0,6552,6549,6551,10,2477,2433,2436,0,6574,6455,6637,10,2464,2479,2472,0,6566,6565,6530,10,2473,2487,2432,0,6532,6630,6638,10,2492,2475,2485,0,6639,6568,6640,10,2481,2485,2475,0,6641,6640,6568,10,2481,2475,2461,0,6641,6568,6642,10,2479,2477,2476,0,6565,6574,6643,10,2481,2432,2487,0,6571,6644,6645,10,2432,2481,2478,0,6644,6571,6573,10,2431,2479,2447,0,6453,6565,6567,10,2479,2431,2477,0,6565,6453,6574,10,2433,2432,2478,0,6455,6454,6646,10,2484,2486,2481,0,6587,6647,6585,10,2488,2491,2462,0,6594,6598,6512,10,2457,2490,2458,0,6648,6600,6602,10,2458,2489,2480,0,6602,6601,6649,10,2485,2488,2460,0,6650,6651,6652,10,2474,2491,2488,0,6605,6653,6608,10,2474,2488,2484,0,6605,6608,6606,10,2493,2494,2495,0,6654,6655,6656,10,2496,2497,2495,0,6657,6658,6659,10,2498,2499,2500,0,6660,6661,6662,10,2501,2502,2498,0,6663,6664,6660,10,2503,2504,2505,0,6665,6666,6667,10,2506,2507,2503,0,6668,6669,6670,10,2507,2508,2509,0,6671,6672,6673,10,2510,2511,2505,0,6674,6675,6676,10,2508,2512,2513,0,6672,6677,6678,10,2510,2494,2499,0,6679,6680,6681,10,2501,2495,2513,0,6682,6683,6684,10,2512,2502,2501,0,6685,6686,6682,10,2509,2513,2514,0,6687,6688,6689,10,2514,2504,2509,0,6689,6690,6687,10,2514,2513,2495,0,6691,6692,6693,10,2494,2510,2514,0,6694,6695,6689,10,2514,2495,2494,0,6689,6696,6694,10,2498,2512,2511,0,6697,6698,6699,10,2501,2500,2515,0,6682,6700,6701,10,2516,2499,2517,0,6702,6703,6704,10,2518,2515,2519,0,6705,6706,6707,10,2518,2519,2520,0,6705,6707,6708,10,2521,2522,2523,0,6709,6710,6711,10,2520,2519,2522,0,6708,6707,6710,10,2521,2523,2524,0,6709,6711,6712,10,2525,2517,2499,0,6713,6714,6715,10,2526,2527,2525,0,6716,6717,6718,10,2528,2529,2530,0,6719,6720,6721,10,2526,2531,2532,0,6716,6722,6723,10,2532,2527,2526,0,6723,6724,6716,10,2533,2534,2535,0,6725,6726,6727,10,2530,2529,2533,0,6728,6729,6725,10,2525,2527,2532,0,6730,6731,6732,10,2532,2531,2536,0,6732,6733,6734,10,2537,2534,2533,0,6735,6736,6737,10,2533,2529,2528,0,6737,6738,6739,10,2499,2493,2526,0,6740,6741,6716,10,2535,2496,2501,0,6727,6742,6743,10,2535,2501,2530,0,6727,6743,6728,10,2538,2517,2525,0,6744,6714,6713,10,2523,2539,2540,0,6745,6746,6747,10,2541,2524,2523,0,6748,6749,6745,10,2540,2542,2541,0,6750,6751,6752,10,2521,2524,2541,0,6753,6754,6752,10,2520,2521,2541,0,6755,6753,6752,10,2543,2516,2519,0,6756,6757,6758,10,2544,2545,2543,0,6759,6760,6761,10,2516,2543,2546,0,6762,6763,6764,10,2544,2519,2515,0,6765,6766,6706,10,2499,2494,2493,0,6681,6680,6767,10,2496,2495,2501,0,6768,6683,6682,10,2544,2500,2497,0,6769,6770,6771,10,2536,2531,2526,0,6734,6772,6773,10,2535,2534,2537,0,6774,6775,6776,10,2536,2526,2493,0,6777,6773,6654,10,2537,2547,2496,0,6778,6779,6780,10,2540,2539,2542,0,6781,6782,6783,10,2539,2548,2546,0,6782,6784,6785,10,2546,2543,2539,0,6785,6786,6782,10,2539,2543,2545,0,6782,6787,6788,10,2493,2546,2538,0,6654,6789,6790,10,2544,2497,2496,0,6791,6792,6780,10,2496,2547,2544,0,6780,6779,6791,10,2549,2548,2550,0,6793,6794,6795,10,2551,2542,2552,0,6796,6797,6798,10,2550,2538,2546,0,6799,6800,6801,10,2551,2552,2545,0,6802,6803,6804,10,2545,2547,2551,0,6804,6805,6802,10,2545,2552,2542,0,6806,6807,6808,10,2546,2548,2549,0,6809,6810,6811,10,2551,2547,2542,0,6812,6813,6814,10,2516,2517,2553,0,6702,6704,6815,10,2517,2538,2554,0,6704,6816,6817,10,2554,2553,2517,0,6817,6815,6704,10,2554,2522,2553,0,6818,6819,6820,10,2538,2548,2522,0,6821,6822,6823,10,2520,2542,2547,0,6824,6825,6826,10,2497,2493,2495,0,6827,6654,6656,10,2500,2501,2498,0,6662,6663,6660,10,2509,2504,2503,0,6673,6828,6829,10,2506,2503,2505,0,6668,6670,6676,10,2507,2509,2503,0,6671,6673,6829,10,2509,2508,2513,0,6673,6672,6678,10,2505,2511,2506,0,6676,6675,6668,10,2555,2510,2499,0,6830,6679,6681,10,2510,2555,2511,0,6679,6830,6831,10,2512,2501,2513,0,6685,6682,6684,10,2498,2555,2499,0,6832,6830,6681,10,2504,2510,2505,0,6690,6695,6833,10,2514,2510,2504,0,6689,6695,6690,10,2498,2511,2555,0,6697,6699,6834,10,2507,2506,2511,0,6835,6836,6699,10,2508,2507,2512,0,6837,6835,6698,10,2498,2502,2512,0,6697,6838,6698,10,2507,2511,2512,0,6835,6699,6698,10,2500,2499,2516,0,6839,6840,6841,10,2522,2519,2516,0,6842,6758,6757,10,2521,2520,2522,0,6709,6708,6710,10,2526,2525,2499,0,6843,6713,6715,10,2515,2530,2501,0,6844,6721,6845,10,2530,2515,2528,0,6721,6844,6719,10,2535,2530,2533,0,6727,6728,6725,10,2536,2525,2532,0,6734,6730,6732,10,2536,2538,2525,0,6734,6846,6730,10,2528,2537,2533,0,6739,6735,6737,10,2537,2528,2547,0,6735,6739,6847,10,2541,2523,2540,0,6748,6745,6747,10,2523,2548,2539,0,6745,6848,6746,10,2548,2523,2522,0,6848,6745,6849,10,2542,2520,2541,0,6751,6755,6752,10,2543,2519,2544,0,6761,6707,6759,10,2497,2516,2546,0,6850,6762,6764,10,2497,2500,2516,0,6851,6839,6841,10,2544,2515,2500,0,6769,6852,6770,10,2536,2493,2538,0,6777,6654,6790,10,2535,2537,2496,0,6853,6778,6780,10,2539,2545,2542,0,6782,6788,6783,10,2493,2497,2546,0,6654,6827,6789,10,2547,2545,2544,0,6779,6854,6791,10,2549,2550,2546,0,6855,6856,6857,10,2538,2550,2548,0,6858,6856,6859,10,2522,2516,2553,0,6860,6702,6861,10,2518,2528,2515,0,6862,6863,6864,10,2528,2518,2556,0,6863,6862,6865,10,2518,2520,2556,0,6866,6867,6868,10,2538,2522,2554,0,6821,6823,6869,10,2528,2556,2520,0,6870,6871,6824,10,2528,2520,2547,0,6870,6824,6826,10,2557,2558,2527,0,6872,6873,6874,10,2557,2532,2531,0,6872,6875,6722,10,2532,2557,2527,0,6875,6872,6874,10,2559,2533,2529,0,6876,6725,6729,10,2533,2559,2534,0,6725,6876,6726,10,2560,2559,2529,0,6877,6876,6729,10,2561,2562,2563,0,6878,6879,6880,10,2563,2564,2561,0,6880,6881,6878,10,2565,2566,2567,0,6882,6883,6884,10,2568,2569,2562,0,6885,6886,6887,10,2567,2570,2571,0,6884,6888,6889,10,2568,2572,2573,0,6890,6891,6892,10,2573,2574,2569,0,6892,6893,6894,10,2570,2575,2576,0,6895,6896,6897,10,2574,2577,2569,0,6893,6898,6894,10,2570,2578,2575,0,6895,6899,6896,10,2564,2567,2579,0,6900,6901,6902,10,2568,2564,2572,0,6903,6900,6904,10,2567,2571,2579,0,6901,6905,6902,10,2565,2563,2566,0,6906,6907,6908,10,2578,2569,2577,0,6909,6910,6911,10,2580,2566,2563,0,6912,6908,6907,10,2580,2563,2581,0,6912,6907,6913,10,2581,2569,2580,0,6914,6915,6916,10,2570,2580,2578,0,6917,6912,6909,10,2582,2583,2574,0,6918,6919,6920,10,2575,2583,2584,0,6896,6921,6922,10,2585,2582,2586,0,6923,6924,6925,10,2587,2584,2585,0,6926,6927,6928,10,2587,2585,2588,0,6926,6928,6929,10,2589,2590,2591,0,6930,6931,6932,10,2582,2592,2593,0,6933,6934,6935,10,2594,2595,2576,0,6936,6937,6938,10,2582,2574,2573,0,6939,6940,6941,10,2573,2596,2597,0,6941,6942,6943,10,2597,2592,2582,0,6943,6944,6939,10,2598,2599,2600,0,6945,6946,6947,10,2576,2595,2598,0,6948,6949,6945,10,2593,2592,2597,0,6935,6934,6950,10,2597,2596,2601,0,6950,6951,6952,10,2602,2603,2604,0,6953,6954,6955,10,2602,2599,2598,0,6953,6956,6957,10,2598,2595,2594,0,6957,6937,6936,10,2605,2590,2589,0,6958,6959,6960,10,2591,2605,2606,0,6961,6962,6963,10,2591,2590,2605,0,6961,6964,6962,10,2588,2607,2608,0,6965,6966,6967,10,2608,2589,2588,0,6967,6960,6965,10,2587,2591,2609,0,6968,6961,6969,10,2609,2610,2587,0,6969,6970,6968,10,2611,2582,2585,0,6971,6924,6923,10,2585,2612,2613,0,6972,6973,6974,10,2584,2614,2612,0,6975,6976,6977,10,2600,2571,2576,0,6978,6979,6897,10,2583,2582,2611,0,6980,6981,6982,10,2584,2583,2615,0,6983,6984,6985,10,2601,2596,2573,0,6986,6987,6988,10,2600,2599,2602,0,6989,6990,6991,10,2609,2606,2608,0,6992,6993,6994,10,2613,2608,2607,0,6995,6994,6996,10,2609,2613,2612,0,6992,6997,6998,10,2601,2573,2611,0,6986,6988,6999,10,2611,2613,2601,0,6999,7000,6986,10,2614,2600,2602,0,7001,6989,6991,10,2614,2602,2604,0,7001,6991,7002,10,2573,2615,2611,0,6988,7003,6999,10,2604,2610,2616,0,7004,7005,7006,10,2601,2613,2617,0,7007,7008,7009,10,2616,2612,2604,0,7010,7011,7012,10,2616,2610,2612,0,7013,7014,7015,10,2586,2593,2618,0,7016,7017,7018,10,2619,2603,2620,0,7019,7020,7021,10,2587,2603,2619,0,7022,7023,7024,10,2619,2620,2587,0,7024,7025,7022,10,2588,2621,2618,0,7026,7027,7028,10,2618,2607,2588,0,7028,7029,7026,10,2587,2610,2603,0,7022,7030,7023,10,2593,2601,2607,0,7031,7032,7033,10,2604,2603,2610,0,7034,7035,7036,10,2615,2573,2572,0,7037,7038,6891,10,2583,2577,2574,0,7039,7040,7041,10,2577,2583,2578,0,7040,7039,7042,10,2578,2583,2575,0,7042,7039,7043,10,2564,2565,2567,0,7044,6882,6884,10,2565,2564,2563,0,6882,7044,7045,10,2581,2563,2562,0,7046,7047,6887,10,2567,2566,2570,0,6884,6883,6888,10,2562,2569,2581,0,6887,6886,7046,10,2569,2568,2573,0,6894,6890,6892,10,2570,2576,2571,0,6895,6897,6979,10,2562,2561,2568,0,7048,7049,6903,10,2571,2615,2572,0,7050,7051,7052,10,2564,2568,2561,0,6900,6903,7049,10,2572,2564,2579,0,6904,6900,7053,10,2572,2579,2571,0,6904,7053,7054,10,2570,2566,2580,0,6917,6908,6912,10,2580,2569,2578,0,6912,7055,6909,10,2594,2575,2584,0,7056,6896,6922,10,2575,2594,2576,0,6896,7056,6897,10,2594,2584,2620,0,7057,7058,7059,10,2587,2620,2584,0,6926,7059,6927,10,2588,2585,2586,0,7060,6923,6925,10,2587,2589,2591,0,6926,6930,6932,10,2589,2587,2588,0,6930,6926,6929,10,2573,2597,2582,0,6941,6943,6939,10,2576,2598,2600,0,6948,6945,6947,10,2593,2597,2601,0,6935,6950,6952,10,2602,2598,2594,0,6953,6957,6936,10,2602,2594,2603,0,6953,6936,6954,10,2605,2608,2606,0,6958,6967,7061,10,2608,2605,2589,0,6967,6958,6960,10,2609,2591,2606,0,6969,6961,6963,10,2585,2613,2611,0,6923,7062,6971,10,2585,2584,2612,0,6972,7063,6973,10,2583,2611,2615,0,6980,6982,7064,10,2584,2615,2614,0,6983,6985,7065,10,2613,2609,2608,0,6995,6992,6994,10,2609,2612,2610,0,6992,6998,7066,10,2612,2614,2604,0,7067,7001,7002,10,2600,2615,2571,0,6989,7068,7069,10,2615,2600,2614,0,7068,6989,7001,10,2601,2617,2607,0,7070,7071,7072,10,2613,2607,2617,0,6995,6996,7073,10,2586,2621,2588,0,6925,7074,7060,10,2593,2586,2582,0,7017,7016,7075,10,2620,2603,2594,0,7021,7020,7076,10,2621,2586,2618,0,7077,7078,7079,10,2607,2618,2593,0,7033,7080,7031,10,2622,2592,2597,0,7081,6944,6943,10,2622,2597,2596,0,7081,6943,6942,10,2623,2592,2622,0,7082,7083,7084,10,2622,2624,2623,0,7084,7085,7082,10,2625,2626,2599,0,7086,7087,6946,10,2598,2595,2625,0,6945,6949,7086,10,2625,2627,2626,0,7088,7085,7089,10,2598,2625,2599,0,6945,7086,6946,10,2628,2629,2590,0,7090,7091,7092,10,2629,2628,2605,0,7093,7094,7095,10,2628,2606,2605,0,7094,7096,7095,10,2629,2605,2590,0,7093,7095,7097,10,2605,2628,2590,0,7098,7090,7092,10,2630,2631,2632,0,7099,7100,7101,10,2632,2633,2634,0,7101,7102,7103,10,2634,2633,2635,0,7104,7105,7106,10,2636,2637,2638,0,7107,7108,7109,10,2639,2640,2641,0,7110,7111,7112,10,2642,2639,2636,0,7113,7114,7107,10,2636,2638,2643,0,7107,7109,7115,10,2643,2644,2645,0,7116,7117,7118,10,2646,2647,2648,0,7119,7120,7121,10,2649,2643,2631,0,7122,7116,7123,10,2646,2648,2650,0,7119,7121,7124,10,2644,2648,2647,0,7125,7126,7127,10,2644,2643,2648,0,7125,7128,7129,10,2638,2637,2643,0,7130,7131,7132,10,2651,2649,2630,0,7133,7134,7135,10,2651,2630,2634,0,7133,7135,7136,10,2642,2636,2649,0,7137,7138,7139,10,2640,2651,2650,0,7140,7133,7141,10,2651,2642,2649,0,7133,7142,7143,10,2632,2652,2653,0,7144,7145,7146,10,2653,2633,2632,0,7146,7147,7144,10,2652,2654,2653,0,7145,7148,7146,10,2655,2635,2656,0,7149,7150,7151,10,2657,2658,2659,0,7152,7153,7154,10,2659,2660,2661,0,7155,7156,7157,10,2658,2662,2660,0,7158,7159,7156,10,2663,2652,2632,0,7160,7145,7144,10,2664,2665,2635,0,7161,7162,7163,10,2663,2666,2667,0,7160,7164,7165,10,2664,2668,2665,0,7166,7167,7168,10,2669,2670,2671,0,7169,7170,7171,10,2671,2666,2663,0,7171,7172,7173,10,2672,2673,2665,0,7174,7175,7176,10,2665,2668,2672,0,7176,7177,7174,10,2667,2666,2671,0,7178,7179,7180,10,2671,2670,2674,0,7180,7181,7182,10,2675,2673,2672,0,7183,7184,7185,10,2672,2668,2664,0,7185,7186,7187,10,2664,2655,2675,0,7187,7188,7183,10,2645,2669,2663,0,7189,7169,7173,10,2646,2635,2665,0,7190,7191,7176,10,2676,2652,2667,0,7192,7193,7194,10,2658,2677,2678,0,7195,7196,7197,10,2658,2678,2679,0,7195,7197,7198,10,2680,2662,2658,0,7199,7200,7195,10,2660,2680,2679,0,7201,7202,7203,10,2678,2681,2660,0,7204,7205,7201,10,2660,2662,2680,0,7201,7206,7202,10,2657,2659,2682,0,7152,7154,7207,10,2682,2659,2656,0,7208,7209,7210,10,2632,2631,2645,0,7211,7123,7118,10,2683,2647,2646,0,7212,7120,7119,10,2653,2684,2685,0,7213,7214,7215,10,2686,2656,2633,0,7216,7217,7218,10,2674,2670,2669,0,7219,7220,7221,10,2665,2673,2675,0,7222,7223,7224,10,2674,2669,2645,0,7219,7221,7225,10,2678,2677,2681,0,7226,7227,7228,10,2677,2687,2688,0,7227,7229,7230,10,2688,2682,2677,0,7230,7231,7227,10,2683,2675,2689,0,7232,7224,7233,10,2689,2682,2686,0,7233,7234,7235,10,2644,2685,2684,0,7236,7237,7238,10,2690,2687,2691,0,7239,7240,7241,10,2689,2681,2692,0,7242,7243,7244,10,2692,2682,2689,0,7245,7246,7247,10,2690,2691,2688,0,7248,7249,7250,10,2688,2687,2690,0,7251,7252,7253,10,2676,2654,2652,0,7254,7255,7256,10,2693,2676,2694,0,7257,7258,7259,10,2694,2676,2657,0,7260,7261,7262,10,2691,2687,2676,0,7263,7264,7265,10,2661,2681,2689,0,7266,7267,7268,10,2644,2647,2685,0,7269,7270,7271,10,2630,2632,2634,0,7099,7101,7103,10,2636,2639,2637,0,7107,7114,7108,10,2637,2639,2641,0,7272,7110,7112,10,2650,2641,2640,0,7273,7112,7111,10,2641,2650,2648,0,7112,7273,7274,10,2649,2636,2643,0,7275,7107,7115,10,2631,2643,2645,0,7123,7116,7118,10,2630,2649,2631,0,7276,7122,7123,10,2646,2634,2635,0,7119,7277,7278,10,2634,2646,2650,0,7277,7119,7124,10,2643,2637,2648,0,7132,7131,7279,10,2637,2641,2648,0,7131,7280,7279,10,2640,2639,2651,0,7140,7281,7133,10,2642,2651,2639,0,7142,7133,7281,10,2651,2634,2650,0,7133,7282,7141,10,2656,2635,2633,0,7151,7150,7283,10,2661,2656,2659,0,7157,7284,7155,10,2660,2659,2658,0,7156,7155,7158,10,2663,2667,2652,0,7160,7165,7145,10,2655,2664,2635,0,7285,7161,7163,10,2669,2671,2663,0,7169,7171,7173,10,2674,2667,2671,0,7182,7178,7180,10,2664,2675,2672,0,7187,7183,7185,10,2632,2645,2663,0,7286,7189,7173,10,2676,2674,2691,0,7192,7287,7288,10,2674,2676,2667,0,7287,7192,7194,10,2675,2655,2689,0,7289,7285,7290,10,2680,2658,2679,0,7199,7195,7198,10,2678,2660,2679,0,7204,7201,7203,10,2658,2687,2677,0,7195,7291,7196,10,2687,2658,2657,0,7291,7195,7292,10,2681,2661,2660,0,7205,7293,7201,10,2682,2688,2654,0,7207,7294,7295,10,2657,2682,2654,0,7152,7207,7295,10,2684,2654,2688,0,7296,7297,7298,10,2654,2684,2653,0,7297,7296,7299,10,2686,2682,2656,0,7300,7301,7302,10,2633,2653,2685,0,7303,7213,7215,10,2633,2685,2686,0,7218,7304,7216,10,2691,2674,2645,0,7305,7219,7225,10,2646,2675,2683,0,7306,7224,7232,10,2675,2646,2665,0,7224,7306,7222,10,2692,2677,2682,0,7307,7227,7308,10,2677,2692,2681,0,7227,7307,7228,10,2691,2684,2688,0,7305,7238,7309,10,2683,2689,2686,0,7232,7233,7235,10,2644,2691,2645,0,7236,7305,7225,10,2691,2644,2684,0,7305,7236,7238,10,2683,2685,2647,0,7232,7310,7311,10,2685,2683,2686,0,7310,7232,7235,10,2693,2657,2654,0,7312,7152,7295,10,2695,2655,2656,0,7313,7314,7315,10,2695,2656,2661,0,7313,7315,7316,10,2693,2654,2676,0,7257,7317,7258,10,2695,2696,2655,0,7318,7319,7320,10,2693,2694,2657,0,7321,7260,7262,10,2661,2696,2695,0,7322,7323,7324,10,2657,2676,2687,0,7262,7261,7325,10,2689,2655,2696,0,7268,7326,7327,10,2689,2696,2661,0,7268,7327,7266,10,2697,2698,2666,0,7328,7329,7172,10,2697,2671,2670,0,7328,7171,7170,10,2671,2697,2666,0,7171,7328,7172,10,2699,2672,2668,0,7330,7174,7177,10,2672,2699,2673,0,7174,7330,7175,10,2700,2699,2668,0,7331,7330,7177,10,2701,2702,2662,0,7332,7333,7334,10,2680,2679,2701,0,7335,7336,7332,10,2680,2701,2662,0,7335,7332,7334,10,2703,2704,2705,0,7337,7338,7339,10,2706,2707,2708,0,7340,7341,7342,10,2703,2705,2709,0,7343,7344,7345,10,2710,2706,2708,0,7346,7347,7348,10,2711,2708,2712,0,7349,7348,7350,10,2709,2713,2714,0,7345,7351,7352,10,2714,2715,2716,0,7353,7354,7355,10,2716,2703,2714,0,7355,7356,7353,10,2717,2718,2711,0,7357,7358,7359,10,2715,2714,2718,0,7354,7353,7360,10,2719,2715,2718,0,7361,7362,7358,10,2720,2721,2722,0,7363,7364,7365,10,2722,2707,2723,0,7366,7367,7368,10,2723,2724,2725,0,7368,7369,7370,10,2724,2718,2725,0,7371,7372,7373,10,2713,2725,2718,0,7374,7375,7372,10,2722,2721,2704,0,7376,7377,7378,10,2704,2716,2722,0,7378,7379,7376,10,2722,2716,2708,0,7376,7379,7380,10,2708,2707,2722,0,7380,7381,7376,10,2703,2716,2704,0,7382,7383,7384,10,2708,2717,2712,0,7385,7386,7387,10,2726,2727,2728,0,7388,7389,7390,10,2729,2730,2731,0,7391,7392,7393,10,2732,2733,2734,0,7394,7395,7396,10,2706,2733,2732,0,7397,7398,7399,10,2735,2736,2737,0,7400,7401,7402,10,2738,2710,2739,0,7403,7404,7405,10,2738,2739,2740,0,7403,7405,7406,10,2741,2736,2742,0,7407,7408,7409,10,2743,2744,2745,0,7410,7411,7412,10,2741,2746,2709,0,7407,7413,7414,10,2747,2713,2709,0,7415,7416,7414,10,2723,2748,2749,0,7417,7418,7419,10,2750,2724,2723,0,7420,7421,7417,10,2751,2752,2753,0,7422,7423,7424,10,2754,2751,2753,0,7425,7422,7426,10,2755,2756,2757,0,7427,7428,7429,10,2757,2758,2755,0,7429,7430,7427,10,2727,2731,2759,0,7431,7432,7433,10,2760,2734,2728,0,7434,7435,7436,10,2731,2730,2759,0,7437,7438,7439,10,2760,2730,2734,0,7440,7441,7442,10,2759,2730,2727,0,7443,7444,7445,10,2760,2728,2727,0,7446,7447,7448,10,2761,2752,2762,0,7449,7450,7451,10,2753,2752,2763,0,7452,7453,7454,10,2746,2764,2747,0,7455,7456,7457,10,2748,2761,2749,0,7458,7459,7460,10,2762,2749,2761,0,7461,7462,7459,10,2752,2761,2748,0,7463,7464,7465,10,2746,2765,2753,0,7466,7467,7468,10,2753,2763,2746,0,7468,7469,7466,10,2766,2746,2763,0,7470,7471,7472,10,2751,2749,2762,0,7473,7474,7451,10,2740,2739,2743,0,7475,7476,7477,10,2767,2739,2710,0,7478,7479,7480,10,2767,2744,2743,0,7478,7481,7482,10,2743,2739,2767,0,7482,7479,7478,10,2768,2742,2735,0,7483,7484,7485,10,2745,2769,2740,0,7486,7487,7488,10,2765,2746,2768,0,7489,7490,7483,10,2738,2706,2710,0,7491,7347,7346,10,2741,2709,2770,0,7492,7493,7494,10,2767,2750,2744,0,7495,7496,7497,10,2770,2709,2705,0,7494,7498,7499,10,2771,2731,2753,0,7500,7501,7502,10,2734,2749,2751,0,7503,7504,7505,10,2756,2753,2731,0,7506,7502,7432,10,2753,2756,2754,0,7502,7506,7507,10,2734,2751,2754,0,7435,7508,7509,10,2727,2726,2757,0,7510,7511,7512,10,2728,2754,2772,0,7513,7514,7515,10,2755,2754,2756,0,7516,7425,7517,10,2755,2772,2754,0,7518,7519,7520,10,2758,2757,2726,0,7521,7522,7523,10,2729,2721,2720,0,7524,7525,7363,10,2723,2707,2732,0,7368,7526,7527,10,2720,2713,2747,0,7528,7529,7530,10,2723,2732,2748,0,7531,7532,7533,10,2773,2729,2747,0,7534,7391,7535,10,2773,2763,2752,0,7536,7537,7538,10,2748,2732,2773,0,7465,7539,7540,10,2748,2773,2752,0,7465,7540,7463,10,2710,2711,2750,0,7346,7349,7541,10,2711,2710,2708,0,7349,7346,7348,10,2714,2703,2709,0,7352,7343,7345,10,2711,2724,2750,0,7542,7543,7544,10,2711,2712,2717,0,7359,7350,7357,10,2715,2719,2716,0,7354,7545,7355,10,2717,2719,2718,0,7357,7361,7358,10,2725,2722,2723,0,7370,7366,7368,10,2713,2722,2725,0,7546,7365,7547,10,2722,2713,2720,0,7365,7546,7363,10,2724,2711,2718,0,7371,7548,7372,10,2718,2714,2713,0,7372,7549,7374,10,2719,2717,2716,0,7550,7551,7552,10,2708,2716,2717,0,7385,7383,7386,10,2771,2729,2731,0,7553,7391,7393,10,2730,2732,2734,0,7392,7394,7396,10,2771,2721,2729,0,7554,7555,7556,10,2707,2706,2732,0,7526,7397,7399,10,2771,2705,2721,0,7557,7558,7559,10,2738,2733,2706,0,7560,7561,7562,10,2735,2705,2771,0,7400,7558,7557,10,2705,2735,2737,0,7558,7400,7563,10,2741,2742,2768,0,7407,7409,7564,10,2745,2744,2769,0,7412,7411,7565,10,2769,2744,2749,0,7565,7411,7419,10,2741,2768,2746,0,7407,7564,7413,10,2749,2744,2750,0,7419,7411,7420,10,2747,2709,2746,0,7415,7414,7413,10,2750,2723,2749,0,7420,7417,7419,10,2730,2760,2727,0,7566,7446,7448,10,2746,2766,2764,0,7567,7568,7456,10,2764,2763,2747,0,7569,7537,7570,10,2764,2766,2763,0,7571,7470,7472,10,2751,2762,2752,0,7473,7451,7450,10,2742,2736,2735,0,7572,7573,7574,10,2745,2740,2743,0,7575,7475,7477,10,2737,2736,2770,0,7576,7577,7578,10,2770,2736,2741,0,7578,7577,7579,10,2765,2735,2771,0,7489,7485,7580,10,2735,2765,2768,0,7485,7489,7483,10,2738,2769,2733,0,7581,7487,7582,10,2738,2740,2769,0,7581,7488,7487,10,2749,2733,2769,0,7583,7582,7487,10,2705,2737,2770,0,7499,7584,7494,10,2767,2710,2750,0,7495,7346,7496,10,2765,2771,2753,0,7585,7500,7502,10,2734,2733,2749,0,7503,7586,7504,10,2727,2756,2731,0,7431,7506,7432,10,2728,2734,2754,0,7436,7435,7509,10,2727,2757,2756,0,7510,7512,7587,10,2728,2772,2726,0,7513,7515,7588,10,2772,2758,2726,0,7589,7590,7591,10,2755,2758,2772,0,7592,7590,7589,10,2720,2747,2729,0,7363,7593,7524,10,2729,2773,2730,0,7391,7534,7392,10,2773,2732,2730,0,7540,7539,7594,10,2773,2747,2763,0,7536,7570,7537,10,2704,2721,2705,0,7595,7596,7597,10,2774,2775,2776,0,7598,7599,7600,10,2777,2778,2779,0,7601,7602,7603,10,2780,2781,2782,0,7604,7605,7606,10,2774,2776,2783,0,7607,7608,7609,10,2774,2783,2784,0,7610,7611,7612,10,2778,2785,2779,0,7613,7614,7615,10,2783,2785,2784,0,7611,7616,7612,10,2785,2786,2784,0,7616,7617,7612,10,2787,2788,2789,0,7618,7619,7620,10,2789,2790,2791,0,7621,7622,7623,10,2792,2781,2787,0,7624,7625,7618,10,2791,2776,2775,0,7623,7626,7627,10,2782,2786,2778,0,7628,7629,7630,10,2792,2775,2786,0,7631,7599,7629,10,2779,2785,2789,0,7632,7633,7634,10,2783,2790,2789,0,7635,7636,7634,10,2789,2793,2779,0,7634,7637,7632,10,2783,2794,2790,0,7635,7638,7636,10,2795,2796,2797,0,7639,7640,7641,10,2797,2798,2799,0,7642,7643,7644,10,2800,2801,2802,0,7645,7646,7647,10,2802,2803,2800,0,7647,7648,7645,10,2804,2805,2806,0,7649,7650,7651,10,2804,2806,2807,0,7649,7651,7652,10,2807,2788,2804,0,7652,7653,7649,10,2800,2790,2808,0,7654,7655,7656,10,2809,2801,2800,0,7657,7658,7654,10,2810,2806,2811,0,7659,7660,7661,10,2812,2813,2814,0,7662,7663,7664,10,2814,2809,2812,0,7664,7665,7662,10,2815,2816,2817,0,7666,7667,7668,10,2815,2818,2780,0,7666,7669,7670,10,2819,2820,2776,0,7671,7672,7673,10,2819,2821,2822,0,7671,7674,7675,10,2781,2780,2818,0,7676,7670,7669,10,2823,2824,2825,0,7677,7678,7679,10,2803,2795,2799,0,7680,7681,7682,10,2826,2802,2796,0,7683,7684,7685,10,2826,2803,2802,0,7686,7687,7688,10,2795,2826,2796,0,7689,7690,7691,10,2795,2803,2826,0,7689,7692,7690,10,2827,2828,2829,0,7693,7694,7695,10,2830,2824,2821,0,7696,7697,7698,10,2830,2825,2824,0,7696,7699,7697,10,2823,2825,2827,0,7700,7701,7702,10,2818,2831,2828,0,7703,7704,7705,10,2819,2830,2821,0,7706,7707,7708,10,2828,2831,2829,0,7705,7709,7710,10,2827,2825,2832,0,7711,7712,7713,10,2818,2828,2827,0,7714,7715,7711,10,2825,2830,2819,0,7716,7717,7718,10,2829,2831,2823,0,7719,7720,7700,10,2823,2827,2829,0,7700,7721,7719,10,2811,2816,2815,0,7722,7723,7724,10,2833,2822,2813,0,7725,7726,7727,10,2813,2812,2833,0,7727,7728,7725,10,2834,2812,2809,0,7729,7730,7731,10,2820,2812,2834,0,7732,7730,7729,10,2811,2806,2817,0,7733,7734,7735,10,2817,2806,2805,0,7735,7734,7736,10,2801,2822,2821,0,7737,7738,7739,10,2807,2835,2780,0,7740,7741,7742,10,2808,2834,2809,0,7743,7744,7745,10,2836,2776,2820,0,7746,7747,7748,10,2801,2821,2824,0,7749,7750,7751,10,2824,2802,2801,0,7751,7752,7749,10,2837,2823,2803,0,7753,7754,7680,10,2823,2837,2838,0,7754,7753,7755,10,2799,2798,2839,0,7756,7757,7758,10,2837,2839,2840,0,7759,7760,7761,10,2798,2797,2839,0,7762,7763,7764,10,2832,2804,2787,0,7765,7766,7767,10,2787,2781,2818,0,7767,7768,7769,10,2819,2776,2791,0,7770,7771,7772,10,2791,2800,2825,0,7772,7773,7774,10,2791,2825,2819,0,7772,7774,7770,10,2804,2788,2787,0,7775,7619,7618,10,2791,2790,2800,0,7623,7622,7776,10,2800,2803,2804,0,7777,7778,7779,10,2800,2804,2832,0,7777,7779,7780,10,2836,2794,2776,0,7781,7782,7783,10,2793,2788,2807,0,7784,7785,7786,10,2808,2790,2794,0,7787,7788,7789,10,2792,2782,2781,0,7631,7790,7791,10,2793,2777,2779,0,7792,7793,7615,10,2794,2783,2776,0,7794,7611,7795,10,2782,2777,2780,0,7606,7601,7604,10,2777,2782,2778,0,7601,7606,7602,10,2786,2785,2778,0,7796,7614,7613,10,2775,2792,2789,0,7797,7624,7620,10,2792,2787,2789,0,7624,7618,7620,10,2789,2791,2775,0,7621,7623,7627,10,2786,2782,2792,0,7629,7628,7631,10,2784,2786,2775,0,7798,7629,7599,10,2784,2775,2774,0,7798,7599,7799,10,2788,2793,2789,0,7800,7801,7802,10,2783,2789,2785,0,7635,7634,7633,10,2795,2797,2799,0,7639,7641,7803,10,2805,2804,2803,0,7804,7805,7648,10,2808,2809,2800,0,7656,7657,7654,10,2801,2809,2814,0,7806,7807,7664,10,2833,2820,2822,0,7808,7809,7675,10,2831,2815,2817,0,7810,7666,7668,10,2815,2831,2818,0,7666,7810,7669,10,2819,2822,2820,0,7671,7675,7672,10,2824,2823,2838,0,7678,7677,7811,10,2832,2818,2827,0,7713,7714,7711,10,2810,2811,2815,0,7812,7722,7724,10,2810,2835,2806,0,7813,7814,7815,10,2816,2811,2817,0,7816,7733,7735,10,2814,2813,2822,0,7817,7818,7738,10,2814,2822,2801,0,7817,7738,7737,10,2817,2805,2831,0,7735,7736,7720,10,2835,2807,2806,0,7741,7740,7819,10,2808,2836,2834,0,7743,7746,7744,10,2780,2835,2815,0,7742,7741,7820,10,2834,2836,2820,0,7744,7746,7748,10,2777,2807,2780,0,7821,7740,7742,10,2808,2794,2836,0,7743,7794,7746,10,2803,2831,2805,0,7680,7822,7823,10,2831,2803,2823,0,7822,7680,7824,10,2837,2803,2799,0,7753,7680,7682,10,2796,2802,2838,0,7685,7684,7825,10,2824,2838,2802,0,7826,7825,7684,10,2837,2799,2839,0,7753,7756,7758,10,2796,2838,2840,0,7827,7825,7828,10,2796,2840,2797,0,7827,7828,7829,10,2837,2840,2838,0,7759,7761,7830,10,2797,2840,2839,0,7831,7832,7833,10,2815,2835,2810,0,7834,7835,7836,10,2812,2820,2833,0,7837,7838,7839,10,2832,2787,2818,0,7765,7767,7769,10,2825,2800,2832,0,7716,7777,7780,10,2793,2807,2777,0,7784,7786,7840,10,2841,2842,2843,0,7841,7842,7843,10,2844,2845,2846,0,7844,7845,7846,10,2847,2848,2849,0,7847,7848,7849,10,2843,2842,2844,0,7850,7851,7852,10,2848,2850,2851,0,7853,7854,7855,10,2851,2849,2848,0,7855,7856,7853,10,2852,2843,2853,0,7857,7858,7859,10,2850,2854,2851,0,7854,7860,7855,10,2852,2854,2850,0,7857,7861,7862,10,2855,2841,2856,0,7863,7864,7865,10,2856,2845,2855,0,7865,7866,7863,10,2857,2858,2859,0,7867,7868,7869,10,2855,2842,2841,0,7863,7870,7864,10,2847,2850,2848,0,7871,7872,7873,10,2850,2857,2841,0,7872,7874,7841,10,2850,2843,2852,0,7872,7843,7875,10,2856,2860,2854,0,7876,7877,7878,10,2849,2854,2860,0,7879,7878,7877,10,2846,2861,2853,0,7880,7881,7882,10,2862,2863,2864,0,7883,7884,7885,10,2864,2865,2862,0,7885,7886,7883,10,2866,2864,2863,0,7887,7888,7884,10,2867,2868,2869,0,7889,7890,7891,10,2870,2871,2872,0,7892,7893,7894,10,2872,2873,2870,0,7894,7895,7892,10,2874,2875,2871,0,7896,7897,7893,10,2872,2845,2876,0,7898,7899,7900,10,2876,2877,2873,0,7900,7901,7902,10,2868,2878,2879,0,7903,7904,7905,10,2873,2877,2880,0,7906,7907,7908,10,2881,2879,2878,0,7909,7910,7904,10,2877,2882,2880,0,7907,7911,7908,10,2882,2883,2884,0,7912,7913,7914,10,2885,2886,2887,0,7915,7916,7917,10,2888,2889,2890,0,7918,7919,7920,10,2858,2891,2892,0,7921,7922,7923,10,2893,2889,2842,0,7924,7919,7925,10,2894,2892,2891,0,7926,7923,7922,10,2895,2896,2897,0,7927,7928,7929,10,2898,2899,2900,0,7930,7931,7932,10,2862,2867,2901,0,7933,7934,7935,10,2901,2874,2863,0,7936,7937,7938,10,2863,2874,2902,0,7939,7940,7941,10,2893,2903,2904,0,7942,7943,7944,10,2905,2906,2892,0,7945,7946,7947,10,2894,2906,2905,0,7948,7949,7950,10,2895,2897,2906,0,7951,7952,7946,10,2903,2897,2896,0,7953,7929,7928,10,2907,2905,2892,0,7954,7955,7956,10,2890,2904,2903,0,7957,7958,7959,10,2878,2908,2881,0,7960,7961,7962,10,2909,2881,2908,0,7963,7964,7965,10,2878,2887,2886,0,7966,7967,7968,10,2873,2880,2888,0,7902,7969,7970,10,2868,2894,2887,0,7971,7972,7967,10,2891,2909,2885,0,7973,7974,7975,10,2910,2889,2883,0,7976,7977,7978,10,2891,2858,2911,0,7973,7979,7980,10,2895,2894,2868,0,7981,7982,7983,10,2873,2890,2896,0,7984,7985,7986,10,2867,2862,2912,0,7987,7933,7988,10,2912,2895,2867,0,7988,7989,7987,10,2900,2864,2902,0,7990,7991,7992,10,2870,2896,2900,0,7993,7994,7990,10,2864,2899,2865,0,7995,7996,7997,10,2865,2898,2862,0,7998,7999,8000,10,2899,2898,2865,0,8001,7999,7998,10,2882,2877,2910,0,8002,8003,8004,10,2869,2860,2913,0,8005,8006,8007,10,2859,2875,2869,0,7869,8008,8005,10,2872,2871,2855,0,8009,8010,7863,10,2855,2845,2872,0,7863,7899,8009,10,2859,2858,2892,0,8011,8012,8013,10,2893,2842,2855,0,8014,8015,8016,10,2875,2892,2906,0,8017,8018,8019,10,2875,2906,2897,0,8017,8019,8020,10,2897,2893,2871,0,8021,8022,8023,10,2871,2875,2897,0,8023,8024,8021,10,2844,2842,2914,0,8025,8026,8027,10,2860,2879,2911,0,8028,8029,8030,10,2858,2857,2847,0,8031,7874,8032,10,2846,2853,2844,0,7846,7859,7844,10,2847,2911,2858,0,7847,8033,8034,10,2911,2847,2849,0,8033,7847,7849,10,2844,2853,2843,0,7852,8035,7850,10,2852,2853,2861,0,7857,7859,8036,10,2852,2861,2854,0,7857,8036,7861,10,2841,2913,2856,0,8037,8038,8039,10,2857,2913,2841,0,7867,8038,8037,10,2913,2857,2859,0,8038,7867,7869,10,2847,2857,2850,0,7871,7874,7872,10,2850,2841,2843,0,7872,7841,7843,10,2856,2913,2860,0,8040,8041,8042,10,2860,2911,2849,0,8042,8043,8044,10,2856,2846,2845,0,8045,8046,8047,10,2856,2854,2861,0,7876,7878,7881,10,2849,2851,2854,0,7879,8048,7878,10,2846,2856,2861,0,7880,7876,7881,10,2875,2867,2869,0,7897,7889,7891,10,2867,2875,2874,0,7889,7897,7896,10,2874,2870,2902,0,7896,7892,8049,10,2870,2874,2871,0,7892,7896,7893,10,2860,2868,2879,0,8050,8051,8052,10,2868,2860,2869,0,8051,8050,8053,10,2873,2872,2876,0,7902,7898,7900,10,2885,2908,2886,0,8054,8055,8056,10,2882,2910,2883,0,7912,8057,7913,10,2884,2883,2888,0,7914,7913,7918,10,2894,2885,2887,0,7926,8058,8059,10,2888,2883,2889,0,7918,7913,7919,10,2894,2891,2885,0,7926,7922,8058,10,2893,2890,2889,0,7924,7920,7919,10,2895,2912,2896,0,8060,8061,8062,10,2898,2900,2912,0,7930,7932,8063,10,2866,2902,2864,0,8064,7992,7991,10,2874,2901,2867,0,8065,8066,8067,10,2901,2863,2862,0,8068,8069,8070,10,2866,2863,2902,0,8071,7939,7941,10,2894,2907,2892,0,8072,8073,7956,10,2904,2890,2893,0,8074,8075,8076,10,2897,2903,2893,0,8021,8077,8022,10,2895,2906,2894,0,8078,8079,8080,10,2907,2894,2905,0,8081,7948,7950,10,2896,2890,2903,0,8082,7957,7959,10,2886,2908,2878,0,8083,8084,7960,10,2884,2880,2882,0,8085,8086,8087,10,2881,2909,2879,0,7964,7963,8088,10,2885,2909,2908,0,8089,7963,7965,10,2884,2888,2880,0,8090,7970,7969,10,2887,2878,2868,0,7967,7966,7971,10,2890,2873,2888,0,8091,7902,7970,10,2879,2909,2891,0,8092,7974,7973,10,2876,2910,2877,0,8093,7976,8094,10,2910,2876,2914,0,7976,8093,8095,10,2910,2914,2889,0,7976,8095,7977,10,2879,2891,2911,0,8092,7973,7980,10,2844,2914,2876,0,7844,8095,8093,10,2845,2844,2876,0,7845,7844,8093,10,2867,2895,2868,0,7934,7981,7983,10,2870,2873,2896,0,8096,7984,7986,10,2870,2900,2902,0,7993,7990,7992,10,2900,2896,2912,0,7990,7994,8097,10,2862,2898,2912,0,8098,8099,8100,10,2864,2900,2899,0,7995,8101,7996,10,2913,2859,2869,0,8007,7869,8005,10,2875,2859,2892,0,8102,8011,8013,10,2893,2855,2871,0,8014,8016,8103,10,2914,2842,2889,0,8104,8026,8105,10,2915,2916,2917,0,8106,8107,8108,10,2917,2918,2919,0,8108,8109,8110,10,2920,2921,2922,0,8111,8112,8113,10,2923,2924,2925,0,8114,8115,8116,10,2924,2926,2925,0,8117,8118,8119,10,2924,2927,2928,0,8117,8120,8121,10,2928,2929,2919,0,8121,8122,8123,10,2919,2918,2926,0,8123,8124,8118,10,2919,2924,2928,0,8123,8117,8121,10,2921,2930,2931,0,8112,8125,8126,10,2927,2929,2928,0,8127,8122,8121,10,2930,2932,2931,0,8125,8128,8126,10,2933,2934,2935,0,8129,8130,8131,10,2936,2917,2934,0,8132,8133,8134,10,2934,2923,2936,0,8134,8135,8132,10,2917,2916,2935,0,8136,8137,8131,10,2936,2918,2917,0,8132,8138,8133,10,2927,2933,2931,0,8139,8140,8141,10,2933,2922,2921,0,8140,8142,8143,10,2927,2924,2923,0,8139,8144,8145,10,2937,2938,2939,0,8146,8147,8148,10,2937,2940,2938,0,8149,8150,8147,10,2941,2939,2942,0,8151,8148,8152,10,2942,2943,2941,0,8152,8153,8151,10,2940,2944,2945,0,8154,8155,8156,10,2946,2943,2925,0,8157,8158,8159,10,2947,2948,2949,0,8160,8161,8162,10,2950,2951,2952,0,8163,8164,8165,10,2953,2954,2955,0,8166,8167,8168,10,2956,2957,2958,0,8169,8170,8171,10,2959,2956,2958,0,8172,8173,8174,10,2954,2960,2961,0,8175,8176,8177,10,2916,2962,2959,0,8178,8179,8172,10,2959,2963,2916,0,8172,8180,8178,10,2918,2964,2960,0,8181,8182,8176,10,2965,2966,2967,0,8183,8184,8185,10,2968,2969,2970,0,8186,8187,8188,10,2971,2937,2972,0,8189,8190,8191,10,2972,2973,2971,0,8191,8192,8189,10,2974,2941,2970,0,8193,8194,8195,10,2937,2941,2972,0,8196,8197,8198,10,2972,2941,2973,0,8199,8200,8201,10,2973,2941,2975,0,8202,8203,8204,10,2959,2967,2976,0,8205,8206,8207,10,2977,2978,2979,0,8208,8209,8210,10,2978,2967,2966,0,8211,8185,8184,10,2959,2980,2963,0,8212,8213,8214,10,2963,2980,2967,0,8215,8216,8217,10,2977,2981,2964,0,8218,8219,8220,10,2964,2967,2978,0,8220,8221,8222,10,2982,2967,2959,0,8223,8224,8225,10,2960,2981,2978,0,8226,8227,8211,10,2950,2952,2955,0,8228,8229,8230,10,2983,2947,2949,0,8231,8232,8233,10,2984,2944,2947,0,8234,8235,8236,10,2985,2953,2952,0,8237,8238,8239,10,2952,2951,2985,0,8239,8240,8237,10,2948,2958,2957,0,8241,8242,8243,10,2955,2961,2950,0,8244,8245,8246,10,2943,2946,2950,0,8158,8157,8246,10,2961,2960,2943,0,8177,8176,8247,10,2940,2986,2958,0,8248,8249,8242,10,2920,2945,2944,0,8250,8251,8252,10,2944,2984,2962,0,8252,8253,8254,10,2962,2984,2956,0,8254,8253,8255,10,2985,2951,2987,0,8256,8257,8258,10,2982,2986,2940,0,8259,8260,8261,10,2966,2941,2943,0,8262,8263,8264,10,2988,2982,2937,0,8265,8266,8190,10,2988,2971,2989,0,8267,8268,8269,10,2969,2989,2970,0,8270,8271,8272,10,2988,2989,2969,0,8273,8274,8275,10,2969,2968,2988,0,8275,8276,8273,10,2947,2983,2984,0,8277,8278,8279,10,2990,2933,2935,0,8280,8129,8131,10,2935,2938,2990,0,8131,8281,8280,10,2963,2938,2935,0,8282,8283,8284,10,2935,2916,2963,0,8284,8285,8282,10,2936,2942,2964,0,8286,8287,8288,10,2963,2967,2939,0,8215,8217,8289,10,2964,2942,2939,0,8220,8290,8291,10,2926,2987,2951,0,8292,8293,8294,10,2945,2920,2922,0,8295,8296,8297,10,2922,2933,2990,0,8297,8298,8299,10,2916,2920,2962,0,8300,8301,8302,10,2926,2918,2987,0,8292,8303,8293,10,2929,2917,2919,0,8304,8108,8110,10,2915,2920,2916,0,8305,8306,8307,10,2920,2915,2921,0,8306,8305,8308,10,2919,2926,2924,0,8123,8118,8117,10,2921,2991,2930,0,8112,8309,8125,10,2991,2921,2915,0,8309,8112,8310,10,2991,2929,2930,0,8311,8122,8312,10,2930,2927,2932,0,8312,8127,8313,10,2927,2930,2929,0,8127,8312,8122,10,2934,2917,2935,0,8130,8136,8131,10,2915,2917,2991,0,8314,8108,8315,10,2917,2929,2991,0,8108,8304,8316,10,2932,2927,2931,0,8317,8318,8319,10,2927,2934,2933,0,8139,8320,8140,10,2927,2923,2934,0,8139,8145,8320,10,2931,2933,2921,0,8141,8140,8143,10,2989,2971,2970,0,8321,8322,8323,10,2970,2971,2973,0,8324,8322,8325,10,2941,2937,2939,0,8151,8146,8148,10,2945,2938,2940,0,8326,8327,8328,10,2945,2990,2938,0,8326,8329,8327,10,2943,2923,2925,0,8330,8331,8332,10,2923,2943,2942,0,8331,8330,8333,10,2940,2948,2944,0,8154,8161,8155,10,2951,2946,2925,0,8334,8157,8159,10,2950,2946,2951,0,8163,8335,8336,10,2947,2944,2948,0,8160,8337,8161,10,2983,2957,2956,0,8338,8339,8340,10,2983,2956,2984,0,8338,8340,8341,10,2955,2954,2961,0,8168,8175,8177,10,2959,2962,2956,0,8172,8179,8173,10,2960,2954,2987,0,8176,8175,8342,10,2918,2960,2987,0,8181,8176,8342,10,2982,2965,2967,0,8223,8183,8185,10,2974,2975,2941,0,8193,8343,8194,10,2973,2974,2970,0,8344,8345,8346,10,2974,2973,2975,0,8347,8202,8204,10,2976,2980,2992,0,8348,8349,8350,10,2979,2981,2977,0,8351,8352,8353,10,2992,2959,2976,0,8354,8205,8207,10,2981,2960,2964,0,8355,8356,8357,10,2959,2992,2980,0,8212,8358,8213,10,2977,2964,2978,0,8218,8220,8222,10,2980,2976,2967,0,8359,8360,8361,10,2986,2982,2959,0,8362,8223,8225,10,2978,2966,2960,0,8211,8184,8226,10,2981,2979,2978,0,8363,8210,8209,10,2957,2983,2949,0,8364,8231,8233,10,2955,2952,2953,0,8230,8229,8365,10,2953,2985,2954,0,8366,8237,8367,10,2949,2948,2957,0,8368,8241,8243,10,2948,2940,2958,0,8241,8248,8242,10,2943,2950,2961,0,8158,8246,8245,10,2986,2959,2958,0,8249,8369,8242,10,2920,2944,2962,0,8250,8252,8254,10,2985,2987,2954,0,8256,8258,8370,10,2925,2926,2951,0,8119,8118,8257,10,2937,2982,2940,0,8371,8266,8261,10,2960,2966,2943,0,8372,8262,8264,10,2971,2988,2937,0,8189,8265,8190,10,2941,2966,2970,0,8194,8262,8195,10,2988,2968,2982,0,8265,8373,8266,10,2968,2965,2982,0,8373,8374,8266,10,2968,2966,2965,0,8375,8262,8376,10,2966,2968,2970,0,8262,8375,8195,10,2942,2936,2923,0,8377,8132,8135,10,2918,2936,2964,0,8378,8286,8288,10,2938,2963,2939,0,8379,8215,8289,10,2967,2964,2939,0,8221,8220,8291,10,2945,2922,2990,0,8295,8297,8299,10,2993,2994,2995,0,8380,8381,8382,10,2993,2996,2997,0,8383,8384,8385,10,2998,2999,2997,0,8386,8387,8388,10,2994,3000,3001,0,8389,8390,8391,10,2995,3001,3002,0,8392,8391,8393,10,3003,2996,3004,0,8394,8395,8396,10,3003,3005,2996,0,8394,8397,8395,10,3006,2995,3002,0,8398,8392,8393,10,3007,3003,3004,0,8399,8394,8396,10,3006,3008,3007,0,8398,8400,8401,10,3009,2993,3010,0,8402,8403,8404,10,2993,2997,3010,0,8403,8405,8404,10,3011,2994,2993,0,8406,8407,8408,10,3006,3004,2996,0,8409,8410,8411,10,2995,2996,2993,0,8412,8411,8380,10,3003,3008,3012,0,8413,8414,8415,10,3008,3013,3009,0,8414,8416,8417,10,3012,3009,3005,0,8415,8418,8419,10,3008,3001,3013,0,8414,8420,8416,10,3014,3015,3016,0,8421,8422,8423,10,3017,3018,3019,0,8424,8425,8426,10,3019,3020,3017,0,8426,8427,8424,10,3021,3020,3022,0,8428,8429,8430,10,3022,3023,3021,0,8430,8431,8428,10,3024,3018,3025,0,8432,8425,8433,10,3026,3023,3027,0,8434,8435,8436,10,3025,3018,3028,0,8437,8438,8439,10,3029,3025,3028,0,8440,8441,8442,10,3030,3026,3031,0,8443,8444,8445,10,3032,3033,3034,0,8446,8447,8448,10,3035,3036,3037,0,8449,8450,8451,10,3034,3033,3038,0,8448,8447,8452,10,3039,3035,3037,0,8453,8454,8455,10,3040,3033,3041,0,8456,8457,8458,10,2997,3042,3039,0,8459,8460,8461,10,3040,3041,2994,0,8456,8458,8462,10,3016,3017,3043,0,8463,8424,8464,10,3044,3021,3014,0,8465,8466,8467,10,3044,3017,3021,0,8468,8469,8470,10,3043,3045,3016,0,8471,8472,8473,10,3043,3017,3045,0,8474,8475,8476,10,3045,3017,3044,0,8477,8478,8479,10,3046,3047,3048,0,8480,8481,8482,10,3049,3050,3051,0,8483,8484,8485,10,3047,3052,3048,0,8486,8487,8488,10,3050,3053,3048,0,8489,8490,8491,10,3039,3054,3055,0,8492,8493,8494,10,3056,3046,3048,0,8495,8496,8497,10,3049,3051,3054,0,8498,8499,8493,10,3055,3054,3050,0,8500,8501,8502,10,3052,3046,3056,0,8503,8504,8505,10,3049,3039,3057,0,8506,8507,8508,10,3023,3048,3053,0,8509,8491,8490,10,3058,3059,3028,0,8510,362,8511,10,3058,3028,3036,0,8510,8511,8512,10,3030,3031,3032,0,8513,8514,8515,10,3031,3026,3060,0,8445,8444,8516,10,3032,3031,3060,0,8517,8518,8519,10,3032,3060,3033,0,8517,8519,8520,10,3028,3037,3036,0,8521,8522,8523,10,3034,3038,3030,0,8524,8525,8526,10,3028,3018,3037,0,8521,8527,8522,10,3023,3026,3030,0,8435,8528,8526,10,3018,3057,3037,0,8527,8529,8522,10,3025,3029,3042,0,8530,8531,8532,10,3027,3060,3026,0,8533,8534,8535,10,3060,3000,3041,0,8536,8537,8538,10,2999,2998,3025,0,8539,8540,8530,10,3025,3042,2999,0,8530,8532,8539,10,3027,3001,3000,0,8541,8391,8390,10,3021,3023,3053,0,8542,8543,8544,10,3061,3062,3063,0,8545,8546,8547,10,3061,3021,3053,0,8548,8466,8544,10,3053,3062,3061,0,8544,8549,8548,10,3064,3063,3016,0,8550,8551,8552,10,3014,3021,3065,0,8553,8554,8555,10,3064,3061,3063,0,8556,8557,8558,10,3065,3061,3064,0,8559,8560,8561,10,3064,3015,3065,0,8562,8563,8564,10,3010,3019,3024,0,8404,8565,8566,10,3022,3020,3011,0,8567,8568,8569,10,3010,2997,3055,0,8570,8571,8572,10,3056,2994,3011,0,8573,8574,8575,10,3056,3011,3020,0,8573,8575,8576,10,3052,3056,3020,0,8503,8505,8577,10,2997,2999,3042,0,8578,8579,8580,10,3024,3025,2998,0,8581,8582,8583,10,2998,3009,3024,0,8583,8584,8581,10,2996,2998,2997,0,8585,8386,8388,10,2998,2996,3005,0,8386,8585,8586,10,2995,2994,3001,0,8392,8389,8391,10,3006,3002,3008,0,8398,8393,8400,10,3004,3006,3007,0,8587,8398,8401,10,3024,3009,3010,0,8566,8402,8404,10,3011,2993,3009,0,8406,8408,8588,10,3013,3011,3009,0,8589,8406,8588,10,2995,3006,2996,0,8412,8409,8411,10,3008,3003,3007,0,8414,8413,8590,10,2998,3005,3009,0,8591,8592,8593,10,3012,3008,3009,0,8415,8414,8417,10,3005,3003,3012,0,8419,8594,8415,10,3001,3008,3002,0,8420,8414,8595,10,3016,3045,3014,0,8596,8597,8421,10,3017,3020,3021,0,8598,8429,8599,10,3024,3019,3018,0,8432,8426,8425,10,3023,3013,3027,0,8600,8601,8602,10,3013,3023,3022,0,8601,8600,8603,10,3059,3029,3028,0,8604,8440,8442,10,3035,3058,3036,0,8605,8510,8512,10,3058,3035,3029,0,8510,8605,8606,10,3040,3038,3033,0,8456,8452,8447,10,3039,3042,3035,0,8453,8607,8454,10,2997,3039,3055,0,8459,8461,8608,10,2994,3056,3040,0,8462,8609,8456,10,3062,3053,3050,0,8610,8611,8612,10,3045,3044,3014,0,8613,8465,8467,10,3052,3047,3046,0,8614,8615,8616,10,3050,3049,3062,0,8617,8618,8619,10,3048,3052,3050,0,8491,8620,8489,10,3040,3056,3048,0,8621,8495,8497,10,3054,3039,3049,0,8493,8492,8498,10,3054,3051,3050,0,8622,8623,8624,10,3062,3049,3057,0,8625,8506,8508,10,3023,3040,3048,0,8509,8456,8491,10,3034,3030,3032,0,8626,8513,8515,10,3023,3030,3038,0,8435,8526,8525,10,3037,3057,3039,0,8522,8529,8627,10,3023,3038,3040,0,8509,8452,8456,10,3060,3027,3000,0,8534,8533,8628,10,3042,3029,3035,0,8532,8531,8629,10,3060,3041,3033,0,8536,8538,8630,10,3017,3063,3018,0,8424,8547,8425,10,3057,3063,3062,0,8631,8547,8632,10,3063,3057,3018,0,8547,8631,8425,10,3016,3063,3017,0,8463,8547,8424,10,3021,3061,3065,0,8633,8634,8635,10,3015,3064,3016,0,8636,8637,8638,10,3015,3014,3065,0,8639,8640,8641,10,3029,3059,3058,0,8642,8643,8644,10,3013,3022,3011,0,8589,8567,8406,10,3010,3055,3019,0,8570,8572,8645,10,3019,3055,3020,0,8646,8647,8648,10,3020,3055,3050,0,8649,8500,8502,10,3052,3020,3050,0,8503,8577,8650,10,3000,2994,3041,0,8651,8652,8653,10,3027,3013,3001,0,8654,8655,8656,10,3066,3067,3068,0,8657,8658,8659,10,3069,3070,3071,0,8660,8661,8662,10,3072,3073,3066,0,8663,8664,8665,10,3074,3075,3076,0,8666,8667,8668,10,3077,3070,3078,0,8669,8670,8671,10,3072,3068,3077,0,8672,8673,8669,10,3070,3076,3079,0,8674,8675,8676,10,3078,3079,3080,0,8671,8677,8678,10,3076,3075,3080,0,8668,8667,8679,10,3080,3079,3076,0,8679,8680,8668,10,3067,3081,3082,0,8681,8682,8683,10,3083,3084,3085,0,8684,8685,8686,10,3067,3066,3081,0,8681,8687,8682,10,3084,3086,3071,0,8685,8688,8689,10,3067,3071,3070,0,8658,8662,8690,10,3085,3087,3083,0,8691,8692,8693,10,3080,3075,3088,0,8694,8695,8696,10,3089,3090,3091,0,8697,8698,8699,10,3092,3093,3094,0,8700,8701,8702,10,3094,3095,3096,0,8703,8704,8705,10,3097,3098,3093,0,8706,8707,8701,10,3093,3092,3097,0,8701,8700,8706,10,3096,3095,3099,0,8705,8704,8708,10,3099,3095,3100,0,8709,8710,8711,10,3101,3102,3103,0,8712,8713,8714,10,3103,3098,3101,0,8714,8715,8712,10,3104,3099,3100,0,8716,8717,8718,10,3103,3102,3105,0,8719,8720,8721,10,3106,3107,3108,0,8722,8723,8724,10,3105,3109,3110,0,8725,8726,8727,10,3110,3111,3105,0,8727,8728,8725,10,3110,3109,3112,0,8729,8730,8731,10,3112,3109,3113,0,8732,8733,8734,10,3114,3107,3115,0,8735,8736,8737,10,3109,3086,3116,0,8738,8739,8740,10,3115,3066,3114,0,8741,8742,8743,10,3115,3117,3066,0,8741,8744,8742,10,3116,3113,3109,0,8745,8746,8747,10,3118,3119,3120,0,8748,8749,8750,10,3090,3121,3119,0,8751,8752,8753,10,3091,3094,3122,0,8754,8755,8756,10,3122,3123,3091,0,8756,8757,8754,10,3124,3093,3089,0,8758,8759,8760,10,3124,3094,3093,0,8761,8762,8763,10,3122,3094,3123,0,8764,8765,8766,10,3123,3094,3124,0,8767,8768,8769,10,3125,3126,3127,0,8770,8771,8772,10,3115,3126,3125,0,8773,8774,8775,10,3128,3113,3129,0,8776,8734,8777,10,3128,3130,3113,0,8776,8778,8734,10,3116,3129,3113,0,8779,8780,8781,10,3116,3131,3129,0,8779,8782,8780,10,3126,3132,3117,0,8783,8784,8744,10,3117,3127,3126,0,8744,8785,8783,10,3130,3131,3116,0,8786,8787,8788,10,3116,3132,3130,0,8788,8789,8786,10,3115,3095,3118,0,8773,8790,8791,10,3132,3126,3115,0,8792,8793,8773,10,3113,3130,3132,0,8734,8794,8795,10,3133,3104,3100,0,8796,8716,8718,10,3100,3134,3106,0,8711,8797,8798,10,3135,3112,3103,0,8799,8800,8714,10,3098,3103,3112,0,8715,8714,8800,10,3114,3073,3108,0,8801,8802,8803,10,3073,3136,3099,0,8804,8805,8806,10,3074,3102,3101,0,8666,8807,8808,10,3094,3091,3119,0,8809,8810,8811,10,3093,3120,3119,0,8812,8813,8814,10,3090,3119,3091,0,8815,8811,8810,10,3089,3093,3121,0,8760,8812,8816,10,3121,3090,3089,0,8817,8818,8819,10,3096,3082,3081,0,8820,8683,8682,10,3081,3092,3096,0,8682,8821,8820,10,3081,3117,3092,0,8822,8823,8824,10,3081,3066,3117,0,8822,8825,8823,10,3116,3086,3084,0,8826,8827,8828,10,3137,3083,3097,0,8829,8830,8831,10,3117,3132,3097,0,8744,8784,8832,10,3116,3137,3097,0,8788,8833,8834,10,3116,3097,3132,0,8788,8834,8789,10,3074,3086,3109,0,8835,8836,8837,10,3082,3099,3136,0,8838,8839,8840,10,3074,3101,3083,0,8841,8842,8843,10,3086,3069,3071,0,8844,8660,8662,10,3072,3088,3136,0,8672,8845,8846,10,3083,3087,3074,0,8847,8848,8849,10,3074,3087,3075,0,8666,8850,8667,10,3068,3072,3066,0,8851,8663,8665,10,3069,3086,3074,0,8852,8853,8666,10,3069,3074,3076,0,8852,8666,8668,10,3072,3078,3088,0,8672,8671,8845,10,3078,3072,3077,0,8671,8672,8669,10,3078,3070,3079,0,8671,8670,8677,10,3067,3082,3085,0,8681,8683,8854,10,3067,3084,3071,0,8855,8685,8689,10,3084,3067,3085,0,8685,8855,8686,10,3077,3068,3067,0,8856,8857,8658,10,3069,3076,3070,0,8858,8859,8690,10,3077,3067,3070,0,8856,8658,8690,10,3082,3088,3085,0,8860,8861,8691,10,3080,3088,3078,0,8694,8696,8862,10,3088,3075,3085,0,8863,8864,8865,10,3088,3082,3136,0,8863,8866,8867,10,3087,3085,3075,0,8868,8865,8864,10,3089,3091,3123,0,8697,8869,8870,10,3092,3094,3096,0,8871,8703,8705,10,3082,3096,3099,0,8872,8705,8708,10,3083,3101,3098,0,8873,8874,8875,10,3083,3098,3097,0,8873,8875,8876,10,3104,3108,3099,0,8716,8877,8717,10,3103,3111,3138,0,8719,8878,8879,10,3111,3103,3105,0,8878,8719,8721,10,3104,3106,3108,0,8880,8722,8724,10,3107,3106,3134,0,8881,8882,8883,10,3135,3110,3112,0,8884,8729,8731,10,3107,3134,3115,0,8736,8885,8737,10,3120,3132,3118,0,8750,8886,8748,10,3123,3124,3089,0,8887,8888,8889,10,3130,3128,3131,0,8890,8891,8892,10,3115,3125,3127,0,8773,8775,8893,10,3115,3127,3117,0,8894,8895,8896,10,3128,3129,3131,0,8897,8780,8782,10,3132,3115,3118,0,8792,8773,8791,10,3120,3113,3132,0,8898,8734,8795,10,3106,3104,3133,0,8722,8880,8899,10,3135,3138,3111,0,8900,8901,8902,10,3110,3135,3111,0,8903,8900,8902,10,3100,3106,3133,0,8711,8798,8904,10,3103,3138,3135,0,8714,8905,8799,10,3134,3100,3095,0,8797,8711,8710,10,3095,3115,3134,0,8710,8906,8907,10,3113,3098,3112,0,8734,8908,8732,10,3108,3073,3099,0,8803,8802,8909,10,3114,3108,3107,0,8801,8803,8910,10,3105,3102,3109,0,8911,8912,8913,10,3073,3072,3136,0,8804,8914,8805,10,3095,3094,3118,0,8704,8703,8915,10,3113,3120,3098,0,8734,8898,8908,10,3093,3098,3120,0,8812,8916,8813,10,3094,3119,3118,0,8809,8811,8915,10,3121,3093,3119,0,8816,8812,8814,10,3083,3137,3084,0,8830,8829,8917,10,3116,3084,3137,0,8826,8828,8918,10,3092,3117,3097,0,8700,8919,8706,10,3102,3074,3109,0,8920,8835,8837,10,3114,3066,3073,0,8921,8922,8923,10,3139,3140,3141,0,8924,8925,8926,10,3142,3143,3144,0,8927,8928,8929,10,3145,3146,3143,0,8930,8931,8928,10,3145,3147,3148,0,8930,8932,8933,10,3145,3149,3147,0,8930,8934,8932,10,3147,3149,3150,0,8935,8936,8937,10,3151,3152,3153,0,8938,8939,8940,10,3154,3153,3155,0,8941,8940,8942,10,3155,3156,3154,0,8942,8943,8941,10,3152,3146,3157,0,8939,8944,8945,10,3157,3153,3152,0,8945,8940,8939,10,3157,3146,3145,0,8946,8947,8948,10,3155,3158,3156,0,8949,8950,8951,10,3148,3155,3157,0,8952,8949,8953,10,3144,3151,3153,0,8954,8955,8956,10,3141,3153,3159,0,8957,8956,8958,10,3149,3142,3144,0,8959,8960,8961,10,3153,3150,3149,0,8962,8963,8964,10,3141,3140,3153,0,8965,8966,8962,10,3160,3161,3162,0,8967,8968,8969,10,3163,3164,3165,0,8970,8971,8972,10,3166,3167,3168,0,8973,8974,8975,10,3164,3159,3165,0,8976,8977,8978,10,3169,3167,3166,0,8979,8974,8973,10,3143,3170,3169,0,8980,8981,8982,10,3171,3167,3169,0,8983,8984,8982,10,3171,3169,3170,0,8985,8986,8987,10,3172,3173,3174,0,8988,8989,8990,10,3174,3175,3172,0,8990,8991,8988,10,3172,3176,3173,0,8988,8992,8989,10,3177,3178,3179,0,8993,8994,8995,10,3171,3170,3177,0,8996,8997,8993,10,3180,3175,3181,0,8998,8999,9000,10,3182,3183,3178,0,9001,9002,9003,10,3180,3181,3184,0,9004,9005,9006,10,3185,3183,3182,0,9007,9008,9009,10,3186,3180,3184,0,9010,9011,9012,10,3187,3188,3146,0,9013,9014,9015,10,3189,3190,3191,0,9016,9017,9018,10,3192,3168,3160,0,9019,9020,9021,10,3193,3194,3163,0,9022,9023,9024,10,3192,3193,3168,0,9025,9026,9027,10,3162,3192,3160,0,9028,9029,9030,10,3194,3193,3162,0,9031,9032,9033,10,3162,3193,3192,0,9033,9032,9034,10,3195,3196,3197,0,9035,9036,9037,10,3198,3199,3200,0,9038,9039,9040,10,3201,3202,3197,0,9041,9042,9043,10,3203,3191,3202,0,9044,9045,9046,10,3204,3199,3198,0,9047,9048,9049,10,3195,3201,3196,0,9050,9051,9052,10,3202,3191,3205,0,9053,9054,9055,10,3205,3197,3202,0,9055,9056,9053,10,3191,3199,3204,0,9057,9058,9059,10,3198,3191,3190,0,9060,9061,9062,10,3200,3191,3198,0,9063,9064,9060,10,3175,3174,3181,0,8999,9065,9000,10,3183,3179,3178,0,9066,9067,9068,10,3182,3178,3177,0,9069,9070,8993,10,3174,3173,3184,0,9071,9072,9006,10,3184,3173,3206,0,9012,9073,9074,10,3185,3187,3167,0,9075,9076,9077,10,3173,3164,3206,0,9078,8976,9079,10,3206,3201,3184,0,9074,9080,9012,10,3164,3176,3207,0,9081,9082,9083,10,3163,3206,3164,0,8970,9084,8971,10,3168,3190,3208,0,9020,9085,9086,10,3209,3163,3162,0,9087,9088,9089,10,3175,3210,3172,0,9090,9091,9092,10,3151,3204,3152,0,9093,9094,9095,10,3154,3205,3165,0,9096,9097,9098,10,3154,3156,3211,0,9096,9099,9100,10,3204,3146,3152,0,9101,9102,9103,10,3165,3159,3154,0,8978,9104,9105,10,3166,3204,3151,0,9106,9094,9093,10,3205,3191,3204,0,9107,9057,9059,10,3176,3186,3207,0,9108,9109,9110,10,3143,3188,3170,0,9111,9112,9113,10,3146,3188,3143,0,9114,9115,9111,10,3141,3159,3164,0,9116,9117,9118,10,3169,3151,3144,0,9119,9120,9121,10,3207,3139,3141,0,9122,8924,8926,10,3142,3145,3143,0,8927,8930,8928,10,3156,3139,3207,0,9123,9124,9125,10,3140,3139,3158,0,8925,8924,9126,10,3149,3145,3142,0,8934,8930,8927,10,3147,3158,3148,0,8935,9126,9127,10,3147,3140,3158,0,8935,8925,9126,10,3140,3147,3150,0,8925,8935,8937,10,3154,3159,3153,0,9128,9104,9129,10,3157,3155,3153,0,8945,8942,8940,10,3156,3158,3139,0,8951,8950,9130,10,3157,3145,3148,0,8946,8948,8952,10,3158,3155,3148,0,8950,8949,8952,10,3150,3153,3140,0,8963,8962,8966,10,3144,3153,3149,0,9131,8962,8964,10,3193,3163,3165,0,9132,8970,8972,10,3193,3166,3168,0,9133,8973,8975,10,3151,3169,3166,0,9134,8979,8973,10,3176,3164,3173,0,9135,9136,9137,10,3171,3177,3179,0,8996,8993,8995,10,3175,3180,3210,0,9138,8998,9139,10,3187,3182,3188,0,9140,9141,9142,10,3182,3187,3185,0,9141,9140,9143,10,3211,3184,3201,0,9144,9012,9080,10,3211,3186,3184,0,9144,9010,9012,10,3156,3186,3211,0,9145,9146,9100,10,3204,3187,3146,0,9147,9013,9015,10,3203,3189,3191,0,9148,9016,9018,10,3209,3161,3208,0,9149,9150,9151,10,3163,3194,3162,0,9152,9153,9154,10,3196,3201,3197,0,9155,9041,9043,10,3195,3211,3201,0,9156,9157,9158,10,3187,3204,3198,0,9159,9047,9049,10,3195,3205,3211,0,9160,9055,9161,10,3205,3195,3197,0,9055,9160,9056,10,3199,3191,3200,0,9162,9163,9164,10,3202,3201,3203,0,9046,9080,9044,10,3187,3198,3190,0,9076,9060,9062,10,3210,3176,3172,0,9165,9166,9167,10,3182,3177,3170,0,9069,8993,8997,10,3181,3174,3184,0,9005,9071,9006,10,3171,3183,3185,0,9168,9169,9170,10,3183,3171,3179,0,9169,9168,9171,10,3171,3185,3167,0,9172,9075,9077,10,3186,3210,3180,0,9173,9165,9174,10,3210,3186,3176,0,9165,9173,9175,10,3188,3182,3170,0,9142,9141,9176,10,3164,3207,3141,0,9081,9083,9177,10,3144,3143,3169,0,8929,8928,9178,10,3206,3163,3203,0,9084,8970,9179,10,3168,3167,3190,0,8975,8974,9180,10,3201,3206,3203,0,9080,9074,9044,10,3190,3167,3187,0,9062,9077,9076,10,3160,3168,3208,0,9021,9020,9086,10,3163,3209,3203,0,9181,9182,9044,10,3209,3189,3203,0,9182,9183,9044,10,3189,3209,3208,0,9183,9182,9184,10,3208,3190,3189,0,9086,9085,9185,10,3209,3162,3161,0,9186,9187,9188,10,3161,3160,3208,0,9189,9190,9191,10,3205,3154,3211,0,9097,9096,9100,10,3205,3193,3165,0,9192,9193,9194,10,3205,3166,3193,0,9192,9195,9193,10,3166,3205,3204,0,9195,9192,9196,10,3186,3156,3207,0,9197,9198,9110,10,3212,3213,3214,0,9199,9200,9201,10,3212,3215,3216,0,9202,9203,9204,10,3217,3218,3219,0,9205,9206,9207,10,3220,3216,3215,0,9208,9209,9210,10,3219,3221,3222,0,9207,9211,9212,10,3218,3223,3219,0,9213,9214,9215,10,3218,3224,3223,0,9206,9216,9217,10,3220,3225,3216,0,9218,9219,9220,10,3226,3213,3227,0,9221,9222,9223,10,3228,3221,3227,0,9224,9225,9223,10,3227,3229,3228,0,9223,9226,9224,10,3220,3230,3227,0,9227,9228,9229,10,3221,3223,3220,0,9230,9231,9227,10,3229,3224,3217,0,9232,9233,9234,10,3224,3213,3216,0,9235,9236,9237,10,3224,3229,3213,0,9235,9238,9236,10,3231,3232,3233,0,9239,9240,9241,10,3233,3234,3231,0,9241,9242,9239,10,3235,3236,3237,0,9243,9244,9245,10,3237,3238,3235,0,9245,9246,9243,10,3239,3237,3236,0,9247,9248,9249,10,3237,3240,3238,0,9250,9251,9252,10,3239,3241,3214,0,9253,9254,9255,10,3214,3213,3239,0,9255,9256,9253,10,3242,3240,3237,0,9257,9251,9250,10,3241,3215,3214,0,9254,9258,9255,10,3242,3243,3240,0,9259,9260,9261,10,3244,3215,3241,0,9262,9263,9264,10,3244,3245,3246,0,9265,9266,9267,10,3246,3215,3244,0,9267,9268,9265,10,3245,3247,3248,0,9269,9270,9271,10,3249,3250,3251,0,9272,9273,9274,10,3248,3247,3252,0,9275,9276,9277,10,3251,3250,3253,0,9278,9279,9280,10,3254,3248,3252,0,9281,9282,9283,10,3255,3248,3254,0,9284,9285,9286,10,3250,3256,3253,0,9287,9288,9289,10,3230,3255,3257,0,9290,9284,9291,10,3258,3250,3221,0,9292,9293,9294,10,3257,3255,3254,0,9291,9284,9286,10,3259,3260,3261,0,9295,9296,9297,10,3262,3238,3234,0,9298,9299,9300,10,3236,3235,3263,0,9301,9302,9303,10,3234,3233,3235,0,9304,9305,9306,10,3264,3257,3265,0,9307,9308,9309,10,3266,3261,3264,0,9310,9311,9312,10,3267,3256,3258,0,9313,9314,9315,10,3257,3254,3265,0,9316,9317,9318,10,3264,3261,3257,0,9307,9319,9320,10,3268,3267,3258,0,9321,9322,9323,10,3261,3256,3267,0,9324,9325,9326,10,3244,3247,3245,0,9265,9327,9328,10,3269,3251,3243,0,9329,9330,9331,10,3243,3251,3253,0,9332,9333,9334,10,3253,3240,3243,0,9334,9335,9332,10,3246,3248,3255,0,9336,9337,9338,10,3241,3236,3266,0,9339,9249,9340,10,3238,3256,3260,0,9252,9341,9342,10,3238,3240,3256,0,9252,9251,9341,10,3241,3266,3254,0,9343,9310,9281,10,3270,3266,3236,0,9344,9340,9345,10,3238,3260,3271,0,9346,9342,9347,10,3271,3234,3238,0,9347,9348,9346,10,3266,3270,3272,0,9310,9349,9350,10,3271,3259,3272,0,9351,9352,9353,10,3271,3231,3234,0,9354,9355,9356,10,3270,3232,3272,0,9357,9358,9359,10,3271,3232,3231,0,9360,9361,9362,10,3239,3213,3226,0,9253,9256,9363,10,3226,3230,3257,0,9364,9365,9291,10,3258,3221,3228,0,9366,9367,9368,10,3228,3229,3237,0,9369,9370,9371,10,3239,3268,3237,0,9372,9373,9374,10,3261,3239,3257,0,9319,9372,9320,10,3268,3258,3228,0,9321,9323,9368,10,3221,3250,3222,0,9375,9376,9377,10,3222,3242,3229,0,9378,9379,9380,10,3215,3212,3214,0,9203,9202,9381,10,3217,3219,3222,0,9205,9207,9212,10,3230,3220,3215,0,9382,9208,9210,10,3220,3223,3225,0,9218,9214,9219,10,3223,3224,3225,0,9214,9383,9219,10,3213,3229,3227,0,9222,9226,9223,10,3230,3226,3227,0,9384,9221,9223,10,3221,3220,3227,0,9230,9227,9229,10,3223,3221,3219,0,9231,9230,9385,10,3225,3224,3216,0,9386,9235,9237,10,3212,3216,3213,0,9387,9237,9236,10,3217,3224,3218,0,9388,9389,9390,10,3236,3241,3239,0,9249,9339,9247,10,3229,3242,3237,0,9391,9257,9250,10,3242,3269,3243,0,9392,9329,9331,10,3269,3242,3249,0,9329,9392,9393,10,3245,3248,3246,0,9269,9271,9394,10,3249,3251,3269,0,9272,9274,9395,10,3258,3256,3250,0,9396,9397,9398,10,3266,3259,3261,0,9399,9295,9297,10,3232,3271,3272,0,9400,9401,9402,10,3236,3263,3233,0,9403,9404,9405,10,3262,3235,3238,0,9406,9407,9408,10,3263,3235,3233,0,9409,9306,9305,10,3234,3235,3262,0,9304,9306,9410,10,3268,3273,3267,0,9321,9411,9322,10,3273,3268,3261,0,9411,9321,9412,10,3264,3254,3266,0,9312,9281,9310,10,3260,3256,3261,0,9413,9325,9414,10,3265,3254,3264,0,9415,9281,9416,10,3273,3261,3267,0,9417,9324,9326,10,3247,3244,3252,0,9418,9419,9420,10,3241,3252,3244,0,9421,9420,9419,10,3252,3241,3254,0,9283,9343,9281,10,3253,3256,3240,0,9422,9325,9423,10,3215,3246,3255,0,9424,9336,9338,10,3249,3242,3222,0,9425,9426,9427,10,3249,3222,3250,0,9428,9429,9287,10,3259,3266,3272,0,9352,9310,9350,10,3271,3260,3259,0,9351,9430,9352,10,3236,3233,3270,0,9431,9432,9433,10,3270,3233,3232,0,9357,9434,9358,10,3226,3257,3239,0,9364,9291,9435,10,3239,3261,3268,0,9372,9319,9373,10,3237,3268,3228,0,9374,9373,9436,10,3255,3230,3215,0,9437,9438,9439,10,3222,3229,3217,0,9378,9380,9440,10,3274,3275,3276,0,9441,9442,9443,10,3277,3278,3279,0,9444,9445,9446,10,3280,3281,3275,0,9447,9448,9442,10,3282,3279,3283,0,9449,9450,9451,10,3283,3280,3274,0,9451,9452,9453,10,3284,3285,3286,0,9454,9455,9456,10,3284,3286,3287,0,9454,9456,9457,10,3288,3278,3289,0,9458,9459,9460,10,3286,3281,3287,0,9456,9461,9457,10,3279,3278,3288,0,9462,9463,9464,10,3279,3288,3287,0,9462,9464,9465,10,3283,3279,3287,0,9466,9462,9465,10,3287,3281,3283,0,9465,9467,9466,10,3274,3285,3290,0,9468,9469,9470,10,3285,3291,3282,0,9471,9472,9473,10,3285,3282,3290,0,9471,9473,9470,10,3292,3291,3284,0,9474,9472,9475,10,3274,3276,3285,0,9476,9477,9471,10,3293,3294,3295,0,9478,9479,9480,10,3296,3297,3298,0,9481,9482,9483,10,3297,3299,3300,0,9484,9485,9486,10,3300,3298,3297,0,9486,9487,9484,10,3301,3302,3296,0,9488,9489,9490,10,3300,3299,3303,0,9491,9492,9493,10,3292,3284,3300,0,9494,9495,9491,10,3301,3285,3276,0,9488,9496,9497,10,3277,3292,3303,0,9498,9494,9493,10,3304,3303,3299,0,9499,9500,9501,10,3305,3306,3307,0,9502,9503,9504,10,3307,3308,3305,0,9504,9505,9502,10,3309,3310,3311,0,9506,9507,9508,10,3311,3278,3309,0,9508,9509,9506,10,3306,3312,3307,0,9510,9511,9512,10,3286,3298,3312,0,9513,9514,9515,10,3312,3306,3281,0,9515,9516,9517,10,3313,3314,3294,0,9518,9519,9520,10,3315,3316,3297,0,9521,9522,9523,10,3317,3296,3318,0,9524,9525,9526,10,3315,3296,3316,0,9527,9528,9529,10,3317,3293,3316,0,9530,9531,9529,10,3316,3296,3317,0,9529,9528,9530,10,3314,3319,3320,0,9532,9533,9534,10,3321,3300,3322,0,9535,9536,9537,10,3322,3311,3321,0,9537,9538,9535,10,3312,3298,3323,0,9539,9540,9541,10,3320,3300,3321,0,9542,9543,9544,10,3323,3298,3319,0,9545,9546,9547,10,3324,3323,3319,0,9548,9549,9550,10,3320,3311,3299,0,9534,9551,9552,10,3312,3319,3325,0,9553,9533,9554,10,3324,3319,3312,0,9555,9556,9553,10,3310,3326,3304,0,9557,9558,9559,10,3307,3327,3308,0,9560,9561,9562,10,3327,3302,3305,0,9563,9564,9565,10,3305,3275,3306,0,9502,9566,9503,10,3311,3310,3304,0,9551,9567,9568,10,3303,3328,3277,0,9569,9570,9571,10,3275,3305,3302,0,9572,9573,9574,10,3302,3276,3275,0,9574,9575,9572,10,3309,3278,3277,0,9576,9577,9578,10,3296,3302,3312,0,9490,9489,9579,10,3296,3325,3318,0,9580,9581,9582,10,3313,3325,3314,0,9583,9584,9585,10,3318,3325,3313,0,9586,9587,9588,10,3318,3294,3293,0,9586,9589,9590,10,3313,3294,3318,0,9591,9592,9593,10,3294,3314,3316,0,9594,9595,9596,10,3300,3284,3289,0,9491,9495,9597,10,3286,3285,3301,0,9598,9599,9600,10,3301,3298,3286,0,9600,9601,9598,10,3289,3322,3300,0,9602,9603,9604,10,3289,3278,3322,0,9602,9605,9603,10,3320,3319,3298,0,9542,9606,9607,10,3281,3306,3275,0,9608,9609,9610,10,3277,3291,3292,0,9444,9611,9612,10,3291,3277,3279,0,9611,9444,9446,10,3274,3280,3275,0,9441,9447,9442,10,3279,3282,3291,0,9446,9613,9611,10,3290,3283,3274,0,9614,9451,9453,10,3283,3290,3282,0,9451,9614,9449,10,3288,3284,3287,0,9458,9454,9457,10,3284,3288,3289,0,9454,9458,9460,10,3281,3280,3283,0,9467,9615,9466,10,3285,3284,3291,0,9471,9475,9472,10,3295,3316,3293,0,9480,9616,9478,10,3296,3298,3301,0,9490,9617,9488,10,3292,3300,3303,0,9494,9491,9493,10,3276,3302,3301,0,9497,9489,9488,10,3309,3326,3310,0,9618,9619,9620,10,3326,3309,3328,0,9619,9618,9621,10,3281,3286,3312,0,9517,9513,9515,10,3311,3322,3278,0,9508,9622,9509,10,3319,3314,3325,0,9623,9624,9625,10,3293,3317,3318,0,9626,9524,9526,10,3296,3315,3297,0,9627,9628,9629,10,3314,3320,3299,0,9532,9534,9552,10,3321,3311,3320,0,9630,9551,9631,10,3323,3324,3312,0,9632,9555,9553,10,3326,3303,3304,0,9633,9634,9635,10,3303,3326,3328,0,9634,9633,9636,10,3327,3305,3308,0,9563,9565,9637,10,3304,3299,3311,0,9568,9552,9551,10,3327,3312,3302,0,9638,9553,9639,10,3312,3327,3307,0,9553,9638,9640,10,3328,3309,3277,0,9641,9576,9578,10,3299,3297,3314,0,9552,9642,9643,10,3296,3312,3325,0,9580,9579,9581,10,3316,3314,3297,0,9644,9645,9646,10,3295,3294,3316,0,9647,9594,9596,10,3300,3320,3298,0,9543,9542,9607,10,3329,3330,3331,0,9648,9649,9650,10,3332,3333,3334,0,9651,9652,9653,10,3335,3336,3337,0,9654,9655,9656,10,3338,3337,3339,0,9657,9658,9659,10,3339,3340,3338,0,9659,9660,9657,10,3333,3332,3341,0,9661,9662,9663,10,3342,3343,3344,0,9664,9665,9666,10,3341,3344,3343,0,9663,9667,9668,10,3336,3330,3345,0,9669,9670,9671,10,3346,3347,3348,0,9672,9673,9674,10,3330,3349,3345,0,9670,9675,9671,10,3348,3331,3330,0,9674,9676,9677,10,3330,3346,3348,0,9677,9672,9674,10,3346,3343,3342,0,9678,9679,9680,10,3335,3341,3336,0,9681,9682,9683,10,3350,3351,3352,0,9684,9685,9686,10,3353,3350,3352,0,9687,9684,9686,10,3354,3355,3356,0,9688,9689,9690,10,3357,3354,3358,0,9691,9688,9692,10,3358,3359,3357,0,9692,9693,9691,10,3357,3355,3354,0,9691,9689,9688,10,3360,3347,3361,0,9694,9673,9695,10,3360,3355,3347,0,9694,9696,9673,10,3339,3359,3362,0,9697,9698,9699,10,3361,3363,3364,0,9700,9701,9702,10,3365,3360,3361,0,9703,9704,9700,10,3366,3367,3368,0,9705,9706,9707,10,3369,3370,3371,0,9708,9709,9710,10,3369,3372,3373,0,9708,9711,9712,10,3366,3374,3375,0,9713,9714,9715,10,3340,3366,3375,0,9716,9713,9715,10,3331,3376,3377,0,9717,9718,9719,10,3375,3378,3340,0,9715,9720,9716,10,3379,3380,3381,0,9721,9722,9723,10,3379,3382,3380,0,9721,9724,9722,10,3381,3383,3384,0,9725,9726,9727,10,3379,3384,3382,0,9721,9727,9728,10,3385,3356,3351,0,9729,9730,9731,10,3385,3354,3356,0,9732,9733,9734,10,3386,3354,3350,0,9735,9736,9737,10,3385,3351,3350,0,9738,9739,9740,10,3350,3354,3385,0,9740,9741,9738,10,3387,3388,3389,0,9742,9743,9744,10,3390,3380,3391,0,9745,9746,9747,10,3381,3380,3388,0,9748,9749,9750,10,3380,3382,3377,0,9722,9724,9751,10,3391,3377,3392,0,9752,9753,9754,10,3388,3380,3378,0,9755,9756,9757,10,3378,3393,3389,0,9757,9758,9759,10,3378,3389,3388,0,9757,9759,9755,10,3380,3392,3376,0,9760,9761,9762,10,3359,3381,3388,0,9763,9764,9765,10,3388,3393,3375,0,9743,9766,9767,10,3391,3380,3377,0,9747,9746,9768,10,3371,3370,3363,0,9769,9770,9771,10,3362,3374,3368,0,9772,9773,9774,10,3369,3373,3364,0,9775,9776,9777,10,3339,3394,3395,0,9778,9779,9780,10,3363,3361,3396,0,9781,9782,9783,10,3395,3394,3366,0,9780,9779,9784,10,3371,3331,3372,0,9785,9786,9787,10,3395,3340,3339,0,9780,9788,9778,10,3382,3356,3360,0,9789,9790,9791,10,3377,3382,3365,0,9792,9793,9794,10,3358,3350,3383,0,9795,9796,9797,10,3353,3384,3383,0,9798,9799,9800,10,3366,3394,3397,0,9801,9802,9803,10,3366,3397,3367,0,9801,9803,9804,10,3398,3336,3345,0,9805,9806,9807,10,3345,3357,3398,0,9807,9808,9805,10,3378,3357,3345,0,9809,9810,9811,10,3345,3349,3340,0,9811,9812,9813,10,3345,3340,3378,0,9811,9813,9809,10,3348,3355,3376,0,9814,9815,9816,10,3348,3347,3355,0,9674,9673,9696,10,3378,3380,3357,0,9817,9818,9691,10,3357,3380,3355,0,9819,9760,9820,10,3396,3399,3331,0,9821,9822,9823,10,3331,3399,3329,0,9824,9825,9826,10,3398,3339,3337,0,9827,9828,9829,10,3337,3336,3398,0,9829,9830,9827,10,3347,3399,3361,0,9831,9832,9833,10,3349,3330,3333,0,9834,9835,9836,10,3338,3335,3337,0,9837,9838,9839,10,3329,3399,3342,0,9840,9841,9664,10,3349,3338,3340,0,9842,9657,9660,10,3338,3349,3333,0,9657,9842,9843,10,3334,3329,3342,0,9844,9845,9846,10,3333,3341,3338,0,9661,9663,9837,10,3342,3344,3334,0,9664,9666,9847,10,3341,3332,3344,0,9663,9662,9667,10,3344,3332,3334,0,9666,9848,9847,10,3336,3346,3330,0,9669,9849,9670,10,3329,3334,3330,0,9850,9851,9835,10,3334,3333,3330,0,9852,9836,9835,10,3347,3346,3342,0,9853,9854,9855,10,3342,3399,3347,0,9856,9857,9853,10,3336,3341,3346,0,9683,9682,9678,10,3346,3341,3343,0,9678,9682,9679,10,3341,3335,3338,0,9682,9681,9858,10,3360,3356,3355,0,9859,9690,9689,10,3398,3359,3339,0,9860,9861,9862,10,3357,3359,3398,0,9863,9861,9860,10,3365,3361,3364,0,9703,9700,9702,10,3339,3362,3394,0,9697,9699,9864,10,3400,3364,3363,0,9865,9702,9866,10,3397,3394,3362,0,9867,9868,9699,10,3370,3400,3363,0,9869,9865,9870,10,3372,3369,3371,0,9711,9708,9710,10,3366,3368,3374,0,9871,9872,9873,10,3373,3372,3377,0,9712,9711,9719,10,3377,3372,3331,0,9719,9711,9717,10,3384,3379,3381,0,9727,9721,9725,10,3358,3386,3350,0,9795,9874,9796,10,3354,3386,3358,0,9875,9876,9877,10,3387,3389,3393,0,9878,9879,9880,10,3391,3392,3390,0,9881,9882,9883,10,3375,3393,3378,0,9884,9885,9886,10,3392,3377,3376,0,9754,9753,9887,10,3392,3380,3390,0,9882,9760,9888,10,3359,3388,3375,0,9763,9765,9889,10,3388,3387,3393,0,9743,9742,9766,10,3362,3367,3397,0,9890,9891,9892,10,3367,3362,3368,0,9891,9890,9893,10,3369,3400,3370,0,9894,9895,9896,10,3369,3364,3400,0,9775,9777,9897,10,3359,3374,3362,0,9898,9773,9772,10,3365,3364,3373,0,9899,9777,9776,10,3359,3375,3374,0,9898,9900,9773,10,3377,3365,3373,0,9901,9899,9902,10,3340,3395,3366,0,9903,9780,9784,10,3371,3363,3396,0,9785,9781,9783,10,3371,3396,3331,0,9785,9783,9786,10,3361,3399,3396,0,9782,9841,9783,10,3358,3381,3359,0,9904,9905,9906,10,3365,3382,3360,0,9794,9789,9791,10,3381,3358,3383,0,9905,9795,9797,10,3356,3352,3351,0,9730,9907,9731,10,3356,3382,3352,0,9730,9789,9907,10,3352,3382,3384,0,9907,9789,9908,10,3353,3383,3350,0,9909,9910,9911,10,3384,3353,3352,0,9799,9798,9912,10,3331,3348,3376,0,9913,9814,9816,10,3380,3376,3355,0,9760,9762,9820,10,3401,3402,3403,0,9914,9915,9916,10,3404,3405,3406,0,9917,9918,9919,10,3407,3408,3409,0,9920,9921,9922,10,3401,3410,3411,0,9923,9924,9925,10,3412,3413,3414,0,9926,9927,9928,10,3414,3415,3412,0,9928,9929,9926,10,3414,3406,3415,0,9928,9930,9929,10,3416,3408,3414,0,9931,9932,9928,10,3404,3406,3414,0,9933,9934,9935,10,3407,3404,3414,0,9936,9933,9935,10,3401,3403,3413,0,9937,9938,9939,10,3413,3417,3401,0,9939,9940,9937,10,3418,3419,3420,0,9941,9942,9943,10,3421,3418,3420,0,9944,9941,9943,10,3421,3420,3422,0,9944,9945,9946,10,3423,3424,3425,0,9947,9948,9949,10,3425,3426,3423,0,9949,9950,9947,10,3427,3428,3426,0,9951,9952,9953,10,3425,3424,3429,0,9954,9955,9956,10,3427,3413,3403,0,9951,9957,9958,10,3427,3403,3402,0,9951,9958,9959,10,3402,3428,3427,0,9959,9952,9951,10,3430,3428,3402,0,9960,9961,9962,10,3431,3432,3433,0,9963,9964,9965,10,3431,3424,3406,0,9966,9967,9968,10,3434,3430,3435,0,9969,9970,9971,10,3424,3415,3406,0,9967,9972,9968,10,3408,3416,3428,0,9973,9974,9975,10,3436,3437,3438,0,9976,9977,9978,10,3439,3420,3423,0,9979,9980,9981,10,3423,3426,3439,0,9982,9983,9984,10,3420,3426,3422,0,9985,9986,9987,10,3437,3440,3441,0,9988,9989,9990,10,3436,3442,3440,0,9991,9992,9993,10,3443,3415,3424,0,9994,9995,9996,10,3428,3416,3444,0,9997,9998,9999,10,3441,3440,3415,0,10000,10001,10002,10,3440,3444,3416,0,10003,10004,10005,10,3437,3441,3423,0,9988,9990,10006,10,3436,3428,3442,0,9991,10007,10008,10,3423,3441,3443,0,10006,10009,10010,10,3443,3424,3423,0,10010,10011,10006,10,3442,3428,3444,0,10008,10007,10012,10,3435,3430,3445,0,10013,10014,10015,10,3434,3445,3446,0,10016,10017,10018,10,3447,3406,3429,0,10019,10020,10021,10,3409,3408,3434,0,10022,10023,10024,10,3426,3428,3436,0,9953,9952,10025,10,3422,3426,3438,0,10026,10027,10028,10,3423,3420,3437,0,10029,10030,9977,10,3420,3438,3437,0,10030,9978,9977,10,3419,3438,3420,0,10031,10032,10033,10,3421,3438,3418,0,10034,10035,10036,10,3427,3416,3413,0,10037,10038,10039,10,3440,3426,3425,0,10001,10040,10041,10,3440,3416,3427,0,10001,10042,10043,10,3427,3426,3440,0,10043,10040,10001,10,3409,3401,3407,0,9922,9914,9920,10,3401,3409,3402,0,9914,9922,9915,10,3407,3401,3411,0,10044,9923,9925,10,3417,3405,3404,0,10045,9918,9917,10,3404,3411,3417,0,10046,9925,10047,10,3411,3410,3417,0,9925,9924,10047,10,3416,3414,3413,0,9931,9928,9927,10,3407,3411,3404,0,9936,10048,9933,10,3408,3407,3414,0,10049,9936,9935,10,3410,3401,3417,0,10050,9937,9940,10,3412,3417,3413,0,10051,9940,9939,10,3448,3417,3412,0,10052,9940,10051,10,3417,3448,3405,0,9940,10052,10053,10,3448,3425,3429,0,10054,9954,9956,10,3425,3448,3412,0,9954,10054,10055,10,3433,3429,3424,0,10056,9956,9955,10,3429,3449,3447,0,10057,10058,10059,10,3449,3429,3433,0,10058,10057,10056,10,3446,3445,3430,0,10060,10061,10062,10,3402,3446,3430,0,10063,10060,10062,10,3447,3449,3431,0,10064,10065,10066,10,3445,3434,3435,0,10017,10016,10067,10,3424,3431,3433,0,9967,9966,10068,10,3428,3434,3408,0,10069,9969,10070,10,3434,3428,3430,0,9969,10069,9970,10,3440,3437,3436,0,10071,10072,10073,10,3420,3439,3426,0,9985,10074,9986,10,3443,3441,3415,0,10075,10000,10002,10,3444,3440,3442,0,10004,10003,10076,10,3431,3449,3432,0,10077,10078,10079,10,3433,3432,3449,0,9965,9964,10080,10,3447,3431,3406,0,10019,10081,10020,10,3409,3434,3446,0,10022,10024,10082,10,3402,3409,3446,0,10083,10022,10082,10,3429,3405,3448,0,10084,10085,10086,10,3405,3429,3406,0,10085,10084,10087,10,3436,3438,3426,0,10088,10089,10090,10,3421,3422,3438,0,10091,10092,10035,10,3438,3419,3418,0,10032,10031,10093,10,3425,3412,3415,0,9954,10055,10094,10,3415,3440,3425,0,10095,10001,10041,10,3450,3451,3452,0,10096,10097,10098,10,3453,3454,3455,0,10099,10100,10101,10,3450,3455,3454,0,10096,10102,10103,10,3455,3450,3452,0,10102,10096,10098,10,3455,3456,3453,0,10104,10105,10106,10,3457,3458,3459,0,10107,10108,10109,10,3460,3461,3462,0,10110,10111,10112,10,3463,3464,3459,0,10113,10114,10109,10,3463,3460,3462,0,10115,10116,10117,10,3465,3464,3462,0,10118,10119,10120,10,3459,3464,3465,0,10109,10114,10121,10,3450,3463,3459,0,10122,10123,10124,10,3459,3466,3450,0,10124,10125,10122,10,3454,3467,3460,0,10126,10127,10128,10,3452,3468,3457,0,10129,10130,10131,10,3469,3470,3455,0,10132,10133,10134,10,3459,3458,3466,0,10124,10135,10125,10,3471,3472,3473,0,10136,10137,10138,10,3473,3474,3475,0,10138,10139,10140,10,3475,3476,3471,0,10140,10141,10136,10,3477,3478,3479,0,10142,10143,10144,10,3479,3480,3481,0,10144,10145,10146,10,3481,3482,3477,0,10146,10147,10142,10,3471,3476,3483,0,10148,10149,10150,10,3484,3478,3477,0,10151,10152,10142,10,3471,3485,3452,0,10153,10154,10155,10,3452,3486,3471,0,10155,10156,10153,10,3477,3461,3456,0,10157,10158,10159,10,3456,3487,3477,0,10159,10160,10157,10,3488,3489,3490,0,10161,10162,10163,10,3491,3492,3493,0,10164,10165,10166,10,3494,3468,3492,0,10167,10168,10165,10,3495,3496,3497,0,10169,10170,10171,10,3486,3458,3457,0,10172,10173,10174,10,3470,3469,3462,0,10175,10176,10177,10,3462,3461,3477,0,10177,10178,10179,10,3498,3478,3496,0,10180,10181,10182,10,3496,3470,3498,0,10182,10183,10180,10,3468,3476,3486,0,10184,10185,10186,10,3473,3472,3486,0,10187,10188,10186,10,3486,3476,3475,0,10186,10189,10190,10,3486,3475,3474,0,10186,10190,10191,10,3498,3481,3480,0,10180,10192,10193,10,3479,3478,3498,0,10194,10181,10180,10,3498,3482,3481,0,10180,10195,10192,10,3458,3472,3466,0,10196,10197,10198,10,3467,3482,3461,0,10199,10200,10201,10,3494,3476,3468,0,10202,10203,10204,10,3496,3478,3499,0,10205,10206,10207,10,3500,3476,3494,0,10208,10209,10210,10,3501,3490,3502,0,10211,10212,10213,10,3503,3500,3492,0,10214,10215,10216,10,3485,3483,3504,0,10217,10218,10219,10,3488,3484,3487,0,10220,10221,10222,10,3505,3506,3493,0,10223,10224,10225,10,3493,3489,3495,0,10226,10227,10228,10,3493,3492,3507,0,10166,10165,10229,10,3495,3497,3508,0,10169,10171,10230,10,3485,3504,3509,0,10231,10232,10233,10,3489,3488,3487,0,10227,10220,10234,10,3496,3495,3489,0,10235,10228,10227,10,3507,3492,3468,0,10229,10165,10168,10,3468,3485,3507,0,10168,10236,10229,10,3456,3470,3496,0,10237,10133,10238,10,3496,3487,3456,0,10238,10239,10237,10,3468,3452,3485,0,10240,10241,10242,10,3486,3472,3471,0,10243,10244,10245,10,3477,3482,3498,0,10246,10247,10248,10,3451,3510,3458,0,10249,10250,10251,10,3458,3510,3511,0,10251,10252,10253,10,3458,3511,3472,0,10251,10253,10254,10,3453,3461,3482,0,10255,10256,10257,10,3512,3513,3453,0,10258,10259,10255,10,3458,3452,3451,0,10260,10261,10262,10,3456,3461,3453,0,10263,10264,10255,10,3504,3483,3514,0,10265,10266,10267,10,3484,3488,3490,0,10268,10269,10270,10,3499,3502,3497,0,10271,10272,10273,10,3499,3497,3496,0,10271,10273,10274,10,3494,3492,3500,0,10275,10276,10277,10,3466,3451,3450,0,10278,10279,10280,10,3454,3453,3467,0,10281,10282,10283,10,3503,3492,3514,0,10214,10216,10284,10,3502,3490,3497,0,10285,10286,10287,10,3483,3503,3514,0,10150,10288,10289,10,3501,3484,3490,0,10290,10151,10291,10,3500,3503,3483,0,10208,10292,10150,10,3501,3499,3478,0,10293,10294,10295,10,3515,3516,3497,0,10296,10297,10298,10,3505,3509,3492,0,10299,10300,10216,10,3492,3509,3514,0,10216,10301,10284,10,3490,3489,3497,0,10302,10303,10298,10,3466,3510,3451,0,10278,10304,10279,10,3453,3513,3467,0,10305,10306,10307,10,3466,3472,3511,0,10308,10309,10310,10,3511,3510,3466,0,10310,10304,10278,10,3512,3482,3467,0,10311,10312,10199,10,3467,3513,3512,0,10199,10313,10311,10,3505,3517,3506,0,10314,10315,10316,10,3518,3515,3517,0,10317,10318,10315,10,3516,3493,3508,0,10319,10166,10230,10,3491,3516,3517,0,10320,10321,10322,10,3517,3516,3519,0,10322,10321,10323,10,3516,3515,3518,0,10324,10296,10325,10,3456,3455,3470,0,10237,10134,10133,10,3452,3465,3455,0,10129,10326,10134,10,3463,3462,3464,0,10115,10117,10327,10,3465,3462,3469,0,10118,10120,10328,10,3457,3459,3465,0,10329,10109,10121,10,3463,3454,3460,0,10330,10331,10332,10,3454,3463,3450,0,10331,10330,10333,10,3465,3452,3457,0,10326,10129,10131,10,3465,3469,3455,0,10326,10132,10134,10,3461,3460,3467,0,10334,10128,10127,10,3471,3473,3475,0,10136,10138,10140,10,3477,3479,3481,0,10142,10144,10146,10,3483,3485,3471,0,10335,10336,10337,10,3477,3487,3484,0,10338,10222,10339,10,3452,3458,3486,0,10155,10340,10156,10,3509,3504,3514,0,10301,10341,10342,10,3489,3506,3515,0,10343,10316,10344,10,3457,3468,3486,0,10174,10184,10172,10,3470,3462,3477,0,10175,10177,10179,10,3470,3477,3498,0,10175,10179,10345,10,3473,3486,3474,0,10187,10186,10191,10,3479,3498,3480,0,10194,10180,10193,10,3502,3499,3501,0,10346,10207,10347,10,3507,3505,3493,0,10348,10223,10225,10,3493,3506,3489,0,10226,10349,10227,10,3495,3508,3493,0,10169,10230,10350,10,3505,3485,3509,0,10223,10231,10233,10,3485,3505,3507,0,10231,10223,10348,10,3496,3489,3487,0,10235,10227,10234,10,3512,3453,3482,0,10258,10255,10257,10,3500,3483,3476,0,10208,10150,10209,10,3484,3501,3478,0,10151,10293,10295,10,3489,3515,3497,0,10351,10296,10298,10,3491,3505,3492,0,10352,10299,10216,10,3505,3491,3517,0,10299,10352,10353,10,3497,3516,3508,0,10298,10297,10354,10,3517,3515,3506,0,10315,10318,10316,10,3516,3491,3493,0,10319,10164,10166,10,3520,3518,3519,0,10355,10356,10357,10,3520,3519,3516,0,10358,10359,10360,10,3518,3517,3519,0,10361,10362,10363,10,3516,3518,3520,0,10364,10365,10366,10,3521,3511,3510,0,10367,10368,10252,10,3521,3472,3511,0,10367,10369,10368,10,3521,3473,3472,0,10367,10370,10369,10,3473,3521,3474,0,10370,10367,10371,10,3512,3482,3522,0,10372,10373,10374,10,3522,3481,3480,0,10374,10375,10376,10,3512,3522,3513,0,10372,10374,10377,10,3523,3522,3480,0,10378,10374,10376,10,3481,3522,3482,0,10375,10374,10373,10,3475,3474,3524,0,10379,10380,10381,10,3475,3525,3476,0,10379,10382,10383,10,3525,3475,3524,0,10382,10379,10381,10,3526,3480,3479,0,10384,10145,10385,10,3526,3479,3478,0,10384,10385,10152,10,3527,3528,3529,0,10386,10387,10388,10,3530,3531,3528,0,10389,10390,10391,10,3527,3532,3533,0,10392,10393,10394,10,3533,3528,3527,0,10394,10395,10392,10,3532,3527,3534,0,10396,10397,10398,10,3532,3534,3535,0,10399,10400,10401,10,3536,3537,3538,0,10402,10403,10404,10,3539,3540,3541,0,10405,10406,10407,10,3539,3542,3543,0,10408,10409,10410,10,3537,3543,3542,0,10403,10411,10412,10,3538,3542,3544,0,10413,10414,10415,10,3544,3542,3541,0,10415,10414,10416,10,3537,3542,3538,0,10403,10412,10404,10,3539,3543,3545,0,10417,10418,10419,10,3537,3533,3545,0,10420,10421,10419,10,3544,3527,3529,0,10422,10423,10388,10,3544,3546,3534,0,10424,10425,10426,10,3544,3541,3546,0,10424,10427,10425,10,3547,3548,3535,0,10428,10429,10430,10,3549,3550,3551,0,10431,10432,10433,10,3549,3552,3553,0,10434,10435,10436,10,3554,3555,3556,0,10437,10438,10439,10,3550,3557,3551,0,10440,10441,10442,10,3558,3546,3559,0,10443,10444,10445,10,3551,3557,3531,0,10442,10441,10446,10,3546,3547,3535,0,10447,10448,10449,10,3546,3535,3534,0,10447,10449,10450,10,3560,3561,3562,0,10451,10452,10453,10,3563,3564,3565,0,10454,10455,10456,10,3536,3538,3529,0,10457,10458,10459,10,3565,3541,3540,0,10460,10461,10462,10,3551,3529,3566,0,10463,10464,10465,10,3555,3567,3565,0,10466,10467,10468,10,3566,3529,3553,0,10469,10470,10471,10,3567,3554,3556,0,10472,10473,10474,10,3536,3568,3569,0,10475,10476,10477,10,3570,3571,3559,0,10478,10479,10480,10,3572,3557,3550,0,10481,10482,10483,10,3559,3546,3560,0,10445,10444,10484,10,3573,3574,3575,0,10485,10486,10487,10,3575,3576,3573,0,10487,10488,10485,10,3577,3574,3573,0,10489,10490,10491,10,3574,3578,3575,0,10492,10493,10494,10,3564,3574,3577,0,10455,10495,10496,10,3575,3572,3576,0,10497,10498,10488,10,3579,3557,3575,0,10499,10500,10494,10,3575,3578,3579,0,10494,10493,10499,10,3579,3529,3557,0,10499,10501,10500,10,3565,3564,3577,0,10502,10503,10504,10,3577,3560,3546,0,10505,10484,10444,10,3529,3528,3557,0,10506,10507,10508,10,3546,3541,3565,0,10509,10510,10511,10,3546,3565,3577,0,10444,10512,10505,10,3531,3536,3551,0,10513,10514,10515,10,3558,3540,3547,0,10516,10517,10518,10,3531,3530,3580,0,10519,10520,10521,10,3581,3568,3531,0,10522,10523,10519,10,3547,3582,3583,0,10524,10525,10526,10,3547,3583,3548,0,10524,10526,10527,10,3531,3568,3536,0,10528,10529,10475,10,3540,3582,3547,0,10530,10531,10524,10,3562,3570,3559,0,10532,10533,10534,10,3553,3529,3579,0,10535,10536,10537,10,3567,3556,3571,0,10538,10539,10540,10,3571,3563,3565,0,10540,10541,10542,10,3584,3553,3579,0,10543,10535,10537,10,3569,3530,3533,0,10544,10545,10546,10,3585,3586,3579,0,10547,10548,10549,10,3585,3579,3576,0,10547,10549,10550,10,3563,3571,3570,0,10551,10552,10553,10,3585,3550,3553,0,10554,10555,10556,10,3587,3573,3576,0,10557,10558,10550,10,3588,3589,3590,0,10559,10560,10561,10,3590,3561,3588,0,10562,10563,10559,10,3587,3576,3578,0,10564,10565,10566,10,3590,3589,3564,0,10562,10567,10568,10,3590,3564,3563,0,10562,10568,10569,10,3553,3550,3549,0,10570,10571,10431,10,3555,3559,3556,0,10572,10573,10574,10,3581,3580,3569,0,10575,10576,10577,10,3540,3583,3582,0,10578,10579,10580,10,3540,3548,3583,0,10578,10581,10579,10,3569,3580,3530,0,10582,10583,10545,10,3535,3548,3540,0,10430,10429,10584,10,3591,3588,3587,0,10585,10586,10587,10,3561,3573,3587,0,10588,10558,10587,10,3574,3592,3578,0,10589,10590,10591,10,3592,3574,3564,0,10592,10589,10593,10,3591,3578,3592,0,10594,10566,10595,10,3593,3592,3589,0,10596,10597,10567,10,3534,3527,3544,0,10598,10423,10599,10,3530,3528,3533,0,10600,10395,10601,10,3535,3545,3532,0,10602,10603,10396,10,3532,3545,3533,0,10396,10603,10604,10,3541,3542,3539,0,10605,10409,10408,10,3533,3537,3569,0,10606,10607,10608,10,3539,3545,3540,0,10417,10419,10609,10,3537,3545,3543,0,10420,10419,10418,10,3538,3544,3529,0,10610,10422,10388,10,3569,3537,3536,0,10544,10607,10611,10,3552,3549,3566,0,10612,10434,10613,10,3555,3554,3567,0,10614,10615,10616,10,3566,3549,3551,0,10617,10431,10433,10,3559,3555,3558,0,10618,10572,10619,10,3547,3546,3558,0,10620,10621,10622,10,3557,3528,3531,0,10623,10624,10625,10,3550,3576,3572,0,10626,10550,10627,10,3560,3562,3559,0,10451,10453,10628,10,3551,3536,3529,0,10629,10457,10459,10,3558,3565,3540,0,10630,10460,10462,10,3555,3565,3558,0,10466,10468,10631,10,3566,3553,3552,0,10469,10471,10632,10,3561,3577,3573,0,10633,10489,10491,10,3561,3560,3577,0,10633,10484,10505,10,3572,3575,3557,0,10498,10497,10441,10,3581,3531,3580,0,10522,10519,10521,10,3550,3585,3576,0,10634,10635,10636,10,3565,3567,3571,0,10542,10538,10540,10,3586,3584,3579,0,10637,10543,10537,10,3545,3535,3540,0,10638,10639,10640,10,3570,3562,3563,0,10553,10453,10551,10,3585,3584,3586,0,10547,10641,10548,10,3584,3585,3553,0,10642,10554,10556,10,3556,3559,3571,0,10574,10618,10643,10,3562,3590,3563,0,10644,10562,10569,10,3590,3562,3561,0,10562,10644,10563,10,3579,3578,3576,0,10549,10645,10550,10,3581,3569,3568,0,10575,10577,10646,10,3561,3587,3588,0,10588,10587,10586,10,3589,3592,3564,0,10647,10592,10593,10,3591,3587,3578,0,10585,10587,10648,10,3593,3588,3591,0,10649,10650,10651,10,3589,3588,3593,0,10567,10652,10596,10,3592,3593,3591,0,10653,10654,10655,10,3594,3580,3595,0,10656,10657,10658,10,3595,3552,3594,0,10658,10435,10656,10,3594,3552,3568,0,10659,10660,10661,10,3581,3580,3594,0,10662,10663,10659,10,3595,3580,3581,0,10664,10665,10666,10,3581,3568,3552,0,10666,10667,10668,10,3581,3594,3568,0,10662,10659,10661,10,3552,3595,3581,0,10668,10664,10666,10,3596,3548,3597,0,10669,10670,10671,10,3597,3554,3596,0,10671,10672,10669,10,3597,3583,3582,0,10671,10673,10674,10,3597,3548,3583,0,10671,10670,10673,10,3554,3582,3583,0,10675,10676,10677,10,3583,3548,3596,0,10677,10678,10679,10,3554,3597,3582,0,10672,10671,10674,10,3596,3554,3583,0,10679,10675,10677,10,3598,3599,3600,0,10680,10681,10682,10,3601,3602,3599,0,10683,10684,10685,10,3603,3600,3604,0,10686,10687,10688,10,3600,3602,3604,0,10689,10690,10691,10,3599,3602,3600,0,10692,10693,10694,10,3600,3605,3606,0,10687,10695,10696,10,3607,3608,3609,0,10697,10698,10699,10,3609,3608,3610,0,10700,10701,10702,10,3611,3608,3607,0,10703,10704,10705,10,3607,3612,3611,0,10705,10706,10703,10,3610,3608,3613,0,10707,10708,10709,10,3609,3610,3604,0,10710,10711,10712,10,3610,3603,3604,0,10713,10714,10712,10,3611,3606,3614,0,10715,10716,10717,10,3615,3598,3612,0,10718,10719,10720,10,3611,3612,3606,0,10721,10722,10723,10,3601,3616,3602,0,10724,10725,10726,10,3617,3618,3619,0,10727,10728,10729,10,3619,3620,3621,0,10729,10730,10731,10,3622,3623,3616,0,10732,10733,10734,10,3624,3625,3622,0,10735,10736,10732,10,3627,3628,3626,0,10737,10738,10739,10,3629,3630,3631,0,10740,10741,10742,10,3632,3614,3626,0,10743,10744,10745,10,3633,3634,3629,0,10746,10747,10748,10,3626,3628,3635,0,10739,10738,10749,10,3636,3630,3629,0,10750,10751,10752,10,3637,3632,3638,0,10753,10754,10755,10,3601,3598,3639,0,10756,10757,10758,10,3637,3640,3632,0,10753,10759,10754,10,3605,3640,3637,0,10760,10761,10762,10,3641,3642,3639,0,10763,10764,10765,10,3643,3644,3645,0,10766,10767,10768,10,3614,3632,3621,0,10769,10770,10771,10,3615,3612,3607,0,10772,10773,10774,10,3615,3607,3624,0,10772,10774,10775,10,3624,3601,3615,0,10775,10776,10772,10,3633,3615,3601,0,10777,10778,10779,10,3614,3646,3647,0,10780,10781,10782,10,3615,3633,3636,0,10778,10777,10783,10,3614,3647,3635,0,10784,10785,10786,10,3635,3628,3627,0,10786,10787,10788,10,3614,3627,3626,0,10784,10788,10789,10,3627,3620,3626,0,10788,10790,10789,10,3631,3630,3636,0,10791,10792,10793,10,3633,3629,3631,0,10794,10795,10791,10,3629,3625,3631,0,10795,10796,10791,10,3621,3620,3613,0,10797,10798,10799,10,3648,3625,3624,0,10800,10801,10802,10,3647,3649,3650,0,10803,10804,10805,10,3651,3636,3652,0,10806,10807,10808,10,3650,3649,3653,0,10809,10810,10811,10,3654,3652,3642,0,10812,10813,10764,10,3637,3638,3655,0,10753,10814,10815,10,3643,3656,3657,0,10816,10817,10818,10,3657,3644,3643,0,10818,10819,10816,10,3658,3656,3643,0,10820,10821,10822,10,3659,3658,3660,0,10823,10820,10824,10,3659,3656,3658,0,10823,10821,10820,10,3657,3656,3646,0,10825,10826,10827,10,3644,3657,3637,0,10819,10828,10753,10,3598,3658,3641,0,10829,10830,10831,10,3658,3615,3660,0,10832,10778,10833,10,3621,3632,3640,0,10834,10835,10836,10,3640,3617,3621,0,10837,10838,10797,10,3624,3616,3601,0,10839,10840,10841,10,3608,3621,3613,0,10842,10797,10799,10,3607,3609,3648,0,10843,10844,10845,10,3655,3638,3653,0,10846,10847,10848,10,3642,3634,3639,0,10849,10850,10851,10,3660,3636,3651,0,10852,10853,10854,10,3613,3640,3603,0,10709,10855,10856,10,3604,3602,3648,0,10857,10858,10859,10,3649,3646,3653,0,10860,10861,10862,10,3652,3654,3660,0,10813,10812,10863,10,3653,3638,3650,0,10864,10865,10805,10,3652,3634,3642,0,10808,10866,10867,10,3650,3638,3626,0,10805,10865,10868,10,3636,3634,3652,0,10869,10866,10808,10,3645,3644,3646,0,10768,10870,10861,10,3659,3660,3654,0,10871,10872,10873,10,3654,3642,3641,0,10873,10874,10875,10,3635,3647,3626,0,10749,10876,10739,10,3613,3618,3617,0,10709,10877,10878,10,3616,3623,3648,0,10725,10879,10880,10,3619,3618,3613,0,10881,10877,10709,10,3648,3622,3625,0,10800,10882,10883,10,3648,3623,3622,0,10800,10884,10882,10,3645,3661,3662,0,10885,10886,10887,10,3662,3641,3643,0,10887,10888,10889,10,3659,3663,3656,0,10890,10891,10892,10,3664,3663,3654,0,10893,10894,10895,10,3656,3663,3664,0,10896,10897,10898,10,3664,3661,3645,0,10898,10899,10900,10,3605,3603,3640,0,10695,10901,10902,10,3600,3603,3605,0,10687,10686,10695,10,3603,3610,3613,0,10903,10707,10709,10,3609,3604,3648,0,10710,10712,10904,10,3598,3600,3606,0,10905,10906,10907,10,3598,3606,3612,0,10905,10907,10908,10,3617,3619,3621,0,10727,10729,10731,10,3616,3624,3622,0,10734,10735,10732,10,3632,3626,3638,0,10743,10745,10909,10,3634,3633,3601,0,10747,10746,10910,10,3601,3639,3634,0,10756,10758,10911,10,3598,3601,3599,0,10912,10913,10914,10,3608,3614,3621,0,10915,10769,10771,10,3614,3608,3611,0,10769,10915,10916,10,3660,3615,3636,0,10833,10778,10783,10,3614,3635,3627,0,10784,10786,10788,10,3633,3631,3636,0,10794,10791,10793,10,3641,3658,3643,0,10917,10820,10822,10,3637,3657,3646,0,10918,10825,10827,10,3655,3644,3637,0,10815,10819,10753,10,3598,3641,3639,0,10829,10831,10758,10,3637,3606,3605,0,10919,10920,10921,10,3637,3614,3606,0,10919,10922,10920,10,3614,3637,3646,0,10923,10919,10924,10,3615,3658,3598,0,10778,10832,10925,10,3624,3607,3648,0,10926,10843,10845,10,3644,3655,3653,0,10927,10846,10848,10,3649,3647,3646,0,10928,10929,10930,10,3651,3652,3660,0,10931,10813,10863,10,3650,3626,3647,0,10805,10868,10932,10,3662,3654,3641,0,10933,10873,10875,10,3656,3645,3646,0,10896,10934,10935,10,3644,3653,3646,0,10870,10862,10861,10,3629,3634,3636,0,10748,10747,10936,10,3617,3640,3613,0,10878,10855,10709,10,3616,3648,3602,0,10725,10880,10726,10,3619,3613,3620,0,10881,10709,10937,10,3645,3662,3643,0,10885,10887,10889,10,3664,3662,3661,0,10893,10938,10939,10,3662,3664,3654,0,10938,10893,10895,10,3656,3664,3645,0,10896,10898,10900,10,3659,3654,3663,0,10940,10895,10894,10,3665,3627,3620,0,10941,10942,10730,10,3619,3618,3665,0,10729,10728,10941,10,3619,3665,3620,0,10729,10941,10730,10,3627,3665,3628,0,10942,10941,10738,10,3666,3631,3630,0,10943,10944,10741,10,3666,3623,3622,0,10943,10733,10732,10,3666,3622,3625,0,10943,10732,10736,10,3631,3666,3625,0,10944,10943,10736,10,3667,3663,3664,0,10945,10946,10947,10,3667,3664,3661,0,10945,10947,10948,10,3664,3663,3668,0,10949,10950,10951,10,3668,3661,3664,0,10951,10952,10949,10,3667,3661,3668,0,10953,10954,10955,10,3668,3663,3667,0,10956,10957,10958,10,3669,3670,3671,0,10959,10960,10961,10,3672,3673,3674,0,10962,10963,10964,10,3674,3673,3675,0,10965,10966,10967,10,3676,3677,3678,0,10968,10969,10970,10,3678,3677,3675,0,10971,10972,10973,10,3674,3677,3679,0,10964,10974,10975,10,3675,3677,3674,0,10973,10972,10965,10,3680,3678,3675,0,10976,10977,10978,10,3676,3678,3680,0,10979,10980,10981,10,3676,3680,3681,0,10979,10981,10982,10,3679,3670,3672,0,10983,10984,10985,10,3682,3683,3679,0,10986,10987,10988,10,3671,3679,3683,0,10989,10990,10991,10,3684,3685,3669,0,10992,10993,10994,10,3686,3687,3681,0,10995,10996,10997,10,3685,3688,3689,0,10998,10999,11000,10,3690,3689,3691,0,11001,11000,11002,10,3692,3693,3694,0,11003,11004,11005,10,3670,3685,3690,0,11006,11007,11008,10,3695,3696,3694,0,11009,11010,11011,10,3694,3687,3686,0,11012,11013,11014,10,3697,3686,3683,0,11015,11014,11016,10,3698,3699,3700,0,11017,11018,11019,10,3701,3702,3698,0,11020,11021,11022,10,3672,3688,3673,0,11023,11024,11025,10,3677,3703,3687,0,11026,11027,11028,10,3687,3693,3682,0,11028,11029,11030,10,3689,3688,3672,0,11031,11032,11033,10,3682,3692,3704,0,11034,11035,11036,10,3682,3693,3692,0,11034,11037,11035,10,3673,3705,3706,0,11038,11039,11040,10,3681,3707,3703,0,11041,11042,11043,10,3708,3670,3690,0,11044,11006,11045,10,3709,3698,3710,0,11046,11047,11048,10,3710,3711,3709,0,11048,11049,11046,10,3709,3708,3699,0,11050,11044,11051,10,3712,3709,3711,0,11052,11046,11049,10,3713,3714,3715,0,11053,11054,11055,10,3702,3695,3697,0,11056,11057,11058,10,3672,3709,3712,0,11059,11060,11061,10,3672,3670,3709,0,11059,11062,11060,10,3713,3697,3682,0,11063,11064,11065,10,3687,3694,3693,0,11066,11067,11068,10,3684,3705,3673,0,11069,11039,11038,10,3673,3685,3684,0,11038,11070,11069,10,3687,3707,3681,0,11071,11072,11073,10,3703,3707,3687,0,11074,11075,11071,10,3675,3673,3706,0,11076,11038,11040,10,3703,3676,3681,0,11077,11078,11079,10,3708,3690,3716,0,11080,11081,11082,10,3712,3691,3672,0,11083,11084,11085,10,3682,3704,3714,0,11086,11087,11088,10,3717,3691,3712,0,11089,11090,11083,10,3714,3704,3718,0,11088,11091,11092,10,3706,3669,3680,0,11093,11094,11095,10,3680,3686,3681,0,11096,11097,11098,10,3712,3699,3716,0,11099,11100,11101,10,3690,3691,3717,0,11102,11103,11104,10,3718,3704,3696,0,11105,11106,11107,10,3700,3699,3711,0,11108,11109,11110,10,3719,3701,3715,0,11111,11112,11113,10,3719,3714,3720,0,11114,11115,11116,10,3711,3699,3712,0,11117,11118,11119,10,3684,3669,3706,0,11120,11094,11093,10,3706,3705,3684,0,11121,11122,11120,10,3701,3698,3700,0,11123,11124,11125,10,3711,3710,3721,0,11049,11126,11127,10,3721,3710,3715,0,11127,11126,11128,10,3722,3721,3701,0,11129,11130,11131,10,3721,3700,3711,0,11132,11133,11134,10,3701,3721,3715,0,11135,11136,11113,10,3722,3701,3723,0,11137,11138,11139,10,3670,3669,3685,0,11140,11141,11142,10,3683,3680,3671,0,11143,11144,11145,10,3680,3683,3686,0,11144,11143,11146,10,3671,3680,3669,0,10961,11147,10959,10,3674,3679,3672,0,10964,10975,10962,10,3676,3703,3677,0,10968,11148,10969,10,3706,3680,3675,0,11093,10976,10978,10,3682,3679,3677,0,10986,10988,11149,10,3679,3671,3670,0,11150,11151,11152,10,3690,3685,3689,0,11001,10998,11000,10,3692,3696,3704,0,11003,11153,11154,10,3696,3692,3694,0,11153,11003,11005,10,3695,3694,3697,0,11009,11011,11155,10,3697,3694,3686,0,11015,11012,11014,10,3719,3695,3702,0,11156,11157,11158,10,3677,3687,3682,0,11026,11028,11030,10,3689,3672,3691,0,11031,11033,11159,10,3698,3709,3699,0,11160,11161,11051,10,3698,3702,3713,0,11162,11163,11053,10,3715,3710,3698,0,11055,11164,11165,10,3715,3698,3713,0,11055,11165,11053,10,3714,3713,3682,0,11054,11053,11166,10,3708,3709,3670,0,11044,11050,11167,10,3713,3702,3697,0,11168,11056,11058,10,3697,3683,3682,0,11169,11170,11171,10,3685,3673,3688,0,11172,11173,11174,10,3708,3716,3699,0,11080,11082,11175,10,3695,3719,3696,0,11176,11177,11178,10,3720,3696,3719,0,11179,11178,11177,10,3718,3720,3714,0,11180,11181,11182,10,3717,3712,3716,0,11183,11099,11101,10,3690,3717,3716,0,11102,11104,11184,10,3718,3696,3720,0,11105,11107,11185,10,3701,3719,3702,0,11112,11114,11186,10,3715,3714,3719,0,11113,11115,11111,10,3723,3701,3700,0,11187,11123,11125,10,3722,3700,3721,0,11188,11133,11132,10,3700,3722,3723,0,11133,11188,11189,10,3705,3689,3688,0,11190,11191,11192,10,3689,3705,3691,0,11191,11190,11193,10,3707,3692,3704,0,11194,11195,11196,10,3692,3707,3693,0,11195,11194,11197,10,3724,3725,3726,0,11198,11199,11200,10,3727,3728,3729,0,11201,11202,11203,10,3725,3729,3730,0,11204,11205,11206,10,3726,3725,3731,0,11207,11208,11209,10,3732,3733,3734,0,11210,11211,11212,10,3735,3736,3737,0,11213,11214,11215,10,3738,3733,3735,0,11216,11217,11218,10,3734,3738,3737,0,11219,11220,11221,10,3734,3737,3739,0,11219,11221,11222,10,3737,3738,3735,0,11215,11223,11213,10,3735,3733,3740,0,11224,11225,11226,10,3739,3728,3741,0,11227,11228,11229,10,3742,3726,3737,0,11230,11231,11232,10,3737,3730,3728,0,11233,11234,11235,10,3731,3730,3737,0,11236,11237,11238,10,3729,3743,3727,0,11239,11240,11241,10,3724,3744,3725,0,11242,11243,11244,10,3745,3746,3727,0,11245,11246,11247,10,3724,3747,3744,0,11248,11249,11250,10,3748,3749,3747,0,11251,11252,11249,10,3750,3751,3752,0,11253,11254,11255,10,3750,3752,3753,0,11253,11255,11256,10,3754,3755,3748,0,11257,11258,11259,10,3756,3757,3750,0,11260,11261,11262,10,3728,3757,3756,0,11263,11264,11260,10,3758,3748,3726,0,11265,11266,11267,10,3759,3760,3761,0,11268,11269,11270,10,3762,3739,3741,0,11271,11272,11273,10,3742,3737,3736,0,11274,11275,11276,10,3736,3755,3742,0,11276,11277,11274,10,3762,3741,3753,0,11278,11279,11280,10,3762,3752,3751,0,11278,11281,11282,10,3742,3754,3763,0,11283,11284,11285,10,3764,3749,3736,0,11286,11287,11288,10,3756,3750,3765,0,11289,11290,11291,10,3761,3766,3767,0,11292,11293,11294,10,3768,3769,3770,0,11295,11296,11297,10,3768,3766,3761,0,11295,11298,11299,10,3771,3767,3766,0,11300,11301,11302,10,3772,3770,3773,0,11303,11297,11304,10,3756,3774,3759,0,11305,11306,11307,10,3759,3767,3756,0,11308,11309,11305,10,3773,3770,3742,0,11304,11297,11310,10,3742,3770,3769,0,11311,11312,11296,10,3769,3775,3758,0,11296,11313,11314,10,3742,3758,3726,0,11315,11316,11317,10,3767,3741,3756,0,11318,11319,11320,10,3757,3732,3762,0,11321,11322,11323,10,3757,3762,3751,0,11321,11323,11324,10,3727,3746,3757,0,11325,11326,11327,10,3757,3746,3732,0,11327,11328,11329,10,3736,3749,3748,0,11330,11331,11332,10,3765,3776,3774,0,11333,11334,11335,10,3777,3778,3769,0,11336,11337,11338,10,3779,3753,3741,0,11339,11340,11341,10,3742,3763,3780,0,11342,11343,11344,10,3725,3764,3740,0,11345,11346,11347,10,3776,3779,3771,0,11348,11349,11350,10,3777,3769,3773,0,11351,11352,11353,10,3765,3750,3776,0,11354,11253,11355,10,3777,3780,3778,0,11356,11357,11358,10,3776,3750,3753,0,11355,11253,11359,10,3778,3780,3763,0,11358,11360,11361,10,3769,3768,3781,0,11362,11363,11364,10,3782,3783,3760,0,11365,11366,11367,10,3773,3769,3772,0,11368,11362,11369,10,3729,3732,3746,0,11370,11371,11372,10,3745,3743,3729,0,11373,11374,11370,10,3725,3747,3749,0,11375,11376,11377,10,3725,3744,3747,0,11375,11378,11376,10,3782,3766,3772,0,11379,11380,11381,10,3772,3783,3782,0,11381,11382,11379,10,3784,3785,3781,0,11383,11384,11385,10,3785,3783,3781,0,11386,11387,11388,10,3728,3727,3757,0,11389,11390,11391,10,3724,3726,3748,0,11198,11200,11392,10,3725,3740,3729,0,11204,11393,11205,10,3730,3729,3728,0,11394,11395,11202,10,3731,3725,3730,0,11396,11204,11206,10,3732,3739,3762,0,11397,11222,11398,10,3739,3732,3734,0,11222,11397,11219,10,3733,3738,3734,0,11211,11399,11212,10,3733,3729,3740,0,11400,11370,11401,10,3729,3733,3732,0,11370,11400,11402,10,3735,3740,3764,0,11224,11226,11403,10,3739,3737,3728,0,11404,11233,11235,10,3726,3731,3737,0,11405,11236,11238,10,3745,3727,3743,0,11245,11247,11406,10,3724,3748,3747,0,11248,11251,11249,10,3754,3778,3763,0,11257,11358,11407,10,3778,3754,3748,0,11358,11257,11259,10,3748,3758,3778,0,11408,11409,11410,10,3759,3774,3776,0,11411,11412,11413,10,3752,3762,3753,0,11281,11278,11280,10,3754,3742,3755,0,11284,11283,11414,10,3765,3774,3756,0,11291,11306,11289,10,3775,3778,3758,0,11313,11410,11409,10,3759,3761,3767,0,11307,11292,11294,10,3766,3768,3770,0,11298,11295,11297,10,3782,3771,3766,0,11415,11300,11302,10,3772,3766,3770,0,11303,11298,11297,10,3742,3769,3758,0,11311,11296,11314,10,3756,3741,3728,0,11416,11319,11417,10,3741,3767,3771,0,11319,11318,11418,10,3750,3757,3751,0,11419,11321,11324,10,3736,3748,3755,0,11420,11421,11422,10,3736,3735,3764,0,11423,11424,11425,10,3769,3778,3775,0,11338,11337,11426,10,3779,3741,3771,0,11339,11341,11427,10,3742,3780,3773,0,11342,11344,11428,10,3780,3777,3773,0,11429,11430,11368,10,3779,3776,3753,0,11431,11355,11359,10,3782,3759,3771,0,11365,11432,11433,10,3759,3782,3760,0,11432,11365,11367,10,3759,3776,3771,0,11432,11434,11433,10,3745,3729,3746,0,11373,11370,11372,10,3764,3725,3749,0,11435,11375,11377,10,3761,3760,3781,0,11436,11437,11438,10,3768,3761,3781,0,11439,11436,11438,10,3769,3781,3772,0,11440,11364,11441,10,3784,3781,3760,0,11442,11443,11444,10,3783,3772,3781,0,11445,11441,11364,10,3760,3783,3784,0,11446,11447,11448,10,3784,3783,3785,0,11449,11450,11451,10,3786,3787,3746,0,11452,11453,11246,10,3745,3743,3786,0,11454,11455,11452,10,3786,3753,3752,0,11452,11456,11457,10,3787,3752,3751,0,11453,11457,11458,10,3788,3753,3786,0,11459,11456,11452,10,3788,3787,3751,0,11460,11461,11462,10,3752,3753,3788,0,11463,11464,11460,10,3788,3743,3745,0,11465,11466,11467,10,3788,3745,3746,0,11465,11467,11468,10,3786,3743,3788,0,11469,11470,11471,10,3745,3786,3746,0,11454,11452,11246,10,3787,3786,3752,0,11453,11452,11457,10,3752,3788,3751,0,11463,11460,11462,10,3787,3788,3746,0,11472,11465,11468,10,3789,3744,3747,0,11473,11474,11475,10,3789,3747,3749,0,11473,11475,11476,10,3754,3763,3789,0,11477,11478,11473,10,3789,3749,3790,0,11473,11479,11480,10,3789,3790,3755,0,11473,11480,11481,10,3789,3763,3791,0,11482,11483,11484,10,3791,3763,3754,0,11485,11486,11487,10,3790,3754,3755,0,11488,11487,11489,10,3791,3790,3749,0,11490,11491,11492,10,3747,3744,3791,0,11493,11494,11490,10,3791,3744,3789,0,11484,11495,11482,10,3754,3789,3755,0,11477,11473,11481,10,3790,3791,3754,0,11488,11485,11487,10,3747,3791,3749,0,11493,11490,11492,10,3792,3793,3794,0,11496,11497,11498,10,3795,3796,3797,0,11499,11500,11501,10,3792,3794,3798,0,11496,11498,11502,10,3797,3799,3792,0,11503,11504,11505,10,3800,3801,3802,0,11506,11507,11508,10,3803,3802,3801,0,11509,11510,11511,10,3804,3801,3805,0,11512,11513,11514,10,3806,3801,3804,0,11515,11513,11512,10,3805,3801,3800,0,11514,11513,11516,10,3803,3801,3806,0,11517,11518,11519,10,3793,3802,3803,0,11520,11521,11522,10,3806,3794,3793,0,11523,11524,11520,10,3802,3793,3799,0,11525,11526,11527,10,3796,3795,3804,0,11528,11529,11530,10,3807,3808,3809,0,11531,11532,11533,10,3809,3810,3811,0,11533,11534,11535,10,3812,3813,3814,0,11536,11537,11538,10,3814,3815,3812,0,11538,11539,11536,10,3816,3817,3818,0,11540,11541,11542,10,3818,3819,3816,0,11542,11543,11540,10,3816,3798,3794,0,11544,11545,11546,10,3794,3817,3816,0,11546,11547,11544,10,3820,3821,3822,0,11548,11549,11550,10,3823,3824,3825,0,11551,11552,11553,10,3826,3827,3828,0,11554,11555,11556,10,3829,3830,3831,0,11557,11558,11559,10,3832,3833,3834,0,11560,11561,11562,10,3804,3834,3806,0,11563,11562,11564,10,3800,3835,3796,0,11565,11566,11567,10,3832,3836,3837,0,11568,11569,11570,10,3832,3837,3838,0,11568,11570,11571,10,3838,3833,3832,0,11571,11572,11568,10,3796,3839,3840,0,11573,11574,11575,10,3840,3830,3796,0,11575,11576,11573,10,3796,3835,3839,0,11573,11577,11574,10,3841,3842,3843,0,11578,11579,11580,10,3844,3838,3837,0,11581,11582,11583,10,3828,3827,3845,0,11584,11585,11586,10,3829,3836,3845,0,11587,11588,11589,10,3830,3823,3822,0,11590,11591,11592,10,3795,3798,3816,0,11593,11594,11595,10,3822,3797,3796,0,11596,11597,11598,10,3832,3804,3795,0,11599,11600,11593,10,3828,3845,3816,0,11601,11602,11603,10,3822,3796,3830,0,11596,11598,11604,10,3838,3846,3807,0,11605,11606,11607,10,3812,3842,3839,0,11608,11609,11610,10,3846,3808,3807,0,11611,11612,11613,10,3812,3815,3843,0,11536,11614,11615,10,3822,3821,3799,0,11616,11617,11504,10,3847,3800,3802,0,11618,11619,11620,10,3848,3849,3819,0,11621,11622,11623,10,3837,3836,3849,0,11624,11625,11626,10,3837,3849,3844,0,11627,11628,11629,10,3825,3850,3851,0,11630,11631,11632,10,3807,3844,3849,0,11633,11634,11635,10,3825,3851,3839,0,11636,11637,11638,10,3839,3852,3825,0,11639,11640,11636,10,3826,3828,3836,0,11641,11642,11643,10,3836,3829,3826,0,11643,11644,11645,10,3830,3853,3831,0,11646,11647,11648,10,3846,3810,3809,0,11649,11650,11651,10,3809,3808,3846,0,11651,11652,11649,10,3843,3815,3814,0,11653,11654,11655,10,3814,3813,3841,0,11655,11656,11657,10,3811,3846,3854,0,11658,11659,11660,10,3855,3842,3841,0,11661,11662,11663,10,3841,3813,3812,0,11663,11664,11665,10,3811,3810,3846,0,11658,11666,11659,10,3824,3827,3826,0,11667,11555,11554,10,3826,3831,3853,0,11668,11669,11670,10,3826,3829,3856,0,11671,11672,11673,10,3829,3857,3856,0,11672,11674,11673,10,3856,3858,3831,0,11675,11676,11677,10,3831,3826,3856,0,11677,11678,11675,10,3857,3831,3858,0,11679,11680,11681,10,3859,3860,3861,0,11682,11683,11684,10,3795,3797,3798,0,11685,11686,11687,10,3859,3792,3798,0,11688,11689,11690,10,3797,3792,3859,0,11691,11692,11682,10,3818,3817,3838,0,11693,11694,11695,10,3818,3838,3807,0,11693,11695,11633,10,3820,3852,3839,0,11696,11697,11639,10,3838,3817,3862,0,11695,11694,11698,10,3838,3862,3833,0,11695,11698,11699,10,3863,3821,3820,0,11700,11701,11702,10,3854,3846,3838,0,11703,11704,11705,10,3840,3842,3855,0,11706,11707,11708,10,3807,3811,3854,0,11709,11710,11711,10,3855,3839,3851,0,11712,11713,11714,10,3834,3817,3794,0,11715,11716,11524,10,3799,3821,3800,0,11717,11718,11619,10,3862,3817,3834,0,11719,11716,11715,10,3800,3863,3835,0,11720,11721,11722,10,3800,3821,3863,0,11720,11723,11721,10,3799,3793,3792,0,11724,11725,11726,10,3806,3793,3803,0,11523,11520,11522,10,3847,3802,3799,0,11727,11525,11527,10,3805,3796,3804,0,11728,11528,11530,10,3811,3807,3809,0,11535,11531,11533,10,3839,3855,3812,0,11729,11730,11731,10,3820,3823,3852,0,11732,11733,11734,10,3823,3820,3822,0,11733,11732,11735,10,3828,3819,3849,0,11736,11737,11738,10,3804,3832,3834,0,11563,11560,11562,10,3805,3800,3796,0,11739,11565,11567,10,3850,3840,3851,0,11740,11741,11742,10,3823,3827,3824,0,11591,11743,11744,10,3827,3829,3845,0,11745,11587,11589,10,3829,3827,3830,0,11746,11743,11590,10,3827,3823,3830,0,11743,11591,11590,10,3816,3832,3795,0,11595,11599,11593,10,3828,3816,3819,0,11601,11603,11543,10,3832,3845,3836,0,11747,11748,11749,10,3845,3832,3816,0,11748,11747,11595,10,3812,3843,3842,0,11536,11615,11750,10,3799,3797,3822,0,11504,11751,11616,10,3818,3848,3819,0,11752,11621,11623,10,3852,3823,3825,0,11753,11754,11755,10,3840,3850,3830,0,11756,11757,11758,10,3825,3830,3850,0,11630,11759,11631,10,3807,3849,3848,0,11633,11635,11760,10,3849,3836,3828,0,11761,11643,11642,10,3825,3853,3830,0,11762,11647,11646,10,3853,3825,3824,0,11647,11762,11763,10,3841,3843,3814,0,11657,11653,11655,10,3855,3841,3812,0,11661,11663,11665,10,3824,3826,3853,0,11667,11554,11764,10,3831,3857,3829,0,11765,11766,11767,10,3858,3856,3857,0,11768,11769,11770,10,3798,3860,3859,0,11690,11771,11688,10,3860,3797,3861,0,11772,11773,11774,10,3797,3860,3798,0,11773,11772,11775,10,3861,3797,3859,0,11684,11691,11682,10,3848,3818,3807,0,11760,11693,11633,10,3839,3863,3820,0,11574,11700,11702,10,3863,3839,3835,0,11700,11574,11577,10,3839,3842,3840,0,11610,11776,11777,10,3844,3854,3838,0,11778,11703,11705,10,3851,3840,3855,0,11779,11706,11708,10,3844,3807,3854,0,11780,11709,11711,10,3806,3834,3794,0,11781,11715,11524,10,3799,3800,3847,0,11717,11619,11618,10,3862,3834,3833,0,11719,11715,11782,10,3864,3809,3808,0,11783,11784,11785,10,3864,3808,3865,0,11783,11785,11786,10,3864,3865,3833,0,11783,11786,11787,10,3862,3817,3864,0,11788,11789,11783,10,3809,3864,3810,0,11784,11783,11790,10,3862,3864,3833,0,11788,11783,11787,10,3866,3814,3813,0,11791,11792,11793,10,3866,3863,3835,0,11791,11794,11795,10,3867,3815,3866,0,11796,11797,11791,10,3866,3821,3863,0,11791,11798,11794,10,3814,3866,3815,0,11792,11791,11797,10,3867,3866,3835,0,11796,11791,11795,10,3868,3869,3870,0,11799,11800,11801,10,3871,3872,3873,0,11802,11803,11804,10,3874,3875,3876,0,11805,11806,11807,10,3877,3878,3879,0,11808,11809,11810,10,3880,3869,3878,0,11811,11812,11809,10,3881,3882,3883,0,11813,11814,11815,10,3883,3877,3884,0,11815,11808,11816,10,3883,3884,3881,0,11815,11816,11813,10,3870,3869,3880,0,11817,11818,11819,10,3870,3880,3874,0,11817,11819,11820,10,3874,3880,3883,0,11820,11821,11822,10,3883,3882,3874,0,11822,11823,11820,10,3871,3876,3875,0,11824,11825,11826,10,3873,3884,3877,0,11827,11828,11829,10,3885,3886,3887,0,11830,11831,11832,10,3888,3889,3879,0,11833,11834,11835,10,3890,3891,3892,0,11836,11837,11838,10,3879,3889,3868,0,11839,11840,11841,10,3868,3893,3879,0,11841,11842,11839,10,3894,3891,3890,0,11843,11837,11836,10,3868,3889,3895,0,11841,11840,11844,10,3868,3895,3896,0,11841,11844,11845,10,3897,3868,3896,0,11846,11841,11847,10,3898,3899,3900,0,11848,11849,11850,10,3901,3902,3903,0,11851,11852,11853,10,3904,3905,3900,0,11854,11855,11856,10,3895,3889,3902,0,11857,11858,11859,10,3904,3900,3906,0,11860,11861,11862,10,3869,3902,3889,0,11863,11859,11864,10,3881,3906,3882,0,11865,11866,11867,10,3907,3892,3908,0,11868,11869,11870,10,3909,3887,3886,0,11871,11872,11873,10,3909,3886,3910,0,11871,11873,11874,10,3911,3912,3888,0,11875,11876,11877,10,3913,3911,3888,0,11878,11879,11880,10,3885,3913,3914,0,11881,11882,11883,10,3911,3913,3912,0,11884,11885,11886,10,3912,3913,3885,0,11886,11885,11887,10,3907,3908,3915,0,11888,11889,11890,10,3915,3878,3889,0,11891,11892,11893,10,3916,3891,3881,0,11894,11895,11896,10,3915,3908,3878,0,11897,11898,11899,10,3908,3916,3881,0,11900,11894,11896,10,3915,3889,3888,0,11890,11901,11902,10,3892,3891,3916,0,11903,11904,11905,10,3916,3908,3892,0,11905,11906,11903,10,3897,3903,3902,0,11907,11853,11852,10,3902,3868,3897,0,11908,11909,11910,10,3906,3899,3894,0,11911,11912,11913,10,3885,3892,3917,0,11914,11915,11916,10,3917,3910,3886,0,11916,11917,11918,10,3888,3912,3909,0,11919,11920,11871,10,3909,3907,3888,0,11871,11888,11919,10,3892,3907,3909,0,11921,11922,11923,10,3909,3910,3917,0,11923,11924,11925,10,3887,3909,3912,0,11872,11871,11926,10,3893,3877,3879,0,11842,11927,11839,10,3914,3913,3908,0,11928,11929,11898,10,3893,3868,3876,0,11930,11931,11932,10,3876,3868,3870,0,11933,11799,11801,10,3906,3873,3872,0,11934,11935,11936,10,3873,3906,3894,0,11935,11934,11937,10,3882,3906,3872,0,11938,11934,11936,10,3870,3874,3876,0,11801,11939,11933,10,3874,3872,3875,0,11805,11803,11806,10,3875,3872,3871,0,11806,11803,11802,10,3880,3877,3883,0,11811,11808,11815,10,3877,3880,3878,0,11808,11811,11809,10,3882,3872,3874,0,11823,11940,11820,10,3871,3877,3876,0,11941,11829,11942,10,3871,3873,3877,0,11941,11827,11829,10,3893,3876,3877,0,11943,11942,11829,10,3912,3885,3887,0,11944,11830,11832,10,3913,3888,3879,0,11945,11833,11835,10,3914,3890,3892,0,11946,11836,11838,10,3894,3890,3884,0,11843,11836,11947,10,3891,3894,3898,0,11948,11949,11950,10,3897,3896,3903,0,11951,11952,11953,10,3895,3902,3901,0,11857,11859,11954,10,3891,3904,3906,0,11955,11860,11862,10,3869,3889,3878,0,11863,11864,11956,10,3881,3891,3906,0,11865,11957,11866,10,3907,3915,3888,0,11888,11890,11902,10,3901,3903,3896,0,11958,11959,11960,10,3900,3905,3898,0,11961,11962,11963,10,3901,3896,3895,0,11964,11847,11965,10,3905,3904,3898,0,11962,11966,11963,10,3891,3898,3904,0,11967,11968,11969,10,3894,3899,3898,0,11970,11971,11972,10,3900,3899,3906,0,11973,11971,11974,10,3892,3885,3914,0,11915,11914,11975,10,3885,3917,3886,0,11914,11916,11918,10,3917,3892,3909,0,11925,11921,11923,10,3884,3890,3881,0,11976,11977,11978,10,3878,3908,3913,0,11979,11898,11929,10,3878,3913,3879,0,11979,11929,11980,10,3890,3908,3881,0,11981,11898,11982,10,3908,3890,3914,0,11898,11981,11928,10,3868,3902,3869,0,11983,11984,11985,10,3894,3884,3873,0,11986,11987,11988,10,3918,3919,3920,0,11989,11990,11991,10,3920,3921,3922,0,11992,11993,11994,10,3920,3923,3918,0,11995,11996,11989,10,3924,3925,3926,0,11997,11998,11999,10,3927,3928,3929,0,12000,12001,12002,10,3930,3924,3926,0,12003,12004,12005,10,3930,3926,3931,0,12003,12005,12006,10,3927,3929,3932,0,12007,12008,12009,10,3933,3934,3935,0,12010,12011,12012,10,3936,3937,3938,0,12013,12014,12015,10,3935,3934,3922,0,12016,12017,12018,10,3935,3922,3921,0,12016,12018,12019,10,3923,3937,3936,0,12020,12021,12022,10,3939,3940,3941,0,12023,12024,12025,10,3941,3942,3939,0,12025,12026,12023,10,3943,3944,3938,0,12027,12028,12029,10,3945,3946,3947,0,12030,12031,12032,10,3947,3946,3948,0,12033,12034,12035,10,3949,3922,3934,0,12036,12037,12038,10,3950,3951,3937,0,12039,12040,12041,10,3924,3952,3940,0,12042,12043,12044,10,3924,3940,3931,0,12042,12044,12045,10,3953,3954,3929,0,12046,12047,12048,10,3931,3925,3924,0,12045,12049,12042,10,3929,3928,3953,0,12050,12051,12052,10,3955,3930,3940,0,12053,12054,12055,10,3944,3932,3956,0,12056,12057,12058,10,3939,3957,3955,0,12059,12060,12061,10,3955,3940,3939,0,12061,12062,12059,10,3956,3958,3938,0,12063,12064,12065,10,3938,3944,3956,0,12065,12066,12063,10,3942,3959,3946,0,12067,12068,12069,10,3939,3942,3945,0,12070,12067,12071,10,3948,3943,3938,0,12072,12073,12015,10,3937,3948,3938,0,12074,12075,12076,10,3933,3957,3939,0,12010,12077,12070,10,3932,3929,3954,0,12078,12079,12080,10,3955,3960,3930,0,12081,12082,12083,10,3934,3945,3961,0,12084,12085,12086,10,3962,3948,3937,0,12087,12088,12089,10,3963,3949,3961,0,12090,12091,12086,10,3964,3919,3965,0,12092,12093,12094,10,3965,3949,3964,0,12094,12095,12092,10,3918,3950,3965,0,12096,12039,12097,10,3961,3940,3952,0,12098,12099,12100,10,3954,3944,3951,0,12101,12056,12102,10,3945,3947,3941,0,12103,12104,12105,10,3947,3962,3943,0,12106,12107,12108,10,3941,3940,3961,0,12105,12109,12110,10,3944,3943,3962,0,12056,12108,12111,10,3962,3951,3944,0,12111,12102,12056,10,3926,3925,3931,0,12112,12113,12114,10,3953,3928,3927,0,12115,12116,12117,10,3927,3944,3953,0,12118,12119,12120,10,3947,3942,3941,0,12121,12122,12105,10,3943,3959,3947,0,12108,12123,12124,10,3966,3960,3935,0,12125,12126,12127,10,3967,3951,3936,0,12128,12129,12130,10,3936,3968,3967,0,12130,12131,12128,10,3919,3921,3920,0,12132,12133,12134,10,3964,3949,3935,0,12135,12136,12127,10,3936,3951,3950,0,12137,12138,12139,10,3950,3923,3969,0,12039,12140,12141,10,3963,3952,3966,0,12142,12143,12125,10,3967,3954,3951,0,12128,12144,12145,10,3930,3970,3952,0,12146,12147,12148,10,3930,3960,3966,0,12149,12150,12151,10,3966,3970,3930,0,12151,12152,12149,10,3954,3971,3968,0,12153,12154,12155,10,3968,3932,3954,0,12155,12156,12153,10,3968,3971,3967,0,12131,12157,12128,10,3966,3952,3970,0,12158,12159,12160,10,3954,3967,3971,0,12161,12162,12163,10,3930,3931,3940,0,12164,12165,12166,10,3923,3920,3969,0,12167,12168,12169,10,3969,3920,3922,0,12170,11992,11994,10,3964,3921,3919,0,12171,12172,12173,10,3927,3932,3944,0,12007,12009,12174,10,3960,3933,3935,0,12175,12010,12012,10,3936,3958,3968,0,12013,12176,12177,10,3958,3936,3938,0,12176,12013,12015,10,3935,3921,3964,0,12016,12019,12178,10,3918,3923,3936,0,12179,12020,12022,10,3947,3948,3962,0,12033,12035,12180,10,3937,3923,3950,0,12041,12140,12039,10,3957,3933,3960,0,12181,12182,12183,10,3942,3946,3945,0,12067,12069,12071,10,3959,3948,3946,0,12184,12072,12185,10,3948,3959,3943,0,12072,12184,12073,10,3934,3939,3945,0,12186,12070,12071,10,3934,3933,3939,0,12187,12010,12070,10,3952,3924,3930,0,12188,12189,12003,10,3958,3956,3968,0,12190,12191,12192,10,3955,3957,3960,0,12081,12193,12082,10,3968,3956,3932,0,12192,12191,12194,10,3949,3934,3961,0,12091,12084,12086,10,3962,3937,3951,0,12087,12089,12195,10,3965,3919,3918,0,12196,12093,12197,10,3963,3961,3952,0,12198,12098,12100,10,3945,3941,3961,0,12199,12105,12110,10,3942,3947,3959,0,12200,12201,12202,10,3949,3966,3935,0,12203,12125,12127,10,3918,3936,3950,0,12204,12137,12139,10,3922,3949,3969,0,12205,12206,12207,10,3950,3969,3965,0,12039,12141,12097,10,3949,3965,3969,0,12208,12209,12210,10,3963,3966,3949,0,12142,12125,12211,10,3953,3944,3954,0,12212,12213,12214,10,3972,3973,2471,0,7085,12215,7083,10,3972,2468,2469,0,7085,12216,7089,10,2468,3972,2471,0,12216,7085,7083,10,3974,2466,2467,0,12217,12216,7089,10,2466,3974,2465,0,12216,12217,7083,10,3975,3974,2467,0,7085,12217,7089,10,3976,3977,3978,0,12218,12219,12220,10,3979,3980,3981,0,12221,12222,12223,10,3978,3979,3982,0,12220,12224,12225,10,3983,3984,3979,0,12226,12227,12221,10,3979,3985,3983,0,12221,12228,12226,10,3986,3979,3984,0,12229,12221,12227,10,3987,3978,3982,0,12230,12220,12225,10,3988,3989,3990,0,12231,12232,12233,10,3991,3992,3993,0,12234,12235,12236,10,3994,3995,3996,0,12237,12238,12239,10,3997,3995,3998,0,12240,12241,12242,10,3999,4000,3996,0,12243,12244,12239,10,4001,4002,3997,0,12245,12246,12240,10,4003,4004,4005,0,12247,12248,12249,10,4006,4004,4007,0,12250,12251,12252,10,4003,4005,4008,0,12253,12254,12255,10,4009,4000,4008,0,12256,12244,12255,10,4009,4008,4005,0,12256,12255,12254,10,3992,4010,4011,0,12257,12258,12259,10,4011,3989,3992,0,12259,12260,12257,10,3989,4011,3990,0,12261,12262,12263,10,4004,4011,4010,0,12264,12262,12265,10,4012,4004,4013,0,12266,12267,12268,10,4004,4012,4007,0,12269,12270,12271,10,4013,4003,3995,0,12272,12273,12274,10,4012,3995,4002,0,12275,12276,12277,10,4014,3995,3985,0,12278,12279,12280,10,4014,3998,3995,0,12281,12282,12283,10,3978,3998,4014,0,12284,12285,12286,10,3978,3977,3998,0,12220,12219,12242,10,4015,4016,4017,0,12287,12288,12289,10,3982,4015,4018,0,12290,12291,12292,10,3982,4016,4015,0,12290,12293,12291,10,4019,4017,3981,0,12294,12295,12296,10,3982,3979,4016,0,12290,12297,12293,10,4020,4021,4022,0,12298,12299,12300,10,4023,4024,4025,0,12301,12302,12303,10,4026,4027,4028,0,12304,12305,12306,10,4025,4029,4030,0,12303,12307,12308,10,4031,4028,4027,0,12309,12306,12305,10,4027,4026,4032,0,12305,12304,12310,10,4033,4030,4034,0,12311,12312,12313,10,4023,4025,4033,0,12314,12315,12311,10,4035,3997,4036,0,12316,12317,12318,10,4027,4032,4037,0,12319,12320,12321,10,4036,3997,3976,0,12322,12240,12218,10,4036,3976,4038,0,12322,12218,12323,10,4005,3992,4039,0,12324,12325,12326,10,4040,3990,4006,0,12327,12328,12329,10,4006,4041,4040,0,12329,12330,12327,10,4039,3992,3991,0,12331,12332,12333,10,4042,3990,4040,0,12334,12335,12336,10,3991,4043,4044,0,12337,12338,12339,10,4009,4005,4045,0,12340,12341,12342,10,4046,4047,4006,0,12343,12344,12345,10,4008,4048,4049,0,12346,12347,12348,10,4008,4049,3999,0,12346,12348,12349,10,4002,4050,4051,0,12350,12351,12352,10,4052,4008,4000,0,12353,12354,12355,10,4053,4007,4051,0,12356,12357,12358,10,4053,4054,4055,0,12356,12359,12360,10,4001,4055,4054,0,12361,12362,12363,10,4001,4056,4050,0,12364,12365,12366,10,3983,3985,4057,0,12367,12368,12369,10,4058,3977,4059,0,12370,12371,12372,10,4060,4057,3985,0,12373,12369,12368,10,4061,3998,3977,0,12374,12375,12371,10,3994,4062,4060,0,12376,12377,12378,10,4063,3998,4061,0,12379,12380,12381,10,4058,4064,4063,0,12382,12383,12379,10,4065,3981,4066,0,12384,12385,12386,10,4067,4018,4068,0,12387,12388,12389,10,4066,3980,4069,0,12390,12391,12392,10,4018,4067,4070,0,12388,12387,12393,10,3986,4071,4069,0,12394,12395,12396,10,4070,4072,3987,0,12397,12398,12399,10,4048,4041,4073,0,12400,12401,12402,10,4073,4041,4051,0,12403,12404,12405,10,4049,4073,4074,0,12406,12403,12407,10,4074,4075,4076,0,12407,12408,12409,10,4054,4077,4056,0,12410,12411,12412,10,4052,4041,4048,0,12413,12401,12400,10,4053,4077,4054,0,12414,12411,12410,10,4051,4041,4053,0,12415,12416,12414,10,4041,4039,4040,0,12417,12418,12419,10,4045,4041,4052,0,12342,12417,12420,10,4043,4078,4044,0,12421,12422,12423,10,4042,4079,4077,0,12424,12425,12426,10,4044,4078,4039,0,12427,12428,12429,10,4040,4079,4042,0,12430,12431,12432,10,4062,4075,4074,0,12433,12408,12407,10,4074,4073,4060,0,12407,12403,12434,10,4050,4056,4063,0,12366,12365,12435,10,4061,4073,4050,0,12436,12403,12366,10,4060,4073,4080,0,12434,12403,12437,10,4080,4073,4061,0,12437,12403,12436,10,4057,4080,4069,0,12438,12437,12439,10,4069,4075,4081,0,12439,12408,12440,10,4058,4080,4061,0,12441,12437,12436,10,4058,4082,4070,0,12441,12442,12443,10,4063,4056,4082,0,12435,12365,12442,10,4071,4075,4069,0,12444,12408,12439,10,4070,4082,4072,0,12443,12442,12445,10,4067,4083,4080,0,12446,12447,12437,10,4084,4071,4066,0,12448,12444,12449,10,4067,4072,4085,0,12446,12445,12450,10,4084,4075,4071,0,12448,12408,12444,10,4072,4082,4085,0,12445,12442,12450,10,3996,4000,4086,0,12451,12452,12453,10,4087,4001,3997,0,12454,12455,12456,10,4087,4046,4001,0,12454,12457,12455,10,3991,4086,4000,0,12458,12453,12452,10,3988,4088,4046,0,12459,12460,12457,10,3990,4042,4088,0,12335,12334,12461,10,3991,4000,4009,0,12462,12463,12464,10,4001,4046,4055,0,12245,12465,12466,10,4018,4019,4089,0,12467,12468,12469,10,3986,4090,4065,0,12229,12470,12471,10,4068,3976,3987,0,12472,12218,12230,10,3984,3983,3994,0,12227,12226,12237,10,3994,3996,3984,0,12237,12239,12227,10,4059,3997,4064,0,12473,12240,12474,10,4059,3976,3997,0,12473,12218,12240,10,3984,4021,4090,0,12227,12475,12470,10,4028,4075,4084,0,12476,12408,12448,10,4085,4030,4029,0,12450,12477,12478,10,4085,4082,4030,0,12450,12442,12477,10,4082,4056,4034,0,12479,12412,12480,10,4091,4092,4093,0,12481,12482,12483,10,4094,4095,4096,0,12484,12485,12486,10,4095,4094,4097,0,12485,12484,12487,10,4091,4098,4092,0,12481,12488,12482,10,4099,4096,4095,0,12489,12490,12491,10,4100,4092,4101,0,12492,12493,12494,10,4102,4103,4101,0,12495,12496,12494,10,4104,4105,4106,0,12497,12498,12499,10,4107,4101,4108,0,12500,12494,12501,10,4109,4106,4110,0,12502,12499,12503,10,4106,4111,4110,0,12499,12504,12503,10,4103,4112,3993,0,12505,12506,12236,10,4108,4101,3988,0,12507,12508,12231,10,4103,3993,3988,0,12505,12236,12231,10,4039,4078,4110,0,12429,12428,12503,10,4111,4079,4040,0,12504,12431,12430,10,4112,4113,3993,0,12509,12510,12511,10,3993,3992,3989,0,12236,12235,12232,10,4086,4037,4022,0,12512,12513,12514,10,3997,4035,4087,0,12240,12515,12516,10,4086,3993,4113,0,12512,12517,12518,10,4114,3988,4087,0,12519,12520,12516,10,4115,4078,4043,0,12521,12422,12421,10,4115,4043,4052,0,12521,12421,12420,10,4097,4094,4116,0,12522,12523,12524,10,4117,4118,4119,0,12525,12526,12527,10,4118,4117,4120,0,12526,12525,12528,10,4121,4119,4118,0,12529,12527,12526,10,4122,4121,4118,0,12530,12529,12526,10,4123,4089,4124,0,12531,12532,12533,10,4123,4038,4089,0,12531,12534,12532,10,4125,4121,4089,0,12535,12529,12536,10,4125,4089,4019,0,12535,12536,12537,10,4126,4127,4084,0,12538,12539,12540,10,4085,4029,4128,0,12541,12542,12543,10,4083,4128,4126,0,12544,12543,12538,10,4083,4085,4128,0,12544,12541,12543,10,4129,4130,4119,0,12545,12546,12547,10,4119,4125,4129,0,12547,12548,12545,10,4121,4124,4089,0,12549,12550,12469,10,4131,4120,4128,0,12551,12552,12553,10,4132,4095,4093,0,12554,12555,12556,10,4116,4093,4095,0,12557,12558,12559,10,4116,4095,4097,0,12557,12559,12560,10,4133,4095,4132,0,12561,12562,12563,10,4132,4100,4133,0,12563,12564,12561,10,4091,4096,4099,0,12481,12565,12566,10,4104,4102,4098,0,12567,12568,12569,10,4100,4107,4105,0,12570,12571,12572,10,4104,4109,4102,0,12497,12502,12573,10,4134,4109,4110,0,12574,12575,12576,10,4134,4078,4112,0,12577,12428,12578,10,4111,4108,4079,0,12579,12580,12581,10,4078,4135,4112,0,12422,12582,12583,10,4114,4136,4079,0,12584,12585,12586,10,4037,4135,4115,0,12587,12588,12589,10,4076,4031,4027,0,12590,12591,12592,10,4115,4027,4037,0,12589,12592,12587,10,4033,4034,4077,0,12593,12594,12595,10,4113,4135,4086,0,12596,12597,12598,10,4136,4114,4087,0,12585,12584,12599,10,4037,4086,4135,0,12600,12601,12602,10,4118,4131,4137,0,12526,12603,12604,10,4137,4122,4118,0,12604,12530,12526,10,4131,4138,4137,0,12603,12605,12604,10,4026,4127,4126,0,12606,12539,12538,10,4128,4029,4025,0,12607,12608,12609,10,4139,4025,4024,0,12610,12609,12611,10,4129,4020,4026,0,12612,12613,12614,10,4129,4021,4020,0,12612,12615,12613,10,4124,4139,4024,0,12533,12616,12617,10,4024,4038,4123,0,12617,12534,12531,10,4140,4141,4126,0,12618,12619,12620,10,4126,4120,4140,0,12620,12552,12618,10,4138,4131,4128,0,12621,12622,12607,10,4130,4129,4141,0,12623,12624,12625,10,4137,4124,4122,0,12626,12627,12628,10,3976,4059,3977,0,12218,12473,12219,10,3979,3986,3980,0,12221,12229,12222,10,3987,3976,3978,0,12230,12218,12220,10,3988,3990,4088,0,12231,12233,12629,10,3999,3995,4003,0,12243,12238,12253,10,3997,4002,3995,0,12240,12246,12241,10,3994,3985,3995,0,12237,12228,12238,10,3998,4064,3997,0,12242,12474,12240,10,3996,3995,3999,0,12239,12238,12243,10,4004,4006,3990,0,12264,12630,12263,10,4007,4055,4046,0,12252,12466,12465,10,4007,4046,4006,0,12252,12465,12250,10,4005,4010,3992,0,12249,12258,12257,10,4010,4005,4004,0,12258,12249,12248,10,4011,4004,3990,0,12262,12264,12263,10,4013,4004,4003,0,12631,12632,12633,10,4007,4012,4002,0,12271,12270,12634,10,4013,3995,4012,0,12272,12274,12635,10,3985,4142,4014,0,12280,12636,12278,10,4142,3985,3979,0,12636,12280,12637,10,4142,3978,4014,0,12638,12284,12286,10,3979,3978,4142,0,12639,12284,12638,10,4008,3999,4003,0,12255,12243,12253,10,4017,4019,4015,0,12295,12294,12640,10,4015,4019,4018,0,12641,12642,12643,10,4017,4016,3979,0,12644,12645,12646,10,4017,3979,3981,0,12644,12646,12647,10,4032,4020,4022,0,12310,12298,12300,10,4020,4032,4026,0,12298,12310,12304,10,4038,4024,4036,0,12648,12302,12649,10,4023,4036,4024,0,12301,12649,12302,10,4127,4026,4028,0,12650,12304,12306,10,4033,4025,4030,0,12651,12303,12308,10,4032,4022,4037,0,12320,12652,12321,10,4023,4035,4036,0,12653,12316,12318,10,4023,4033,4035,0,12654,12593,12655,10,4045,4005,4039,0,12656,12324,12326,10,4044,4039,3991,0,12657,12331,12333,10,4043,3991,4009,0,12338,12337,12658,10,4047,4088,4042,0,12659,12660,12661,10,4088,4047,4046,0,12660,12659,12662,10,4043,4009,4045,0,12421,12340,12342,10,4041,4006,4047,0,12417,12345,12344,10,4002,4051,4007,0,12350,12352,12663,10,4008,4052,4048,0,12354,12353,12664,10,4053,4055,4007,0,12356,12360,12357,10,4000,4074,4052,0,12665,12666,12667,10,4001,4054,4056,0,12361,12363,12668,10,3999,4074,4000,0,12669,12407,12670,10,4074,3999,4049,0,12407,12669,12406,10,4050,4002,4001,0,12366,12671,12364,10,4081,3983,4057,0,12672,12367,12369,10,3977,4058,4061,0,12371,12370,12374,10,3985,3994,4060,0,12673,12376,12378,10,4063,4064,3998,0,12379,12383,12380,10,3994,4081,4062,0,12674,12675,12676,10,4081,3994,3983,0,12675,12674,12677,10,4058,4059,4064,0,12382,12678,12383,10,4065,4066,4071,0,12384,12386,12679,10,4072,4067,4068,0,12680,12387,12389,10,4066,3981,3980,0,12390,12681,12391,10,3982,4018,4070,0,12682,12388,12393,10,3980,3986,4069,0,12683,12394,12396,10,4070,3987,3982,0,12397,12399,12684,10,4071,3986,4065,0,12685,12686,12687,10,3987,4072,4068,0,12688,12689,12690,10,4049,4048,4073,0,12691,12400,12402,10,4073,4051,4050,0,12403,12405,12366,10,4076,4052,4074,0,12409,12692,12407,10,4045,4039,4041,0,12342,12418,12417,10,4043,4045,4052,0,12421,12342,12420,10,4077,4041,4047,0,12426,12417,12344,10,4041,4077,4053,0,12417,12426,12693,10,4077,4047,4042,0,12426,12344,12424,10,4062,4074,4060,0,12433,12407,12434,10,4063,4061,4050,0,12435,12436,12366,10,4057,4060,4080,0,12438,12434,12437,10,4081,4057,4069,0,12440,12438,12439,10,4058,4070,4080,0,12441,12443,12437,10,4081,4075,4062,0,12440,12408,12433,10,4058,4063,4082,0,12441,12435,12442,10,4083,4066,4069,0,12447,12449,12439,10,4083,4069,4080,0,12447,12439,12437,10,4070,4067,4080,0,12443,12446,12437,10,4083,4084,4066,0,12447,12448,12449,10,4083,4067,4085,0,12447,12446,12450,10,4068,4089,3976,0,12472,12469,12218,10,4086,3991,3993,0,12453,12458,12694,10,4087,3988,4046,0,12454,12459,12457,10,3981,4065,4090,0,12223,12471,12470,10,4125,3981,4090,0,12695,12223,12470,10,3981,4125,4019,0,12223,12695,12696,10,4068,4018,4089,0,12472,12467,12469,10,3986,3984,4090,0,12229,12227,12470,10,3984,3996,4022,0,12227,12239,12514,10,4021,3984,4022,0,12475,12227,12514,10,4038,3976,4089,0,12323,12218,12469,10,4028,4084,4127,0,12476,12448,12697,10,4075,4028,4031,0,12698,12699,12700,10,4075,4031,4076,0,12698,12700,12701,10,4082,4034,4030,0,12479,12480,12702,10,4093,4092,4132,0,12556,12703,12554,10,4091,4093,4143,0,12704,12705,12706,10,4143,4093,4116,0,12706,12705,12524,10,4100,4132,4092,0,12492,12554,12703,10,4133,4099,4095,0,12707,12489,12491,10,4107,4100,4101,0,12500,12492,12494,10,4092,4098,4102,0,12493,12708,12495,10,4101,4092,4102,0,12494,12493,12495,10,4104,4099,4105,0,12497,12709,12498,10,4099,4133,4105,0,12709,12710,12498,10,4109,4104,4106,0,12502,12497,12499,10,4103,4134,4112,0,12505,12711,12506,10,4108,3988,4114,0,12507,12231,12712,10,4101,4103,3988,0,12508,12505,12231,10,4039,4110,4111,0,12429,12503,12504,10,4039,4111,4040,0,12429,12504,12430,10,3988,3993,3989,0,12231,12236,12232,10,3996,4086,4022,0,12239,12512,12514,10,4076,4115,4052,0,12713,12521,12420,10,4034,4056,4077,0,12480,12412,12411,10,4143,4116,4094,0,12706,12524,12523,10,4119,4130,4117,0,12714,12715,12716,10,4118,4120,4131,0,12526,12528,12603,10,4125,4021,4129,0,12717,12615,12612,10,4021,4125,4090,0,12615,12717,12718,10,4083,4126,4084,0,12544,12538,12540,10,4122,4124,4121,0,12719,12550,12549,10,4119,4121,4125,0,12527,12529,12535,10,4126,4128,4120,0,12620,12553,12552,10,4094,4096,4143,0,12720,12721,12722,10,4091,4143,4096,0,12723,12722,12721,10,4098,4091,4099,0,12488,12481,12566,10,4099,4104,4098,0,12724,12567,12569,10,4133,4100,4105,0,12725,12570,12572,10,4105,4107,4106,0,12726,12727,12728,10,4103,4102,4109,0,12729,12730,12731,10,4106,4107,4111,0,12732,12733,12734,10,4107,4108,4111,0,12733,12735,12734,10,4134,4103,4109,0,12574,12736,12575,10,4134,4110,4078,0,12577,12503,12428,10,4108,4114,4079,0,12737,12584,12586,10,4078,4115,4135,0,12422,12521,12582,10,4079,4136,4077,0,12425,12738,12426,10,4135,4113,4112,0,12739,12510,12509,10,4136,4144,4077,0,12740,12741,12742,10,4115,4076,4027,0,12589,12590,12592,10,4144,4033,4077,0,12743,12593,12595,10,4033,4144,4035,0,12593,12743,12655,10,4136,4087,4144,0,12585,12599,12744,10,4087,4035,4144,0,12599,12745,12744,10,4140,4117,4130,0,12746,12747,12748,10,4117,4140,4120,0,12525,12749,12528,10,4141,4026,4126,0,12750,12606,12538,10,4139,4128,4025,0,12610,12607,12609,10,4141,4129,4026,0,12751,12612,12614,10,4124,4024,4123,0,12533,12617,12531,10,4139,4138,4128,0,12610,12621,12607,10,4138,4139,4137,0,12621,12610,12752,10,4140,4130,4141,0,12753,12623,12625,10,4124,4137,4139,0,12627,12626,12754,10,4145,4146,4147,0,12755,12756,12757,10,4148,4149,4150,0,12758,12759,12760,10,4151,4152,4150,0,12761,12762,12760,10,4153,4154,4155,0,12763,12764,12765,10,4156,4157,4158,0,12766,12767,12768,10,4159,4160,4156,0,12769,12770,12766,10,4159,4158,4161,0,12771,12772,12773,10,4162,4163,4164,0,12774,12775,12776,10,4165,4166,4167,0,12777,12778,12779,10,4168,4169,4170,0,12780,12781,12782,10,4170,4164,4163,0,12782,12776,12775,10,4171,4172,4173,0,12783,12784,12785,10,4173,4174,4175,0,12785,12786,12787,10,4175,4167,4171,0,12787,12779,12783,10,4176,4177,4169,0,12788,12789,12781,10,4172,4178,4173,0,12784,12790,12785,10,4179,4169,4177,0,12791,12781,12789,10,4180,4181,4179,0,12792,12793,12791,10,4182,4183,4178,0,12794,12795,12790,10,4182,4184,4183,0,12794,12796,12795,10,4185,4164,4186,0,12797,12798,12799,10,4187,4188,4189,0,12800,12801,12802,10,4166,4190,4191,0,12803,12804,12805,10,4192,4167,4166,0,12806,12807,12803,10,4193,4194,4195,0,12808,12809,12810,10,4195,4181,4193,0,12810,12811,12808,10,4196,4184,4197,0,12812,12813,12814,10,4196,4191,4190,0,12812,12815,12816,10,4198,4169,4179,0,12817,12818,12819,10,4199,4179,4181,0,12820,12819,12821,10,4182,4172,4200,0,12822,12823,12824,10,4201,4197,4184,0,12825,12826,12827,10,4202,4186,4164,0,12828,12829,12830,10,4170,4169,4198,0,12831,12832,12833,10,4203,4171,4167,0,12834,12835,12836,10,4200,4172,4171,0,12837,12838,12835,10,4204,4205,4206,0,12839,12840,12841,10,4207,4208,4209,0,12842,12843,12844,10,4210,4205,4211,0,12845,12846,12847,10,4207,4212,4208,0,12848,12849,12850,10,4174,4212,4207,0,12786,12851,12852,10,4206,4168,4163,0,12853,12780,12775,10,4213,4174,4207,0,12854,12786,12852,10,4209,4214,4213,0,12844,12855,12856,10,4209,4213,4207,0,12844,12856,12842,10,4215,4204,4163,0,12857,12858,12859,10,4216,4163,4162,0,12860,12861,12862,10,4214,4217,4165,0,12863,12864,12865,10,4215,4218,4219,0,12866,12867,12868,10,4209,4217,4214,0,12869,12864,12863,10,4211,4176,4210,0,12870,12871,12872,10,4220,4221,4222,0,12873,12874,12875,10,4223,4224,4220,0,12876,12877,12873,10,4149,4225,4226,0,12878,12879,12880,10,4149,4226,4227,0,12878,12880,12881,10,4222,4228,4223,0,12875,12882,12876,10,4229,4230,4231,0,12883,12884,12885,10,4229,4231,4232,0,12883,12885,12886,10,4185,4186,4232,0,12887,12888,12889,10,4233,4192,4234,0,12890,12891,12892,10,4235,4234,4236,0,12893,12892,12894,10,4237,4236,4197,0,12895,12896,12897,10,4229,4198,4199,0,12898,12899,12900,10,4201,4200,4233,0,12901,12902,12903,10,4232,4186,4202,0,12904,12905,12906,10,4229,4202,4198,0,12907,12906,12908,10,4203,4192,4233,0,12909,12910,12903,10,4194,4238,4195,0,12911,12912,12913,10,4194,4187,4238,0,12911,12914,12912,10,4185,4238,4187,0,12915,12912,12914,10,4191,4236,4234,0,12916,12917,12918,10,4239,4240,4241,0,12919,12920,12921,10,4239,4242,4240,0,12919,12922,12920,10,4243,4244,4245,0,12923,12924,12925,10,4246,4247,4243,0,12926,12927,12923,10,4240,4248,4249,0,12928,12929,12930,10,4240,4250,4248,0,12928,12931,12929,10,4251,4252,4253,0,12932,12933,12934,10,4254,4245,4244,0,12935,12936,12937,10,4255,4256,4257,0,12938,12939,12940,10,4258,4257,4241,0,12941,12940,12942,10,4241,4249,4258,0,12942,12943,12941,10,4259,4260,4243,0,12944,12945,12946,10,4243,4247,4259,0,12946,12947,12944,10,4261,4250,4240,0,12948,12949,12950,10,4240,4242,4261,0,12950,12951,12948,10,4253,4252,4262,0,12952,12953,12954,10,4263,4262,4260,0,12955,12954,12945,10,4264,4261,4242,0,12956,12948,12951,10,4265,4256,4255,0,12957,12958,12959,10,4266,4267,4268,0,12960,12961,12962,10,4269,4270,4271,0,12963,12964,12965,10,4189,4272,4268,0,12966,12967,12962,10,4270,4273,4166,0,12964,12968,12778,10,4274,4275,4273,0,12969,12970,12968,10,4189,4188,4276,0,12966,12971,12972,10,4273,4190,4166,0,12968,12973,12778,10,4277,4278,4269,0,12974,12975,12963,10,4279,4272,4280,0,12976,12967,12977,10,4281,4282,4274,0,12978,12979,12969,10,4281,4274,4278,0,12978,12969,12975,10,4283,4284,4280,0,12980,12981,12977,10,4285,4273,4275,0,12982,12968,12970,10,4283,4272,4276,0,12980,12967,12972,10,4223,4286,4224,0,12983,12984,12985,10,4271,4226,4269,0,12965,12986,12963,10,4287,4288,4289,0,12987,12988,12989,10,4290,4289,4288,0,12990,12991,12992,10,4291,4252,4292,0,12993,12933,12994,10,4291,4292,4287,0,12993,12994,12995,10,4287,4293,4294,0,12995,12996,12997,10,4295,4296,4297,0,12998,12999,13000,10,4298,4256,4295,0,13001,13002,12998,10,4293,4289,4299,0,13003,12989,13004,10,4300,4262,4301,0,13005,13006,13007,10,4302,4265,4303,0,13008,13009,13010,10,4304,4305,4303,0,13011,13012,13010,10,4301,4262,4252,0,13013,13014,13015,10,4256,4265,4302,0,13016,13017,13018,10,4306,4307,4292,0,13019,13020,13021,10,4308,4292,4244,0,13022,13021,13023,10,4241,4307,4306,0,13024,13025,13026,10,4306,4290,4309,0,13026,13027,13028,10,4239,4309,4242,0,13029,13028,13030,10,4251,4244,4292,0,12932,12937,12994,10,4298,4257,4256,0,13031,13032,13033,10,4300,4289,4290,0,13034,12991,12990,10,4300,4260,4262,0,13034,12945,13035,10,4288,4304,4303,0,12992,13036,13037,10,4309,4303,4265,0,13038,13037,13039,10,4310,4301,4291,0,13040,13041,13042,10,4311,4312,4295,0,13043,13044,13045,10,4295,4302,4311,0,13045,13046,13043,10,4293,4299,4313,0,13047,13048,13049,10,4314,4313,4315,0,13050,13049,13051,10,4314,4316,4293,0,13050,13052,13047,10,4317,4305,4296,0,13053,13054,13055,10,4318,4291,4294,0,13056,13057,13058,10,4319,4320,4296,0,13059,13060,12999,10,4319,4295,4312,0,13059,12998,13061,10,4313,4299,4301,0,13062,13063,13007,10,4310,4321,4315,0,13064,13065,13066,10,4322,4323,4311,0,13067,13068,13069,10,4324,4311,4302,0,13070,13069,13008,10,4324,4303,4305,0,13070,13010,13012,10,4177,4315,4321,0,13071,13072,13073,10,4321,4325,4180,0,13073,13074,13075,10,4183,4326,4323,0,13076,13077,13078,10,4294,4316,4176,0,13058,13079,12871,10,4312,4323,4212,0,13061,13080,13081,10,4319,4212,4327,0,13059,13081,13082,10,4327,4320,4319,0,13082,13060,13059,10,4328,4314,4315,0,13083,13084,13085,10,4328,4177,4176,0,13083,12789,12788,10,4328,4176,4316,0,13083,12788,13086,10,4173,4178,4329,0,12785,12790,13087,10,4329,4317,4320,0,13087,13088,13089,10,4325,4318,4211,0,13074,13090,13091,10,4325,4211,4219,0,13074,13091,12868,10,4326,4330,4209,0,13077,13092,13093,10,4208,4323,4326,0,13094,13078,13077,10,4180,4325,4331,0,13075,13074,13095,10,4263,4181,4180,0,13096,13097,13075,10,4183,4184,4264,0,13098,13099,12956,10,4263,4331,4253,0,12955,13100,12952,10,4264,4184,4261,0,12956,13099,12948,10,4255,4330,4264,0,12959,13101,12956,10,4193,4259,4247,0,13102,13103,13104,10,4247,4188,4193,0,13104,12971,13102,10,4196,4190,4250,0,13105,13106,12949,10,4254,4253,4331,0,13107,13108,13109,10,4331,4332,4245,0,13109,13110,13111,10,4249,4333,4330,0,13112,13113,13114,10,4219,4218,4332,0,12868,12867,13115,10,4333,4217,4209,0,13116,13117,13093,10,4249,4161,4158,0,13118,13119,13120,10,4332,4221,4147,0,13115,12874,12757,10,4147,4153,4332,0,12757,12763,13115,10,4332,4218,4221,0,13115,12867,12874,10,4333,4158,4150,0,13116,13121,12760,10,4150,4217,4333,0,12760,13117,13116,10,4149,4334,4217,0,12759,13122,13117,10,4160,4285,4275,0,13123,13124,13125,10,4160,4161,4285,0,13123,13126,13124,10,4153,4283,4276,0,12763,13127,13128,10,4246,4276,4247,0,12926,13128,12927,10,4248,4285,4161,0,12929,13129,13130,10,4335,4147,4146,0,13131,13132,13133,10,4335,4279,4154,0,13131,13134,13135,10,4281,4278,4152,0,13136,13137,13138,10,4281,4151,4157,0,13136,13139,13140,10,4155,4154,4279,0,13141,13142,13143,10,4284,4336,4155,0,13144,13145,13141,10,4337,4160,4275,0,13146,13147,13148,10,4282,4157,4156,0,13149,13140,13150,10,4338,4218,4216,0,13151,13152,13153,10,4216,4162,4228,0,13153,13154,13155,10,4227,4271,4165,0,13156,13157,13158,10,4220,4224,4286,0,13159,13160,13161,10,4339,4286,4266,0,13162,13161,13163,10,4266,4146,4339,0,13163,13164,13162,10,4340,4225,4341,0,13165,13166,13167,10,4340,4152,4278,0,13165,13168,13169,10,4221,4145,4147,0,12874,12755,12757,10,4148,4150,4152,0,12758,12760,12762,10,4153,4147,4154,0,12763,12757,12764,10,4151,4158,4157,0,12761,13121,13170,10,4158,4151,4150,0,13121,12761,12760,10,4336,4153,4155,0,13171,12763,12765,10,4159,4156,4158,0,12769,12766,12768,10,4145,4339,4146,0,12755,13172,12756,10,4152,4340,4341,0,12762,13173,13174,10,4341,4148,4152,0,13174,12758,12762,10,4160,4159,4161,0,13175,12771,12773,10,4162,4189,4268,0,12774,12966,12962,10,4189,4162,4164,0,12966,12774,12776,10,4165,4270,4166,0,12777,12964,12778,10,4175,4165,4167,0,12787,12777,12779,10,4170,4163,4168,0,12782,12775,12780,10,4171,4173,4175,0,12783,12785,12787,10,4176,4168,4210,0,12788,12780,13176,10,4168,4176,4169,0,12780,12788,12781,10,4212,4173,4327,0,12851,12785,13177,10,4174,4173,4212,0,12786,12785,12851,10,4180,4179,4177,0,12792,12791,12789,10,4172,4182,4178,0,12784,12794,12790,10,4185,4187,4189,0,12797,12800,12802,10,4185,4189,4164,0,12797,12802,12798,10,4234,4166,4191,0,13178,12803,12805,10,4234,4192,4166,0,13178,12806,12803,10,4193,4187,4194,0,12808,13179,12809,10,4187,4193,4188,0,13179,12808,13180,10,4342,4196,4197,0,13181,12812,12814,10,4196,4342,4191,0,12812,13181,12815,10,4199,4198,4179,0,12820,12817,12819,10,4195,4199,4181,0,13182,12820,12821,10,4201,4182,4200,0,12825,12822,12824,10,4182,4201,4184,0,12822,12825,12827,10,4170,4202,4164,0,12831,12828,12830,10,4202,4170,4198,0,12828,12831,12833,10,4192,4203,4167,0,13183,12834,12836,10,4203,4200,4171,0,12834,12837,12835,10,4211,4205,4219,0,13091,13184,12868,10,4205,4210,4206,0,12846,12845,13185,10,4206,4210,4168,0,12853,13176,12780,10,4204,4206,4163,0,13186,12853,12775,10,4213,4175,4174,0,12854,12787,12786,10,4215,4219,4204,0,12866,12868,13187,10,4204,4219,4205,0,13187,12868,13184,10,4213,4214,4175,0,13188,13189,13190,10,4216,4215,4163,0,12860,13191,12861,10,4215,4216,4218,0,13191,12860,13192,10,4175,4214,4165,0,13193,12863,12865,10,4208,4212,4323,0,13194,13081,13080,10,4223,4220,4222,0,12876,12873,12875,10,4149,4341,4225,0,12878,13195,12879,10,4334,4149,4227,0,13196,12878,12881,10,4227,4226,4271,0,12881,12880,13197,10,4220,4145,4221,0,12873,12755,12874,10,4149,4148,4341,0,12878,13198,13195,10,4221,4338,4222,0,12874,13199,12875,10,4235,4237,4233,0,13200,13201,13202,10,4185,4231,4238,0,12887,13203,13204,10,4231,4185,4232,0,13203,12887,12889,10,4235,4233,4234,0,12893,12890,12892,10,4238,4230,4195,0,13205,13206,13207,10,4230,4238,4231,0,13206,13205,13208,10,4237,4235,4236,0,12895,13209,12896,10,4230,4199,4195,0,13210,12900,13211,10,4229,4199,4230,0,12898,12900,13210,10,4201,4237,4197,0,12901,13212,13213,10,4237,4201,4233,0,13212,12901,12903,10,4229,4232,4202,0,12907,12904,12906,10,4203,4233,4200,0,12909,12903,12902,10,4236,4342,4197,0,12917,13214,13215,10,4191,4342,4236,0,12916,13214,12917,10,4243,4308,4244,0,13216,13217,13218,10,4260,4308,4243,0,13219,13217,13216,10,4246,4243,4245,0,12926,12923,12925,10,4241,4240,4249,0,13220,12928,12930,10,4251,4254,4244,0,12932,12935,12937,10,4254,4251,4253,0,12935,12932,12934,10,4258,4255,4257,0,12941,12938,12940,10,4263,4253,4262,0,12955,12952,12954,10,4259,4263,4260,0,12944,12955,12945,10,4265,4264,4242,0,12957,12956,12951,10,4264,4265,4255,0,12956,12957,12959,10,4269,4278,4270,0,12963,12975,12964,10,4268,4267,4228,0,12962,12961,13221,10,4272,4266,4268,0,12967,12960,12962,10,4270,4274,4273,0,12964,12969,12968,10,4274,4270,4278,0,12969,12964,12975,10,4272,4283,4280,0,12967,12980,12977,10,4189,4276,4272,0,12966,12972,12967,10,4228,4162,4268,0,13221,12774,12962,10,4271,4270,4165,0,12965,12964,12777,10,4266,4286,4267,0,12960,12984,12961,10,4337,4275,4282,0,13222,12970,12979,10,4275,4274,4282,0,12970,12969,12979,10,4279,4335,4272,0,12976,13223,12967,10,4272,4335,4266,0,12967,13223,12960,10,4247,4276,4188,0,13104,12972,12971,10,4273,4250,4190,0,12968,13224,12973,10,4250,4273,4285,0,13224,12968,12982,10,4223,4267,4286,0,12983,12961,12984,10,4277,4226,4225,0,12974,12986,13225,10,4226,4277,4269,0,12986,12974,12963,10,4223,4228,4267,0,12983,13221,12961,10,4288,4297,4304,0,13226,13000,13227,10,4287,4297,4288,0,13228,13000,13226,10,4287,4307,4297,0,12995,13229,13230,10,4307,4287,4292,0,13229,12995,12994,10,4307,4298,4297,0,13229,13031,13230,10,4291,4287,4294,0,12993,12995,12997,10,4295,4319,4296,0,12998,13059,12999,10,4298,4295,4297,0,13001,12998,13000,10,4293,4287,4289,0,13003,12987,12989,10,4305,4304,4297,0,13231,13227,13000,10,4305,4297,4296,0,13231,13000,12999,10,4300,4299,4289,0,13005,13063,13232,10,4299,4300,4301,0,13063,13005,13007,10,4291,4301,4252,0,13233,13013,13015,10,4295,4256,4302,0,13234,13016,13018,10,4308,4290,4306,0,13022,13235,13019,10,4308,4306,4292,0,13022,13019,13021,10,4290,4308,4260,0,13235,13022,13236,10,4239,4241,4306,0,13029,13024,13026,10,4239,4306,4309,0,13029,13026,13028,10,4251,4292,4252,0,12932,12994,12933,10,4241,4298,4307,0,13237,13031,13229,10,4298,4241,4257,0,13031,13237,13032,10,4300,4290,4260,0,13034,12990,12945,10,4288,4309,4290,0,12992,13038,12990,10,4309,4288,4303,0,13038,12992,13037,10,4242,4309,4265,0,12951,13038,13039,10,4318,4310,4291,0,13238,13040,13042,10,4310,4318,4321,0,13040,13238,13239,10,4311,4323,4312,0,13043,13240,13044,10,4314,4293,4313,0,13050,13047,13049,10,4324,4317,4322,0,13241,13053,13242,10,4317,4324,4305,0,13053,13241,13054,10,4320,4317,4296,0,13243,13053,13055,10,4316,4294,4293,0,13079,13058,13244,10,4310,4313,4301,0,13064,13062,13007,10,4313,4310,4315,0,13062,13064,13066,10,4324,4322,4311,0,13070,13067,13069,10,4303,4324,4302,0,13010,13070,13008,10,4177,4321,4180,0,13071,13073,13075,10,4177,4328,4315,0,13071,13245,13072,10,4178,4183,4323,0,13246,13076,13078,10,4322,4178,4323,0,13247,13246,13078,10,4178,4322,4329,0,13246,13247,13248,10,4211,4294,4176,0,12870,13058,12871,10,4294,4211,4318,0,13058,12870,13056,10,4319,4312,4212,0,13059,13061,13081,10,4314,4328,4316,0,13084,13083,13086,10,4329,4327,4173,0,13087,13177,12785,10,4317,4329,4322,0,13088,13087,13249,10,4327,4329,4320,0,13177,13087,13089,10,4325,4321,4318,0,13074,13073,13090,10,4331,4325,4219,0,13095,13074,12868,10,4208,4326,4209,0,13094,13077,13093,10,4263,4180,4331,0,13096,13075,13095,10,4326,4264,4330,0,13250,12956,13101,10,4264,4326,4183,0,12956,13250,13098,10,4181,4263,4259,0,13251,12955,12944,10,4193,4181,4259,0,13102,12793,13103,10,4261,4196,4250,0,12948,13105,12949,10,4196,4261,4184,0,13105,12948,13099,10,4254,4331,4245,0,13107,13109,13111,10,4258,4249,4330,0,13252,13112,13114,10,4255,4258,4330,0,13253,13252,13114,10,4331,4219,4332,0,13095,12868,13115,10,4330,4333,4209,0,13092,13116,13093,10,4153,4246,4245,0,12763,12926,12925,10,4153,4245,4332,0,12763,12925,13115,10,4249,4248,4161,0,13118,13254,13119,10,4333,4249,4158,0,13255,13118,13120,10,4338,4221,4218,0,13199,12874,12867,10,4150,4149,4217,0,12760,12759,13117,10,4284,4283,4153,0,13256,13257,13258,10,4284,4153,4336,0,13256,13258,13259,10,4246,4153,4276,0,12926,12763,13128,10,4248,4250,4285,0,12929,12931,13129,10,4266,4335,4146,0,13260,13131,13133,10,4147,4335,4154,0,13132,13131,13135,10,4151,4281,4152,0,13139,13136,13138,10,4282,4281,4157,0,13149,13136,13140,10,4280,4155,4279,0,13261,13141,13143,10,4280,4284,4155,0,13261,13144,13141,10,4337,4282,4156,0,13146,13149,13150,10,4337,4156,4160,0,13146,13150,13147,10,4222,4338,4216,0,13262,13151,13153,10,4222,4216,4228,0,13262,13153,13155,10,4217,4227,4165,0,13263,13156,13158,10,4227,4217,4334,0,13156,13263,13264,10,4220,4339,4145,0,13159,13162,13265,10,4339,4220,4286,0,13162,13159,13161,10,4277,4340,4278,0,13266,13165,13169,10,4340,4277,4225,0,13165,13266,13166,10,4343,4344,4345,0,13267,13268,13269,10,4345,4346,4343,0,13269,13270,13267,10,4347,4346,4348,0,13271,13272,13273,10,4349,4347,4350,0,13274,13271,13275,10,4350,4351,4349,0,13275,13276,13274,10,4350,4344,4352,0,13277,13278,13279,10,4350,4348,4344,0,13277,13280,13278,10,4353,4354,4355,0,13281,13282,13283,10,4353,4356,4357,0,13284,13285,13286,10,4357,4354,4353,0,13286,13287,13284,10,4353,4358,4356,0,13284,13288,13285,10,4355,4359,4351,0,13289,13290,13276,10,4354,4359,4355,0,13282,13291,13283,10,4359,4349,4351,0,13290,13274,13276,10,4352,4360,4361,0,13292,13293,13294,10,4361,4351,4352,0,13294,13295,13292,10,4344,4343,4360,0,13268,13267,13293,10,4352,4344,4360,0,13292,13268,13293,10,4350,4347,4348,0,13275,13271,13273,10,4346,4360,4343,0,13296,13297,13298,10,4346,4347,4360,0,13296,13299,13297,10,4349,4360,4347,0,13300,13297,13299,10,4360,4349,4361,0,13297,13300,13301,10,4348,4345,4344,0,13280,13302,13278,10,4358,4353,4355,0,13303,13281,13283,10,4358,4362,4356,0,13304,13305,13306,10,4355,4362,4358,0,13307,13305,13304,10,4361,4357,4351,0,13294,13308,13295,10,4357,4361,4354,0,13308,13294,13309,10,4362,4355,4351,0,13310,13289,13276,10,4357,4362,4351,0,13311,13312,13313,10,4356,4362,4357,0,13314,13312,13311,10,4351,4350,4352,0,13313,13277,13279,10,4359,4361,4349,0,13291,13301,13300,10,4354,4361,4359,0,13282,13301,13291,10,4345,4348,4346,0,13315,13316,13317,10,4363,4364,4365,0,13318,13319,13320,10,4366,4367,4368,0,13321,13322,13323,10,4369,4366,4364,0,13324,13325,13326,10,4365,4368,4367,0,13327,13328,13329,10,4370,4371,4372,0,13330,13331,13332,10,4373,4372,4371,0,13333,13334,13335,10,4372,4373,4374,0,13336,13337,13338,10,4374,4375,4376,0,13339,13340,13341,10,4377,4376,4378,0,13342,13343,13344,10,4378,4379,4377,0,13344,13345,13342,10,4373,4377,4379,0,13333,13346,13347,10,4373,4380,4375,0,13333,13348,13349,10,4376,4370,4374,0,13350,13330,13351,10,4376,4381,4378,0,13350,13352,13353,10,4380,4369,4382,0,13348,13324,13354,10,4379,4378,4381,0,13345,13344,13355,10,4381,4369,4380,0,13355,13356,13357,10,4375,4382,4363,0,13340,13358,13318,10,4363,4376,4375,0,13318,13341,13340,10,4365,4364,4383,0,13320,13319,13359,10,4363,4382,4364,0,13318,13358,13319,10,4384,4366,4368,0,13360,13321,13323,10,4366,4381,4367,0,13321,13355,13322,10,4381,4366,4369,0,13355,13321,13356,10,4384,4364,4366,0,13361,13326,13325,10,4382,4369,4364,0,13354,13324,13326,10,4367,4363,4365,0,13329,13362,13327,10,4384,4383,4364,0,13363,13364,13365,10,4368,4365,4383,0,13328,13327,13366,10,4371,4370,4376,0,13331,13330,13350,10,4377,4373,4371,0,13346,13333,13335,10,4377,4371,4376,0,13367,13368,13369,10,4370,4372,4374,0,13370,13336,13338,10,4374,4373,4375,0,13339,13371,13340,10,4373,4379,4380,0,13333,13347,13348,10,4376,4363,4367,0,13350,13362,13329,10,4376,4367,4381,0,13350,13329,13352,10,4375,4380,4382,0,13349,13348,13354,10,4380,4379,4381,0,13357,13345,13355,10,4368,4383,4384,0,13372,13364,13373,10,4385,4386,4387,0,13374,13375,13376,10,4388,4389,4390,0,13377,13378,13379,10,4389,4391,4387,0,13378,13380,13381,10,4391,4388,4392,0,13382,13383,13384,10,4392,4385,4391,0,13384,13385,13382,10,4386,4389,4393,0,13386,13387,13388,10,4394,4395,4392,0,13389,13390,13391,10,4390,4395,4394,0,13392,13393,13394,10,4396,4397,4398,0,13395,13396,13397,10,4399,4400,4397,0,13398,13399,13400,10,4401,4399,4397,0,13401,13402,13403,10,4386,4393,4399,0,13386,13388,13402,10,4387,4398,4400,0,13404,13405,13406,10,4393,4387,4400,0,13407,13381,13399,10,4401,4396,4398,0,13408,13395,13397,10,4394,4388,4390,0,13389,13409,13410,10,4392,4395,4385,0,13411,13412,13374,10,4385,4395,4386,0,13374,13412,13375,10,4388,4391,4389,0,13377,13380,13378,10,4393,4389,4387,0,13407,13378,13381,10,4391,4385,4387,0,13382,13385,13404,10,4386,4390,4389,0,13386,13392,13387,10,4390,4386,4395,0,13392,13386,13393,10,4394,4392,4388,0,13413,13384,13383,10,4400,4398,4397,0,13406,13405,13414,10,4401,4397,4396,0,13401,13403,13415,10,4401,4386,4399,0,13401,13386,13402,10,4399,4393,4400,0,13398,13407,13399,10,4387,4401,4398,0,13376,13408,13397,10,4401,4387,4386,0,13408,13376,13375,10,4402,4403,4404,0,13416,13417,13418,10,4405,4404,4406,0,13419,13420,13421,10,4403,4406,4404,0,13422,13423,13424,10,4407,4408,4402,0,13425,13426,13427,10,4402,4409,4407,0,13427,13428,13425,10,4410,4402,4408,0,13429,13427,13426,10,4411,4412,4413,0,13430,13431,13432,10,4414,4415,4416,0,13433,13434,13435,10,4414,4417,4413,0,13436,13437,13438,10,4413,4415,4414,0,13438,13439,13436,10,4411,4416,4412,0,13440,13441,13442,10,4412,4407,4409,0,13442,13425,13428,10,4404,4405,4415,0,13424,13443,13439,10,4416,4405,4407,0,13435,13419,13444,10,4409,4404,4413,0,13445,13418,13432,10,4409,4413,4412,0,13445,13432,13431,10,4414,4411,4417,0,13446,13447,13448,10,4402,4410,4403,0,13449,13450,13451,10,4409,4402,4404,0,13445,13416,13418,10,4406,4408,4405,0,13421,13452,13419,10,4407,4405,4408,0,13444,13419,13452,10,4406,4403,4410,0,13423,13422,13453,10,4417,4411,4413,0,13454,13430,13432,10,4414,4416,4411,0,13433,13435,13455,10,4412,4416,4407,0,13442,13441,13425,10,4413,4404,4415,0,13438,13424,13439,10,4416,4415,4405,0,13435,13434,13419,10,4406,4410,4408,0,13456,13450,13457,10,4418,4419,4420,0,13458,13459,13460,10,4421,4422,4423,0,13461,13462,13463,10,4424,4425,4420,0,13464,13465,13466,10,4421,4426,4419,0,13467,13468,13469,10,4423,4427,4424,0,13470,13471,13472,10,4422,4418,4425,0,13473,13474,13475,10,4425,4418,4420,0,13475,13474,13476,10,4428,4429,4430,0,13477,13478,13479,10,4431,4432,4433,0,13480,13481,13482,10,4431,4433,4434,0,13483,13484,13485,10,4432,4435,4436,0,13486,13487,13488,10,4433,4436,4437,0,13484,13489,13490,10,4435,4434,4437,0,13491,13492,13493,10,4436,4422,4438,0,13494,13473,13495,10,4423,4437,4427,0,13470,13493,13471,10,4437,4436,4439,0,13490,13489,13496,10,4438,4427,4437,0,13497,13498,13490,10,4440,4436,4435,0,13499,13488,13487,10,4419,4418,4421,0,13459,13458,13461,10,4422,4421,4418,0,13462,13461,13458,10,4426,4424,4420,0,13500,13464,13466,10,4424,4438,4425,0,13464,13501,13465,10,4438,4424,4427,0,13501,13464,13502,10,4421,4424,4426,0,13467,13472,13468,10,4421,4423,4424,0,13467,13470,13472,10,4422,4425,4438,0,13473,13475,13495,10,4428,4434,4429,0,13503,13492,13504,10,4430,4431,4434,0,13479,13483,13485,10,4430,4434,4428,0,13479,13485,13477,10,4431,4429,4432,0,13505,13506,13486,10,4430,4429,4431,0,13507,13506,13505,10,4435,4432,4429,0,13487,13486,13506,10,4433,4437,4434,0,13484,13490,13485,10,4434,4435,4429,0,13492,13491,13504,10,4433,4432,4436,0,13482,13481,13494,10,4436,4440,4422,0,13494,13508,13473,10,4439,4436,4438,0,13509,13494,13495,10,4423,4435,4437,0,13470,13491,13493,10,4439,4438,4437,0,13496,13497,13490,10,4423,4440,4435,0,13510,13499,13487,10,4440,4423,4422,0,13499,13510,13511,10,4426,4420,4419,0,13512,13513,13514,10,4441,4442,4443,0,13515,13516,13517,10,4443,4444,4441,0,13517,13518,13515,10,4445,4446,4442,0,13519,13520,13521,10,4447,4444,4448,0,13522,13523,13524,10,4449,4447,4450,0,13525,13522,13526,10,4449,4445,4441,0,13527,13528,13529,10,4451,4450,4442,0,13530,13531,13532,10,4450,4448,4442,0,13531,13533,13532,10,4452,4453,4454,0,13534,13535,13536,10,4455,4456,4457,0,13537,13538,13539,10,4454,4455,4452,0,13540,13541,13542,10,4458,4456,4459,0,13543,13544,13545,10,4460,4461,4453,0,13546,13547,13548,10,4462,4453,4458,0,13549,13548,13550,10,4459,4461,4463,0,13551,13552,13553,10,4459,4463,4451,0,13551,13553,13530,10,4464,4460,4462,0,13554,13546,13549,10,4464,4463,4460,0,13555,13556,13557,10,4449,4459,4446,0,13558,13559,13520,10,4443,4448,4444,0,13517,13560,13561,10,4441,4445,4442,0,13562,13519,13521,10,4450,4447,4448,0,13526,13522,13524,10,4449,4451,4464,0,13525,13563,13555,10,4451,4449,4450,0,13563,13525,13526,10,4444,4447,4441,0,13564,13565,13529,10,4447,4449,4441,0,13565,13527,13529,10,4446,4451,4442,0,13566,13530,13532,10,4448,4443,4442,0,13533,13567,13532,10,4452,4455,4457,0,13568,13537,13539,10,4454,4453,4461,0,13569,13548,13547,10,4454,4461,4455,0,13540,13570,13541,10,4458,4457,4456,0,13543,13571,13544,10,4457,4458,4453,0,13571,13543,13572,10,4452,4457,4453,0,13573,13571,13572,10,4462,4458,4459,0,13574,13543,13545,10,4461,4460,4463,0,13570,13575,13576,10,4462,4460,4453,0,13549,13546,13548,10,4455,4459,4456,0,13537,13551,13538,10,4459,4455,4461,0,13551,13537,13552,10,4446,4459,4451,0,13566,13551,13530,10,4449,4464,4462,0,13527,13554,13549,10,4463,4464,4451,0,13556,13555,13563,10,4445,4449,4446,0,13519,13558,13520,10,4449,4462,4459,0,13558,13577,13559,10,4465,4466,4467,0,13578,13579,13580,10,4468,4469,4470,0,13581,13582,13583,10,4471,4470,4466,0,13584,13583,13585,10,4472,4473,4474,0,13586,13587,13588,10,4473,4469,4475,0,13589,13590,13591,10,4474,4475,4468,0,13592,13593,13594,10,4474,4471,4465,0,13592,13595,13596,10,4476,4477,4478,0,13597,13598,13599,10,4467,4466,4472,0,13600,13601,13602,10,4477,4476,4479,0,13603,13604,13605,10,4476,4478,4480,0,13606,13607,13608,10,4477,4481,4482,0,13609,13610,13611,10,4482,4478,4477,0,13611,13612,13609,10,4481,4483,4484,0,13610,13613,13614,10,4480,4484,4485,0,13608,13615,13616,10,4483,4479,4485,0,13617,13605,13618,10,4486,4485,4469,0,13619,13618,13620,10,4487,4468,4475,0,13621,13594,13593,10,4485,4475,4469,0,13616,13622,13623,10,4486,4487,4484,0,13624,13625,13614,10,4467,4472,4488,0,13580,13626,13627,10,4471,4468,4470,0,13584,13581,13583,10,4465,4471,4466,0,13628,13584,13585,10,4488,4472,4474,0,13629,13586,13588,10,4474,4473,4475,0,13630,13589,13591,10,4465,4488,4474,0,13596,13631,13592,10,4471,4474,4468,0,13595,13592,13594,10,4470,4469,4473,0,13632,13620,13633,10,4470,4473,4466,0,13632,13633,13601,10,4472,4466,4473,0,13602,13601,13633,10,4465,4467,4488,0,13578,13580,13634,10,4478,4482,4480,0,13635,13636,13637,10,4479,4476,4480,0,13638,13606,13608,10,4480,4481,4484,0,13639,13610,13614,10,4481,4480,4482,0,13610,13639,13611,10,4479,4480,4485,0,13638,13608,13616,10,4477,4483,4481,0,13603,13617,13640,10,4483,4477,4479,0,13617,13603,13605,10,4486,4483,4485,0,13619,13617,13618,10,4485,4487,4475,0,13616,13641,13622,10,4487,4485,4484,0,13641,13616,13615,10,4468,4486,4469,0,13642,13624,13643,10,4486,4468,4487,0,13624,13642,13625,10,4483,4486,4484,0,13613,13624,13614,10,4489,4490,4491,0,13644,13645,13646,10,4489,4492,4493,0,13644,13647,13648,10,4494,4495,4496,0,13649,13650,13651,10,4497,4498,4493,0,13652,13653,13654,10,4499,4498,4494,0,13655,13656,13657,10,4498,4489,4493,0,13656,13658,13659,10,4492,4491,4495,0,13660,13661,13662,10,4495,4491,4496,0,13662,13661,13663,10,4500,4501,4502,0,13664,13665,13666,10,4503,4491,4490,0,13667,13668,13669,10,4499,4496,4503,0,13670,13651,13671,10,4503,4490,4499,0,13672,13673,13655,10,4502,4504,4505,0,13674,13675,13676,10,4500,4505,4506,0,13664,13677,13678,10,4507,4501,4506,0,13679,13680,13681,10,4504,4506,4508,0,13682,13681,13683,10,4504,4508,4509,0,13682,13683,13684,10,4509,4510,4506,0,13685,13686,13678,10,4510,4508,4506,0,13687,13688,13689,10,4511,4492,4497,0,13690,13660,13691,10,4510,4512,4508,0,13687,13692,13688,10,4497,4493,4510,0,13693,13694,13686,10,4512,4493,4492,0,13695,13696,13697,10,4511,4509,4508,0,13698,13684,13683,10,4492,4489,4491,0,13647,13644,13646,10,4499,4494,4496,0,13670,13649,13651,10,4494,4497,4495,0,13649,13652,13650,10,4497,4494,4498,0,13652,13649,13653,10,4499,4490,4498,0,13655,13673,13656,10,4489,4498,4490,0,13658,13656,13673,10,4492,4495,4497,0,13660,13662,13691,10,4503,4496,4491,0,13667,13699,13668,10,4502,4507,4504,0,13674,13700,13675,10,4500,4506,4501,0,13701,13689,13702,10,4500,4502,4505,0,13664,13666,13677,10,4502,4501,4507,0,13703,13680,13679,10,4504,4507,4506,0,13682,13679,13681,10,4505,4509,4506,0,13677,13685,13678,10,4505,4504,4509,0,13676,13675,13704,10,4510,4493,4512,0,13687,13659,13692,10,4511,4497,4510,0,13705,13693,13686,10,4509,4511,4510,0,13685,13705,13686,10,4511,4512,4492,0,13698,13695,13697,10,4512,4511,4508,0,13695,13698,13683,10,4513,4514,4515,0,13706,13707,13708,10,4514,4516,4517,0,13707,13709,13710,10,4518,4519,4520,0,13711,13712,13713,10,4520,4521,4518,0,13713,13714,13711,10,4522,4523,4519,0,13715,13716,13712,10,4523,4524,4516,0,13717,13718,13719,10,4515,4522,4518,0,13720,13721,13722,10,4525,4526,4527,0,13723,13724,13725,10,4525,4527,4528,0,13723,13725,13726,10,4529,4525,4528,0,13727,13723,13726,10,4529,4530,4531,0,13727,13728,13729,10,4532,4526,4533,0,13730,13731,13732,10,4534,4533,4531,0,13733,13732,13734,10,4526,4525,4533,0,13735,13736,13737,10,4534,4535,4530,0,13738,13739,13740,10,4527,4532,4534,0,13741,13742,13738,10,4536,4537,4538,0,13743,13744,13745,10,4539,4513,4521,0,13746,13747,13748,10,4520,4536,4538,0,13713,13743,13745,10,4538,4521,4520,0,13745,13714,13713,10,4524,4540,4535,0,13749,13750,13751,10,4535,4531,4516,0,13751,13734,13752,10,4535,4516,4524,0,13751,13752,13749,10,4541,4517,4516,0,13753,13754,13755,10,4541,4531,4530,0,13753,13729,13728,10,4521,4513,4515,0,13756,13706,13708,10,4515,4514,4517,0,13708,13707,13710,10,4518,4522,4519,0,13711,13715,13712,10,4524,4522,4540,0,13757,13715,13758,10,4522,4524,4523,0,13715,13757,13716,10,4514,4519,4523,0,13759,13760,13717,10,4513,4519,4514,0,13761,13760,13759,10,4514,4523,4516,0,13759,13717,13719,10,4521,4515,4518,0,13748,13720,13722,10,4540,4515,4517,0,13762,13720,13763,10,4515,4540,4522,0,13720,13762,13721,10,4530,4529,4528,0,13728,13727,13726,10,4534,4532,4533,0,13733,13730,13732,10,4535,4534,4531,0,13751,13733,13734,10,4525,4531,4533,0,13736,13764,13737,10,4529,4531,4525,0,13765,13764,13736,10,4530,4528,4534,0,13740,13766,13738,10,4528,4527,4534,0,13766,13741,13738,10,4526,4532,4527,0,13731,13730,13767,10,4538,4539,4521,0,13768,13746,13748,10,4519,4536,4520,0,13760,13769,13770,10,4536,4519,4537,0,13769,13760,13771,10,4513,4537,4519,0,13706,13772,13773,10,4537,4513,4539,0,13772,13706,13774,10,4538,4537,4539,0,13775,13772,13774,10,4540,4530,4535,0,13762,13740,13739,10,4541,4516,4531,0,13776,13719,13764,10,4540,4541,4530,0,13777,13753,13728,10,4541,4540,4517,0,13753,13777,13754,10,4542,4543,4544,0,13778,13779,13780,10,4545,4546,4547,0,13781,13782,13783,10,4548,4549,4550,0,13784,13785,13786,10,4550,4551,4552,0,13786,13787,13788,10,4543,4545,4549,0,13789,13790,13791,10,4548,4544,4543,0,13792,13793,13789,10,4553,4551,4549,0,13794,13795,13791,10,4554,4550,4546,0,13796,13797,13798,10,4547,4546,4550,0,13799,13798,13797,10,4550,4552,4547,0,13797,13800,13799,10,4555,4556,4557,0,13801,13802,13803,10,4558,4559,4555,0,13804,13805,13806,10,4555,4557,4558,0,13806,13807,13804,10,4560,4561,4562,0,13808,13809,13810,10,4563,4562,4561,0,13811,13812,13813,10,4556,4564,4562,0,13814,13815,13816,10,4557,4563,4558,0,13817,13818,13819,10,4561,4555,4559,0,13820,13821,13822,10,4561,4560,4565,0,13820,13823,13824,10,4566,4567,4568,0,13825,13826,13827,10,4569,4544,4548,0,13828,13793,13792,10,4554,4570,4548,0,13829,13830,13784,10,4567,4542,4544,0,13831,13778,13780,10,4552,4571,4559,0,13800,13832,13822,10,4551,4563,4571,0,13833,13811,13834,10,4553,4547,4552,0,13835,13836,13837,10,4565,4560,4564,0,13838,13839,13840,10,4543,4542,4546,0,13779,13778,13782,10,4545,4543,4546,0,13781,13779,13782,10,4553,4545,4547,0,13841,13781,13783,10,4554,4548,4550,0,13829,13784,13786,10,4550,4549,4551,0,13786,13785,13787,10,4548,4543,4549,0,13792,13789,13791,10,4545,4553,4549,0,13790,13794,13791,10,4542,4554,4546,0,13842,13796,13798,10,4560,4562,4564,0,13808,13810,13843,10,4571,4563,4561,0,13834,13811,13813,10,4557,4556,4562,0,13817,13814,13816,10,4563,4557,4562,0,13818,13817,13816,10,4559,4571,4561,0,13822,13832,13820,10,4555,4561,4565,0,13821,13820,13824,10,4568,4569,4570,0,13844,13845,13846,10,4568,4570,4566,0,13844,13846,13847,10,4555,4565,4556,0,13801,13838,13802,10,4542,4566,4554,0,13842,13825,13796,10,4566,4542,4567,0,13825,13842,13826,10,4570,4569,4548,0,13848,13828,13792,10,4570,4554,4566,0,13830,13829,13849,10,4569,4567,4544,0,13850,13831,13780,10,4568,4567,4569,0,13851,13831,13850,10,4563,4553,4558,0,13818,13794,13819,10,4551,4553,4563,0,13795,13794,13818,10,4552,4551,4571,0,13852,13833,13834,10,4558,4552,4559,0,13804,13837,13805,10,4552,4558,4553,0,13837,13804,13835,10,4556,4565,4564,0,13853,13838,13840,10,4572,4573,4574,0,13854,13855,13856,10,4572,4575,4576,0,13854,13857,13858,10,4577,4576,4575,0,13859,13858,13857,10,4577,4578,4579,0,13859,13860,13861,10,4580,4581,4582,0,13862,13863,13864,10,4583,4584,4581,0,13865,13866,13863,10,4574,4582,4581,0,13867,13868,13869,10,4584,4575,4581,0,13870,13871,13869,10,4576,4585,4573,0,13872,13873,13874,10,4586,4583,4580,0,13875,13876,13877,10,4579,4587,4583,0,13878,13879,13876,10,4588,4589,4590,0,13880,13881,13882,10,4588,4590,4591,0,13880,13882,13883,10,4592,4591,4590,0,13884,13883,13882,10,4593,4594,4592,0,13885,13886,13884,10,4595,4596,4597,0,13887,13888,13889,10,4595,4598,4588,0,13890,13891,13892,10,4590,4597,4596,0,13893,13894,13895,10,4599,4600,4601,0,13896,13897,13898,10,4602,4590,4589,0,13899,13893,13900,10,4585,4601,4600,0,13873,13901,13902,10,4585,4600,4573,0,13873,13902,13874,10,4585,4580,4601,0,13873,13877,13901,10,4574,4599,4603,0,13867,13903,13904,10,4603,4601,4580,0,13905,13898,13862,10,4600,4599,4604,0,13906,13907,13908,10,4604,4574,4573,0,13908,13856,13855,10,4579,4593,4596,0,13878,13909,13895,10,4605,4592,4578,0,13910,13911,13912,10,4587,4605,4584,0,13913,13914,13915,10,4578,4592,4594,0,13916,13884,13886,10,4594,4579,4578,0,13886,13917,13916,10,4572,4576,4573,0,13854,13858,13855,10,4577,4586,4576,0,13859,13918,13858,10,4586,4577,4579,0,13918,13859,13861,10,4580,4583,4581,0,13862,13865,13863,10,4583,4587,4584,0,13865,13919,13866,10,4575,4572,4574,0,13871,13920,13867,10,4575,4574,4581,0,13871,13867,13869,10,4584,4577,4575,0,13870,13921,13871,10,4577,4584,4578,0,13921,13870,13912,10,4585,4576,4580,0,13873,13872,13877,10,4576,4586,4580,0,13872,13875,13877,10,4586,4579,4583,0,13875,13878,13876,10,4593,4592,4590,0,13885,13884,13882,10,4598,4597,4602,0,13922,13889,13923,10,4597,4598,4595,0,13889,13922,13887,10,4596,4595,4605,0,13888,13887,13914,10,4591,4595,4588,0,13924,13890,13892,10,4605,4591,4592,0,13910,13924,13911,10,4591,4605,4595,0,13924,13910,13890,10,4593,4590,4596,0,13909,13893,13895,10,4590,4602,4597,0,13893,13899,13894,10,4599,4601,4603,0,13896,13898,13905,10,4589,4588,4598,0,13925,13892,13891,10,4582,4574,4603,0,13868,13867,13904,10,4599,4574,4604,0,13903,13867,13926,10,4603,4580,4582,0,13905,13862,13864,10,4600,4604,4573,0,13906,13908,13855,10,4579,4594,4593,0,13878,13927,13909,10,4587,4579,4596,0,13879,13878,13895,10,4605,4578,4584,0,13910,13912,13870,10,4587,4596,4605,0,13913,13888,13914,10,4602,4589,4598,0,13928,13929,13930,10,4606,4607,4608,0,13931,13932,13933,10,4609,4610,4611,0,13934,13935,13936,10,4608,4610,4609,0,13937,13938,13939,10,4607,4612,4610,0,13940,13941,13938,10,4613,4611,4606,0,13942,13943,13944,10,4613,4614,4615,0,13942,13945,13946,10,4611,4616,4617,0,13943,13947,13948,10,4618,4619,4620,0,13949,13950,13951,10,4621,4622,4623,0,13952,13953,13954,10,4624,4621,4625,0,13955,13956,13957,10,4622,4619,4626,0,13958,13959,13960,10,4625,4627,4618,0,13961,13962,13963,10,4624,4618,4628,0,13964,13963,13965,10,4629,4630,4631,0,13966,13967,13968,10,4631,4632,4629,0,13968,13969,13966,10,4633,4613,4615,0,13970,13942,13946,10,4633,4629,4632,0,13970,13971,13972,10,4631,4630,4634,0,13973,13974,13975,10,4634,4609,4631,0,13975,13939,13973,10,4631,4609,4613,0,13976,13934,13977,10,4630,4633,4615,0,13978,13979,13980,10,4615,4634,4630,0,13980,13981,13978,10,4630,4629,4633,0,13978,13982,13979,10,4616,4628,4617,0,13947,13965,13948,10,4620,4635,4612,0,13983,13984,13941,10,4635,4636,4624,0,13985,13986,13955,10,4635,4616,4612,0,13985,13987,13988,10,4623,4622,4626,0,13989,13990,13991,10,4614,4608,4634,0,13992,13933,13981,10,4615,4614,4634,0,13980,13992,13981,10,4608,4614,4606,0,13933,13992,13931,10,4606,4617,4607,0,13931,13993,13932,10,4613,4609,4611,0,13977,13934,13936,10,4612,4611,4610,0,13994,13936,13935,10,4611,4612,4616,0,13936,13994,13995,10,4608,4609,4634,0,13937,13939,13975,10,4608,4607,4610,0,13937,13940,13938,10,4614,4613,4606,0,13945,13942,13944,10,4617,4606,4611,0,13948,13944,13943,10,4626,4627,4623,0,13991,13996,13989,10,4627,4626,4619,0,13996,13991,13997,10,4618,4627,4619,0,13949,13998,13950,10,4628,4618,4620,0,13999,13949,13951,10,4625,4621,4623,0,14000,13952,13954,10,4624,4636,4621,0,13955,13986,13956,10,4619,4622,4621,0,13959,13958,14001,10,4636,4619,4621,0,14002,13959,14001,10,4619,4636,4620,0,13959,14002,13983,10,4624,4625,4618,0,13964,13961,13963,10,4627,4625,4623,0,13962,13961,14003,10,4633,4632,4613,0,13970,13972,13942,10,4632,4631,4613,0,14004,13976,13977,10,4616,4624,4628,0,13947,13964,13965,10,4635,4620,4636,0,13984,13983,14002,10,4607,4620,4612,0,13940,13983,13941,10,4616,4635,4624,0,13987,13985,13955,10,4617,4620,4607,0,14005,13951,14006,10,4620,4617,4628,0,13951,14005,13999,10,4637,4638,4639,0,14007,14008,14009,10,4640,4641,4642,0,14010,14011,14012,10,4643,4642,4641,0,14013,14012,14011,10,4644,4645,4646,0,14014,14015,14016,10,4647,4648,4649,0,14017,14018,14019,10,4649,4642,4647,0,14019,14020,14017,10,4640,4639,4646,0,14021,14022,14023,10,4645,4649,4641,0,14024,14025,14026,10,4650,4641,4649,0,14027,14026,14025,10,4637,4644,4651,0,14028,14029,14030,10,4652,4653,4654,0,14031,14032,14033,10,4655,4654,4653,0,14034,14033,14032,10,4653,4656,4655,0,14032,14035,14034,10,4657,4658,4659,0,14036,14037,14038,10,4660,4659,4661,0,14039,14038,14040,10,4659,4658,4654,0,14041,14042,14043,10,4653,4657,4660,0,14044,14045,14046,10,4653,4652,4662,0,14044,14047,14048,10,4662,4663,4657,0,14048,14049,14045,10,4664,4665,4666,0,14050,14051,14052,10,4662,4652,4654,0,14053,14054,14055,10,4663,4662,4658,0,14056,14057,14037,10,4667,4666,4668,0,14058,14059,14060,10,4667,4638,4651,0,14058,14061,14030,10,4664,4646,4639,0,14062,14023,14022,10,4666,4667,4651,0,14052,14063,14064,10,4651,4646,4664,0,14064,14016,14050,10,4665,4639,4638,0,14065,14009,14008,10,4669,4643,4656,0,14066,14067,14068,10,4653,4660,4669,0,14044,14046,14066,10,4661,4650,4648,0,14069,14027,14070,10,4661,4669,4660,0,14040,14071,14039,10,4656,4643,4650,0,14035,14072,14073,10,4640,4637,4639,0,14010,14007,14009,10,4637,4640,4642,0,14007,14010,14012,10,4650,4643,4641,0,14074,14013,14011,10,4651,4644,4646,0,14064,14014,14016,10,4649,4644,4642,0,14019,14014,14020,10,4644,4649,4645,0,14014,14019,14015,10,4647,4669,4648,0,14017,14075,14018,10,4645,4640,4646,0,14024,14021,14023,10,4640,4645,4641,0,14021,14024,14026,10,4648,4650,4649,0,14070,14027,14025,10,4638,4637,4651,0,14061,14028,14030,10,4637,4642,4644,0,14028,14076,14029,10,4647,4642,4643,0,14077,14076,14067,10,4669,4647,4643,0,14066,14077,14067,10,4657,4663,4658,0,14036,14056,14037,10,4660,4657,4659,0,14039,14036,14038,10,4655,4659,4654,0,14078,14041,14043,10,4661,4659,4655,0,14069,14041,14078,10,4653,4662,4657,0,14044,14048,14045,10,4658,4662,4654,0,14079,14053,14055,10,4667,4668,4638,0,14058,14060,14061,10,4665,4664,4639,0,14080,14062,14022,10,4666,4651,4664,0,14052,14064,14050,10,4668,4665,4638,0,14081,14065,14008,10,4666,4665,4668,0,14082,14065,14081,10,4669,4656,4653,0,14066,14068,14044,10,4669,4661,4648,0,14071,14040,14083,10,4661,4656,4650,0,14084,14035,14073,10,4656,4661,4655,0,14035,14084,14034,10,4670,4671,4672,0,14085,14086,14087,10,4672,4673,4670,0,14087,14088,14085,10,4674,4675,4671,0,14089,14090,14091,10,4676,4677,4678,0,14092,14093,14094,10,4679,4680,4681,0,14095,14096,14097,10,4679,4676,4682,0,14095,14098,14099,10,4671,4682,4683,0,14100,14101,14102,10,4683,4672,4671,0,14102,14103,14100,10,4673,4676,4670,0,14104,14105,14106,10,4673,4684,4677,0,14104,14107,14108,10,4679,4681,4674,0,14109,14110,14111,10,4674,4670,4676,0,14111,14106,14105,10,4685,4686,4687,0,14112,14113,14114,10,4688,4689,4686,0,14115,14116,14117,10,4690,4691,4692,0,14118,14119,14120,10,4690,4693,4694,0,14118,14121,14122,10,4693,4688,4685,0,14123,14124,14125,10,4695,4696,4693,0,14126,14127,14123,10,4690,4692,4697,0,14128,14129,14130,10,4694,4686,4689,0,14131,14132,14133,10,4694,4696,4687,0,14131,14134,14135,10,4698,4699,4700,0,14136,14137,14138,10,4687,4695,4685,0,14114,14139,14112,10,4701,4700,4702,0,14140,14141,14142,10,4700,4678,4677,0,14143,14094,14093,10,4684,4701,4702,0,14144,14145,14146,10,4703,4691,4689,0,14147,14148,14133,10,4703,4681,4680,0,14149,14097,14096,10,4692,4681,4689,0,14150,14151,14116,10,4684,4672,4701,0,14144,14087,14145,10,4672,4684,4673,0,14087,14144,14088,10,4670,4674,4671,0,14152,14089,14091,10,4683,4676,4678,0,14153,14092,14094,10,4676,4683,4682,0,14092,14153,14154,10,4680,4679,4682,0,14096,14095,14099,10,4701,4683,4678,0,14140,14102,14155,10,4683,4701,4672,0,14102,14140,14103,10,4671,4680,4682,0,14100,14156,14101,10,4680,4671,4675,0,14156,14100,14157,10,4676,4673,4677,0,14105,14104,14108,10,4679,4674,4676,0,14109,14111,14105,10,4685,4688,4686,0,14112,14158,14113,10,4688,4697,4689,0,14115,14159,14116,10,4694,4693,4696,0,14160,14161,14162,10,4691,4690,4694,0,14119,14118,14122,10,4695,4693,4685,0,14126,14123,14125,10,4693,4697,4688,0,14123,14130,14124,10,4690,4697,4693,0,14128,14130,14123,10,4689,4691,4694,0,14133,14148,14131,10,4687,4686,4694,0,14135,14132,14131,10,4700,4704,4698,0,14138,14163,14136,10,4684,4698,4677,0,14107,14164,14108,10,4698,4684,4699,0,14164,14107,14165,10,4700,4701,4678,0,14141,14140,14155,10,4704,4700,4677,0,14166,14143,14093,10,4698,4704,4677,0,14167,14166,14093,10,4699,4684,4702,0,14168,14144,14146,10,4700,4699,4702,0,14169,14168,14146,10,4681,4703,4689,0,14110,14147,14133,10,4675,4692,4680,0,14157,14129,14156,10,4703,4692,4691,0,14149,14120,14119,10,4692,4703,4680,0,14120,14149,14096,10,4697,4692,4689,0,14159,14150,14116,10,4674,4692,4675,0,14089,14150,14090,10,4692,4674,4681,0,14150,14089,14151,10,4687,4696,4695,0,14114,14170,14139,10,4705,4706,4707,0,14171,14172,14173,10,4708,4706,4705,0,14174,14175,14176,10,4708,4709,4710,0,14174,14177,14178,10,4711,4712,4713,0,14179,14180,14181,10,4713,4714,4715,0,14181,14182,14183,10,4713,4716,4714,0,14181,14184,14182,10,4717,4718,4712,0,14185,14186,14187,10,4709,4705,4719,0,14188,14189,14190,10,4716,4710,4714,0,14191,14192,14193,10,4716,4720,4721,0,14191,14194,14195,10,4722,4721,4720,0,14196,14195,14194,10,4723,4724,4725,0,14197,14198,14199,10,4718,4708,4726,0,14186,14200,14201,10,4727,4726,4722,0,14202,14201,14203,10,4728,4722,4729,0,14204,14203,14205,10,4724,4720,4727,0,14206,14207,14208,10,4708,4710,4721,0,14174,14178,14209,10,4726,4721,4722,0,14210,14209,14211,10,4725,4729,4722,0,14212,14213,14211,10,4730,4731,4732,0,14214,14215,14216,10,4733,4730,4734,0,14217,14214,14218,10,4735,4736,4737,0,14219,14220,14221,10,4735,4738,4736,0,14219,14222,14220,10,4731,4739,4735,0,14223,14224,14225,10,4740,4741,4735,0,14226,14227,14225,10,4734,4736,4738,0,14228,14229,14230,10,4734,4737,4736,0,14228,14231,14229,10,4740,4724,4728,0,14226,14206,14232,10,4728,4729,4738,0,14233,14234,14222,10,4738,4741,4728,0,14222,14235,14233,10,4729,4740,4733,0,14236,14237,14217,10,4729,4725,4724,0,14236,14238,14239,10,4742,4743,4744,0,14240,14241,14242,10,4745,4705,4746,0,14243,14244,14245,10,4746,4707,4747,0,14245,14246,14247,10,4746,4748,4745,0,14245,14248,14243,10,4707,4717,4749,0,14249,14185,14250,10,4747,4707,4744,0,14251,14249,14252,10,4747,4744,4748,0,14251,14252,14253,10,4719,4705,4745,0,14254,14255,14256,10,4750,4743,4745,0,14257,14258,14256,10,4750,4751,4752,0,14257,14259,14260,10,4753,4752,4751,0,14261,14260,14259,10,4753,4754,4755,0,14261,14262,14263,10,4756,4757,4748,0,14264,14265,14253,10,4758,4753,4751,0,14266,14267,14268,10,4751,4759,4758,0,14268,14269,14266,10,4750,4745,4748,0,14270,14243,14248,10,4760,4756,4744,0,14271,14272,14242,10,4761,4762,4763,0,14273,14274,14275,10,4764,4765,4766,0,14276,14277,14278,10,4767,4768,4766,0,14279,14280,14281,10,4767,4766,4769,0,14279,14281,14282,10,4769,4770,4767,0,14282,14283,14279,10,4768,4771,4761,0,14284,14285,14286,10,4768,4761,4766,0,14284,14286,14287,10,4767,4770,4765,0,14288,14289,14290,10,4772,4749,4717,0,14291,14250,14185,10,4762,4761,4771,0,14292,14286,14285,10,4758,4755,4765,0,14293,14294,14290,10,4765,4770,4758,0,14290,14289,14293,10,4754,4758,4770,0,14295,14296,14283,10,4770,4769,4754,0,14283,14282,14295,10,4765,4755,4754,0,14277,14297,14298,10,4773,4749,4774,0,14299,14300,14301,10,4775,4776,4777,0,14302,14303,14304,10,4778,4779,4777,0,14305,14306,14307,10,4778,4776,4773,0,14308,14309,14310,10,4780,4774,4777,0,14311,14301,14312,10,4779,4781,4777,0,14313,14314,14315,10,4782,4776,4775,0,14316,14317,14318,10,4742,4744,4783,0,14319,14320,14321,10,4783,4784,4785,0,14321,14322,14323,10,4749,4776,4783,0,14250,14324,14325,10,4749,4783,4744,0,14250,14325,14252,10,4774,4719,4742,0,14326,14254,14327,10,4774,4775,4777,0,14326,14328,14329,10,4774,4742,4785,0,14326,14327,14330,10,4786,4787,4785,0,14331,14332,14330,10,4786,4788,4789,0,14331,14333,14334,10,4790,4789,4788,0,14335,14336,14337,10,4791,4792,4793,0,14338,14339,14340,10,4794,4795,4784,0,14341,14342,14343,10,4784,4782,4794,0,14343,14344,14341,10,4796,4791,4797,0,14345,14346,14347,10,4797,4789,4796,0,14347,14348,14345,10,4795,4785,4784,0,14349,14323,14322,10,4795,4797,4788,0,14349,14350,14351,10,4791,4788,4797,0,14352,14351,14350,10,4791,4798,4792,0,14352,14353,14354,10,4799,4794,4782,0,14355,14356,14316,10,4782,4787,4799,0,14316,14357,14355,10,4796,4790,4793,0,14358,14359,14360,10,4800,4801,4802,0,14361,14362,14363,10,4803,4804,4805,0,14364,14365,14366,10,4806,4807,4800,0,14367,14368,14369,10,4807,4808,4809,0,14370,14371,14372,10,4749,4772,4719,0,14250,14291,14373,10,4810,4802,4811,0,14374,14375,14376,10,4812,4803,4813,0,14377,14378,14379,10,4798,4793,4812,0,14380,14381,14382,10,4813,4800,4792,0,14383,14369,14384,10,4812,4792,4798,0,14382,14384,14380,10,4804,4793,4792,0,14365,14340,14339,10,4808,4811,4809,0,14385,14386,14387,10,4808,4810,4811,0,14385,14388,14386,10,4814,4781,4779,0,14389,14314,14313,10,4779,4815,4816,0,14313,14390,14391,10,4815,4817,4818,0,14390,14392,14393,10,4819,4820,4816,0,14394,14395,14396,10,4821,4816,4818,0,14397,14396,14398,10,4821,4818,4822,0,14397,14398,14399,10,4822,4817,4821,0,14399,14400,14397,10,4823,4778,4819,0,14401,14305,14402,10,4823,4821,4815,0,14401,14403,14404,10,4817,4815,4821,0,14405,14404,14403,10,4816,4820,4814,0,14406,14407,14408,10,4824,4825,4826,0,14409,14410,14411,10,4824,4822,4827,0,14409,14412,14413,10,4828,4826,4829,0,14414,14415,14416,10,4830,4831,4826,0,14417,14418,14415,10,4828,4832,4833,0,14419,14420,14421,10,4834,4825,4833,0,14422,14423,14424,10,4822,4824,4831,0,14425,14426,14427,10,4830,4827,4835,0,14428,14429,14430,10,4836,4822,4831,0,14431,14432,14418,10,4835,4818,4817,0,14433,14434,14435,10,4835,4827,4822,0,14433,14413,14412,10,4833,4832,4829,0,14424,14436,14437,10,4833,4829,4834,0,14424,14437,14422,10,4837,4838,4839,0,14438,14439,14440,10,4840,4841,4842,0,14441,14442,14443,10,4843,4844,4845,0,14444,14445,14446,10,4846,4845,4842,0,14447,14446,14448,10,4843,4846,4840,0,14449,14450,14451,10,4846,4847,4841,0,14450,14452,14453,10,4844,4838,4837,0,14454,14455,14456,10,4848,4849,4850,0,14457,14458,14459,10,4851,4848,4850,0,14460,14457,14459,10,4852,4853,4854,0,14461,14462,14463,10,4854,4855,4856,0,14463,14464,14465,10,4853,4848,4854,0,14466,14467,14468,10,4850,4855,4857,0,14469,14470,14471,10,4858,4852,4856,0,14472,14473,14474,10,4859,4773,4780,0,14475,14299,14311,10,4859,4860,4838,0,14475,14476,14477,10,4820,4843,4839,0,14478,14479,14480,10,4820,4773,4859,0,14395,14310,14481,10,4860,4777,4781,0,14482,14315,14314,10,4781,4839,4838,0,14314,14440,14439,10,4860,4780,4777,0,14482,14483,14315,10,4841,4847,4854,0,14453,14452,14468,10,4847,4842,4855,0,14484,14485,14464,10,4841,4851,4857,0,14486,14460,14487,10,4855,4842,4841,0,14488,14489,14486,10,4746,4705,4707,0,14490,14171,14173,10,4706,4717,4707,0,14491,14185,14249,10,4719,4772,4715,0,14492,14493,14494,10,4708,4705,4709,0,14174,14176,14177,10,4711,4713,4715,0,14179,14181,14183,10,4713,4712,4716,0,14181,14180,14184,10,4717,4706,4718,0,14185,14491,14186,10,4711,4717,4712,0,14495,14185,14187,10,4708,4718,4706,0,14200,14186,14491,10,4709,4715,4714,0,14188,14496,14193,10,4715,4709,4719,0,14496,14188,14190,10,4709,4714,4710,0,14188,14193,14192,10,4716,4721,4710,0,14191,14195,14192,10,4723,4722,4720,0,14197,14196,14194,10,4722,4723,4725,0,14196,14197,14199,10,4718,4727,4712,0,14186,14202,14187,10,4727,4718,4726,0,14202,14186,14201,10,4728,4727,4722,0,14204,14202,14203,10,4727,4716,4712,0,14208,14184,14180,10,4716,4727,4720,0,14184,14208,14207,10,4724,4723,4720,0,14206,14497,14207,10,4728,4724,4727,0,14232,14206,14208,10,4726,4708,4721,0,14210,14174,14209,10,4734,4730,4732,0,14218,14214,14216,10,4733,4739,4730,0,14217,14498,14214,10,4739,4733,4740,0,14498,14217,14237,10,4735,4737,4731,0,14219,14221,14499,10,4735,4741,4738,0,14219,14235,14222,10,4731,4730,4739,0,14223,14500,14224,10,4739,4740,4735,0,14224,14226,14225,10,4733,4734,4738,0,14501,14228,14230,10,4772,4717,4711,0,14502,14185,14495,10,4772,4711,4715,0,14502,14495,14503,10,4734,4732,4737,0,14228,14504,14231,10,4729,4733,4738,0,14213,14501,14230,10,4741,4740,4728,0,14227,14226,14232,10,4740,4729,4724,0,14237,14236,14239,10,4737,4732,4731,0,14505,14506,14507,10,4746,4747,4748,0,14245,14247,14248,10,4719,4745,4742,0,14254,14256,14327,10,4745,4743,4742,0,14256,14258,14327,10,4750,4760,4743,0,14257,14508,14258,10,4760,4750,4752,0,14508,14257,14260,10,4753,4759,4752,0,14261,14509,14260,10,4759,4753,4755,0,14509,14261,14263,10,4744,4756,4748,0,14252,14264,14253,10,4751,4756,4759,0,14268,14264,14269,10,4756,4751,4757,0,14264,14268,14265,10,4758,4754,4753,0,14266,14510,14267,10,4757,4750,4748,0,14511,14270,14248,10,4750,4757,4751,0,14270,14511,14512,10,4743,4760,4744,0,14241,14271,14242,10,4759,4760,4752,0,14513,14271,14514,10,4760,4759,4756,0,14271,14513,14272,10,4758,4759,4755,0,14293,14513,14294,10,4764,4761,4763,0,14276,14273,14275,10,4764,4766,4761,0,14276,14278,14273,10,4771,4767,4763,0,14515,14279,14516,10,4767,4771,4768,0,14279,14515,14280,10,4764,4767,4765,0,14517,14288,14290,10,4764,4763,4767,0,14517,14518,14288,10,4769,4765,4754,0,14519,14277,14298,10,4765,4769,4766,0,14277,14519,14278,10,4771,4763,4762,0,14520,14521,14522,10,4780,4773,4774,0,14311,14299,14301,10,4776,4778,4777,0,14523,14305,14307,10,4776,4749,4773,0,14303,14524,14525,10,4820,4778,4773,0,14395,14308,14310,10,4778,4820,4819,0,14308,14395,14394,10,4782,4775,4787,0,14316,14318,14357,10,4742,4783,4785,0,14319,14321,14323,10,4707,4749,4744,0,14249,14250,14252,10,4782,4783,4776,0,14344,14325,14324,10,4783,4782,4784,0,14325,14344,14343,10,4774,4787,4775,0,14326,14332,14328,10,4787,4774,4785,0,14332,14326,14330,10,4786,4799,4787,0,14331,14526,14332,10,4799,4786,4789,0,14526,14331,14334,10,4791,4790,4788,0,14338,14335,14337,10,4790,4791,4793,0,14335,14338,14340,10,4797,4794,4789,0,14527,14341,14528,10,4794,4797,4795,0,14341,14527,14342,10,4798,4796,4793,0,14380,14345,14381,10,4796,4798,4791,0,14345,14380,14346,10,4795,4786,4785,0,14349,14529,14323,10,4786,4795,4788,0,14529,14349,14351,10,4799,4789,4794,0,14355,14530,14356,10,4796,4789,4790,0,14358,14530,14359,10,4802,4801,4811,0,14363,14362,14531,10,4803,4800,4802,0,14364,14361,14363,10,4800,4803,4805,0,14361,14364,14366,10,4808,4806,4810,0,14532,14367,14533,10,4806,4808,4807,0,14367,14532,14368,10,4813,4806,4800,0,14383,14367,14369,10,4801,4807,4809,0,14534,14370,14372,10,4801,4800,4807,0,14534,14535,14370,10,4813,4803,4806,0,14379,14378,14536,10,4803,4810,4806,0,14378,14374,14536,10,4810,4803,4802,0,14374,14378,14375,10,4774,4749,4719,0,14537,14250,14373,10,4809,4811,4801,0,14387,14386,14538,10,4812,4793,4804,0,14377,14360,14539,10,4812,4804,4803,0,14377,14539,14378,10,4792,4800,4805,0,14354,14535,14540,10,4812,4813,4792,0,14382,14383,14384,10,4805,4804,4792,0,14366,14365,14339,10,4779,4816,4814,0,14313,14391,14389,10,4815,4818,4816,0,14390,14393,14391,10,4823,4819,4816,0,14541,14394,14396,10,4821,4823,4816,0,14397,14541,14396,10,4823,4779,4778,0,14401,14306,14305,10,4779,4823,4815,0,14306,14401,14404,10,4826,4825,4834,0,14411,14410,14542,10,4824,4827,4825,0,14409,14413,14410,10,4832,4828,4829,0,14543,14414,14416,10,4828,4830,4826,0,14414,14417,14415,10,4831,4830,4836,0,14418,14417,14431,10,4825,4828,4833,0,14544,14419,14421,10,4825,4830,4828,0,14544,14428,14419,10,4830,4825,4827,0,14428,14544,14429,10,4831,4824,4826,0,14427,14426,14545,10,4829,4826,4834,0,14546,14545,14547,10,4836,4830,4835,0,14548,14428,14430,10,4836,4835,4817,0,14548,14430,14405,10,4822,4836,4817,0,14432,14431,14549,10,4835,4822,4818,0,14433,14412,14434,10,4840,4837,4839,0,14441,14438,14440,10,4840,4845,4837,0,14441,14550,14438,10,4845,4840,4842,0,14550,14441,14443,10,4846,4843,4845,0,14447,14444,14446,10,4847,4846,4842,0,14551,14447,14448,10,4839,4843,4840,0,14552,14449,14451,10,4840,4846,4841,0,14451,14450,14453,10,4845,4844,4837,0,14553,14454,14456,10,4857,4851,4850,0,14487,14460,14459,10,4856,4852,4854,0,14465,14461,14463,10,4848,4853,4849,0,14467,14466,14554,10,4841,4848,4851,0,14453,14467,14555,10,4848,4841,4854,0,14467,14453,14468,10,4850,4856,4855,0,14469,14474,14470,10,4850,4858,4856,0,14469,14472,14474,10,4849,4858,4850,0,14556,14557,14558,10,4860,4859,4780,0,14476,14475,14311,10,4844,4859,4838,0,14559,14475,14477,10,4781,4814,4820,0,14560,14561,14478,10,4781,4820,4839,0,14560,14478,14480,10,4843,4859,4844,0,14444,14481,14445,10,4859,4843,4820,0,14481,14444,14395,10,4860,4781,4838,0,14482,14314,14439,10,4854,4847,4855,0,14463,14484,14464,10,4855,4841,4857,0,14488,14486,14487,10,4853,4852,4849,0,14562,14563,14556,10,4849,4852,4858,0,14556,14563,14557,10,4861,4862,4863,0,14564,14565,14566,10,4861,4863,4864,0,14567,14568,14569,10,4865,4866,4867,0,14570,14571,14572,10,4868,4869,4865,0,14573,14574,14570,10,4870,4867,4866,0,14575,14576,14577,10,4864,4870,4866,0,14578,14575,14577,10,4868,4871,4869,0,14579,14580,14581,10,4872,4861,4871,0,14582,14583,14580,10,4873,4874,4875,0,14584,14585,14586,10,4875,4876,4873,0,14586,14587,14584,10,4877,4878,4874,0,14588,14589,14585,10,4879,4864,4866,0,14590,14578,14577,10,4877,4880,4879,0,14591,14592,14593,10,4881,4878,4882,0,14594,14595,14596,10,4865,4879,4866,0,14570,14597,14571,10,4865,4869,4875,0,14570,14574,14598,10,4865,4875,4874,0,14570,14598,14599,10,4874,4881,4879,0,14599,14600,14597,10,4880,4883,4864,0,14601,14602,14569,10,4884,4873,4880,0,14603,14604,14601,10,4885,4886,4887,0,14605,14606,14607,10,4888,4889,4890,0,14608,14609,14610,10,4885,4887,4888,0,14611,14612,14608,10,4891,4892,4893,0,14613,14614,14615,10,4893,4894,4891,0,14615,14616,14613,10,4886,4895,4892,0,14617,14618,14619,10,4888,4887,4892,0,14620,14621,14619,10,4893,4885,4890,0,14622,14623,14624,10,4893,4890,4889,0,14622,14624,14625,10,4893,4895,4896,0,14622,14626,14627,10,4889,4877,4882,0,14625,14628,14629,10,4878,4888,4891,0,14630,14620,14631,10,4894,4882,4878,0,14616,14596,14595,10,4897,4898,4899,0,14632,14633,14634,10,4900,4863,4862,0,14635,14636,14637,10,4862,4861,4901,0,14637,14638,14639,10,4902,4863,4900,0,14640,14641,14642,10,4901,4861,4903,0,14643,14644,14645,10,4901,4903,4904,0,14643,14645,14646,10,4905,4906,4907,0,14647,14648,14649,10,4908,4909,4910,0,14650,14651,14652,10,4910,4907,4908,0,14652,14653,14650,10,4911,4910,4912,0,14654,14655,14656,10,4913,4912,4910,0,14657,14658,14659,10,4913,4909,4914,0,14657,14660,14661,10,4915,4901,4905,0,14662,14639,14663,10,4911,4905,4910,0,14664,14663,14665,10,4909,4913,4910,0,14666,14667,14665,10,4906,4916,4899,0,14668,14669,14634,10,4899,4912,4907,0,14634,14670,14671,10,4917,4907,4912,0,14672,14671,14670,10,4918,4919,4920,0,14673,14674,14675,10,4921,4920,4922,0,14676,14677,14678,10,4923,4924,4925,0,14679,14680,14681,10,4926,4925,4924,0,14682,14683,14684,10,4924,4927,4926,0,14684,14685,14682,10,4919,4928,4925,0,14686,14687,14688,10,4921,4927,4924,0,14689,14690,14691,10,4921,4923,4918,0,14689,14692,14693,10,4870,4929,4930,0,14694,14695,14696,10,4930,4903,4872,0,14696,14697,14698,10,4931,4918,4923,0,14699,14693,14692,10,4932,4917,4914,0,14700,14672,14701,10,4933,4922,4926,0,14702,14703,14704,10,4927,4914,4909,0,14685,14661,14660,10,4932,4922,4933,0,14705,14678,14706,10,4932,4933,4909,0,14705,14706,14651,10,4934,4935,4903,0,14707,14708,14697,10,4936,4937,4938,0,14709,14710,14711,10,4939,4940,4938,0,14712,14713,14714,10,4938,4941,4939,0,14714,14715,14712,10,4934,4929,4898,0,14716,14717,14718,10,4940,4898,4936,0,14719,14718,14720,10,4939,4942,4934,0,14721,14722,14716,10,4935,4938,4937,0,14723,14724,14725,10,4938,4943,4941,0,14724,14726,14727,10,4944,4937,4936,0,14728,14729,14730,10,4897,4904,4945,0,14731,14732,14733,10,4929,4902,4898,0,14717,14640,14718,10,4946,4897,4947,0,14734,14735,14736,10,4935,4937,4903,0,14723,14725,14645,10,4945,4904,4903,0,14737,14646,14645,10,4944,4903,4937,0,14738,14645,14725,10,4948,4949,4950,0,14739,14740,14741,10,4950,4951,4948,0,14741,14742,14739,10,4952,4949,4953,0,14743,14744,14745,10,4952,4946,4947,0,14743,14734,14736,10,4954,4953,4949,0,14746,14747,14748,10,4955,4956,4957,0,14749,14750,14751,10,4947,4945,4950,0,14752,14733,14753,10,4958,4950,4949,0,14754,14753,14755,10,4959,4955,4949,0,14756,14757,14755,10,4951,4953,4948,0,14758,14759,14760,10,4951,4944,4960,0,14758,14728,14761,10,4951,4960,4946,0,14758,14761,14762,10,4954,4948,4953,0,14763,14760,14759,10,4961,4962,4963,0,14764,14765,14766,10,4964,4965,4966,0,14767,14768,14769,10,4967,4964,4968,0,14770,14771,14772,10,4969,4965,4964,0,14773,14774,14775,10,4968,4961,4970,0,14776,14777,14778,10,4970,4967,4968,0,14778,14779,14776,10,4969,4961,4966,0,14780,14781,14782,10,4956,4971,4967,0,14750,14783,14770,10,4972,4963,4973,0,14784,14766,14785,10,4973,4954,4972,0,14785,14786,14784,10,4969,4966,4965,0,14780,14782,14787,10,4941,4943,4974,0,14727,14726,14788,10,4975,4974,4976,0,14789,14790,14791,10,4977,4976,4978,0,14792,14791,14793,10,4979,4942,4980,0,14794,14722,14795,10,4981,4979,4982,0,14796,14797,14798,10,4975,4982,4980,0,14799,14800,14801,10,4939,4941,4975,0,14712,14715,14799,10,4977,4981,4982,0,14802,14803,14800,10,4982,4975,4977,0,14800,14799,14802,10,4943,4942,4979,0,14804,14805,14806,10,4976,4974,4979,0,14807,14808,14806,10,4983,4984,4985,0,14809,14810,14811,10,4986,4987,4988,0,14812,14813,14814,10,4989,4990,4991,0,14815,14816,14817,10,4992,4987,4986,0,14818,14819,14820,10,4993,4990,4989,0,14821,14822,14823,10,4989,4988,4985,0,14823,14824,14825,10,4985,4992,4983,0,14811,14826,14809,10,4994,4995,4991,0,14827,14828,14829,10,4994,4991,4990,0,14830,14817,14816,10,4990,4978,4981,0,14816,14831,14796,10,4994,4978,4993,0,14832,14793,14833,10,4993,4995,4994,0,14833,14834,14832,10,4996,4997,4998,0,14835,14836,14837,10,4996,4998,4999,0,14835,14837,14838,10,5000,4999,5001,0,14839,14840,14841,10,5002,5003,5004,0,14842,14843,14844,10,5004,5005,5001,0,14845,14846,14847,10,5006,4996,5000,0,14848,14849,14850,10,5007,5005,5003,0,14851,14852,14853,10,5003,5000,5007,0,14853,14850,14851,10,4998,5004,4999,0,14854,14855,14856,10,5008,5009,5010,0,14857,14858,14859,10,5011,5012,5013,0,14860,14861,14862,10,5010,5014,5011,0,14863,14864,2449,10,5010,5009,5014,0,14865,14866,14867,10,5008,5015,5011,0,14868,14869,14870,10,5016,5017,5018,0,14871,14872,14873,10,5012,5016,5018,0,14874,14875,14876,10,5018,5017,5013,0,14877,14878,14879,10,5019,4998,4997,0,14880,14881,14882,10,5019,5020,4935,0,14880,14883,14708,10,5006,5002,4942,0,14884,14885,14886,10,5019,5002,4998,0,14887,14842,14888,10,5019,4934,4942,0,14887,14716,14722,10,5020,5021,4943,0,14889,14890,14726,10,4938,4935,5020,0,14724,14723,14889,10,5005,5007,5015,0,14846,14891,14892,10,5022,5010,5007,0,14893,14859,14894,10,5007,5001,5022,0,14894,14841,14893,10,5018,5013,5012,0,14873,14895,14896,10,4870,4863,4902,0,14575,14641,14640,10,4871,4883,4876,0,14897,14602,14898,10,4883,4871,4861,0,14602,14897,14567,10,4883,4861,4864,0,14602,14567,14569,10,4867,4868,4865,0,14572,14573,14570,10,4870,4864,4863,0,14575,14578,14641,10,4872,4868,4930,0,14582,14579,14899,10,4868,4872,4871,0,14579,14582,14580,10,4871,4876,4869,0,14580,14587,14581,10,4876,4875,4869,0,14587,14586,14581,10,4884,4877,4874,0,14900,14588,14585,10,4873,4884,4874,0,14584,14900,14585,10,4879,4880,4864,0,14590,14901,14578,10,4877,4881,4882,0,14591,14594,14596,10,4881,4877,4879,0,14594,14591,14593,10,4865,4874,4879,0,14570,14599,14597,10,4874,4878,4881,0,14599,14630,14600,10,4876,4880,4873,0,14898,14601,14604,10,4880,4876,4883,0,14601,14898,14602,10,4877,4884,4880,0,14628,14603,14601,10,4886,4885,4896,0,14606,14605,14902,10,4890,4885,4888,0,14610,14611,14608,10,4893,4892,4895,0,14903,14904,14905,10,4887,4886,4892,0,14621,14617,14619,10,4891,4888,4892,0,14631,14620,14619,10,4894,4893,4889,0,14906,14622,14625,10,4896,4885,4893,0,14627,14623,14622,10,4930,4868,4867,0,14696,14907,14908,10,4930,4867,4870,0,14696,14908,14694,10,4882,4894,4889,0,14629,14906,14625,10,4894,4878,4891,0,14616,14595,14613,10,4889,4888,4878,0,14609,14608,14909,10,4877,4889,4878,0,14910,14609,14909,10,4886,4896,4895,0,14911,14902,14912,10,4904,4897,4916,0,14913,14632,14669,10,4916,4897,4899,0,14669,14632,14634,10,4862,4915,4900,0,14637,14662,14635,10,4915,4862,4901,0,14662,14637,14639,10,4870,4902,4929,0,14575,14640,14717,10,4900,4899,4898,0,14642,14914,14718,10,4902,4900,4898,0,14640,14642,14718,10,4899,4900,4915,0,14914,14642,14915,10,4872,4903,4861,0,14916,14645,14644,10,4901,4904,4916,0,14643,14646,14917,10,4916,4905,4901,0,14917,14647,14643,10,4905,4916,4906,0,14647,14917,14648,10,4910,4905,4907,0,14918,14647,14649,10,4908,4917,4909,0,14650,14919,14651,10,4911,4899,4915,0,14654,14914,14915,10,4899,4911,4912,0,14914,14654,14656,10,4917,4913,4914,0,14920,14657,14661,10,4913,4917,4912,0,14657,14920,14658,10,4911,4915,4905,0,14664,14662,14663,10,4906,4899,4907,0,14668,14634,14671,10,4917,4908,4907,0,14672,14921,14671,10,4921,4918,4920,0,14922,14673,14675,10,4922,4932,4921,0,14678,14705,14676,10,4923,4925,4928,0,14679,14681,14923,10,4920,4919,4925,0,14924,14686,14688,10,4926,4920,4925,0,14704,14924,14688,10,4920,4926,4922,0,14924,14704,14703,10,4923,4921,4924,0,14692,14689,14691,10,4918,4931,4919,0,14673,14925,14674,10,4928,4919,4931,0,14687,14686,14926,10,4927,4921,4932,0,14690,14689,14700,10,4927,4932,4914,0,14690,14700,14701,10,4927,4933,4926,0,14685,14927,14682,10,4933,4927,4909,0,14927,14685,14660,10,4917,4932,4909,0,14919,14705,14651,10,4928,4931,4923,0,14928,14925,14929,10,4929,4934,4903,0,14695,14707,14697,10,4940,4936,4938,0,14930,14709,14711,10,4940,4934,4898,0,14719,14716,14718,10,4939,4980,4942,0,14721,14795,14722,10,4940,4939,4934,0,14719,14721,14716,10,4960,4944,4936,0,14761,14728,14730,10,4960,4936,4946,0,14761,14730,14762,10,4897,4945,4947,0,14731,14733,14752,10,4898,4946,4936,0,14718,14734,14720,10,4946,4898,4897,0,14734,14718,14735,10,4944,4945,4903,0,14738,14737,14645,10,4944,4950,4945,0,14738,14741,14737,10,4950,4944,4951,0,14741,14738,14742,10,4948,4959,4949,0,14931,14932,14933,10,4959,4948,4954,0,14932,14931,14786,10,4973,4959,4954,0,14785,14932,14786,10,4958,4952,4947,0,14934,14743,14736,10,4952,4958,4949,0,14743,14934,14744,10,4954,4955,4957,0,14746,14749,14751,10,4955,4954,4949,0,14749,14746,14748,10,4958,4947,4950,0,14754,14752,14753,10,4959,4956,4955,0,14756,14935,14757,10,4956,4959,4973,0,14935,14756,14936,10,4952,4951,4946,0,14937,14758,14762,10,4951,4952,4953,0,14758,14937,14759,10,4961,4969,4962,0,14781,14780,14938,10,4970,4961,4963,0,14939,14764,14766,10,4972,4970,4963,0,14784,14939,14766,10,4968,4964,4966,0,14940,14767,14769,10,4967,4971,4964,0,14770,14783,14771,10,4969,4963,4962,0,14773,14941,14942,10,4963,4969,4964,0,14941,14773,14775,10,4971,4963,4964,0,14943,14941,14775,10,4963,4971,4973,0,14941,14943,14936,10,4966,4961,4968,0,14944,14777,14776,10,4930,4929,4903,0,14696,14695,14697,10,4970,4957,4967,0,14778,14945,14779,10,4957,4970,4972,0,14945,14778,14946,10,4957,4972,4954,0,14945,14946,14763,10,4956,4973,4971,0,14935,14936,14943,10,4957,4956,4967,0,14751,14750,14770,10,4974,4975,4941,0,14788,14947,14727,10,4977,4975,4976,0,14792,14789,14791,10,4979,4980,4982,0,14794,14795,14948,10,4976,4981,4978,0,14949,14796,14831,10,4981,4976,4979,0,14796,14949,14797,10,4939,4975,4980,0,14712,14799,14801,10,4943,4979,4974,0,14804,14806,14808,10,4984,4983,4995,0,14950,14951,14834,10,4993,4984,4995,0,14833,14950,14834,10,4989,4986,4988,0,14952,14812,14814,10,4989,4991,4986,0,14815,14817,14953,10,4992,4995,4983,0,14818,14828,14954,10,4995,4992,4986,0,14828,14818,14820,10,4991,4995,4986,0,14829,14828,14820,10,4993,4989,4984,0,14821,14823,14955,10,4984,4989,4985,0,14955,14823,14825,10,4993,4978,4990,0,14821,14956,14822,10,4977,4994,4981,0,14802,14827,14803,10,4994,4990,4981,0,14830,14816,14796,10,4994,4977,4978,0,14832,14792,14793,10,4987,4992,4988,0,14957,14826,14958,10,4988,4992,4985,0,14958,14826,14811,10,5000,4996,4999,0,14959,14835,14838,10,5007,5000,5001,0,14894,14839,14841,10,4998,5002,5004,0,14888,14842,14844,10,5004,5003,5005,0,14845,14960,14846,10,5006,5003,5002,0,14848,14853,14961,10,5003,5006,5000,0,14853,14848,14850,10,4999,5004,5001,0,14856,14855,14962,10,5016,5009,5017,0,14871,14963,14872,10,5009,5008,5017,0,14858,14857,14964,10,5022,5008,5010,0,14893,14857,14859,10,5011,5014,5012,0,14860,14965,14861,10,5010,5015,5007,0,14863,14892,14891,10,5015,5010,5011,0,14892,14863,2449,10,5012,5009,5016,0,14874,14866,14875,10,5009,5012,5014,0,14866,14874,14867,10,5017,5008,5011,0,14878,14868,14870,10,5017,5011,5013,0,14878,14870,14879,10,5020,5019,4997,0,14883,14880,14882,10,4934,5019,4935,0,14707,14880,14708,10,5006,5021,4996,0,14884,14966,14967,10,5021,5006,4942,0,14966,14884,14886,10,5021,4942,4943,0,14966,14886,14968,10,5019,4942,5002,0,14887,14722,14842,10,4996,5020,4997,0,14835,14889,14836,10,5020,4996,5021,0,14889,14835,14890,10,4938,5020,4943,0,14724,14889,14726,10,5008,5001,5015,0,14868,14962,14869,10,5001,5008,5022,0,14962,14868,14969,10,5001,5005,5015,0,14847,14846,14892,10,5023,5024,5025,0,14970,14971,14972,10,5023,5026,5024,0,14970,14973,14971,10,5027,5028,5029,0,14974,14975,14976,10,5027,5030,5025,0,14974,14977,14978,10,5031,5032,5033,0,14979,14980,14981,10,5034,5028,5035,0,14982,14975,14983,10,5028,5034,5031,0,14984,14985,14986,10,5025,5036,5037,0,14972,14987,14988,10,5036,5025,5024,0,14987,14972,14971,10,5038,5039,5034,0,14989,14990,14982,10,5035,5037,5040,0,14983,14991,14992,10,5033,5041,5042,0,14993,14994,14995,10,5042,5024,5033,0,14995,14996,14993,10,5043,5032,5039,0,14997,14998,14999,10,5034,5039,5032,0,14985,14999,14998,10,5037,5036,5040,0,14988,14987,15000,10,5036,5042,5040,0,14987,15001,15000,10,5044,5041,5043,0,15002,15003,15004,10,5045,5042,5041,0,15005,15006,15003,10,5046,5047,5039,0,15007,15008,14990,10,5048,5040,5042,0,15009,15010,15011,10,5045,5048,5042,0,15005,15012,15006,10,5047,5046,5048,0,15013,15014,15015,10,5044,5049,5048,0,15016,15017,15015,10,5044,5050,5051,0,15016,15018,15019,10,5029,5031,5052,0,15020,14986,15021,10,5029,5052,5053,0,15020,15021,15022,10,5027,5029,5053,0,14974,14976,15023,10,5054,5055,5052,0,15024,15025,15026,10,5027,5056,5030,0,15027,15028,15029,10,5023,5056,5055,0,15030,15028,15031,10,5055,5053,5052,0,15031,15022,15021,10,5056,5023,5025,0,15032,14970,14972,10,5030,5056,5025,0,15033,15032,14972,10,5029,5028,5031,0,15020,14984,14986,10,5035,5027,5025,0,14983,14974,14978,10,5027,5035,5028,0,14974,14983,14975,10,5026,5054,5024,0,15034,15035,15036,10,5031,5054,5052,0,15037,15035,15038,10,5054,5033,5024,0,15039,14981,15040,10,5054,5031,5033,0,15039,14979,14981,10,5037,5035,5025,0,14991,14983,14978,10,5034,5032,5031,0,14985,14998,14986,10,5038,5035,5040,0,14989,14983,14992,10,5035,5038,5034,0,14983,14989,14982,10,5043,5033,5032,0,15041,14993,15042,10,5033,5043,5041,0,14993,15041,14994,10,5042,5036,5024,0,15001,14987,14971,10,5050,5044,5043,0,15043,15002,15004,10,5044,5045,5041,0,15002,15005,15003,10,5046,5038,5040,0,15007,14989,14992,10,5038,5046,5039,0,14989,15007,14990,10,5051,5039,5047,0,15044,15045,15046,10,5051,5050,5039,0,15047,15048,15049,10,5043,5039,5050,0,15050,15049,15048,10,5048,5046,5040,0,15009,15051,15010,10,5049,5051,5047,0,15017,15019,15013,10,5049,5047,5048,0,15017,15013,15015,10,5045,5044,5048,0,15052,15016,15015,10,5049,5044,5051,0,15017,15016,15019,10,5055,5054,5026,0,15025,15024,15053,10,5027,5053,5055,0,15027,15022,15031,10,5027,5055,5056,0,15027,15031,15028,10,5023,5055,5026,0,15030,15031,15054],
								"skinWeights": [0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0],
								"vertices": [0.061116,26.4765,2.13979,0.017031,26.3278,2.14061,-0.000638,26.5058,2.17238,0.060172,26.4962,2.19012,-0.018047,26.326,2.13695,-0.051018,26.4935,2.19368,-0.062723,26.4936,2.14885,0.000808,26.5038,2.17547,0.076274,26.5052,2.14441,0.133728,26.4848,2.12618,0.065236,26.3305,2.09644,-0.065831,26.3325,2.09467,-0.127627,26.5007,2.12568,-0.070117,26.4955,2.12454,-0.102526,26.4573,2.1594,0.151259,26.5327,2.10015,0.110867,26.3724,2.0801,0.146448,26.3916,2.10497,0.15426,26.349,2.04189,0.190415,26.509,2.05914,-0.148585,26.3351,2.05943,-0.177721,26.5319,2.09032,-0.172083,26.4372,2.02626,-0.113119,26.4205,2.10661,-0.234074,26.4992,1.98768,-0.191761,26.4676,2.05606,-0.159256,26.4595,1.98045,-0.184806,26.4499,1.94575,-0.220155,26.3743,1.96909,-0.171517,26.3553,2.00198,0.240222,26.4784,1.97575,0.20792,26.4636,2.05773,0.211112,26.3686,1.97208,0.185984,26.4459,1.94659,0.15673,26.366,1.98758,0.14716,26.4443,2.01886,0.211356,26.4978,2.00973,0.29132,26.4764,1.88585,0.224905,26.4427,1.84795,0.210165,26.4505,1.95349,0.196436,26.4793,1.92132,0.25887,26.4663,1.97798,0.256104,26.3613,1.85445,0.185815,26.3636,1.88629,0.210076,26.3553,1.93297,-0.247102,26.3491,1.92084,-0.26487,26.4752,1.96499,-0.293265,26.48,1.89198,-0.223477,26.4367,1.84095,-0.213371,26.4725,1.9136,-0.182506,26.4237,1.94806,-0.217845,26.3537,1.85672,-0.250916,26.4634,1.66802,-0.198459,26.4912,1.81821,-0.216739,26.3562,1.81018,-0.354475,26.3577,1.71875,-0.364537,26.4938,1.72863,-0.273223,26.358,1.68354,-0.313629,26.3622,1.84783,-0.313401,26.4942,1.86165,0.26298,26.365,1.6852,0.216723,26.3568,1.80859,0.245349,26.4718,1.67121,0.309918,26.3634,1.85468,0.303079,26.4958,1.85241,0.20112,26.4921,1.82109,0.336304,26.4289,1.84999,0.348509,26.3533,1.71114,0.36182,26.4909,1.72348,0.407014,26.3717,1.54651,0.412222,26.5055,1.55475,0.384365,26.4983,1.70012,0.285125,26.3626,1.6669,0.27277,26.5016,1.66902,0.288213,26.4912,1.51668,0.315716,26.3712,1.52664,0.384204,26.3692,1.67688,-0.389666,26.4971,1.69908,-0.406339,26.3714,1.54778,-0.370609,26.3625,1.68635,-0.279506,26.3699,1.6552,-0.289732,26.4768,1.51554,-0.267612,26.4968,1.66833,-0.320148,26.3724,1.52045,-0.417311,26.5041,1.55449,-0.44281,26.5129,1.37397,-0.433254,26.3809,1.37893,-0.425324,26.5024,1.51922,-0.30881,26.5049,1.36332,-0.307895,26.51,1.50699,-0.316109,26.3768,1.4928,-0.33925,26.3785,1.35199,-0.409168,26.3765,1.51336,0.313544,26.4972,1.35342,0.339595,26.377,1.35306,0.314775,26.3769,1.49436,0.437979,26.5144,1.37651,0.299448,26.5075,1.50395,0.418308,26.5082,1.52755,0.427354,26.3762,1.36949,0.415596,26.3805,1.51382,0.490148,26.409,1.3306,0.423579,26.3591,1.54872,0.600211,26.3843,1.54774,-0.567003,26.3701,1.57949,-0.320596,26.3252,1.4766,-0.554237,26.4426,1.44498,-0.440399,26.3691,1.71048,0.307018,26.3263,1.50599,-0.476665,26.395,1.31508,-0.024216,26.4757,2.15314,-0.146024,26.4761,2.20537,0.067839,26.4761,2.23467,0.213306,26.4545,2.13746,0.114262,26.4498,2.08996,0.455942,26.3544,1.72132,0.745986,26.9638,1.5014,0.676478,26.8009,1.39956,0.755244,26.8045,1.45288,0.840575,26.9322,1.4367,-0.84061,26.7683,1.22,-0.820145,27.0332,1.3607,-0.724815,27.003,1.27836,-0.764152,26.794,1.20396,-0.667229,26.7784,1.2535,-0.685659,26.9527,1.47717,-0.722385,26.7904,1.4603,0.841146,26.7799,1.2181,0.775362,27.0355,1.29304,0.876362,26.9645,1.00839,0.916971,26.9552,0.925032,0.84057,26.9925,0.907905,0.696908,26.775,1.19325,-0.843097,26.9952,0.928495,-0.887596,26.988,0.989295,0.842085,26.8812,0.831592,0.682537,26.7379,0.971626,-0.688379,26.7499,0.982775,-0.925214,26.9447,0.903928,0.550833,25.9619,1.62878,0.444362,25.9946,1.23125,0.635664,26.0399,1.41128,-0.633587,26.0069,1.31781,-0.519639,26.0079,1.25062,-0.341848,25.9125,1.79334,-0.50813,25.9956,1.75794,-0.641352,26.0412,1.40142,0.670467,26.9687,1.29561,0.89907,26.9138,0.853728,-0.85084,26.8994,0.840937,0.777123,26.7294,0.942306,0.789996,26.2989,1.14609,0.584,26.2752,1.0733,-0.566478,26.2651,1.0964,-0.680694,26.2344,1.09703,-0.848123,26.7562,0.953993,0.577521,26.4828,1.44326,0.72065,26.4751,1.43251,-0.705368,26.4743,1.46543,-0.834157,26.9575,1.47009,0.192447,26.3167,2.18316,-0.071432,26.2961,2.23186,0.162319,26.3269,1.99639,0.132394,26.0398,1.96548,-0.093939,26.1957,2.02577,-0.201679,26.1763,1.93839,-0.167782,26.4223,1.96978,0.494155,26.2141,1.80497,-0.513158,26.2211,1.76774,-0.247964,26.2994,2.11874,0.306479,26.0964,2.25094,-0.274813,26.0981,2.28088,-0.174477,25.83,2.15107,0.357749,25.9244,1.74538,0.201208,25.8345,2.12965,0.223823,25.9434,1.95499,-0.193994,25.957,1.96807,0.457689,26.2609,1.2458,0.131523,26,2.33552,-0.098275,25.944,2.31906,0.681762,26.2111,1.10276,0.110865,26.5117,2.33635,0.084304,26.7011,2.2953,0.10422,26.6837,2.34006,-0.006924,26.5132,2.32051,0.013358,26.6864,2.30176,0.021817,26.6958,2.34655,-0.106437,26.687,2.34179,-0.097668,26.7012,2.30336,-0.114446,26.5197,2.32118,-0.028244,26.6954,2.29632,-0.08906,26.5497,2.36103,-0.0076,26.5191,2.35117,-0.020954,26.6981,2.3402,0.005346,26.5275,2.30997,-0.136447,26.6971,2.30365,-0.170731,26.5132,2.25974,-0.104531,26.521,2.29293,-0.177303,26.6664,2.24944,-0.100165,26.6879,2.2671,0.128403,26.6581,2.30894,0.10016,26.6952,2.26471,0.104637,26.5166,2.29354,0.168299,26.5144,2.25327,0.173498,26.6888,2.25909,-0.253843,26.5493,2.17787,-0.194531,26.6002,2.14407,-0.198954,26.4921,2.20155,-0.196286,26.5287,2.24311,-0.146689,26.5516,2.21266,-0.187094,26.7183,2.19511,-0.196867,26.6508,2.24427,0.135403,26.5846,2.20958,0.191445,26.6686,2.15661,0.200479,26.54,2.15477,0.256001,26.5805,2.19187,0.189408,26.5535,2.25689,0.193242,26.7153,2.20397,0.198203,26.4923,2.2008,-0.310051,26.5186,2.09128,-0.244351,26.6741,2.05462,-0.222344,26.5192,2.05231,-0.266015,26.5483,2.16909,-0.203619,26.541,2.13705,-0.199227,26.6533,2.13628,-0.272158,26.6917,2.12908,0.252311,26.537,2.16214,0.201762,26.6805,2.1224,0.192766,26.5222,2.12829,0.224143,26.5444,2.03753,0.280375,26.6814,2.08194,0.304538,26.5344,2.07683,0.279668,26.6566,2.15764,-0.367237,26.5668,1.96542,-0.262863,26.556,1.93343,-0.297783,26.4936,1.97878,-0.329441,26.5153,2.05672,-0.256916,26.66,2.02966,-0.251519,26.5214,2.04445,-0.315297,26.6799,2.03671,-0.29318,26.6874,1.97343,0.266832,26.5061,1.9537,0.309005,26.5083,2.05671,0.231363,26.5812,2.03699,0.305277,26.6821,1.95703,0.310942,26.6855,2.03459,0.353797,26.5086,1.97558,0.299257,26.6699,1.90384,0.4011,26.6707,1.82901,0.322812,26.6492,1.78581,0.419031,26.5178,1.82119,0.380928,26.5207,1.95401,0.323648,26.5197,1.79312,0.376049,26.6583,1.93729,0.284264,26.5221,1.92968,-0.378096,26.6618,1.9336,-0.41025,26.6679,1.83019,-0.383209,26.5194,1.9616,-0.41535,26.5166,1.81909,-0.305554,26.6704,1.90879,-0.292005,26.5172,1.92807,-0.287955,26.5348,1.87034,-0.334582,26.6463,1.78567,-0.319094,26.5245,1.78579,0.440069,26.6348,1.6471,0.434517,26.528,1.80288,0.433272,26.5254,1.66029,0.330233,26.6665,1.64372,0.328417,26.5289,1.79305,0.331411,26.6745,1.78615,0.431358,26.6765,1.7936,0.334507,26.5291,1.66379,-0.446193,26.5231,1.67974,-0.425272,26.5238,1.80138,-0.42426,26.6767,1.79697,-0.321754,26.5367,1.79236,-0.337364,26.6672,1.6445,-0.335492,26.674,1.78044,-0.336752,26.5264,1.65875,-0.440709,26.6456,1.64343,-0.444914,26.5461,1.47826,-0.438901,26.5281,1.63302,-0.441037,26.668,1.64037,-0.321724,26.5317,1.61091,-0.33003,26.6866,1.47937,-0.343238,26.6809,1.64184,-0.323507,26.5485,1.46695,-0.427324,26.6973,1.50082,0.444778,26.5397,1.4842,0.425803,26.6976,1.49111,0.436618,26.6682,1.63443,0.311625,26.6129,1.46264,0.319274,26.5328,1.63229,0.33589,26.6876,1.62755,0.438474,26.5297,1.63428,0.327552,26.5445,1.5323,0.253359,26.9469,0.716308,0.251936,26.8918,0.583833,0.232655,26.7547,0.553823,0.16707,26.9012,0.899322,0.191011,27.0048,0.822774,-0.277297,26.8019,0.669548,-0.25538,26.8917,0.583825,-0.256818,26.9468,0.7163,-0.194483,27.0048,0.822769,-0.159129,26.8991,0.916159,-0.001745,27.0264,0.888162,0.150187,26.8846,0.462611,-0.001721,26.8929,0.404824,-0.06242,26.7481,0.435522,-0.153629,26.8846,0.462606,-0.344222,26.7143,0.528641,0.260485,26.8347,0.793287,0.338033,26.997,1.18165,0.402622,26.7154,0.509823,-0.870656,26.8772,0.779661,-0.835913,26.983,0.846492,-0.898242,26.9703,0.700748,0.934307,26.9848,0.660674,0.968684,26.8197,0.537288,1.05828,27.192,0.591572,-1.01075,27.1189,0.578246,-0.955606,26.7771,0.533722,-0.954398,27.0643,0.66392,0.850875,26.7408,0.600538,0.869639,26.7859,0.426373,-0.716416,26.8969,0.070223,-0.580886,26.7564,0.261612,-0.856551,26.7401,0.599533,0.0253,26.6232,-0.037633,-0.001691,26.6514,-0.266546,0.814626,26.8851,0.221943,0.862724,26.9168,0.809538,0.646674,26.9839,0.987659,-0.609214,26.9589,0.982194,-0.919211,27.0388,0.312034,0.017056,27.056,1.39214,-0.572087,27.0085,1.3295,0.571964,26.991,1.41138,0.464292,27.8373,2.02702,0.63294,27.9878,1.98061,0.057708,27.91,2.28331,-0.162258,27.9289,2.24176,-0.014825,27.7674,2.2245,-0.450329,28.0256,2.09997,-0.335692,27.8067,2.07613,0.104317,28.0997,2.21559,0.120605,28.6715,2.06907,-0.080154,28.5433,2.13097,-0.42824,28.4949,2.02584,-0.715045,28.5382,1.77872,-0.679663,27.9762,1.93662,0.412921,28.3763,2.05992,0.436949,28.8036,1.81475,0.710391,28.9388,1.30776,0.234587,29.0423,1.58617,-0.453588,28.7901,1.83549,-0.142801,29.0547,1.6199,0.09755,29.2149,1.29328,-0.760576,29.0158,0.737645,-0.876499,28.8593,1.09333,-0.686945,28.9766,1.28201,0.737924,29.0204,0.906965,0.002404,29.2882,1.00981,0.098678,27.9895,-0.675126,0.52756,28.0539,-0.485231,0.515237,27.5496,-0.517042,0.20672,27.5333,-0.664119,-0.104581,27.5116,-0.691179,-0.152508,28.2332,-0.616065,-0.51876,27.5495,-0.517058,0.761845,28.3526,-0.217547,0.922255,27.5536,-0.063935,-0.533662,28.2754,-0.443601,-0.965887,27.8489,-0.047149,-0.943516,28.521,0.081274,-0.393846,28.6847,-0.317233,0.483016,28.8054,-0.163269,0.750268,28.9059,0.271097,0.901798,28.6078,0.108801,0.240169,28.517,-0.486192,-0.649447,28.907,0.127163,-0.095466,28.951,-0.18755,0.290273,27.8057,1.89235,0.441577,27.814,1.8209,0.575718,27.7482,1.93577,-0.304554,27.8089,1.88584,-0.586424,27.7473,1.93564,0.674327,27.1314,-0.217566,0.24738,26.9992,-0.48188,-0.250781,26.9992,-0.481873,-0.693507,27.1887,-0.244605,-0.001708,26.9095,-0.484942,0.578854,29.0839,0.537235,-0.440277,29.145,0.492041,0.169847,29.1401,0.172878,-0.200033,29.1162,0.130473,-0.898448,28.4106,1.49793,-0.797892,27.9783,1.67392,0.786908,27.8151,1.86158,0.811583,28.0216,1.56123,-0.817036,27.8774,1.75645,0.739757,27.0521,0.795822,0.947589,27.1286,0.755194,0.846329,27.0477,0.865012,-0.894715,27.0979,0.825064,-0.772102,27.0409,0.725946,0.737858,27.0147,0.746027,-0.733414,27.0271,0.808847,0.826896,27.1293,0.979781,-0.830943,27.1358,0.986725,-1.02556,27.1614,0.764227,0.050281,26.8403,2.16845,-0.040876,26.6958,2.2469,-0.21547,26.8455,2.07041,0.151629,26.6952,2.18944,-0.188727,26.6912,2.14322,-0.286309,26.83,1.96611,0.299864,26.6784,2.13777,0.470079,26.9451,2.04267,0.211395,26.8855,2.24875,-0.258025,26.6779,2.19394,-0.054672,26.6962,2.3475,-0.165685,26.8665,2.27815,0.443529,26.9475,1.41397,0.480981,26.6998,1.45671,0.353631,26.6838,1.41987,0.327701,26.8354,1.45836,0.290953,26.6843,1.82885,0.279169,26.8221,1.98648,-0.419356,26.6853,1.41243,-0.342091,26.6967,1.46977,-0.582123,26.9575,1.44113,-0.481888,26.6953,1.44511,-0.56789,26.8901,1.55366,0.50725,26.8809,1.86852,-0.033213,27.4322,2.30132,-0.019041,27.4566,2.22976,0.001738,27.4861,2.25024,0.129128,27.0652,2.21713,0.011096,27.4767,2.30962,0.001027,27.0056,2.41565,-0.004265,27.0761,2.18557,-0.107974,27.0259,2.19888,0.072636,27.4227,2.32057,0.199829,27.0405,2.25322,0.066901,27.7456,2.19222,-0.208564,27.0377,2.24665,-0.081187,27.6441,2.21842,-0.259455,27.4936,1.97926,-0.255809,27.3362,2.09935,-0.001747,26.8479,2.34227,0.143452,26.9711,2.31032,-0.13708,26.9698,2.32062,0.090494,27.0092,2.20969,-0.148801,27.06,2.23828,-0.077426,27.4204,2.31912,-0.002506,27.5107,2.39058,0.065803,27.1004,1.9794,0.024038,27.2632,2.03634,0.032299,27.5114,2.10135,-0.035887,27.5114,2.10135,-0.036413,27.1218,1.99271,0.149618,27.1808,1.98336,-0.159045,27.1718,1.98167,0.613028,27.2379,1.95337,0.218463,27.3872,2.08789,-0.619005,27.2401,1.95218,0.585507,27.2967,1.82359,0.464383,27.323,1.88819,-0.522518,27.3158,1.86566,-0.653485,27.4018,1.78229,-0.562966,26.9911,1.99394,0.158253,26.6972,2.29647,0.045752,26.995,1.5174,0.224831,26.9072,1.75396,-0.144303,26.9591,1.51845,-0.313941,26.852,1.46695,-0.414507,26.9753,1.40478,0.709462,27.186,1.48457,-0.711879,27.1758,1.49157,-0.752236,27.2321,1.22254,1.11385,28.0213,0.288472,1.06303,27.3624,0.700408,-1.06549,27.3481,0.717284,-0.959151,27.2601,0.974665,-0.796208,27.5236,1.37232,-0.938798,28.0459,1.17366,-1.12894,27.989,0.386132,-1.071,27.2237,0.579339,-0.736801,27.7798,1.66214,1.05552,28.5574,0.793387,1.05382,28.6085,0.522595,-1.03787,28.62,0.902525,0.801323,27.3568,1.24616,0.922501,27.1738,0.992169,0.94416,27.3553,0.961624,0.733758,27.0844,1.60852,0.629307,26.9683,1.55935,-0.737268,27.0842,1.6085,0.734612,27.787,1.65545,1.01931,27.2539,0.941141,-0.97369,27.1499,1.01165,-0.847413,27.2313,1.09692,0.871,27.1099,1.16139,0.846168,27.0683,1.43875,0.860662,27.2793,1.36511,-0.829441,27.2664,1.5101,-0.818018,27.0935,1.45743,0.843894,27.2355,1.10047,0.960126,27.3094,1.34364,1.09611,27.2036,0.852857,-1.08719,27.2312,0.837987,-0.996224,27.2243,1.36774,-0.915814,27.3094,1.30208,0.957831,27.0923,1.42688,-0.937515,27.0753,1.36265,0.809244,27.8479,1.74578,-0.734861,27.2473,1.60828,0.744218,27.2606,1.61419,0.86976,27.5457,1.73316,0.869059,27.2208,1.67217,0.824794,27.2974,1.64401,-0.857868,27.6142,1.75367,0.788895,26.9494,1.69989,0.73954,26.8902,1.822,-0.732211,26.8995,1.7868,-0.851977,26.9799,1.6388,-0.502929,26.8992,1.95953,-0.828305,26.919,1.81791,0.211191,27.7181,2.09673,0.230999,27.6245,1.99008,-0.226676,27.6342,1.98846,-0.202543,27.6722,2.09512,0.970362,28.6809,1.1126,0.725823,28.7099,1.6186,0.894711,28.4109,1.49798,0.643179,28.5374,1.85425,-1.05754,28.6083,0.522585,0.267192,27.4627,1.97197,-0.345363,27.3792,1.93494,0.561779,27.7539,1.77864,0.628381,27.6361,1.75954,0.707604,27.5561,1.90195,-0.701082,27.5382,1.89961,-0.597851,27.706,1.76516,-0.443604,27.8188,1.82258,-0.85084,27.2706,1.86635,0.826719,27.2032,1.8827,-0.83809,27.286,1.66061,-0.358255,26.9044,2.14236,-0.367061,26.7029,2.06234,0.014518,26.9577,1.81998,-2.69263,24.1359,-0.479032,-2.43847,24.2352,-0.525102,-2.46834,24.1128,-0.655486,-2.67771,23.928,-0.619029,-2.38036,23.6951,-0.664024,-2.63982,23.7986,-0.433083,-2.76042,23.9885,-0.377605,-2.62311,24.1777,-0.325408,-2.39063,24.179,-0.40352,-2.17696,23.8563,-0.726406,-1.18214,22.6876,-1.28745,-1.18225,22.2232,-1.15668,-1.41582,22.076,-0.817213,-1.76887,22.8941,-0.856636,-1.85367,22.4945,-0.607939,-2.04391,23.5474,-0.616089,-1.25923,23.0602,-1.25901,-1.53274,21.4126,-0.752135,-1.76745,21.8508,-0.60196,-1.23169,21.9272,-1.02457,-2.09774,22.4113,-0.402597,-2.16703,22.8872,-0.390231,-1.77975,21.6047,-0.501247,-2.00614,22.0392,-0.17525,-2.27936,23.3823,-0.107429,-2.28425,23.574,-0.145397,-2.33682,23.3993,-0.295552,-2.46607,23.192,-0.038561,-2.54408,23.2185,-0.277155,-2.37862,23.3119,0.122963,-2.33302,23.5379,0.14291,-2.31415,23.7439,0.056423,-2.51494,23.6457,-0.413988,-2.55158,23.4062,-0.400737,-2.41859,23.7863,-0.210283,-2.14136,22.893,-0.271507,-1.94832,23.291,-0.321054,-2.00598,22.8899,-0.249255,-2.09497,23.5966,-0.285261,-1.80665,22.8269,-0.360868,-2.20181,23.7148,-0.360797,-1.22495,22.0284,-0.650441,-1.8743,21.9218,-0.135725,-1.70541,21.3827,-0.2281,-1.52682,21.2643,-0.349503,-1.32022,21.5678,-0.502479,-1.07599,22.1518,-1.06099,-1.30963,21.5341,-0.714286,-1.97156,23.9231,-0.003208,-1.84579,23.7073,-0.266091,-1.90311,23.9765,-0.352502,-1.97884,24.069,-0.136089,-2.1018,24.0206,0.022862,-1.83918,23.7928,-0.351904,-1.76197,23.612,-0.519144,-2.15128,24.0268,-0.278848,-2.00548,23.8204,-0.202792,-2.1864,24.0175,-0.024888,-1.88415,23.7469,-0.69362,-2.07207,23.8364,-0.49538,-1.11712,23.1372,-1.04871,-1.57034,21.2544,-0.540562,-2.2765,23.7967,-0.384569,-2.61825,23.8874,-0.312755,-1.06987,23.0115,-1.21197,-1.12895,22.5273,-1.01353,-1.33121,23.6695,-0.993597,-1.32157,23.6167,-0.888573,-1.02989,23.5552,-1.1375,-1.2436,23.3166,-1.21388,-0.976585,23.4254,-1.13355,-1.71887,23.4662,-1.06647,-1.77483,23.3813,-1.03151,-0.315507,24.0937,0.972694,-0.849036,24.0613,0.57612,-0.260147,24.1119,0.764307,-0.254883,24.3251,0.785576,-0.684794,24.2842,0.579556,-0.67564,24.3067,0.797691,-0.202993,24.1626,0.903109,-0.266289,24.3147,0.960036,-0.380522,24.2602,0.992694,-0.680535,24.1271,0.853217,-0.719489,24.1486,0.547748,-1.47642,24.1228,0.021504,-1.51932,24.1957,0.112451,-1.41415,24.3046,0.081998,-1.37666,24.2373,-0.002658,-2.18562,24.0179,-0.322007,-2.21656,24.094,-0.411677,-2.20979,24.101,-0.199076,-2.20977,24.221,-0.312654,-2.14472,24.1742,-0.381158,-5.55825,20.7016,0.442209,-5.40796,20.6762,0.002611,-5.49197,20.8898,0.315696,-5.60337,21.0853,0.532979,-5.64858,20.6563,0.407998,-5.64209,20.8331,0.564124,-5.74907,20.8658,0.547313,-5.81516,20.7701,0.432031,-5.71899,20.9414,0.108761,-5.57879,20.71,-0.114117,-5.62652,20.6349,0.140356,-4.91749,21.4419,-0.083411,-4.0952,22.149,0.051891,-5.05565,21.1821,0.021147,-2.7552,23.3394,-0.137259,-2.67643,23.2587,0.030431,-5.22114,21.3186,-0.099626,-5.13343,21.6672,0.355428,-3.33352,23.1797,0.216126,-3.6916,22.9297,0.112274,-5.76099,21.2356,0.394724,-5.04061,21.5772,0.36662,-3.54007,22.8453,0.239944,-3.06575,23.2822,-0.152841,-5.16723,21.5838,0.053921,-3.07554,23.4587,-0.036467,-5.42317,20.6384,-0.166433,-2.58013,23.9021,0.273181,-2.72099,23.9413,0.120659,-2.50978,23.7206,0.337775,-2.72294,23.3564,0.187924,-2.44758,23.9096,0.171905,-2.6089,23.9614,-0.010289,-2.36074,23.6873,0.247131,-2.43775,23.4354,0.195053,-2.83407,23.5387,-0.230566,-2.76774,23.8017,-0.151621,-2.36572,23.3537,-0.045235,-2.52385,23.2233,-0.165261,-2.62471,23.6316,-0.434878,-2.73349,23.4497,-0.39248,-2.46951,23.7416,-0.358712,-2.35704,23.3531,-0.265836,-2.25024,23.502,-0.129091,-2.65535,23.2871,-0.308708,-2.29224,23.6546,-0.273843,-5.67926,21.2899,0.562016,-8.27727,18.9966,1.30897,-8.68916,18.6939,1.49811,-8.64367,18.5869,1.3299,-8.5938,18.6332,1.07927,-8.06634,19.1494,0.948117,-8.77613,18.6736,1.14229,-8.66247,18.7454,0.945821,-8.76747,18.8608,0.962162,-7.93395,19.4195,0.900644,-8.862,18.8952,1.18223,-8.75409,18.7791,1.47462,-8.8042,18.8763,1.38383,-5.84424,20.4509,0.530129,-5.89862,20.5202,0.643047,-6.9784,19.81,0.70685,-5.90313,20.3741,0.393653,-5.94695,20.5032,0.309714,-5.97362,20.6407,0.580718,-5.94841,20.6343,0.448049,-5.91519,20.6178,0.637436,-5.85461,20.5761,0.475943,-8.76223,18.7035,0.834833,-8.71991,18.632,0.935721,-8.82468,18.656,0.932603,-8.86584,18.8111,0.906792,-7.67629,19.4453,0.53707,-5.74095,20.9688,0.046478,-5.74404,20.7703,-0.152839,-5.87354,20.8803,-0.173443,-5.65959,20.7,0.095155,-5.71731,20.5714,-0.073325,-5.97972,20.5809,-0.181604,-6.10033,20.7085,-0.172208,-6.06149,20.9444,-0.055056,-6.0189,20.9797,0.152393,-8.27678,19.1528,0.851952,-8.70776,18.7627,1.05154,-8.80267,18.7922,0.836169,-6.71976,20.2311,0.424256,-8.76027,18.911,0.957615,-5.81716,20.5476,0.149437,-6.52701,20.5552,0.223048,-5.74725,20.7294,0.282102,-8.78393,18.8325,1.05846,-5.91153,20.8741,0.285403,-8.99621,18.4873,1.61362,-9.09158,18.4119,1.70592,-8.88184,18.3969,1.83931,-8.78724,18.3361,1.81887,-8.74388,18.416,1.69834,-8.92034,18.3758,1.5664,-9.06336,18.3658,1.82414,-8.97704,18.2769,1.69862,-8.85013,18.4731,1.74252,-8.76283,18.3151,1.73086,-9.0587,18.5506,1.66532,-9.08908,18.6318,1.51353,-9.20527,18.4818,1.51141,-9.08227,18.4232,1.80004,-9.19942,18.4289,1.68391,-8.98824,18.3871,1.78465,-9.08616,18.4173,1.53462,-8.98756,18.4622,1.5837,-8.95666,18.5436,1.71991,-8.9593,18.6054,1.54721,-8.90255,18.7154,1.45105,-9.17882,18.4398,1.58895,-9.02624,18.5375,1.5093,-9.23189,18.5225,1.57024,-9.20915,18.4309,1.32438,-8.9201,18.651,1.25943,-9.04255,18.7222,1.28381,-8.95594,18.7966,1.39371,-9.34705,18.5299,1.46736,-9.3224,18.535,1.32909,-9.10316,18.5968,1.38196,-8.84767,18.4576,1.65835,-9.10661,18.5997,1.5027,-8.77842,18.6205,1.63577,-8.91983,18.5306,1.70444,-8.85076,18.6903,1.58003,-8.73419,18.8111,1.36119,-8.88028,18.8378,1.34761,-8.74751,18.7588,1.32832,-8.9652,18.5644,1.30152,-9.05526,18.7361,1.41365,-9.03186,18.723,1.3148,-8.96407,18.7488,1.39137,-8.74587,18.7568,1.34587,-8.86145,18.8493,1.27002,-9.07138,18.7382,1.26248,-8.88143,18.6295,1.4308,-8.76271,18.6848,1.09375,-9.05396,18.7357,1.10191,-8.88828,18.8185,1.05271,-8.92505,18.6057,1.16661,-9.08061,18.5498,0.86498,-9.19878,18.4908,0.974902,-9.00482,18.7514,1.07959,-8.91653,18.6821,0.906825,-8.81254,18.68,1.02128,-8.88259,18.7695,1.04492,-8.99943,18.6973,1.20339,-8.90214,18.5217,0.8785,-8.93186,18.583,1.16776,-9.06593,18.4481,0.97206,-9.29435,18.513,1.31044,-9.2048,18.4644,0.959388,-9.2903,18.3994,1.0158,-9.15941,18.3687,1.1554,-9.01531,18.5059,1.10041,-9.16102,18.4624,1.37043,-8.95697,18.6617,1.2438,-9.10261,18.6749,1.24535,-9.23539,18.3339,1.09765,-9.06802,18.4739,1.06983,-9.06911,18.4344,0.901958,-9.14604,18.3656,0.898236,-9.02094,18.3605,0.928058,-9.15404,18.2884,1.07146,-9.19942,18.3495,1.10339,-9.04995,18.362,1.10633,-9.0323,18.2569,1.75603,-9.40634,18.0699,1.92353,-9.47926,18.0645,1.78015,-9.06503,18.259,1.64793,-9.71936,17.7246,1.97476,-9.86667,17.8764,1.92167,-9.18799,18.4087,1.6058,-9.1814,18.4815,1.69634,-9.88133,17.9458,2.02988,-9.84306,17.9098,2.12013,-9.17574,18.443,1.80045,-9.70893,17.8221,2.14048,-9.06007,18.4168,1.80945,-9.84883,17.7219,1.70259,-9.61886,18.0272,1.57688,-9.57179,18.1267,1.67148,-9.97335,17.7693,1.61536,-9.37598,18.4402,1.40705,-10.0338,17.8663,1.61891,-9.25084,18.3622,1.4276,-9.63358,18.2504,1.63035,-9.38002,18.5195,1.46513,-9.33687,18.5037,1.58536,-9.94828,17.8733,1.8396,-9.85507,17.7953,1.83048,-9.20455,18.3811,1.55578,-10.0238,17.945,1.75757,-9.29182,18.3017,1.36098,-9.68616,18.0173,1.42731,-9.69587,18.0379,1.30154,-10.1111,17.862,1.37886,-9.42992,18.4403,1.24808,-9.76225,18.1346,1.3641,-10.0596,17.8614,1.5156,-9.38441,18.4333,1.3901,-9.95701,17.7313,1.47831,-9.3352,18.3404,1.21761,-9.36002,18.4469,1.27852,-9.98701,17.7494,1.34655,-9.22084,18.2142,1.06888,-9.81751,17.7748,1.15142,-9.80982,17.7439,1.05277,-9.22656,18.182,0.968158,-9.85254,17.788,1.00183,-9.30094,18.3071,0.917188,-9.62985,18.063,0.992713,-9.58718,18.1206,1.07812,-9.25379,18.3172,1.08079,-9.33654,18.3516,1.043,-9.91324,17.8611,1.162,-9.94278,17.8987,1.05708,-10.2275,17.3376,2.27064,-10.0743,17.5306,2.16188,-9.83282,17.7135,2.16531,-10.3093,17.3758,2.2009,-9.93281,17.7587,2.01263,-9.85398,17.6744,2.06231,-9.93726,17.8425,2.07249,-10.3808,17.4639,2.21699,-10.3531,17.4951,2.31801,-9.9127,17.8228,2.17319,-10.2664,17.4115,2.37326,-10.2345,17.5537,1.88787,-10.4273,17.3437,1.96313,-10.4724,17.3393,1.8347,-10.0153,17.6621,1.75228,-10.5504,17.4325,1.82688,-10.1254,17.7675,1.67828,-10.5521,17.4713,1.9287,-10.4977,17.4026,1.9889,-10.0291,17.7041,1.85565,-10.0738,17.8048,1.83715,-10.1664,17.8332,1.79407,-10.182,17.7815,1.46078,-10.1412,17.7025,1.34187,-10.362,17.5802,1.4063,-10.4957,17.3904,1.57937,-10.097,17.6827,1.52762,-10.3594,17.6116,1.5092,-10.4728,17.3485,1.43958,-10.3155,17.5032,1.40387,-10.2856,17.4998,1.51446,-10.5797,17.4914,1.47807,-10.0591,17.6458,1.41646,-10.026,17.5632,1.07919,-10.1857,17.4921,1.17971,-10.1535,17.4246,1.18914,-9.87935,17.6869,1.0694,-10.1094,17.3985,1.09874,-10.2154,17.4881,1.02219,-10.023,17.7933,1.02802,-10.1213,17.6442,1.1388,-9.98751,17.8271,1.12269,-9.941,17.7429,1.18024,-10.1772,17.4077,1.0544,-10.2667,17.5102,1.08793,-9.94242,17.7561,1.00662,-10.3061,17.3089,2.37356,-10.4511,17.1652,2.35132,-10.3416,17.3111,2.27648,-10.6391,17.1246,2.35129,-10.4125,17.4003,2.29921,-10.6144,17.1311,2.45286,-10.3962,17.3909,2.39833,-10.5349,17.0655,2.44356,-10.552,17.0491,2.33564,-10.8622,17.0981,1.91635,-10.5412,17.2866,1.89496,-10.7698,17.0359,1.94537,-10.8021,17.068,2.04016,-10.8805,17.1289,2.00368,-10.6522,17.3668,1.86614,-10.6268,17.3663,1.98118,-10.7077,17.1138,1.48517,-10.5544,17.2624,1.55304,-10.785,16.9675,1.55569,-10.8855,17.0612,1.45956,-10.6386,17.3252,1.43194,-10.5465,17.2497,1.45945,-10.9127,17.0889,1.56015,-10.6425,17.3741,1.50132,-10.6222,17.3375,1.57191,-10.8415,17.0314,1.60812,-10.3826,17.142,1.07593,-10.3414,17.2404,1.06814,-10.4172,17.1751,1.15766,-10.4705,17.2096,1.04185,-10.2742,17.4074,1.03768,-10.1965,17.3344,1.0898,-10.4898,17.2336,1.12654,-10.2688,17.4066,1.15827,-10.2843,17.4459,1.09878,-10.7962,16.9045,2.44719,-10.8834,16.8403,2.41968,-10.6995,16.9765,2.33223,-10.7615,17.0684,2.36999,-10.9132,16.8798,2.45261,-10.7285,17.0507,2.47343,-10.6416,16.9699,2.43367,-11.1433,16.8065,2.03622,-10.8689,16.9072,1.91748,-10.8647,16.9463,2.04163,-11.1106,16.7846,2.07806,-10.9649,17.0152,1.93284,-11.1502,16.8325,2.06953,-10.9218,17.0277,2.02243,-10.9383,16.8549,1.57762,-10.9317,16.9166,1.63747,-11.1739,16.7915,1.60641,-10.9887,16.9324,1.49979,-11.0711,16.8295,1.57415,-11.1978,16.8336,1.60433,-11.0165,16.9837,1.62713,-11.1926,16.8201,1.56198,-11.009,17.0028,1.55643,-10.7135,16.9905,1.07186,-10.514,17.0545,1.04232,-10.682,16.9805,1.10653,-10.5619,17.1369,1.13372,-10.5439,17.1371,1.04557,-10.4991,17.0457,1.13687,-8.95501,17.9261,2.08276,-9.14148,17.8026,2.33224,-8.9486,18.143,1.79705,-9.08121,17.885,2.43237,-8.99968,18.0691,2.1528,-8.96757,18.2657,1.88898,-8.97374,17.8388,2.42061,-8.89651,17.9988,2.14869,-8.84719,18.2877,1.90153,-8.98604,17.7159,2.33571,-9.11863,17.7355,2.28662,-8.80508,18.1406,1.84305,-9.16091,17.3624,3.05551,-9.18494,17.4444,2.82675,-9.09895,17.4365,2.82599,-9.20318,17.3948,3.06167,-9.12428,17.5854,2.88117,-9.19978,17.5235,2.83737,-9.06435,17.5159,2.88499,-9.17387,17.4156,3.08387,-9.10761,17.693,2.43179,-9.10895,17.4864,2.71966,-9.18582,17.555,2.72585,-9.13442,17.6074,2.79248,-9.13774,17.7727,2.48615,-9.03189,17.5623,2.7847,-8.98411,17.7528,2.49166,-9.04363,17.7932,2.52225,-9.02556,17.7121,2.43027,3.15173,-0.480582,0.823303,3.00438,-0.542671,0.7069,3.15666,-0.499617,0.949568,3.1105,-0.661422,0.67676,3.21448,-0.576218,0.9232,3.20734,-0.507525,0.635375,3.10654,-0.432929,0.689812,3.46522,-0.649294,0.8232,3.42057,-0.575298,0.577518,3.35872,-0.647329,0.58874,3.45564,-0.69817,0.796996,3.41517,-0.677065,0.58574,3.34865,-0.603154,0.474229,3.35655,-0.492635,0.401739,3.40478,-0.685463,0.532831,3.36227,-0.612489,0.593087,3.42592,-0.586429,0.586261,3.27493,-0.47159,0.42081,3.339,-0.568123,0.363054,3.57133,-0.699073,0.523234,3.64001,-0.709913,0.701844,3.62494,-0.677074,0.748866,3.5286,-0.606576,0.525211,3.60689,-0.615829,0.513283,3.55011,-0.628458,0.394237,3.61226,-0.685239,0.477627,3.51717,-0.650637,0.512866,3.57964,-0.59772,0.518381,3.55682,-0.600005,0.291012,3.54626,-0.49658,0.311693,3.47991,-0.585752,0.300094,3.48986,-0.498523,0.338187,3.74658,-0.667658,0.555578,3.74835,-0.551546,0.349384,3.68314,-0.613374,0.334797,3.74333,-0.711669,0.519651,3.74749,-0.649271,0.319314,3.73034,-0.565201,0.239166,3.71306,-0.619104,0.287619,3.70946,-0.540485,0.333163,3.77521,-0.549452,0.322874,3.6674,-0.484086,0.176934,3.71827,-0.534743,0.15516,3.70404,-0.414122,0.19352,3.77527,-0.434422,0.197626,3.80692,-0.594811,0.221272,3.86619,-0.738323,0.322019,3.88056,-0.617334,0.202587,3.82726,-0.708246,0.164193,3.79678,-0.633417,0.129493,3.84023,-0.620601,0.097449,3.82179,-0.688242,0.136673,3.79731,-0.636695,0.20426,3.80233,-0.5126,0.142111,3.85968,-0.632388,0.20725,3.85814,-0.523267,0.100324,3.76741,-0.57592,0.067171,3.10065,-0.655391,0.546524,2.99175,-0.469653,0.368353,3.09013,-0.468603,0.363743,3.15424,-0.400482,0.386145,3.20717,-0.577481,0.553971,3.07497,-0.438701,0.683348,2.97308,-0.39996,0.442178,2.9661,-0.544407,0.626587,3.18574,-0.52244,0.654847,3.08435,-0.349721,0.484755,2.92368,-0.219857,0.284473,2.92792,-0.366529,0.152258,2.97171,-0.212854,0.170541,3.11717,-0.167265,0.246772,3.09934,-0.322065,0.090878,3.27609,-0.514061,0.344829,3.19099,-0.266589,0.156364,3.25218,-0.256144,0.091071,3.32176,-0.531317,0.323874,3.28591,-0.191531,0.226303,3.20629,-0.191619,0.198038,3.29221,-0.47213,0.412232,3.33997,-0.485701,0.389165,3.32015,-0.237796,0.120586,3.49026,-0.521214,0.326082,3.45946,-0.213643,0.184295,3.43047,-0.260947,0.084731,3.51335,-0.561231,0.244245,3.55824,-0.554072,0.261524,3.53214,-0.503011,0.330764,3.52368,-0.241933,0.042787,3.55448,-0.216514,0.15008,3.04866,1.34598,-0.594624,3.04671,1.17863,-0.390807,3.0724,1.14218,-0.574984,2.80098,1.30295,-0.583447,2.85753,1.2572,-0.671212,2.93387,1.09765,-0.626142,2.86208,1.09871,-0.464823,2.88946,1.15143,-0.358858,2.85207,1.29326,-0.476504,2.9532,1.28748,-0.688422,2.88224,1.39587,-0.4403,2.98715,1.38724,-0.430944,3.19134,1.33861,-0.584353,3.22767,1.15933,-0.37203,3.20018,1.11308,-0.580267,2.94624,1.32843,-0.442796,3.02525,1.26566,-0.646371,3.01961,1.08027,-0.512865,3.07656,1.14283,-0.311171,3.12113,1.40235,-0.397684,3.74303,-0.470967,0.201457,3.66282,-0.179726,0.136049,3.69394,-0.460527,0.199947,3.62395,-0.220265,0.070581,3.69085,-0.472186,0.143087,3.70944,-0.235857,-0.002113,3.73801,-0.483217,0.139906,3.74238,-0.173096,0.010145,3.75017,-0.194184,0.130816,3.79214,-0.532462,0.107563,3.84459,-0.553003,0.065621,3.84085,-0.274684,-0.007194,3.78747,-0.545944,0.040341,3.78687,-0.283857,-0.149996,3.87275,-0.308465,-0.119163,3.74239,-0.276688,-0.035237,3.05973,-0.310107,0.076856,3.06952,0.332852,-0.183001,3.15219,-0.226582,0.137035,2.91185,0.300537,-0.16922,2.95298,-0.273986,0.063086,2.88317,-0.184834,0.173527,2.92979,0.197886,0.03383,3.0766,0.238458,0.013775,3.02344,-0.090341,0.273893,3.00225,0.962116,-0.56106,3.09334,0.966952,-0.491669,2.99004,1.05506,-0.30832,2.83932,0.995917,-0.359824,2.83597,0.970859,-0.484838,3.09472,1.03903,-0.411129,3.01582,-0.247904,0.202484,2.96497,1.06719,-0.468679,2.89345,0.872673,-0.518232,3.15919,0.328281,-0.162282,3.26006,-0.251187,0.074296,3.2085,-0.180025,0.158759,3.25151,0.291437,-0.151803,3.12068,0.90425,-0.536417,3.04997,1.0365,-0.344365,3.26839,-0.168619,0.195638,3.2639,1.08859,-0.442305,3.17513,1.0996,-0.318013,3.29901,-0.138653,0.16573,3.2585,0.956925,-0.503729,3.32482,-0.20693,0.09981,3.17915,1.094,-0.529498,3.03478,1.01488,-0.468784,3.36128,1.47662,-0.579888,3.3877,1.25528,-0.43477,3.39429,1.21977,-0.660946,3.26038,1.37272,-0.749021,3.10771,1.35339,-0.632535,3.24089,1.23058,-0.404871,3.16202,1.4565,-0.491192,3.2761,1.17698,-0.670871,3.18323,1.17121,-0.560053,3.26186,1.47159,-0.465422,3.3624,0.315264,-0.220363,3.4437,0.391917,-0.231269,3.52606,-0.173126,0.035186,3.48088,-0.216082,0.011723,3.4187,-0.19909,0.040177,3.42847,-0.113746,0.117237,3.20424,1.04713,-0.390873,3.17899,1.02689,-0.517872,3.33069,1.03569,-0.636649,3.40473,0.984042,-0.572284,3.33553,1.11977,-0.385103,3.48133,-0.131408,0.132569,3.40532,1.12104,-0.507845,3.28941,1.13139,-0.531259,3.22704,0.922985,-0.566954,3.60085,0.260087,-0.256959,3.70252,-0.162218,0.038021,3.68209,-0.197434,-0.008217,3.61592,-0.186507,0.014247,3.67172,-0.078077,0.08823,3.51214,1.13314,-0.484777,3.60053,-0.117653,0.076588,3.62363,0.941685,-0.661482,3.6008,1.12424,-0.515216,3.43031,1.06784,-0.499124,3.40335,1.01823,-0.612242,3.4442,0.885558,-0.642422,3.5172,1.1304,-0.637777,3.53394,0.988045,-0.727593,3.63253,1.1056,-0.626057,3.75928,0.209897,-0.376773,3.74463,-0.268646,-0.15309,3.68174,0.142013,-0.314632,3.62785,0.909745,-0.791097,3.6525,1.04522,-0.819908,3.70199,-0.157454,-0.054624,3.63525,1.18187,-0.600698,3.55411,1.08825,-0.727357,3.69122,1.07024,-0.700012,3.67173,1.12964,-0.61061,3.78234,-0.125721,-0.034813,3.73287,1.21644,-0.742961,3.8219,-0.209809,-0.141209,3.50083,1.65171,-0.903847,3.46882,1.66697,-0.777422,3.65345,1.30201,-0.695189,3.6254,1.29294,-0.82406,3.5798,1.24798,-0.939064,3.53844,1.46115,-1.02109,3.26112,1.41195,-0.970163,3.35739,1.12607,-0.848282,3.29445,1.17524,-0.679911,3.1824,1.55072,-0.849515,3.3237,1.26721,-0.560048,3.31664,1.71137,-0.730788,3.2161,1.60695,-0.728892,3.48699,1.28889,-0.576615,3.53532,1.13056,-0.939368,3.36884,1.46302,-1.047,3.30925,1.66982,-0.906243,3.21392,1.68064,-0.708369,3.2514,1.41932,-0.621862,3.23187,1.37222,-0.824697,2.75809,1.5749,-0.766921,2.83441,1.36222,-0.477834,2.78054,1.65322,-0.562826,2.8573,1.50944,-0.948386,2.90411,1.29619,-0.866797,2.99073,1.41268,-0.386012,3.17061,1.42665,-0.435285,3.11147,1.72999,-0.520317,2.93244,1.72245,-0.491692,3.19967,1.58885,-0.904406,3.07958,1.3221,-0.914083,3.03865,1.5399,-0.988788,2.82122,1.3145,-0.674971,2.90066,1.5815,-1.93995,3.01002,1.35218,-1.84336,2.80728,1.36349,-1.6631,2.91588,2.04508,-1.46076,3.32553,1.94365,-1.24636,3.11888,2.033,-1.58569,2.6717,1.82492,-1.6809,2.71928,1.91234,-1.40706,2.95478,1.75634,-0.880122,2.70726,1.71188,-1.54734,2.74993,1.57139,-1.80284,2.80621,1.55873,-1.31243,3.36717,1.73162,-1.55439,3.09588,1.81952,-1.89793,3.10327,1.60486,-1.98828,3.28247,1.43128,-1.72449,3.40661,1.5725,-0.868646,3.38752,1.10333,-1.23979,2.99765,0.995235,-1.08062,3.20378,0.971312,-1.22811,3.18726,1.07472,-0.871939,3.29653,1.3835,-0.708421,3.13764,1.92553,-0.949746,3.04789,1.41688,-0.72291,3.47971,1.23181,-1.03179,2.90539,1.28274,-0.89448,2.87741,1.2028,-0.526712,3.31901,1.2999,-0.529409,3.28834,1.60133,-0.512613,2.93963,1.25375,-1.00245,2.84462,1.17293,-0.780263,2.8116,1.26539,-0.936555,3.3522,1.3937,-1.00098,3.18219,1.6677,-0.978597,3.29623,1.77418,-0.905581,2.79282,1.58589,-0.960296,3.12779,1.98758,-1.06061,2.76457,1.9386,-1.04373,2.95197,2.03163,-0.933055,3.20962,1.90612,-0.78006,2.78567,1.8605,-0.753754,3.13207,1.87719,-1.11352,2.81681,1.5596,-0.512637,3.41038,1.33177,-0.780322,2.86775,1.3117,-0.717606,2.80012,1.81597,-1.08624,2.24637,8.55198,-0.241821,2.02716,9.0417,-0.176798,2.32379,8.73855,-0.279852,2.55939,9.05687,-0.16755,2.48866,8.61764,-0.227436,2.29916,9.23587,-0.138988,2.00894,9.16753,-0.020483,2.53072,9.06089,0.145588,2.5487,8.67702,0.071452,2.64306,9.01551,-0.007699,2.41973,9.25848,0.033116,2.53099,8.53012,-0.091223,2.28602,9.10075,0.185874,2.067,9.05909,0.134794,2.11216,8.67117,0.071735,2.33665,8.64447,0.114605,2.30137,8.43306,-0.088986,2.02274,8.71547,-0.075157,3.42583,2.02802,-0.932744,3.60736,1.86679,-0.968397,3.45138,3.04692,-0.989616,3.30973,3.04479,-0.956429,3.04083,7.42202,-1.07095,3.36232,2.0322,-1.09458,2.82508,7.77192,-1.21386,3.3986,2.09547,-1.20107,3.54176,1.98583,-1.16942,3.4089,3.14532,-1.15613,2.92712,7.65795,-0.991795,2.80863,7.83194,-0.991994,2.78179,7.802,-1.10743,2.87425,8.21645,-1.2694,3.02369,8.1267,-1.21351,2.98809,7.46013,-1.24803,3.0653,8.23455,-1.06246,3.49721,1.83633,-1.004,3.52111,1.84187,-1.07043,3.52591,1.94172,-1.24113,2.77598,8.4417,-1.09593,2.94936,8.37279,-1.16795,2.70806,8.28161,-1.18837,2.71098,8.2384,-0.921895,2.81586,8.32197,-0.872644,3.01921,8.19871,-0.917959,2.92423,8.41681,-0.9818,2.65169,8.29129,-1.04895,3.57315,1.94258,-1.05128,3.10773,2.01895,-0.690487,2.82362,1.95965,-0.809758,3.07033,1.87779,-0.812971,3.38967,2.02809,-0.932923,2.83205,2.73731,-0.726303,3.00606,2.70707,-0.665432,3.38526,2.13168,-0.739778,2.73266,2.00414,-1.04016,2.8108,2.10295,-1.26178,2.83472,1.90302,-1.08774,2.81852,2.92982,-1.03001,3.08949,2.15574,-1.36435,2.97348,2.92812,-1.09394,3.14493,2.92128,-1.04495,3.36722,2.25196,-1.28527,3.47105,2.23593,-1.00784,3.15463,2.81533,-0.702443,2.16592,7.53177,-0.396805,2.14883,7.23002,-0.68809,2.74249,3.07329,-0.8407,2.63679,7.95246,-0.31195,2.16593,7.57648,-0.919752,2.71656,7.27416,-0.924071,2.46731,7.32243,-1.00811,2.74356,7.94274,-0.637778,3.19798,2.9278,-0.85908,1.79545,8.30266,-0.690547,1.90418,8.32864,-1.10218,2.36299,7.86941,-1.09622,2.64935,7.94307,-1.02925,2.87912,8.43593,-0.511948,2.87299,8.22441,-0.530411,2.83272,8.23269,-0.930669,2.64654,8.70142,-0.674621,2.64769,8.60853,-0.316782,2.81315,8.61445,-0.622161,2.8288,8.52336,-0.912562,2.69199,8.39554,-1.14144,3.12686,1.93241,-1.06099,2.20459,8.36333,-1.22236,1.99993,8.55213,-1.07967,2.65733,8.63643,-1.03418,2.26917,8.30131,-0.152244,1.88935,8.40387,-0.309298,2.68706,8.3637,-0.218667,1.85571,8.57002,-0.688539,2.11145,8.55753,-0.264339,1.55149,15.9312,-0.976452,1.39788,15.9556,-0.724145,1.65024,15.9995,-0.698806,1.55405,15.7035,-1.17704,1.39708,15.6819,-1.11808,1.24424,15.7652,-0.968574,1.23519,15.7458,-0.699788,1.80606,15.1839,-0.93693,1.72764,15.7418,-1.09945,1.98782,15.2622,-0.842667,1.76239,15.8699,-0.882372,2.36765,8.9443,0.064402,2.3003,9.63767,0.001775,2.16361,8.92669,0.098321,1.99733,8.66016,-0.080727,2.36368,8.80014,-0.037105,2.64029,9.24443,-0.165508,2.90764,8.97798,-0.472526,2.94819,9.08248,-0.603624,2.29318,8.76393,-1.0531,1.97783,8.75187,-0.751832,2.1643,8.87697,-1.1329,2.19421,9.24195,-1.14809,2.34598,8.94406,-1.18496,1.59231,8.78169,-0.40503,1.5794,9.19014,-0.454582,1.73532,9.0385,-0.755265,1.75014,8.63532,-0.413168,1.8286,9.27783,-0.840533,2.40531,8.75451,-0.583993,2.09816,8.64524,-0.265902,1.78011,8.98439,-0.103609,2.05419,9.86784,-0.241411,2.13278,9.89783,-0.074895,2.67594,10.1403,-0.34256,2.64359,9.07887,-1.00921,2.68253,8.81803,-0.852227,2.572,9.99429,-0.557854,2.35938,9.90461,-0.647383,1.85665,14.3255,-0.283283,2.04607,12.123,-0.12671,2.1433,12.463,-0.043737,1.97143,14.7956,-0.431279,2.34383,12.114,-0.166528,2.19174,13.5383,-0.540534,2.24147,12.5132,-0.505535,2.05426,12.3028,-0.329579,1.65424,14.9903,-0.850141,2.11348,12.27,-0.491692,1.79421,15.6552,-0.172922,1.80706,15.1388,-0.293906,1.99167,15.3174,-0.613054,1.59185,15.1373,-0.665358,1.68574,15.1401,-0.36517,1.73796,15.7903,-0.226183,1.60979,15.8907,-0.290546,1.41996,15.7133,-0.286594,1.65837,15.5123,-0.12788,1.76334,15.5717,-0.113283,1.51227,15.5761,-0.199649,1.23809,15.7889,-0.089675,1.72559,16.1151,0.011274,1.8294,15.9363,0.165686,1.47005,15.8366,-0.303415,1.53761,16.1003,-0.166116,1.30998,16.0382,-0.093333,1.26147,15.9767,0.173171,1.46124,16.1848,0.09486,1.52612,15.6188,0.277726,1.66491,15.7761,0.358624,1.63123,16.0558,0.31631,1.36695,15.8345,0.3306,1.34774,15.6097,0.060785,2.15269,9.87506,-0.485578,-1.59758,15.9222,-1.00165,-1.41076,15.9435,-0.772785,-1.29224,15.7569,-1.03872,-1.46408,15.6754,-1.16689,-1.62777,15.6974,-1.20324,-1.78897,15.734,-1.10186,-1.24599,15.7338,-0.774191,-1.84248,15.1803,-0.94053,-2.01084,15.2489,-0.816169,-1.79355,15.8589,-0.880177,-2.30588,8.78234,-0.03116,-1.94934,8.64405,-0.124299,-2.08813,8.9075,0.078568,-2.23805,9.6151,0.012334,-2.30661,8.94485,0.065448,-2.90826,8.96493,-0.388392,-2.96802,9.07169,-0.511828,-2.74046,8.81097,-0.796197,-2.58529,9.38744,-0.111066,-2.26799,8.87539,-1.14131,-2.02777,8.74533,-0.790241,-2.38382,8.76074,-1.04698,-2.45566,8.94264,-1.1681,-2.30027,9.2404,-1.14716,-1.75292,8.62462,-0.486608,-1.78844,9.03268,-0.82135,-1.59033,9.18043,-0.541765,-1.59562,8.77114,-0.497151,-1.89342,9.27291,-0.890018,-2.42668,8.74439,-0.567918,-1.73775,8.96917,-0.170868,-2.0255,9.83954,-0.264837,-2.72495,9.07412,-0.953094,-2.39205,9.89181,-0.619985,-2.58945,9.97865,-0.501942,-2.66077,10.1152,-0.273674,-1.80881,14.3098,-0.288644,-1.93905,14.7812,-0.417118,-2.07498,12.4369,-0.018095,-1.99126,12.0883,-0.115897,-2.29101,12.2449,-0.142058,-2.2368,12.4966,-0.461421,-1.68049,14.9792,-0.875258,-2.10968,12.2488,-0.467449,-2.01193,12.3946,-0.308592,-1.59153,15.1299,-0.702801,-1.75673,15.1174,-0.301629,-1.72685,15.6338,-0.176741,-2.18713,13.4952,-0.496505,-1.98286,15.3035,-0.590592,-1.64596,15.1223,-0.38857,-1.67865,15.77,-0.235061,-1.65728,15.9862,-0.711994,-1.37192,15.6949,-0.339736,-1.56065,15.8718,-0.314958,-1.58597,15.4909,-0.152521,-1.45125,15.5561,-0.24285,-1.25234,15.5865,-0.007333,-1.63378,16.0915,0.003454,-1.71504,15.9102,0.16813,-1.47215,16.0798,-0.198587,-1.68795,15.5497,-0.122848,-1.42397,15.8183,-0.347721,-1.23665,16.0173,-0.158924,-1.16482,15.7682,-0.168967,-1.22057,15.9822,0.212086,-1.16559,15.7599,0.156174,-1.39904,15.5919,0.23222,-1.52554,15.7476,0.333754,-1.49829,16.0279,0.29152,-1.36053,16.1607,0.050362,-2.08281,9.87421,-0.083813,-2.16104,9.85618,-0.487907,-2.07607,8.63145,-0.29479,-3.09725,2.05279,-0.756079,-3.36869,2.18337,-0.81308,-3.37941,2.06942,-0.99794,-2.98106,2.72687,-0.726943,-3.07814,3.135,-0.697961,-2.81494,1.98647,-0.876077,-2.80478,2.75739,-0.788048,-3.06345,1.911,-0.878827,-2.82792,1.93033,-1.15416,-2.72332,2.02902,-1.10695,-2.79947,2.12971,-1.3278,-3.07695,2.18956,-1.42963,-2.78423,2.97371,-1.08368,-2.93794,2.97676,-1.14707,-3.35211,2.29264,-1.34955,-3.44191,2.27613,-1.07134,-3.11791,3.27707,-0.854866,-3.11157,2.96249,-1.10073,-2.22709,7.53237,-0.400106,-2.21844,7.23005,-0.694094,-2.31038,8.30292,-0.152636,-2.22715,7.57725,-0.923731,-2.53567,7.32789,-1.01353,-2.78581,7.28418,-0.929377,-2.79446,7.95695,-0.638091,-2.68598,7.96721,-0.312069,-1.94642,8.32306,-1.10591,-1.83751,8.29435,-0.694119,-2.41731,7.8727,-1.09829,-2.70097,7.95326,-1.03077,-2.91701,8.45368,-0.513675,-2.84671,8.63056,-0.624019,-2.86532,8.53991,-0.914394,-2.87676,8.24941,-0.932488,-2.91635,8.24208,-0.532145,-2.67806,8.71351,-0.676831,-2.69128,8.64883,-1.03637,-2.72624,8.37684,-0.2208,-2.68081,8.62067,-0.318993,-3.11919,1.96706,-1.12672,-2.73235,8.40884,-1.14355,-2.24611,8.36496,-1.22548,-2.02411,8.51767,-0.298766,-2.03634,8.54878,-1.08321,-1.89087,8.56316,-0.692367,-1.93043,8.30812,-0.296785,-2.70652,3.09764,-0.896796,-3.36026,2.77712,-1.01681,-3.45966,1.95613,-1.00206,-3.27012,2.95432,-1.04462,-2.9022,7.74885,-0.99221,-3.10446,7.45972,-1.07232,-3.3527,2.06915,-1.16105,-2.83767,7.81595,-1.10807,-3.41743,3.07943,-1.04434,-3.43594,2.18774,-1.18857,-3.55158,2.08053,-1.15193,-2.8725,7.81353,-1.21403,-3.38276,2.15249,-1.27046,-3.05287,7.47838,-1.25264,-2.91862,8.19466,-0.871822,-3.06409,8.2198,-0.919216,-3.10944,8.25692,-1.06358,-3.071,8.14757,-1.2148,-3.5838,2.0372,-1.03368,-3.49854,1.94079,-1.08565,-3.53096,2.00027,-0.914961,-2.77761,8.36577,-1.19478,-2.91913,8.23442,-1.27083,-2.88256,8.38224,-0.899234,-2.87839,8.47054,-1.02489,-2.99027,8.39228,-1.16954,-2.7549,8.25218,-0.923978,-2.69454,8.30363,-1.05115,-2.38764,8.60154,-0.282988,-2.08906,8.90304,-0.180068,-2.31134,8.41455,-0.245077,-2.5532,8.48155,-0.230483,-2.62119,8.92113,-0.170401,-2.70497,8.88019,-0.010498,-2.61261,8.54115,0.068472,-2.59221,8.9249,0.142715,-2.48012,9.1219,0.03022,-2.35984,9.09868,-0.141987,-2.59595,8.3942,-0.094262,-2.34725,8.9634,0.182823,-2.40073,8.50742,0.111447,-2.17612,8.5329,0.068414,-2.06994,9.0287,-0.023727,-2.08656,8.57674,-0.078535,-2.12853,8.92053,0.131561,-2.36693,8.29589,-0.092238,-3.11431,1.67932,-0.436929,-3.56988,1.39321,-0.544519,-3.13888,1.32729,-0.425745,-2.97982,1.3349,-0.814234,-3.04596,1.26373,-0.657403,-3.08819,1.30544,-0.905129,-3.34242,1.70127,-1.00176,-3.4705,1.40556,-1.01988,-3.47826,1.79924,-0.965451,-3.27301,2.01158,-1.12135,-3.42381,1.9629,-0.85343,-3.14122,2.08225,-0.960965,-2.92832,1.98026,-1.00091,-2.95072,1.85792,-1.0406,-3.26835,1.89216,-1.15227,-3.01686,1.95019,-0.724241,-3.56057,1.69305,-0.585204,-3.60033,1.38268,-0.811635,-2.99494,1.38568,-0.584267,-2.96619,1.64921,-0.882339,-2.94424,1.65113,-1.9967,-3.13878,1.62417,-1.87864,-3.03526,1.84676,-1.9179,-2.78687,1.66318,-1.86756,-2.88826,1.44314,-1.68474,-3.00257,1.36972,-1.88684,-3.27784,1.39368,-1.75151,-3.21674,2.00931,-1.59218,-3.38533,1.87097,-1.2476,-3.01262,2.05305,-1.47657,-2.81007,1.58908,-1.35668,-2.74894,1.82843,-1.63509,-2.79468,1.96062,-1.4662,-2.94635,1.71054,-0.889536,-3.27406,1.80871,-1.82075,-3.40964,1.62746,-1.44539,-3.29592,1.0338,-1.27848,-2.97768,1.02443,-1.11186,-2.9281,1.31663,-0.916726,-3.18115,1.87576,-0.961601,-3.378,1.47729,-0.884944,-3.09122,0.936884,-1.28192,-3.07408,1.02784,-0.922404,-3.39006,1.09782,-1.10099,-3.26575,1.29684,-0.749828,-3.08261,1.41604,-0.732476,-3.24757,1.40759,-0.674094,-3.05379,1.14053,-0.41885,-3.15609,1.46182,-0.554896,-3.32647,1.29698,-0.873185,-3.30635,1.05917,-0.772542,-2.83922,1.39794,-0.766316,-2.85188,1.06286,-0.640049,-2.92284,1.00462,-0.843421,-2.92089,1.29154,-0.9728,-3.09993,0.971968,-0.991401,-2.95743,1.1203,-0.473028,-2.95423,1.44423,-0.602089,-3.00498,1.21983,-1.08668,-3.19745,1.00515,-0.936351,-3.2065,1.24478,-1.03642,-3.2268,1.12038,-0.562956,-3.61879,1.40385,-0.730172,-3.60123,1.08513,-0.565928,-3.62206,1.07309,-0.491303,-3.57151,1.30999,-0.796356,-3.59042,1.04165,-0.689711,-3.26326,1.05736,-0.618523,-3.42165,1.04591,-0.706254,-3.41628,1.25704,-0.89803,-3.3456,1.42607,-0.817736,-3.3474,1.48434,-0.693423,-3.27259,1.15083,-0.496604,-3.60504,1.4629,-0.638586,-3.4282,1.12264,-0.447663,-3.46834,1.55443,-0.655406,-3.55501,1.26535,-0.92626,-3.55678,0.914633,-0.762646,-3.51462,1.49598,-0.819793,-3.96671,-0.109638,-0.156799,-3.89905,0.175819,-0.268747,-3.88717,-0.124587,-0.136061,-3.59428,0.878835,-0.412154,-3.70941,0.924194,-0.417588,-3.9456,-0.043095,-0.045103,-3.58086,0.831198,-0.571907,-3.87371,-0.076329,-0.027667,-3.69294,0.83993,-0.394811,-3.70623,0.709094,-0.498242,-3.6826,0.936604,-0.617226,-3.64817,0.761335,-0.61347,-3.66863,0.25784,-0.181825,-3.65449,-0.111786,0.027112,-3.70708,-0.124019,-0.012579,-3.75635,-0.07358,0.030458,-3.60017,0.861717,-0.552441,-3.4632,0.798853,-0.561634,-3.41769,0.962061,-0.340229,-3.53674,1.00338,-0.374742,-3.69944,-0.031817,0.099529,-3.63838,-0.068118,0.10575,-3.35454,0.869479,-0.424623,-3.45941,0.896082,-0.465303,-3.56477,0.896218,-0.492094,-3.46511,0.315895,-0.168568,-3.35645,0.323519,-0.207919,-3.51605,-0.118027,0.015102,-3.57324,-0.064803,0.073066,-3.48501,-0.057096,0.166969,-3.42497,-0.088459,0.107628,-3.13681,0.849875,-0.351283,-3.1484,0.840911,-0.481658,-3.35724,0.943191,-0.321708,-3.32868,0.893064,-0.583174,-3.27261,0.829276,-0.465157,-3.20721,0.921246,-0.306303,-3.41465,0.912937,-0.506095,-3.31602,0.993548,-0.428287,-3.42732,1.00355,-0.546256,-3.35366,1.03291,-0.343985,-3.32447,1.27856,-0.47698,-3.18673,1.00241,-0.318966,-3.10551,1.12957,-0.645263,-3.17597,0.918898,-0.535569,-3.31731,0.942557,-0.608061,-3.30901,1.16071,-0.694399,-3.11167,1.24118,-0.427874,-3.2686,0.256784,-0.186458,-3.07094,0.698203,-0.45863,-3.28372,-0.146637,0.003596,-3.33676,-0.099513,0.061206,-3.25054,-0.0854,0.140176,-3.19807,-0.11387,0.080358,-2.99827,0.768788,-0.400039,-3.20622,0.846966,-0.357005,-3.16572,0.794844,-0.507026,-3.06402,0.833976,-0.35392,-3.02086,0.755152,-0.526643,-3.24153,0.811978,-0.428012,-3.17759,0.89295,-0.462643,-3.10639,-0.253403,-0.112938,-3.00181,0.182824,-0.355663,-3.00646,-0.255552,-0.149489,-2.87736,-0.203124,-0.046368,-2.89512,0.119468,-0.221321,-3.00087,0.136312,-0.088476,-3.10569,0.242451,-0.241834,-3.16487,-0.188986,-0.05136,-3.09504,-0.117552,0.082658,-3.11163,0.717181,-0.540449,-3.06359,0.558742,-0.621025,-2.90879,0.645673,-0.416487,-3.06959,0.700872,-0.344986,-2.92748,0.601887,-0.566699,-3.07552,0.766533,-0.4504,-2.94532,-0.167923,0.092863,-2.99817,0.739349,-0.623946,-3.94017,-0.429436,0.025291,-3.95605,-0.311547,0.010111,-3.96864,-0.130734,-0.063334,-3.90755,-0.142932,0.035713,-3.95061,-0.412811,0.097691,-3.90301,-0.422353,0.087244,-3.87486,-0.139207,-0.120225,-3.82222,-0.157918,-0.016072,-3.70567,-0.445533,0.233747,-3.65602,-0.201789,0.073845,-3.74611,-0.427043,0.248393,-3.74139,-0.177608,0.124965,-3.77678,-0.45486,0.203284,-3.73697,-0.454462,0.17456,-3.80785,-0.215321,0.014672,-3.70961,-0.202394,-0.021139,-2.87157,1.05124,-0.415822,-2.96377,0.861311,-0.327494,-3.00162,0.796249,-0.558857,-3.01206,1.15766,-0.396141,-3.14099,0.901009,-0.323784,-3.04814,1.0026,-0.589435,-3.21733,0.85179,-0.446118,-3.17245,1.10596,-0.556146,-2.83272,0.995662,-0.547047,-2.82787,0.792991,-0.388466,-2.85881,0.726248,-0.506947,-2.89791,0.943641,-0.656789,-3.0165,0.700825,-0.610064,-2.93006,1.045,-0.488048,-2.93205,0.815156,-0.407378,-3.09807,0.899921,-0.664139,-3.0578,0.752388,-0.56244,-3.07642,0.97585,-0.602596,-2.99491,0.878239,-0.703449,-2.90331,1.05287,-0.478891,-3.55509,-0.168486,0.045844,-3.48071,-0.19339,0.079015,-3.55903,-0.478871,0.268878,-3.59393,-0.458617,0.300847,-3.60635,-0.161981,0.10088,-3.51586,-0.126604,0.192104,-3.55403,-0.414115,0.354195,-3.51663,-0.434979,0.341457,-3.27069,-0.181741,0.061548,-3.1977,-0.201501,0.100852,-3.28567,-0.451138,0.331754,-3.27774,-0.381896,0.413453,-3.20334,-0.132413,0.191496,-3.31193,-0.128935,0.151141,-3.24291,-0.395142,0.384502,-3.31902,-0.422595,0.360652,-3.13425,-0.424165,0.267842,-2.99557,-0.483946,0.26579,-3.03491,-0.61544,0.472971,-2.9816,-0.432267,0.56375,-3.09697,-0.328086,0.327851,-3.13183,-0.410733,0.576987,-2.95988,-0.389596,0.329562,-2.9405,-0.428226,0.025986,-2.89338,-0.267702,0.131052,-3.13577,-0.242908,0.040778,-3.03081,-0.184019,0.119866,-3.18661,-0.563758,0.486134,-2.95182,-0.26789,0.021905,-3.07922,-0.383704,-0.026515,-3.99212,-0.52594,0.100467,-4.01134,-0.576648,0.11559,-3.98521,-0.515762,0.183586,-3.98627,-0.490085,0.022929,-3.90497,-0.491059,0.029491,-3.94066,-0.556745,0.159901,-3.92671,-0.414143,0.10511,-3.98602,-0.514425,0.202152,-3.92697,-0.55401,0.187438,-4.02689,-0.584665,0.149019,-3.97736,-0.637716,0.171331,-4.04349,-0.622,0.315721,-3.76381,-0.601391,0.338649,-3.82184,-0.587281,0.346768,-3.80155,-0.500804,0.220013,-3.71632,-0.423566,0.274302,-3.80825,-0.540952,0.380234,-3.74847,-0.55647,0.393046,-3.71047,-0.505682,0.213722,-3.83343,-0.607439,0.388022,-3.76157,-0.629327,0.399081,-3.83876,-0.678309,0.559686,-3.75981,-0.541121,0.413456,-3.83139,-0.640619,0.629138,-3.60333,-0.487789,0.41453,-3.54709,-0.499359,0.40695,-3.58134,-0.591873,0.478844,-3.54424,-0.500388,0.53079,-3.50018,-0.377728,0.329925,-3.58721,-0.374008,0.33661,-3.61755,-0.495164,0.527175,-3.57137,-0.471108,0.293642,-3.63742,-0.623737,0.69939,-3.62519,-0.517955,0.532264,-3.5634,-0.585488,0.525277,-3.62365,-0.587358,0.763243,-3.55009,-0.495966,0.543246,-3.29558,-0.510665,0.591031,-3.33406,-0.504445,0.468008,-3.27149,-0.468965,0.366038,-3.35048,-0.482113,0.595421,-3.31846,-0.372558,0.393808,-3.34871,-0.463722,0.369803,-3.25474,-0.384067,0.415029,-3.33032,-0.592625,0.554599,-3.29454,-0.578768,0.605731,-3.31921,-0.48605,0.597203,-3.3584,-0.536431,0.854668,-3.37465,-0.58808,0.793395,-3.36007,-0.578441,0.61068,-3.12672,-0.59207,0.564875,-3.01949,-0.60211,0.597121,-3.1948,-0.501961,0.812339,-3.11096,-0.469061,0.793341,-3.17617,-0.469041,0.538604,-3.07837,-0.408493,0.545998,-2.98272,-0.435926,0.606563,-3.11379,-0.419731,0.71402,-3.15835,-0.420382,0.827942,2.7702,24.0524,-0.441673,2.67581,23.9281,-0.619348,2.46602,24.1127,-0.654212,2.46691,24.2343,-0.527605,2.62324,24.1777,-0.325321,2.69977,24.0007,-0.313606,2.63939,23.7986,-0.433134,2.28722,23.7737,-0.372619,2.3701,23.6745,-0.664962,1.90848,23.7514,-0.675742,2.39019,24.1788,-0.401664,2.15754,23.8491,-0.727896,1.17587,22.6459,-1.27843,1.25269,23.0582,-1.24863,1.36229,22.7528,-1.11171,1.414,22.075,-0.807941,1.76605,22.8936,-0.850075,2.04236,23.5469,-0.611593,1.59498,21.3383,-0.665716,1.47051,21.4373,-0.767917,1.23495,21.9222,-1.01225,1.82882,21.8633,-0.54745,1.8531,22.494,-0.602004,2.08066,22.3546,-0.408082,2.16775,22.8868,-0.386681,1.72566,21.4176,-0.43314,1.98272,21.9893,-0.153162,2.10522,22.4242,-0.274396,2.28181,23.382,-0.104735,2.36718,23.3505,-0.279767,2.33939,23.5491,-0.287536,2.32877,23.7467,0.027009,2.3854,23.3116,0.128107,2.4692,23.1919,-0.037287,2.336,23.5296,0.150119,2.55177,23.4061,-0.400103,2.51484,23.6456,-0.413073,2.07801,22.9533,-0.232836,2.07656,23.5761,-0.274733,1.9342,23.271,-0.332201,2.41897,23.7864,-0.214969,2.20206,23.7145,-0.357507,1.85365,21.876,-0.135278,1.80763,22.8261,-0.354579,2.14297,22.8926,-0.267764,1.23725,21.9984,-0.604101,1.53187,21.2466,-0.348634,1.69456,21.3876,-0.219226,1.07144,22.1562,-1.05551,1.30942,21.5178,-0.565335,1.94237,23.9338,-0.022139,2.13023,23.9968,0.046354,1.89227,24.0563,-0.232532,1.76111,23.6113,-0.512506,1.84678,23.7066,-0.260105,1.83944,23.7921,-0.345854,1.98641,23.8163,-0.186242,2.15545,23.9918,-0.288365,1.9499,23.9982,-0.358378,2.18745,24.0281,-0.039263,2.07519,23.8343,-0.488399,1.11384,23.1335,-1.03865,1.06427,23.0102,-1.20006,1.12525,22.5259,-1.00207,1.27432,23.6513,-0.929746,1.41128,23.6516,-0.973898,0.991642,23.5221,-1.14259,1.25442,23.291,-1.21259,1.01805,23.3771,-1.03408,1.69984,23.3557,-1.07701,2.54538,23.2186,-0.276474,0.261863,24.0724,0.872174,0.748969,24.0492,0.648821,0.703838,24.1574,0.849988,0.214012,24.2721,0.942164,0.258717,24.2393,0.724258,0.321858,24.2072,1.01865,0.257483,24.3428,0.831404,0.423639,24.3467,0.925658,0.708115,24.204,0.528707,0.694139,24.3099,0.638941,1.44315,24.3025,0.073884,1.40807,24.2497,-0.016378,1.42963,24.1332,0.022082,2.21768,24.1129,-0.207523,1.55027,24.1729,0.094288,2.20809,24.2217,-0.312576,2.20808,24.1141,-0.413986,2.19042,24.0195,-0.318172,9.1225,17.4887,2.70245,9.0448,17.6575,2.44114,9.15634,17.7006,2.43968,9.02659,17.7421,2.49562,9.12291,17.595,2.80961,9.13521,17.7782,2.50085,9.20374,17.5353,2.77619,9.03793,17.5247,2.75383,9.16698,17.4003,2.81964,9.18465,17.3773,3.05677,9.14245,17.3764,3.07053,9.22205,17.4594,2.81864,9.19233,17.545,2.87669,9.08517,17.4579,2.83061,9.17022,17.4177,3.0897,9.08656,17.5163,2.88042,8.93234,17.9683,2.08217,8.93571,17.8454,2.35386,8.80753,18.2753,1.94017,9.07956,17.7623,2.27385,8.89405,18.1893,1.79789,9.05068,18.0459,2.09469,8.99684,18.2556,1.83412,8.96252,18.3434,1.91049,8.95639,18.1257,2.13438,8.9512,17.7568,2.32574,9.05518,17.9003,2.40871,9.15552,17.8326,2.32233,8.88502,18.333,1.87627,8.79838,18.2351,1.85823,10.66,16.9816,1.11383,10.4937,17.0732,1.05738,10.6918,17.002,1.0907,10.5223,17.1484,1.16329,10.5293,17.1428,1.05343,10.4819,17.0528,1.13018,11.177,16.839,1.59132,11.0032,17.001,1.5826,10.9488,16.9197,1.60941,10.9421,16.9354,1.46221,11.1654,16.7919,1.58424,10.9322,16.8728,1.50946,11.0149,17.0067,1.49626,11.178,16.8401,1.54956,10.8627,16.9459,2.07349,11.1271,16.7873,2.04747,11.1363,16.8312,2.07867,10.8924,16.9234,1.93101,10.9522,17.0203,1.94617,11.151,16.8301,2.02814,10.9104,17.0483,2.04044,10.7305,17.0644,2.42915,10.9183,16.8873,2.41254,10.7408,17.0409,2.3343,10.6661,16.941,2.4296,10.6802,16.9766,2.30788,10.6705,17.0042,2.46618,10.9047,16.8809,2.46686,10.3802,17.1154,1.06658,10.3949,17.1113,1.13928,10.2893,17.353,1.13786,10.4459,17.1455,1.0421,10.504,17.1805,1.07204,10.3577,17.4177,1.11584,10.471,17.1675,1.15932,10.2406,17.3563,1.07467,10.34,17.3971,1.02563,10.7581,17.2467,1.57162,10.7837,17.0678,1.54319,10.8052,17.0874,1.61843,10.8957,17.147,1.58012,10.538,17.3333,1.54911,10.5564,17.3502,1.43084,10.8255,17.0678,1.45028,10.8811,17.1304,1.46601,10.6422,17.4226,1.5403,10.6354,17.3935,1.42239,10.7431,17.1239,2.00256,10.8231,17.1845,2.00555,10.5739,17.4166,1.94967,10.5192,17.3454,1.83095,10.7674,17.1046,1.89261,10.5099,17.344,1.94676,10.6064,17.4095,1.83332,10.8405,17.1717,1.88901,10.5964,17.1848,2.29581,10.3564,17.4495,2.28835,10.6002,17.1983,2.41489,10.2732,17.335,2.28771,10.5243,17.1277,2.42177,10.3026,17.3929,2.36464,10.5473,17.1315,2.29176,10.3364,17.3741,2.20431,9.95404,17.6865,1.05022,10.0669,17.7598,1.03392,10.1638,17.59,1.03028,10.059,17.8012,1.12624,10.3219,17.4867,1.14887,10.0355,17.7454,1.18359,10.1116,17.5604,1.16693,10.2233,17.3883,1.1792,10.0982,17.5319,1.07744,10.2112,17.3857,1.04589,10.3289,17.4706,1.03878,9.95661,17.6695,1.17049,10.2402,17.5952,1.4193,10.3817,17.4324,1.51403,10.0702,17.7659,1.48032,10.4794,17.5262,1.3791,10.4123,17.4273,1.41054,10.1455,17.8441,1.31792,10.051,17.7447,1.36432,10.4454,17.4908,1.54795,10.0871,17.8484,1.49055,10.5216,17.5657,1.4846,10.3288,17.7147,1.4717,10.1636,17.8959,1.44957,10.1671,17.6478,1.84169,9.94393,17.7542,1.71362,10.4019,17.4326,1.78595,9.9779,17.8329,1.82457,10.0108,17.8282,1.63776,10.0887,17.8928,1.66281,10.497,17.546,1.79106,10.0447,17.9313,1.76009,10.4656,17.5473,1.92821,10.3651,17.4479,1.92395,10.0203,17.6095,2.11384,9.96725,17.6881,2.22063,9.76424,17.7861,2.13477,10.2977,17.5143,2.18057,10.176,17.4021,2.2045,9.84472,17.8118,1.98416,9.78709,17.7506,2.01387,9.90411,17.8778,2.02234,10.2922,17.5584,2.29835,10.1775,17.4447,2.32754,9.85029,17.9143,2.11982,9.90678,17.7501,1.12961,9.92274,17.8088,1.19521,9.35371,18.2692,1.10217,9.69888,18.064,0.989825,9.9242,17.7686,1.03387,9.32664,18.2097,0.989759,10.0307,17.8867,1.15169,9.69262,18.1342,1.08678,10.0271,17.892,1.03697,9.40718,18.3842,1.01687,9.40721,18.3209,0.924072,9.66059,18.0934,1.36061,9.32307,18.3607,1.13663,9.96674,17.7836,1.32822,10.066,17.8897,1.29726,9.39917,18.467,1.1261,9.76446,18.1691,1.2804,10.0384,17.8739,1.48311,9.38638,18.4862,1.27304,9.94383,17.8003,1.46777,9.28502,18.3975,1.28393,9.29175,18.3175,1.19755,10.0912,17.9406,1.41071,9.58147,18.0875,1.50775,9.86248,17.8903,1.80599,9.57542,18.1871,1.60396,9.97405,17.8472,1.59107,9.32528,18.4206,1.267,9.68866,18.1995,1.45885,10.0507,17.9745,1.60771,9.88349,17.7945,1.67337,9.21586,18.3353,1.32247,9.66925,18.2347,1.56962,9.96704,18.0229,1.7812,9.23655,18.48,1.44545,9.34456,18.5258,1.37371,9.18795,18.3582,1.44069,9.99281,17.9309,1.75449,9.70128,17.733,1.99069,9.4577,18.0482,1.74317,9.72154,17.7519,1.89445,9.67332,17.8036,2.05895,9.42816,18.1369,1.87335,9.06871,18.3575,1.71716,9.82535,17.8285,1.87477,9.87089,17.905,1.89152,9.21259,18.4062,1.4945,9.19126,18.5139,1.5827,9.18776,18.4895,1.68636,9.85878,17.9671,2.02325,9.76362,17.8954,2.08964,9.0838,18.2644,1.55792,9.05033,18.4444,1.14853,9.13043,18.3662,1.03282,8.98265,18.427,0.967214,9.08325,18.3058,1.05841,8.99281,18.3805,1.12755,8.9271,18.4644,1.03239,8.91876,18.3718,1.03003,9.20658,18.4019,0.898278,9.07801,18.558,1.07836,9.31027,18.4866,1.11851,9.24002,18.383,0.899219,8.99009,18.5071,1.14884,9.25694,18.421,1.20029,9.09393,18.3608,1.00781,9.2686,18.3128,0.982078,9.12338,18.3849,0.920277,9.00505,18.4689,0.907808,8.8454,18.6146,0.85496,9.06983,18.5043,1.08228,8.74858,18.601,0.883104,8.77803,18.6763,1.01318,8.90686,18.4756,1.08557,8.75763,18.5562,1.04532,8.88572,18.3965,0.907623,9.0008,18.4201,1.01076,8.79797,18.4711,0.856673,8.93388,18.6015,1.10248,8.91112,18.7067,1.22542,8.90433,18.7119,0.971185,8.76956,18.7579,1.14282,8.96176,18.668,0.996868,8.78565,18.6887,0.935497,8.67234,18.6522,1.18209,8.83194,18.5913,1.2906,8.71507,18.573,0.997265,8.86641,18.5462,1.06388,8.81259,18.4382,1.6261,9.04903,18.5721,1.5254,8.85298,18.5551,1.64574,9.00876,18.4408,1.34407,9.08786,18.5465,1.4044,8.7591,18.5345,1.23726,8.69852,18.5549,1.50243,8.86321,18.6566,1.2743,8.98465,18.6133,1.26907,8.76854,18.5052,1.64222,8.93952,18.687,1.23242,8.88625,18.6218,1.29614,9.21047,18.5481,1.3991,9.17925,18.4621,1.43996,8.95222,18.6125,1.13165,9.27801,18.545,1.20799,9.21046,18.4728,1.17299,8.86564,18.6011,1.20009,9.29912,18.524,1.29627,9.00635,18.4996,1.36575,9.20398,18.4087,1.25816,8.91437,18.5277,1.14029,9.14809,18.5696,1.58375,9.01705,18.5647,1.35701,9.0125,18.5945,1.51467,9.06092,18.4749,1.66819,9.09745,18.4364,1.45976,8.95113,18.4917,1.40927,9.18505,18.5256,1.40233,8.95933,18.5218,1.55739,9.02255,18.4104,1.80832,9.16665,18.3767,1.755,8.89471,18.5247,1.68969,9.19035,18.4424,1.59295,9.05308,18.5196,1.50347,8.88319,18.4098,1.78024,8.80707,18.3932,1.63159,8.83502,18.2923,1.71912,8.96926,18.3116,1.51301,9.08667,18.2824,1.59676,8.98471,18.4148,1.45941,8.71378,18.6068,0.868793,7.67602,19.4649,0.575094,7.8053,19.3582,0.453055,8.72074,18.7079,0.805093,8.74335,18.7449,0.811904,8.80266,18.6473,0.902757,5.65052,20.8443,0.018308,5.79593,20.9943,0.026517,5.87315,20.9083,-0.169122,5.74604,20.7938,-0.171581,5.72454,20.5974,-0.129214,5.68846,20.8009,0.194449,5.98832,20.6148,-0.209411,6.10437,20.7426,-0.175623,5.7066,20.5903,0.089111,5.89212,20.6176,0.278047,5.88299,20.8423,0.286476,5.99524,20.9666,0.175668,6.05155,20.9601,-0.031419,8.82179,18.7879,0.836717,6.58361,20.4657,0.25685,8.77805,18.8229,0.924608,6.69465,20.2732,0.37456,6.52561,20.5118,0.108493,8.70918,18.7367,0.97747,8.21805,18.8947,1.3076,8.03827,19.0865,0.937312,8.56608,18.5679,1.05552,8.59137,18.4897,1.30188,8.61573,18.5426,1.52429,8.67562,18.6683,0.953572,8.74939,18.8114,1.0119,8.77394,18.7881,1.43671,8.72773,18.6438,1.56186,8.80369,18.6759,1.2707,8.77894,18.8455,1.20686,8.32146,18.9632,1.36654,7.17846,19.5596,0.832472,5.86652,20.4324,0.581066,5.82988,20.3782,0.454583,5.9048,20.3329,0.319152,7.04333,19.8215,0.658674,5.93213,20.4149,0.247622,5.98862,20.49,0.276763,5.93567,20.5844,0.411355,5.94685,20.5736,0.545678,5.87711,20.5345,0.593956,5.84143,20.5213,0.421323,5.47632,20.8599,0.326344,5.26386,20.5961,0.119348,5.56864,20.7485,0.472438,5.68654,20.9022,0.511963,5.63984,21.1343,0.410408,5.62266,20.6511,0.407579,5.72027,20.6745,0.306715,5.82521,20.8642,0.359705,5.78276,20.9161,0.454083,5.38559,20.5739,-0.057361,5.80399,20.9365,0.233036,5.26154,20.501,-0.007754,4.79384,21.3446,-0.055725,3.066,23.1988,-0.174992,4.92913,21.3436,-0.120959,4.59833,21.5867,0.050862,2.70221,23.3288,0.100636,2.72363,23.3429,-0.099808,5.1374,21.6744,0.195624,5.66991,21.2608,0.156296,3.49232,23.1468,-0.02417,3.38424,23.2445,0.097109,3.58906,22.9147,0.169723,5.05223,21.6039,0.263532,4.40138,21.9693,0.140986,2.79592,23.4665,0.194286,5.40877,21.1673,-0.028873,3.23269,23.2505,-0.131059,5.72067,21.3279,0.344641,2.68678,24.0227,0.128809,2.64088,23.88,0.268744,2.69747,24.0484,-0.097456,2.7687,23.4921,-0.273984,2.52919,24.0112,0.075363,2.47077,23.8352,0.243335,2.52765,23.5733,0.259169,2.73516,23.7827,-0.262972,2.4958,23.2492,-0.016216,2.38119,23.6913,-0.3419,2.38352,23.4272,0.09388,2.50609,23.5369,-0.425083,2.30491,23.3563,-0.099418,2.24735,23.5523,0.003662,2.62263,23.3672,-0.358371,2.57518,23.2491,-0.205217,2.24122,23.6451,-0.189847,0.318304,17.9167,0.232539,-0.048294,17.8053,0.167641,-0.316566,17.9171,0.233934,-0.236232,17.6926,0.103467,-0.30549,17.5272,0.061721,0.19471,17.7043,0.102121,0.332391,17.7523,0.120512,0.302985,17.5266,0.059871,-0.269264,17.7181,0.495972,0.000454,17.3077,0.391477,0.102315,17.6794,0.53283,0.275924,17.346,0.342428,0.381194,17.7589,0.421278,-0.374954,17.4002,0.30226,-0.256053,17.5157,0.410783,0.431862,17.4538,0.229282,0.428717,17.801,0.308689,-0.433174,17.807,0.332253,-0.336172,17.7452,0.105079,-0.433293,17.4889,0.164585,0.411037,17.5269,0.136955,0.027995,17.7681,0.342092,-0.193128,17.4769,0.212128,0.137048,17.6346,-0.102511,0.22763,17.7191,0.022433,0.104318,17.7117,-0.030928,-0.105448,17.7175,-0.011614,0.008909,17.6883,-0.179798,0.001078,17.8075,0.022633,0.166726,17.8281,0.124518,-0.49107,17.8444,0.093996,-0.269976,17.798,0.036868,-0.195892,17.701,0.013532,-0.597916,17.8778,0.076652,0.449605,17.844,0.078818,0.597914,17.8778,0.076652,0.495891,17.8478,0.099171,-0.488634,17.9172,0.13676,-0.589702,17.9747,0.124741,-0.53756,17.9097,0.106374,0.537556,17.9097,0.106374,0.5897,17.9747,0.124741,0.485584,17.9282,0.136639,-0.333715,17.9156,0.108949,0.4471,17.9249,0.117794,-0.305258,17.8893,0.169539,0.30189,17.8906,0.164731,0.274291,17.9083,0.074362,-0.051613,17.8705,-0.04529,-0.001655,17.8119,-0.338139,-0.007822,17.9127,-0.103128,0.035713,17.8918,-0.017664,-0.006056,17.9429,-0.247385,-0.132295,17.7675,-0.023418,-0.174257,17.9414,0.040179,0.174266,17.9415,0.040192,0.119609,17.9002,0.082279,-0.126744,17.9013,0.086752,-0.168931,17.8462,0.126776,-0.19788,18.0399,0.134374,-0.296482,18.0358,0.114984,0.296501,18.0108,0.095476,0.222703,18.0535,0.14115,-0.301908,17.6819,-0.126499,-0.135484,17.627,-0.105917,0.3031,17.687,-0.118941,0.261587,17.7526,-0.030387,-0.691212,17.9443,0.083807,-0.638693,17.9697,0.109414,0.69122,17.9442,0.083806,0.638692,17.9697,0.109415,-0.276519,18.3398,0.318456,0.277776,18.3004,0.269173,0.043318,18.165,0.253503,-0.269899,17.9209,0.20665,-0.277819,18.1093,0.195924,-0.197993,18.1006,0.215632,-0.235139,18.2449,0.59794,0.064871,18.0193,0.587409,0.073013,18.2342,0.639362,0.265586,17.8469,0.499587,0.256043,18.2447,0.581699,-0.004305,17.8143,0.566828,-0.39704,18.2829,0.43076,-0.278633,17.8411,0.497539,0.390045,17.8953,0.377126,0.39637,18.2867,0.411948,-0.312934,18.2739,0.267819,-0.389032,17.9134,0.304401,0.303159,18.1466,0.23351,0.303906,18.3355,0.317543,0.375543,17.9182,0.281635,0.272926,17.9191,0.205924,0.079806,18.2461,0.450466,-0.08869,17.9241,0.363228,0.320143,18.1289,0.181322,0.20673,18.1013,0.201585,-0.130437,17.9863,0.047101,-0.108864,18.0691,0.094309,-0.017049,17.9998,-0.059529,0.093439,18.0715,0.086403,0.011852,18.2127,0.152209,0.155078,18.0476,0.114552,-0.016955,18.1034,-0.219213,-0.448924,18.3121,0.22751,-0.481025,18.2269,0.185409,-0.466325,18.2903,0.206966,-0.544015,18.3589,0.216732,0.466321,18.2903,0.206966,0.544012,18.3589,0.216732,0.450008,18.3248,0.230096,0.481024,18.2269,0.185409,-0.412297,18.314,0.211643,0.429316,18.3214,0.216695,0.24034,18.1581,0.132881,-0.048732,18.2534,0.100686,-0.122349,18.2933,0.192306,-0.170555,18.2518,0.240832,0.166736,18.2525,0.23442,-0.262673,18.3074,0.193145,-0.124578,18.2636,0.116114,0.139699,18.3162,0.19497,-0.183162,18.4305,0.214519,-0.274289,18.4228,0.198563,0.270512,18.4311,0.198119,0.097742,18.2354,0.099264,0.180636,18.4277,0.213284,0.254238,18.2958,0.18245,0.134079,17.9779,0.032491,-0.235981,18.1562,0.120158,-0.281382,18.02,0.015541,0.276246,18.0064,0.001125,0.001259,18.2304,-0.027508,-0.279758,18.7342,0.281581,-0.319115,18.7831,0.33506,0.313129,18.7853,0.327049,0.290844,18.7282,0.281255,-0.153005,18.6631,0.27415,-0.283855,18.3293,0.288383,-0.311247,18.5709,0.27492,-0.127543,18.4808,0.299277,0.309286,18.5624,0.282751,0.27383,18.3263,0.285869,-0.075772,18.5443,0.648816,-0.043556,18.7857,0.672758,-0.341943,18.7326,0.556777,-0.253606,18.3563,0.612821,0.112228,18.3389,0.646155,0.340246,18.3642,0.555346,0.305961,18.7747,0.592026,-0.400857,18.7666,0.440705,-0.396205,18.3646,0.45165,0.398121,18.3617,0.394697,0.397625,18.7692,0.419022,0.13365,18.7424,0.489469,0.226634,18.5117,0.239486,-0.177794,18.5258,0.236488,-0.206829,18.4677,0.186061,0.125583,18.3301,0.111678,0.003735,18.4775,0.135557,0.109602,18.4457,0.133617,0.01293,18.3213,0.012787,-0.109507,18.4457,0.133647,-0.049385,18.3743,0.044046,-0.00221,18.3434,-0.16269,-0.424278,18.6277,0.209587,-0.491221,18.7091,0.229943,-0.563559,18.6613,0.191901,0.263814,18.5779,0.18518,0.563557,18.6613,0.191901,0.454157,18.6398,0.218589,-0.554275,18.779,0.205533,-0.505424,18.7086,0.209116,0.50542,18.7086,0.209116,0.554273,18.779,0.205533,0.456425,18.7328,0.235811,-0.433614,18.7376,0.215339,0.415267,18.733,0.21865,-0.259313,18.6886,0.18427,-0.034262,18.6121,0.098252,-0.007691,18.5738,0.014163,-0.00648,18.542,-0.080026,0.099096,18.6095,0.11755,0.004718,18.6431,0.167618,0.165034,18.6668,0.253503,0.132178,18.7116,0.200908,-0.126719,18.7043,0.197553,0.253394,18.7101,0.184355,-0.127445,18.6437,0.127956,-0.185939,18.8458,0.193633,-0.278731,18.8316,0.178697,0.278155,18.8296,0.176859,0.185432,18.8441,0.192636,-0.125003,18.3152,0.106075,-0.275647,18.3671,0.081941,-0.376885,18.3683,0.354221,0.277737,18.3881,0.096231,-0.649188,18.7382,0.179472,-0.606754,18.6869,0.184232,0.649184,18.7382,0.17948,0.606752,18.6869,0.184232,-0.2301,19.317,0.531408,-0.330237,19.2791,0.452201,-0.059608,18.8783,0.610403,0.037451,19.3293,0.567159,0.23416,18.8819,0.573424,0.325358,18.8595,0.503884,0.316829,19.3033,0.473154,-0.368876,19.2653,0.349941,-0.368025,18.8336,0.365807,0.368566,18.8345,0.368193,0.365003,19.2598,0.319831,-0.314676,19.2534,0.278302,-0.291422,19.1823,0.208528,-0.261822,18.9932,0.257533,0.250305,18.9478,0.266857,0.2927,19.0253,0.225119,-0.255442,18.7772,0.279133,0.252656,18.781,0.27987,0.186733,19.2472,0.38454,0.001156,18.8762,0.448489,-0.300103,18.8606,0.542078,-0.240506,18.9538,0.21384,-0.074955,18.9592,0.267874,0.156045,19.0059,0.204725,-0.001864,19.0022,0.130523,-0.153719,18.8486,0.159476,0.098616,18.8709,0.126747,-0.100112,18.8685,0.126031,-0.016951,18.6943,-0.004624,-0.018191,18.6815,-0.109471,0.010742,18.6958,-0.025146,-0.460491,19.0783,0.150821,-0.241554,18.9602,0.159271,0.239113,18.9376,0.18898,0.460488,19.0783,0.150821,-0.413951,19.1988,0.171706,-0.37324,19.1112,0.17291,0.373237,19.1112,0.17291,0.413949,19.1988,0.171706,0.289,19.1756,0.206128,-0.227624,19.153,0.126668,0.312977,19.1657,0.155285,0.21816,18.9578,0.125192,0.227814,19.1553,0.102391,-0.013126,18.8006,-0.096462,-0.009676,18.9059,-0.077541,-0.214373,19.2059,0.088688,-0.043265,18.9776,0.026373,0.021457,19.0093,0.032307,0.132561,19.133,0.086119,-0.161989,19.1309,0.199594,0.132182,19.1433,0.143498,-0.071288,19.0963,0.118971,0.186503,19.1689,0.201215,0.089892,19.2588,0.255324,0.184203,19.3069,0.11348,-0.183837,19.3012,0.112764,-0.250752,18.8405,0.103797,0.259489,18.7592,0.073464,0.12351,18.7541,0.128552,-0.123046,18.7136,0.109183,-0.464891,19.2284,0.150418,-0.595861,19.1616,0.110397,-0.559129,19.2101,0.1225,0.594642,19.1613,0.105804,0.470615,19.2281,0.158326,0.559127,19.2101,0.1225,-0.015382,18.7975,-0.163534,-0.013285,18.6883,-0.183411,-0.243188,19.2923,0.216092,-0.31434,19.4683,0.219691,-0.223597,19.4521,0.156082,0.040317,19.4693,0.17491,0.284192,19.2957,0.223264,0.240541,19.4635,0.161774,-0.255971,19.3867,0.472017,0.000185,19.8142,0.475657,-0.298721,19.7661,0.381841,0.091077,19.3703,0.528972,0.235011,19.3741,0.475285,0.296348,19.7713,0.38467,-0.045473,19.3712,0.549338,-0.342236,19.7041,0.274328,-0.232438,19.6941,0.13597,-0.271836,19.6018,0.095138,0.275543,19.5707,0.101793,0.243553,19.6956,0.138096,0.34283,19.6992,0.27322,-0.349612,19.3539,0.310226,0.341407,19.3684,0.371173,-0.010009,19.3788,0.354382,-0.208426,19.406,0.089522,-0.134279,19.4688,0.118005,-0.137486,19.4028,0.081344,0.207326,19.4018,0.059775,0.166658,19.4321,0.099655,-0.092276,19.3252,0.03063,-0.028292,19.1397,-0.097852,0.004659,19.2971,-0.001567,0.00693,19.1234,-0.098493,0.10008,19.3109,0.015739,-0.018007,19.0728,-0.205447,-0.392493,19.5213,0.041784,0.393537,19.5161,0.021987,0.428133,19.591,0.021654,-0.49144,19.5215,0.001694,-0.366118,19.5076,0.030353,0.491439,19.5215,0.001694,-0.39271,19.6064,0.026164,-0.482086,19.6362,-0.018122,-0.438691,19.5737,0.006076,0.43869,19.5737,0.006076,0.482083,19.6362,-0.018122,-0.359031,19.5933,0.004007,0.351621,19.5899,0.005475,-0.213009,19.3922,0.014386,-0.029284,19.4367,-0.087853,-0.0113,19.3603,-0.166715,-0.018007,19.2904,-0.244875,-0.016889,19.2119,-0.187264,0.093054,19.459,-0.057454,0.019035,19.4906,-0.01011,0.2418,19.6213,0.078465,-0.152871,19.5716,0.076153,0.052186,19.6196,0.136186,0.13882,19.5521,0.064569,-0.113887,19.4914,-0.057019,-0.12242,19.5731,-0.003721,0.229135,19.5843,-0.03397,-0.172103,19.7112,-0.041114,-0.225426,19.5615,-0.035566,0.173883,19.6947,-0.039066,-0.11069,19.1682,0.027465,-0.222592,19.1716,-0.015953,0.110497,19.1672,0.026979,0.236299,19.2272,-0.00761,-0.570606,19.5861,-0.031399,-0.531382,19.5413,-0.012425,0.570608,19.5862,-0.031415,0.531379,19.5413,-0.012425,-0.019843,19.1419,-0.269299,-0.013347,19.0852,-0.231196,0.290657,20.3273,0.120917,0.277365,20.2303,-0.007881,0.296258,20.3294,-0.10702,-0.272452,20.2735,-0.066834,-0.197556,20.2326,-0.040551,-0.306671,20.2393,0.008714,0.26459,20.5232,-0.165671,-0.328685,20.3786,-0.136164,-0.242168,20.6662,0.085478,-0.260764,20.3861,0.183309,0.213696,20.6011,-0.098631,0.267277,20.666,0.045784,0.08147,20.6518,0.20453,0.187677,20.424,0.247332,-0.126609,20.4371,0.284702,-0.083407,20.7227,0.16762,0.049523,20.4481,0.303235,0.129584,20.4387,-0.072695,0.216055,20.2362,-0.048602,0.000244,20.2606,0.022679,-0.143566,20.489,-0.100017,-0.263058,20.6174,-0.072719,-0.077051,20.6184,-0.062045,-0.008938,20.0464,-0.354449,0.059225,20.0984,-0.272775,-0.061934,20.0647,-0.268326,0.115727,20.3416,-0.163748,-0.048656,20.3181,-0.212667,0.092458,20.2785,-0.241425,-0.135518,20.3219,-0.132577,-0.242328,20.3711,-0.257363,-0.114884,20.3005,-0.246154,0.502134,20.2849,-0.377876,0.601326,20.4074,-0.355914,0.54603,20.3591,-0.274335,-0.369139,20.3203,-0.249889,-0.581952,20.3253,-0.339518,-0.489626,20.2847,-0.383208,0.482997,20.4837,-0.290382,0.463498,20.3956,-0.424284,-0.589726,20.4194,-0.358318,-0.474229,20.4867,-0.287115,-0.470045,20.3976,-0.426077,0.226491,20.4934,-0.256092,0.12952,20.4914,-0.15725,-0.115064,20.4914,-0.178794,-0.235621,20.4846,-0.265113,-0.267444,20.5194,-0.180799,-0.118808,20.451,-0.269417,-0.039408,20.4838,-0.231387,0.114614,20.4115,-0.287037,-0.046864,20.2272,-0.360457,-0.025095,20.1658,-0.455724,0.060319,20.1884,-0.352616,0.059787,20.0727,-0.47371,-0.000364,19.9843,-0.496005,0.136899,20.1658,-0.205457,-0.13702,20.161,-0.206087,-0.099395,20.6726,-0.230571,-0.170401,20.6165,-0.267186,0.064905,20.5308,-0.231056,0.099537,20.6736,-0.233917,0.230736,20.4054,-0.275263,0.174266,20.6171,-0.263616,-0.501654,20.4366,-0.23527,0.380411,20.3942,-0.344046,-0.385367,20.3951,-0.341766,0.33399,20.4273,-0.15791,0.225407,20.3459,-0.215241,-0.059315,20.0749,-0.443101,0.004126,20.4184,-0.1828,-0.269143,21.0958,-0.155761,-0.072153,21.0682,-0.195092,-0.248639,20.9879,-0.259617,0.294998,20.7788,-0.163029,0.230439,21.1151,-0.033884,0.243087,20.8458,0.067336,0.275248,20.95,-0.281772,0.226176,21.0099,-0.249135,0.264805,21.0835,-0.181581,-0.252928,20.8376,0.0539,-0.159234,21.1557,0.011117,-0.00054,20.9008,0.171924,0.071518,21.1749,0.03721,0.127273,20.867,-0.206984,0.188389,20.6871,-0.154605,0.001468,20.7194,-0.110243,-0.225474,20.6821,-0.15724,-0.127276,20.867,-0.206982,0.113399,21.061,-0.214251,0.296031,20.7043,-0.133458,-0.301494,20.7229,-0.1031,0.030554,20.5893,-0.366238,-0.071896,20.5806,-0.373932,-0.026333,20.4895,-0.619646,0.021764,20.4879,-0.590243,0.073996,20.6127,-0.395559,-0.108112,20.7804,-0.290908,-0.227801,20.8278,-0.38124,-0.108297,20.737,-0.358024,0.110987,20.6848,-0.335998,0.099848,20.7798,-0.301883,0.231426,20.8175,-0.375501,0.375776,20.7693,-0.39462,0.302204,20.7678,-0.269668,-0.292222,20.7557,-0.25777,-0.355796,20.7832,-0.341402,0.580796,20.7805,-0.470426,0.480786,20.7328,-0.517679,-0.577279,20.7822,-0.463732,-0.479151,20.7428,-0.523008,-0.41079,20.7547,-0.435385,0.54182,20.9185,-0.469846,0.482373,20.8776,-0.539647,0.415059,20.8648,-0.465902,0.153264,20.9664,-0.320608,-0.159979,20.967,-0.318981,-0.541429,20.9162,-0.440511,-0.221063,20.9553,-0.38581,-0.44374,20.8975,-0.470843,0.119928,20.8638,-0.394644,-0.127917,20.8919,-0.388656,-0.047436,20.9472,-0.353303,-0.132883,20.6201,-0.322737,0.064144,21.0496,-0.354781,0.158238,21.1156,-0.35614,0.125471,21.1434,-0.393413,-0.100632,21.1522,-0.363052,0.233851,20.9277,-0.394726,0.054571,20.8988,-0.315768,-0.566186,20.8437,-0.518139,-0.505722,20.8695,-0.367357,0.510156,20.8755,-0.370113,-0.32753,20.8823,-0.287194,0.061553,20.6726,-0.441739,-0.046802,20.7132,-0.444732,0.042427,20.6457,-0.608112,-0.039166,20.6998,-0.534305,-0.083141,21.4974,-0.295939,-0.245861,21.4451,-0.351072,-0.280764,21.5098,-0.289999,-0.297226,21.261,-0.270856,-0.261404,21.1146,-0.295672,-0.318447,21.1107,-0.232577,0.275792,21.52,-0.259852,0.249661,21.5392,-0.137574,0.299311,21.1845,-0.118518,0.054563,21.5876,-0.052228,0.195559,21.2655,0.016573,-0.18063,21.5529,-0.080774,-0.273041,21.2282,-0.072113,0.06141,21.2987,0.068102,-0.124811,21.3125,-0.300045,-0.037037,21.1266,-0.221836,0.099403,21.4986,-0.297288,0.252556,21.4432,-0.357185,0.144547,21.3354,-0.326379,0.221848,21.0924,-0.275223,-0.154418,21.2832,0.045522,0.065025,21.0727,-0.55993,0.016969,21.0656,-0.514022,-0.076116,21.0865,-0.547424,0.01216,20.932,-0.750745,-0.097698,21.0313,-0.49398,0.11826,21.2349,-0.512427,0.269939,21.241,-0.481985,0.136024,21.2144,-0.38911,-0.144266,21.2491,-0.51109,-0.105724,21.2657,-0.388706,-0.147091,21.1998,-0.383075,-0.284338,21.2366,-0.487167,0.006289,21.2298,-0.486731,0.063721,21.2781,-0.415228,-0.345839,21.2129,-0.404416,-0.557773,21.2468,-0.525172,0.504135,21.1827,-0.634946,0.345111,21.2258,-0.417341,-0.508152,21.1814,-0.641513,0.588791,21.2183,-0.582141,-0.613578,21.3033,-0.619449,-0.479442,21.3833,-0.529816,-0.477939,21.2967,-0.677861,0.497473,21.3822,-0.539457,0.482624,21.302,-0.679334,0.385934,21.28,-0.596931,-0.39404,21.2868,-0.600346,-0.302697,21.3996,-0.463881,-0.240231,21.386,-0.503582,0.311973,21.3751,-0.42661,0.166545,21.4103,-0.418342,-0.1698,21.4099,-0.418407,0.2598,21.3776,-0.516632,0.127916,21.3321,-0.548755,-0.111886,21.3449,-0.538219,-0.01255,21.3651,-0.466509,0.051666,21.0208,-0.757915,-0.019137,20.9625,-0.787203,-0.075917,21.1547,-0.610014,0.135402,21.0439,-0.467675,-0.107321,21.1988,-0.495924,-0.068301,21.446,-0.468435,-0.090411,21.5711,-0.492683,0.090461,21.5711,-0.491149,0.069448,21.438,-0.473565,0.201301,21.4839,-0.485168,0.616772,21.2874,-0.607174,0.526757,21.3068,-0.483742,-0.536676,21.3421,-0.498391,0.310327,21.1196,-0.246497,0.054362,21.155,-0.633946,0.147054,21.1275,-0.270103,-0.330388,21.3051,-0.395697,0.299818,21.9886,-0.353199,0.269157,21.9334,-0.45402,0.04715,21.971,-0.372632,-0.256164,21.94,-0.434343,-0.29587,21.9843,-0.36454,0.327592,21.7071,-0.404055,0.288606,21.6552,-0.149843,0.343853,21.5436,-0.339413,-0.248548,21.5401,-0.396647,-0.347653,21.5519,-0.316449,-0.320013,21.6322,-0.436285,-0.314019,21.7923,-0.423367,-0.254046,21.6718,-0.087176,-0.277183,21.7779,-0.171841,-0.217308,22.0266,-0.143847,0.061012,21.8277,-0.05685,0.181385,21.6862,-0.040424,-0.040069,21.6999,-0.006185,0.172526,21.5499,-0.373803,-0.018637,21.5645,-0.338402,0.156994,21.8113,-0.428013,-0.145829,21.776,-0.41043,0.110257,21.6864,-0.610327,0.099925,21.7196,-0.532058,-0.039953,21.7396,-0.534851,0.288302,21.7309,-0.609467,-0.114124,21.6829,-0.606479,-0.155892,21.6816,-0.500853,-0.27726,21.7617,-0.631935,0.462143,21.7363,-0.567072,0.299678,21.6227,-0.482996,-0.35988,21.7101,-0.613997,0.659827,21.7448,-0.729228,0.464245,21.7068,-0.684989,0.551328,21.7091,-0.789028,-0.531493,21.695,-0.75578,-0.425843,21.7298,-0.541456,-0.670209,21.7453,-0.74512,-0.647552,21.849,-0.699317,-0.502865,21.8914,-0.632882,-0.517197,21.8413,-0.802334,0.517441,21.8925,-0.644734,0.521858,21.8329,-0.80618,0.430907,21.8136,-0.718467,0.219742,21.8943,-0.599144,-0.238086,21.888,-0.609825,-0.433155,21.8173,-0.716953,0.328932,21.8774,-0.533471,0.125234,21.8749,-0.527097,-0.124066,21.8819,-0.527463,-0.001144,21.8251,-0.685416,-0.137157,21.82,-0.652644,0.041195,21.8758,-0.584072,-0.005503,21.6099,-0.741033,-0.017367,21.458,-0.901008,-0.082633,21.5048,-0.691194,0.054188,21.4591,-0.705998,0.151659,21.5249,-0.591557,0.042267,21.4559,-0.645879,-0.111293,21.4483,-0.621237,-0.144928,21.5592,-0.592445,0.057438,22.0292,-0.568179,-0.060019,22.0133,-0.562912,-0.079663,21.9377,-0.592503,-0.120604,22.1261,-0.588499,0.157381,22.0613,-0.530604,-0.181418,22.0885,-0.568921,0.135959,21.811,-0.653805,0.649153,21.833,-0.753253,0.60031,21.8521,-0.617825,-0.580357,21.8358,-0.601704,0.259872,21.8338,-0.640032,-0.306916,21.8979,-0.532979,0.086193,21.5332,-0.71991,0.001115,21.4048,-0.895144,0.201714,21.6108,-0.465128,0.141855,22.0419,-0.1092,0.151229,22.1281,-0.589383,0.006462,22.4726,-0.411462,-0.266311,22.4472,-0.502342,-0.290094,22.4924,-0.391169,0.287325,22.4941,-0.326582,0.266293,22.4481,-0.500526,0.335426,22.0629,-0.426166,0.324419,22.2431,-0.477637,-0.332356,22.292,-0.526037,-0.336525,22.0551,-0.41203,-0.29354,22.1254,-0.241533,0.205301,22.1483,-0.138814,0.092621,22.4847,-0.156281,0.329501,22.0917,-0.304693,-0.187432,22.4771,-0.193439,0.027993,22.1631,-0.090389,-0.181234,22.1526,-0.112148,0.095876,22.0711,-0.42414,0.151514,22.3266,-0.477937,-0.150794,22.327,-0.473525,0.097115,22.1369,-0.221347,-0.228887,22.0619,-0.474803,-0.068759,22.0699,-0.749444,-0.003622,21.9309,-0.928767,0.074179,22.0793,-0.7441,0.096895,22.2316,-0.664464,0.286462,22.2717,-0.664424,0.111396,22.2429,-0.588701,-0.060996,22.2854,-0.582706,-0.105829,22.236,-0.680133,-0.157102,22.2097,-0.571062,-0.273062,22.338,-0.699526,0.217252,22.1038,-0.515313,0.374915,22.2458,-0.595848,-0.390869,22.2488,-0.666723,-0.339241,22.2021,-0.561799,0.538625,22.2688,-0.821185,0.594565,22.3634,-0.663415,-0.536275,22.2658,-0.830923,-0.647904,22.3088,-0.774271,-0.646084,22.402,-0.765194,-0.518932,22.4391,-0.68291,-0.509409,22.408,-0.848522,0.50422,22.4382,-0.689153,0.506489,22.4045,-0.848109,0.417993,22.371,-0.762747,-0.420304,22.3704,-0.763132,0.21341,22.433,-0.631299,-0.225531,22.4304,-0.641562,-0.306631,22.4187,-0.582028,0.313994,22.41,-0.57709,0.140631,22.0222,-0.671325,-0.148646,22.0738,-0.663512,-0.034511,22.0498,-0.713837,-0.142143,22.5839,-0.576577,-0.073115,22.596,-0.614572,-0.194016,22.5434,-0.628879,0.188633,22.5057,-0.639982,0.043018,22.4119,-0.628491,0.076204,22.6051,-0.610799,-0.076382,22.4727,-0.615161,-0.108797,22.3699,-0.710082,0.157147,22.5784,-0.575242,0.13773,22.3959,-0.567115,-0.152285,22.4078,-0.572569,0.252585,22.3773,-0.688853,0.635665,22.407,-0.802022,0.658846,22.3207,-0.775501,-0.55507,22.3513,-0.643963,-0.007384,22.2076,-0.796161,0.106843,22.3792,-0.709869,0.09692,22.2647,-0.709807,0.047716,22.0237,-0.918522,-0.05125,22.0174,-0.904105,0.25373,22.9448,-0.471017,0.087854,22.9511,-0.410494,0.282233,22.9584,-0.358858,-0.279201,22.9542,-0.348301,0.068372,22.9118,-0.148587,-0.091677,22.9525,-0.395595,0.290036,22.6724,-0.304411,0.338304,22.7679,-0.532,-0.317692,22.6875,-0.475787,-0.250931,22.5666,-0.204268,-0.244048,22.9061,-0.23374,0.225857,22.9163,-0.221858,0.172214,22.561,-0.154078,-0.106415,22.8078,-0.148731,-0.006695,22.5496,-0.111635,0.151112,22.8252,-0.483158,0.222727,22.5654,-0.508905,-0.219156,22.5975,-0.527578,-0.153576,22.8273,-0.473088,-0.027365,22.5688,-0.445083,-0.253294,22.9537,-0.463745,-0.333731,22.5431,-0.446906,0.317532,22.5697,-0.309776,-0.056879,22.555,-0.785383,0.025356,22.4857,-0.940081,0.073767,22.6093,-0.766932,0.069961,22.7886,-0.612501,-0.101045,22.7665,-0.711101,0.107468,22.7679,-0.676668,0.259658,22.8975,-0.682407,0.154679,22.7325,-0.580688,-0.094137,22.7886,-0.588226,-0.214908,22.8406,-0.662343,0.392816,22.7936,-0.635967,0.437735,22.8337,-0.736054,-0.349848,22.7444,-0.595496,-0.394647,22.8005,-0.581759,-0.433431,22.8281,-0.728755,0.648474,22.9239,-0.767157,-0.565302,22.9121,-0.641397,0.49869,23.0026,-0.81491,0.493911,22.9854,-0.664272,0.566943,22.911,-0.643749,-0.300913,22.9502,-0.567425,-0.542313,23.0079,-0.778168,-0.645703,22.9224,-0.768196,-0.409257,22.9423,-0.743926,-0.2138,22.9666,-0.628991,0.2901,22.9445,-0.558842,0.21332,22.9697,-0.625836,-0.159817,22.9414,-0.550688,0.113244,22.9199,-0.559219,0.114336,22.9153,-0.691314,0.021225,22.6899,-0.825852,-0.118685,22.9306,-0.68196,-0.029538,22.5384,-0.921551,0.145399,22.6128,-0.684406,0.033444,22.5757,-0.742623,-0.136608,22.5619,-0.696605,0.089841,23.1374,-0.569823,0.07332,23.0026,-0.586745,0.165801,23.1069,-0.551324,-0.089844,23.1374,-0.569823,-0.182646,23.0966,-0.580728,-0.072014,23.0051,-0.589082,-0.137054,23.0643,-0.536596,-0.009175,22.9392,-0.615528,0.528472,22.884,-0.83256,0.411327,22.9426,-0.742463,-0.490062,22.9907,-0.821505,0.311696,22.5469,-0.452168,-0.140951,22.7569,-0.546533,-0.534596,22.8673,-0.828344,0.24634,23.3408,-0.206082,0.227644,23.0108,-0.19085,0.306338,23.0538,-0.43592,-0.305707,23.0426,-0.334049,-0.31977,23.2325,-0.474766,-0.293286,23.0544,-0.447115,-0.245829,23.3556,-0.2071,-0.245431,23.4259,-0.364406,-0.028048,23.1548,-0.106002,-0.075626,23.3286,-0.09093,-0.125739,22.9918,-0.122421,0.119203,22.995,-0.12768,-0.173585,23.1289,-0.48783,-0.141762,23.3103,-0.410631,-0.024912,23.0578,-0.427999,0.133831,23.259,-0.422074,0.104827,23.431,-0.31955,0.23816,23.4273,-0.327583,-0.142616,23.4419,-0.331945,0.079207,23.3296,-0.09735,0.182351,23.0683,-0.46791,-0.062654,23.1439,-0.712986,0.005835,23.0484,-0.888463,0.051612,23.1448,-0.693994,0.109142,23.3068,-0.622778,0.341415,23.2742,-0.55692,0.120019,23.2556,-0.526777,-0.100126,23.2857,-0.543459,-0.25455,23.4231,-0.603177,-0.109442,23.2978,-0.621116,-0.331736,23.2875,-0.569759,-0.398971,23.3155,-0.541113,-0.428382,23.3617,-0.677064,0.5929,23.4052,-0.67179,0.410755,23.3617,-0.669404,0.477357,23.4069,-0.752717,0.603166,23.4955,-0.717401,0.397646,23.3091,-0.541366,-0.593084,23.41,-0.667501,-0.612695,23.4872,-0.710323,-0.484181,23.4073,-0.753072,0.509425,23.5142,-0.600626,0.498879,23.5389,-0.736036,-0.536554,23.4927,-0.579469,-0.502509,23.5427,-0.738464,0.43023,23.4959,-0.641564,-0.440448,23.4987,-0.646589,0.283087,23.4426,-0.468321,-0.216675,23.4795,-0.52692,-0.291657,23.4414,-0.478304,-0.008652,23.4456,-0.63219,-0.1281,23.4387,-0.588656,-0.042156,23.4589,-0.506991,-0.133481,23.118,-0.658338,0.045366,23.2943,-0.596566,0.133456,23.1379,-0.655976,0.158849,23.5853,-0.414473,0.132769,23.6394,-0.452686,0.051668,23.5768,-0.438186,-0.166284,23.6121,-0.44476,-0.139391,23.5538,-0.415896,-0.056731,23.5996,-0.444271,0.197359,23.4888,-0.518446,0.065315,23.4953,-0.493508,0.120603,23.4574,-0.577865,-0.117971,23.3975,-0.464956,0.040333,23.3546,-0.50331,0.230312,23.4312,-0.588468,0.299131,23.2487,-0.431241,-0.051622,23.2091,-0.758184,0.061221,23.2153,-0.735558,0.531793,23.4572,-0.57228,0.176105,23.4479,-0.458861,0.328461,23.4913,-0.338852,0.120713,23.4969,-0.341194,0.292242,23.5996,-0.372529,0.323077,23.6681,-0.370831,0.254904,23.4265,-0.141375,-0.328056,23.4936,-0.34092,-0.261241,23.4387,-0.151827,-0.251542,23.7111,-0.106294,0.23939,23.7116,-0.085053,-0.220129,23.8014,-0.213056,-0.320722,23.6615,-0.360596,-0.082034,23.6641,-0.038053,-0.114026,23.3853,-0.067149,0.099534,23.3909,-0.073316,0.13801,23.6786,-0.303794,-0.095256,23.7941,-0.219504,-0.142188,23.6726,-0.332957,-0.163702,23.5125,-0.364506,0.229831,23.807,-0.244792,-0.031975,23.5551,-0.770954,0.047898,23.5523,-0.793574,0.059565,23.621,-0.586083,-0.064102,23.6,-0.58249,-0.022782,23.7122,-0.473773,0.106178,23.7316,-0.488283,-0.100336,23.7216,-0.421776,-0.105428,23.7404,-0.492458,0.127794,23.6846,-0.401208,-0.265691,23.7812,-0.448943,0.238676,23.7739,-0.447703,-0.397157,23.7135,-0.429661,-0.50125,23.8447,-0.57722,0.531068,23.8314,-0.582758,0.631565,23.9041,-0.533586,0.575995,23.8335,-0.442188,0.504177,23.9604,-0.579846,0.525746,23.9133,-0.45512,-0.571851,23.8263,-0.439541,-0.401779,23.8754,-0.406373,-0.521554,23.9783,-0.567456,0.423988,23.8959,-0.518646,-0.405151,23.8838,-0.505736,0.272132,23.8661,-0.410784,0.321199,23.8281,-0.352314,-0.249213,23.8699,-0.409133,0.171567,23.8253,-0.334594,-0.16616,23.8219,-0.339158,-0.010044,23.8642,-0.468275,-0.107838,23.8263,-0.47116,-0.028137,23.8415,-0.397051,-0.142395,23.6163,-0.531429,0.142176,23.6126,-0.532778,0.093174,23.9455,-0.314488,0.182015,23.9598,-0.335994,0.118619,23.8459,-0.453224,-0.180371,23.9516,-0.312212,-0.035998,23.7749,-0.386466,-0.634293,23.8779,-0.542657,0.075704,23.7061,-0.622405,-0.072829,23.6355,-0.734385,0.031029,23.7071,-0.699788,-0.075001,23.9575,-0.315397,-0.262311,23.7858,-0.059495,-0.314109,24.0483,-0.221033,-0.290748,23.9772,-0.257251,0.320796,24.0404,-0.232265,0.249261,24.1434,-0.165153,0.24802,24.0505,-0.004336,-0.248996,24.0243,0.003349,-0.235002,24.1322,-0.107457,0.094675,23.7411,0.006664,-0.031131,23.9961,0.062481,0.147146,23.9048,-0.218974,-0.167332,23.8621,-0.198841,-0.12787,24.0278,-0.172435,-0.097641,24.1275,-0.097039,0.144956,24.1421,-0.104972,0.143763,24.0504,-0.175395,-0.092134,23.7393,0.002312,0.26741,23.7963,-0.071125,0.280457,23.9459,-0.248568,-0.059534,23.9767,-0.433195,-0.038724,24.0065,-0.652847,-0.001537,23.9512,-0.656791,-0.095783,24.0932,-0.315024,0.115239,24.1147,-0.322636,-0.078152,24.0916,-0.245753,0.238736,24.1787,-0.29166,0.120877,24.0577,-0.247928,-0.13672,24.0513,-0.259571,-0.346564,24.1188,-0.303382,0.452393,24.1293,-0.300679,0.51938,24.2149,-0.39635,-0.583997,24.237,-0.284645,-0.354247,24.2041,-0.241758,-0.506382,24.2962,-0.3548,-0.607664,24.2523,-0.351621,0.427359,24.2318,-0.265063,0.509126,24.3028,-0.357393,0.231275,24.2208,-0.24312,-0.246434,24.2223,-0.261323,-0.012624,24.0789,-0.504677,0.095087,24.2005,-0.298104,0.137712,24.0227,-0.357515,0.074432,23.9885,-0.436619,-0.139533,23.9938,-0.369764,-0.07322,24.0238,-0.429566,-0.038207,24.201,-0.236953,0.077283,24.245,-0.208941,0.11006,24.3137,-0.157856,0.184811,24.1598,-0.227417,-0.184448,24.2898,-0.175644,-0.084365,24.3048,-0.167324,-0.032049,24.221,-0.323152,0.609637,24.2707,-0.326652,-0.494798,24.2007,-0.389763,0.530161,24.2051,-0.260698,-0.283431,20.1568,0.063734,-0.00041,20.1503,0.076405,-0.26246,20.0774,-0.033817,0.027371,20.2678,0.344171,0.25772,20.2165,0.232096,-0.253407,20.223,0.247797,0.344773,19.7635,0.146788,0.17451,19.7649,0.105523,0.305867,19.7992,0.076752,0.319432,19.8574,0.276328,0.350494,19.8539,-0.042595,0.276472,20.0717,-0.046598,0.180814,19.9236,0.40597,-0.283164,19.8891,0.334627,-0.038497,19.9428,0.463273,-0.110199,20.0564,0.383803,0.156024,19.9929,0.030005,-0.043668,19.7871,0.137968,-0.243784,19.7559,0.081051,-0.139503,19.9269,0.041346,0.287287,20.1512,0.04858,0.051484,19.6062,-0.172349,-0.07004,19.6004,-0.174777,-0.04637,19.5535,-0.251886,0.004412,19.5043,-0.358699,0.032242,19.8129,-0.133348,-0.091867,19.8999,-0.059247,-0.106178,19.8012,-0.150958,0.11327,19.8749,-0.065692,0.111174,19.8295,-0.163306,0.272045,19.9189,-0.187077,-0.206912,19.8695,-0.110973,-0.335813,19.8426,-0.024176,0.526657,19.8115,-0.282134,-0.534971,19.9165,-0.123599,-0.461339,19.8327,-0.230534,-0.295859,19.8803,-0.168043,0.59682,20.009,-0.221424,0.641044,19.9173,-0.316713,0.507025,19.9401,-0.342349,-0.516319,19.9372,-0.347636,-0.670984,19.8729,-0.273588,-0.619903,19.9862,-0.201216,-0.53287,20.0182,-0.202942,-0.424696,19.925,-0.256047,0.42037,19.9097,-0.257928,0.221276,20.0348,-0.143372,-0.132318,20.0348,-0.075442,-0.221467,20.0256,-0.163673,0.115366,20.0207,-0.072631,-0.015938,19.9562,-0.219608,-0.041445,20.019,-0.123609,0.114062,19.9412,-0.199341,-0.115494,19.9114,-0.204006,0.02332,19.6172,-0.36222,-0.050123,19.7207,-0.30512,-0.150801,19.6768,-0.108629,0.150767,19.6771,-0.108706,0.124337,20.2267,-0.15916,0.075867,20.0654,-0.147288,0.057618,20.1759,-0.128668,-0.057732,20.182,-0.133023,-0.138232,20.2216,-0.164015,-0.1728,20.1871,-0.10376,0.182375,20.1929,-0.128419,0.584103,19.9256,-0.145513,0.36663,19.9657,-0.047515,-0.365,19.956,-0.039092,0.662096,19.8665,-0.267384,0.208738,19.7891,0.022622,-0.341703,19.7716,0.145318,-0.550862,19.8033,-0.310831,-0.264998,24.0943,0.036545,-0.328737,24.328,-0.124951,-0.30225,24.2042,-0.112279,0.231538,24.2799,0.114753,0.299844,24.1353,-0.017805,0.251535,24.3935,-0.041144,-0.241549,24.2916,0.09772,-0.233885,24.3794,-0.022036,-0.298633,24.3339,-0.084212,-0.093743,24.05,0.102114,-0.096009,24.2277,0.149428,0.156247,24.2138,-0.094536,-0.149338,24.1948,-0.088245,0.052503,24.346,0.005214,0.13989,24.3427,-0.069729,-0.145136,24.3332,-0.053383,0.157818,24.048,0.094001,-0.010246,24.3403,-0.54628,0.071194,24.3592,-0.458387,0.073613,24.3482,-0.334573,-0.086871,24.3514,-0.42973,-0.129311,24.3468,-0.237902,0.117318,24.4091,-0.19884,0.243199,24.443,-0.151295,0.106008,24.3671,-0.147134,-0.096135,24.3858,-0.198284,-0.106076,24.3582,-0.138746,-0.217281,24.4409,-0.135077,0.33133,24.3181,-0.124174,-0.395409,24.4662,-0.211247,0.550361,24.5337,-0.181534,0.476772,24.5457,-0.216806,0.410494,24.4591,-0.211731,-0.530149,24.5016,-0.152747,-0.452683,24.5337,-0.217053,-0.04987,24.4788,-0.173763,0.110875,24.4606,-0.160854,-0.033311,24.4587,-0.304246,0.133253,24.3369,-0.23101,-0.004406,24.4357,-0.116193,0.087207,24.4919,-0.07233,-0.088462,24.5104,-0.057894,0.167081,24.5118,-0.053483,-0.152334,24.5084,-0.045564,-0.553007,24.5191,-0.220392,-0.517901,24.4134,-0.149747,0.523024,24.4213,-0.147257,0.296236,24.2031,-0.113629,0.500632,24.4924,-0.246374,0.089864,24.7592,0.440388,0.218701,24.8877,0.309198,0.214471,24.9155,0.169801,-0.218963,24.8865,0.308717,-0.100755,24.7558,0.43129,-0.108179,24.8964,0.166264,-0.220407,24.9131,0.17612,0.206356,24.6775,0.129262,0.270829,24.7499,0.258184,0.213728,24.5901,0.29225,-0.203776,24.5705,0.310475,-0.254626,24.7272,0.254116,-0.203653,24.6597,0.1731,0.02479,24.5239,0.33576,0.006814,24.6299,0.214175,-0.000837,24.6503,0.083757,0.258806,24.7237,0.340592,-0.259947,24.7301,0.341032,0.260688,24.8357,0.083774,-0.172643,24.6799,0.084886,-0.236805,24.7932,0.116603,0.338554,24.8444,0.205356,0.353026,24.7378,0.290112,0.409376,24.7588,0.260381,0.465476,24.7577,0.263721,0.444017,24.7748,0.198807,0.476203,24.7923,0.136529,-0.332748,24.8391,0.203871,-0.474327,24.7922,0.13651,-0.442143,24.7747,0.19879,-0.4636,24.7576,0.263703,-0.4075,24.7587,0.260366,-0.351145,24.7377,0.290098,0.447179,25.0079,0.121334,-0.427612,25.0241,0.118884,0.268474,24.9618,0.107358,0.321602,24.7832,0.189069,-0.272302,24.9475,0.113611,-0.286525,25.0488,0.094694,-0.184336,25.0053,-0.08426,-0.368682,25.0475,-0.004291,0.135064,24.8041,-0.163837,0.258577,24.8264,-0.093446,0.005016,24.8658,-0.118906,0.420141,24.7594,0.037243,-0.204264,24.8679,-0.043093,-0.253409,24.8419,0.050322,-0.243071,24.8323,-0.096369,-0.330284,24.7855,0.172471,-0.454498,24.7571,0.053622,0.501828,24.7563,-0.038844,-0.519385,24.9066,0.009827,-0.478464,24.763,-0.080477,0.521955,24.8441,-0.051045,0.295424,25.0522,0.091512,0.154764,25.0163,-0.112999,-0.059249,24.9988,-0.134744,0.187896,24.9137,-0.039057,-0.157848,24.809,-0.120574,0.270762,25.026,-0.035856,0.348377,24.8335,0.360014,0.330412,24.7735,0.325016,-0.32854,24.7734,0.325003,-0.346518,24.8334,0.360001,0.391653,25.0398,-0.000069,-0.043958,24.9524,-0.237484,-0.030077,24.8121,-0.283916,0.030676,24.9355,-0.262344,-0.010403,25.0128,-0.387698,0.039285,24.9157,-0.50215,-0.024444,24.9424,-0.527783,0.415294,24.8419,0.364725,-0.374982,24.8329,0.378052,-0.41973,24.8348,0.36285,0.500277,24.7396,0.229761,0.5224,24.7462,0.196069,-0.526195,24.7519,0.204729,0.062615,25.191,0.283927,0.209258,25.252,0.382102,0.1966,25.1032,0.238364,0.19844,25.2045,0.446746,0.225407,25.1536,0.3671,-0.083312,25.1902,0.347841,0.104469,25.1332,0.527607,-0.165548,25.2292,0.299263,-0.205691,25.2182,0.438402,0.210903,25.0219,0.352794,0.133681,24.8811,0.463986,0.156714,24.9743,0.23885,-0.176259,24.9031,0.429763,-0.233283,25.0669,0.445968,-0.172267,24.9733,0.271632,-0.000143,24.9401,0.343021,-0.071775,24.8666,0.464129,-0.075285,24.9501,0.193828,-0.057782,25.1001,0.553113,-0.209894,25.2062,0.258562,-0.223804,25.1583,0.370228,-0.275477,25.184,0.452597,0.370893,25.1237,0.302392,0.349383,25.3343,0.240253,0.268025,25.1684,0.306997,0.360053,25.0672,0.405505,0.398608,25.0904,0.254243,-0.378075,25.0579,0.388864,-0.367623,25.1251,0.302593,-0.394755,25.0908,0.242815,0.211632,25.1933,0.233361,-0.268479,25.1774,0.30177,-0.366902,25.3305,0.246421,-0.203985,25.343,0.187799,-0.121164,25.3096,0.029011,-0.31142,25.3405,0.129686,-0.272016,25.0701,0.031551,-0.157823,25.0872,-0.015804,-0.218312,25.1005,0.2361,0.304182,25.0967,0.291302,-0.33419,25.0901,0.305608,0.270331,25.0752,0.416027,0.210809,25.055,0.460658,-0.421785,25.2221,0.086009,-0.437668,25.0399,0.048181,0.231837,25.3308,0.219698,0.078126,25.2985,-0.000033,0.051559,25.1265,-0.003272,0.140272,25.2094,0.098121,0.20658,25.3445,0.100302,-0.143295,25.1933,0.088838,0.169769,25.088,-0.01415,0.203446,25.0725,0.031421,0.277267,25.184,0.452607,0.283495,25.1253,0.434435,-0.26852,25.0752,0.416017,-0.281693,25.1252,0.434424,0.449809,25.0578,0.065216,0.422268,25.2819,0.124862,0.397309,25.0418,0.029686,0.072747,25.2532,-0.093125,-0.059613,25.2269,-0.151923,-0.079326,25.1162,-0.149802,-0.187877,25.1849,0.001673,0.041239,25.2326,-0.217208,-0.020685,25.106,-0.20265,-0.035649,25.2106,-0.343109,0.325714,25.1345,0.43667,0.331798,25.1311,0.436643,-0.329296,25.1316,0.437114,-0.323924,25.1345,0.436657,-0.169825,25.5263,0.365947,-0.159208,25.5818,0.414549,-0.040235,25.5216,0.382874,-0.20591,25.4844,0.429509,-0.159421,25.525,0.547734,0.087059,25.4506,0.641007,-0.063597,25.4347,0.652995,0.160795,25.5806,0.41618,0.124667,25.5485,0.382082,-0.162205,25.273,0.452263,0.161078,25.2656,0.46202,-0.1136,25.2092,0.552674,0.063161,25.1781,0.58903,0.100575,25.2609,0.32649,-0.131738,25.2857,0.325282,0.199194,25.3802,0.565507,0.195476,25.4245,0.344522,-0.177572,25.4249,0.331554,-0.276874,25.4783,0.545583,0.278605,25.4784,0.545595,0.340638,25.4722,0.553195,0.292342,25.4357,0.545679,0.261319,25.3921,0.522232,0.202989,25.3921,0.477192,-0.290601,25.4356,0.545668,-0.338902,25.4722,0.553182,-0.195693,25.3792,0.472207,-0.259571,25.3921,0.522222,0.325246,25.4259,0.413873,0.301087,25.3963,0.497823,0.334247,25.411,0.52872,-0.341528,25.426,0.404875,-0.3325,25.4109,0.528707,-0.299338,25.3962,0.497812,0.237709,25.5028,0.398612,-0.293425,25.4115,0.413938,-0.327213,25.632,0.334107,0.367923,25.3821,0.411934,-0.350291,25.4089,0.352203,0.171839,25.5305,0.335537,0.330791,25.6328,0.334861,-0.213762,25.6703,0.279618,0.187731,25.5228,0.517965,-0.139595,25.6234,0.133069,-0.367302,25.637,0.221591,0.020427,25.5689,0.069359,0.165238,25.6507,0.161431,0.064793,25.5732,-0.004559,0.205912,25.3932,0.115398,0.343483,25.4176,0.316135,-0.205177,25.3941,0.566362,0.353226,25.3665,0.129496,0.406989,25.4047,0.172741,-0.368414,25.3558,0.136334,-0.403813,25.4101,0.151744,0.36532,25.6316,0.209058,-0.213321,25.5332,0.133861,0.211502,25.67,0.28204,0.100711,25.3925,0.05546,0.130346,25.51,0.164223,-0.15275,25.4867,0.17516,-0.094786,25.3886,0.060275,-0.191776,25.3956,0.120563,0.009586,25.5285,-0.087014,-0.034211,25.5377,-0.035448,-0.029868,25.3793,-0.038042,-0.005723,25.4539,-0.064256,0.335446,25.4217,0.533546,-0.333704,25.4216,0.533537,-0.041879,25.4768,-0.143764,-0.011602,25.3818,-0.134531,0.152958,25.8549,0.621433,0.158974,25.8685,0.437792,0.013125,25.8618,0.459931,0.17103,25.7341,0.40457,0.176154,25.722,0.53923,0.117129,25.6035,0.52359,0.122237,25.5575,0.632305,-0.103373,25.5501,0.641083,-0.120148,25.6095,0.462627,0.006352,25.5187,0.653206,0.07423,25.5856,0.413208,-0.001257,25.7659,0.755569,-0.21614,25.7862,0.625833,-0.163565,25.744,0.398685,-0.1256,25.8994,0.464635,0.218488,25.8073,0.631243,0.177871,25.8093,0.510621,-0.147833,25.8619,0.6102,-0.180962,25.7659,0.532293,0.220014,25.7291,0.493201,0.244058,25.7537,0.433658,0.272988,25.9402,0.409241,0.276707,25.7369,0.454485,-0.242371,25.7536,0.433648,-0.218323,25.729,0.493192,-0.194502,25.8257,0.480624,-0.181366,26.0016,0.339102,-0.284483,25.9698,0.380217,-0.164841,25.8549,0.405798,-0.003876,25.8591,0.122722,0.165089,25.9737,0.23645,0.014967,25.8248,0.048383,-0.048332,25.8127,0.050814,-0.118695,25.9306,0.207586,-0.170185,25.6923,0.564566,-0.275015,25.7369,0.454474,0.231243,25.7192,0.567768,0.167219,25.7216,0.644123,-0.229554,25.7192,0.56776,0.190711,25.9947,0.352319,0.103972,25.8411,0.217569,0.029107,25.7151,0.138349,0.123469,25.7045,0.142914,0.180428,25.6988,0.194958,-0.124697,25.7899,0.242578,-0.179619,25.6934,0.197835,-0.116036,25.6907,0.160224,0.309037,25.9135,0.274499,0.333468,25.6727,0.226826,-0.335703,25.6742,0.226441,-0.190139,25.9764,0.246778,-0.326329,25.8426,0.258516,-0.019749,25.6424,0.02908,-0.009671,25.6412,-0.084395,-0.011671,25.7398,-0.108848,-0.196678,26.1935,0.647974,-0.145638,26.1828,0.702216,-0.140115,26.2485,0.501901,0.180132,26.2081,0.636434,0.142084,26.2424,0.502848,0.137295,26.1746,0.716961,0.048715,26.1821,0.49876,-0.071533,26.1962,0.495561,0.186672,26.0471,0.653519,0.098407,25.895,0.720802,0.073021,25.9256,0.55388,-0.125533,25.9086,0.703595,-0.172163,26.0269,0.591168,-0.115313,25.9402,0.479732,0.006392,25.9272,0.624645,0.118724,25.9326,0.477902,-0.023748,26.1062,0.795438,0.162143,26.0774,0.458403,-0.167877,26.0716,0.456634,0.25849,26.1654,0.694299,-0.256887,26.1654,0.694288,0.247507,26.1273,0.682871,0.233715,26.077,0.65797,-0.245898,26.1273,0.682861,-0.176317,26.1344,0.573928,-0.232094,26.077,0.657961,0.262749,26.1674,0.491969,0.228171,26.0734,0.519272,0.260767,26.0805,0.508117,0.302994,26.07,0.454361,-0.259143,26.0805,0.508107,-0.226545,26.0733,0.519263,0.162059,26.1911,0.451531,0.182825,26.1533,0.58582,-0.157548,26.1927,0.455779,0.132657,26.2675,0.229277,0.026265,26.115,0.046414,0.013741,26.2159,0.164957,0.201405,26.0621,0.506208,-0.301364,26.0699,0.454349,-0.168913,26.0689,0.699207,0.293428,26.3067,0.415359,-0.000989,26.0899,0.192346,0.150411,26.1085,0.328096,-0.075769,26.2532,0.197114,-0.153949,26.313,0.266047,-0.138042,26.1191,0.296052,0.171763,26.0119,0.241832,-0.084228,26.0473,0.156184,-0.181149,26.0208,0.242569,0.174302,26.3297,0.339381,-0.196881,26.3168,0.390302,0.334099,26.2617,0.319424,-0.320074,26.2535,0.304201,-0.311568,26.287,0.41546,0.343748,25.9783,0.285859,-0.342707,25.9787,0.287444,-0.027273,26.1052,0.053176,0.096687,26.0214,0.182656,0.015718,26.023,0.029189,-0.013823,26.0911,-0.090148,-0.026929,25.997,-0.101783,0.309288,26.1028,0.623358,0.239366,26.0713,0.632676,0.296135,26.0804,0.663324,-0.306895,26.1023,0.618517,-0.251571,26.0694,0.629491,-0.295918,26.0878,0.667565,-0.005308,26.5533,0.69783,0.030922,26.4216,0.812566,0.168999,26.5254,0.694246,0.103255,26.4649,0.519526,-0.182629,26.3923,0.505243,-0.062805,26.5751,0.59842,0.074806,26.5611,0.602034,-0.160958,26.5205,0.714546,-0.199926,26.3037,0.60947,-0.004332,26.2627,0.633139,-0.070605,26.2246,0.789244,0.099609,26.2355,0.750837,0.142773,26.2831,0.502852,-0.134539,26.2805,0.499021,0.195146,26.2912,0.689878,0.379796,26.4599,0.535864,0.29826,26.383,0.606293,0.349826,26.437,0.615784,0.336577,26.4932,0.63138,0.426318,26.4583,0.548384,-0.393286,26.4581,0.570529,-0.335033,26.4931,0.631367,-0.348271,26.4369,0.61577,-0.296693,26.3829,0.606281,0.184309,26.5195,0.516141,0.243402,26.4973,0.623161,0.273871,26.6073,0.500192,0.191706,26.6458,0.380057,-0.248751,26.5387,0.56291,-0.241855,26.4972,0.623152,-0.177486,26.5102,0.507118,-0.174862,26.6371,0.359741,-0.110257,26.5875,0.258405,-0.333681,26.6022,0.345907,0.004019,26.4554,0.068813,0.015317,26.4956,0.232615,0.1443,26.6122,0.275147,0.050977,26.3463,0.157648,-0.186011,26.3429,0.269291,-0.055524,26.3436,0.120333,0.19012,26.3944,0.491347,0.262084,26.3914,0.60341,0.219861,26.3638,0.603215,-0.260519,26.3914,0.6034,0.191501,26.3483,0.265936,0.345648,26.3167,0.314482,0.342439,26.4186,0.505127,-0.356403,26.4616,0.509942,-0.358757,26.3741,0.448551,-0.383075,26.3892,0.617063,-0.407979,26.3815,0.523134,-0.352465,26.3771,0.603325,0.382988,26.3826,0.359951,0.159183,26.4512,0.333919,0.379175,26.38,0.609937,-0.186318,26.3152,0.722157,0.334227,26.6149,0.421134,0.341427,26.5861,0.347373,-0.342011,26.3124,0.319629,-0.378252,26.391,0.350765,-0.301576,26.6206,0.471539,-0.097907,26.5275,0.193457,0.433537,26.3885,0.50878,-0.436345,26.4018,0.493075,0.014363,26.3768,-0.123054,0.019005,26.1995,-0.023752,-0.016946,26.2263,-0.126399,-0.008674,26.7818,0.693705,0.035215,26.8223,0.591653,-0.066719,26.7752,0.60782,0.239774,26.4321,0.599336,-0.238216,26.432,0.599326,0.271775,26.4958,0.626358,0.280172,26.3872,0.604852,-0.270315,26.4957,0.626363,-0.278605,26.3872,0.604841,0.33289,24.5635,-0.019818,0.253943,24.6283,0.07515,0.248357,24.5318,0.194411,-0.217827,24.3018,0.172207,-0.213495,24.4883,0.235343,-0.300574,24.3611,0.082925,0.082721,24.4989,0.259806,0.000017,24.2697,0.222766,0.272562,24.3216,0.14352,0.108111,24.4225,0.023015,0.149766,24.5921,0.029431,0.147832,24.5262,-0.007717,0.141438,24.6293,0.108293,-0.149672,24.6062,0.032678,-0.234274,24.6189,0.112242,-0.095719,24.6161,0.11564,-0.178342,24.4267,-0.002716,-0.112908,24.578,-0.134936,-0.048243,24.5144,-0.457555,0.068317,24.5249,-0.445151,0.100662,24.6478,-0.097604,0.236827,24.6993,-0.018468,-0.13922,24.5503,-0.022589,-0.269094,24.7131,-0.035966,-0.143694,24.697,-0.06368,0.254322,24.4332,-0.012813,-0.325322,24.5539,-0.024657,0.355748,24.7306,-0.075659,0.492196,24.7199,-0.142554,0.534244,24.6601,-0.057991,-0.445694,24.6973,-0.122672,-0.403398,24.5965,-0.026935,-0.579651,24.7197,-0.069886,0.48698,24.7981,-0.117571,0.342783,24.676,0.008607,0.571018,24.7721,-0.11085,-0.437119,24.7668,-0.106977,-0.534326,24.7957,-0.11934,-0.277762,24.6318,0.041671,0.04547,24.7172,-0.062338,-0.029701,24.6781,-0.016962,0.000056,24.6556,-0.324043,-0.073572,24.5719,-0.409225,0.135213,24.5666,-0.138017,0.06912,24.5703,-0.226212,0.064169,24.616,-0.085003,-0.094584,24.6225,-0.085094,0.165864,24.7683,0.040575,-0.176455,24.7662,0.043396,-0.055892,24.6462,-0.243357,-0.153079,26.8167,0.804247,0.014823,26.8393,0.829818,-0.060174,26.8367,0.751044,0.114333,26.8341,0.735984,0.157246,26.7551,0.67737,-0.173924,26.7603,0.643056,0.525773,26.6585,0.30371,0.505382,26.6679,0.417719,0.567545,26.757,0.26383,-0.570623,26.7545,0.264838,-0.501989,26.6659,0.418527,-0.525991,26.6639,0.323669,0.436182,26.7512,0.312308,0.568476,26.7012,0.249104,-0.439605,26.7501,0.30776,0.25107,26.8538,0.495755,0.234533,26.695,0.530888,0.274596,26.7715,0.607242,-0.288988,26.7816,0.59916,-0.228579,26.6912,0.509416,-0.205267,26.7844,0.422328,0.213193,26.7814,0.382546,0.340027,26.7692,0.273781,0.206455,26.7598,0.259269,0.121467,26.789,0.209116,-0.198818,26.7688,0.260227,-0.338863,26.7655,0.276899,0.154697,26.6531,0.24842,0.001007,26.6674,0.213994,0.003045,26.6525,0.071476,-0.148306,26.67,0.297738,0.246518,26.6965,0.693733,-0.233458,26.6987,0.718653,-0.398802,26.6052,0.400827,0.439053,26.6911,0.324329,-0.540596,26.6564,0.280247,-0.440984,26.6913,0.323736,0.297235,26.892,0.28757,-0.293425,26.9046,0.295342,0.287851,26.948,0.500251,-0.278066,26.9203,0.498428,-0.087972,26.7913,0.183178,0.358185,26.88,0.521798,0.300894,26.6264,0.318185,-0.255916,26.6311,0.300217,0.397178,26.6009,0.409561,0.18691,26.7722,0.802438,0.027776,26.6873,0.854637,0.376616,26.7738,0.520602,-0.37443,26.7557,0.505884,-0.355335,26.8776,0.53154,-0.049316,26.6944,0.766744,0.469989,26.6978,0.461705,-0.467851,26.6971,0.461965,0.58659,18.3454,0.207376,0.620495,18.3051,0.19136,-0.620462,18.3051,0.191101,-0.586614,18.3453,0.207473,0.377375,17.3283,-0.157243,0.153526,17.1939,-0.277349,0.035264,17.3018,-0.253237,-0.019591,17.3059,-0.250423,-0.195363,17.3456,-0.088066,-0.156052,17.3712,-0.041201,0.160138,17.3582,-0.071475,-0.256273,17.1882,-0.268916,-0.345607,17.3185,-0.176791,-0.122817,17.1622,-0.310876,-0.285176,17.3667,-0.060379,0.279284,17.3567,-0.075168,0.175951,16.2213,-0.809281,0.021481,16.3003,-0.79766,0.126417,16.4146,-0.721464,-0.203644,16.4214,-0.728064,-0.109238,16.4226,-0.732423,-0.197957,16.2559,-0.806361,-0.232155,17.1223,-0.317745,-0.002063,17.0444,-0.468839,-0.32392,17.0377,-0.417892,0.349144,17.0324,-0.423034,0.12295,17.1547,-0.317985,-0.148221,16.8875,-0.504342,-0.240618,16.8405,-0.512954,0.233108,16.8718,-0.498012,0.115772,16.8779,-0.52682,-0.085743,16.8085,-0.60112,0.003428,16.7162,-0.720107,-0.117597,16.4986,-0.723329,0.139208,16.5187,-0.709133,0.10603,16.8317,-0.569696,-0.127397,16.8119,-0.56746,-0.181228,16.5244,-0.708312,-0.025609,16.5131,-0.845022,0.01853,16.4754,-0.855838,0.029808,16.9697,-0.613821,-0.050641,16.923,-0.628838,0.002952,17.1921,-0.453538,0.025963,17.5023,-0.064038,0.016563,17.4586,-0.172795,-0.050564,17.4726,-0.11422,0.175477,17.3778,-0.020663,-0.022298,17.471,0.095609,-0.75487,17.4871,0.152358,-0.657262,17.5835,0.049332,-0.576939,17.0194,-0.35819,0.684467,16.7914,-0.382546,0.771533,17.4582,0.179342,0.864489,17.1448,0.343722,-0.862337,17.1579,0.344511,-0.671547,16.6564,-0.262264,-0.694666,16.7945,0.192172,0.830535,16.9265,0.422293,0.694664,16.7945,0.19214,-0.626783,16.6315,-0.114046,-0.680525,16.7895,-0.38387,0.671547,16.6564,-0.262273,0.622922,16.6322,-0.107813,0.581058,16.7486,-0.424974,0.580522,17.0237,-0.356509,-0.581058,16.7486,-0.424977,0.657258,17.5835,0.049332,-0.166314,16.3756,-0.583908,0.149374,16.3869,-0.573276,0.157951,16.4513,-0.470443,0.226476,16.3901,-0.578246,-0.261098,16.4634,-0.496536,-0.222426,16.3879,-0.579008,-0.145852,16.4303,-0.512743,0.206694,16.5059,-0.706204,0.259025,16.4568,-0.514875,-0.192878,16.6376,-0.376038,-0.186663,16.7152,-0.329121,0.217024,16.7336,-0.301071,0.185656,16.6559,-0.375049,-0.281152,16.622,-0.372362,0.249384,16.6158,-0.373508,0.317892,16.6718,-0.3599,0.202867,16.7941,-0.549697,0.324487,16.7207,-0.308002,-0.245187,16.8683,-0.064712,0.388466,16.9035,-0.066808,0.258646,17.1764,-0.274989,-0.228253,16.845,-0.134859,0.221337,16.8573,-0.114941,-0.33887,16.8326,-0.162519,0.337176,16.8329,-0.162465,0.233412,17.1153,-0.31178,-0.268589,17.3866,-0.011725,-0.293808,17.0097,0.226456,0.308646,16.9956,0.244761,0.285849,17.3997,-0.029999,-0.311924,16.9505,0.118605,0.29613,16.9528,0.122185,-0.39582,16.9841,0.168544,0.39729,16.9817,0.165074,0.022859,16.7481,-0.234465,-0.318203,16.7299,-0.308546,-0.477228,16.8996,-0.02661,-0.462523,16.5996,-0.329229,0.457753,16.5618,-0.401581,-0.389117,16.3201,-0.623032,0.406187,16.3233,-0.636258,0.032638,16.8443,-0.005155,-0.387514,16.9035,-0.067421,0.482626,16.9094,-0.004523,-0.070282,17.0379,0.560571,-0.588901,16.9456,0.455504,0.583459,16.9469,0.457578,-0.323643,16.7308,-0.629254,0.348749,16.7157,-0.648115,0.20862,16.4397,-0.722532,0.210342,17.4849,0.125908,-0.307145,17.476,0.046919,-0.075589,15.6098,-0.587065,-0.002004,15.7137,-0.670488,0.087458,15.5788,-0.566619,-0.035695,15.563,-0.439882,0.08986,15.6472,-0.509516,-0.074002,15.684,-0.532409,0.033087,15.5626,-0.4411,-0.098467,15.7832,-0.672861,-0.090055,15.8033,-0.578317,0.105323,15.788,-0.666338,0.107585,16.101,-0.830511,-0.211692,15.9226,-0.745375,-0.27091,16.1,-0.807997,-0.202531,15.9417,-0.599607,0.204182,15.9321,-0.597138,0.196563,16.04,-0.613682,0.25939,16.0106,-0.746174,0.37775,16.1513,-0.795998,-0.257147,16.0603,-0.624889,-0.331771,16.1907,-0.597408,0.355217,16.1889,-0.606872,-0.415371,16.3324,-0.785057,-0.46,16.4689,-0.779729,0.435665,16.4499,-0.790947,-0.47625,16.5661,-0.413182,0.037583,15.5125,-0.478694,-0.316912,17.4027,0.562525,0.31591,17.4142,0.538132,-0.244802,17.5367,0.371696,-0.236154,17.2985,0.857305,0.019508,17.5576,0.303133,0.433771,17.5237,0.402917,0.431617,17.5315,0.165179,0.430027,17.4634,0.297513,-0.225914,17.498,0.175334,-0.376754,17.1927,0.612195,-0.830539,16.9265,0.422294,0.37299,17.1944,0.615468,-0.435076,17.4583,0.297876,-0.466805,17.5146,0.439106,0.259187,17.3022,0.850722,0.075744,15.6676,-0.605883,0.090202,15.8067,-0.582801,-0.410881,16.1686,-0.752868,-0.495792,16.4962,-0.592035,0.498939,16.4693,-0.68948,0.495159,17.4696,0.545249,0.471783,17.3968,0.675378,0.546478,17.2789,0.460745,-0.474511,17.4098,0.672412,-0.546482,17.2789,0.460745,-0.00946,17.283,-0.361451,-0.038495,15.5141,-0.479802,0.495777,16.6036,-0.480219,-0.532366,17.5597,-0.552882,-1.26191,18.0289,0.02484,-1.49562,17.8671,0.358781,0.675008,17.3709,-0.474673,0.761843,16.8966,-0.421149,0.964557,17.1837,-0.202005,1.64628,17.8177,0.448776,1.32519,18.0562,-0.018123,-1.38373,16.5476,0.7179,-1.72161,17.3927,0.863175,-1.69118,16.9877,1.07356,1.80164,17.0097,1.06305,1.82572,17.4149,0.852521,1.4874,16.8887,0.50416,1.66312,16.7236,1.01825,1.74886,16.6647,1.07979,1.48889,16.5752,0.702109,-0.833931,16.4809,-0.485548,-0.868164,16.2335,-0.534183,-1.08689,16.1734,-0.141598,0.93749,16.4929,-0.493866,1.28488,16.2231,0.17768,1.19702,16.19,-0.151231,-0.836367,15.5954,-0.521689,-1.05082,15.7129,-0.20694,-1.0529,15.9677,-0.241063,1.16832,15.9816,-0.247745,1.16966,15.7268,-0.213622,1.04338,15.5053,-0.342255,0.825361,15.6482,-0.663863,0.978506,16.2451,-0.539746,-0.828494,15.3229,-0.412502,-0.982127,15.314,-0.084849,1.10671,15.3271,-0.091131,-1.06155,15.643,-0.016742,-0.994713,15.4973,0.025795,-1.04956,15.6666,0.298533,1.18241,15.6571,-0.02348,1.1229,15.5061,0.01513,1.17202,15.6805,0.291856,-1.48274,16.2699,0.157229,-1.41,16.2276,-0.117298,-1.47328,16.1489,0.425043,-1.28945,16.1321,0.488036,-1.17466,16.2081,0.199012,1.40717,16.149,0.479925,1.59041,16.1681,0.415829,1.51972,16.2591,-0.147244,-1.2237,15.899,0.494104,-1.3826,15.8965,0.502581,-1.26045,15.6683,0.382712,1.3444,15.9152,0.48638,1.38338,15.6849,0.374764,-1.19996,15.7214,-0.186975,-1.20638,15.6211,0.097585,1.31879,15.7373,-0.194551,1.31889,15.6263,0.104199,-1.29501,15.9964,-0.259342,1.40994,16.0134,-0.267476,-0.587551,16.0319,-0.751121,-0.485821,15.7789,-0.766037,-0.54507,15.7502,-0.790396,0.597016,15.7795,-0.780852,0.796906,15.567,-0.479647,0.842869,15.8702,-0.447209,-0.762181,15.4796,-0.484825,-0.696128,15.5084,-0.432796,0.881448,15.4488,-0.455997,0.696056,16.0409,-0.753984,0.860197,16.2355,-0.52638,-0.736454,16.1892,-0.547687,-0.743235,16.4143,-0.472598,0.788836,16.4642,-0.45006,-0.662208,16.4462,-0.376888,-0.725335,15.8537,-0.449102,-0.465375,17.6117,-0.82169,-0.679816,16.8912,-0.380217,-0.577273,16.6366,-0.889714,-0.513266,16.9749,-1.01348,-0.491466,17.5489,-0.967158,0.573417,17.599,-0.940099,0.58954,17.1402,-1.01452,0.692357,16.6394,-0.910053,-0.629941,16.6549,-0.938469,-1.12686,15.9659,0.0816,-1.16928,15.9116,0.331776,-1.22545,16.0887,0.257038,-1.23041,16.1046,0.038306,1.25436,16.0358,0.061701,1.59673,16.2893,0.147964,1.34237,16.1048,0.24932,1.52165,16.0618,0.375313,1.25779,15.9271,0.294964,-1.40344,16.0435,0.384115,0.634176,15.6276,0.742845,0.813805,15.6711,0.67577,0.69611,15.7321,0.651507,0.667622,15.5493,0.705602,-0.688977,15.6617,0.68029,-0.594385,15.7388,0.642951,-0.954174,16.1367,0.456796,-1.17576,16.2952,0.608275,-1.25628,16.1004,0.690006,1.29218,16.3107,0.600858,1.08242,16.1673,0.432878,1.45063,16.2387,0.658784,-0.492072,15.7075,0.534417,-0.423081,15.6429,0.42318,-0.782708,15.7102,0.268694,-0.800379,15.8729,0.339554,0.904472,15.7208,0.263614,0.546648,15.649,0.420261,0.615484,15.7145,0.531128,0.920531,15.8838,0.334378,-0.886413,15.6251,0.526305,-0.541095,15.5418,0.709234,1.01084,15.6371,0.520608,-0.46006,15.5695,0.476361,-0.924492,15.6474,0.24241,1.07399,15.6663,0.204997,0.584862,15.5761,0.473214,-1.34497,18.064,-0.150917,-0.693354,17.0805,-0.829088,-0.914584,16.7197,-0.301037,0.7913,17.0899,-0.833551,1.01658,16.7369,-0.31534,0.716811,16.689,-0.968607,-1.62215,17.2401,0.548827,1.48674,16.5764,0.454139,1.75026,17.2775,0.562811,1.90173,16.7264,0.930198,-1.42479,16.3962,0.638141,1.04771,17.9577,-0.584562,1.43458,18.0814,-0.159283,-1.91376,17.2732,0.790342,-1.88757,16.8931,0.975372,1.79128,17.797,0.336385,2.01891,17.2979,0.778507,-1.55055,16.5789,0.664294,-1.73782,16.6548,1.02997,1.67006,16.5906,0.676841,-0.959177,17.9451,-0.578481,0.00551,15.4023,0.431459,0.082122,15.3617,0.517334,-0.071845,15.2841,0.446517,0.015741,15.4628,0.641966,-0.41285,15.3283,0.035715,-0.111193,15.6318,0.534559,-0.277262,14.9003,0.040104,-0.661327,15.1199,-0.405123,0.538041,15.3342,0.032852,0.477243,14.9598,-0.110715,0.117327,15.4067,0.427336,0.296306,15.5973,0.458006,-0.2852,14.9867,0.241602,-0.223136,15.4151,0.527721,-0.401915,15.2717,0.166016,0.5286,15.2776,0.16322,0.373874,15.293,0.3516,0.20009,15.2858,0.445695,0.411952,14.9103,0.174558,0.062865,15.5604,0.602697,0.062354,15.5987,0.51203,-0.508395,15.6204,0.746281,0.40366,15.5015,0.692761,-0.548293,15.2675,-0.096109,0.673446,15.2752,-0.09979,0.751381,15.2552,-0.296733,-0.622364,14.8427,0.039565,-0.735337,14.815,-0.256498,-0.863338,14.9094,-0.076201,-0.692959,14.9195,-0.41462,0.865197,14.8251,-0.261314,-0.656996,15.2834,-0.294397,0.786456,15.129,-0.409484,0.820557,14.9291,-0.419178,-0.689743,15.325,-0.222371,0.99307,14.9211,-0.08178,0.80563,15.3344,-0.233788,0.753656,14.8513,0.035431,-0.807666,15.5657,-0.137592,0.928792,15.5766,-0.142817,0.936428,15.2551,-0.422334,-0.966557,15.0778,-0.129255,1.09385,15.0907,-0.135457,0.946656,15.8016,0.025376,-0.827345,15.7905,0.030717,-0.920311,16.328,0.123077,1.03341,16.3403,0.117221,0.681743,16.677,-0.713045,-1.69508,17.7751,0.346885,-1.56537,16.6677,1.07045,1.99309,16.9375,0.978879,-0.575859,16.6592,-0.675624,-0.914826,17.978,-0.360128,0.982927,17.9838,-0.456776,0.584896,17.5807,-0.657219,1.50337,15.9146,0.493898,0.655991,20.3183,-0.21018,0.786999,20.114,-0.237706,0.289751,20.4217,-0.172271,0.284456,20.4733,-0.097738,0.635506,20.2435,-0.093365,0.26313,20.3809,-0.09765,0.894415,20.0866,-0.015792,0.837124,20.0273,-0.147031,1.31689,19.626,0.277449,1.17078,19.8773,0.008446,1.44065,19.2854,1.13155,1.4719,19.565,0.624398,1.4151,19.4965,0.749384,1.35474,19.1806,1.19252,1.48099,19.3617,0.682378,1.33861,19.2325,1.39439,1.2934,19.7532,0.353187,0.916151,20.1852,-0.11293,1.38683,19.7707,0.333381,1.39002,19.4189,0.597082,-1.02802,19.9961,-0.131812,-0.606355,20.3493,-0.208021,-0.677678,20.1661,-0.229747,-0.664159,20.251,-0.086382,-0.8968,19.9848,-0.111741,-0.270152,20.3736,-0.111257,-0.9136,20.1379,-0.028128,-1.40359,19.2205,1.007,-1.30893,19.2115,1.37138,-1.3704,19.219,1.36562,-1.47658,19.5062,0.705346,-1.48099,19.3617,0.682362,-1.385,19.7579,0.304441,-1.40291,19.5111,0.418226,-1.38875,19.4291,0.877027,-1.3568,19.5236,0.494225,-1.36171,19.6543,0.487976,-1.3094,19.7842,0.352773,-0.99136,19.9303,0.00389,-1.00636,20.1216,-0.090058,-0.271517,20.4262,-0.1609,-0.273879,20.4563,-0.07306,-0.772817,19.8438,0.024873,-0.906078,19.5221,0.072798,-1.02109,19.6127,0.20583,-0.311214,19.976,0.110064,-0.612054,19.7765,0.10313,-0.311851,19.927,0.056075,-0.628307,19.9286,0.116366,-0.349705,20.0385,0.031418,-0.797735,19.5848,0.142239,-0.307294,19.9868,0.019714,-0.691206,19.7799,-0.01723,-1.24655,19.1294,0.608308,-1.25424,18.9805,1.02852,-1.27553,19.2334,0.67623,-1.08657,19.2767,0.455204,-1.13619,19.3951,0.459888,-1.08219,19.315,0.285641,0.72695,19.7655,-0.015749,0.548932,19.9954,0.062383,0.938236,19.7102,0.144075,0.798002,19.7127,0.15699,0.312142,19.9891,0.113312,0.792557,19.576,0.102141,0.320308,19.9301,0.053962,1.014,19.465,0.140626,0.318608,20.0083,0.013241,1.23745,18.9994,0.888657,1.13186,19.2215,0.418384,1.23031,19.3477,0.478185,1.26137,19.0393,1.00768,1.10841,19.4216,0.427644,1.08657,19.2766,0.455204,1.29488,19.0575,0.887603,-0.764061,24.3635,0.005179,-0.361335,24.5311,0.087306,-0.321224,24.4422,0.101923,-0.927815,24.3895,0.101516,-1.1376,24.0667,0.221187,-1.17643,24.1608,0.368245,-0.713307,24.3864,0.152729,-0.717705,24.2912,0.074793,-0.333166,24.5026,0.170501,-1.04483,24.206,0.305386,-0.323423,23.7799,1.20713,-0.635019,23.7375,1.20475,-0.228118,23.7158,1.1994,-0.333566,23.6393,1.16369,-0.906227,23.6746,0.967326,-0.82771,23.7416,0.920429,-0.808827,23.8366,1.00028,-1.14331,23.9323,0.740264,-1.14401,23.8213,0.586603,-1.11557,23.9816,0.592996,-1.04067,24.0861,0.277761,-1.11569,23.9327,0.47097,-1.21417,23.9389,0.44684,0.744412,24.4488,0.037237,0.768849,24.3039,0.022221,0.330112,24.4917,0.077019,0.341277,24.5301,0.144845,1.11407,24.2382,0.205703,1.11109,24.0793,0.203789,0.732053,24.4223,0.140936,0.33034,24.433,0.145237,1.20394,24.1304,0.394182,0.708171,24.3084,0.11811,1.04066,24.0861,0.277761,0.241624,23.6838,1.20078,0.507327,23.7766,1.21467,0.272171,23.7558,1.18606,0.65385,23.655,1.04712,0.869257,23.6728,1.00715,0.481498,23.6415,1.19805,0.908166,23.7785,1.03631,1.17341,23.8263,0.570647,1.04552,23.915,0.751519,0.788906,23.7844,0.963289,1.1567,23.9491,0.708374,1.10451,23.8722,0.566203,1.13335,24.0818,0.471076,0.686103,24.2473,-0.158751,0.744329,24.0828,-0.180814,0.235846,24.2436,-0.106785,1.25509,23.991,0.118461,1.21283,23.8259,0.114389,1.06383,23.9766,-0.082024,1.06804,24.1169,-0.069565,0.238046,24.2076,-0.035393,0.915182,24.0114,-0.04553,0.92499,24.1508,-0.025874,1.18449,23.9628,0.223531,0.153326,23.4037,1.28516,0.368478,23.3093,1.27928,0.140901,23.4627,1.35127,0.733117,23.3949,1.03842,0.815752,23.5091,1.07912,0.883145,23.3574,1.04646,0.453495,23.4132,1.33773,1.15709,23.4582,0.719704,1.14369,23.6407,0.758408,1.17224,23.5892,0.55635,1.27993,23.66,0.385542,1.24743,23.8228,0.450608,0.249327,24.3029,-0.036239,-1.06802,24.1169,-0.069569,-0.664275,24.2538,-0.145365,-0.725244,24.1589,-0.200242,-1.22754,23.8806,0.041605,-1.21332,24.0079,0.180492,-0.702496,24.1633,-0.049361,-0.714723,24.0619,-0.124169,-0.233234,24.2068,-0.08242,-1.13078,23.9002,0.094088,-0.971188,24.1401,-0.006024,-0.243254,24.2799,-0.009833,-0.166694,23.4738,1.31664,-0.398482,23.4228,1.34931,-0.135433,23.3775,1.31596,-0.234668,24.2852,-0.082603,-0.918239,23.3538,0.990291,-0.733115,23.395,1.03842,-0.815735,23.5091,1.07915,-0.486499,23.3062,1.2841,-1.19482,23.599,0.743743,-1.12361,23.4859,0.669835,-1.20335,23.7099,0.61066,-1.22363,23.6506,0.385508,-1.29609,23.7957,0.41415,-0.923485,22.932,1.37496,-1.45618,23.2784,0.691377,-1.36727,23.0436,0.829073,-1.48831,23.5097,0.298782,-1.53028,23.3029,0.353969,-1.01337,22.9643,1.10541,-0.850751,23.0364,1.34231,-0.713215,22.9964,1.3192,-0.949502,22.8674,1.26531,-1.31214,23.1186,0.726216,-1.33824,23.2385,0.732553,-1.42465,23.4206,0.374986,-0.651551,23.9974,-0.29636,-0.238604,24.0417,-0.193864,-0.241633,23.9693,-0.262111,-0.775915,23.8474,-0.348866,-1.09011,23.8528,-0.221928,-1.28622,23.6201,-0.131826,-1.24901,23.7749,-0.036527,-0.247778,23.9454,-0.186042,-0.717535,23.9277,-0.207581,-0.895665,23.7654,-0.208779,-1.34775,23.5155,0.066202,-0.173844,23.0469,1.49697,-0.422402,23.0037,1.55087,-0.128819,22.9586,1.51909,-0.438716,22.8611,1.51041,-1.46131,23.3873,0.156924,-1.47541,23.5794,0.13912,0.946022,22.872,1.32599,1.29653,23.1462,0.977136,0.806483,22.9742,1.42398,1.47222,23.3015,0.642848,1.38765,23.0663,0.779788,1.49533,23.258,0.360688,0.85627,23.0399,1.27269,1.33823,23.2385,0.732561,1.31215,23.1186,0.726186,1.42414,23.4974,0.258819,1.45429,23.4177,0.114503,1.51937,23.4995,0.300113,0.860573,22.8804,1.26669,0.740635,23.899,-0.350937,0.261186,24.0506,-0.212281,0.757219,23.9801,-0.281168,1.23401,23.7971,-0.148485,1.24059,23.6376,-0.154776,0.241704,23.9367,-0.205962,0.713696,23.8027,-0.260779,0.717544,23.9277,-0.207582,1.19775,23.7757,-0.046184,0.23493,23.9812,-0.165442,0.240759,23.9938,-0.258542,0.25147,22.8965,1.4868,0.483759,22.8941,1.5386,0.151623,22.9779,1.5564,0.24679,23.059,1.53168,0.204814,23.0185,1.46086,1.1787,23.6413,-0.079352,-1.26587,22.5885,1.25299,-0.863829,22.3333,1.57928,-0.860725,22.5526,1.51835,-1.49305,22.7605,0.917848,-1.43752,22.5084,1.03437,-1.6738,22.8968,0.537275,-1.68115,23.1727,0.042974,-1.65704,22.9633,0.09901,-0.956808,22.3987,1.30053,-1.3577,22.7049,0.957179,-0.767106,22.5306,1.44463,-1.49981,22.6995,0.677637,-1.6268,23.0233,0.354136,-0.617878,22.277,1.60512,-1.61354,22.7065,0.585823,-1.57381,23.0677,0.010035,-0.324235,23.7174,-0.430043,-0.279611,23.6639,-0.441019,-1.01001,23.4935,-0.531903,-1.07765,23.613,-0.440245,-1.42155,23.465,-0.349439,-1.35759,23.3423,-0.392595,-1.6007,23.1788,-0.16976,-1.0887,23.5381,-0.379297,-1.38931,23.2921,-0.259028,-0.944722,23.4787,-0.419702,-0.284532,23.656,-0.345083,-0.145742,22.493,1.76857,-0.457367,22.3551,1.74961,-0.247718,22.3661,1.69708,-0.279395,23.5982,-0.394703,-0.215125,22.4847,1.66757,-0.422424,22.507,1.74521,-1.54509,23.3141,-0.079988,1.62751,22.6857,0.697318,1.67629,23.0166,0.365905,1.53542,22.7679,0.886028,0.956932,22.5434,1.30671,1.41639,22.7507,0.835386,1.51375,22.6769,0.670589,1.60614,23.0147,0.327863,0.957669,22.3286,1.3595,1.22975,22.4455,1.2822,0.863843,22.3334,1.57927,1.58328,23.057,-0.015738,1.68026,22.9115,0.195122,1.3257,23.4157,-0.434963,1.09394,23.6162,-0.46094,1.59558,23.3281,-0.112432,0.950989,23.5612,-0.384422,0.284793,23.6807,-0.347419,0.273217,23.6074,-0.419119,1.38495,23.286,-0.29415,0.962838,23.4582,-0.460008,0.301492,23.6946,-0.433411,0.996897,23.5353,-0.533275,1.58391,23.2215,-0.212129,0.14375,22.4535,1.76778,0.451536,22.4801,1.75747,0.168668,22.5222,1.71411,0.373946,22.3565,1.62108,0.443173,22.316,1.71102,1.07832,22.5748,1.39222,1.5503,23.2136,-0.003281,1.37034,23.4073,-0.23417,-1.41402,21.8669,1.34854,-1.01885,21.7464,1.74128,-1.11009,21.9732,1.76936,-1.49815,22.0817,1.36414,-1.76477,22.3101,0.852602,-1.69598,22.1037,0.812162,-1.87421,22.4542,0.252636,-1.3597,21.9711,1.19817,-1.39573,22.1612,1.2754,-1.00227,22.0733,1.63704,-1.75867,22.3758,0.336902,-1.78971,22.6453,0.207923,-1.64078,22.2827,0.819391,-1.85106,22.6179,0.23813,-0.961043,21.8426,1.56664,-0.708179,23.2294,-0.663921,-1.26629,23.0424,-0.61667,-0.969515,23.2744,-0.63901,-1.45241,23.1039,-0.493487,-1.71152,22.7872,-0.275864,-0.958705,23.1109,-0.563005,-0.282047,23.3382,-0.506248,-1.12447,23.2151,-0.53199,-1.4081,22.9491,-0.425542,-1.65057,22.9282,-0.195482,-0.270337,23.261,-0.591919,-0.281859,23.233,-0.50522,-0.305641,22.1062,1.91907,-0.604611,22.0062,1.97267,-0.138144,22.0466,1.94495,-0.465581,21.8491,1.84112,-0.565889,21.8338,1.94636,-1.7112,22.6679,-0.135584,1.74341,22.128,0.896091,1.74605,22.3244,0.838094,1.49816,22.0817,1.36412,1.41407,21.8669,1.34851,1.87421,22.4541,0.252637,1.84494,22.6277,0.236446,1.57726,22.0418,0.963884,0.961008,21.8426,1.56666,0.994219,22.0493,1.59799,1.75866,22.3758,0.336934,1.77876,22.6075,0.246309,1.72523,22.6922,-0.187569,1.64078,22.2827,0.819395,1.39575,22.1612,1.2754,1.04218,21.7576,1.77259,0.653953,23.3104,-0.624767,1.01083,23.1421,-0.672176,0.288305,23.2536,-0.602094,1.20057,23.2017,-0.614434,1.46811,22.9433,-0.497368,1.29657,23.0882,-0.43589,1.43776,22.9286,-0.408653,1.71063,22.9016,-0.162633,0.969333,23.2445,-0.544728,0.97533,23.0919,-0.577239,0.292986,23.348,-0.538037,0.26271,23.2636,-0.493402,1.54051,23.0625,-0.387516,0.336188,21.8878,1.89304,0.583715,21.8504,1.9647,0.163563,22.0837,1.95565,1.08305,22.0545,1.7198,0.581649,22.0414,1.95475,1.6472,22.7553,-0.200755,0.264933,22.0322,1.86928,-0.544631,21.1904,1.85206,-0.44997,21.2639,1.72754,-0.423344,21.1446,1.72201,-0.819382,21.1321,1.62422,-0.765434,21.178,1.8462,-1.01749,21.1626,1.68159,-0.238057,21.6276,1.85271,-0.818382,21.4012,1.63785,-0.741231,21.4491,1.75623,-0.935017,21.3433,1.77761,-0.252227,21.579,1.93201,-1.38135,21.483,1.29782,-0.198059,21.5393,1.8074,-0.765929,21.3074,1.61462,-0.183349,21.3839,1.98872,-1.69514,21.6837,0.749959,-1.55229,21.3902,0.997827,-1.75161,21.7113,0.247411,-1.80967,21.8528,0.309198,-1.79386,22.0604,-0.039874,-1.76252,21.9268,-0.133331,-1.54767,21.4387,0.822903,-1.52899,21.6086,0.835528,-1.73081,21.9847,0.039173,-1.67197,22.1135,-0.391066,-0.909342,22.6716,-0.8072,-0.264883,22.7584,-0.67895,-0.251892,22.6928,-0.760495,-1.31713,22.4121,-0.715104,-0.931493,22.5298,-0.822438,-1.01957,22.5826,-0.684334,-0.909259,22.5166,-0.74295,-0.256098,22.6508,-0.67015,-1.51465,22.2511,-0.490903,-1.18703,22.6026,-0.694199,-1.55703,22.3954,-0.470093,-1.5495,22.3127,-0.392357,-0.691247,20.737,1.83193,-1.0224,20.662,1.6685,-0.720257,20.7263,1.65038,-0.855514,20.9171,1.80843,-0.565665,21.1,1.7923,-0.678084,20.985,1.6465,-0.959747,20.9733,1.53647,-0.184633,21.0989,1.84434,-1.3894,20.9726,1.29185,-1.57769,21.2052,0.767871,-1.62337,21.006,0.842603,-1.6964,21.3917,0.359201,-1.6184,21.6264,-0.070328,-1.6783,21.4723,-0.100975,-1.27831,20.8455,1.14321,-1.29288,21.0371,1.22019,-1.64932,21.356,0.037831,-1.66427,21.1007,0.525831,-1.32616,20.756,1.28463,-0.811287,22.2073,-0.802944,-0.248218,22.2604,-0.749468,-0.224152,22.1678,-0.730997,-1.02153,22.0246,-0.811666,-1.52256,21.6738,-0.42474,-1.28847,22.0257,-0.578435,-0.932325,22.0239,-0.722615,-0.837422,22.1787,-0.707532,-1.50626,21.8101,-0.327157,-1.4563,21.6984,-0.40524,-0.232706,22.2464,-0.64701,-0.13328,21.4979,1.90788,-0.616246,20.1383,1.80707,-0.232128,21.0809,1.96971,-0.69825,20.4199,1.91139,-0.616683,20.4295,1.79773,-0.732161,20.2556,1.94129,-0.826885,20.2143,1.73591,-1.14969,20.0886,1.6401,-0.67284,20.1152,1.91428,-1.10007,19.8459,1.74269,-0.973102,20.26,1.7101,-0.705296,20.6468,1.70895,-0.990055,20.5225,1.58818,-0.976962,20.5661,1.77889,-1.40204,20.4837,1.39172,-0.992156,20.3096,1.85484,-1.59191,20.6496,0.91649,-1.52774,20.4564,0.886067,-1.61241,20.7279,0.42326,-1.58596,20.8922,0.435609,-1.46598,21.2438,-0.144811,-1.5073,20.9771,-0.06807,-1.28867,20.377,1.26075,-1.32352,20.558,1.32531,-1.53158,20.7594,0.322971,-1.50431,20.6428,0.872246,-1.46655,21.1156,-0.007255,-1.33181,20.2923,1.39098,-1.08328,21.5985,-0.551317,-0.707433,21.7474,-0.705549,-0.788295,21.6222,-0.774549,-1.06543,21.4761,-0.677439,-1.37488,21.2713,-0.411317,-1.33829,21.4217,-0.395914,-0.759986,21.5698,-0.657682,-0.762226,21.6749,-0.630135,-0.211608,21.744,-0.584368,-0.23365,21.8001,-0.633006,-0.226712,21.6747,-0.642287,-0.236378,21.743,-0.698778,-1.35647,21.1872,-0.321771,-1.11224,21.4178,-0.533683,-1.13651,19.9315,1.63337,-1.53455,20.4014,0.607807,-1.43911,20.1176,0.888313,-1.49365,20.6449,0.208728,-1.49207,20.4608,0.164796,-0.966322,20.155,1.5977,-1.03822,19.8732,1.6435,-1.45119,20.379,0.640263,-1.35963,20.7242,-0.196805,-1.19606,20.2046,1.28881,-1.04299,21.0334,-0.542135,-0.710556,21.3,-0.606483,-0.764525,21.1139,-0.604708,-1.13049,21.1231,-0.449367,-0.731237,21.2155,-0.499714,-0.214761,21.2379,-0.513802,-1.11161,21.0986,-0.359516,-1.10949,20.9579,-0.390684,-0.210972,21.3064,-0.456179,-0.214747,21.3626,-0.517952,-0.2247,21.2948,-0.576988,-1.37761,20.8851,-0.173645,-1.311,20.9171,-0.168583,-1.35515,19.6333,1.14477,-1.14541,19.5647,1.61933,-1.21756,19.7591,1.52168,-1.47108,19.9954,0.691712,-1.41137,20.4131,0.09462,-1.41038,20.1223,0.193544,-1.15312,19.7445,1.40619,-1.13421,19.546,1.4141,-1.42583,19.8915,0.539684,-1.39743,20.01,0.628508,-1.354,20.3811,0.104133,-0.770755,20.8936,-0.42938,-0.227578,20.9561,-0.403334,-0.733217,20.7828,-0.510866,-1.07018,20.7558,-0.318265,-0.201522,20.859,-0.337893,-0.218594,20.9523,-0.327282,-0.889331,20.8107,-0.352447,-1.28674,20.3754,-0.098213,-0.861992,20.695,-0.363013,-1.07904,20.6457,-0.366015,-0.222249,20.8581,-0.414317,-0.863408,19.753,1.68305,-0.970737,19.7397,1.81189,0.544632,21.1904,1.85206,0.565669,21.1,1.7923,0.464617,21.2272,1.74125,0.777558,21.2122,1.59014,0.911276,21.3998,1.71013,0.818376,21.4012,1.63785,0.24377,21.6292,1.85601,0.254181,21.5838,1.93322,0.93503,21.3433,1.7776,0.210037,21.5137,1.79222,0.765435,21.178,1.8462,0.186687,21.3984,1.9841,1.6728,21.5122,0.7805,1.76209,21.7845,0.51913,1.41961,21.4619,1.25853,1.07468,21.16,1.62825,1.7859,21.9069,-0.095638,1.70711,22.208,-0.234299,1.529,21.6087,0.835518,1.54767,21.4387,0.822873,1.70726,21.8663,0.27244,1.68648,22.0176,-0.26039,0.846365,21.113,1.6695,1.80377,21.7369,0.2944,0.931886,22.5864,-0.839375,0.278066,22.7655,-0.732521,0.96645,22.671,-0.753965,1.38519,22.5183,-0.610441,1.65357,22.1779,-0.436082,1.26362,22.467,-0.742396,1.30491,22.4667,-0.566473,0.895127,22.6109,-0.691739,1.06181,22.4729,-0.754057,1.56184,22.1872,-0.445248,0.249187,22.6746,-0.654872,0.256541,22.661,-0.752595,0.69461,20.7145,1.74813,0.466873,20.8693,1.74636,1.07784,20.7422,1.37627,0.678088,20.985,1.6465,0.855514,20.9171,1.80842,0.306216,21.1984,1.77121,0.230313,21.0913,1.97879,0.675881,20.7692,1.85588,1.38939,20.9726,1.29191,1.3262,20.756,1.2846,1.59474,20.9702,0.812245,1.71755,21.2387,0.339276,1.69053,21.5237,0.089796,1.61327,21.1913,0.810986,1.29286,21.0371,1.22024,1.53989,21.0378,0.732351,1.63102,21.3707,0.315049,1.59249,21.4829,-0.161116,0.959756,20.9733,1.53646,1.0224,20.662,1.6685,1.67941,21.4121,-0.0555,0.596149,22.1578,-0.822829,0.258311,22.2862,-0.705609,0.866763,22.2039,-0.76837,1.01746,22.0182,-0.809332,1.17495,22.0939,-0.674862,0.235402,22.1557,-0.697021,0.986911,21.9988,-0.70045,0.822081,22.1544,-0.697702,1.19399,21.9966,-0.567585,1.46516,21.6819,-0.412247,0.231604,22.2226,-0.646204,0.17176,21.1342,1.85555,0.135148,21.493,1.9136,0.219186,22.2313,-0.743358,1.50779,21.7319,-0.460851,1.5184,21.8071,-0.317572,0.616378,20.1381,1.80705,0.669738,20.2005,1.94284,0.674581,20.4233,1.82729,0.672373,20.4478,1.93453,0.763552,20.2347,1.9296,0.826885,20.2143,1.73591,0.643093,20.351,1.77903,1.07745,20.0979,1.71291,1.03822,19.8732,1.6435,1.11451,19.9182,1.68612,0.992159,20.3096,1.85484,0.984028,20.513,1.82119,0.922484,20.3494,1.66187,1.02772,20.5661,1.6181,1.57573,20.4817,0.942887,1.53971,20.6795,0.88295,1.40203,20.4838,1.39174,1.3318,20.2923,1.39101,1.28867,20.377,1.26075,1.51834,20.4877,0.838183,1.56231,20.8201,0.174562,1.53798,20.8678,0.405494,1.42785,21.2466,-0.163266,1.40721,21.127,-0.250706,1.32351,20.558,1.32531,1.61432,20.8807,0.426589,0.987226,20.2543,1.74704,0.788295,21.6222,-0.774549,0.768932,21.723,-0.720235,1.09728,21.6075,-0.594338,0.766671,21.6518,-0.622304,0.224132,21.7451,-0.577816,0.217216,21.6833,-0.656018,1.11221,21.4177,-0.533682,0.800328,21.5438,-0.690154,0.229096,21.8048,-0.655864,1.08224,21.4697,-0.667011,1.09185,21.5418,-0.515235,1.37489,21.2713,-0.411313,1.48336,21.2528,-0.168412,1.41485,20.0703,1.0823,1.46478,20.2504,0.968616,1.47737,20.3269,0.409917,1.52755,20.6008,0.261824,1.41383,20.6407,-0.094799,1.34957,20.143,0.966733,0.966323,20.155,1.5977,1.45727,20.5991,0.229423,1.39225,20.2852,0.961398,0.705015,21.2914,-0.618388,0.90059,21.1353,-0.629579,0.224703,21.2948,-0.57699,0.731245,21.2155,-0.499714,0.210971,21.3064,-0.456178,0.214761,21.2379,-0.5138,0.822669,21.0922,-0.561938,1.27705,20.8214,-0.241411,1.05867,21.1085,-0.391048,0.212871,21.3621,-0.505789,1.21168,20.9159,-0.403453,1.37526,20.8948,-0.129359,1.0672,21.1692,-0.457881,1.23529,19.6874,1.57713,1.09752,19.5461,1.59425,1.20621,19.5561,1.30914,1.43028,19.8251,0.659275,1.484,19.9923,0.651506,1.38563,20.2091,0.081664,1.15313,19.7445,1.40618,1.42856,20.0282,0.661033,1.38172,19.8989,0.601617,1.354,20.3811,0.104131,1.20905,19.7706,1.48206,1.41442,20.4006,0.102565,1.01706,20.6451,-0.396466,0.843295,20.8641,-0.434598,1.13602,20.7032,-0.210988,0.72053,20.7415,-0.387508,0.213956,20.9381,-0.310435,0.210869,20.8419,-0.3624,0.723384,20.847,-0.359976,1.04779,20.5972,-0.264509,0.494375,20.9297,-0.44728,0.725898,20.7604,-0.493508,0.209662,20.9221,-0.416404,0.8634,19.753,1.68306,0.970731,19.7398,1.81189,1.11274,19.8124,1.73707,1.29998,20.4379,-0.139821,0.210082,24.0287,0.866541,0.210452,22.8326,1.50309,-0.236435,22.985,1.43769,0.341487,23.9968,0.923754,-0.391339,24.0981,0.986752,-0.250576,23.1067,1.60054,-0.328973,23.9945,1.17665,-0.341492,23.9968,0.923754,0.255786,23.1746,1.57191,0.203863,22.5056,1.82595,0.245378,22.6994,1.65373,-0.215088,22.5128,1.81743,-0.247907,22.7438,1.64877,0.135688,22.3528,1.6632,-0.21083,22.4323,1.6451,-0.31445,21.6658,2.00131,-0.263397,21.6564,2.09766,-0.257078,21.6358,1.91678,0.309969,21.6709,2.00307,0.253028,21.6651,1.90236,0.266027,21.6752,2.09009,0.133613,20.8999,2.1377,0.117942,20.9943,2.02777,-0.180329,21.1805,2.02573,-0.157294,21.0131,2.17542,-0.052881,20.9268,2.02391,-0.046774,20.8345,2.12598,0.11958,20.9717,2.20484,-0.063729,20.9053,2.20416,0.33162,24.0727,1.12703,-0.308288,24.0995,1.07102,0.388865,23.9002,1.10329,0.354545,24.11,0.956553,-0.19263,24.0265,0.861459,-0.399218,26.4355,0.57213,0.399617,26.4367,0.571683],
								"skinIndices": [0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,43,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,41,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,35,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,37,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,6,0,0,0,6,0,0],
								"uvs": [[0.959947,0.87776,0.955181,0.892911,0.954133,0.876365,0.956249,0.349959,0.958634,0.334354,0.963981,0.350031,0.536138,0.99499,0.535761,0.987882,0.538557,0.98724,0.951512,0.971884,0.950315,0.95338,0.953426,0.96738,0.968156,0.650401,0.966628,0.631665,0.970047,0.632302,0.910686,0.988687,0.911473,0.995947,0.908181,0.993597,0.964604,0.968827,0.963427,0.954438,0.970631,0.953214,0.963534,0.241941,0.966812,0.224687,0.970533,0.243264,0.400812,0.967334,0.394463,0.952995,0.401499,0.953066,0.97048,0.086048,0.966183,0.070877,0.972694,0.071146,0.97927,0.257797,0.981253,0.271831,0.977299,0.265826,0.980662,0.287547,0.980911,0.303586,0.978309,0.30241,0.058471,0.989182,0.057165,0.994983,0.055343,0.988374,0.364171,0.739093,0.360987,0.753658,0.358078,0.748096,0.303497,0.899885,0.304805,0.884207,0.310296,0.894361,0.010892,0.766191,0.005696,0.758781,0.014492,0.750908,0.30855,0.880562,0.008913,0.747975,0.925743,0.993847,0.922993,0.990843,0.925651,0.988488,0.980231,0.160167,0.978296,0.151557,0.983841,0.153844,0.737679,0.107666,0.733043,0.117253,0.729101,0.103026,0.732478,0.096068,0.008993,0.825435,0.005572,0.813923,0.013414,0.807856,0.616213,0.112952,0.620772,0.11442,0.617788,0.117708,0.614368,0.118735,0.556285,0.945365,0.552818,0.959232,0.548722,0.945018,0.571068,0.975966,0.566297,0.975806,0.570292,0.966411,0.57503,0.970929,0.643336,0.844251,0.6437,0.853293,0.642804,0.848747,0.056391,0.966357,0.058389,0.972936,0.055328,0.977336,0.548463,0.959964,0.94301,0.097101,0.950124,0.097317,0.944097,0.106673,0.932213,0.560536,0.933324,0.5529,0.940348,0.558765,0.940455,0.564728,0.937307,0.56421,0.932853,0.564044,0.932384,0.563975,0.642157,0.986913,0.642756,0.984369,0.644859,0.9868,0.958263,0.859008,0.962066,0.857963,0.96118,0.86282,0.842643,0.992483,0.844939,0.988972,0.845608,0.992882,0.798009,0.988627,0.79907,0.978518,0.803247,0.984582,0.929825,0.552407,0.717462,0.961842,0.719324,0.968505,0.718039,0.975272,0.114504,0.979344,0.10802,0.980031,0.106548,0.975029,0.986609,0.051845,0.9829,0.058205,0.982141,0.04972,0.952241,0.705055,0.946151,0.692376,0.955875,0.692515,0.96919,0.048193,0.973805,0.053758,0.966973,0.05871,0.942633,0.701557,0.946569,0.707705,0.855788,0.011542,0.859243,0.005468,0.859908,0.008871,0.113467,0.971146,0.985077,0.878551,0.98666,0.883482,0.983943,0.882062,0.944218,0.697339,0.984098,0.890833,0.987532,0.892339,0.10904,0.984507,0.851726,0.008062,0.831459,0.473355,0.831963,0.459567,0.841164,0.462726,0.908158,0.014012,0.899027,0.018931,0.896286,0.012703,0.905077,0.005595,0.271371,0.967397,0.268811,0.952157,0.274619,0.954618,0.813484,0.985777,0.81405,0.977557,0.815767,0.983695,0.985377,0.6051,0.98071,0.614345,0.982504,0.601726,0.971047,0.861246,0.976586,0.860197,0.975604,0.866901,0.970712,0.865821,0.89808,0.692492,0.898248,0.698944,0.896986,0.693807,0.275649,0.963702,0.317338,0.922593,0.318311,0.940881,0.303555,0.938151,0.961587,0.901604,0.959866,0.912096,0.953291,0.907372,0.809115,0.968012,0.805534,0.966153,0.81269,0.96032,0.480305,0.96826,0.487333,0.966477,0.487343,0.978334,0.97388,0.681048,0.966882,0.680809,0.96699,0.676725,0.891724,0.98961,0.889854,0.981472,0.895263,0.984201,0.950769,0.240888,0.937018,0.240993,0.938063,0.226767,0.951087,0.222704,0.302959,0.922755,0.478451,0.978119,0.971151,0.667642,0.967303,0.667765,0.896849,0.990866,0.967883,0.198654,0.967613,0.183434,0.970358,0.191921,0.306334,0.984117,0.304882,0.975132,0.309058,0.976427,0.302959,0.983864,0.005905,0.588919,0.003947,0.582896,0.015115,0.588215,0.964065,0.198248,0.952254,0.564607,0.958205,0.565134,0.958089,0.582245,0.462564,0.954107,0.453915,0.954761,0.452891,0.940429,0.462574,0.940184,0.014713,0.604816,0.963083,0.312832,0.961928,0.322124,0.95556,0.313517,0.422019,0.95479,0.427402,0.953839,0.427646,0.966346,0.968334,0.567631,0.973695,0.570319,0.969181,0.580644,0.951691,0.569592,0.008972,0.70707,0.004741,0.703262,0.008208,0.690004,0.941405,0.832916,0.950686,0.830688,0.954001,0.84709,0.626045,0.940139,0.634468,0.942654,0.629758,0.956878,0.616949,0.951107,0.619447,0.944437,0.39374,0.933592,0.396606,0.929664,0.402351,0.941349,0.95722,0.508255,0.95075,0.500122,0.951519,0.492068,0.940639,0.846684,0.95035,0.824562,0.982159,0.553361,0.987849,0.560396,0.984318,0.562091,0.395152,0.943215,0.175516,0.958201,0.170724,0.971045,0.1702,0.955782,0.966892,0.925626,0.96599,0.940047,0.962712,0.942691,0.957815,0.492729,0.952076,0.776377,0.938641,0.794936,0.9379,0.780504,0.937575,0.270207,0.949307,0.252626,0.948814,0.271166,0.935896,0.252907,0.970536,0.882432,0.974028,0.876116,0.976375,0.885819,0.720217,0.983574,0.716946,0.989766,0.71695,0.981819,0.951291,0.796086,0.161694,0.966452,0.157023,0.970046,0.153464,0.961964,0.292046,0.95884,0.288369,0.966212,0.284586,0.958682,0.871354,0.960196,0.879261,0.968696,0.872568,0.97146,0.880488,0.961016,0.972337,0.890187,0.980371,0.209767,0.976007,0.216548,0.97452,0.210725,0.951735,0.302467,0.937254,0.30171,0.951069,0.284411,0.040757,0.938,0.042608,0.954186,0.027493,0.952341,0.028111,0.937674,0.970545,0.708841,0.964569,0.703242,0.971977,0.694184,0.93706,0.284564,0.966063,0.103396,0.972706,0.110094,0.965071,0.112954,0.77124,0.955904,0.769953,0.967802,0.76479,0.959148,0.626156,0.980327,0.628282,0.968987,0.635111,0.98032,0.887695,0.961217,0.896514,0.966347,0.890289,0.973002,0.971404,0.539208,0.970541,0.526882,0.976401,0.52903,0.78208,0.936866,0.787638,0.919018,0.789454,0.93444,0.988605,0.236266,0.994505,0.238854,0.99477,0.24407,0.594259,0.956715,0.585348,0.953477,0.586782,0.940224,0.92057,0.978777,0.920053,0.970761,0.926948,0.972193,0.951114,0.05703,0.95239,0.047379,0.959424,0.059008,0.962535,0.290028,0.966857,0.286623,0.967728,0.302737,0.961903,0.285855,0.802013,0.015266,0.801831,0.006296,0.810064,0.015458,0.568521,0.937901,0.575342,0.938177,0.574447,0.955106,0.928817,0.028391,0.936594,0.017397,0.94448,0.018587,0.940323,0.034536,0.596987,0.938478,0.926985,0.977114,0.529915,0.973371,0.535853,0.967765,0.536871,0.978114,0.721362,0.082095,0.717669,0.087917,0.706203,0.083967,0.609586,0.783441,0.620941,0.759551,0.624408,0.787845,0.590602,0.773867,0.62995,0.656955,0.61236,0.673167,0.609909,0.657707,0.630877,0.772461,0.538105,0.727444,0.531794,0.740615,0.52594,0.715055,0.537469,0.695201,0.544535,0.710146,0.58742,0.660778,0.373947,0.876971,0.37759,0.89613,0.370472,0.893862,0.361649,0.885835,0.909328,0.134647,0.909024,0.105355,0.927133,0.108481,0.922164,0.137338,0.934953,0.135556,0.788004,0.682994,0.811588,0.702055,0.792355,0.708848,0.197643,0.805758,0.220262,0.795769,0.209669,0.820563,0.909887,0.16979,0.907841,0.155796,0.917938,0.157526,0.927895,0.200349,0.915364,0.881257,0.92731,0.872711,0.927248,0.921602,0.914921,0.923499,0.90343,0.889034,0.76232,0.01084,0.774858,0.021461,0.766739,0.042172,0.73784,0.035188,0.790491,0.63153,0.766612,0.656723,0.236008,0.811347,0.250025,0.812954,0.819479,0.34708,0.827917,0.303128,0.832668,0.336397,0.861801,0.03913,0.884018,0.085138,0.850607,0.082187,0.663885,0.688558,0.685891,0.689002,0.681885,0.739335,0.662169,0.765018,0.648855,0.698604,0.756231,0.913076,0.774082,0.91321,0.759633,0.942609,0.259262,0.907458,0.246999,0.930821,0.242011,0.900792,0.007344,0.72368,0.010886,0.738726,0.003607,0.737007,0.015866,0.728771,0.483179,0.947607,0.473564,0.950085,0.476163,0.938103,0.480958,0.957315,0.904849,0.532546,0.891675,0.544669,0.891748,0.508393,0.911394,0.489491,0.91831,0.523299,0.514521,0.893486,0.514521,0.930943,0.499544,0.924997,0.487132,0.891961,0.766999,0.72038,0.753636,0.723498,0.379577,0.922072,0.367525,0.922457,0.06377,0.875572,0.076469,0.873987,0.065873,0.903594,0.05566,0.924672,0.22985,0.734175,0.208633,0.698093,0.242412,0.688124,0.667858,0.657414,0.684876,0.658037,0.653475,0.638836,0.270719,0.864633,0.29219,0.877178,0.273602,0.897024,0.822973,0.028692,0.836769,0.062651,0.827193,0.085413,0.809511,0.02287,0.784344,0.830313,0.766837,0.815566,0.794466,0.80866,0.592968,0.03439,0.616847,0.03115,0.594683,0.07721,0.674238,0.921568,0.685823,0.947034,0.665842,0.943305,0.665848,0.915164,0.825754,0.192191,0.808125,0.192894,0.84694,0.142124,0.792025,0.17323,0.8091,0.245363,0.386151,0.732992,0.413762,0.730013,0.424521,0.780172,0.832081,0.116427,0.816635,0.096648,0.550779,0.042332,0.543613,0.003247,0.559206,0.019894,0.739354,0.827569,0.726805,0.846063,0.725201,0.795793,0.672414,0.821674,0.859213,0.273398,0.198442,0.753673,0.259003,0.806254,0.765374,0.264807,0.735085,0.075069,0.708715,0.032913,0.722981,0.698075,0.755816,0.750091,0.703955,0.726277,0.875353,0.824875,0.863057,0.804805,0.884637,0.808929,0.800605,0.061925,0.843781,0.087917,0.714752,0.858446,0.693534,0.913928,0.693542,0.861393,0.300543,0.791199,0.328007,0.81156,0.28681,0.818545,0.273969,0.800309,0.350941,0.813012,0.341114,0.844317,0.401758,0.83321,0.414699,0.857034,0.381275,0.836448,0.831132,0.908609,0.831138,0.897286,0.842712,0.898959,0.713396,0.073879,0.557997,0.739983,0.615531,0.640366,0.069365,0.920588,0.920824,0.813387,0.911797,0.848331,0.907036,0.822811,0.932655,0.841503,0.702204,0.019245,0.728057,0.012885,0.809557,0.676326,0.186993,0.811792,0.856927,0.298057,0.929008,0.695999,0.929943,0.707051,0.912361,0.707366,0.628951,0.920045,0.611773,0.91359,0.613034,0.899328,0.630475,0.928122,0.910851,0.735739,0.907349,0.196924,0.777585,0.623298,0.876284,0.034067,0.281425,0.693771,0.288453,0.713857,0.277853,0.735006,0.131909,0.874895,0.128707,0.897423,0.127301,0.861528,0.26012,0.935139,0.900936,0.493311,0.275611,0.677023,0.286562,0.681339,0.137329,0.911015,0.125491,0.913121,0.24172,0.722288,0.256299,0.723538,0.287545,0.856122,0.290501,0.905254,0.268863,0.91599,0.809278,0.830812,0.865694,0.146567,0.269573,0.68966,0.807893,0.224032,0.377609,0.680868,0.409038,0.69632,0.761013,0.23046,0.388231,0.78325,0.932844,0.5409,0.926155,0.522104,0.943326,0.522322,0.934076,0.495209,0.375077,0.747161,0.804328,0.328292,0.753007,0.078656,0.763952,0.080906,0.889719,0.849226,0.863284,0.862766,0.786772,0.087897,0.788543,0.061833,0.71385,0.915436,0.723491,0.90028,0.413777,0.8051,0.849393,0.924383,0.971048,0.449199,0.972088,0.43141,0.974141,0.434032,0.88562,0.460835,0.874501,0.475391,0.878095,0.462153,0.338401,0.963582,0.346326,0.953521,0.350935,0.965773,0.335612,0.955536,0.875465,0.460638,0.88549,0.475246,0.567005,0.916255,0.568103,0.89833,0.570207,0.903934,0.983568,0.822938,0.982857,0.813696,0.985594,0.817543,0.523998,0.904155,0.525959,0.908059,0.524527,0.922828,0.863809,0.459895,0.851231,0.475003,0.856338,0.46115,0.102794,0.957363,0.09956,0.953783,0.110466,0.953147,0.983039,0.840793,0.984861,0.839297,0.986216,0.845223,0.978887,0.847304,0.979276,0.838603,0.521496,0.9157,0.865572,0.991057,0.864523,0.983048,0.865992,0.981331,0.856818,0.476105,0.981966,0.835313,0.984722,0.849559,0.100346,0.949556,0.111066,0.949568,0.981295,0.849758,0.362219,0.675045,0.361231,0.688246,0.358427,0.691414,0.013441,0.856233,0.006267,0.85601,0.005263,0.838951,0.359099,0.681652,0.012413,0.836711,0.009368,0.893679,0.005603,0.879008,0.011151,0.881899,0.994649,0.158798,0.994272,0.166165,0.992198,0.159987,0.412198,0.955607,0.414669,0.954151,0.412859,0.972528,0.20049,0.953453,0.207827,0.954057,0.207286,0.967824,0.201732,0.968239,0.014458,0.903819,0.004406,0.918497,0.007151,0.906298,0.012978,0.921674,0.028102,0.974223,0.028937,0.965718,0.030602,0.972363,0.937165,0.980151,0.941625,0.979859,0.936986,0.984065,0.976668,0.346847,0.976649,0.351824,0.973925,0.34603,0.006325,0.634409,0.00618,0.623151,0.011763,0.63465,0.014101,0.780064,0.006646,0.784104,0.008045,0.776045,0.011965,0.614196,0.015866,0.792856,0.866403,0.947006,0.865874,0.935056,0.869049,0.938764,0.985986,0.669638,0.983093,0.683346,0.981739,0.672652,0.97491,0.33257,0.976955,0.337649,0.011878,0.797832,0.823475,0.004859,0.825802,0.009224,0.821597,0.013472,0.98478,0.38694,0.982709,0.373538,0.986123,0.375664,0.364217,0.769839,0.364947,0.789267,0.361242,0.773477,0.525721,0.992733,0.524669,0.987363,0.527646,0.98724,0.360941,0.83067,0.362743,0.823393,0.36473,0.826857,0.361269,0.763745,0.817513,0.007651,0.956227,0.389902,0.952726,0.380878,0.960844,0.384819,0.318321,0.966876,0.312827,0.962833,0.321353,0.962107,0.962409,0.369766,0.980883,0.950971,0.978724,0.960374,0.977182,0.951873,0.88251,0.008565,0.881699,0.003349,0.887787,0.009921,0.957036,0.63251,0.946452,0.647084,0.946375,0.632727,0.828714,0.976793,0.831923,0.983278,0.825809,0.98056,0.988665,0.218634,0.993816,0.217867,0.993842,0.226535,0.959548,0.448856,0.949294,0.447149,0.952825,0.430671,0.868277,0.01146,0.86908,0.003351,0.873955,0.005504,0.982931,0.962425,0.462835,0.980803,0.45977,0.977826,0.463025,0.971252,0.95544,0.648606,0.943835,0.124367,0.953558,0.120124,0.944411,0.132399,0.949065,0.138079,0.953667,0.477902,0.961072,0.480684,0.955837,0.485317,0.138311,0.959731,0.142342,0.96235,0.138857,0.969816,0.941342,0.804828,0.949035,0.806722,0.948564,0.814204,0.907182,0.462758,0.898495,0.473863,0.899653,0.462103,0.703377,0.959055,0.707201,0.96996,0.700348,0.967957,0.95682,0.470555,0.139392,0.974508,0.143254,0.972428,0.942487,0.815418,0.981779,0.12671,0.986071,0.126684,0.983274,0.136457,0.006883,0.953056,0.017613,0.948904,0.015084,0.956032,0.95726,0.669961,0.94672,0.676034,0.947251,0.663171,0.953875,0.661648,0.971208,0.603523,0.972642,0.614338,0.966333,0.614345,0.969938,0.501902,0.966201,0.498903,0.969498,0.493558,0.968888,0.598197,0.973227,0.596168,0.008222,0.936525,0.953107,0.683545,0.430959,0.983916,0.425522,0.981389,0.430635,0.979603,0.981464,0.637026,0.984918,0.646281,0.979768,0.651329,0.967833,0.60396,0.974919,0.906253,0.976195,0.900019,0.978581,0.900453,0.994662,0.975123,0.996148,0.981954,0.993119,0.980405,0.947016,0.166198,0.941483,0.148941,0.952048,0.149233,0.249341,0.959199,0.244968,0.944512,0.254993,0.948843,0.97446,0.912585,0.974483,0.91587,0.970605,0.914563,0.187432,0.971281,0.189244,0.963598,0.192519,0.970362,0.982745,0.792601,0.983464,0.783203,0.983986,0.786771,0.953588,0.160992,0.986804,0.542161,0.983069,0.536879,0.987628,0.533012,0.963205,0.271753,0.96389,0.26271,0.969104,0.271136,0.893541,0.933716,0.891669,0.947747,0.879399,0.939042,0.880523,0.951082,0.706163,0.948635,0.707094,0.941225,0.72088,0.942891,0.970116,0.274563,0.889504,0.930006,0.98519,0.483414,0.985751,0.472304,0.988789,0.485058,0.832371,0.006467,0.838304,0.005761,0.833431,0.0158,0.705751,0.932046,0.720492,0.932427,0.984683,0.070315,0.984731,0.083545,0.980478,0.071822,0.712742,0.927264,0.175525,0.93319,0.173427,0.942267,0.157629,0.927332,0.159563,0.945547,0.954554,0.937967,0.936587,0.942659,0.938519,0.934452,0.953443,0.928485,0.939226,0.924306,0.632494,0.989675,0.635108,0.99537,0.632376,0.995025,0.571104,0.813426,0.566755,0.815927,0.570611,0.802672,0.569994,0.83551,0.573872,0.836947,0.570781,0.845309,0.410311,0.990272,0.414373,0.982784,0.416291,0.988193,0.410353,0.985425,0.954379,0.980859,0.954474,0.988455,0.949141,0.982845,0.904826,0.981064,0.908336,0.968012,0.912611,0.979331,0.574073,0.826791,0.56733,0.859326,0.569241,0.851927,0.57498,0.859338,0.496471,0.942609,0.512816,0.952277,0.495541,0.951463,0.381679,0.949595,0.368392,0.937725,0.380806,0.939421,0.981044,0.410997,0.984812,0.408362,0.986265,0.41351,0.988004,0.505337,0.988004,0.511011,0.983456,0.502291,0.597255,0.969072,0.602089,0.972128,0.602372,0.979468,0.965938,0.763047,0.968507,0.747544,0.970729,0.763489,0.03257,0.986459,0.031597,0.993528,0.027228,0.996321,0.027322,0.987189,0.561029,0.113357,0.566145,0.111731,0.562858,0.119505,0.508749,0.940382,0.598217,0.978166,0.365981,0.953376,0.938958,0.761743,0.938016,0.749833,0.955827,0.748631,0.073554,0.953785,0.058441,0.939254,0.072429,0.940782,0.057505,0.953832,0.977394,0.983526,0.977924,0.974819,0.98395,0.975427,0.967323,0.135485,0.966182,0.12106,0.969244,0.122404,0.936785,0.95378,0.942088,0.970082,0.936128,0.968073,0.952975,0.762598,0.983797,0.984895,0.668307,0.118996,0.668418,0.112828,0.674573,0.119623,0.994631,0.95603,0.991199,0.965294,0.991333,0.957844,0.630412,0.113636,0.635057,0.112597,0.631876,0.119486,0.607867,0.115288,0.604127,0.117569,0.607859,0.110953,0.332333,0.939554,0.331423,0.922438,0.347131,0.922763,0.896248,0.362267,0.908052,0.378909,0.897034,0.379975,0.277619,0.987417,0.271683,0.989938,0.275465,0.98085,0.349377,0.936676,0.910162,0.363908,0.017367,0.968159,0.011809,0.978305,0.013466,0.96612,0.019714,0.976065,0.686769,0.967616,0.681857,0.967068,0.680481,0.956926,0.957505,0.033266,0.953278,0.02918,0.956051,0.018298,0.955064,0.067159,0.954664,0.083227,0.951166,0.071572,0.573818,0.118879,0.57447,0.110765,0.580008,0.115188,0.376877,0.969003,0.382713,0.966619,0.381353,0.976772,0.142919,0.936522,0.134854,0.950303,0.127185,0.947176,0.282216,0.94277,0.277221,0.924666,0.292951,0.92791,0.445935,0.969956,0.450145,0.98154,0.444232,0.980008,0.551202,0.979004,0.55115,0.968674,0.555423,0.970272,0.616654,0.980944,0.610232,0.980816,0.610229,0.976498,0.143394,0.982988,0.144346,0.990972,0.138461,0.98572,0.191453,0.980886,0.18877,0.987352,0.186007,0.981544,0.125427,0.932964,0.617,0.971009,0.954152,0.61052,0.955402,0.595105,0.95891,0.611472,0.173652,0.980112,0.175797,0.989672,0.170301,0.990617,0.273631,0.937395,0.108078,0.842514,0.104728,0.85945,0.091759,0.865494,0.099998,0.825223,0.114748,0.826974,0.929197,0.052539,0.943898,0.04557,0.943934,0.066743,0.94397,0.087917,0.932149,0.086925,0.939574,0.423588,0.941551,0.449913,0.92888,0.445833,0.929999,0.409092,0.941558,0.39763,0.10802,0.879178,0.114633,0.900301,0.100475,0.898177,0.004643,0.397805,0.014991,0.384345,0.015352,0.409267,0.015714,0.434189,0.718707,0.543006,0.710218,0.497846,0.733979,0.529947,0.759958,0.485046,0.746783,0.469002,0.794957,0.482328,0.761818,0.520278,0.723646,0.46001,0.715927,0.434527,0.885963,0.310118,0.895281,0.292747,0.901821,0.308092,0.750486,0.378206,0.739923,0.366739,0.760473,0.364878,0.921184,0.320269,0.889951,0.339288,0.910835,0.31173,0.526414,0.617348,0.531942,0.568617,0.543993,0.622652,0.537939,0.393721,0.586626,0.414513,0.56292,0.439571,0.529925,0.455902,0.521252,0.405806,0.578813,0.520008,0.613086,0.520629,0.594162,0.601766,0.721456,0.392954,0.754827,0.392887,0.779441,0.42942,0.722632,0.605571,0.767237,0.572385,0.295201,0.156475,0.321512,0.225855,0.285137,0.209976,0.901849,0.755834,0.901494,0.798312,0.880889,0.745412,0.294607,0.236934,0.269688,0.212736,0.875359,0.330886,0.81974,0.5144,0.818595,0.554179,0.70894,0.326265,0.733916,0.35114,0.690227,0.345753,0.674753,0.271547,0.862104,0.542456,0.878298,0.523562,0.879,0.605364,0.164978,0.04647,0.150189,0.037785,0.161556,0.025482,0.173656,0.08464,0.156151,0.06267,0.841064,0.750527,0.867722,0.74281,0.857971,0.772263,0.842193,0.797978,0.822263,0.798312,0.226391,0.099467,0.223542,0.142821,0.162853,0.120205,0.130888,0.812662,0.15146,0.773291,0.151652,0.803841,0.145239,0.838321,0.073352,0.581949,0.080225,0.507196,0.121164,0.564944,0.085034,0.630659,0.162095,0.646379,0.157779,0.596933,0.15773,0.53968,0.242045,0.563155,0.260041,0.591377,0.225517,0.606093,0.100295,0.459349,0.190921,0.515553,0.404153,0.623814,0.435718,0.643078,0.405508,0.667352,0.385799,0.655285,0.344069,0.640531,0.402726,0.586338,0.312755,0.588886,0.428301,0.067153,0.461199,0.114134,0.365349,0.141592,0.374175,0.54098,0.305263,0.501309,0.367683,0.458537,0.422208,0.518201,0.518795,0.102141,0.52532,0.177518,0.489565,0.160825,0.466689,0.060893,0.424184,0.450873,0.47659,0.512203,0.913852,0.39866,0.917715,0.420271,0.896266,0.426185,0.556147,0.923782,0.534658,0.925306,0.53739,0.903329,0.320233,0.108535,0.3097,0.053416,0.371175,0.063498,0.299586,0.636025,0.277003,0.57464,0.368964,0.026687,0.323677,0.015272,0.368011,0.007105,0.320888,0.666795,0.272155,0.078672,0.640841,0.424748,0.661211,0.48582,0.150077,0.088283,0.14382,0.096475,0.144225,0.436708,0.13171,0.401635,0.248501,0.497391,0.201477,0.425107,0.482788,0.473459,0.434079,0.388011,0.462214,0.417444,0.550013,0.511816,0.20522,0.184406,0.158034,0.152971,0.147367,0.703496,0.176212,0.687708,0.150751,0.731491,0.14641,0.139375,0.945336,0.716217,0.951831,0.733251,0.940315,0.7336,0.841783,0.941079,0.856564,0.93943,0.85375,0.959442,0.958494,0.418078,0.948052,0.41539,0.94808,0.39763,0.224515,0.941908,0.235965,0.941632,0.227549,0.960794,0.758632,0.388558,0.770584,0.380231,0.767017,0.387834,0.308763,0.854513,0.310828,0.873923,0.30161,0.87415,0.927226,0.938996,0.926641,0.95672,0.907491,0.953401,0.907517,0.940357,0.789269,0.398553,0.888662,0.285029,0.881612,0.257888,0.905947,0.268621,0.918349,0.296231,0.906388,0.2915,0.576723,0.292471,0.557338,0.28789,0.57885,0.264303,0.569832,0.30884,0.561705,0.270457,0.891968,0.187089,0.877798,0.191387,0.890579,0.163951,0.45523,0.811036,0.47876,0.791803,0.482531,0.835479,0.021886,0.033646,0.028196,0.009475,0.044189,0.023761,0.600522,0.913323,0.59976,0.929884,0.585455,0.920933,0.582312,0.908214,0.596848,0.897596,0.185667,0.867336,0.198481,0.840678,0.203361,0.901347,0.874334,0.163265,0.876546,0.102791,0.021831,0.150383,0.008489,0.141863,0.025772,0.131453,0.908101,0.033097,0.918686,0.076117,0.894984,0.070234,0.782142,0.904344,0.790998,0.905797,0.787193,0.91009,0.241047,0.83633,0.232086,0.888721,0.232638,0.839429,0.396338,0.89925,0.417673,0.880931,0.423482,0.896684,0.013871,0.544243,0.006955,0.574196,0.011299,0.523186,0.064264,0.034788,0.133233,0.042678,0.11001,0.077857,0.095838,0.062763,0.468658,0.879498,0.475892,0.867291,0.496887,0.863335,0.482061,0.836382,0.494172,0.835529,0.491352,0.844344,0.057864,0.020921,0.39273,0.882876,0.405023,0.878068,0.53173,0.958159,0.522756,0.946356,0.5318,0.944042,0.391536,0.871575,0.400843,0.872942,0.415094,0.909916,0.427117,0.903834,0.42827,0.910229,0.22363,0.890493,0.229478,0.846237,0.00943,0.507418,0.013868,0.463525,0.014534,0.511132,0.009656,0.460473,0.013996,0.447578,0.00901,0.455084,0.008937,0.451764,0.22515,0.833238,0.226641,0.838861,0.88798,0.87174,0.896849,0.872711,0.880443,0.87635,0.911529,0.74868,0.92963,0.747283,0.928795,0.763024,0.926804,0.798312,0.913945,0.793895,0.035131,0.875331,0.046126,0.873987,0.045769,0.925296,0.928005,0.384323,0.925318,0.359973,0.939117,0.364836,0.944881,0.391202,0.25745,0.83764,0.815424,0.85495,0.807385,0.903533,0.593943,0.86655,0.583458,0.853177,0.593611,0.81494,0.615127,0.862085,0.083341,0.05954,0.080327,0.090485,0.610462,0.809017,0.614484,0.824984,0.348529,0.899228,0.347726,0.91098,0.330266,0.907101,0.056267,0.085899,0.611545,0.883586,0.594022,0.877304,0.548879,0.29695,0.58464,0.330156,0.561886,0.318703,0.656371,0.281348,0.667032,0.316804,0.631382,0.308295,0.649332,0.255907,0.585443,0.252685,0.644715,0.238361,0.596427,0.311761,0.679422,0.328547,0.655158,0.223072,0.666449,0.197056,0.556732,0.2554,0.635664,0.225152,0.658643,0.331154,0.66347,0.34233,0.815619,0.432009,0.810487,0.442759,0.873625,0.21945,0.887009,0.223459,0.902021,0.236267,0.418003,0.195035,0.338797,0.23965,0.059812,0.260731,0.05817,0.230699,0.105882,0.184913,0.157085,0.225652,0.138475,0.327626,0.046741,0.277448,0.14013,0.148038,0.484093,0.248781,0.490552,0.213504,0.418971,0.320648,0.210203,0.263372,0.075291,0.194654,0.085756,0.162424,0.639183,0.048399,0.630147,0.006325,0.639425,0.005942,0.6529,0.012586,0.049579,0.220695,0.771103,0.879769,0.772105,0.898869,0.760105,0.891295,0.743703,0.874206,0.646199,0.20573,0.626375,0.180801,0.646965,0.181773,0.368661,0.310838,0.396819,0.31979,0.325344,0.308653,0.089962,0.14988,0.173509,0.908761,0.176469,0.914624,0.16119,0.911986,0.661783,0.899501,0.667147,0.88742,0.67182,0.898695,0.150516,0.892126,0.145912,0.860265,0.172514,0.86121,0.551109,0.853578,0.524079,0.854155,0.522368,0.813025,0.108393,0.737814,0.10655,0.750023,0.101275,0.775801,0.088558,0.774998,0.095152,0.714203,0.929847,0.599864,0.929825,0.571504,0.938804,0.577305,0.098452,0.687708,0.1066,0.711837,0.114748,0.735966,0.677331,0.863344,0.686996,0.842612,0.685655,0.872373,0.048973,0.799408,0.054909,0.838842,0.027701,0.78169,0.645704,0.136184,0.719821,0.140679,0.690434,0.14929,0.640356,0.155646,0.073343,0.840506,0.06666,0.811655,0.076469,0.81248,0.069264,0.867494,0.571361,0.39383,0.546655,0.367626,0.552973,0.361211,0.83187,0.441975,0.828844,0.364974,0.833956,0.361107,0.853467,0.883496,0.845358,0.884141,0.826422,0.837971,0.842516,0.823632,0.868695,0.449979,0.856885,0.420451,0.884431,0.428608,0.548726,0.870281,0.531329,0.888294,0.346896,0.334878,0.402481,0.340446,0.366623,0.34415,0.340747,0.348059,0.341591,0.341189,0.852195,0.853544,0.406913,0.347323,0.039777,0.766186,0.027736,0.729622,0.045763,0.703922,0.060085,0.728142,0.601171,0.190053,0.603602,0.162585,0.595894,0.214607,0.590503,0.185967,0.068645,0.717211,0.464633,0.774596,0.464341,0.74904,0.210471,0.944854,0.193104,0.937613,0.204428,0.929344,0.127275,0.07787,0.13369,0.064083,0.142659,0.070191,0.141171,0.086124,0.048278,0.481151,0.049358,0.546481,0.025552,0.530032,0.245033,0.242256,0.258619,0.210867,0.037452,0.582806,0.25394,0.134437,0.303347,0.435378,0.365854,0.412839,0.630927,0.84922,0.335001,0.864102,0.350233,0.87772,0.91445,0.437478,0.910134,0.45091,0.891586,0.448453,0.883203,0.67755,0.891329,0.653644,0.905537,0.667361,0.895676,0.683605,0.098816,0.081798,0.937906,0.665407,0.92329,0.681464,0.918037,0.639052,0.880159,0.620913,0.898559,0.630437,0.092701,0.360892,0.114542,0.138703,0.114591,0.114627,0.083782,0.11632,0.504201,0.743166,0.465234,0.717604,0.497339,0.704295,0.475144,0.681039,0.490923,0.673845,0.047058,0.14678,0.052291,0.187594,0.031766,0.182002,0.426118,0.923958,0.429114,0.943763,0.411575,0.946504,0.851812,0.817129,0.844463,0.816875,0.654203,0.944163,0.644172,0.941035,0.649515,0.913227,0.659344,0.91763,0.509439,0.774207,0.093514,0.840785,0.004596,0.438449,0.527142,0.542095,0.298555,0.222038,0.750305,0.607333,0.273825,0.199081,0.900033,0.714739,0.796166,0.551197,0.728898,0.323665,0.857512,0.596039,0.863303,0.609491,0.866586,0.708164,0.830354,0.780837,0.865746,0.664787,0.844461,0.68555,0.097089,0.659429,0.123249,0.673348,0.043048,0.620903,0.458081,0.590696,0.503491,0.563752,0.891912,0.38912,0.895709,0.408708,0.558441,0.904595,0.663759,0.546576,0.656476,0.518525,0.850828,0.575065,0.239589,0.473495,0.185615,0.386672,0.230659,0.399855,0.230108,0.430661,0.857806,0.62154,0.822558,0.632725,0.841576,0.96044,0.958819,0.400423,0.924853,0.461537,0.943839,0.470446,0.925778,0.481037,0.770311,0.390086,0.71646,0.114652,0.702441,0.099708,0.713675,0.095196,0.464834,0.843773,0.044561,0.052203,0.020559,0.059882,0.044101,0.006406,0.465494,0.864009,0.112151,0.907061,0.096184,0.91948,0.099807,0.909438,0.11472,0.92427,0.109319,0.938305,0.093515,0.929949,0.894996,0.104561,0.188175,0.902883,0.209524,0.890135,0.183883,0.832544,0.040357,0.08821,0.781203,0.856854,0.792355,0.853614,0.116257,0.024945,0.486552,0.877468,0.744911,0.940553,0.736147,0.912176,0.743736,0.914305,0.736029,0.937155,0.123728,0.018466,0.887283,0.920964,0.883531,0.916021,0.019845,0.924718,0.79812,0.923242,0.815265,0.918738,0.811497,0.94394,0.798717,0.947919,0.260023,0.882099,0.620012,0.2822,0.615803,0.330668,0.582899,0.229059,0.601968,0.222872,0.814891,0.416092,0.688666,0.073615,0.694686,0.040868,0.205824,0.318118,0.466845,0.318983,0.676224,0.096364,0.499611,0.28313,0.312659,0.326076,0.399785,0.329827,0.168606,0.895801,0.651891,0.893608,0.538108,0.804458,0.553278,0.831827,0.293855,0.307729,0.317667,0.250373,0.314936,0.302966,0.035221,0.243802,0.041002,0.279251,0.045281,0.255271,0.936407,0.612264,0.943048,0.612271,0.700666,0.156862,0.013979,0.653903,0.012154,0.671368,0.003355,0.662507,0.745334,0.893357,0.755099,0.901833,0.06711,0.692569,0.631486,0.207217,0.940247,0.898725,0.943247,0.877871,0.946721,0.894396,0.192768,0.917541,0.203182,0.916713,0.833627,0.581396,0.532552,0.2503,0.245775,0.304513,0.935471,0.630933,0.044078,0.323186,0.051566,0.363456,0.835603,0.50538,0.827852,0.483312,0.860791,0.497597,0.904902,0.567098,0.916937,0.603728,0.894703,0.595561,0.921854,0.578126,0.078877,0.15296,0.04923,0.118108,0.89259,0.614345,0.851758,0.525396,0.936097,0.320624,0.946806,0.339481,0.936399,0.348138,0.109426,0.807645,0.102746,0.811615,0.09034,0.804878,0.048091,0.100666,0.101809,0.868345,0.124703,0.86917,0.124742,0.896519,0.474048,0.490241,0.46152,0.525612,0.449769,0.49428,0.447589,0.458714,0.828755,0.608155,0.808296,0.632405,0.807961,0.607492,0.841252,0.553707,0.849543,0.594287,0.583924,0.894425,0.548827,0.897062,0.548786,0.85814,0.327026,0.709532,0.337785,0.788032,0.31203,0.805662,0.21804,0.605152,0.16047,0.525966,0.214283,0.553046,0.249951,0.648324,0.158779,0.655475,0.314491,0.644215,0.314702,0.591321,0.33867,0.621179,0.230356,0.522058,0.162224,0.494668,0.194084,0.499268,0.253157,0.568486,0.301432,0.524805,0.295106,0.613835,0.271174,0.559344,0.559526,0.713902,0.556624,0.685287,0.582787,0.705828,0.947007,0.487809,0.934294,0.470554,0.949004,0.461421,0.948944,0.514454,0.936062,0.496591,0.529489,0.702539,0.533914,0.677026,0.667796,0.912906,0.65203,0.945817,0.650349,0.918178,0.648667,0.890539,0.930399,0.366763,0.946766,0.345072,0.943757,0.374714,0.366354,0.838134,0.409462,0.818514,0.402914,0.8526,0.364076,0.848384,0.247664,0.703423,0.187293,0.721714,0.187644,0.685032,0.252372,0.662192,0.24596,0.805043,0.250427,0.842415,0.196482,0.844868,0.24271,0.729516,0.194813,0.745513,0.532187,0.627504,0.552115,0.603645,0.556077,0.651569,0.775609,0.026795,0.764055,0.015897,0.817816,0.003952,0.819101,0.043411,0.820543,0.084574,0.787535,0.038216,0.590238,0.52395,0.494282,0.526848,0.489736,0.475688,0.487434,0.444049,0.5406,0.487564,0.139413,0.510858,0.150659,0.493724,0.139078,0.614956,0.521692,0.621224,0.516976,0.631739,0.489844,0.541987,0.822447,0.338047,0.819619,0.263709,0.837064,0.282632,0.079564,0.81536,0.082722,0.778117,0.11564,0.801452,0.102541,0.822996,0.090035,0.833478,0.101637,0.78426,0.075583,0.74475,0.101469,0.757934,0.33042,0.879366,0.31559,0.882179,0.307334,0.853647,0.3109,0.905826,0.053314,0.822327,0.032372,0.837819,0.050478,0.796532,0.068867,0.788936,0.061166,0.849821,0.036698,0.866227,0.065564,0.832144,0.121963,0.757658,0.14687,0.840837,0.146367,0.813614,0.17694,0.83432,0.173967,0.799684,0.180602,0.814914,0.168511,0.782159,0.109272,0.664934,0.260962,0.627645,0.279579,0.6668,0.25993,0.666294,0.810341,0.283705,0.840809,0.399488,0.826873,0.396684,0.306549,0.495208,0.016048,0.709061,0.066365,0.654861,0.061113,0.727726,0.425061,0.516245,0.43257,0.480052,0.421175,0.536512,0.810427,0.244663,0.821513,0.190812,0.839018,0.175149,0.833257,0.15838,0.84791,0.184518,0.828107,0.236131,0.042957,0.592859,0.033304,0.515202,0.075088,0.526904,0.087175,0.630302,0.123614,0.540567,0.88828,0.057871,0.877131,0.129761,0.877027,0.061885,0.855664,0.044496,0.84874,0.093732,0.827863,0.101664,0.84086,0.003347,0.157701,0.718737,0.133608,0.775465,0.133456,0.665882,0.163993,0.905375,0.167699,0.880172,0.180603,0.88547,0.169762,0.929708,0.155703,0.931222,0.273257,0.766717,0.286651,0.77143,0.27222,0.790473,0.562156,0.774486,0.581862,0.756698,0.593511,0.802247,0.455225,0.856097,0.462695,0.902075,0.452561,0.901974,0.813686,0.562864,0.462476,0.622154,0.433887,0.576818,0.457265,0.69513,0.106557,0.841169,0.078899,0.855889,0.088476,0.895212,0.543524,0.805624,0.571607,0.825691,0.539102,0.832387,0.587089,0.851789,0.334045,0.830969,0.164073,0.612066,0.880558,0.2087,0.864937,0.281899,0.86616,0.227367,0.87945,0.168417,0.538786,0.727123,0.931311,0.396623,0.946779,0.402905,0.409147,0.783995,0.353044,0.834978,0.196503,0.769391,0.234189,0.76739,0.840617,0.340559,0.173591,0.857262,0.154143,0.860975,0.449643,0.954299,0.458648,0.963152,0.457714,0.976752,0.017443,0.761826,0.118349,0.645676,0.890088,0.009162,0.157027,0.664845,0.154795,0.874874,0.568747,0.762953,0.485297,0.863943,0.266056,0.711753,0.27706,0.71401,0.822947,0.531021,0.849068,0.465334,0.846601,0.415654,0.789179,0.424056,0.787735,0.488724,0.766352,0.429627,0.773279,0.3885,0.77547,0.338109,0.798382,0.35647,0.316237,0.933306,0.315885,0.917852,0.338669,0.927075,0.332003,0.948807,0.308737,0.948735,0.836136,0.647942,0.829653,0.694349,0.825106,0.661706,0.809705,0.692643,0.812644,0.646783,0.861135,0.870041,0.864005,0.816194,0.877093,0.821345,0.770854,0.587095,0.798929,0.466517,0.784597,0.586324,0.779201,0.235672,0.878654,0.738136,0.851127,0.822624,0.863132,0.729308,0.852272,0.649897,0.863043,0.643689,0.787761,0.664151,0.785525,0.136539,0.771207,0.133543,0.816525,0.871876,0.825359,0.792936,0.839411,0.791897,0.520386,0.96491,0.532374,0.952085,0.532415,0.967302,0.778591,0.416538,0.793309,0.395991,0.883124,0.864445,0.766435,0.24019,0.874427,0.643528,0.772006,0.679528,0.831769,0.872384,0.508353,0.960572,0.515644,0.942653,0.497586,0.699072,0.514731,0.665555,0.514777,0.697051,0.514823,0.728546,0.745017,0.840624,0.756598,0.845396,0.758232,0.872951,0.741999,0.872387,0.725965,0.859291,0.711949,0.841548,0.715122,0.810077,0.725671,0.819603,0.104888,0.92283,0.103114,0.904184,0.1247,0.908973,0.9563,0.184411,0.953385,0.170506,0.96665,0.169962,0.370199,0.313434,0.383309,0.214837,0.389693,0.34483,0.373574,0.004546,0.404067,0.011032,0.357587,0.34914,0.290526,0.084779,0.291642,0.340914,0.273762,0.295855,0.278104,0.008228,0.307229,0.086665,0.307647,0.301623,0.180144,0.271434,0.210844,0.169072,0.224731,0.382899,0.197235,0.470972,0.157743,0.414536,0.034352,0.403103,0.026297,0.090895,0.065172,0.116104,0.060562,0.420135,0.083656,0.333879,0.067973,0.025147,0.01888,0.015231,0.237963,0.460122,0.147761,0.477382,0.312019,0.017126,0.387253,0.419166,0.404017,0.412607,0.294092,0.452926,0.26535,0.452448,0.322989,0.452924,0.18959,0.068642,0.214803,0.018381,0.29556,0.469911,0.259844,0.469963,0.331276,0.469859,0.181535,0.040929,0.200238,0.007415,0.030162,0.437055,0.052614,0.470236,0.086274,0.491564,0.072009,0.503979,0.153468,0.040328,0.160643,0.081304,0.14101,0.071149,0.012837,0.471381,0.01133,0.440095,0.01615,0.502803,0.133424,0.039379,0.144674,0.008205,0.456092,0.836458,0.423856,0.814474,0.423855,0.78119,0.456091,0.781289,0.488326,0.781388,0.488327,0.814672,0.488328,0.847955,0.42487,0.73554,0.428635,0.70315,0.485076,0.703187,0.487013,0.738554,0.484466,0.773279,0.250773,0.888288,0.251606,0.921654,0.232973,0.921447,0.498523,0.72832,0.708776,0.873019,0.104503,0.940996,0.124742,0.945486,0.960879,0.196512,0.971605,0.18489,0.34819,0.036948,0.11416,0.044516,0.82568,0.119595,0.841772,0.125534,0.82872,0.150987,0.81105,0.126367,0.590983,0.925319,0.58716,0.941577,0.565649,0.920013,0.578079,0.905871,0.295312,0.010037,0.370568,0.426038,0.339242,0.00575,0.252726,0.852388,0.233808,0.858064,0.423857,0.847757,0.428409,0.767966,0.231108,0.889714,0.738355,0.336961,0.756254,0.393514,0.724112,0.385677,0.696272,0.369924,0.71116,0.299196,0.407742,0.765398,0.40947,0.776692,0.387856,0.776857,0.384878,0.764534,0.362372,0.765273,0.367418,0.662704,0.65675,0.022382,0.685778,0.003347,0.686689,0.015125,0.64454,0.143947,0.626607,0.037337,0.732654,0.006371,0.755284,0.009854,0.719277,0.156981,0.709644,0.013261,0.392027,0.563408,0.380581,0.439131,0.686231,0.401435,0.663376,0.404868,0.640025,0.40018,0.652002,0.799859,0.634506,0.801574,0.627097,0.427053,0.648553,0.422528,0.660203,0.468007,0.629766,0.844013,0.629034,0.813036,0.650288,0.827955,0.671274,0.847173,0.671218,0.883845,0.050189,0.89617,0.068872,0.896193,0.068895,0.919419,0.050212,0.919396,0.031528,0.919374,0.031505,0.896147,0.031482,0.872921,0.388992,0.689553,0.670326,0.42326,0.669022,0.795204,0.648925,0.878997,0.406793,0.445407,0.060898,0.872957,0.742887,0.789754,0.755564,0.788427,0.749519,0.801917,0.730988,0.803383,0.743172,0.658606,0.746706,0.890461,0.719427,0.8998,0.719402,0.879782,0.738841,0.919784,0.719451,0.919818,0.726194,0.453488,0.698609,0.45781,0.701882,0.422874,0.430702,0.430776,0.419353,0.397247,0.449943,0.409729,0.476686,0.408051,0.462895,0.438661,0.492558,0.274605,0.514319,0.28518,0.515393,0.422502,0.730133,0.789739,0.599142,0.075864,0.585989,0.287322,0.588868,0.019092,0.515554,0.037872,0.530075,0.115359,0.491942,0.020032,0.750937,0.432275,0.42734,0.010622,0.44602,0.026848,0.459801,0.340115,0.567186,0.327498,0.94096,0.835775,0.951098,0.844205,0.951079,0.858647,0.541944,0.025476,0.492304,0.423911,0.447805,0.010078,0.599479,0.00825,0.615878,0.010726,0.758232,0.919749,0.725148,0.41958,0.517916,0.012728,0.579001,0.421333,0.586761,0.396064,0.612407,0.402192,0.559951,0.395093,0.417241,0.0177,0.932475,0.860961,0.924174,0.840871,0.658201,0.976113,0.650254,0.976112,0.653155,0.960571,0.659991,0.952812,0.67012,0.95899,0.246212,0.971713,0.233241,0.98512,0.233362,0.968618,0.704836,0.936663,0.684946,0.949076,0.685731,0.928547,0.019375,0.643649,0.007774,0.646271,0.015679,0.63068,0.667992,0.966924,0.680198,0.437314,0.679805,0.423489,0.687424,0.432544,0.929891,0.672863,0.925273,0.668963,0.935368,0.662275,0.898187,0.526917,0.907037,0.526002,0.907356,0.534058,0.704468,0.926537,0.687749,0.918296,0.248493,0.98637,0.932407,0.641841,0.946686,0.641201,0.948889,0.660785,0.700873,0.946941,0.615121,0.96956,0.618901,0.984942,0.604371,0.98376,0.957479,0.288103,0.96954,0.290924,0.955963,0.2951,0.516699,0.993595,0.51282,0.974965,0.518926,0.977747,0.529267,0.986826,0.985661,0.512367,0.981408,0.502058,0.985832,0.497367,0.993901,0.508737,0.984919,0.616558,0.993044,0.615184,0.992763,0.628218,0.602967,0.969467,0.968786,0.282648,0.957479,0.279488,0.529863,0.976709,0.992575,0.494504,0.983938,0.62893,0.55765,0.9893,0.545621,0.977597,0.555896,0.967237,0.549002,0.986197,0.546617,0.963295,0.963521,0.818621,0.968749,0.787722,0.969837,0.80309,0.958107,0.786171,0.936752,0.452691,0.934277,0.420292,0.947659,0.433791,0.950355,0.451369,0.955643,0.375665,0.964964,0.371271,0.967473,0.399857,0.633602,0.958433,0.639685,0.955231,0.638849,0.971315,0.977323,0.063231,0.9792,0.084271,0.967604,0.071311,0.61524,0.672595,0.606893,0.666723,0.611142,0.635922,0.60188,0.642049,0.954765,0.820163,0.952414,0.781017,0.946615,0.419216,0.957384,0.400023,0.956682,0.368146,0.969111,0.082818,0.966563,0.061906,0.855392,0.120245,0.866768,0.149625,0.852274,0.129629,0.390605,0.937783,0.395746,0.937221,0.393377,0.947124,0.404541,0.948533,0.388706,0.965184,0.062039,0.95278,0.053584,0.95726,0.055163,0.928132,0.962439,0.836955,0.974971,0.837001,0.972787,0.85979,0.970358,0.831856,0.776366,0.111419,0.786238,0.097751,0.787278,0.119789,0.772799,0.117678,0.764203,0.108829,0.939423,0.027639,0.91576,0.033839,0.939396,0.018096,0.855723,0.144983,0.865724,0.119324,0.407913,0.941499,0.048924,0.927122,0.064483,0.929163,0.960757,0.854037,0.964252,0.861687,0.768448,0.100111,0.911256,0.00765,0.955608,0.98609,0.964557,0.973714,0.968889,0.986972,0.951737,0.992867,0.897244,0.970093,0.910326,0.946643,0.910608,0.966117,0.982686,0.696632,0.992654,0.701308,0.983501,0.71396,0.993655,0.714296,0.730582,0.9724,0.718717,0.991309,0.72,0.974228,0.964499,0.436391,0.976552,0.453022,0.965394,0.448161,0.972981,0.430215,0.840687,0.960765,0.840743,0.976741,0.824365,0.961404,0.826372,0.975318,0.952769,0.974748,0.896627,0.94872,0.730383,0.992332,0.962692,0.424173,0.245146,0.956184,0.230786,0.956999,0.242508,0.932494,0.25279,0.943651,0.992471,0.361836,0.988453,0.362566,0.982518,0.35198,0.176601,0.952344,0.176102,0.965942,0.161921,0.965337,0.089132,0.961159,0.081073,0.970827,0.082921,0.953304,0.990117,0.307093,0.981711,0.305261,0.99004,0.297103,0.089283,0.976751,0.981593,0.165878,0.980042,0.144549,0.991306,0.161114,0.98927,0.146267,0.253153,0.933365,0.228327,0.938087,0.985193,0.28432,0.983305,0.292303,0.979004,0.288027,0.992163,0.348809,0.161963,0.946196,0.090432,0.95325,0.357686,0.93689,0.362161,0.963123,0.354702,0.961235,0.462301,0.922797,0.477603,0.923437,0.460924,0.940328,0.486895,0.940978,0.966636,0.101666,0.974443,0.09717,0.968949,0.126927,0.989131,0.377082,0.990866,0.401991,0.982119,0.39855,0.982359,0.374668,0.374154,0.938983,0.13697,0.623991,0.146209,0.626297,0.136498,0.643696,0.144234,0.652215,0.459395,0.913338,0.471052,0.910199,0.682408,0.607393,0.683206,0.615261,0.678014,0.607146,0.977586,0.113497,0.991862,0.385798,0.990773,0.253544,0.987734,0.266723,0.981333,0.265146,0.97947,0.533938,0.97683,0.525534,0.984612,0.52683,0.979989,0.246312,0.806906,0.972329,0.808425,0.958516,0.812592,0.968625,0.81351,0.957611,0.889004,0.978806,0.889871,0.990479,0.881087,0.993373,0.986364,0.533531,0.684614,0.577498,0.681119,0.568575,0.685382,0.567438,0.678281,0.577882,0.680335,0.513237,0.680113,0.499657,0.685235,0.511388,0.911964,0.306112,0.915841,0.355171,0.895525,0.35526,0.896639,0.304039,0.879281,0.465661,0.892132,0.509305,0.864774,0.50844,0.86487,0.417859,0.890307,0.420112,0.902135,0.744501,0.891336,0.739899,0.891169,0.644524,0.904408,0.643766,0.917724,0.644857,0.917781,0.739139,0.790381,0.6985,0.765767,0.793125,0.769206,0.696575,0.77689,0.797877,0.788925,0.744301,0.288766,0.952238,0.276647,0.956116,0.263486,0.951098,0.268062,0.923333,0.28976,0.92356,0.918149,0.749224,0.7942,0.936777,0.771736,0.943097,0.779429,0.927411,0.897956,0.398457,0.919891,0.39764,0.796168,0.793792,0.779127,0.958147,0.797952,0.957352,0.268829,0.911915,0.265657,0.870316,0.284402,0.864505,0.877519,0.628112,0.864003,0.532363,0.885192,0.583365,0.89104,0.625496,0.861161,0.627361,0.886854,0.529518,0.794864,0.865349,0.775578,0.910764,0.771427,0.814982,0.785322,0.9139,0.797492,0.914658,0.515253,0.754489,0.532065,0.755091,0.526168,0.805355,0.511158,0.853227,0.508108,0.804311,0.531798,0.852173,0.792349,0.816952,0.795316,0.810029,0.195954,0.946162,0.205785,0.934205,0.21854,0.933553,0.866056,0.523363,0.2838,0.983885,0.26923,0.983146,0.275254,0.962972,0.289799,0.969246,0.288323,0.911707,0.281749,0.816904,0.266547,0.816135,0.502023,0.756809,0.21853,0.954104,0.19961,0.96238,0.697076,0.815005,0.695828,0.871156,0.682332,0.863608,0.910985,0.218491,0.893098,0.266311,0.893295,0.169941,0.013907,0.565246,0.006903,0.613928,0.008223,0.519185,0.024736,0.519552,0.024746,0.616547,0.896274,0.85681,0.912027,0.798272,0.915823,0.857484,0.895894,0.760285,0.917026,0.760821,0.910586,0.1684,0.893425,0.162451,0.110973,0.955519,0.124734,0.958888,0.118771,0.977019,0.103676,0.969406,0.680639,0.907494,0.914223,0.264309,0.696163,0.908606,0.019305,0.947901,0.010582,0.971917,0.003763,0.953679,0.024745,0.9689,0.009971,0.62132,0.6806,0.813975,0.912666,0.125721,0.910355,0.046969,0.926086,0.047807,0.926494,0.124369,0.927721,0.083149,0.903457,0.546974,0.913336,0.629331,0.902384,0.591684,0.606567,0.856176,0.62182,0.816671,0.620045,0.862539,0.907669,0.511515,0.899861,0.507797,0.903417,0.47282,0.905692,0.428694,0.923845,0.429148,0.922793,0.50864,0.898296,0.628983,0.705219,0.970019,0.698748,0.958355,0.70831,0.957604,0.60678,0.8203,0.607723,0.813409,0.374754,0.980511,0.371564,0.994554,0.357792,0.993926,0.921892,0.549038,0.613899,0.900476,0.60228,0.898838,0.689183,0.965272,0.698751,0.982699,0.35775,0.976973,0.931993,0.2652,0.930106,0.240298,0.9418,0.209415,0.909521,0.906562,0.915065,0.932461,0.904304,0.934648,0.896814,0.874026,0.913811,0.875576,0.014755,0.937568,0.004792,0.935509,0.008871,0.876136,0.024466,0.876676,0.024615,0.936487,0.527093,0.871056,0.514199,0.931908,0.50798,0.869385,0.058949,0.978733,0.068879,0.980791,0.064342,0.996616,0.048962,0.996653,0.946372,0.264734,0.92643,0.209971,0.891159,0.934263,0.530705,0.930276,0.198669,0.978964,0.217323,0.974201,0.202902,0.993162,0.208609,0.969731,0.218514,0.992659,0.049008,0.980393,0.941471,0.716941,0.94044,0.745436,0.92522,0.746832,0.929921,0.688248,0.372658,0.924037,0.355315,0.924551,0.356029,0.865065,0.376677,0.863761,0.939336,0.760347,0.924231,0.819641,0.924362,0.759839,0.398756,0.863426,0.409366,0.86524,0.404884,0.896887,0.408809,0.923913,0.393343,0.926125,0.437515,0.985635,0.435244,0.995529,0.42247,0.996328,0.939702,0.816584,0.939592,0.822595,0.945795,0.689049,0.388249,0.862528,0.383896,0.922867,0.422479,0.984323,0.437025,0.975914,0.857771,0.975077,0.871848,0.960832,0.873632,0.975352,0.852096,0.957064,0.940728,0.192384,0.926715,0.193187,0.928457,0.166534,0.867812,0.886804,0.865108,0.938935,0.853154,0.911359,0.850322,0.937259,0.933102,0.335254,0.929056,0.313424,0.942738,0.312866,0.839405,0.94601,0.820132,0.94593,0.823026,0.921851,0.934587,0.284377,0.39492,0.992712,0.399609,0.973461,0.409458,0.986665,0.837302,0.923195,0.827429,0.895987,0.936819,0.141902,0.943798,0.166299,0.87009,0.911358,0.946824,0.335726,0.850199,0.885264,0.980714,0.974467,0.993725,0.977025,0.982504,0.993318,0.927361,0.288148,0.947163,0.287501,0.389778,0.973236,0.953451,0.028867,0.965774,0.026588,0.966846,0.046336,0.952168,0.008205,0.94764,0.55253,0.952009,0.570865,0.930695,0.569375,0.95064,0.530165,0.54425,0.945882,0.557345,0.928005,0.556327,0.949116,0.945046,0.626537,0.932107,0.629491,0.932594,0.606318,0.944254,0.573305,0.980464,0.181091,0.990479,0.197713,0.978316,0.198316,0.996414,0.180703,0.540605,0.952169,0.966722,0.006752,0.953345,0.045701,0.929743,0.531747,0.933094,0.550383,0.937486,0.528927,0.552669,0.907477,0.94155,0.588923,0.950725,0.049979,0.929844,0.585496,0.950979,0.585841,0.942186,0.077079,0.950279,0.059369,0.95514,0.077325,0.937007,0.061968,0.98992,0.728175,0.982958,0.748478,0.978588,0.728701,0.753019,0.930243,0.739411,0.966828,0.739389,0.930201,0.617687,0.730106,0.617553,0.765823,0.605372,0.729813,0.953305,0.909693,0.954168,0.872565,0.968667,0.874049,0.967624,0.909662,0.896948,0.276836,0.908292,0.2792,0.904365,0.292246,0.892993,0.288696,0.993366,0.74762,0.754334,0.966043,0.754192,0.949113,0.606251,0.765343,0.348415,0.508808,0.347935,0.497051,0.351951,0.505069,0.915269,0.149857,0.901729,0.144688,0.911533,0.136752,0.903073,0.15494,0.956632,0.746475,0.970544,0.710387,0.971505,0.745082,0.966745,0.687584,0.964772,0.699717,0.953089,0.697209,0.956005,0.68269,0.007569,0.826471,0.016455,0.792006,0.019696,0.827548,0.961715,0.770852,0.95778,0.757265,0.967525,0.758777,0.082083,0.906605,0.091686,0.930197,0.079577,0.939383,0.004736,0.791805,0.950251,0.922811,0.959467,0.923021,0.953219,0.959926,0.967365,0.960588,0.955091,0.710903,0.6038,0.610252,0.616749,0.587866,0.610674,0.624508,0.940807,0.126736,0.940798,0.088218,0.95354,0.110088,0.955952,0.087575,0.612436,0.534956,0.600351,0.573697,0.600443,0.53492,0.608535,0.57448,0.616732,0.574563,0.605055,0.954789,0.602073,0.913703,0.613646,0.914102,0.621904,0.915923,0.620602,0.954537,0.747327,0.978939,0.753748,0.995475,0.741748,0.992592,0.758227,0.980991,0.885183,0.139599,0.893419,0.139358,0.893408,0.153908,0.957366,0.127674,0.603327,0.588459,0.881624,0.15424,0.876946,0.141544,0.678379,0.63149,0.685052,0.629901,0.678277,0.64153,0.148727,0.96237,0.15239,0.972362,0.138964,0.973015,0.139539,0.944259,0.151313,0.945586,0.349013,0.435507,0.35139,0.464195,0.344699,0.464626,0.728663,0.930165,0.731223,0.958513,0.719802,0.959284,0.983859,0.572567,0.986615,0.559327,0.996651,0.562909,0.995974,0.574873,0.960203,0.347656,0.966924,0.348705,0.959595,0.359823,0.993327,0.485159,0.983456,0.485378,0.986464,0.467358,0.338168,0.435057,0.338006,0.464672,0.715901,0.92829,0.953479,0.349231,0.987162,0.90124,0.980255,0.90735,0.975822,0.885476,0.989678,0.762732,0.984438,0.78453,0.977723,0.760917,0.924581,0.97595,0.928765,0.95153,0.934758,0.962336,0.612592,0.80427,0.608389,0.805256,0.600907,0.779263,0.934412,0.9518,0.96495,0.149141,0.953392,0.148443,0.957725,0.136766,0.968463,0.136831,0.987855,0.885525,0.614525,0.779927,0.937676,0.977481,0.961745,0.659765,0.959578,0.643725,0.973147,0.643215,0.965966,0.669494,0.971895,0.603552,0.971064,0.6308,0.966685,0.631057,0.955537,0.334516,0.957783,0.303293,0.961561,0.304968,0.808164,0.101992,0.809351,0.091295,0.820536,0.095655,0.820543,0.107665,0.968643,0.48264,0.964196,0.512378,0.955787,0.482038,0.959409,0.60171,0.968569,0.33373,0.346769,0.565094,0.350766,0.564186,0.348564,0.568615,0.980327,0.796223,0.990691,0.795357,0.983496,0.821661,0.324821,0.959497,0.338409,0.958784,0.334773,0.971577,0.013529,0.838975,0.019936,0.860676,0.009264,0.839418,0.013797,0.862695,0.972425,0.545109,0.974377,0.573217,0.962499,0.569932,0.327901,0.982641,0.334154,0.983291,0.349493,0.589031,0.350916,0.593114,0.346942,0.592811,0.959018,0.575408,0.980022,0.809977,0.005176,0.863398,0.966824,0.544803,0.176387,0.978539,0.176745,0.992555,0.165513,0.982902,0.165497,0.994565,0.632036,0.914284,0.629079,0.893329,0.636138,0.914114,0.639085,0.94277,0.630539,0.943643,0.634702,0.923773,0.956357,0.208087,0.963411,0.216231,0.953361,0.218589,0.638837,0.893606,0.986613,0.673155,0.982537,0.653925,0.993991,0.654193,0.990331,0.235621,0.978568,0.234687,0.988581,0.214175,0.983889,0.212385,0.965754,0.20501,0.433071,0.966197,0.421713,0.96564,0.424095,0.933844,0.428648,0.917326,0.41636,0.914851,0.420224,0.886098,0.421609,0.861003,0.438833,0.864706,0.943088,0.873423,0.941872,0.909572,0.927239,0.909041,0.933771,0.939499,0.922334,0.936709,0.213551,0.854946,0.21285,0.888445,0.200638,0.887999,0.312345,0.967718,0.297216,0.966457,0.300151,0.956592,0.210285,0.919976,0.193029,0.923133,0.575568,0.952658,0.585307,0.954472,0.575534,0.974245,0.92706,0.874203,0.193098,0.857099,0.680767,0.474772,0.685727,0.481147,0.680584,0.491953,0.301119,0.978798,0.314461,0.983631,0.440798,0.93488,0.98058,0.945173,0.988101,0.922859,0.992889,0.934976,0.975555,0.936783,0.976724,0.020449,0.985806,0.0444,0.975196,0.046582,0.48024,0.979501,0.471583,0.952547,0.481556,0.953139,0.791017,0.966869,0.783972,0.98885,0.786405,0.966846,0.797904,0.988738,0.903491,0.978326,0.914636,0.987332,0.911776,0.994489,0.902318,0.988895,0.678028,0.657504,0.686377,0.648514,0.686805,0.657301,0.67798,0.588356,0.685671,0.586929,0.678364,0.598835,0.981983,0.019968,0.488103,0.955857,0.679389,0.673285,0.682153,0.666998,0.683703,0.672137,0.988951,0.04924,0.990571,0.318284,0.993454,0.338378,0.981006,0.337937,0.604224,0.716436,0.613794,0.687788,0.617544,0.7174,0.144377,0.877413,0.144647,0.910761,0.132514,0.909601,0.993763,0.589486,0.992236,0.603045,0.981763,0.598753,0.981761,0.586045,0.993241,0.850573,0.982779,0.85973,0.982775,0.846735,0.991909,0.858688,0.978817,0.31872,0.600364,0.684433,0.954431,0.229452,0.967691,0.229949,0.953379,0.266402,0.961666,0.26556,0.969917,0.263754,0.13242,0.875893,0.991911,0.843423,0.80994,0.981019,0.825574,0.970755,0.813727,0.992527,0.617,0.81372,0.602624,0.814635,0.611184,0.792066,0.60872,0.82837,0.621514,0.828066,0.619329,0.839702,0.31236,0.986132,0.295111,0.986942,0.302873,0.964371,0.619363,0.790697,0.621669,0.851156,0.614156,0.850606,0.961165,0.022328,0.94863,0.027653,0.957164,0.00351,0.941976,0.009192,0.809514,0.969533,0.244008,0.902341,0.248467,0.922567,0.241094,0.922172,0.244586,0.951064,0.24006,0.947757,0.239114,0.932056,0.975583,0.985242,0.978657,0.99134,0.971891,0.992051,0.239904,0.905497,0.989506,0.559228,0.982584,0.558957,0.983606,0.540962,0.246783,0.931162,0.987448,0.617524,0.982076,0.617143,0.985064,0.608728,0.976367,0.481375,0.973611,0.472049,0.982719,0.471216,0.986404,0.892104,0.976635,0.89427,0.986671,0.877148,0.434092,0.844214,0.430487,0.863938,0.426927,0.844719,0.972743,0.785718,0.98008,0.786375,0.974761,0.797392,0.981114,0.181091,0.989641,0.178977,0.9856,0.18898,0.983923,0.491053,0.973845,0.491365,0.984495,0.627279,0.435807,0.864284,0.943094,0.98789,0.940605,0.971385,0.942907,0.969601,0.076245,0.986785,0.076278,0.995399,0.068701,0.992139,0.28385,0.971792,0.281412,0.989994,0.276622,0.972002,0.963814,0.988813,0.956114,0.98762,0.959559,0.969648,0.653358,0.991267,0.658742,0.974008,0.657814,0.992886,0.651066,0.974699,0.982083,0.848722,0.979616,0.840267,0.986356,0.839874,0.987118,0.131128,0.978402,0.12247,0.976766,0.112451,0.974149,0.736094,0.976095,0.725035,0.982314,0.729388,0.972522,0.180421,0.971305,0.188998,0.963404,0.185726,0.42689,0.874063,0.43554,0.872055,0.432887,0.874522,0.979244,0.858625,0.986604,0.858451,0.977343,0.130485,0.428501,0.893641,0.435741,0.89387,0.971688,0.026927,0.971259,0.017165,0.975632,0.007189,0.980173,0.026564,0.986769,0.111774,0.993383,0.009292,0.996765,0.027589,0.989561,0.027671,0.989067,0.011923,0.256736,0.972827,0.26415,0.97211,0.260148,0.991569,0.239056,0.959723,0.246468,0.960274,0.242663,0.977164,0.256944,0.988257,0.10393,0.990656,0.096854,0.992006,0.096746,0.983642,0.438288,0.976216,0.436585,0.969993,0.444701,0.969324,0.944892,0.736961,0.93697,0.737289,0.939821,0.731615,0.952945,0.18738,0.947317,0.17968,0.953692,0.17951,0.522854,0.995102,0.522052,0.979796,0.529473,0.979759,0.5069,0.792912,0.514999,0.792453,0.510288,0.80229,0.542306,0.983916,0.547364,0.985185,0.543996,0.993514,0.537257,0.990316,0.946979,0.723161,0.936747,0.723897,0.528902,0.994451,0.439312,0.983893,0.447838,0.983547,0.557298,0.995019,0.562794,0.983197,0.564046,0.994641,0.839489,0.266473,0.830509,0.26603,0.838616,0.255583,0.050136,0.988589,0.058907,0.987881,0.052423,0.994998,0.964352,0.725523,0.960149,0.737547,0.954723,0.725681,0.866855,0.013099,0.866266,0.017904,0.862298,0.014905,0.847669,0.010654,0.844918,0.00646,0.852564,0.005045,0.503664,0.991318,0.508458,0.979429,0.508572,0.991912,0.846175,0.01765,0.670142,0.984774,0.677477,0.984463,0.673019,0.993776,0.500787,0.993767,0.8765,0.534777,0.878424,0.542962,0.875415,0.539603,0.501685,0.979702,0.367959,0.930898,0.374149,0.938053,0.366514,0.937175,0.86884,0.265233,0.866083,0.268253,0.867466,0.262266,0.854811,0.016993,0.374519,0.926344,0.961071,0.113537,0.965974,0.136278,0.956613,0.137412,0.947117,0.138575,0.943811,0.116208,0.928359,0.519976,0.94128,0.500041,0.944733,0.520176,0.951563,0.959627,0.945483,0.935556,0.958535,0.939553,0.962344,0.226081,0.964489,0.246936,0.947973,0.249826,0.950158,0.227032,0.638878,0.978248,0.615977,0.985598,0.622843,0.965167,0.641465,0.965129,0.633394,0.991373,0.988959,0.659887,0.985845,0.677727,0.970595,0.667064,0.964077,0.252729,0.924222,0.501009,0.961496,0.204183,0.942086,0.205313,0.939287,0.957262,0.964,0.958943,0.968584,0.157613,0.953058,0.166284,0.939252,0.479056,0.919421,0.474575,0.957115,0.913412,0.982201,0.650835,0.939219,0.906487,0.939147,0.473313,0.88084,0.43388,0.886288,0.461595,0.880572,0.465888,0.875443,0.433749,0.978178,0.144781,0.987843,0.14602,0.980068,0.169379,0.049708,0.839878,0.047889,0.811545,0.05817,0.810921,0.839253,0.984496,0.837992,0.995385,0.833875,0.987078,0.05738,0.840819,0.046114,0.847057,0.974824,0.169911,0.873178,0.46534,0.505949,0.705664,0.496713,0.704429,0.498823,0.671491,0.509297,0.675393,0.842124,0.990879,0.803997,0.005693,0.816889,0.015373,0.807442,0.017239,0.812141,0.003307,0.37398,0.882451,0.376716,0.910964,0.366566,0.912395,0.363794,0.88335,0.122233,0.985587,0.120322,0.995259,0.116204,0.991127,0.116219,0.984214,0.815071,0.255004,0.823712,0.261254,0.820713,0.268168,0.809963,0.26215,0.790569,0.125619,0.795785,0.126471,0.795482,0.158985,0.506596,0.629105,0.497934,0.659937,0.496403,0.626302,0.508291,0.6604,0.803665,0.154293,0.98507,0.200036,0.975399,0.224753,0.974856,0.198455,0.981712,0.223622,0.414463,0.955769,0.392251,0.977151,0.398516,0.947264,0.927782,0.964535,0.926312,0.979308,0.910134,0.981453,0.907438,0.964123,0.904741,0.946794,0.926673,0.949097,0.83601,0.94726,0.850315,0.950944,0.837241,0.961865,0.860332,0.961717,0.863721,0.950852,0.887322,0.494554,0.890846,0.480199,0.907315,0.482746,0.907929,0.501128,0.413364,0.978879,0.892139,0.506718,0.538153,0.967362,0.558957,0.945922,0.560679,0.959298,0.558956,0.972969,0.537322,0.944021,0.371524,0.979728,0.382723,0.963357,0.385442,0.97936,0.36981,0.954649,0.382677,0.947283,0.84289,0.974576,0.863717,0.972457,0.98971,0.322019,0.968549,0.340997,0.974086,0.314614,0.229096,0.965632,0.228618,0.988281,0.211187,0.983836,0.207372,0.959075,0.18628,0.983124,0.185331,0.959081,0.199275,0.965256,0.176167,0.982116,0.15252,0.968302,0.173076,0.965198,0.989181,0.343472,0.970135,0.824679,0.990948,0.81012,0.99068,0.83057,0.969292,0.803798,0.201249,0.987717,0.157632,0.987364,0.769345,0.982442,0.766263,0.964778,0.786155,0.977938,0.779935,0.959491,0.954773,0.491262,0.966283,0.471921,0.959686,0.492219,0.98162,0.944914,0.98288,0.970119,0.974589,0.969873,0.974102,0.94664,0.537334,0.880326,0.544763,0.878895,0.54476,0.885546,0.927159,0.049762,0.926412,0.020382,0.935029,0.025186,0.989319,0.98496,0.995579,0.985974,0.992837,0.993692,0.987302,0.992384,0.971868,0.978374,0.852673,0.265032,0.851768,0.254549,0.859802,0.265026,0.537596,0.890025,0.956436,0.471177,0.922374,0.02427,0.934617,0.050546,0.837532,0.013667,0.826348,0.014344,0.832892,0.003459,0.135997,0.983478,0.130666,0.984089,0.133256,0.963409,0.863611,0.991419,0.855567,0.993242,0.855818,0.984036,0.863721,0.984757,0.144012,0.964001,0.98143,0.929289,0.971897,0.934645,0.974375,0.905983,0.654527,0.964947,0.649799,0.937362,0.660389,0.940186,0.940717,0.636543,0.940457,0.643801,0.934401,0.641763,0.981968,0.904011,0.792702,0.116261,0.798103,0.103908,0.803969,0.11193,0.790223,0.105299,0.847599,0.723747,0.84217,0.77362,0.836154,0.729601,0.843334,0.479577,0.834906,0.436646,0.856354,0.435675,0.858524,0.465139,0.010526,0.834446,0.024439,0.803923,0.033903,0.835753,0.849957,0.828524,0.834608,0.827201,0.160206,0.870541,0.140429,0.870996,0.144101,0.806889,0.168081,0.808536,0.860441,0.527239,0.84407,0.534808,0.006924,0.788392,0.00324,0.73453,0.016322,0.737373,0.029108,0.743804,0.109358,0.961432,0.094282,0.96839,0.094243,0.945373,0.124446,0.961397,0.115944,0.97751,0.97729,0.444721,0.971903,0.429239,0.989291,0.427419,0.97729,0.460767,0.96529,0.462024,0.96529,0.445977,0.865512,0.819332,0.865546,0.831938,0.861984,0.768847,0.863919,0.725894,0.147321,0.899166,0.167849,0.898846,0.835056,0.530397,0.112282,0.945331,0.989291,0.452801,0.909275,0.76869,0.905865,0.724499,0.919432,0.722472,0.886067,0.278027,0.899014,0.279363,0.897093,0.331023,0.860912,0.844162,0.857167,0.937926,0.850184,0.938354,0.899462,0.52545,0.912377,0.532086,0.91093,0.576357,0.910859,0.627579,0.894435,0.584568,0.886369,0.530335,0.052269,0.855376,0.059504,0.85677,0.053642,0.87135,0.045023,0.862863,0.045033,0.853912,0.974595,0.704151,0.976791,0.687023,0.994349,0.687354,0.886265,0.51657,0.891851,0.23403,0.883816,0.237379,0.89767,0.626085,0.877022,0.331785,0.841389,0.842615,0.913344,0.824093,0.904372,0.819394,0.929705,0.814886,0.994348,0.707657,0.982458,0.714725,0.883908,0.344986,0.90284,0.344072,0.486931,0.981492,0.464235,0.984488,0.467474,0.963109,0.486561,0.959874,0.989047,0.098448,0.970177,0.074762,0.991094,0.078578,0.974749,0.245463,0.974737,0.231689,0.988542,0.232169,0.871647,0.957803,0.891575,0.964419,0.872135,0.977558,0.888781,0.981858,0.056591,0.950143,0.063522,0.976566,0.050711,0.977071,0.971044,0.09789,0.333668,0.992298,0.353258,0.979039,0.354613,0.989834,0.332019,0.970125,0.35481,0.96735,0.989891,0.253345,0.976031,0.259281,0.074178,0.969021,0.072998,0.95258,0.882819,0.123984,0.89528,0.122325,0.893956,0.165729,0.888224,0.169219,0.880408,0.16845,0.928465,0.237077,0.934337,0.327851,0.918137,0.336874,0.913701,0.238317,0.913806,0.282725,0.892246,0.061395,0.900704,0.070998,0.938987,0.624748,0.920784,0.531986,0.930095,0.530487,0.5196,0.818863,0.511906,0.874228,0.504467,0.823126,0.529977,0.827858,0.529344,0.920406,0.981204,0.759548,0.975513,0.745501,0.993047,0.74668,0.993082,0.760346,0.983609,0.773374,0.969339,0.763596,0.50442,0.809728,0.874857,0.072349,0.874794,0.05916,0.515521,0.918764,0.919563,0.624634,0.909006,0.332464,0.141516,0.795537,0.139922,0.777888,0.14982,0.79135,0.135497,0.786572,0.149832,0.775792,0.917183,0.9042,0.92514,0.90465,0.920941,0.938801,0.911733,0.938831,0.814077,0.872165,0.813772,0.957908,0.803692,0.873008,0.930182,0.852075,0.82717,0.957381,0.947766,0.364436,0.958701,0.445271,0.942482,0.453784,0.93335,0.448861,0.934915,0.366435,0.023849,0.948115,0.035205,0.862287,0.031585,0.947794,0.928829,0.186189,0.941203,0.179612,0.941207,0.193228,0.930642,0.177764,0.980928,0.049296,0.975345,0.035301,0.993343,0.036498,0.993337,0.050121,0.993332,0.063744,0.968518,0.048471,0.91788,0.843759,0.904381,0.853416,0.90431,0.839991,0.932058,0.838551,0.80041,0.95709,0.020078,0.853655,0.009267,0.86064,0.933296,0.194001,0.978256,0.062742,0.913454,0.425993,0.910389,0.460478,0.904121,0.43269,0.906307,0.371718,0.920695,0.361677,0.891972,0.849991,0.897483,0.935995,0.881171,0.942865,0.921756,0.080224,0.934522,0.083554,0.934507,0.169188,0.915707,0.132573,0.909386,0.069836,0.179664,0.881266,0.191191,0.882677,0.184465,0.900077,0.982256,0.289441,0.975489,0.26657,0.992934,0.280258,0.967874,0.284286,0.640372,0.95272,0.641465,0.959051,0.622398,0.955718,0.919545,0.458616,0.876352,0.852109,0.87716,0.878808,0.918651,0.166995,0.61468,0.868641,0.625939,0.867967,0.871695,0.937708,0.174857,0.891099,0.92577,0.072484,0.89921,0.357746,0.907174,0.664029,0.927466,0.657759,0.923946,0.708392,0.905941,0.709912,0.887749,0.710803,0.886502,0.68354,0.647999,0.906938,0.649771,0.872318,0.67146,0.871453,0.670433,0.916793,0.693116,0.872079,0.46374,0.902997,0.443462,0.901001,0.443381,0.852938,0.466729,0.848983,0.490088,0.847346,0.484495,0.898964,0.916809,0.189781,0.921325,0.217732,0.897574,0.219882,0.894774,0.182355,0.873843,0.220658,0.157271,0.931732,0.177182,0.932026,0.177182,0.955263,0.157272,0.954968,0.137361,0.954673,0.137361,0.931437,0.13736,0.9082,0.157271,0.908495,0.177181,0.90879,0.087605,0.904752,0.104292,0.933608,0.084111,0.927992,0.084146,0.879573,0.101516,0.884429,0.118886,0.889285,0.121679,0.914255,0.124473,0.939224,0.693131,0.920275,0.874176,0.185617,0.283542,0.93303,0.259384,0.933216,0.263942,0.901687,0.354055,0.926979,0.327693,0.89523,0.356977,0.895477,0.354191,0.958507,0.334443,0.958342,0.940789,0.867735,0.940485,0.838682,0.969759,0.838551,0.969765,0.867605,0.969772,0.89666,0.316471,0.953682,0.29688,0.953944,0.296888,0.924727,0.296896,0.89551,0.316486,0.895247,0.546098,0.861468,0.540686,0.840077,0.566615,0.868405,0.592625,0.841333,0.587095,0.862459,0.068784,0.841303,0.075663,0.820742,0.075374,0.862694,0.566687,0.813691,0.546827,0.819265,0.120696,0.841253,0.114682,0.86267,0.095037,0.870014,0.094984,0.812785,0.114664,0.819867,0.257169,0.964727,0.283691,0.901536,0.286453,0.9645,0.329896,0.926776,0.940499,0.896791,0.316564,0.924463,0.586519,0.820225,0.95666,0.68013,0.936274,0.683668,0.938149,0.652387,0.51029,0.754575,0.500973,0.721065,0.509466,0.724777,0.514695,0.784194,0.508045,0.783865,0.95299,0.597791,0.953031,0.566322,0.969607,0.567966,0.530685,0.605465,0.497314,0.607207,0.502748,0.578923,0.564202,0.607845,0.535118,0.616505,0.545303,0.575523,0.590257,0.563762,0.200438,0.599026,0.221019,0.627775,0.180797,0.631554,0.15577,0.59616,0.13532,0.609681,0.145323,0.643176,0.225935,0.673973,0.158244,0.690155,0.522117,0.518457,0.864281,0.217519,0.865398,0.246927,0.820476,0.238857,0.817743,0.208035,0.829111,0.177358,0.862767,0.187963,0.774634,0.127445,0.75839,0.161374,0.732644,0.161526,0.093853,0.79258,0.085361,0.738493,0.116739,0.743929,0.12099,0.77601,0.117506,0.803407,0.069613,0.802619,0.067018,0.770884,0.588872,0.529738,0.556733,0.533613,0.305432,0.853196,0.328249,0.826676,0.356993,0.82648,0.328214,0.888945,0.299469,0.889131,0.947004,0.711799,0.955267,0.650909,0.964469,0.707434,0.810448,0.176732,0.971974,0.597077,0.969046,0.626492,0.193128,0.697792,0.052855,0.732097,0.784135,0.161222,0.734486,0.125731,0.759897,0.102249,0.557982,0.506004,0.356966,0.874642,0.350341,0.814803,0.305493,0.81475,0.303662,0.788234,0.815446,0.120928,0.810456,0.103819,0.81732,0.104506,0.823479,0.164065,0.846133,0.148133,0.84782,0.162626,0.843726,0.108507,0.681164,0.970613,0.681118,0.937482,0.693085,0.954318,0.693133,0.976521,0.693036,0.933248,0.867512,0.146799,0.349707,0.784316,0.34084,0.750888,0.300223,0.753416,0.285341,0.842566,0.284187,0.889609,0.25616,0.891673,0.261792,0.832353,0.239111,0.87713,0.726414,0.417254,0.700048,0.424624,0.697727,0.401776,0.700356,0.378302,0.730365,0.380876,0.466875,0.767668,0.444552,0.765398,0.460951,0.757006,0.49002,0.761375,0.442242,0.792004,0.486168,0.791912,0.455584,0.823796,0.435265,0.822866,0.428526,0.810414,0.750024,0.358637,0.752337,0.382171,0.669206,0.968376,0.669189,0.936744,0.866426,0.114032,0.318817,0.733474,0.238772,0.834614,0.736272,0.356558,0.779126,0.174556,0.801728,0.221463,0.769025,0.191388,0.735938,0.222013,0.748782,0.177894,0.763456,0.243695,0.799306,0.247751,0.839746,0.701442,0.837208,0.66327,0.858935,0.690193,0.880128,0.688853,0.880369,0.714949,0.861462,0.713959,0.852543,0.642218,0.873307,0.644029,0.68868,0.823555,0.685151,0.855712,0.653197,0.853122,0.65135,0.824826,0.652921,0.796619,0.684582,0.791602,0.628576,0.830049,0.628033,0.809159,0.854559,0.600169,0.834553,0.598794,0.839795,0.559799,0.060308,0.893317,0.078006,0.904009,0.067003,0.941086,0.04264,0.940258,0.042624,0.909916,0.042608,0.879573,0.01668,0.966488,0.035813,0.964297,0.035782,0.987155,0.865351,0.555491,0.879677,0.575318,0.844036,0.627278,0.86936,0.616949,0.016386,0.987226,0.719685,0.32057,0.698541,0.340032,0.704281,0.258369,0.720201,0.249461,0.703594,0.018459,0.76387,0.942269,0.748509,0.935554,0.756134,0.845485,0.785307,0.489614,0.779948,0.935005,0.732001,0.448547,0.733896,0.548159,0.713307,0.546058,0.714812,0.014194,0.725865,0.020794,0.769593,0.485181,0.752985,0.483318,0.984722,0.381931,0.985918,0.401034,0.965386,0.379514,0.720825,0.95541,0.71431,0.883189,0.734658,0.895823,0.747776,0.950163,0.798727,0.444944,0.8012,0.431699,0.813971,0.445556,0.583023,0.948658,0.59578,0.944009,0.595776,0.959418,0.57419,0.966479,0.585356,0.978625,0.570234,0.984137,0.467463,0.93235,0.490073,0.932498,0.482322,0.951743,0.454379,0.951559,0.454328,0.912968,0.483151,0.913158,0.74022,0.946896,0.739307,0.974568,0.875337,0.046772,0.876488,0.017742,0.891558,0.0156,0.894267,0.047803,0.914114,0.03215,0.913008,0.050542,0.76773,0.437229,0.787741,0.438909,0.522502,0.948537,0.515913,0.968598,0.500787,0.972247,0.500819,0.953768,0.510085,0.933061,0.531103,0.927991,0.827681,0.460774,0.808435,0.542857,0.8266,0.845924,0.716286,0.447953,0.700085,0.438966,0.810342,0.859687,0.898347,0.005536,0.975439,0.363315,0.701394,0.954513,0.714089,0.335582,0.718167,0.432705,0.71126,0.980297,0.748211,0.441649,0.531039,0.964949,0.950917,0.786354,0.951666,0.827562,0.938348,0.800415,0.936301,0.745082,0.223813,0.94415,0.197377,0.95296,0.197407,0.915967,0.223021,0.918577,0.197437,0.878975,0.168082,0.548843,0.198655,0.544812,0.172833,0.564836,0.136465,0.572604,0.137536,0.553037,0.190562,0.468692,0.646087,0.018847,0.688727,0.003039,0.68704,0.016948,0.650134,0.090292,0.622404,0.09098,0.605314,0.028068,0.677916,0.091048,0.537082,0.026375,0.49829,0.023186,0.516834,0.005789,0.576362,0.027132,0.508076,0.086206,0.56326,0.090428,0.669068,0.778925,0.678993,0.503941,0.690685,0.772619,0.140512,0.481576,0.130145,0.101653,0.164705,0.134571,0.16449,0.452132,0.646046,0.772378,0.604327,0.48425,0.205422,0.108563,0.620701,0.408799,0.654155,0.413991,0.544869,0.486593,0.496785,0.490263,0.535327,0.092737,0.567859,0.42035,0.181905,0.036569,0.235961,0.042242,0.248786,0.747253,0.282873,0.732,0.264561,0.779892,0.272102,0.819187,0.238628,0.821125,0.2386,0.786474,0.756539,0.07852,0.734765,0.072328,0.737934,0.025985,0.961728,0.305639,0.961671,0.345408,0.947017,0.324712,0.944111,0.283887,0.961785,0.265871,0.029797,0.642532,0.030438,0.673954,0.008902,0.647222,0.009068,0.618282,0.00606,0.680866,0.765068,0.012653,0.732644,0.003544,0.190714,0.753641,0.225446,0.753755,0.232488,0.796683,0.391398,0.754657,0.413602,0.730651,0.41453,0.78888,0.388954,0.795087,0.363378,0.801294,0.368881,0.759041,0.392802,0.714364,0.648972,0.456326,0.691446,0.441864,0.608786,0.457793,0.615455,0.435163,0.128225,0.017226,0.186521,0.009856,0.244822,0.016674,0.086169,0.688706,0.032017,0.608982,0.105621,0.608355,0.950357,0.745158,0.223565,0.893014,0.687867,0.417146,0.588953,0.476451,0.77632,0.034555,0.780837,0.070007,0.007957,0.702855,0.024225,0.695243,0.020919,0.722602,0.793645,0.014045,0.191287,0.710862,0.17427,0.796277,0.155965,0.742177,0.654294,0.433431,0.119455,0.65144,0.124473,0.693436,0.581128,0.906765,0.573594,0.878231,0.59578,0.87824,0.569573,0.931849,0.558061,0.925767,0.967489,0.532894,0.973574,0.560243,0.959753,0.554875,0.529955,0.69724,0.53284,0.678428,0.54617,0.705105,0.516564,0.680656,0.518103,0.664269,0.545127,0.736416,0.52271,0.784941,0.521093,0.733145,0.543942,0.722764,0.56941,0.732746,0.334397,0.697291,0.35681,0.711532,0.334104,0.717112,0.283949,0.723599,0.317021,0.690403,0.892135,0.78225,0.884928,0.813251,0.871631,0.784159,0.884896,0.752593,0.898162,0.721028,0.898225,0.842343,0.364516,0.561207,0.373222,0.512998,0.382477,0.5564,0.407909,0.564063,0.388804,0.580037,0.207432,0.825964,0.232488,0.802761,0.232453,0.837829,0.232418,0.872896,0.191422,0.845937,0.394788,0.499063,0.413018,0.45221,0.413774,0.516127,0.33189,0.619705,0.286093,0.644911,0.282902,0.692264,0.241806,0.706751,0.247231,0.65926,0.251085,0.534496,0.251071,0.469061,0.298633,0.531004,0.34671,0.511531,0.345948,0.546295,0.334903,0.585594,0.299964,0.452878,0.27687,0.446792,0.370936,0.645748,0.371293,0.588766,0.41453,0.607473,0.113287,0.035466,0.11272,0.06629,0.061171,0.043867,0.009336,0.046246,0.050675,0.01247,0.104439,0.003039,0.036615,0.134135,0.003886,0.148495,0.069925,0.127455,0.3951,0.077581,0.363077,0.003039,0.426588,0.003094,0.490099,0.003149,0.470095,0.076684,0.295288,0.089843,0.275767,0.273925,0.263272,0.258182,0.46147,0.458393,0.472949,0.623387,0.451242,0.630553,0.426636,0.523349,0.034542,0.335024,0.071137,0.562416,0.027376,0.420192,0.417912,0.262926,0.369873,0.420341,0.396462,0.255763,0.442934,0.253959,0.412758,0.413541,0.289012,0.042979,0.287371,0.003039,0.296794,0.017914,0.419012,0.911166,0.418758,0.941132,0.392725,0.926061,0.384799,0.881786,0.417969,0.881097,0.047967,0.563862,0.574537,0.645775,0.569126,0.709155,0.553739,0.661783,0.59578,0.622585,0.592423,0.695424,0.54962,0.793207,0.586922,0.770772,0.584499,0.795384,0.442853,0.951585,0.42813,0.961542,0.428139,0.937255,0.428149,0.912968,0.445153,0.913513,0.742514,0.275598,0.732644,0.260786,0.744833,0.257321,0.759564,0.273773,0.773422,0.268225,0.58919,0.747131,0.959694,0.05803,0.942468,0.098533,0.941965,0.034847,0.796198,0.423219,0.834971,0.398124,0.818582,0.425621,0.860329,0.062401,0.837064,0.064794,0.833358,0.047971,0.802416,0.309572,0.822264,0.042347,0.854035,0.03744,0.807382,0.042448,0.804066,0.026541,0.380797,0.841504,0.418743,0.827204,0.403647,0.873763,0.363378,0.875003,0.37722,0.808652,0.737096,0.33194,0.769969,0.33689,0.802775,0.345408,0.824403,0.311077,0.839545,0.276725,0.869099,0.295128,0.869072,0.343631,0.854132,0.390368,0.842309,0.356286,0.879293,0.357879,0.80228,0.389098,0.802477,0.358853,0.836195,0.362648,0.487087,0.728838,0.424966,0.735902,0.457147,0.744102,0.051148,0.3166,0.433207,0.078236,0.581085,0.93793,0.553922,0.896184,0.340021,0.594561,0.286567,0.595754,0.243027,0.610829,0.281519,0.573923,0.088296,0.547431,0.387521,0.435359,0.308878,0.019925,0.329389,0.024713,0.100266,0.589314,0.445889,0.931355,0.957611,0.082165,0.95998,0.03485,0.773686,0.419727,0.83987,0.088169,0.863485,0.09597,0.83375,0.027194,0.809981,0.277613,0.82773,0.344873,0.893123,0.406515,0.858675,0.424137,0.768754,0.367075,0.390511,0.929401,0.370249,0.910703,0.384718,0.892975,0.408423,0.903593,0.409938,0.923282,0.411452,0.942972,0.963525,0.130184,0.977001,0.125184,0.971113,0.15155,0.364791,0.579656,0.364818,0.558032,0.375166,0.566209,0.972104,0.397824,0.956924,0.402578,0.967731,0.376379,0.979979,0.37365,0.089869,0.018449,0.120082,0.002929,0.120087,0.034894,0.110052,0.105982,0.098566,0.036512,0.027153,0.041443,0.004746,0.055095,0.002928,0.027529,0.063705,0.079783,0.639018,0.581783,0.6197,0.624471,0.617643,0.577836,0.645738,0.558891,0.668546,0.573547,0.60699,0.668885,0.653524,0.633814,0.666643,0.665926,0.636263,0.675879,0.676142,0.619233,0.432361,0.610119,0.392986,0.654268,0.38939,0.597275,0.420876,0.563671,0.472299,0.575839,0.476185,0.622204,0.476977,0.668029,0.528774,0.055706,0.48322,0.121305,0.483007,0.052305,0.512256,0.014202,0.563657,0.002929,0.574304,0.040916,0.575061,0.074569,0.528417,0.145346,0.181895,0.534055,0.231507,0.512439,0.232053,0.542148,0.223537,0.573404,0.188986,0.439827,0.158043,0.433729,0.131993,0.531723,0.12777,0.418754,0.423104,0.721068,0.477004,0.692531,0.476975,0.753788,0.476945,0.815044,0.430001,0.791482,0.533888,0.498175,0.52933,0.520548,0.49684,0.330788,0.507329,0.318732,0.062009,0.318813,0.083059,0.320905,0.06892,0.512202,0.15868,0.243805,0.213532,0.048921,0.173594,0.259581,0.831699,0.178181,0.828052,0.005511,0.847858,0.041185,0.852684,0.200722,0.083268,0.542246,0.085846,0.58166,0.02268,0.551474,0.036569,0.412368,0.04865,0.558136,0.19726,0.033901,0.152959,0.170867,0.174955,0.033225,0.11541,0.922162,0.112862,0.946201,0.07772,0.934604,0.225259,0.008493,0.213015,0.915354,0.214922,0.86794,0.238001,0.875914,0.237808,0.918149,0.084819,0.597932,0.064983,0.610551,0.043378,0.597187,0.959662,0.495713,0.983387,0.48088,0.983346,0.507391,0.983304,0.533901,0.970056,0.522592,0.091067,0.539232,0.101051,0.562201,0.085491,0.613499,0.97373,0.452649,0.974149,0.474986,0.956924,0.475021,0.533419,0.710232,0.566274,0.711792,0.531958,0.726735,0.23752,0.82191,0.217812,0.797077,0.24055,0.789554,0.231457,0.845968,0.211554,0.835817,0.525585,0.737897,0.515265,0.760273,0.514718,0.743474,0.200872,0.841234,0.21192,0.855835,0.18334,0.856454,0.186542,0.841132,0.020406,0.859405,0.055865,0.864443,0.055924,0.89257,0.127614,0.827909,0.127643,0.799222,0.16543,0.791882,0.448285,0.837398,0.44831,0.886905,0.419617,0.886249,0.381096,0.734159,0.416758,0.708933,0.40405,0.754881,0.370212,0.766946,0.385285,0.703758,0.561276,0.681785,0.594341,0.709355,0.58319,0.746694,0.507181,0.151042,0.037587,0.16433,0.853192,0.38218,0.820875,0.376324,0.788551,0.369665,0.370212,0.934894,0.377291,0.588026,0.376036,0.607468,0.96878,0.35342,0.435142,0.655724,0.426762,0.686673,0.171775,0.564316,0.424716,0.755717,0.809822,0.013272,0.811222,0.188369,0.080616,0.507289,0.188468,0.870503,0.187849,0.918125,0.963101,0.507885,0.092895,0.572518,0.957084,0.413535,0.971595,0.429395,0.533526,0.690751,0.215123,0.819604,0.041715,0.834313,0.017066,0.887049,0.004102,0.828969,0.143667,0.853473,0.169785,0.81972,0.177364,0.846932,0.476995,0.869028,0.47697,0.822215,0.419593,0.840369,0.316787,0.027145,0.278175,0.033767,0.275161,0.013341,0.31643,0.085927,0.291983,0.119085,0.355724,0.021716,0.342478,0.089748,0.379443,0.021815,0.378437,0.002929,0.413448,0.010441,0.408831,0.025906,0.381776,0.09039,0.675486,0.512252,0.677564,0.525866,0.636041,0.511787,0.66426,0.43704,0.637638,0.439569,0.596532,0.50416,0.723484,0.457422,0.721245,0.365923,0.748695,0.395471,0.761272,0.457343,0.686335,0.45934,0.697512,0.374576,0.341427,0.457317,0.400361,0.425852,0.366866,0.457522,0.315165,0.521414,0.429641,0.105099,0.439316,0.450943,0.630883,0.116909,0.665134,0.091449,0.61102,0.441843,0.598931,0.124582,0.752486,0.077954,0.731009,0.012971,0.684585,0.009135,0.468489,0.514604,0.416453,0.520009,0.631049,0.070874,0.675084,0.028342,0.593665,0.069248,0.773031,0.023871,0.20078,0.710936,0.224166,0.71914,0.21982,0.753313,0.18287,0.761571,0.958015,0.677568,0.971978,0.661393,0.971987,0.708902,0.971997,0.75641,0.955206,0.724612,0.538063,0.65013,0.583438,0.648048,0.569875,0.669887,0.267798,0.521779,0.253958,0.497346,0.267829,0.481493,0.268696,0.548563,0.246425,0.543511,0.247358,0.521801,0.639299,0.734392,0.674787,0.73436,0.642965,0.776074,0.604771,0.745522,0.619112,0.692756,0.679371,0.69263,0.597504,0.032833,0.636386,0.029999,0.6042,0.002929,0.340706,0.552791,0.477004,0.539156,0.420884,0.545665,0.364764,0.552173,0.364787,0.527877,0.594338,0.576585,0.492779,0.647976,0.482901,0.576255,0.327709,0.006747,0.438245,0.029813,0.404425,0.119516,0.703886,0.477223,0.179823,0.716902,0.530175,0.669836,0.208975,0.774426,0.177769,0.783206,0.236477,0.773084,0.660048,0.003694,0.355042,0.528358,0.538629,0.563002,0.890738,0.092833,0.893848,0.022038,0.901366,0.110021,0.89285,0.464324,0.87112,0.434224,0.75621,0.493108,0.760184,0.933929,0.748056,0.572044,0.925418,0.424213,0.944894,0.422152,0.94314,0.517864,0.744138,0.936444,0.843746,0.471572,0.852551,0.89987,0.839052,0.907959,0.924203,0.097209,0.944204,0.087039,0.881659,0.504563,0.863248,0.505634,0.931164,0.029043,0.949746,0.037471,0.928008,0.518375,0.929704,0.533094,0.91234,0.526962,0.961479,0.555706,0.98175,0.542973,0.981722,0.558149,0.970051,0.574725,0.956498,0.576355,0.843586,0.419832,0.829821,0.436256,0.912454,0.029754,0.910581,0.005891,0.929581,0.00441,0.949122,0.010753,0.902999,0.513363,0.75874,0.980122,0.775338,0.931894,0.739915,0.976032,0.827328,0.960358,0.853168,0.960125,0.84431,0.979276,0.816901,0.979523,0.82819,0.941279,0.853204,0.941053,0.877593,0.009819,0.881166,0.111199,0.771642,0.501195,0.827144,0.493042,0.810767,0.443011,0.740807,0.487889,0.832749,0.931041,0.825127,0.920653,0.81558,0.416455,0.879978,0.526455,0.777986,0.978361,0.085381,0.800123,0.118382,0.770158,0.094217,0.817825,0.065204,0.814162,0.055118,0.769883,0.711421,0.783188,0.690508,0.809144,0.692952,0.772346,0.713852,0.760283,0.732049,0.759328,0.731818,0.784479,0.705264,0.829443,0.560098,0.832301,0.55887,0.788679,0.586308,0.790643,0.528909,0.826748,0.53171,0.790269,0.542552,0.766146,0.157674,0.764976,0.147297,0.721935,0.171446,0.745833,0.133065,0.760796,0.12804,0.723256,0.137271,0.696019,0.161596,0.705877,0.268182,0.932343,0.250571,0.916294,0.250602,0.887129,0.036619,0.970524,0.036383,0.950625,0.055924,0.950393,0.082683,0.749367,0.117375,0.745516,0.725248,0.827694,0.590901,0.827843,0.562717,0.766136,0.28582,0.922161,0.274876,0.886464,0.25054,0.945458,0.055889,0.972329,0.98204,0.590513,0.96236,0.63238,0.961107,0.588759,0.573474,0.973313,0.568613,0.975382,0.570599,0.957999,0.591932,0.925442,0.570234,0.917958,0.59134,0.910754,0.970029,0.196172,0.98313,0.190029,0.983113,0.211315,0.970012,0.227944,0.956925,0.227576,0.956931,0.197292,0.983095,0.231488,0.482919,0.690276,0.482926,0.675746,0.505006,0.691675,0.072101,0.868072,0.067186,0.828985,0.113615,0.828975,0.025395,0.798169,0.004971,0.798299,0.002931,0.753024,0.020979,0.741235,0.038406,0.741625,0.036682,0.782905,0.296463,0.812059,0.298696,0.79004,0.324043,0.797097,0.657032,0.848261,0.635566,0.850408,0.633339,0.824775,0.675594,0.824932,0.679286,0.854352,0.646219,0.794117,0.62668,0.794948,0.327619,0.831832,0.34897,0.830864,0.981023,0.636025,0.592336,0.964846,0.482869,0.729274,0.504613,0.723361,0.111625,0.867722,0.093728,0.891327,0.297473,0.834613,0.651304,0.858529,0.620179,0.806933,0.346771,0.853604,0.333554,0.855645,0.328811,0.683989,0.297267,0.690408,0.303441,0.674088,0.356845,0.687893,0.35189,0.715188,0.322704,0.711445,0.292445,0.723692,0.060975,0.732679,0.056038,0.701158,0.090032,0.729799,0.310642,0.598236,0.296059,0.56598,0.327898,0.565221,0.354991,0.611451,0.179057,0.675065,0.229562,0.653395,0.209722,0.681164,0.147052,0.670906,0.156683,0.638612,0.194859,0.640677,0.169097,0.593323,0.288176,0.653284,0.26972,0.594895,0.321433,0.638706,0.086167,0.684435,0.061537,0.654906,0.327106,0.775791,0.301297,0.772491,0.136985,0.886252,0.152652,0.918075,0.127889,0.917734,0.175884,0.890764,0.177416,0.918415,0.079907,0.631923,0.112806,0.6436,0.11545,0.672965,0.105519,0.621308,0.352318,0.642477,0.32269,0.665296,0.197441,0.586194,0.587225,0.861511,0.566727,0.903019,0.539238,0.904024,0.539303,0.875042,0.539368,0.846061,0.118109,0.724945,0.264474,0.567664,0.159962,0.688247,0.234254,0.608909,0.353841,0.777066,0.156699,0.862863,0.226265,0.579263,0.566859,0.845051,0.594215,0.902013,0.983698,0.895317,0.958317,0.864768,0.9865,0.864986,0.983843,0.92567,0.964838,0.925525,0.174029,0.985013,0.14698,0.985328,0.1513,0.954926,0.17455,0.954656,0.15562,0.924525,0.209767,0.953018,0.235796,0.95237,0.23625,0.977928,0.730204,0.605442,0.706649,0.612507,0.698487,0.592886,0.68367,0.572682,0.697425,0.559304,0.687075,0.513626,0.709672,0.540669,0.692218,0.533802,0.692229,0.494541,0.709677,0.490926,0.73214,0.541826,0.732433,0.492677,0.893543,0.923373,0.863072,0.905745,0.863105,0.885085,0.878597,0.884532,0.898726,0.879561,0.960449,0.895138,0.174624,0.924305,0.20985,0.981312,0.235903,0.928318,0.20796,0.924776,0.713872,0.582334,0.879795,0.930492,0.860634,0.931128,0.898967,0.904593,0.659025,0.915474,0.657848,0.871261,0.675176,0.87273,0.639132,0.896677,0.640338,0.870403,0.505874,0.945799,0.484987,0.94491,0.483291,0.911606,0.504899,0.902164,0.526761,0.898872,0.526731,0.945244,0.472468,0.89993,0.476829,0.936572,0.454128,0.939626,0.452553,0.896888,0.431505,0.940636,0.05118,0.924146,0.047949,0.944017,0.016485,0.944479,0.019287,0.921501,0.023329,0.898499,0.045707,0.902887,0.660153,0.956933,0.660141,0.935216,0.679347,0.935552,0.679359,0.95727,0.679371,0.978987,0.660165,0.978651,0.640959,0.978315,0.640947,0.956597,0.640935,0.93488,0.884457,0.941295,0.902313,0.9402,0.897824,0.962832,0.869508,0.96445,0.893335,0.985464,0.879975,0.986153,0.866614,0.986842,0.678552,0.921489,0.432968,0.898387,0.8666,0.942389,0.93919,0.763989,0.939297,0.787737,0.928864,0.763832,0.867379,0.561434,0.885623,0.559876,0.884461,0.638492,0.342331,0.872685,0.358362,0.881028,0.356813,0.961459,0.914179,0.541459,0.902507,0.634984,0.892397,0.628962,0.60172,0.550144,0.595455,0.534103,0.605919,0.535698,0.590539,0.549271,0.87263,0.540069,0.886013,0.543168,0.943223,0.846176,0.938052,0.858327,0.924575,0.857762,0.95153,0.858892,0.924637,0.845455,0.8988,0.54319,0.898868,0.571238,0.873244,0.640065,0.341525,0.959922,0.333853,0.877504,0.91735,0.626012,0.859196,0.543195,0.306532,0.896975,0.298031,0.897137,0.304237,0.866241,0.313362,0.866753,0.312819,0.944932,0.293706,0.944069,0.904143,0.786651,0.917226,0.782299,0.912835,0.859258,0.903228,0.860064,0.891455,0.788247,0.627794,0.882425,0.617522,0.959806,0.608381,0.87872,0.945992,0.866205,0.944441,0.949861,0.92461,0.95034,0.897398,0.77079,0.614217,0.869412,0.311876,0.956456,0.293678,0.955821,0.625049,0.960151,0.930653,0.901801,0.933216,0.867066,0.799153,0.866268,0.795702,0.873098,0.795453,0.859697,0.786113,0.862608,0.786105,0.874499,0.91023,0.762629,0.924574,0.963086,0.722086,0.879864,0.709164,0.881059,0.714499,0.843839,0.723986,0.844533,0.374709,0.775113,0.384198,0.774389,0.395809,0.851279,0.933735,0.662001,0.945773,0.668609,0.936934,0.754846,0.922881,0.752285,0.926029,0.711149,0.868955,0.764742,0.878801,0.85406,0.866716,0.805058,0.71685,0.935828,0.705466,0.928178,0.383425,0.854354,0.370813,0.85307,0.921489,0.663062,0.859101,0.862404,0.37433,0.867505,0.396904,0.866634,0.385915,0.87914,0.370212,0.880653,0.874326,0.863629,0.921459,0.650822,0.883072,0.763889,0.731014,0.933214,0.62545,0.547795,0.615938,0.550895,0.62164,0.535409,0.6118,0.539096,0.098314,0.977547,0.095206,0.956932,0.117043,0.959793,0.506213,0.961742,0.524312,0.983782,0.504877,0.983213,0.200306,0.98566,0.18578,0.984843,0.18691,0.973711,0.976182,0.267629,0.958228,0.252666,0.967133,0.243318,0.975865,0.251682,0.116685,0.980672,0.064617,0.982579,0.08294,0.959801,0.085482,0.979828,0.065412,0.960137,0.523595,0.964978,0.201392,0.964843,0.187361,0.961696,0.499918,0.526579,0.489006,0.549042,0.485296,0.532078,0.507379,0.54035,0.958227,0.262344,0.934119,0.604238,0.9505,0.557077,0.941854,0.640113,0.932219,0.639653,0.495821,0.76831,0.505315,0.767855,0.517428,0.844088,0.905657,0.754752,0.892615,0.752442,0.890881,0.663214,0.869418,0.650052,0.878914,0.74003,0.86693,0.690764,0.939271,0.548017,0.50505,0.847014,0.492463,0.845587,0.902944,0.660414,0.859112,0.748459,0.495862,0.860074,0.518347,0.859462,0.507207,0.871862,0.491489,0.873201,0.874368,0.749626,0.890657,0.649233,0.88272,0.649457,0.925101,0.550817,0.914998,0.667354,0.645237,0.548208,0.63551,0.550962,0.641474,0.536631,0.631329,0.539937,0.269882,0.877035,0.277734,0.840373,0.283566,0.875666,0.031708,0.625536,0.030086,0.656289,0.011125,0.653652,0.276482,0.776681,0.255532,0.77548,0.259994,0.734837,0.704635,0.695957,0.70146,0.651099,0.721995,0.650215,0.260063,0.839168,0.25589,0.793375,0.281117,0.79824,0.029678,0.702145,0.006124,0.702218,0.267434,0.684567,0.279805,0.689972,0.276353,0.742315,0.255455,0.686227,0.713265,0.743928,0.700745,0.746493,0.722859,0.681198,0.725502,0.738105,0.442243,0.965642,0.417355,0.966406,0.417368,0.9519,0.43682,0.980314,0.417341,0.980913,0.021286,0.725968,0.00438,0.71701,0.254538,0.674088,0.256301,0.875838,0.01775,0.623565,0.003866,0.625665,0.437354,0.951286,0.035183,0.716819,0.002928,0.728484,0.273805,0.787239,0.789758,0.600967,0.787798,0.590555,0.786549,0.573441,0.789619,0.4772,0.786308,0.453576,0.791511,0.453139,0.790747,0.699304,0.796355,0.68816,0.798073,0.711232,0.423692,0.917806,0.417535,0.917281,0.421115,0.909519,0.688992,0.899994,0.699564,0.899778,0.695539,0.906107,0.691219,0.653315,0.691594,0.677602,0.684246,0.676202,0.789211,0.688465,0.795365,0.573614,0.79887,0.477321,0.682092,0.649106,0.789304,0.715806,0.690948,0.89255,0.578215,0.528145,0.584423,0.550009,0.572713,0.526799,0.797861,0.64844,0.79832,0.672916,0.790924,0.649102,0.791638,0.639101,0.78629,0.640022,0.787933,0.612908,0.414117,0.781184,0.410889,0.804732,0.406872,0.802557,0.128709,0.952192,0.13835,0.947657,0.134683,0.95829,0.130016,0.944704,0.796243,0.612342,0.574012,0.550072,0.404547,0.776319,0.787565,0.675097,0.686608,0.952307,0.693347,0.95697,0.686614,0.959781,0.690582,0.950583,0.977845,0.301534,0.956924,0.307878,0.960581,0.283982,0.928452,0.976488,0.946503,0.990577,0.927851,0.996584,0.357208,0.990644,0.342186,0.994018,0.34376,0.974754,0.358907,0.968957,0.319574,0.970168,0.299337,0.983543,0.30387,0.965141,0.63008,0.993946,0.617093,0.9888,0.621397,0.970929,0.630002,0.979215,0.283285,0.973844,0.261521,0.95699,0.28277,0.953182,0.265662,0.978017,0.977349,0.279708,0.946183,0.970805,0.317009,0.986526,0.406254,0.980004,0.38367,0.979656,0.385105,0.965344,0.4073,0.965162,0.388811,0.951693,0.957662,0.323325,0.976038,0.342685,0.95694,0.346075,0.976282,0.778583,0.963281,0.764922,0.978534,0.763103,0.45385,0.966506,0.465849,0.977589,0.45258,0.980433,0.4742,0.96792,0.459054,0.954643,0.477004,0.957869,0.728001,0.971122,0.705071,0.953111,0.726874,0.94886,0.709767,0.975883,0.405848,0.950936,0.966486,0.839285,0.977042,0.837346,0.976444,0.856337,0.9779,0.329382,0.976097,0.316191,0.976253,0.794205,0.962768,0.785524,0.476999,0.978525,0.96323,0.853301,0.957392,0.844065,0.793474,0.410901,0.7988,0.416449,0.790925,0.44389,0.786232,0.443967,0.786276,0.411905,0.792018,0.793641,0.789801,0.76618,0.794194,0.765678,0.788988,0.533581,0.798758,0.534986,0.796336,0.562396,0.786314,0.561746,0.689264,0.919864,0.690149,0.912309,0.699563,0.918523,0.380236,0.646053,0.369625,0.617975,0.379278,0.616996,0.370144,0.649841,0.482861,0.744488,0.488686,0.750673,0.482863,0.751952,0.48791,0.740074,0.69378,0.925653,0.133502,0.581487,0.138835,0.587019,0.131009,0.61464,0.79133,0.727345,0.796152,0.755833,0.786364,0.755798,0.788979,0.491522,0.798745,0.492921,0.795882,0.520307,0.786288,0.519721,0.128227,0.624097,0.137969,0.623466,0.133774,0.654951,0.126302,0.615055,0.796523,0.728301,0.694642,0.747457,0.688934,0.74866,0.691753,0.736798,0.686703,0.741239,0.79325,0.915324,0.788643,0.90952,0.799157,0.912584,0.794334,0.902104,0.126153,0.58111,0.964514,0.097051,0.980229,0.09738,0.982327,0.114932,0.973337,0.935118,0.959259,0.956211,0.957239,0.935372,0.961986,0.055133,0.966186,0.034196,0.977504,0.03544,0.551658,0.913,0.549456,0.934718,0.53779,0.935874,0.982833,0.076791,0.963669,0.012541,0.979521,0.015358,0.540822,0.961414,0.555644,0.956214,0.531091,0.5482,0.513254,0.54326,0.51711,0.525299,0.537405,0.532529,0.018057,0.969654,0.01271,0.977841,0.003594,0.96615,0.009232,0.95132,0.021836,0.953396,0.975792,0.974759,0.975733,0.980113,0.956558,0.975838,0.965429,0.116629,0.975802,0.957271,0.98195,0.056385,0.533869,0.91387,0.972063,0.069252,0.979112,0.009786,0.957379,0.069137,0.131145,0.930069,0.130476,0.926264,0.137777,0.92525,0.687857,0.720699,0.694333,0.721987,0.692593,0.727981,0.791909,0.882328,0.798896,0.882714,0.795787,0.89312,0.063257,0.936952,0.068795,0.933127,0.068506,0.940972,0.689251,0.730084,0.687358,0.727656,0.671054,0.538428,0.677088,0.538462,0.672992,0.549291,0.138306,0.937229,0.129931,0.936221,0.527412,0.878246,0.53322,0.884481,0.52841,0.88621,0.064159,0.898998,0.069882,0.900772,0.063619,0.9064,0.488523,0.962794,0.482912,0.958207,0.489431,0.95734,0.367517,0.949085,0.373106,0.949268,0.372385,0.957924,0.788612,0.923785,0.797121,0.923167,0.793586,0.933608,0.967995,0.819519,0.960066,0.820049,0.96361,0.808427,0.07087,0.907846,0.685767,0.940658,0.68569,0.936026,0.692467,0.93748,0.421483,0.89451,0.425381,0.90311,0.419699,0.900631,0.915219,0.950686,0.911153,0.942279,0.91791,0.943196,0.90886,0.947023,0.908692,0.928305,0.914351,0.926694,0.914936,0.935547,0.692885,0.944364,0.661232,0.549988,0.655678,0.535552,0.66261,0.536563,0.653472,0.548242,0.699196,0.885458,0.689158,0.871637,0.696324,0.871277,0.689937,0.882958,0.405669,0.847581,0.413071,0.847972,0.408031,0.859813,0.406357,0.82202,0.413603,0.821735,0.410337,0.839568,0.687068,0.711172,0.68612,0.697891,0.690689,0.693834,0.694201,0.711862,0.406117,0.836438,0.419283,0.935154,0.419799,0.926839,0.425411,0.930821,0.532542,0.86316,0.532706,0.868205,0.525881,0.867779,0.254262,0.560223,0.254505,0.577483,0.247511,0.576474,0.791081,0.81295,0.79729,0.803691,0.798301,0.823445,0.136035,0.667147,0.13584,0.685959,0.130733,0.676333,0.916388,0.88637,0.909241,0.879101,0.918267,0.878609,0.909596,0.916512,0.911188,0.909621,0.917723,0.915982,0.246666,0.56049,0.789211,0.822213,0.127136,0.66807,0.78749,0.803289,0.031525,0.820125,0.036151,0.811239,0.036684,0.820442,0.029808,0.811348,0.043147,0.717032,0.048258,0.714931,0.047993,0.720072,0.502551,0.757237,0.500516,0.740766,0.506675,0.741454,0.601722,0.78353,0.609717,0.782995,0.604179,0.80156,0.601388,0.796452,0.911538,0.963502,0.913093,0.957486,0.917833,0.964588,0.605725,0.808649,0.605644,0.826855,0.601521,0.811974,0.798089,0.851684,0.789992,0.841751,0.790148,0.832326,0.696871,0.846761,0.697767,0.862111,0.688844,0.861362,0.253889,0.603426,0.256852,0.606011,0.24838,0.603374,0.250652,0.588,0.256195,0.587361,0.789522,0.851126,0.687572,0.844252,0.690421,0.851703,0.798473,0.832696,0.917372,0.899767,0.90951,0.895402,0.918196,0.89276,0.069269,0.914607,0.070445,0.922751,0.061781,0.917854,0.007041,0.820441,0.005154,0.811605,0.012283,0.812008,0.249515,0.613323,0.256633,0.612928,0.250271,0.632713,0.247953,0.627285,0.252968,0.639887,0.254859,0.65926,0.247622,0.658296,0.512663,0.880883,0.518709,0.880618,0.51843,0.885769,0.248534,0.643151,0.137516,0.968242,0.13408,0.973635,0.131161,0.966691,0.79833,0.945155,0.80892,0.944916,0.79572,0.968864,0.986755,0.753013,0.981374,0.731281,0.994209,0.750877,0.787695,0.945109,0.380351,0.665333,0.366599,0.673428,0.370183,0.661604,0.996514,0.731637,0.563854,0.531748,0.563626,0.548281,0.555183,0.542633,0.547675,0.535429,0.544077,0.541142,0.19069,0.929715,0.199895,0.926424,0.199581,0.938268,0.18812,0.948736,0.372944,0.967,0.371559,0.973413,0.367802,0.967034,0.369171,0.685692,0.382586,0.680677,0.201688,0.949492,0.087557,0.868859,0.088477,0.841478,0.124742,0.840172,0.124703,0.867521,0.106557,0.895522,0.078876,0.896519,0.449768,0.65047,0.434545,0.686997,0.425391,0.629668,0.461541,0.616609,0.474048,0.654515,0.829356,0.430874,0.822467,0.509262,0.807962,0.43451,0.808296,0.409599,0.849543,0.447716,0.84072,0.489384,0.548783,0.881023,0.548827,0.839081,0.583924,0.841718,0.329322,0.804681,0.316883,0.842724,0.312125,0.799441,0.312035,0.714686,0.218068,0.544086,0.164071,0.537183,0.159067,0.493769,0.249951,0.500898,0.29841,0.491157,0.320689,0.50819,0.33867,0.526395,0.198794,0.650816,0.162224,0.654554,0.160456,0.623251,0.214292,0.596141,0.232555,0.622922,0.253157,0.580736,0.281306,0.519173,0.309642,0.559494,0.268855,0.584042,0.302953,0.615551,0.306549,0.652366,0.293002,0.621621,0.559526,0.694195,0.582698,0.695959,0.57703,0.720761,0.535463,0.730074,0.936061,0.479284,0.948944,0.46142,0.947006,0.488065,0.52914,0.705543,0.538786,0.680975,0.65203,0.890539,0.666972,0.902329,0.409454,0.853312,0.357994,0.806547,0.186501,0.698269,0.193888,0.674132,0.243546,0.692392,0.250703,0.713762,0.246662,0.756256,0.18729,0.735306,0.245962,0.80479,0.196503,0.840442,0.196482,0.764965,0.819103,0.044509,0.775609,0.061125,0.787535,0.049705,0.820543,0.003347,0.817817,0.083969,0.764055,0.072024,0.493733,0.580858,0.560245,0.448398,0.552115,0.497167,0.521692,0.479586,0.530204,0.472918,0.557362,0.574036,0.487132,0.657022,0.489149,0.625317,0.139076,0.493501,0.150659,0.614734,0.138953,0.578874,0.501055,0.515429,0.516976,0.469071,0.841465,0.252407,0.818438,0.300233,0.835627,0.220847,0.082724,0.669194,0.090035,0.654861,0.108934,0.673776,0.101469,0.730404,0.075583,0.743589,0.082721,0.710224,0.101637,0.70408,0.29879,0.905991,0.31559,0.878376,0.329267,0.880634,0.041673,0.852429,0.032372,0.817445,0.051607,0.833372,0.060867,0.865051,0.036698,0.789038,0.059489,0.80432,0.120028,0.700149,0.144164,0.821793,0.173592,0.793078,0.17946,0.815122,0.154142,0.789365,0.180602,0.835425,0.174557,0.851803,0.168511,0.86818,0.157932,0.834247,0.121963,0.730681,0.109223,0.823028,0.263452,0.480289,0.810341,0.277581,0.815237,0.225525,0.822625,0.166963,0.061098,0.709457,0.066365,0.782344,0.016048,0.728146,0.839019,0.386137,0.828106,0.32515,0.84791,0.376767,0.833257,0.402905,0.820235,0.366087,0.042948,0.570474,0.086986,0.531852,0.123624,0.622328,0.075084,0.636466,0.033304,0.648167,0.882492,0.079397,0.890186,0.060739,0.891173,0.123466,0.877132,0.003347,0.855536,0.067565,0.84086,0.106445,0.828498,0.012932,0.133456,0.771837,0.133608,0.662192,0.159184,0.72095,0.169091,0.887616,0.167699,0.928821,0.154795,0.934119,0.155249,0.905945,0.155703,0.877771,0.272221,0.692614,0.286238,0.718481,0.272978,0.716468,0.559842,0.806099,0.583411,0.823719,0.568747,0.818671,0.452845,0.899165,0.462695,0.85475,0.485035,0.892078,0.282181,0.792217,0.270559,0.763496,0.813686,0.479139,0.421175,0.608244,0.433887,0.567939,0.462644,0.50668,0.456759,0.679014,0.571607,0.755933,0.593511,0.779375,0.540184,0.756669,0.587088,0.884352,0.336317,0.715465,0.872643,0.216767,0.868545,0.282378,0.861869,0.241834,0.934289,0.505317,0.949004,0.514453,0.668078,0.930614,0.648667,0.945817,0.930758,0.35888,0.946773,0.373989,0.945965,0.402179,0.402916,0.784427,0.366354,0.798893,0.364076,0.788643,0.250428,0.767418,0.234191,0.842443,0.489669,0.566943,0.839439,0.16193,0.309958,0.906094,0.310899,0.854729,0.065564,0.823121,0.261463,0.519722,0.017466,0.675402,0.118345,0.517694,0.853505,0.018875,0.156763,0.771566,0.180603,0.923524,0.848167,0.57612,0.457188,0.450042,0.774215,0.670508,0.77453,0.615485,0.798929,0.628684,0.327468,0.922821,0.333109,0.948753,0.308737,0.939744,0.308737,0.917922,0.338669,0.933283,0.817779,0.868678,0.839302,0.853007,0.834202,0.878134,0.877741,0.650038,0.870845,0.701856,0.851128,0.693145,0.784505,0.193621,0.772373,0.20465,0.765705,0.149069,0.79666,0.152033,0.780883,0.29713,0.766813,0.297475,0.813207,0.826725,0.83941,0.729711,0.865803,0.777688,0.788038,0.427611,0.782522,0.509615,0.768614,0.503398,0.785065,0.394751,0.771252,0.399272,0.817079,0.64769,0.831769,0.64923,0.852008,0.867482,0.86655,0.872512,0.794186,0.677878,0.778661,0.139253,0.79128,0.128482,0.853993,0.645126,0.825659,0.725214,0.880779,0.782615,0.772819,0.414815,0.52338,0.94507,0.516612,0.967216,0.50835,0.950249,0.532375,0.9573,0.613829,0.68595,0.61613,0.713042,0.604141,0.717024,0.965043,0.232144,0.957441,0.265342,0.953374,0.229972,0.349638,0.534903,0.346823,0.535102,0.349227,0.522961,0.983876,0.854168,0.985961,0.8433,0.995437,0.850628,0.992756,0.861027,0.969331,0.533702,0.959369,0.533117,0.960479,0.521596,0.994056,0.335446,0.982661,0.335266,0.979877,0.316699,0.602991,0.685647,0.144504,0.878139,0.136207,0.912034,0.132492,0.879488,0.147876,0.910819,0.971344,0.265381,0.988524,0.604218,0.985874,0.589541,0.995288,0.598373,0.677923,0.5957,0.685421,0.589988,0.685629,0.598312,0.785391,0.989929,0.782561,0.968094,0.794935,0.969707,0.481425,0.978014,0.47158,0.978468,0.477569,0.952051,0.976914,0.048065,0.986062,0.02432,0.981666,0.049319,0.683971,0.670012,0.680386,0.67194,0.680605,0.666363,0.975154,0.022013,0.988951,0.019316,0.678031,0.585061,0.791506,0.991789,0.488069,0.975264,0.90231,0.983657,0.912339,0.989767,0.901019,0.99513,0.911782,0.977992,0.42427,0.933972,0.437977,0.929862,0.44079,0.961495,0.428358,0.859689,0.433093,0.914216,0.420434,0.890036,0.416361,0.918732,0.93842,0.875472,0.941734,0.906292,0.9285,0.905512,0.202047,0.890504,0.212859,0.861656,0.217642,0.921192,0.440359,0.857519,0.436426,0.884608,0.197613,0.921834,0.21854,0.926859,0.3012,0.981362,0.297216,0.972695,0.300599,0.960542,0.314454,0.959487,0.193061,0.858162,0.199013,0.852753,0.216699,0.856256,0.990348,0.939393,0.984241,0.943784,0.975571,0.940467,0.577852,0.97506,0.584546,0.952239,0.593429,0.950651,0.416359,0.862961,0.943088,0.938987,0.926434,0.938211,0.922363,0.874192,0.433134,0.965764,0.420129,0.964613,0.975548,0.925073,0.987857,0.924544,0.98983,0.653445,0.980013,0.672111,0.985152,0.651851,0.960974,0.207497,0.962295,0.218519,0.953374,0.21834,0.63902,0.913142,0.632788,0.892395,0.636143,0.891694,0.990441,0.672145,0.63899,0.925887,0.634857,0.945385,0.629124,0.92577,0.988763,0.214116,0.985379,0.236864,0.978482,0.214305,0.629044,0.913301,0.953364,0.208385,0.334253,0.957168,0.338407,0.980904,0.324699,0.980366,0.96769,0.547217,0.966211,0.574152,0.959085,0.547655,0.976353,0.546001,0.971482,0.572719,0.179227,0.987579,0.165513,0.990132,0.165497,0.978465,0.980928,0.793915,0.988909,0.819152,0.977354,0.819539,0.985313,0.794058,0.016625,0.842221,0.01192,0.864771,0.005192,0.840518,0.328048,0.956727,0.348394,0.594084,0.349348,0.589498,0.351956,0.594226,0.012613,0.837893,0.176369,0.978655,0.960699,0.670538,0.959406,0.652149,0.964265,0.640942,0.971689,0.627295,0.959386,0.62827,0.964832,0.599528,0.969793,0.599371,0.9578,0.307575,0.970082,0.305767,0.964992,0.33594,0.351199,0.568366,0.347365,0.564315,0.351945,0.56425,0.973161,0.672194,0.971298,0.510377,0.955837,0.510408,0.963465,0.481021,0.958419,0.33677,0.810153,0.092655,0.818547,0.096477,0.80805,0.107646,0.820534,0.107571,0.604792,0.802557,0.613645,0.77796,0.617733,0.802849,0.925787,0.955376,0.937808,0.953174,0.934159,0.97914,0.96496,0.140077,0.964255,0.15241,0.953388,0.148876,0.953395,0.136831,0.987592,0.909829,0.975884,0.909032,0.981254,0.884072,0.608138,0.777709,0.984285,0.758949,0.983927,0.781779,0.97771,0.780506,0.992481,0.780041,0.928245,0.979033,0.922208,0.950028,0.679421,0.63826,0.67844,0.627992,0.685466,0.630497,0.685597,0.641596,0.341076,0.464716,0.34833,0.435642,0.351636,0.464593,0.994296,0.572517,0.983218,0.568727,0.98697,0.559063,0.996655,0.562236,0.989932,0.575127,0.962551,0.345785,0.963861,0.359891,0.95348,0.356339,0.96692,0.352666,0.992554,0.465298,0.987133,0.483346,0.981367,0.465959,0.145068,0.942688,0.13965,0.971709,0.135987,0.942355,0.338005,0.436891,0.73225,0.959131,0.71883,0.959509,0.724479,0.932101,0.716017,0.929552,0.15141,0.970882,0.61416,0.601702,0.601755,0.601905,0.604299,0.587196,0.616981,0.587435,0.947886,0.088753,0.952254,0.125875,0.93725,0.126139,0.60353,0.574876,0.602543,0.535824,0.616566,0.57396,0.617409,0.953961,0.61656,0.914266,0.617983,0.936585,0.602061,0.955127,0.601935,0.914046,0.757089,0.991536,0.741755,0.985736,0.744837,0.976309,0.758211,0.976861,0.604651,0.623964,0.879153,0.153195,0.87958,0.139942,0.893412,0.141358,0.893421,0.154372,0.93729,0.087174,0.613664,0.536105,0.745568,0.995448,0.616724,0.625152,0.079656,0.906175,0.091707,0.905729,0.091556,0.93895,0.957101,0.745749,0.956491,0.709778,0.971515,0.710905,0.970446,0.744804,0.016976,0.792895,0.004736,0.828385,0.007129,0.792564,0.016956,0.828246,0.964676,0.959553,0.950241,0.96059,0.950171,0.92307,0.953814,0.767913,0.956162,0.755965,0.967523,0.758562,0.967526,0.772081,0.080249,0.938498,0.96468,0.923072,0.965326,0.682695,0.967218,0.696642,0.953089,0.685035,0.957438,0.699771,0.754478,0.93001,0.743495,0.966249,0.739405,0.929129,0.962378,0.873082,0.953994,0.910239,0.95018,0.872837,0.903415,0.137594,0.907693,0.154573,0.900112,0.150686,0.894341,0.288075,0.897346,0.276319,0.908293,0.28119,0.908292,0.292146,0.98189,0.745509,0.982819,0.725216,0.993819,0.745753,0.754106,0.945946,0.756879,0.966511,0.614748,0.731267,0.605678,0.767322,0.604815,0.730603,0.617668,0.766516,0.968745,0.908398,0.915269,0.14218,0.943934,0.570249,0.929732,0.568855,0.935075,0.549219,0.543527,0.928875,0.54441,0.910432,0.555799,0.907154,0.558691,0.948707,0.93402,0.62865,0.940218,0.586044,0.94764,0.608101,0.952175,0.629987,0.964118,0.024837,0.950352,0.024266,0.948729,0.006302,0.981313,0.176417,0.99641,0.180293,0.991174,0.198056,0.978323,0.191814,0.950744,0.586838,0.960466,0.046062,0.948641,0.045053,0.946478,0.528375,0.947859,0.548551,0.547022,0.950004,0.929746,0.587156,0.963584,0.006559,0.929813,0.52871,0.540605,0.904231,0.948871,0.056938,0.952254,0.075939,0.93701,0.064788,0.955137,0.0669,0.934152,0.308197,0.943166,0.285975,0.947181,0.333237,0.825966,0.893828,0.840949,0.892352,0.839573,0.917039,0.824727,0.943008,0.842949,0.940993,0.863992,0.940782,0.86192,0.887198,0.873264,0.890167,0.850198,0.942416,0.853309,0.915011,0.850365,0.888444,0.405664,0.984547,0.405906,0.995767,0.389786,0.990414,0.392535,0.973623,0.40947,0.973236,0.928243,0.285531,0.941283,0.194531,0.927697,0.19387,0.942638,0.167978,0.926806,0.141984,0.873019,0.938963,0.990367,0.970744,0.979489,0.985728,0.977407,0.970029,0.995908,0.988098,0.986664,0.993089,0.942944,0.142979,0.930194,0.333748,0.940515,0.717604,0.92999,0.745326,0.925147,0.688124,0.945795,0.744909,0.372582,0.864372,0.361615,0.925042,0.35156,0.922582,0.928417,0.8191,0.928048,0.762202,0.942112,0.759683,0.392354,0.924345,0.384038,0.863281,0.403421,0.864284,0.404738,0.890429,0.43824,0.983066,0.422482,0.991293,0.427204,0.975974,0.437745,0.996138,0.866592,0.972706,0.852096,0.969194,0.857776,0.951174,0.873634,0.956189,0.941214,0.688696,0.376623,0.924629,0.355731,0.862399,0.943279,0.819826,0.409356,0.923501,0.924147,0.755918,0.929802,0.23494,0.945731,0.232841,0.946221,0.264329,0.895799,0.872828,0.915127,0.87392,0.909661,0.902823,0.905296,0.93357,0.913694,0.930457,0.004665,0.937281,0.004802,0.878214,0.018901,0.937585,0.5272,0.930975,0.508017,0.932115,0.508175,0.870464,0.064905,0.995204,0.058898,0.975143,0.068841,0.977559,0.931635,0.208173,0.94637,0.208887,0.891311,0.933023,0.020665,0.876747,0.518632,0.899217,0.212954,0.969872,0.217347,0.988605,0.198658,0.973899,0.203797,0.992824,0.52828,0.870775,0.930358,0.263999,0.048977,0.980543,0.049023,0.996606,0.918728,0.126733,0.910297,0.125168,0.910409,0.047922,0.906308,0.583543,0.919623,0.54454,0.921856,0.623892,0.901791,0.51126,0.903149,0.464066,0.91832,0.430098,0.898348,0.545017,0.706027,0.96638,0.689185,0.979028,0.69245,0.957861,0.702792,0.983018,0.373178,0.992574,0.35775,0.988986,0.360514,0.971908,0.376974,0.975616,0.927176,0.047892,0.929983,0.12544,0.902947,0.626499,0.619972,0.8563,0.60724,0.861479,0.61867,0.817,0.621831,0.899913,0.609281,0.900145,0.920207,0.509242,0.60241,0.816272,0.924223,0.513876,0.899972,0.428465,0.694205,0.854951,0.682383,0.862667,0.680637,0.814157,0.003608,0.616869,0.006877,0.520285,0.013913,0.572427,0.904058,0.858931,0.895861,0.762252,0.911722,0.81868,0.917059,0.857957,0.915814,0.761141,0.021389,0.96162,0.003765,0.969609,0.003714,0.947613,0.018746,0.97456,0.117464,0.955849,0.103674,0.964895,0.103679,0.952641,0.696813,0.813865,0.684515,0.905929,0.698562,0.908424,0.893191,0.166864,0.905638,0.262308,0.893352,0.264451,0.915015,0.166866,0.021855,0.61722,0.024753,0.519549,0.891079,0.857952,0.02189,0.948567,0.109829,0.977014,0.124734,0.970434,0.266903,0.860362,0.288323,0.81705,0.284403,0.864265,0.877223,0.528118,0.869394,0.625743,0.86536,0.574613,0.861239,0.527961,0.89104,0.530272,0.885432,0.576074,0.88877,0.626422,0.7944,0.867762,0.79669,0.913165,0.7756,0.914712,0.51895,0.75376,0.506249,0.806698,0.505798,0.754852,0.531629,0.753935,0.523582,0.80484,0.795316,0.919927,0.214982,0.943834,0.193025,0.950701,0.199616,0.933891,0.205785,0.962065,0.285987,0.974753,0.284448,0.986549,0.269227,0.986609,0.282319,0.911446,0.266575,0.913011,0.77727,0.868503,0.791844,0.817114,0.776043,0.816222,0.532065,0.853493,0.508156,0.852173,0.266325,0.816954,0.510785,0.859142,0.21854,0.962717,0.26923,0.96941,0.284404,0.96297,0.906526,0.302748,0.89899,0.346044,0.893349,0.30407,0.919891,0.304238,0.918088,0.342458,0.919936,0.398099,0.876093,0.413812,0.892132,0.414745,0.883494,0.455748,0.891118,0.744686,0.891412,0.645858,0.904745,0.643393,0.917919,0.645915,0.912168,0.743207,0.781794,0.750807,0.797399,0.797735,0.778267,0.798943,0.276611,0.951554,0.263471,0.939907,0.263492,0.92356,0.276647,0.923422,0.289792,0.931292,0.28976,0.955978,0.784875,0.952625,0.771752,0.950993,0.779125,0.926939,0.797966,0.93599,0.798005,0.95846,0.898843,0.396365,0.890366,0.504686,0.866274,0.507723,0.85991,0.415398,0.765294,0.796427,0.765805,0.699184,0.790976,0.70264,0.26345,0.956254,0.9913,0.257765,0.980906,0.263858,0.982003,0.247269,0.813032,0.973065,0.807617,0.97181,0.807738,0.959825,0.812595,0.959744,0.685508,0.574744,0.68095,0.574962,0.679359,0.565596,0.685544,0.513869,0.681329,0.514292,0.679599,0.502221,0.987731,0.24654,0.88206,0.980111,0.891986,0.985592,0.886427,0.994435,0.986033,0.526574,0.9855,0.534032,0.979452,0.5291,0.685387,0.565332,0.684879,0.501832,0.363165,0.938872,0.373277,0.960539,0.355148,0.962305,0.35383,0.939745,0.13583,0.630659,0.14439,0.6245,0.144698,0.650843,0.475076,0.927022,0.458978,0.93716,0.461212,0.912505,0.48538,0.910833,0.471295,0.939357,0.978231,0.112257,0.97494,0.12709,0.975262,0.102297,0.966246,0.122401,0.968048,0.097633,0.979611,0.379053,0.990126,0.374224,0.989266,0.394855,0.135004,0.651531,0.462022,0.941866,0.682495,0.618323,0.678349,0.608911,0.683072,0.610172,0.981079,0.401135,0.243908,0.932809,0.24993,0.951715,0.231523,0.931743,0.986984,0.300045,0.985198,0.307686,0.980401,0.296358,0.161512,0.9626,0.162963,0.946477,0.17547,0.961057,0.165826,0.970144,0.15924,0.971422,0.088675,0.965806,0.089078,0.98006,0.082831,0.973619,0.983266,0.283665,0.989755,0.28939,0.980841,0.142651,0.99089,0.147313,0.9797,0.154771,0.228071,0.943952,0.231017,0.958504,0.991816,0.362641,0.98264,0.358664,0.99014,0.349461,0.99378,0.349804,0.176282,0.945915,0.079494,0.958385,0.082466,0.950575,0.989944,0.157965,0.979784,0.165415,0.825041,0.975415,0.830775,0.960615,0.83927,0.975343,0.825356,0.961396,0.841388,0.957704,0.96664,0.988291,0.952545,0.987825,0.954223,0.974981,0.895595,0.947526,0.909592,0.968524,0.896693,0.966983,0.993442,0.71309,0.980741,0.716854,0.981127,0.701906,0.731093,0.974349,0.729972,0.989731,0.719392,0.971905,0.719453,0.989951,0.976224,0.444628,0.963408,0.450028,0.973973,0.427431,0.966804,0.974722,0.91133,0.950469,0.992492,0.699095,0.962472,0.436689,0.864127,0.118329,0.852983,0.137714,0.856243,0.121534,0.866661,0.146238,0.85626,0.147673,0.053463,0.966607,0.055741,0.939196,0.063642,0.962273,0.960598,0.845667,0.962972,0.83312,0.973576,0.835624,0.788653,0.097933,0.767211,0.113848,0.77902,0.095755,0.786376,0.120887,0.765949,0.102457,0.936082,0.01128,0.911999,0.032508,0.913021,0.009086,0.39317,0.962038,0.389677,0.964564,0.393387,0.953512,0.054037,0.92937,0.048869,0.930007,0.408995,0.960005,0.403275,0.95976,0.06414,0.936177,0.972871,0.858629,0.96284,0.857426,0.936694,0.024849,0.954473,0.788458,0.96227,0.781937,0.956901,0.817004,0.967432,0.817538,0.958376,0.398196,0.953768,0.369104,0.962875,0.369683,0.638377,0.964145,0.639565,0.97366,0.6317,0.970541,0.602,0.667142,0.613393,0.637723,0.617618,0.673664,0.606252,0.672486,0.605307,0.643483,0.969429,0.801808,0.952201,0.416323,0.948895,0.435146,0.935006,0.418634,0.944295,0.454335,0.950883,0.454004,0.933337,0.448886,0.970486,0.369055,0.96524,0.3976,0.63505,0.95613,0.638775,0.954822,0.631978,0.962483,0.96712,0.075607,0.968176,0.063021,0.978173,0.060308,0.965885,0.082543,0.979131,0.07756,0.974877,0.085161,0.604295,0.984429,0.618435,0.968163,0.615395,0.982247,0.969087,0.282132,0.957052,0.291209,0.956366,0.281278,0.983117,0.50666,0.985365,0.495524,0.994763,0.499926,0.985428,0.627239,0.983549,0.616044,0.99303,0.61594,0.546626,0.968083,0.55582,0.960462,0.54636,0.986351,0.605339,0.967558,0.969445,0.289765,0.514987,0.975838,0.528953,0.994089,0.516748,0.993176,0.529014,0.983916,0.994683,0.511283,0.993855,0.628672,0.557778,0.979429,0.678368,0.425668,0.681237,0.416,0.687424,0.420085,0.679479,0.452678,0.680624,0.445869,0.687541,0.451848,0.659387,0.972243,0.654066,0.965017,0.668756,0.962002,0.93419,0.653122,0.927818,0.644202,0.935257,0.641937,0.688341,0.945934,0.686632,0.935649,0.706375,0.93808,0.904987,0.53173,0.898187,0.529353,0.906524,0.52242,0.898032,0.534239,0.23345,0.970195,0.243802,0.985249,0.233237,0.984735,0.946744,0.670532,0.934638,0.672974,0.947879,0.652029,0.702614,0.922842,0.687015,0.920841,0.682871,0.460431,0.654907,0.976115,0.248967,0.968448,0.251356,0.977953,0.007768,0.629497,0.020941,0.633758,0.0144,0.644091,0.494931,0.00929,0.512741,0.161724,0.488958,0.134144,0.749484,0.423906,0.730141,0.422414,0.740173,0.410326,0.758104,0.411745,0.738826,0.892199,0.745781,0.919796,0.719402,0.919749,0.719427,0.899731,0.719451,0.879713,0.758224,0.886763,0.725149,0.793383,0.726194,0.759494,0.750561,0.781379,0.701885,0.790121,0.698607,0.755178,0.5168,0.413217,0.543177,0.392739,0.540753,0.420179,0.518449,0.432608,0.492357,0.419102,0.586761,0.029986,0.55995,0.030962,0.568387,0.003347,0.603142,0.01331,0.613955,0.043354,0.449943,0.036138,0.419353,0.048613,0.430708,0.01508,0.740818,0.540442,0.432125,0.434557,0.41724,0.428154,0.464821,0.120844,0.446974,0.429334,0.589606,0.416097,0.586997,0.137227,0.603052,0.275042,0.442979,0.107424,0.934779,0.85505,0.924165,0.844205,0.924147,0.829764,0.476686,0.037824,0.56823,0.114142,0.515564,0.0148,0.485603,0.017623,0.416723,0.442521,0.608874,0.414171,0.462932,0.007212,0.942449,0.832041,0.951108,0.854737,0.749027,0.068354,0.711157,0.107032,0.696271,0.03633,0.724099,0.020575,0.756253,0.012732,0.385481,0.442723,0.40947,0.433061,0.407742,0.444357,0.389008,0.520169,0.362448,0.443679,0.686689,0.395391,0.685778,0.407169,0.656874,0.39724,0.656627,0.383505,0.626503,0.374034,0.643486,0.741861,0.65943,0.7434,0.670326,0.796952,0.648598,0.798348,0.627097,0.793152,0.729152,0.220561,0.755291,0.396141,0.732586,0.399154,0.709645,0.39298,0.379141,0.645394,0.400305,0.642858,0.40679,0.764337,0.390505,0.767898,0.37398,0.768803,0.649672,0.158429,0.663376,0.005645,0.686241,0.009093,0.640034,0.012812,0.634495,0.41864,0.652001,0.420076,0.669021,0.42525,0.650173,0.879274,0.629034,0.883845,0.637129,0.851272,0.648917,0.817887,0.671218,0.813036,0.068872,0.896147,0.06885,0.919374,0.031505,0.896193,0.031528,0.872966,0.050212,0.872944,0.068895,0.872921,0.671274,0.849737,0.514731,0.728546,0.497573,0.69501,0.498484,0.665782,0.514823,0.665555,0.745237,0.844784,0.729089,0.846094,0.722479,0.810829,0.741999,0.810709,0.758232,0.810145,0.715122,0.873019,0.709867,0.820894,0.104831,0.925881,0.105276,0.907531,0.124742,0.903213,0.95862,0.174949,0.971617,0.185455,0.971628,0.198316,0.96087,0.160962,0.971606,0.172595,0.3702,0.11592,0.348389,0.384567,0.353725,0.104224,0.386042,0.148386,0.404061,0.418449,0.373424,0.424013,0.290526,0.38856,0.278009,0.464074,0.273763,0.145957,0.291643,0.13238,0.30764,0.171793,0.22472,0.107565,0.210844,0.321199,0.19105,0.184815,0.189591,0.421736,0.160581,0.409196,0.065189,0.446645,0.033273,0.397372,0.034533,0.116666,0.060263,0.120661,0.082222,0.14673,0.116634,0.45759,0.590985,0.92159,0.575208,0.908278,0.593557,0.903755,0.095604,0.488317,0.017901,0.493675,0.197333,0.015995,0.162879,0.139615,0.237975,0.03027,0.307225,0.386558,0.312017,0.456162,0.369791,0.006508,0.404222,0.015998,0.294094,0.020344,0.322996,0.020372,0.262586,0.012066,0.08011,0.013863,0.339233,0.423652,0.29556,0.003399,0.331276,0.00345,0.214796,0.472009,0.200206,0.482958,0.181535,0.449451,0.052742,0.042075,0.030146,0.074773,0.251165,0.886172,0.252539,0.921514,0.233888,0.916187,0.487134,0.773691,0.430304,0.773455,0.487003,0.738179,0.1535,0.450048,0.14109,0.419232,0.013,0.040485,0.017859,0.009213,0.133424,0.450998,0.144834,0.482155,0.456092,0.792484,0.456091,0.847856,0.423855,0.847955,0.423856,0.814672,0.423857,0.781388,0.488327,0.814474,0.488327,0.847757,0.424946,0.741193,0.428564,0.70878,0.484433,0.703463,0.233032,0.852825,0.251591,0.852615,0.756599,0.83769,0.103063,0.944525,0.1247,0.939726,0.9588,0.190343,0.578091,0.941036,0.565649,0.926895,0.144307,0.014237,0.295313,0.463278,0.387254,0.010212,0.01139,0.071758,0.488328,0.781191,0.231172,0.884547,0.150801,0.262392,0.14851,0.247236,0.150911,0.232957,0.028022,0.278538,0.024041,0.3051,0.018549,0.275848,0.021493,0.31923,0.020732,0.331265,0.010797,0.328593,0.36212,0.154319,0.33897,0.132537,0.361771,0.123823,0.340161,0.112326,0.357828,0.104843,0.34108,0.167172,0.343128,0.155657,0.487443,0.47676,0.488741,0.463171,0.502311,0.474307,0.316763,0.554951,0.329555,0.553808,0.336832,0.565586,0.340887,0.573257,0.31681,0.576344,0.516301,0.455123,0.51495,0.468605,0.013666,0.340197,0.35394,0.207888,0.367894,0.19606,0.355332,0.224799,0.368293,0.218609,0.388661,0.203019,0.287322,0.345765,0.257928,0.375094,0.270455,0.351662,0.283828,0.361626,0.297631,0.348688,0.285386,0.383915,0.274963,0.382671,0.290874,0.381207,0.542844,0.419462,0.53399,0.407199,0.545921,0.410591,0.91881,0.307092,0.922268,0.295729,0.922274,0.312608,0.544671,0.398408,0.551336,0.39907,0.148982,0.369548,0.150848,0.353753,0.153876,0.356843,0.153719,0.379827,0.153162,0.350341,0.443932,0.654472,0.444059,0.661656,0.441034,0.658112,0.802421,0.039024,0.803428,0.044655,0.799734,0.044001,0.796275,0.044145,0.794478,0.039004,0.668899,0.812892,0.672587,0.812566,0.67226,0.816766,0.664129,0.816858,0.665415,0.812561,0.753774,0.729519,0.749632,0.708627,0.753157,0.706741,0.756683,0.704855,0.760199,0.720477,0.74207,0.03588,0.740166,0.042878,0.73654,0.041192,0.732915,0.039506,0.733884,0.032388,0.789734,0.024052,0.80381,0.024935,0.660817,0.829485,0.673715,0.829221,0.729775,0.012195,0.744449,0.021387,0.272665,0.720386,0.260195,0.740798,0.255915,0.729174,0.614014,0.574605,0.612852,0.58599,0.599067,0.591033,0.606462,0.56941,0.594069,0.571681,0.597685,0.561582,0.267144,0.712776,0.277426,0.710495,0.256542,0.718905,0.617774,0.594213,0.55639,0.398412,0.556011,0.389562,0.55993,0.388253,0.462563,0.595715,0.460106,0.614889,0.457255,0.608982,0.457633,0.603203,0.459041,0.596689,0.463878,0.608324,0.334912,0.553667,0.519306,0.465756,0.876702,0.967946,0.873671,0.973206,0.874294,0.967727,0.755801,0.454354,0.757386,0.449642,0.759199,0.458556,0.856502,0.950472,0.856583,0.945508,0.862747,0.944192,0.727168,0.175144,0.724331,0.174069,0.722246,0.169471,0.724233,0.157128,0.730288,0.161213,0.732119,0.166681,0.467873,0.917662,0.474893,0.929636,0.468906,0.921709,0.752105,0.465234,0.762006,0.471378,0.9245,0.445502,0.923041,0.429104,0.926197,0.43932,0.753811,0.476516,0.749201,0.484938,0.748635,0.46319,0.735029,0.142488,0.725724,0.13807,0.324136,0.890626,0.312985,0.890625,0.319124,0.882685,0.823112,0.248349,0.821505,0.236163,0.829494,0.231382,0.952206,0.463761,0.950834,0.453976,0.953698,0.457465,0.834113,0.245855,0.109762,0.866635,0.104829,0.857212,0.110787,0.855059,0.721786,0.146982,0.875162,0.326946,0.881769,0.338561,0.87413,0.3357,0.470559,0.630703,0.45412,0.628936,0.52736,0.420742,0.529775,0.408097,0.090155,0.647571,0.0889,0.637523,0.096021,0.65198,0.703167,0.524038,0.695521,0.539971,0.689853,0.523605,0.10422,0.632874,0.107633,0.652081,0.11102,0.664872,0.103053,0.662736,0.333305,0.160449,0.354347,0.173713,0.338314,0.174844,0.479904,0.461328,0.504375,0.458384,0.333301,0.57707,0.018089,0.346505,0.028572,0.345264,0.378779,0.195175,0.389033,0.243732,0.377302,0.247963,0.931322,0.774303,0.927571,0.76147,0.931546,0.756259,0.256905,0.605836,0.255224,0.589129,0.260926,0.567522,0.255754,0.550839,0.297258,0.383486,0.291943,0.391565,0.278132,0.394532,0.307304,0.503147,0.309348,0.535842,0.307165,0.527355,0.81556,0.407447,0.809606,0.423612,0.810983,0.40244,0.515897,0.443151,0.51851,0.44809,0.469326,0.610227,0.535968,0.388108,0.533631,0.397826,0.55367,0.422964,0.442743,0.63587,0.437769,0.643212,0.268929,0.736596,0.27572,0.728444,0.546856,0.388974,0.366336,0.717823,0.352672,0.706303,0.366819,0.704419,0.367086,0.7378,0.352652,0.737843,0.356656,0.859399,0.360312,0.84805,0.367552,0.852647,0.475524,0.920725,0.757054,0.478915,0.921522,0.445744,0.423889,0.916976,0.428419,0.918253,0.425752,0.92893,0.623937,0.860547,0.626866,0.871571,0.62069,0.86528,0.451823,0.615367,0.467395,0.611313,0.750727,0.921084,0.746908,0.913297,0.752911,0.912072,0.690453,0.510524,0.703766,0.511225,0.687022,0.541361,0.801788,0.051515,0.803186,0.049342,0.670655,0.806688,0.67215,0.808611,0.41864,0.052395,0.39998,0.094945,0.400146,0.072171,0.520837,0.202447,0.530317,0.201609,0.528504,0.21489,0.028548,0.401162,0.009787,0.37749,0.02677,0.373781,0.003282,0.360795,0.020651,0.357391,0.495615,0.524095,0.482068,0.52472,0.481779,0.505987,0.016555,0.422198,0.010986,0.402649,0.486385,0.487509,0.509628,0.489651,0.507215,0.508702,0.329358,0.686686,0.340233,0.685294,0.34516,0.686801,0.347266,0.700088,0.330111,0.710025,0.656286,0.402115,0.662409,0.414695,0.655701,0.423695,0.518323,0.260885,0.514179,0.249817,0.523739,0.250393,0.105015,0.53372,0.101359,0.548273,0.089097,0.558555,0.090504,0.530432,0.655691,0.14707,0.659449,0.127862,0.665024,0.137161,0.663923,0.158922,0.04684,0.509681,0.047494,0.496491,0.055411,0.516688,0.588506,0.286751,0.599916,0.31906,0.588796,0.330953,0.064552,0.482311,0.081201,0.478102,0.071073,0.49189,0.594188,0.276919,0.601916,0.293333,0.061432,0.51051,0.300897,0.119792,0.305165,0.115063,0.303879,0.127029,0.289948,0.156909,0.293566,0.15098,0.303786,0.149817,0.278503,0.14783,0.290009,0.137731,0.302315,0.145452,0.295028,0.130909,0.308031,0.13908,0.270632,0.150801,0.278134,0.147124,0.404613,0.751807,0.407664,0.747377,0.405602,0.757408,0.817511,0.720751,0.813102,0.716015,0.82145,0.719795,0.822471,0.725408,0.609225,0.830819,0.613603,0.827114,0.613345,0.83075,0.603356,0.842516,0.605414,0.83462,0.410683,0.032945,0.412997,0.029546,0.413392,0.036861,0.406838,0.036829,0.292289,0.721572,0.28587,0.724178,0.286713,0.720483,0.286768,0.715577,0.807038,0.706152,0.820648,0.707063,0.614586,0.838541,0.616088,0.842686,0.602738,0.83861,0.395929,0.044219,0.28525,0.708248,0.282944,0.699708,0.290152,0.703818,0.096157,0.712449,0.110313,0.727686,0.101047,0.732107,0.087848,0.726883,0.782613,0.453138,0.783729,0.460365,0.778665,0.461839,0.777558,0.456614,0.777561,0.451066,0.308595,0.134836,0.665085,0.410619,0.790565,0.494842,0.792969,0.507632,0.780033,0.500342,0.004945,0.976537,0.002239,0.981508,0.003038,0.976805,0.284329,0.976043,0.28375,0.971551,0.286526,0.976426,0.408761,0.049481,0.417802,0.038756,0.418951,0.046479,0.453742,0.226946,0.447378,0.219518,0.453315,0.216012,0.933535,0.540316,0.929632,0.542939,0.929623,0.538211,0.40885,0.056088,0.449498,0.204222,0.439609,0.210686,0.438811,0.199581,0.110638,0.886676,0.100191,0.89185,0.105208,0.883941,0.854453,0.082836,0.855355,0.071438,0.863937,0.069522,0.864887,0.082965,0.161261,0.911352,0.162772,0.90698,0.169252,0.911401,0.345505,0.917063,0.348077,0.926783,0.341283,0.919603,0.774424,0.787854,0.78407,0.79638,0.7768,0.796562,0.283927,0.133704,0.306817,0.163816,0.309411,0.162755,0.288798,0.172978,0.281055,0.120661,0.294558,0.121197,0.217019,0.689193,0.219805,0.703069,0.206705,0.705536,0.785844,0.802771,0.7748,0.808845,0.723047,0.194138,0.718804,0.183874,0.724609,0.182428,0.707534,0.211401,0.712999,0.185321,0.402243,0.095108,0.526598,0.228095,0.672712,0.095118,0.673141,0.072092,0.686915,0.067344,0.686804,0.10893,0.677899,0.112963,0.647703,0.409969,0.644928,0.418954,0.344421,0.710226,0.088251,0.492148,0.102033,0.50936,0.948314,0.406588,0.949094,0.413448,0.942587,0.410257,0.596218,0.338973,0.655694,0.393628,0.647686,0.386853,0.308653,0.156259,0.400191,0.047518,0.296047,0.708466,0.105022,0.711042,0.657886,0.706056,0.671276,0.719072,0.65533,0.732381,0.087157,0.711499,0.669461,0.734026,0.397539,0.052715,0.301598,0.716391,0.451307,0.236872,0.463177,0.230349,0.466127,0.225598,0.465819,0.222465,0.406986,0.056745,0.931899,0.533099,0.937438,0.537694,0.401104,0.085291,0.165294,0.916678,0.205044,0.690703,0.214691,0.71515,0.883737,0.715513,0.881177,0.733325,0.876962,0.728,0.718456,0.214038,0.264104,0.209029,0.266496,0.211036,0.262554,0.235352,0.229335,0.904279,0.230163,0.893374,0.2294,0.91568,0.308275,0.593202,0.316963,0.591328,0.317496,0.609605,0.316983,0.642995,0.308293,0.644027,0.792192,0.789869,0.808729,0.787945,0.807846,0.810151,0.005684,0.503428,0.007873,0.481711,0.020673,0.489218,0.109651,0.475715,0.110987,0.450556,0.138315,0.454043,0.03471,0.525658,0.011275,0.525605,0.031517,0.509118,0.115337,0.434179,0.139965,0.436855,0.181601,0.309368,0.19141,0.317067,0.185097,0.331245,0.490982,0.021463,0.485033,0.035391,0.474378,0.035249,0.474428,0.012237,0.488395,0.010637,0.272356,0.271214,0.259153,0.269698,0.272683,0.252127,0.29031,0.244964,0.045413,0.679253,0.051123,0.679388,0.053563,0.686328,0.271328,0.213813,0.280968,0.210044,0.262396,0.255766,0.303609,0.242345,0.311927,0.186493,0.318745,0.248198,0.498156,0.003133,0.49683,0.015265,0.663427,0.666624,0.673783,0.66423,0.663739,0.67272,0.179597,0.476778,0.17405,0.456768,0.19037,0.464796,0.185227,0.471675,0.192708,0.48761,0.194516,0.475427,0.19603,0.487428,0.194827,0.499221,0.824465,0.103451,0.815816,0.090774,0.823068,0.094608,0.837054,0.761312,0.830022,0.764424,0.829256,0.759658,0.009027,0.685608,0.008279,0.693259,0.005786,0.68948,0.840045,0.766924,0.836785,0.766619,0.833525,0.766314,0.271992,0.818202,0.275585,0.81786,0.274646,0.823027,0.266795,0.823294,0.268592,0.817872,0.254972,0.195154,0.257244,0.190463,0.260277,0.191011,0.263309,0.191558,0.263126,0.196302,0.784852,0.636637,0.783272,0.640632,0.779649,0.638879,0.776026,0.637126,0.780899,0.622684,0.829102,0.747384,0.840057,0.748314,0.27743,0.834449,0.264248,0.834391,0.813706,0.108923,0.131602,0.687811,0.136997,0.708839,0.129037,0.70892,0.122955,0.697862,0.120103,0.686135,0.512321,0.695617,0.508549,0.710383,0.501805,0.694857,0.491193,0.695129,0.495671,0.682388,0.492618,0.71144,0.10563,0.592284,0.097716,0.582482,0.103606,0.581485,0.187386,0.455699,0.188567,0.450398,0.192941,0.454008,0.08887,0.587982,0.094026,0.591939,0.095143,0.598097,0.180481,0.445384,0.180994,0.457751,0.195447,0.320513,0.490552,0.035174,0.50268,0.288164,0.518577,0.272058,0.518573,0.291316,0.267349,0.190165,0.26521,0.195826,0.669187,0.974077,0.6687,0.969663,0.671725,0.975196,0.261585,0.196834,0.797264,0.772402,0.793795,0.76274,0.803369,0.768788,0.597616,0.089516,0.601869,0.097483,0.593377,0.102744,0.612604,0.100066,0.613444,0.107535,0.604862,0.10738,0.600002,0.108886,0.595927,0.112091,0.252753,0.216396,0.254105,0.208139,0.799508,0.755752,0.805661,0.742786,0.430783,0.889693,0.420549,0.877661,0.432172,0.880301,0.14569,0.884692,0.134216,0.888029,0.142596,0.875282,0.624001,0.843779,0.621066,0.847056,0.623083,0.840015,0.835244,0.490583,0.845795,0.492873,0.84027,0.506215,0.834119,0.495235,0.862209,0.610236,0.858887,0.613005,0.855477,0.613842,0.921084,0.410512,0.927986,0.402001,0.925873,0.413901,0.880108,0.594107,0.880247,0.584988,0.88743,0.58384,0.655697,0.689931,0.669671,0.667385,0.670953,0.690618,0.140279,0.729265,0.131922,0.745353,0.127772,0.735249,0.850733,0.337442,0.840254,0.335593,0.84444,0.320309,0.797536,0.089971,0.796264,0.076819,0.807179,0.076355,0.257191,0.22087,0.140155,0.47897,0.124383,0.48185,0.167566,0.332194,0.161252,0.324961,0.173914,0.339463,0.29144,0.218852,0.308566,0.249914,0.334895,0.203671,0.331376,0.232719,0.326705,0.187167,0.303583,0.19654,0.308784,0.775547,0.310928,0.763759,0.314846,0.767995,0.097756,0.577331,0.827674,0.101956,0.007892,0.667545,0.002956,0.676316,0.25689,0.198546,0.789596,0.629412,0.145447,0.708253,0.145084,0.692089,0.091567,0.600904,0.323307,0.779577,0.501224,0.27327,0.800306,0.776404,0.795093,0.75548,0.77673,0.131266,0.767536,0.131913,0.774199,0.124084,0.767086,0.124605,0.767692,0.117814,0.654022,0.675405,0.65303,0.684139,0.123695,0.780807,0.121412,0.767859,0.123548,0.779289,0.117783,0.777036,0.734698,0.531712,0.735971,0.519822,0.750509,0.541436,0.851837,0.318622,0.80632,0.083657,0.800601,0.101322,0.838214,0.773184,0.83535,0.770521,0.83181,0.765384,0.835927,0.766154,0.273779,0.811892,0.271144,0.813828,0.833695,0.276778,0.818601,0.279434,0.818789,0.261577,0.833666,0.25398,0.4845,0.405942,0.486148,0.390724,0.516111,0.396797,0.510098,0.340547,0.485351,0.3414,0.510252,0.32982,0.488659,0.380324,0.515831,0.38273,0.426588,0.284682,0.429146,0.296892,0.423546,0.299473,0.409609,0.300803,0.398506,0.28701,0.392276,0.619332,0.374885,0.616438,0.373621,0.606945,0.39847,0.30023,0.377572,0.620929,0.431992,0.39882,0.425176,0.419483,0.413831,0.415293,0.410695,0.363868,0.403074,0.370465,0.409648,0.42195,0.338632,0.289873,0.343656,0.309777,0.332326,0.286156,0.309403,0.292787,0.318025,0.342323,0.309359,0.333617,0.33042,0.308466,0.338625,0.3159,0.401215,0.713253,0.401453,0.704653,0.406524,0.711469,0.322718,0.288374,0.006977,0.848741,0.005755,0.834921,0.015567,0.850225,0.366186,0.624337,0.3662,0.614729,0.583838,0.077938,0.571794,0.07301,0.572139,0.068482,0.543399,0.46226,0.544276,0.471831,0.540088,0.471578,0.532985,0.459723,0.531356,0.446145,0.527495,0.4324,0.530194,0.441185,0.028528,0.814541,0.033224,0.824979,0.02509,0.819786,0.744756,0.24519,0.746662,0.260427,0.741281,0.25125,0.727839,0.823679,0.72547,0.81972,0.737932,0.82245,0.739043,0.82764,0.734699,0.827301,0.730787,0.827581,0.053656,0.806127,0.058393,0.805225,0.060179,0.812518,0.045912,0.814752,0.049424,0.806308,0.033631,0.829596,0.034126,0.834149,0.023678,0.832573,0.752917,0.264471,0.751367,0.250312,0.756779,0.261187,0.749434,0.268613,0.748302,0.264661,0.648192,0.362416,0.644318,0.350737,0.655985,0.350385,0.175567,0.653934,0.187837,0.652638,0.196398,0.658971,0.179275,0.646306,0.67286,0.357081,0.672955,0.380681,0.662706,0.374606,0.181192,0.679348,0.193525,0.668567,0.19643,0.681651,0.578624,0.081312,0.736506,0.566898,0.740555,0.574404,0.735514,0.57351,0.750604,0.565352,0.750168,0.578343,0.746461,0.575445,0.373821,0.593151,0.387481,0.593823,0.670775,0.853196,0.657317,0.853064,0.659811,0.83894,0.792507,0.819401,0.808756,0.814542,0.808754,0.833359,0.204575,0.576706,0.215158,0.566829,0.21448,0.573418,0.789453,0.53577,0.789973,0.542939,0.783439,0.538172,0.228298,0.582596,0.226927,0.568919,0.234046,0.580774,0.239888,0.594271,0.243886,0.588004,0.231874,0.595086,0.228561,0.600237,0.207629,0.586646,0.203241,0.586239,0.780962,0.528193,0.777374,0.53567,0.208652,0.600512,0.038426,0.899997,0.026183,0.899986,0.035716,0.887551,0.054083,0.943672,0.053715,0.933896,0.058724,0.938677,0.643215,0.832222,0.637455,0.84296,0.631927,0.838874,0.861029,0.13991,0.852322,0.136606,0.86175,0.128214,0.751579,0.884923,0.751168,0.896385,0.74613,0.887035,0.166176,0.706307,0.163222,0.725947,0.152096,0.709388,0.733811,0.202761,0.74179,0.201715,0.74321,0.221135,0.729761,0.215854,0.094583,0.284941,0.087833,0.287429,0.087604,0.278525,0.094716,0.262336,0.746769,0.185331,0.843037,0.52576,0.842839,0.534961,0.839245,0.539211,0.160225,0.617473,0.16208,0.63008,0.151561,0.62116,0.429819,0.319002,0.428491,0.304959,0.261787,0.494975,0.25364,0.479577,0.260587,0.476467,0.253596,0.525955,0.261028,0.52174,0.516473,0.421318,0.484992,0.425875,0.482431,0.326673,0.486429,0.296578,0.421405,0.366789,0.430487,0.37714,0.011393,0.750804,0.011563,0.764136,0.007729,0.779308,0.412412,0.409225,0.406134,0.407895,0.322426,0.333946,0.369344,0.611536,0.556788,0.472262,0.552657,0.475487,0.547367,0.45874,0.577798,0.065113,0.652065,0.374096,0.583893,0.08693,0.741256,0.564823,0.67381,0.836326,0.794023,0.835284,0.224614,0.594907,0.775568,0.52989,0.783241,0.520774,0.792896,0.534648,0.82483,0.357402,0.829357,0.361833,0.82085,0.358447,0.246636,0.595939,0.574652,0.058473,0.752045,0.884265,0.154492,0.720686,0.312658,0.804316,0.319877,0.797926,0.326001,0.803899,0.842045,0.514919,0.739401,0.833828,0.867148,0.744766,0,0,0.999946,0.000004,1,0.5,0.054831,0.802379,0.059175,0.79837,0.86329,0.741715,1,0,0.898889,0.673427,0.895443,0.686141,0.892314,0.687453,0.484721,0.722983,0.486025,0.739638,0.480242,0.731951,0.480217,0.744275,0.480267,0.719628,0.892298,0.676494,0.513059,0.353611,0.519318,0.351674,0.519373,0.363504,0.519429,0.375334,0.513226,0.375903,0.405799,0.487152,0.413414,0.466483,0.413798,0.483743,0.445285,0.529123,0.472069,0.502658,0.470999,0.52426,0.161384,0.534811,0.162125,0.523522,0.192255,0.516143,0.441887,0.506007,0.456653,0.502882,0.471769,0.541924,0.428899,0.432581,0.432403,0.451807,0.431118,0.455102,0.014234,0.637186,0.019534,0.630618,0.037449,0.634764,0.404654,0.436245,0.415621,0.447472,0.038259,0.657566,0.940916,0.77299,0.937231,0.756952,0.940951,0.758972,0.938442,0.771558,0.935925,0.767457,0.227838,0.377705,0.233917,0.395451,0.222062,0.373388,0.37413,0.392786,0.361555,0.414046,0.3578,0.412018,0.357846,0.373414,0.12275,0.851104,0.120929,0.830222,0.123999,0.820131,0.383416,0.371494,0.374974,0.367636,0.381401,0.396055,0.379722,0.40314,0.163912,0.666734,0.155664,0.667428,0.158145,0.659639,0.163791,0.646306,0.153611,0.662989,0.499956,0.828205,0.510911,0.823976,0.504491,0.832032,0.59383,0.528028,0.584188,0.538554,0.58707,0.52557,0.155107,0.452498,0.15431,0.470912,0.148605,0.446654,0.156235,0.473321,0.154899,0.482448,0.160798,0.683934,0.057449,0.829194,0.059687,0.832009,0.056954,0.838721,0.158236,0.688808,0.157496,0.682264,0.043722,0.951653,0.043845,0.948477,0.046634,0.951228,0.246949,0.832123,0.247897,0.83702,0.24436,0.836512,0.241043,0.836601,0.239224,0.831401,0.827814,0.378326,0.831501,0.377437,0.82884,0.382085,0.824374,0.378564,0.936585,0.66673,0.936781,0.662565,0.940671,0.662134,0.944562,0.661703,0.94359,0.666027,0.92158,0.017236,0.924021,0.022859,0.919971,0.021805,0.91592,0.020752,0.915819,0.017295,0.915197,0.013697,0.246566,0.820749,0.82734,0.39206,0.817138,0.39712,0.867534,0.134205,0.867567,0.123194,0.875297,0.134394,0.566735,0.67947,0.577902,0.70299,0.571432,0.702904,0.565962,0.70402,0.562866,0.691793,0.559769,0.679566,0.679303,0.360753,0.693123,0.353601,0.704561,0.356248,0.702018,0.36233,0.699765,0.37581,0.681684,0.350954,0.586585,0.509872,0.714713,0.312982,0.714354,0.30688,0.722059,0.30501,0.417228,0.454637,0.012555,0.629295,0.540248,0.107876,0.553532,0.107836,0.553548,0.122939,0.206314,0.02133,0.192434,0.020965,0.191997,0.00596,0.6714,0.45066,0.677987,0.444935,0.675885,0.450485,0.67872,0.330676,0.680723,0.334391,0.673131,0.328776,0.675905,0.461426,0.604183,0.401066,0.604757,0.4117,0.595127,0.4121,0.611743,0.417831,0.607153,0.426683,0.60226,0.423457,0.676543,0.318218,0.664251,0.322183,0.663714,0.313838,0.667777,0.312687,0.677729,0.465712,0.667056,0.484938,0.665749,0.470462,0.716648,0.123835,0.709804,0.117643,0.718898,0.117618,0.47365,0.912763,0.464113,0.912759,0.473106,0.901284,0.85329,0.296943,0.850573,0.312608,0.843707,0.302841,0.864046,0.50492,0.855635,0.496254,0.863806,0.49305,0.703188,0.294514,0.705149,0.284771,0.708692,0.294369,0.903989,0.330046,0.906783,0.320005,0.907566,0.32148,0.706841,0.816912,0.720993,0.810903,0.718329,0.825323,0.192923,0.728815,0.190277,0.746882,0.179651,0.746613,0.849019,0.17245,0.839774,0.171064,0.848281,0.159511,0.790706,0.174062,0.786345,0.160443,0.794321,0.156913,0.432647,0.460693,0.434605,0.476177,0.431612,0.468737,0.193523,0.541167,0.165296,0.507581,0.190583,0.50399,0.448847,0.544053,0.405805,0.451106,0.021982,0.655345,0.01656,0.646625,0.22199,0.419701,0.228747,0.414788,0.388549,0.381324,0.367511,0.380043,0.511388,0.842454,0.150165,0.443329,0.048048,0.836451,0.233958,0.819425,0.873085,0.143833,0.867501,0.145216,0.051701,0.820664,0.046222,0.82084,0.587366,0.701499,0.587244,0.68549,0.681539,0.380483,0.590397,0.506481,0.596585,0.518942,0.599781,0.501991,0.601074,0.513496,0.596232,0.505108,0.604287,0.514274,0.728892,0.319521,0.724507,0.316782,0.728879,0.306758,0.537242,0.123755,0.207974,0.008187,0.662983,0.458874,0.678082,0.325219,0.593364,0.41987,0.596946,0.423059,0.661169,0.466228,0.668944,0.301274,0.682006,0.316713,0.596881,0.535391,0.83601,0.635286,0.843506,0.645311,0.840861,0.646658,0.835628,0.64575,0.709437,0.807524,0.640692,0.725696,0.628255,0.722841,0.637298,0.707544,0.181047,0.734051,0.752135,0.033385,0.763502,0.052095,0.750619,0.047227,0.192159,0.758703,0.796803,0.165533,0.798522,0.175273,0.246415,0.842224,0.243723,0.840406,0.830086,0.372131,0.82723,0.374316,0.900868,0.885696,0.902425,0.878399,0.905834,0.870614,0.905839,0.88252,0.905843,0.894426,0.27499,0.541135,0.271839,0.533437,0.279366,0.537288,0.908237,0.937551,0.903076,0.94603,0.902427,0.938826,0.034457,0.770266,0.021969,0.764422,0.020809,0.754292,0.415221,0.249417,0.407355,0.245009,0.398166,0.241767,0.411561,0.233692,0.400401,0.223299,0.01849,0.742528,0.033178,0.747542,0.298555,0.55787,0.290999,0.573769,0.274882,0.564253,0.275706,0.551189,0.402132,0.207266,0.422728,0.205636,0.423362,0.223426,0.297201,0.579137,0.404086,0.197039,0.420613,0.19951,0.573266,0.613952,0.572566,0.598378,0.583732,0.599242,0.5234,0.612208,0.5233,0.601229,0.539482,0.606168,0.54782,0.606877,0.547095,0.616221,0.212187,0.194414,0.23543,0.196624,0.213485,0.199121,0.223046,0.22226,0.214551,0.202841,0.102349,0.403041,0.098746,0.386596,0.100782,0.3824,0.105324,0.405717,0.100714,0.422059,0.098726,0.418331,0.120407,0.385134,0.135254,0.3853,0.107381,0.386597,0.109656,0.418238,0.128342,0.413771,0.124009,0.417542,0.842198,0.265139,0.840125,0.255948,0.84745,0.26164,0.765613,0.569699,0.76624,0.582875,0.758203,0.572849,0.772374,0.587676,0.7717,0.598652,0.765865,0.591548,0.533522,0.589679,0.545433,0.586414,0.535581,0.598335,0.333394,0.757773,0.340088,0.754375,0.344124,0.762287,0.777416,0.717334,0.779837,0.719539,0.777309,0.729504,0.76876,0.723154,0.211798,0.253698,0.211307,0.269317,0.202566,0.263342,0.662779,0.233587,0.65779,0.25175,0.652721,0.234552,0.206276,0.238028,0.217452,0.23382,0.213605,0.227007,0.22363,0.228107,0.656714,0.276664,0.650005,0.27673,0.64947,0.26238,0.657607,0.267934,0.663423,0.276598,0.495083,0.547865,0.50517,0.545876,0.509233,0.552713,0.498773,0.566175,0.50576,0.55673,0.491464,0.57973,0.493163,0.580427,0.491533,0.585526,0.48759,0.58925,0.234357,0.671755,0.238373,0.65996,0.244279,0.669116,0.191989,0.611416,0.184266,0.624203,0.182232,0.608205,0.926811,0.081818,0.921381,0.086619,0.924304,0.071606,0.917102,0.644555,0.913745,0.628955,0.919237,0.63337,0.566946,0.847312,0.568859,0.86352,0.556525,0.858373,0.865892,0.278267,0.854905,0.273842,0.854552,0.266491,0.950265,0.343766,0.947971,0.3395,0.952122,0.340596,0.779924,0.851471,0.786702,0.851864,0.784702,0.855975,0.470257,0.868121,0.470277,0.863602,0.475527,0.870975,0.396667,0.8594,0.391281,0.866531,0.391378,0.862074,0.386298,0.866714,0.383947,0.859946,0.01876,0.722662,0.027565,0.716742,0.027102,0.723956,0.925101,0.542767,0.921083,0.541848,0.916944,0.538753,0.917014,0.531986,0.036936,0.944504,0.037657,0.951427,0.031508,0.944433,0.949745,0.336991,0.952498,0.334379,0.238111,0.87528,0.248299,0.878711,0.248298,0.882374,0.584324,0.898377,0.577262,0.897293,0.585796,0.89215,0.583724,0.903606,0.575873,0.901072,0.784125,0.09951,0.789222,0.110785,0.777485,0.110701,0.167294,0.78257,0.162458,0.793222,0.158693,0.782217,0.785676,0.084833,0.79117,0.084687,0.415767,0.259803,0.690718,0.750955,0.696531,0.760015,0.688075,0.767117,0.423843,0.262362,0.430553,0.252453,0.429597,0.263633,0.689704,0.775279,0.682431,0.773022,0.247236,0.651259,0.240855,0.657492,0.236907,0.64909,0.189652,0.629016,0.19428,0.640268,0.187758,0.632634,0.230318,0.659133,0.227422,0.654695,0.181507,0.629326,0.176754,0.62416,0.226868,0.672005,0.219584,0.669679,0.219687,0.661387,0.175605,0.607366,0.175728,0.615821,0.169277,0.616038,0.495793,0.575876,0.501062,0.57557,0.837335,0.562765,0.836301,0.558458,0.842528,0.559813,0.879542,0.70178,0.885462,0.697399,0.884919,0.70677,0.568254,0.608687,0.566933,0.60088,0.528201,0.595638,0.536181,0.596961,0.536902,0.802794,0.546449,0.80279,0.539736,0.808744,0.036563,0.726741,0.031588,0.734489,0.031211,0.726028,0.770703,0.575778,0.771445,0.569082,0.537957,0.818967,0.54663,0.820933,0.541868,0.824141,0.028989,0.735438,0.020014,0.729547,0.414593,0.240822,0.311547,0.258159,0.315614,0.271693,0.30716,0.273235,0.273784,0.576748,0.573808,0.625509,0.586889,0.624972,0.22315,0.189167,0.235984,0.213278,0.141362,0.395366,0.140956,0.405317,0.13936,0.399702,0.759943,0.564839,0.718105,0.905932,0.713285,0.918013,0.713278,0.908367,0.332218,0.783489,0.338196,0.779407,0.340308,0.785156,0.772754,0.709747,0.765737,0.701909,0.772014,0.696867,0.34242,0.77417,0.205866,0.256619,0.652838,0.243849,0.868221,0.261182,0.462291,0.870538,0.46533,0.863441,0.550527,0.814299,0.542566,0.813736,0.033897,0.94055,0.404863,0.88408,0.413798,0.885599,0.405912,0.894381,0.239199,0.885568,0.894053,0.409234,0.890752,0.403447,0.900521,0.407465,0.899704,0.401912,0.780282,0.083764,0.155985,0.799259,0.161249,0.80835,0.168426,0.808524,0.681452,0.756674,0.245167,0.646072,0.195255,0.632922,0.225989,0.663543,0.170923,0.60859,0.886996,0.045271,0.882735,0.041833,0.887723,0.038115,0.885384,0.052134,0.573027,0.611645,0.02265,0.736252,0.822016,0.497085,0.819868,0.495469,0.825253,0.497233,0.038998,0.211818,0.048997,0.21968,0.038354,0.214325,0.289974,0.764775,0.30112,0.750343,0.301918,0.772453,0.283983,0.750455,0.282477,0.74318,0.28985,0.743706,0.333028,0.26158,0.331344,0.272623,0.320737,0.259339,0.45576,0.060852,0.433318,0.057196,0.455732,0.04607,0.033174,0.558729,0.011084,0.576126,0.011757,0.555959,0.434659,0.043858,0.453651,0.033702,0.23363,0.622525,0.233566,0.609551,0.243738,0.609915,0.65652,0.039403,0.646338,0.042186,0.647365,0.029927,0.240553,0.635881,0.233325,0.636275,0.646195,0.017342,0.655656,0.015631,0.067644,0.232794,0.072634,0.219513,0.071991,0.227996,0.055803,0.233344,0.179852,0.3942,0.188267,0.409316,0.16443,0.406795,0.177595,0.423738,0.159909,0.422688,0.16152,0.393393,0.169251,0.428026,0.832766,0.784377,0.84028,0.78372,0.835187,0.789653,0.834101,0.80549,0.830007,0.809529,0.829262,0.801043,0.826286,0.530486,0.822399,0.542939,0.820638,0.534617,0.819421,0.513636,0.506343,0.917723,0.513255,0.913106,0.513266,0.919641,0.510728,0.926567,0.504132,0.927581,0.945035,0.511913,0.94253,0.502187,0.948183,0.501655,0.950392,0.507137,0.950379,0.513234,0.735985,0.786654,0.730324,0.802881,0.728615,0.789593,0.783635,0.777073,0.777674,0.776962,0.775101,0.765895,0.784645,0.762182,0.046483,0.266091,0.038345,0.279199,0.039994,0.273789,0.044238,0.244493,0.048431,0.252926,0.664028,0.535636,0.6725,0.517587,0.673048,0.533296,0.663361,0.523646,0.667993,0.505123,0.055183,0.245546,0.419674,0.635651,0.428655,0.631589,0.423133,0.641711,0.468367,0.699761,0.464264,0.709968,0.461833,0.704345,0.077719,0.638808,0.070615,0.651613,0.069344,0.636747,0.926945,0.339823,0.923827,0.323718,0.928893,0.328268,0.446053,0.880972,0.45382,0.894997,0.444787,0.886907,0.455383,0.878588,0.724562,0.067196,0.723977,0.062199,0.728731,0.067661,0.410992,0.952243,0.411749,0.946933,0.414375,0.945063,0.409976,0.949035,0.605027,0.141845,0.603658,0.131288,0.608528,0.131669,0.672409,0.875072,0.663508,0.870257,0.668048,0.864698,0.819291,0.002805,0.815985,0.011081,0.809899,0.007595,0.65993,0.8759,0.666933,0.860842,0.144217,0.809561,0.139419,0.81398,0.13656,0.809142,0.139879,0.80357,0.145786,0.802628,0.532951,0.723057,0.540132,0.717,0.54057,0.722743,0.611674,0.141263,0.611939,0.147503,0.611583,0.134398,0.760408,0.89492,0.75891,0.884897,0.768409,0.884347,0.785021,0.886655,0.776476,0.89123,0.776989,0.879919,0.786707,0.882265,0.489932,0.898417,0.483691,0.898666,0.492047,0.88993,0.486969,0.904441,0.609244,0.174082,0.606782,0.165415,0.615582,0.165306,0.60462,0.152711,0.797876,0.480574,0.801524,0.461834,0.803953,0.482241,0.331323,0.666147,0.341762,0.655358,0.345935,0.665868,0.444649,0.083095,0.454784,0.095673,0.447422,0.090632,0.452575,0.084258,0.46303,0.085228,0.462151,0.09605,0.080196,0.659946,0.079482,0.668795,0.073434,0.661327,0.07626,0.654602,0.458884,0.696409,0.461928,0.685965,0.457397,0.693141,0.453758,0.703356,0.449489,0.698974,0.450506,0.693646,0.559925,0.89914,0.565751,0.901673,0.563221,0.904198,0.518941,0.886234,0.52226,0.88515,0.527308,0.891811,0.132063,0.801866,0.126965,0.807978,0.129771,0.796088,0.138893,0.793312,0.137221,0.800841,0.543927,0.723933,0.550662,0.719352,0.549624,0.729247,0.544086,0.734439,0.543857,0.729288,0.228951,0.61931,0.641114,0.029369,0.539506,0.73416,0.532441,0.737305,0.532461,0.733646,0.531343,0.728646,0.67568,0.131057,0.675815,0.120052,0.683624,0.12799,0.890006,0.938834,0.886826,0.937878,0.891588,0.935008,0.875084,0.940862,0.877257,0.936796,0.878638,0.941617,0.059916,0.242622,0.056528,0.239829,0.010753,0.537854,0.015436,0.540968,0.432337,0.073611,0.446097,0.067389,0.030718,0.573203,0.247742,0.635394,0.064249,0.208695,0.053393,0.207822,0.152483,0.395979,0.15644,0.38961,0.155745,0.410991,0.828515,0.782486,0.821836,0.506688,0.825991,0.513966,0.772907,0.747494,0.779143,0.751057,0.672927,0.492252,0.677229,0.502244,0.039984,0.255637,0.419625,0.626417,0.768245,0.887475,0.340341,0.640412,0.342227,0.645626,0.332596,0.649747,0.618526,0.173451,0.789216,0.467804,0.79464,0.456157,0.334455,0.656118,0.347337,0.654323,0.328481,0.67502,0.472109,0.688054,0.474395,0.689248,0.468691,0.688449,0.063581,0.651105,0.067566,0.65965,0.062873,0.639276,0.056894,0.646146,0.055828,0.638818,0.558264,0.903559,0.688834,0.877883,0.69602,0.869286,0.695878,0.875873,0.766206,0.496375,0.764712,0.499548,0.764128,0.497561,0.748266,0.936865,0.750688,0.936198,0.752979,0.939155,0.893189,0.938658,0.050308,0.151159,0.047622,0.144071,0.053085,0.142627,0.37041,0.329447,0.366099,0.332589,0.356493,0.328681,0.744419,0.356792,0.754252,0.363054,0.751265,0.383824,0.508042,0.108452,0.511444,0.121829,0.50088,0.116639,0.559241,0.074958,0.557174,0.094597,0.535394,0.082348,0.535402,0.069773,0.380471,0.301878,0.381715,0.314457,0.358598,0.312644,0.535308,0.095745,0.363336,0.283118,0.38387,0.287793,0.285161,0.458969,0.296021,0.464893,0.272701,0.466783,0.270322,0.455852,0.615991,0.219495,0.605155,0.219031,0.606773,0.207922,0.295752,0.456667,0.057493,0.178543,0.071983,0.164868,0.064946,0.177333,0.049675,0.168821,0.069603,0.153091,0.045508,0.386057,0.044518,0.374142,0.072589,0.3776,0.058463,0.367673,0.048303,0.40323,0.068686,0.394606,0.062048,0.400898,0.810697,0.745304,0.816364,0.744706,0.822335,0.745432,0.818995,0.757997,0.818146,0.74616,0.820341,0.749533,0.761703,0.357471,0.763472,0.350606,0.768901,0.353597,0.772094,0.379149,0.772981,0.369096,0.77554,0.374391,0.77549,0.385474,0.76563,0.367112,0.77099,0.359444,0.281909,0.450284,0.274126,0.449187,0.279193,0.438946,0.283064,0.430153,0.289573,0.433263,0.154594,0.771502,0.154351,0.753577,0.161303,0.771883,0.811921,0.202992,0.822091,0.213745,0.813233,0.219417,0.162464,0.749382,0.165287,0.759237,0.820362,0.223277,0.014475,0.105792,0.026209,0.116996,0.009533,0.114911,0.595365,0.881312,0.594792,0.892222,0.592394,0.887295,0.013567,0.124728,0.031425,0.13467,0.023289,0.135521,0.038385,0.180877,0.029165,0.180963,0.03208,0.171357,0.034781,0.146912,0.044005,0.138913,0.020345,0.178361,0.535381,0.367055,0.543046,0.355702,0.541426,0.365807,0.838721,0.377468,0.844335,0.384902,0.842858,0.390956,0.487959,0.360717,0.49937,0.368623,0.482666,0.368972,0.883522,0.52846,0.889197,0.542939,0.879168,0.539688,0.864447,0.010079,0.875055,0.004599,0.875079,0.026323,0.605485,0.69145,0.60157,0.695408,0.599673,0.686614,0.611447,0.860424,0.612745,0.853729,0.616088,0.859287,0.112838,0.948818,0.106135,0.941504,0.108388,0.937863,0.604256,0.847274,0.616084,0.848216,0.547868,0.364142,0.802151,0.503636,0.80254,0.496939,0.811824,0.507449,0.824596,0.940303,0.822086,0.948568,0.81988,0.944264,0.638427,0.890403,0.647842,0.890131,0.642759,0.891807,0.393696,0.887635,0.386668,0.887765,0.3849,0.881804,0.792672,0.221371,0.7968,0.208458,0.800873,0.220713,0.289605,0.406489,0.292474,0.417376,0.79167,0.197612,0.799344,0.196357,0.718045,0.751495,0.710064,0.743437,0.71439,0.739599,0.3816,0.35078,0.38921,0.341054,0.38778,0.352485,0.713546,0.765777,0.706537,0.769867,0.505273,0.367275,0.508563,0.371596,0.504372,0.374184,0.396088,0.652581,0.393931,0.657159,0.387734,0.655673,0.496966,0.363182,0.498806,0.354813,0.503396,0.358803,0.377477,0.647755,0.38054,0.638517,0.385786,0.645265,0.381943,0.652137,0.380344,0.657406,0.375073,0.636497,0.369454,0.643179,0.367823,0.636939,0.944336,0.531701,0.948224,0.535369,0.942319,0.5397,0.946497,0.529569,0.01561,0.924872,0.011994,0.920649,0.014149,0.920974,0.601756,0.201757,0.599684,0.193993,0.603927,0.200189,0.605412,0.204927,0.282715,0.447837,0.285567,0.453436,0.386601,0.805168,0.396731,0.807639,0.391346,0.812838,0.609792,0.704684,0.616067,0.700257,0.616081,0.709263,0.382686,0.819177,0.391527,0.817909,0.392662,0.824834,0.384387,0.826674,0.595047,0.705769,0.605435,0.703046,0.603988,0.712463,0.596656,0.710574,0.364226,0.262245,0.37275,0.263984,0.371602,0.269346,0.733921,0.49629,0.73722,0.49271,0.737226,0.498238,0.044534,0.177293,0.046998,0.177036,0.738659,0.377262,0.735849,0.361403,0.497106,0.105355,0.360284,0.297399,0.620412,0.211009,0.610251,0.194897,0.620056,0.19209,0.04075,0.385083,0.038198,0.376691,0.03713,0.36937,0.040373,0.363151,0.040756,0.365831,0.038262,0.394456,0.040943,0.407608,0.036319,0.402054,0.074708,0.369545,0.768286,0.377504,0.897988,0.396695,0.90359,0.384375,0.905838,0.394631,0.897729,0.387485,0.880332,0.438799,0.87187,0.427617,0.879475,0.422479,0.02527,0.111971,0.019295,0.189892,0.008809,0.190884,0.530898,0.361057,0.529825,0.355802,0.53763,0.35509,0.838759,0.395274,0.387487,0.630665,0.905639,0.058633,0.907531,0.041447,0.911275,0.055614,0.964254,0.782931,0.964706,0.788542,0.959836,0.788754,0.866522,0.019522,0.801611,0.502507,0.805203,0.502503,0.747954,0.128623,0.747067,0.12299,0.757412,0.118328,0.59944,0.699447,0.529331,0.371187,0.538052,0.370187,0.527914,0.379174,0.112053,0.942989,0.821764,0.941839,0.637167,0.881723,0.647647,0.883399,0.873599,0.364151,0.874499,0.352307,0.883428,0.360485,0.395336,0.897244,0.393074,0.881085,0.298812,0.407872,0.296874,0.431255,0.705004,0.756402,0.371907,0.341189,0.375802,0.3507,0.377886,0.339054,0.390689,0.651081,0.373313,0.65475,0.486294,0.354106,0.491952,0.347197,0.492936,0.354174,0.374907,0.64289,0.383142,0.810579,0.611163,0.713067,0.363984,0.271051,0.373762,0.271925,0.124312,0.088127,0.123506,0.081206,0.129025,0.06798,0.126708,0.046314,0.128847,0.043694,0.476198,0.050151,0.473202,0.064541,0.46881,0.048406,0.716365,0.92794,0.712669,0.922697,0.721692,0.922698,0.16049,0.26855,0.183044,0.274253,0.173554,0.276742,0.163068,0.252637,0.172875,0.249371,0.189765,0.243271,0.191849,0.264145,0.19643,0.272814,0.481413,0.089241,0.468244,0.082262,0.160691,0.241543,0.473027,0.09677,0.132681,0.554627,0.144881,0.555116,0.130765,0.572231,0.603704,0.658452,0.616088,0.644111,0.612654,0.670957,0.597388,0.671047,0.141515,0.583917,0.128936,0.583089,0.60177,0.647656,0.285538,0.318518,0.264055,0.294034,0.289808,0.298616,0.273506,0.289059,0.281814,0.289481,0.273678,0.32733,0.264692,0.320537,0.712393,0.360705,0.723112,0.353793,0.727121,0.364542,0.714627,0.355338,0.714755,0.345788,0.723341,0.376989,0.729259,0.373522,0.730178,0.385474,0.598775,0.748112,0.60661,0.745948,0.604565,0.75214,0.259026,0.691894,0.268576,0.69195,0.254919,0.706118,0.611123,0.725866,0.600506,0.73656,0.599955,0.724742,0.793061,0.67606,0.801734,0.668773,0.802305,0.681772,0.094687,0.005581,0.106876,0.015896,0.088278,0.014874,0.873013,0.070551,0.873134,0.084397,0.869983,0.077671,0.100039,0.081824,0.097947,0.095654,0.086974,0.096685,0.104169,0.025455,0.10394,0.039963,0.090519,0.023916,0.11499,0.08411,0.107989,0.085975,0.11156,0.074873,0.12404,0.042077,0.113718,0.050855,0.278576,0.600551,0.287099,0.597973,0.287226,0.606682,0.297459,0.832858,0.295418,0.816738,0.30193,0.81924,0.535041,0.653567,0.540098,0.643044,0.546568,0.653045,0.538235,0.659387,0.608717,0.230399,0.606932,0.247212,0.600376,0.23685,0.907158,0.441357,0.900754,0.446197,0.90419,0.428438,0.784207,0.827297,0.786701,0.845911,0.773865,0.835726,0.573987,0.847541,0.587457,0.841769,0.587462,0.861165,0.262638,0.940695,0.255849,0.932881,0.255741,0.930145,0.488728,0.936992,0.48883,0.934134,0.491968,0.93915,0.294447,0.603365,0.846046,0.024567,0.856123,0.020827,0.859593,0.02662,0.579545,0.799394,0.587462,0.801613,0.576986,0.807839,0.11197,0.779847,0.112863,0.783505,0.10551,0.782437,0.10321,0.772753,0.109225,0.775,0.275743,0.610559,0.284939,0.611711,0.275822,0.620945,0.2999,0.588055,0.301929,0.592794,0.31465,0.855139,0.321728,0.855644,0.31378,0.86677,0.80865,0.865153,0.808401,0.86834,0.798536,0.87485,0.029973,0.867982,0.037088,0.876083,0.025421,0.874528,0.219203,0.880254,0.21096,0.878435,0.211058,0.874618,0.221856,0.868624,0.762478,0.266522,0.769495,0.265659,0.775395,0.278082,0.266918,0.664637,0.264183,0.676186,0.257985,0.668216,0.097058,0.037684,0.765713,0.250164,0.772974,0.249725,0.715112,0.53704,0.711389,0.534043,0.7115,0.519615,0.716787,0.513818,0.726749,0.521046,0.721664,0.509233,0.188826,0.295123,0.179935,0.287027,0.194921,0.28497,0.541581,0.632374,0.54678,0.626378,0.549059,0.630076,0.607231,0.259813,0.612086,0.250677,0.61855,0.258748,0.53311,0.646626,0.536277,0.632427,0.94061,0.912864,0.936543,0.910977,0.939362,0.901735,0.940199,0.338599,0.937495,0.342415,0.935936,0.332458,0.290236,0.829126,0.290437,0.811249,0.294087,0.812872,0.291999,0.826388,0.864268,0.744563,0.870428,0.74177,0.865948,0.746282,0.125466,0.558464,0.124515,0.567405,0.578313,0.793727,0.569568,0.790282,0.576085,0.785334,0.585847,0.788594,0.097939,0.794366,0.092558,0.788072,0.101918,0.787652,0.569547,0.803852,0.091864,0.785051,0.093549,0.777377,0.357003,0.688003,0.36527,0.695787,0.35475,0.697823,0.515919,0.186001,0.518384,0.191694,0.514598,0.191576,0.510812,0.191458,0.51082,0.188404,0.904378,0.208803,0.900687,0.203961,0.901961,0.200871,0.365291,0.687036,0.149728,0.058114,0.234695,0.683991,0.230552,0.69979,0.225924,0.683615,0.248186,0.713566,0.497967,0.082368,0.498172,0.065143,0.194503,0.22562,0.177837,0.22685,0.167623,0.222874,0.138761,0.08368,0.146631,0.081051,0.153201,0.068857,0.299107,0.3121,0.295916,0.319151,0.29753,0.293917,0.265688,0.305673,0.466271,0.814829,0.461665,0.79681,0.466465,0.804454,0.473454,0.794621,0.467155,0.793632,0.892626,0.88725,0.886334,0.877278,0.894618,0.873694,0.884469,0.886841,0.630268,0.91574,0.621915,0.904421,0.630263,0.903655,0.623352,0.916389,0.256635,0.694818,0.790745,0.663108,0.80077,0.66317,0.612634,0.735675,0.864715,0.822632,0.873196,0.817531,0.875575,0.835848,0.868492,0.832305,0.11498,0.038334,0.614489,0.236032,0.3567,0.966835,0.355183,0.971622,0.352486,0.968132,0.57781,0.857126,0.947019,0.159999,0.948246,0.151436,0.953617,0.157472,0.549184,0.939174,0.545563,0.94736,0.542208,0.938597,0.25982,0.929976,0.218579,0.85757,0.209617,0.846583,0.223528,0.845691,0.851655,0.012818,0.696468,0.945866,0.693074,0.956129,0.690147,0.95468,0.270713,0.618816,0.493482,0.932754,0.799757,0.864404,0.325999,0.86674,0.213997,0.884763,0.221864,0.885155,0.763232,0.278706,0.77726,0.248581,0.193862,0.296522,0.544153,0.638272,0.61998,0.266656,0.527119,0.644348,0.532688,0.631782,0.595038,0.2475,0.598567,0.257873,0.594663,0.660536,0.108703,0.794812,0.572966,0.797419,0.113609,0.173396,0.128652,0.158146,0.131306,0.158771,0.106921,0.174872,0.095539,0.180862,0.099864,0.177227,0.496556,0.808139,0.496544,0.79858,0.505832,0.793356,0.454183,0.165732,0.439205,0.172128,0.421464,0.163,0.447636,0.150244,0.422677,0.144688,0.111624,0.346675,0.136068,0.336159,0.136572,0.357424,0.109824,0.329551,0.446117,0.134282,0.110603,0.366588,0.424697,0.129207,0.428652,0.111663,0.526428,0.570422,0.536301,0.543486,0.540888,0.558296,0.547081,0.550776,0.024883,0.675293,0.024215,0.669146,0.034736,0.666562,0.13329,0.181672,0.121401,0.192827,0.107798,0.190913,0.13446,0.174273,0.406078,0.13,0.409925,0.154115,0.39579,0.136261,0.378411,0.159239,0.379862,0.145773,0.379981,0.12682,0.390945,0.12719,0.382045,0.164884,0.695633,0.818147,0.685951,0.839705,0.688931,0.826932,0.584748,0.028036,0.591306,0.037139,0.578692,0.032404,0.579744,0.025907,0.558502,0.824415,0.562985,0.816163,0.564795,0.823709,0.56119,0.834777,0.573161,0.040821,0.578162,0.047073,0.67131,0.034779,0.678365,0.032908,0.667133,0.047073,0.423405,0.780397,0.414495,0.785709,0.416802,0.76682,0.830091,0.482211,0.826021,0.484938,0.82926,0.463395,0.697146,0.421694,0.708147,0.408603,0.712363,0.419545,0.142294,0.110683,0.135623,0.126392,0.132583,0.109229,0.872174,0.3832,0.873075,0.393636,0.870426,0.387792,0.124268,0.116993,0.877273,0.231526,0.882907,0.243539,0.875361,0.248494,0.121114,0.139465,0.131966,0.129975,0.126688,0.142709,0.092853,0.175399,0.086619,0.168579,0.09204,0.166264,0.130255,0.151054,0.576831,0.016911,0.571989,0.023975,0.28045,0.689562,0.289041,0.677537,0.292169,0.688366,0.897065,0.053923,0.893242,0.034313,0.899514,0.038602,0.220745,0.968999,0.219094,0.964653,0.223656,0.965238,0.4072,0.839201,0.413643,0.85554,0.401911,0.850181,0.635126,0.861502,0.647074,0.853641,0.644349,0.871621,0.163519,0.949228,0.167246,0.9429,0.169925,0.94998,0.625084,0.925894,0.621527,0.925005,0.625878,0.924542,0.538878,0.975068,0.536264,0.978068,0.539989,0.971569,0.103986,0.149826,0.110977,0.139394,0.120411,0.146701,0.860139,0.6283,0.855805,0.635038,0.85051,0.628349,0.332667,0.865907,0.337452,0.859376,0.341999,0.857532,0.862737,0.634026,0.86104,0.64026,0.604588,0.36213,0.612396,0.362158,0.603782,0.370406,0.795755,0.292428,0.798708,0.298911,0.792242,0.299369,0.563418,0.540718,0.557737,0.537094,0.556757,0.533106,0.118462,0.129076,0.213114,0.826381,0.216667,0.817806,0.223095,0.819344,0.791332,0.006139,0.801804,0.010965,0.801798,0.014388,0.714767,0.409712,0.695586,0.939765,0.690498,0.94033,0.689054,0.931817,0.696527,0.931654,0.068199,0.779795,0.073171,0.768431,0.077133,0.781312,0.681311,0.006734,0.677348,0.018087,0.670475,0.010206,0.069359,0.753865,0.671258,0.024522,0.076634,0.752769,0.126023,0.30564,0.136028,0.298167,0.142103,0.309435,0.70175,0.391117,0.709809,0.399394,0.703758,0.399187,0.781048,0.068909,0.776232,0.05906,0.789685,0.059049,0.124756,0.318151,0.108289,0.316357,0.435219,0.172817,0.285127,0.673721,0.278523,0.666391,0.288304,0.66736,0.593016,0.014214,0.595896,0.022968,0.589332,0.023495,0.297624,0.673308,0.29475,0.663608,0.584652,0.008247,0.582281,0.01293,0.576003,0.01131,0.29608,0.691025,0.296457,0.686784,0.301726,0.683495,0.561251,0.500659,0.564511,0.502608,0.560156,0.50754,0.323719,0.900749,0.325999,0.895003,0.326002,0.901818,0.558946,0.489917,0.559264,0.483923,0.562602,0.483331,0.542885,0.564177,0.539265,0.573321,0.016021,0.680253,0.020506,0.678044,0.023429,0.678935,0.597696,0.348369,0.608468,0.348632,0.602525,0.355804,0.790203,0.303523,0.794475,0.310933,0.783965,0.309227,0.781663,0.30317,0.781473,0.292986,0.736427,0.881916,0.730154,0.882436,0.739463,0.87311,0.59625,0.056656,0.601681,0.05551,0.598403,0.060989,0.594404,0.060152,0.508993,0.809412,0.496568,0.817698,0.453106,0.119041,0.035451,0.690206,0.019626,0.688932,0.412222,0.139049,0.373231,0.12083,0.382678,0.119942,0.37102,0.132495,0.399608,0.130293,0.395427,0.162185,0.683803,0.816239,0.68884,0.817034,0.559521,0.811138,0.555219,0.820396,0.915294,0.415735,0.908852,0.40371,0.915296,0.402386,0.907926,0.41432,0.833807,0.474933,0.222279,0.837464,0.218095,0.837743,0.885974,0.231135,0.097208,0.165488,0.118299,0.151185,0.967767,0.109763,0.964092,0.116579,0.963695,0.103182,0.288096,0.694534,0.780221,0.94455,0.781253,0.938879,0.786707,0.939988,0.848161,0.832397,0.8554,0.835178,0.858837,0.840314,0.11008,0.15119,0.345094,0.865396,0.708183,0.949319,0.704735,0.957547,0.701813,0.956303,0.56376,0.531079,0.79283,0.015953,0.080715,0.752226,0.704618,0.39106,0.143435,0.296962,0.788534,0.071014,0.5967,0.034661,0.593449,0.028655,0.091201,0.927566,0.095162,0.92147,0.09519,0.926422,0.941348,0.26926,0.943817,0.276709,0.939896,0.278338,0.320404,0.908891,0.318158,0.898865,0.322045,0.902997,0.447386,0.93336,0.44773,0.931873,0.451559,0.930882,0.59304,0.355423,0.9511,0.680645,0.955416,0.682588,0.950851,0.687453,0.596534,0.368838,0.789433,0.287907,0.793583,0.850826,0.804275,0.848102,0.804527,0.856161,0.720806,0.942514,0.719502,0.946274,0.715885,0.941307,0.357458,0.089016,0.360582,0.08278,0.357926,0.097203,0.362194,0.05239,0.362569,0.058991,0.362831,0.066731,0.814066,0.641889,0.813431,0.627234,0.824922,0.620972,0.455975,0.415807,0.452562,0.386223,0.471342,0.393408,0.140531,0.521171,0.139318,0.534208,0.117718,0.524018,0.129318,0.5036,0.141065,0.509895,0.445489,0.729676,0.448011,0.742437,0.441977,0.737232,0.128829,0.539074,0.115989,0.539534,0.461762,0.363621,0.471627,0.37316,0.574473,0.443892,0.581143,0.452637,0.584135,0.468159,0.335363,0.05951,0.34902,0.060233,0.337641,0.071794,0.58279,0.444037,0.355925,0.057014,0.358066,0.067532,0.378341,0.076675,0.313339,0.450221,0.315966,0.472707,0.310306,0.465569,0.119465,0.794094,0.121626,0.789718,0.120919,0.794804,0.193184,0.830246,0.186569,0.847113,0.18985,0.83307,0.467262,0.761176,0.462018,0.77544,0.458989,0.758753,0.500823,0.614646,0.510867,0.622191,0.495708,0.623719,0.469797,0.772267,0.465876,0.78254,0.497449,0.632981,0.413517,0.653506,0.426556,0.654829,0.417984,0.671878,0.685404,0.218507,0.686731,0.211022,0.68995,0.199337,0.696955,0.21407,0.832042,0.32756,0.828404,0.338999,0.823331,0.326496,0.739414,0.329621,0.748018,0.322472,0.749126,0.331317,0.767416,0.83789,0.766466,0.855525,0.759736,0.850392,0.854356,0.525682,0.858088,0.524287,0.857412,0.540809,0.849692,0.54078,0.887545,0.156464,0.886879,0.171272,0.883911,0.163408,0.688411,0.609915,0.697013,0.628756,0.691954,0.630017,0.169919,0.843317,0.167376,0.85397,0.164424,0.845466,0.348477,0.04687,0.35802,0.050876,0.350811,0.054069,0.546348,0.789571,0.545843,0.785238,0.550654,0.78293,0.539729,0.788882,0.66991,0.789756,0.6738,0.787333,0.673217,0.796175,0.532021,0.31823,0.539745,0.302962,0.544885,0.316516,0.524867,0.276962,0.529137,0.274736,0.533443,0.283347,0.118273,0.889205,0.129292,0.883062,0.126974,0.893963,0.117584,0.893883,0.379461,0.695909,0.384927,0.680601,0.387392,0.694637,0.908398,0.024218,0.904781,0.005216,0.910582,0.010056,0.323223,0.833907,0.326003,0.848534,0.312566,0.839353,0.70827,0.863736,0.720995,0.859837,0.713901,0.873302,0.866921,0.206172,0.86531,0.212874,0.861387,0.206724,0.525874,0.329936,0.541769,0.33629,0.541699,0.340081,0.696902,0.645093,0.697644,0.639993,0.693125,0.644856,0.787381,0.244412,0.791191,0.236763,0.796342,0.24264,0.785805,0.239808,0.542854,0.794003,0.535797,0.797388,0.547029,0.788772,0.669463,0.781934,0.672389,0.788042,0.665525,0.787374,0.662798,0.77764,0.524382,0.324943,0.534076,0.321939,0.535678,0.325847,0.539524,0.329046,0.686042,0.641873,0.679787,0.645094,0.824841,0.321601,0.424155,0.671243,0.429522,0.680966,0.699302,0.186576,0.695877,0.196278,0.037705,0.839461,0.036962,0.853464,0.027194,0.845885,0.899697,0.473409,0.894453,0.483503,0.894923,0.472211,0.460354,0.428023,0.457594,0.423095,0.49882,0.610555,0.490966,0.603688,0.499015,0.602328,0.383302,0.679071,0.382993,0.67038,0.396242,0.683779,0.494227,0.600288,0.390998,0.691787,0.525348,0.914615,0.523127,0.917806,0.522541,0.90932,0.587451,0.460646,0.585275,0.455367,0.533047,0.775703,0.537073,0.783356,0.528802,0.78224,0.542739,0.77637,0.664175,0.794553,0.667744,0.800205,0.657208,0.799709,0.858617,0.434014,0.857966,0.424002,0.86582,0.434756,0.531997,0.795414,0.658244,0.788755,0.657954,0.78295,0.681114,0.848493,0.691655,0.852098,0.692841,0.861605,0.696846,0.235781,0.701749,0.231188,0.702546,0.23761,0.45,0.941211,0.455387,0.942502,0.451555,0.947126,0.359861,0.054944,0.116895,0.503001,0.117007,0.49049,0.59747,0.947212,0.594554,0.941648,0.601076,0.939971,0.444209,0.40961,0.826778,0.632234,0.472786,0.409031,0.475187,0.419043,0.570718,0.468396,0.353294,0.073742,0.375241,0.087838,0.367069,0.091609,0.369203,0.058459,0.375356,0.063659,0.311049,0.431468,0.31553,0.439167,0.118238,0.800638,0.333023,0.42808,0.337392,0.453292,0.318932,0.462807,0.318469,0.435357,0.326489,0.42739,0.326443,0.463857,0.18425,0.825331,0.188774,0.824629,0.496683,0.616562,0.488781,0.62887,0.885386,0.895184,0.894221,0.89663,0.892689,0.909467,0.885561,0.904904,0.835735,0.335904,0.744182,0.340776,0.736744,0.336844,0.756133,0.840039,0.874415,0.159762,0.87473,0.175083,0.871774,0.169432,0.885681,0.159299,0.155544,0.858688,0.539866,0.32346,0.413907,0.97489,0.413022,0.980686,0.409669,0.976796,0.948587,0.105834,0.947765,0.111143,0.942329,0.110764,0.536561,0.339265,0.14223,0.849704,0.139176,0.856674,0.132196,0.849608,0.788647,0.236911,0.68323,0.632581,0.765307,0.833021,0.291684,0.876024,0.292567,0.866978,0.301911,0.876382,0.292787,0.879633,0.422284,0.683376,0.68961,0.186842,0.433023,0.654053,0.430539,0.664432,0.684407,0.624097,0.031495,0.854776,0.025764,0.838549,0.055602,0.883968,0.049393,0.875572,0.060486,0.873731,0.897496,0.482837,0.508276,0.614833,0.375346,0.672179,0.854296,0.436057,0.653183,0.794823,0.475133,0.760658,0.683304,0.862771,0.584667,0.876722,0.586154,0.879498,0.57611,0.8726,0.577773,0.312101,0.557722,0.312447,0.562563,0.29236,0.465139,0.150908,0.474471,0.169422,0.461015,0.162296,0.486003,0.148444,0.490288,0.165437,0.481599,0.131227,0.490231,0.133641,0.470893,0.130847,0.570082,0.332802,0.55961,0.337625,0.557866,0.32868,0.215256,0.446444,0.230459,0.446235,0.217806,0.458859,0.23058,0.471041,0.2418,0.464264,0.240567,0.472997,0.240403,0.443295,0.241429,0.451019,0.343908,0.748208,0.34321,0.749998,0.335223,0.744652,0.343329,0.733779,0.327689,0.726725,0.342714,0.725116,0.328103,0.735229,0.343447,0.741591,0.475089,0.259968,0.472792,0.255502,0.47554,0.239785,0.474228,0.218137,0.473251,0.223997,0.254156,0.43592,0.252986,0.424717,0.255208,0.431123,0.480791,0.243176,0.497267,0.228377,0.498355,0.239894,0.480817,0.220682,0.492841,0.218985,0.142644,0.824285,0.133706,0.844289,0.13642,0.833522,0.054058,0.774832,0.054404,0.782952,0.045193,0.777435,0.128928,0.607286,0.140603,0.598381,0.133872,0.608716,0.015842,0.231328,0.012594,0.219543,0.022918,0.222536,0.127864,0.595515,0.69513,0.107386,0.696349,0.101725,0.698259,0.105107,0.702556,0.093667,0.710177,0.103721,0.766743,0.412545,0.766958,0.409331,0.77106,0.41084,0.836124,0.299841,0.828983,0.302713,0.827709,0.292852,0.834945,0.292373,0.833438,0.312608,0.775632,0.42487,0.771386,0.431082,0.765107,0.426251,0.768216,0.421319,0.773699,0.414386,0.861702,0.367682,0.85774,0.353845,0.864723,0.354969,0.856734,0.668881,0.856781,0.686702,0.851701,0.681864,0.820807,0.856702,0.821727,0.873761,0.818862,0.861365,0.886939,0.101368,0.88904,0.092057,0.888359,0.108089,0.3264,0.412519,0.313193,0.413902,0.310439,0.406868,0.232284,0.439907,0.23522,0.434475,0.242313,0.437255,0.550029,0.957348,0.545636,0.966525,0.545629,0.956475,0.118963,0.615718,0.133109,0.612985,0.123858,0.619992,0.498692,0.204615,0.501058,0.183737,0.503956,0.200246,0.916829,0.730353,0.913336,0.711387,0.918574,0.716454,0.877154,0.985072,0.876266,0.979585,0.879732,0.984903,0.205574,0.728489,0.221272,0.732361,0.211518,0.738984,0.214921,0.746131,0.511945,0.934224,0.511196,0.93891,0.50533,0.936137,0.822515,0.555085,0.816876,0.555625,0.821853,0.549083,0.331052,0.407654,0.345511,0.407705,0.3478,0.410131,0.332889,0.393503,0.342508,0.39388,0.341574,0.399329,0.669287,0.952857,0.674745,0.953441,0.674748,0.957583,0.735373,0.551618,0.735136,0.549377,0.73688,0.547952,0.890745,0.859055,0.892718,0.864927,0.887579,0.860733,0.886615,0.854469,0.794809,0.120071,0.802503,0.127768,0.794279,0.127444,0.631394,0.470449,0.620462,0.470301,0.618129,0.459704,0.630144,0.477563,0.626684,0.475938,0.86596,0.349668,0.947104,0.443674,0.94281,0.447404,0.943724,0.438047,0.779441,0.415245,0.780449,0.422543,0.817552,0.873923,0.813134,0.865799,0.307236,0.399846,0.324175,0.399963,0.633118,0.438048,0.628743,0.457848,0.623699,0.451263,0.014324,0.251498,0.024171,0.244773,0.330664,0.407336,0.139846,0.899174,0.143652,0.894971,0.143096,0.905582,0.059439,0.782819,0.143809,0.611154,0.128488,0.621258,0.052136,0.759582,0.055277,0.768664,0.049544,0.760126,0.167587,0.927858,0.16531,0.93574,0.165407,0.931727,0.049671,0.731304,0.049166,0.741487,0.043758,0.740897,0.203804,0.804735,0.210569,0.804768,0.210076,0.80976,0.203478,0.794249,0.212926,0.795689,0.790988,0.132513,0.799371,0.139579,0.788795,0.139052,0.011515,0.211866,0.022886,0.214996,0.054167,0.739145,0.787534,0.120095,0.159533,0.868042,0.16908,0.869607,0.159347,0.87696,0.404218,0.865558,0.411372,0.873269,0.403287,0.875261,0.412661,0.862816,0.412706,0.866931,0.865163,0.193536,0.860994,0.193191,0.86657,0.188347,0.943503,0.946336,0.939134,0.950531,0.939534,0.944501,0.569168,0.296951,0.108809,0.828856,0.104684,0.846879,0.09762,0.832322,0.580023,0.329476,0.581657,0.337148,0.022529,0.21336,0.018741,0.200336,0.332854,0.722994,0.487875,0.252679,0.049063,0.77208,0.130591,0.612373,0.118279,0.60122,0.960992,0.753618,0.957848,0.746558,0.962764,0.744436,0.856513,0.361044,0.856688,0.366042,0.34469,0.798264,0.335422,0.803942,0.342373,0.791198,0.33778,0.81354,0.326845,0.409107,0.202666,0.788381,0.212307,0.788436,0.233108,0.4456,0.547909,0.954955,0.317058,0.36604,0.312626,0.351767,0.322018,0.357769,0.085455,0.892048,0.081036,0.903425,0.076015,0.898871,0.344475,0.412381,0.954183,0.197669,0.94969,0.199975,0.951725,0.188746,0.670135,0.963305,0.883431,0.852788,0.882657,0.857946,0.647717,0.960364,0.641116,0.953383,0.645746,0.952202,0.579097,0.757241,0.569941,0.759772,0.573108,0.748849,0.702849,0.083156,0.71053,0.075881,0.708719,0.084717,0.701916,0.076876,0.628121,0.435397,0.587283,0.777455,0.583455,0.755517,0.574259,0.770645,0.331328,0.790565,0.137504,0.908435,0.471995,0.174542,0.058682,0.777846,0.14083,0.602153,0.324375,0.381861,0.320108,0.375031,0.334936,0.385535,0.323275,0.372441,0.140564,0.619194,0.052436,0.754818,0.048877,0.753976,0.054448,0.7527,0.125802,0.627792,0.122319,0.625772,0.129156,0.626208,0.898481,0.018253,0.891987,0.015727,0.892902,0.009436,0.894742,0.026959,0.900391,0.025766,0.167119,0.875972,0.168413,0.878969,0.65628,0.937777,0.655584,0.928754,0.660414,0.937382,0.371644,0.536843,0.380692,0.537893,0.372232,0.557073,0.059417,0.568848,0.065055,0.551715,0.077727,0.563564,0.525545,0.87351,0.518218,0.878196,0.518225,0.866866,0.081753,0.576316,0.067938,0.577416,0.677318,0.421752,0.68616,0.406096,0.684653,0.424174,0.071292,0.541338,0.078025,0.545262,0.684879,0.390057,0.673509,0.398925,0.675556,0.388197,0.284691,0.515823,0.27308,0.513282,0.29546,0.497097,0.282366,0.490153,0.293987,0.486883,0.27185,0.492785,0.751318,0.656911,0.760771,0.657795,0.760195,0.669451,0.759542,0.680329,0.745864,0.666544,0.370321,0.486323,0.369598,0.488162,0.36476,0.485959,0.37047,0.518235,0.385098,0.497981,0.386383,0.519315,0.376039,0.495264,0.815586,0.031774,0.810176,0.037187,0.808824,0.024164,0.82094,0.0263,0.912311,0.502826,0.912652,0.497428,0.915529,0.501828,0.910737,0.509367,0.372573,0.035322,0.372143,0.028966,0.377971,0.031132,0.664739,0.197222,0.671015,0.188073,0.669965,0.198594,0.635384,0.0679,0.63453,0.083225,0.626896,0.073736,0.62686,0.068598,0.662493,0.182203,0.627359,0.086134,0.498552,0.782531,0.502499,0.77523,0.507706,0.781778,0.963384,0.321275,0.961143,0.327758,0.958948,0.318918,0.849484,0.717897,0.856147,0.720866,0.857169,0.725855,0.85308,0.733931,0.730504,0.393975,0.738559,0.393432,0.733179,0.403725,0.867498,0.71608,0.871856,0.716415,0.866534,0.731052,0.879498,0.262595,0.88046,0.279903,0.87798,0.270316,0.905388,0.716504,0.904162,0.727936,0.902139,0.720767,0.227523,0.08248,0.236145,0.092389,0.228496,0.097147,0.29446,0.786479,0.29292,0.777619,0.300417,0.783076,0.07973,0.823873,0.085982,0.81981,0.079675,0.836392,0.285207,0.791428,0.297696,0.793861,0.288639,0.486897,0.287965,0.477021,0.295157,0.480459,0.862019,0.965126,0.857823,0.970935,0.857842,0.961344,0.82234,0.903465,0.824376,0.915155,0.813926,0.904534,0.070197,0.916284,0.065767,0.921381,0.067654,0.908237,0.070189,0.73743,0.064846,0.729375,0.079268,0.72539,0.420568,0.733007,0.412085,0.730933,0.415661,0.727122,0.213977,0.076849,0.215365,0.065725,0.221521,0.068078,0.095328,0.882143,0.095814,0.886944,0.091465,0.880908,0.907418,0.155748,0.908588,0.151139,0.909468,0.150812,0.423164,0.747914,0.414283,0.739968,0.432064,0.009515,0.44431,0.011983,0.439472,0.012942,0.218277,0.052562,0.204728,0.049074,0.214363,0.046669,0.848395,0.710979,0.856453,0.714489,0.863573,0.385394,0.861846,0.39414,0.853586,0.39188,0.507838,0.758689,0.511577,0.760328,0.510497,0.766205,0.51127,0.773282,0.730622,0.417277,0.735225,0.41635,0.73735,0.428164,0.380879,0.037918,0.384019,0.033478,0.673461,0.191611,0.674476,0.198572,0.222168,0.084839,0.383393,0.021493,0.379673,0.026016,0.669389,0.203512,0.669873,0.21029,0.664473,0.211809,0.201701,0.081584,0.200754,0.078079,0.191602,0.073377,0.208138,0.06858,0.196975,0.072945,0.667621,0.221158,0.663216,0.222904,0.66347,0.216223,0.921063,0.741243,0.922324,0.747713,0.916772,0.743176,0.946479,0.075172,0.947101,0.081817,0.944756,0.077652,0.635401,0.063127,0.292913,0.803714,0.28843,0.796341,0.43847,0.017337,0.442527,0.022969,0.43272,0.020989,0.816455,0.890964,0.81374,0.88184,0.823146,0.890491,0.415995,0.752084,0.425996,0.752035,0.428977,0.756123,0.86114,0.890727,0.861198,0.89782,0.855982,0.896476,0.068797,0.950628,0.073377,0.951559,0.066443,0.959168,0.376749,0.536688,0.525891,0.859394,0.6707,0.410276,0.295491,0.515154,0.752431,0.677897,0.379717,0.522404,0.391699,0.501528,0.367894,0.496401,0.369375,0.507096,0.367772,0.505982,0.656035,0.189759,0.859665,0.378254,0.863651,0.379077,0.72841,0.405066,0.864727,0.725734,0.443787,0.011958,0.447978,0.010075,0.448517,0.014888,0.860101,0.960176,0.169058,0.094997,0.174973,0.085705,0.187565,0.088163,0.276936,0.883785,0.273146,0.896946,0.266123,0.892395,0.1776,0.843257,0.175571,0.825011,0.179222,0.828942,0.066332,0.721005,0.079255,0.740958,0.442672,0.009203,0.436296,0.004104,0.205459,0.056642,0.214739,0.060752,0.232126,0.070845,0.231073,0.064126,0.221185,0.050453,0.632815,0.111614,0.628522,0.108839,0.633516,0.101003,0.634881,0.094661,0.186732,0.043626,0.196896,0.051186,0.725449,0.427905,0.048877,0.64386,0.043754,0.638131,0.046112,0.635229,0.074541,0.824855,0.073334,0.816193,0.199782,0.063789,0.382242,0.009553,0.377621,0.011003,0.386916,0.007963,0.923,0.744057,0.300363,0.805034,0.432073,0.7501,0.614949,0.896583,0.613952,0.904482,0.606173,0.900376,0.06713,0.954915,0.179458,0.574127,0.185161,0.594839,0.181309,0.595608,0.016101,0.430016,0.029973,0.429261,0.023777,0.444413,0.19201,0.580167,0.196427,0.592525,0.565804,0.638758,0.582186,0.634041,0.583453,0.648429,0.581685,0.669204,0.565864,0.669812,0.22459,0.529195,0.22322,0.506489,0.235163,0.503976,0.244387,0.510362,0.244242,0.523409,0.243506,0.530699,0.235656,0.529051,0.243525,0.50048,0.065625,0.597006,0.073931,0.596007,0.07857,0.6008,0.076895,0.614522,0.060005,0.606456,0.0735,0.620984,0.541477,0.015743,0.541455,0.018818,0.537143,0.027318,0.555347,0.020628,0.545536,0.040992,0.537547,0.03357,0.557396,0.038871,0.558142,0.034111,0.546585,0.018384,0.557209,0.013669,0.828135,0.164356,0.829861,0.170001,0.825537,0.176811,0.93543,0.736256,0.935434,0.722805,0.938667,0.729603,0.208215,0.940647,0.202777,0.947449,0.204104,0.935776,0.208647,0.932851,0.628737,0.659462,0.63402,0.651027,0.635519,0.664619,0.682388,0.558339,0.681461,0.573547,0.675108,0.57707,0.673304,0.565219,0.674657,0.559416,0.622152,0.655151,0.626319,0.649328,0.673465,0.572519,0.059538,0.967326,0.056844,0.972859,0.054007,0.9673,0.885905,0.076564,0.891879,0.071943,0.889041,0.08567,0.882996,0.084374,0.685874,0.7158,0.692108,0.715324,0.69282,0.722235,0.68272,0.728818,0.503471,0.876856,0.506962,0.872752,0.510361,0.880331,0.241825,0.499019,0.238334,0.503573,0.239114,0.497109,0.239894,0.490645,0.244484,0.493965,0.216663,0.162829,0.21477,0.171624,0.207102,0.169623,0.390316,0.268554,0.379617,0.27179,0.390858,0.259414,0.431325,0.898587,0.433161,0.911038,0.42349,0.903396,0.570066,0.71399,0.585237,0.722807,0.569906,0.725715,0.585345,0.738802,0.575345,0.734144,0.251122,0.153952,0.245219,0.142222,0.25332,0.146436,0.977347,0.649348,0.97416,0.650825,0.976138,0.646768,0.978062,0.643341,0.055306,0.90628,0.050885,0.898666,0.055868,0.904339,0.662322,0.756031,0.659269,0.760217,0.65512,0.75368,0.181161,0.011177,0.171499,0.008101,0.172706,0.00373,0.058507,0.895932,0.060486,0.902549,0.054651,0.895179,0.25959,0.158432,0.254261,0.163296,0.234991,0.129402,0.238393,0.136908,0.251537,0.130736,0.249168,0.132813,0.804971,0.062271,0.801987,0.071685,0.798721,0.063889,0.21472,0.11197,0.214491,0.116022,0.207114,0.107379,0.823342,0.436302,0.822581,0.431783,0.8286,0.439954,0.890149,0.068468,0.262039,0.168581,0.258729,0.167603,0.866332,0.304756,0.869969,0.302726,0.865763,0.310625,0.826186,0.415482,0.829154,0.425351,0.823418,0.422121,0.821485,0.413639,0.490229,0.914218,0.493553,0.92227,0.484569,0.922203,0.639257,0.657817,0.635454,0.662354,0.641069,0.662502,0.637896,0.667719,0.229921,0.159589,0.24137,0.148811,0.243892,0.154643,0.633424,0.678361,0.642751,0.673498,0.639367,0.677952,0.634006,0.684163,0.631009,0.681144,0.930381,0.641472,0.92516,0.65083,0.925127,0.643285,0.362944,0.538851,0.362052,0.548477,0.35894,0.545656,0.682255,0.554262,0.834721,0.904854,0.837795,0.895788,0.840847,0.903239,0.839566,0.905895,0.688969,0.741817,0.689856,0.734307,0.69525,0.74199,0.684078,0.73489,0.66574,0.761049,0.665098,0.764131,0.766814,0.906346,0.767065,0.912166,0.763528,0.911157,0.008575,0.445955,0.011292,0.430272,0.010411,0.457883,0.567236,0.654009,0.065415,0.617882,0.821854,0.155112,0.631675,0.667058,0.898194,0.360577,0.890134,0.351691,0.895841,0.349725,0.894009,0.36381,0.692731,0.727675,0.974057,0.935061,0.974756,0.926013,0.977451,0.932677,0.421757,0.89928,0.922238,0.11619,0.924902,0.102745,0.926488,0.111591,0.261945,0.144073,0.25847,0.145453,0.244736,0.126882,0.864587,0.291097,0.864135,0.296736,0.861714,0.292566,0.867316,0.294308,0.82575,0.441286,0.225283,0.124046,0.229556,0.130176,0.227909,0.122304,0.48505,0.913483,0.247332,0.161318,0.2486,0.15885,0.354254,0.564261,0.362793,0.576153,0.358597,0.574597,0.359386,0.538532,0.047399,0.038349,0.045893,0.053889,0.044686,0.045535,0.078748,0.070875,0.070363,0.083876,0.074019,0.051629,0.091541,0.949879,0.091927,0.940303,0.097449,0.948845,0.714689,0.731231,0.700944,0.720928,0.701453,0.716561,0.701465,0.705294,0.547335,0.506451,0.547558,0.526977,0.522501,0.515656,0.218287,0.308815,0.219227,0.28595,0.231644,0.29257,0.53153,0.532618,0.521778,0.531439,0.710259,0.616188,0.719402,0.642915,0.709724,0.633643,0.339468,0.033506,0.342887,0.017275,0.352148,0.023629,0.707725,0.643363,0.364577,0.025521,0.364345,0.037673,0.046933,0.323784,0.073389,0.313538,0.068511,0.331173,0.04995,0.302899,0.069089,0.306809,0.044303,0.311151,0.827735,0.707849,0.837014,0.709314,0.832968,0.718302,0.831775,0.727604,0.704292,0.154724,0.715537,0.161095,0.70746,0.166579,0.711853,0.144492,0.702338,0.145252,0.703868,0.136296,0.360377,0.005101,0.34993,0.007423,0.355455,0.017358,0.387843,0.737049,0.376945,0.735976,0.380528,0.713886,0.720796,0.560079,0.722745,0.570032,0.716981,0.582223,0.714143,0.569046,0.712384,0.561725,0.86785,0.768912,0.86267,0.757134,0.872826,0.75659,0.004195,0.01219,0.00648,0.002188,0.014898,0.006578,0.019834,0.021972,0.007863,0.023625,0.015551,0.094594,0.002756,0.096338,0.021052,0.077616,0.031792,0.083958,0.037627,0.040168,0.0324,0.050438,0.022111,0.039114,0.02689,0.072766,0.423687,0.710342,0.432728,0.704318,0.432963,0.717487,0.420948,0.698879,0.420763,0.718262,0.414529,0.722184,0.414197,0.718637,0.421214,0.707355,0.426373,0.557546,0.419838,0.570915,0.411731,0.556022,0.899448,0.173251,0.895626,0.155637,0.902362,0.160252,0.510783,0.852071,0.513277,0.868375,0.499678,0.860802,0.547987,0.848345,0.536036,0.840304,0.537437,0.834188,0.550662,0.829508,0.737392,0.928204,0.73456,0.933347,0.734833,0.928819,0.936731,0.861436,0.935952,0.857812,0.939478,0.861807,0.384544,0.83281,0.396718,0.834348,0.393342,0.838753,0.419266,0.690066,0.851808,0.85575,0.848739,0.846136,0.857018,0.851682,0.691086,0.807645,0.684231,0.808764,0.688107,0.799747,0.696531,0.800262,0.69484,0.803529,0.52925,0.686295,0.538746,0.679074,0.539226,0.686276,0.907737,0.774324,0.903079,0.773509,0.905635,0.767374,0.739874,0.931773,0.7412,0.94063,0.940653,0.852635,0.485035,0.882804,0.482242,0.878506,0.48852,0.876221,0.745656,0.172199,0.750544,0.161802,0.755412,0.174621,0.366152,0.746323,0.359982,0.756799,0.353798,0.757113,0.232467,0.741691,0.236583,0.725842,0.239936,0.739075,0.23706,0.352884,0.229386,0.339735,0.236744,0.340852,0.241865,0.721751,0.242116,0.356169,0.248165,0.345195,0.245809,0.357332,0.240874,0.74936,0.421122,0.580909,0.423475,0.574961,0.431433,0.577497,0.43072,0.587313,0.423689,0.586317,0.430704,0.583091,0.638443,0.624221,0.634086,0.638249,0.622943,0.63234,0.872305,0.84974,0.875529,0.859833,0.87025,0.856114,0.301661,0.0117,0.296234,0.013698,0.299457,0.010625,0.30268,0.007552,0.761186,0.940792,0.76474,0.942375,0.767021,0.950039,0.759669,0.94995,0.686416,0.793815,0.678364,0.791789,0.683925,0.786121,0.694402,0.786788,0.691695,0.790625,0.549422,0.692163,0.543228,0.697404,0.542751,0.688207,0.717385,0.149355,0.717408,0.15433,0.529416,0.696413,0.537572,0.696996,0.003638,0.869975,0.005715,0.858743,0.005978,0.865905,0.014495,0.862374,0.00255,0.856,0.008499,0.858092,0.68898,0.915666,0.695094,0.913828,0.693486,0.919837,0.687956,0.918536,0.693788,0.289503,0.697239,0.294385,0.692017,0.294391,0.041591,0.080146,0.04804,0.062762,0.066423,0.077638,0.523326,0.500537,0.518763,0.485406,0.527313,0.487028,0.228988,0.322057,0.215006,0.329588,0.704541,0.698154,0.719582,0.709598,0.737927,0.846845,0.739209,0.856237,0.725664,0.846436,0.242385,0.310599,0.246797,0.29102,0.723848,0.616087,0.053641,0.046476,0.066439,0.052622,0.067279,0.066024,0.034697,0.341253,0.038934,0.326914,0.039904,0.343595,0.057913,0.344098,0.041447,0.349421,0.061789,0.303702,0.71426,0.173801,0.214183,0.906872,0.222808,0.891296,0.223655,0.905376,0.215597,0.895519,0.3905,0.72621,0.71559,0.589518,0.72472,0.57383,0.389605,0.708204,0.393838,0.715142,0.724438,0.594328,0.727231,0.581822,0.881126,0.295795,0.880337,0.308801,0.877835,0.304533,0.646811,0.633687,0.909054,0.597322,0.910589,0.582134,0.914238,0.593267,0.807694,0.948799,0.804023,0.953526,0.800035,0.944499,0.534914,0.665527,0.53926,0.670655,0.530572,0.669982,0.293174,0.858718,0.294219,0.851449,0.301813,0.859342,0.862633,0.845202,0.53182,0.677499,0.912366,0.771302,0.26669,0.876578,0.274715,0.865941,0.27443,0.876272,0.265315,0.865999,0.541502,0.869006,0.539395,0.859132,0.55066,0.864367,0.357065,0.745115,0.752409,0.145635,0.358942,0.771802,0.759112,0.147278,0.36849,0.774698,0.363932,0.764427,0.247951,0.732673,0.641967,0.618583,0.637994,0.612739,0.646304,0.609701,0.404795,0.556112,0.407035,0.576601,0.561046,0.879407,0.561681,0.875353,0.56743,0.884143,0.87827,0.848672,0.549169,0.682639,0.181126,0.709197,0.184852,0.721465,0.182569,0.721407,0.690037,0.15191,0.680693,0.144614,0.692852,0.137484,0.191225,0.710339,0.196404,0.722365,0.190041,0.721427,0.679011,0.694737,0.681089,0.678598,0.691262,0.678687,0.569667,0.411517,0.569619,0.388127,0.583768,0.402889,0.577642,0.411308,0.584769,0.413216,0.57877,0.388026,0.584822,0.384148,0.643407,0.310692,0.653017,0.313794,0.65149,0.319425,0.643697,0.33081,0.568533,0.561405,0.580463,0.558173,0.580961,0.564207,0.564744,0.580425,0.833552,0.048711,0.827985,0.044777,0.829644,0.038784,0.837927,0.038789,0.82872,0.030628,0.835297,0.030796,0.210214,0.534383,0.21464,0.541923,0.204848,0.537621,0.202715,0.532981,0.712878,0.025178,0.720868,0.018855,0.71637,0.028108,0.749759,0.079336,0.748982,0.089529,0.741761,0.088713,0.708801,0.016403,0.712251,0.013564,0.716195,0.011415,0.343103,0.838232,0.344288,0.842532,0.335621,0.841989,0.769124,0.153158,0.775716,0.142291,0.774981,0.145751,0.768933,0.151998,0.776716,0.159259,0.766479,0.165729,0.733959,0.899112,0.738931,0.894485,0.738999,0.898843,0.776699,0.172987,0.213856,0.020572,0.218502,0.00856,0.222932,0.015071,0.471236,0.46896,0.467579,0.473824,0.465798,0.461642,0.647063,0.906758,0.636311,0.907928,0.647379,0.898261,0.940854,0.618585,0.936492,0.623724,0.939491,0.610471,0.783084,0.262628,0.797086,0.261149,0.798057,0.275155,0.464826,0.48033,0.472435,0.47566,0.470951,0.481724,0.631115,0.267978,0.632934,0.274823,0.629959,0.276672,0.333212,0.940905,0.33087,0.942046,0.332686,0.938307,0.015374,0.894068,0.008187,0.88953,0.013928,0.888899,0.756774,0.782275,0.760376,0.790968,0.750652,0.786521,0.228243,0.006393,0.223581,0.014971,0.221947,0.01199,0.458558,0.480547,0.63223,0.26043,0.640116,0.275804,0.472127,0.487044,0.465708,0.489321,0.45558,0.48488,0.639217,0.268942,0.638587,0.240204,0.636327,0.237869,0.639567,0.232044,0.909732,0.242103,0.906665,0.248382,0.908092,0.238764,0.379716,0.934295,0.381925,0.944562,0.37509,0.940641,0.818152,0.823316,0.824013,0.821701,0.822485,0.832096,0.719598,0.026668,0.716062,0.040412,0.716676,0.032003,0.717007,0.039409,0.463611,0.474137,0.458798,0.465406,0.446643,0.447956,0.45601,0.453597,0.453957,0.45838,0.20244,0.356204,0.206649,0.349017,0.204465,0.357423,0.525429,0.821028,0.519135,0.822194,0.519018,0.814807,0.759079,0.797214,0.751586,0.795938,0.767364,0.794704,0.765725,0.797759,0.692353,0.692364,0.679284,0.157936,0.690862,0.65933,0.678904,0.661937,0.638313,0.32094,0.652955,0.330797,0.561522,0.570761,0.581117,0.577638,0.581098,0.581236,0.578518,0.583854,0.741369,0.081941,0.743343,0.077408,0.743629,0.09605,0.739508,0.098751,0.743243,0.108541,0.738051,0.100303,0.333054,0.831585,0.337938,0.826311,0.343764,0.829673,0.334118,0.833141,0.107097,0.930457,0.105982,0.919575,0.1116,0.927577,0.912516,0.248914,0.775644,0.151979,0.736657,0.890252,0.731655,0.890259,0.976995,0.200817,0.976664,0.19354,0.978869,0.196398,0.785245,0.250778,0.750391,0.783247,0.227053,0.011019,0.598571,0.931693,0.594509,0.926013,0.599598,0.923205,0.779598,0.142018,0.382773,0.935236,0.820144,0.833001,0.814664,0.824594,0.297047,0.947845,0.295675,0.955444,0.295414,0.951397,0.298929,0.952498,0.203922,0.330547,0.205632,0.334647,0.20145,0.3324,0.202253,0.349563,0.201311,0.346074,0.44847,0.440556,0.748868,0.073134,0.751481,0.792451,0.454406,0.655366,0.466278,0.647937,0.473967,0.651102,0.971871,0.961893,0.971592,0.968325,0.968017,0.965636,0.469163,0.674,0.454873,0.667287,0.570029,0.348945,0.574956,0.347697,0.577054,0.351017,0.105724,0.695414,0.103168,0.698077,0.094821,0.694311,0.924873,0.135329,0.925947,0.128621,0.927632,0.130262,0.09396,0.683153,0.100986,0.680443,0.899667,0.700532,0.900115,0.695607,0.906495,0.69474,0.979598,0.463993,0.977967,0.468456,0.978855,0.461402,0.106313,0.681638,0.81846,0.799005,0.818285,0.805662,0.816936,0.793998,0.819032,0.791031,0.889635,0.129029,0.888282,0.134547,0.887928,0.131138,0.627303,0.5328,0.623194,0.533287,0.616914,0.534717,0.616168,0.498603,0.621797,0.496294,0.625557,0.506386,0.820446,0.781809,0.3958,0.110413,0.395899,0.107661,0.398324,0.106179,0.400749,0.104697,0.400758,0.108879,0.400767,0.113062,0.364224,0.784507,0.360517,0.791402,0.359643,0.787514,0.358769,0.783626,0.360913,0.782786,0.363056,0.781945,0.208842,0.782204,0.20739,0.77375,0.22096,0.771129,0.365078,0.796177,0.35881,0.79153,0.583095,0.913971,0.58166,0.920722,0.579212,0.921375,0.582371,0.911564,0.969465,0.749913,0.973356,0.747743,0.972239,0.755322,0.969323,0.75488,0.189015,0.132382,0.184759,0.134121,0.186874,0.125885,0.330843,0.502465,0.337197,0.490836,0.336451,0.508935,0.338628,0.485008,0.34298,0.489467,0.34101,0.531906,0.342321,0.536067,0.336105,0.534823,0.359465,0.822715,0.354713,0.822473,0.359118,0.81508,0.442778,0.968313,0.437765,0.968649,0.438956,0.963735,0.440147,0.958821,0.44222,0.959829,0.787195,0.587025,0.777669,0.58664,0.787094,0.578184,0.788914,0.580211,0.367265,0.817783,0.364575,0.832226,0.362764,0.826384,0.358919,0.833228,0.360491,0.829447,0.3682,0.831243,0.362774,0.834126,0.357347,0.837009,0.7859,0.593577,0.784768,0.596487,0.781219,0.591563,0.787032,0.590667,0.673007,0.926003,0.669023,0.930842,0.666929,0.925248,0.765194,0.922747,0.759971,0.928132,0.761468,0.922576,0.640598,0.806016,0.647097,0.800822,0.6449,0.81381,0.834492,0.572017,0.841145,0.585448,0.837701,0.58709,0.204188,0.759324,0.20924,0.771174,0.204561,0.770456,0.684435,0.489796,0.690978,0.490824,0.684022,0.495359,0.175995,0.201504,0.171682,0.201551,0.172395,0.181505,0.92421,0.567345,0.922098,0.54849,0.926171,0.565087,0.701295,0.036958,0.696962,0.053977,0.697626,0.037874,0.16532,0.583332,0.166181,0.59255,0.160886,0.594075,0.694868,0.007423,0.702289,0.024653,0.695597,0.020545,0.342601,0.496661,0.331071,0.527646,0.159445,0.573678,0.164161,0.571621,0.166509,0.579006,0.693671,0.030251,0.695067,0.026696,0.348077,0.491717,0.627776,0.494745,0.624948,0.49431,0.626095,0.492097,0.926377,0.617446,0.928842,0.617841,0.931613,0.619233,0.941435,0.006494,0.941194,0.002674,0.942926,0.006315,0.907859,0.968289,0.904658,0.971925,0.905882,0.967586,0.461064,0.005308,0.462992,0.011346,0.454788,0.004275,0.45826,0.01072,0.45679,0.010506,0.45532,0.010292,0.42944,0.830952,0.420154,0.827854,0.422885,0.822861,0.42459,0.823049,0.426294,0.823236,0.645977,0.98733,0.647841,0.982337,0.647849,0.990542,0.43085,0.83927,0.424838,0.830453,0.885745,0.67116,0.885905,0.679118,0.8823,0.676839,0.884968,0.014889,0.883931,0.026047,0.881225,0.014286,0.463011,0.834951,0.471419,0.834156,0.471535,0.840554,0.469134,0.844253,0.642513,0.803541,0.636023,0.812297,0.635503,0.806345,0.877872,0.79135,0.883841,0.791674,0.881651,0.804468,0.645989,0.919015,0.647849,0.931668,0.640531,0.931661,0.180163,0.203134,0.172915,0.117238,0.185723,0.119457,0.177348,0.124737,0.214395,0.75945,0.21745,0.76198,0.358888,0.80572,0.361663,0.807117,0.207405,0.756907,0.353933,0.806984,0.355499,0.801587,0.358447,0.79475,0.31883,0.751189,0.31123,0.743986,0.308268,0.731956,0.181982,0.171666,0.181995,0.183127,0.183959,0.182659,0.31635,0.724025,0.316192,0.730229,0.879423,0.783756,0.375843,0.106372,0.368769,0.111472,0.368875,0.106093,0.879961,0.789904,0.876534,0.783069,0.877979,0.783413,0.761841,0.931029,0.75967,0.93185,0.764013,0.930208,0.178064,0.162106,0.170356,0.160656,0.180257,0.150402,0.163423,0.154246,0.170533,0.15233,0.325271,0.517986,0.845218,0.478787,0.844199,0.472774,0.85147,0.472938,0.847719,0.470119,0.312142,0.755227,0.318552,0.757992,0.614782,0.51598,0.904741,0.705054,0.978739,0.456652,0.106062,0.6887,0.647376,0.080513,0.65629,0.090026,0.647893,0.08945,0.655776,0.073507,0.887658,0.142242,0.159979,0.551663,0.1601,0.563808,0.15348,0.55882,0.691872,0.046214,0.702885,0.053332,0.578059,0.916501,0.190831,0.182453,0.187181,0.188905,0.185395,0.139137,0.178008,0.143611,0.444294,0.961613,0.834263,0.592872,0.83846,0.598652,0.159957,0.579903,0.701567,0.01471,0.336406,0.518095,0.320919,0.730917,0.167768,0.173051,0.169487,0.17037,0.307277,0.742467,0.149885,0.152878,0.158867,0.150804,0.157145,0.153718,0.092588,0.367883,0.090271,0.366364,0.092662,0.364827,0.920736,0.042376,0.922266,0.051244,0.916603,0.044582,0.889636,0.265541,0.894058,0.275478,0.89109,0.276313,0.458328,0.020157,0.457345,0.012075,0.456258,0.014284,0.454829,0.0182,0.453228,0.022969,0.91504,0.70493,0.914454,0.702514,0.917876,0.701685,0.913896,0.698205,0.913353,0.69295,0.91564,0.7064,0.918653,0.697573,0.784445,0.349293,0.784548,0.352628,0.782236,0.351908,0.78113,0.350563,0.784342,0.345959,0.355614,0.786052,0.358789,0.787578,0.42012,0.530888,0.426386,0.536094,0.417553,0.538301,0.889322,0.342804,0.893204,0.340758,0.895402,0.339299,0.260536,0.804343,0.256093,0.80129,0.259558,0.791703,0.274225,0.797155,0.423416,0.513176,0.421854,0.520531,0.41965,0.510801,0.744909,0.289341,0.749492,0.29048,0.743055,0.297715,0.859963,0.567942,0.850111,0.560895,0.861083,0.562673,0.942951,0.458092,0.944112,0.451965,0.945742,0.454162,0.759726,0.289053,0.763628,0.29648,0.758687,0.295263,0.849218,0.549803,0.857382,0.555291,0.257325,0.619307,0.262731,0.636465,0.256357,0.642454,0.259497,0.653407,0.833411,0.136434,0.833091,0.128926,0.840347,0.131845,0.833763,0.119399,0.841376,0.12506,0.409809,0.533111,0.416412,0.526454,0.228905,0.950114,0.231791,0.943335,0.235356,0.944732,0.228268,0.944715,0.794948,0.603509,0.800239,0.606394,0.795417,0.606342,0.181375,0.78426,0.18845,0.782651,0.18605,0.791886,0.874917,0.642845,0.87817,0.63848,0.875343,0.644903,0.352589,0.183079,0.352684,0.188388,0.350433,0.184236,0.736992,0.443348,0.733613,0.457217,0.730543,0.448282,0.08701,0.470083,0.09323,0.461153,0.095626,0.47195,0.729431,0.449619,0.952028,0.805761,0.95508,0.80026,0.954483,0.803625,0.953886,0.806991,0.284225,0.03428,0.277426,0.033958,0.276759,0.024052,0.633712,0.598477,0.632498,0.59147,0.635147,0.594149,0.257428,0.971916,0.257416,0.964149,0.262889,0.965627,0.455038,0.977279,0.449955,0.979638,0.449973,0.970809,0.223125,0.95365,0.220088,0.960065,0.21877,0.949725,0.610685,0.761331,0.610354,0.764746,0.604773,0.761682,0.911197,0.107238,0.914308,0.101433,0.91467,0.113409,0.777387,0.986957,0.777395,0.990735,0.777101,0.983393,0.932861,0.192774,0.92866,0.19788,0.928371,0.193576,0.930247,0.950091,0.92447,0.950385,0.931521,0.944433,0.941709,0.056879,0.937296,0.058879,0.93732,0.042125,0.099191,0.460768,0.743051,0.47685,0.738513,0.479088,0.738359,0.468972,0.743165,0.463846,0.096224,0.4478,0.094375,0.437748,0.101405,0.440067,0.633365,0.569341,0.629514,0.560591,0.635872,0.562038,0.635007,0.581484,0.639008,0.588213,0.734856,0.462746,0.740349,0.458404,0.629907,0.554293,0.635852,0.558452,0.633281,0.555213,0.086542,0.452571,0.086893,0.445879,0.091602,0.44896,0.09187,0.456174,0.639727,0.28921,0.646431,0.288788,0.642576,0.290745,0.936949,0.568453,0.931711,0.569824,0.938334,0.565683,0.086534,0.458389,0.782736,0.958734,0.779063,0.960175,0.779882,0.955049,0.949699,0.795103,0.955411,0.793344,0.955074,0.79668,0.448866,0.189465,0.451464,0.185607,0.454407,0.181479,0.454254,0.184087,0.454101,0.186695,0.838402,0.09711,0.83689,0.09163,0.841705,0.091632,0.846519,0.091633,0.933315,0.197006,0.929276,0.201566,0.833657,0.097462,0.841136,0.09177,0.897954,0.130572,0.89871,0.125112,0.900271,0.133435,0.164541,0.819761,0.16591,0.83443,0.15985,0.83022,0.605074,0.772187,0.609158,0.776465,0.604885,0.782142,0.60087,0.77955,0.601009,0.768087,0.160092,0.822118,0.501894,0.725685,0.510705,0.725287,0.510825,0.73391,0.27517,0.089909,0.264972,0.09089,0.264319,0.0801,0.279383,0.073524,0.263095,0.025574,0.263828,0.017384,0.273853,0.017296,0.187658,0.774838,0.195001,0.782168,0.181135,0.780426,0.267893,0.068013,0.272788,0.060574,0.78087,0.670938,0.776735,0.669866,0.778026,0.664956,0.775555,0.664154,0.784269,0.66455,0.835475,0.216836,0.839221,0.223277,0.832519,0.218324,0.772628,0.680061,0.769768,0.667031,0.769715,0.65885,0.180763,0.782766,0.183982,0.781278,0.879197,0.756912,0.88135,0.760703,0.878064,0.761069,0.431206,0.854034,0.432573,0.851535,0.431869,0.855059,0.488723,0.274191,0.493358,0.281379,0.491192,0.282544,0.495524,0.280213,0.507834,0.723484,0.50869,0.721251,0.798422,0.608134,0.255954,0.057187,0.262805,0.04905,0.263439,0.058098,0.276152,0.040307,0.87271,0.469308,0.865182,0.470808,0.866198,0.462752,0.868021,0.479791,0.87485,0.478145,0.841903,0.195906,0.833143,0.201383,0.773397,0.685698,0.769377,0.683943,0.412331,0.516079,0.406423,0.521978,0.27064,0.791435,0.266286,0.787211,0.427328,0.50214,0.431172,0.51317,0.430804,0.520409,0.765669,0.286585,0.502767,0.737317,0.495776,0.737105,0.496993,0.729294,0.833397,0.142736,0.41347,0.540249,0.497331,0.721762,0.872224,0.637446,0.87029,0.639059,0.369584,0.88812,0.366341,0.890447,0.363648,0.890047,0.18128,0.790817,0.882807,0.765183,0.885323,0.750693,0.416733,0.497875,0.414609,0.50065,0.414984,0.494405,0.675341,0.284997,0.679645,0.28553,0.677688,0.290181,0.283017,0.076805,0.286007,0.073291,0.283046,0.030582,0.261575,0.970314,0.453317,0.971612,0.61101,0.75845,0.912462,0.111268,0.101585,0.452158,0.895272,0.302589,0.893327,0.308427,0.89098,0.300857,0.157001,0.824469,0.393006,0.924001,0.396616,0.934822,0.3894,0.935312,0.275868,0.094453,0.178158,0.768009,0.878218,0.774634,0.783851,0.655552,0.262895,0.073826,0.42984,0.856533,0.874085,0.484492,0.260206,0.065397,0.576819,0.278895,0.57455,0.276908,0.57957,0.280176,0.779114,0.682527,0.540289,0.964564,0.536818,0.961805,0.536512,0.957121,0.874883,0.634519,0.871595,0.630558,0.878481,0.632177,0.38227,0.980601,0.381422,0.982404,0.38048,0.981127,0.381628,0.979742,0.382777,0.978357,0.992788,0.353627,0.993023,0.358559,0.991475,0.358181,0.989928,0.357803,0.990404,0.353922,0.366618,0.899851,0.359048,0.899838,0.360696,0.897419,0.361756,0.894123,0.35784,0.89663,0.35784,0.89219,0.492391,0.289799,0.493084,0.284827,0.494507,0.285168,0.49593,0.28551,0.494749,0.289757,0.791379,0.373251,0.794155,0.371278,0.791619,0.379077,0.790597,0.36432,0.794367,0.360221,0.797617,0.368552,0.628275,0.749985,0.644576,0.756553,0.63182,0.752349,0.934888,0.368145,0.937597,0.358649,0.940973,0.366616,0.522231,0.105724,0.527299,0.113114,0.517443,0.107465,0.644201,0.740793,0.644621,0.748502,0.312734,0.004569,0.31861,0.003262,0.316311,0.009404,0.49112,0.964498,0.48869,0.973083,0.488695,0.967898,0.805338,0.569583,0.810805,0.563013,0.811102,0.589183,0.804703,0.592143,0.533958,0.759493,0.534075,0.751458,0.541075,0.748816,0.845376,0.769896,0.846558,0.762798,0.853827,0.763654,0.84617,0.752576,0.85424,0.757694,0.613949,0.04138,0.621992,0.03537,0.617992,0.040941,0.784679,0.375869,0.78872,0.374852,0.780789,0.37808,0.975851,0.095376,0.972815,0.099669,0.978471,0.09119,0.108169,0.969528,0.111772,0.972465,0.107123,0.971463,0.888133,0.833204,0.884548,0.832565,0.886454,0.830931,0.888428,0.829104,0.889634,0.831004,0.509391,0.902799,0.5113,0.904922,0.508285,0.905031,0.506284,0.902478,0.507474,0.900539,0.885893,0.82682,0.883797,0.82714,0.886121,0.823337,0.512489,0.894475,0.512982,0.899277,0.510494,0.899072,0.386278,0.798449,0.381198,0.7977,0.381501,0.793224,0.625989,0.349257,0.628359,0.355034,0.624406,0.353554,0.882601,0.822764,0.345856,0.97884,0.348077,0.976852,0.347775,0.983053,0.746693,0.403675,0.744572,0.395007,0.756982,0.390221,0.751705,0.217093,0.759151,0.208585,0.761671,0.212463,0.742936,0.396244,0.918503,0.780495,0.917816,0.785367,0.914182,0.780512,0.132835,0.229048,0.13283,0.214448,0.139457,0.228833,0.127169,0.252779,0.133755,0.26119,0.126318,0.256992,0.348459,0.262789,0.345117,0.267378,0.341036,0.267773,0.248269,0.97239,0.242265,0.974232,0.242265,0.96963,0.242418,0.965082,0.246179,0.966413,0.578635,0.827565,0.583199,0.823112,0.583,0.82811,0.352089,0.260906,0.354763,0.260132,0.353384,0.271241,0.571486,0.826075,0.879472,0.618644,0.876215,0.6224,0.873959,0.622313,0.872791,0.617354,0.875356,0.617019,0.879043,0.617617,0.877922,0.616685,0.580042,0.834713,0.578068,0.834906,0.574041,0.830537,0.578888,0.830842,0.580608,0.832304,0.581456,0.833898,0.207657,0.921245,0.203891,0.924489,0.203118,0.919798,0.528818,0.926815,0.52335,0.929626,0.522918,0.924504,0.375191,0.785932,0.375212,0.774794,0.380154,0.776037,0.620925,0.369607,0.619753,0.358065,0.625773,0.366306,0.934662,0.322693,0.935208,0.319814,0.939624,0.324243,0.131339,0.221475,0.127801,0.215171,0.751082,0.390304,0.754956,0.400211,0.756448,0.424288,0.750151,0.426897,0.752148,0.418865,0.757116,0.410755,0.756243,0.197102,0.757895,0.186136,0.764193,0.187296,0.754614,0.190313,0.751449,0.196309,0.271178,0.752731,0.267339,0.755708,0.261584,0.748932,0.750918,0.410534,0.754544,0.209399,0.754373,0.204815,0.762622,0.203131,0.581347,0.816274,0.576907,0.820098,0.440078,0.355454,0.443961,0.351688,0.44717,0.35377,0.20894,0.925036,0.204859,0.928474,0.780382,0.366546,0.784705,0.359324,0.784719,0.363721,0.202064,0.914223,0.258704,0.982932,0.25857,0.978692,0.262991,0.983264,0.906614,0.631909,0.90735,0.641158,0.903364,0.643453,0.908093,0.298424,0.909228,0.302554,0.906663,0.306916,0.191019,0.864558,0.18275,0.86742,0.188214,0.858327,0.548626,0.747291,0.548467,0.75831,0.821277,0.920796,0.824658,0.932657,0.817052,0.931816,0.120187,0.281221,0.121383,0.269785,0.133562,0.277061,0.123695,0.222912,0.391284,0.780006,0.392807,0.786769,0.635236,0.358164,0.635854,0.363225,0.387658,0.788345,0.624243,0.357061,0.133907,0.263927,0.79467,0.633339,0.795395,0.62666,0.803437,0.621991,0.807269,0.615499,0.80866,0.625339,0.885479,0.819261,0.542077,0.743383,0.544653,0.743194,0.111519,0.974884,0.107046,0.974208,0.540127,0.743532,0.526583,0.930893,0.524938,0.929833,0.528229,0.931953,0.120659,0.24601,0.117514,0.245577,0.118046,0.243728,0.120723,0.241341,0.123804,0.246443,0.270614,0.773506,0.264576,0.77151,0.263532,0.760314,0.802599,0.645679,0.797773,0.644057,0.79952,0.642002,0.845165,0.044845,0.844753,0.033364,0.848706,0.034443,0.852659,0.035522,0.851457,0.037908,0.628691,0.742296,0.633559,0.739115,0.543105,0.761857,0.850879,0.77521,0.613928,0.01891,0.613904,0.027299,0.610977,0.028719,0.609422,0.026845,0.38873,0.789922,0.630838,0.346508,0.760529,0.22275,0.946883,0.931783,0.949706,0.929157,0.950566,0.933594,0.342579,0.26297,0.344127,0.25817,0.76428,0.197064,0.269489,0.749935,0.413292,0.005798,0.409968,0.006069,0.410046,0.002409,0.412931,0.012109,0.416573,0.011988,0.419027,0.011021,0.582823,0.818324,0.259726,0.986135,0.903707,0.633759,0.780277,0.556258,0.786718,0.553225,0.781923,0.560345,0.119052,0.216556,0.379964,0.790207,0.803601,0.634962,0.851172,0.045022,0.84947,0.052594,0.623229,0.354171,0.538191,0.74363,0.80547,0.644503,0.809049,0.647008,0.796205,0.64118,0.884332,0.829904,0.886132,0.827781,0.511654,0.902199,0.509915,0.899646,0.955412,0.144087,0.95868,0.13115,0.958687,0.138183,0.958694,0.145216,0.967041,0.710265,0.968974,0.714612,0.96552,0.710458,0.965108,0.705918,0.673375,0.05288,0.67791,0.05151,0.67241,0.056289,0.711408,0.0629,0.716176,0.058354,0.71386,0.063274,0.450458,0.807627,0.45171,0.82053,0.448132,0.814086,0.009352,0.79365,0.013685,0.79274,0.01323,0.797426,0.886157,0.447368,0.889489,0.446952,0.886821,0.45211,0.36486,0.931907,0.364015,0.925664,0.370517,0.929793,0.879722,0.457725,0.880198,0.448816,0.887358,0.456578,0.008353,0.817724,0.005998,0.801551,0.756042,0.76169,0.75118,0.766088,0.751769,0.75741,0.862492,0.050026,0.864109,0.042515,0.870527,0.038613,0.867546,0.053977,0.011277,0.590984,0.012156,0.600159,0.011188,0.595505,0.024467,0.794602,0.028609,0.793497,0.020239,0.799444,0.023817,0.598828,0.025007,0.59431,0.030326,0.603867,0.706905,0.434651,0.711005,0.438143,0.707183,0.43815,0.032556,0.976256,0.032348,0.973276,0.036104,0.977698,0.49372,0.194159,0.493093,0.199136,0.489975,0.198846,0.487163,0.191349,0.486857,0.198557,0.070295,0.790785,0.070349,0.787688,0.075683,0.788214,0.775654,0.194941,0.770263,0.188813,0.777479,0.188398,0.736623,0.772139,0.7362,0.78049,0.726512,0.774914,0.949657,0.055037,0.95233,0.05243,0.95145,0.055905,0.947018,0.057651,0.950571,0.05938,0.373488,0.449856,0.375881,0.460519,0.371821,0.452739,0.380116,0.439024,0.388875,0.439605,0.378339,0.442004,0.613502,0.964355,0.614596,0.969594,0.611068,0.97188,0.889724,0.613364,0.890121,0.605709,0.891896,0.606587,0.893671,0.607466,0.893759,0.612022,0.758084,0.628498,0.761347,0.627319,0.76566,0.630835,0.009252,0.909093,0.01456,0.911269,0.016952,0.91476,0.012168,0.907779,0.815495,0.678565,0.81915,0.68089,0.81598,0.684202,0.071755,0.850623,0.076434,0.85278,0.073132,0.854379,0.781307,0.194468,0.776676,0.187226,0.711825,0.660978,0.714641,0.667527,0.708472,0.669293,0.704301,0.664668,0.777156,0.203602,0.783225,0.204571,0.703587,0.656221,0.730699,0.754989,0.725701,0.755408,0.725552,0.751232,0.737767,0.759677,0.738626,0.764925,0.729309,0.767698,0.693958,0.123047,0.697724,0.128543,0.693811,0.12808,0.703298,0.124325,0.929996,0.904666,0.930905,0.906464,0.927866,0.908496,0.951584,0.047623,0.949071,0.049984,0.946984,0.047593,0.824875,0.677527,0.817752,0.675903,0.024298,0.783688,0.02047,0.78062,0.02713,0.778482,0.021353,0.784439,0.024658,0.779026,0.810707,0.686675,0.738384,0.985521,0.737014,0.978788,0.741434,0.983287,0.413837,0.905449,0.412629,0.912489,0.408775,0.914288,0.762054,0.643381,0.75454,0.635,0.760885,0.637345,0.343333,0.882681,0.3356,0.88361,0.340815,0.87949,0.757839,0.644147,0.755783,0.636433,0.337517,0.882155,0.340272,0.87444,0.758075,0.753468,0.766477,0.750462,0.76684,0.76302,0.550308,0.901687,0.550662,0.912881,0.543028,0.909183,0.358263,0.463776,0.36631,0.466131,0.363796,0.471534,0.485359,0.184336,0.48365,0.2001,0.471837,0.201599,0.067517,0.809227,0.06937,0.79743,0.082516,0.79834,0.765929,0.097405,0.767249,0.106059,0.760628,0.102795,0.81122,0.330199,0.812278,0.332131,0.804139,0.333525,0.815535,0.316279,0.808875,0.326614,0.813724,0.320369,0.760591,0.103008,0.771552,0.108624,0.760258,0.107656,0.763831,0.747121,0.761551,0.751649,0.760105,0.747104,0.369121,0.437569,0.37335,0.44429,0.366936,0.440602,0.71213,0.67358,0.706265,0.678874,0.713126,0.680737,0.245166,0.925471,0.247019,0.923066,0.245092,0.927573,0.760726,0.085871,0.767169,0.087015,0.761703,0.090397,0.810528,0.339394,0.812296,0.342419,0.243278,0.91591,0.239353,0.921839,0.239761,0.9176,0.820996,0.667077,0.820949,0.677198,0.81942,0.673,0.030263,0.608571,0.024776,0.620519,0.022521,0.609034,0.031829,0.618513,0.443503,0.800426,0.361649,0.92547,0.020325,0.795707,0.931535,0.586393,0.934654,0.589241,0.92966,0.594528,0.077397,0.795012,0.07024,0.793881,0.734306,0.76722,0.3935,0.436175,0.394881,0.440944,0.388129,0.435295,0.754821,0.629677,0.782259,0.217852,0.779583,0.211679,0.739517,0.753091,0.738449,0.75823,0.72617,0.742873,0.732567,0.746321,0.725903,0.758255,0.77321,0.19663,0.728994,0.763938,0.109182,0.959396,0.11259,0.957754,0.109547,0.961146,0.43998,0.188428,0.436103,0.189229,0.436896,0.184988,0.407952,0.908334,0.235505,0.813512,0.236114,0.809335,0.241358,0.810054,0.242806,0.80536,0.237522,0.792987,0.238944,0.79618,0.230273,0.790649,0.358941,0.471537,0.477138,0.190358,0.077666,0.806401,0.817204,0.321927,0.357497,0.430882,0.765461,0.084595,0.771787,0.083292,0.909506,0.271153,0.907514,0.266347,0.911138,0.268474,0.90389,0.26422,0.392089,0.907811,0.394206,0.90329,0.396731,0.901621,0.39168,0.904958,0.714293,0.780396,0.717475,0.777712,0.720717,0.785333,0.762989,0.812604,0.763379,0.823374,0.756471,0.80543,0.244298,0.768021,0.244142,0.778662,0.23143,0.776062,0.937868,0.171305,0.932923,0.178411,0.934687,0.167664,0.797161,0.437199,0.800151,0.445371,0.795104,0.436167,0.69635,0.064162,0.702468,0.059098,0.702207,0.061475,0.726677,0.975351,0.72666,0.96612,0.728926,0.972203,0.81239,0.155952,0.814735,0.161249,0.806799,0.173508,0.806656,0.152206,0.701642,0.067969,0.863483,0.538871,0.865229,0.531046,0.871172,0.531823,0.902892,0.957606,0.909134,0.962716,0.905951,0.960713,0.706984,0.793112,0.716635,0.788711,0.702744,0.795324,0.926005,0.875628,0.925324,0.879358,0.921787,0.882707,0.452433,0.769962,0.448346,0.774653,0.446025,0.772318,0.922913,0.78312,0.922916,0.780212,0.923959,0.785232,0.09876,0.367942,0.098063,0.364827,0.10184,0.369581,0.626678,0.89352,0.628972,0.89131,0.627458,0.895461,0.108676,0.909031,0.107307,0.90677,0.111684,0.90967,0.10449,0.906196,0.10293,0.90387,0.573154,0.201313,0.566571,0.204193,0.566964,0.200998,0.567356,0.197803,0.393312,0.749323,0.396499,0.749298,0.396713,0.754389,0.846738,0.739232,0.847221,0.744556,0.845062,0.746046,0.851138,0.739907,0.850222,0.744962,0.930085,0.932511,0.9325,0.92709,0.931848,0.934027,0.502412,0.168036,0.500656,0.157387,0.50524,0.15941,0.930204,0.660399,0.925789,0.655251,0.931448,0.655254,0.47371,0.881747,0.469436,0.884516,0.471511,0.877299,0.473527,0.877273,0.470775,0.730942,0.474165,0.733759,0.461044,0.7311,0.464478,0.729687,0.467912,0.728274,0.846759,0.45196,0.853555,0.455702,0.854957,0.459886,0.26242,0.845552,0.267472,0.848,0.264146,0.849684,0.763376,0.515728,0.759352,0.50636,0.768031,0.505949,0.769411,0.536774,0.764476,0.537442,0.762252,0.528802,0.733049,0.085843,0.732168,0.094252,0.722536,0.087948,0.726245,0.079847,0.733134,0.080069,0.845136,0.23429,0.850224,0.233197,0.852484,0.242538,0.720581,0.081562,0.71711,0.085171,0.758996,0.516079,0.769114,0.519842,0.771081,0.526466,0.771043,0.526391,0.759026,0.522408,0.716122,0.091002,0.720404,0.098024,0.720047,0.095788,0.731106,0.102208,0.72076,0.10026,0.926182,0.731055,0.93036,0.729253,0.930866,0.732724,0.401984,0.010862,0.39832,0.01335,0.400271,0.009926,0.456535,0.3547,0.452155,0.355708,0.453054,0.352817,0.453953,0.349925,0.432967,0.807882,0.42523,0.81217,0.423439,0.807366,0.428661,0.809988,0.421264,0.813377,0.70411,0.782657,0.707361,0.777231,0.706301,0.78301,0.451926,0.864766,0.448057,0.866643,0.449894,0.856736,0.888942,0.555531,0.890479,0.558682,0.885338,0.562989,0.465271,0.746076,0.46086,0.73614,0.467059,0.738674,0.832562,0.873154,0.840603,0.877088,0.837821,0.885021,0.878098,0.903433,0.870532,0.902322,0.875186,0.89201,0.788425,0.419547,0.787773,0.410277,0.791691,0.411882,0.347707,0.965949,0.347879,0.972342,0.34276,0.968791,0.579994,0.195867,0.58036,0.186509,0.377065,0.759965,0.375786,0.754105,0.38667,0.759318,0.56566,0.19456,0.374302,0.746525,0.38665,0.74834,0.653864,0.520137,0.652059,0.529591,0.641573,0.542532,0.69343,0.58133,0.693499,0.576157,0.698226,0.578743,0.637026,0.522064,0.636021,0.528764,0.109062,0.75006,0.105685,0.745667,0.104571,0.742023,0.106611,0.741481,0.108651,0.740939,0.301504,0.105992,0.300769,0.109969,0.298787,0.109256,0.302751,0.110682,0.487117,0.844817,0.48747,0.839814,0.489339,0.845916,0.486764,0.84982,0.499477,0.13407,0.497501,0.127564,0.501615,0.132492,0.268245,0.911024,0.267883,0.905443,0.271703,0.914041,0.428001,0.79465,0.426852,0.807995,0.42548,0.80398,0.71111,0.78308,0.246125,0.772839,0.753519,0.825678,0.753947,0.817418,0.231996,0.771522,0.814865,0.147342,0.81045,0.147502,0.789076,0.437225,0.095836,0.756481,0.100674,0.760891,0.101416,0.748813,0.868725,0.54174,0.924991,0.87362,0.451209,0.767444,0.624383,0.89573,0.390124,0.749348,0.718064,0.107804,0.725347,0.100904,0.724825,0.112693,0.498817,0.168376,0.500255,0.172852,0.495039,0.174473,0.852153,0.451518,0.84847,0.240056,0.398967,0.006372,0.397096,0.003403,0.40189,0.014532,0.457375,0.351028,0.931166,0.919573,0.931627,0.923118,0.926625,0.922658,0.937406,0.750852,0.935959,0.744474,0.940433,0.748705,0.887109,0.567825,0.47311,0.73907,0.832805,0.878455,0.641841,0.50846,0.645351,0.511761,0.564158,0.182482,0.706105,0.589882,0.692912,0.586377,0.706795,0.598641,0.298273,0.105778,0.507774,0.153248,0.502815,0.145151,0.503911,0.143521,0.508697,0.14936,0.643281,0.53595,0.636465,0.538572,0.276445,0.911296,0.274121,0.905631,0.27558,0.908055,0.634874,0.542676,0.697968,0.568357,0.694956,0.566992,0.697661,0.5637,0.701315,0.557838,0.694913,0.561177,0.700264,0.552819,0.625173,0.889725,0.629579,0.887587,0.629071,0.89428,0.62917,0.89725,0.625992,0.883496,0.628208,0.884452,0.63027,0.886469,0.621704,0.886128,0.459428,0.723476,0.461694,0.722845,0.464986,0.725815,0.462771,0.727382,0.460557,0.72895,0.947684,0.355528,0.950965,0.352544,0.950791,0.354191,0.950617,0.355838,0.963197,0.969341,0.963623,0.974156,0.962437,0.968802,0.948538,0.356179,0.111137,0.903438,0.10623,0.91054,0.106618,0.907299,0.107007,0.904057,0.110221,0.897979,0.112863,0.896252,0.108063,0.902708,0.107821,0.901207,0.107579,0.899706,0.19393,0.940591,0.196429,0.946482,0.192997,0.939731,0.276592,0.851802,0.27743,0.858067,0.274713,0.856415,0.273915,0.85255,0.271996,0.854762,0.27428,0.844573,0.273563,0.845154,0.271514,0.843974,0.27176,0.842581,0.272005,0.841188,0.19643,0.936139,0.851365,0.589707,0.8529,0.5823,0.856027,0.58902,0.908949,0.140003,0.916212,0.139904,0.915811,0.145216,0.850201,0.592351,0.346233,0.602758,0.345362,0.593216,0.348018,0.603822,0.976922,0.685896,0.977631,0.681977,0.979353,0.685579,0.14629,0.973884,0.14276,0.97607,0.142788,0.965746,0.805174,0.365321,0.812504,0.376755,0.805331,0.390147,0.8124,0.362545,0.812388,0.390595,0.665454,0.894675,0.661126,0.880303,0.669598,0.888205,0.072009,0.697695,0.066031,0.698849,0.064071,0.692545,0.066149,0.687218,0.077278,0.681347,0.838749,0.951088,0.842457,0.948657,0.842475,0.959664,0.944574,0.141083,0.945315,0.134722,0.947621,0.144735,0.106267,0.81444,0.103958,0.809468,0.107084,0.807857,0.110209,0.806246,0.11028,0.813956,0.867525,0.797079,0.869258,0.802427,0.865768,0.801102,0.862279,0.799777,0.712081,0.453159,0.71104,0.445941,0.716238,0.447559,0.717454,0.456775,0.731588,0.915167,0.731813,0.911825,0.737248,0.913252,0.737294,0.916232,0.126412,0.972884,0.129304,0.97072,0.124473,0.975566,0.044752,0.42269,0.04241,0.427413,0.039736,0.423308,0.052579,0.449684,0.05926,0.44402,0.066401,0.442779,0.917672,0.208907,0.914987,0.217975,0.914318,0.207938,0.558567,0.273042,0.557138,0.279006,0.554659,0.280273,0.552458,0.272393,0.552179,0.28154,0.47227,0.964717,0.474881,0.966458,0.473447,0.971836,0.611001,0.612789,0.609014,0.614961,0.608558,0.606775,0.608566,0.599185,0.613203,0.60513,0.88863,0.633594,0.889234,0.64811,0.88612,0.643704,0.885718,0.63178,0.891151,0.637483,0.381744,0.110029,0.382713,0.106989,0.382551,0.1106,0.964472,0.151258,0.958908,0.159434,0.961507,0.15026,0.722354,0.469509,0.717065,0.479901,0.713642,0.468914,0.59373,0.631753,0.598357,0.619162,0.606008,0.623848,0.670274,0.252615,0.682016,0.25491,0.674385,0.254534,0.292927,0.890284,0.29204,0.884379,0.297529,0.891065,0.808928,0.533989,0.812385,0.542939,0.804061,0.532321,0.295688,0.897282,0.292373,0.900828,0.714154,0.458171,0.710696,0.459507,0.708465,0.457585,0.806176,0.527526,0.722315,0.230193,0.721273,0.228149,0.723938,0.230025,0.403714,0.18817,0.400242,0.188284,0.402304,0.184213,0.769084,0.439298,0.773017,0.438088,0.768449,0.442361,0.86105,0.798373,0.863296,0.797119,0.339774,0.598628,0.340027,0.591436,0.621121,0.335073,0.627543,0.334666,0.61902,0.33988,0.055684,0.860499,0.052999,0.863386,0.050475,0.853107,0.957144,0.442034,0.954753,0.441256,0.959381,0.439135,0.926178,0.957542,0.929595,0.963216,0.927462,0.964463,0.369831,0.913488,0.365103,0.906671,0.370468,0.90667,0.833674,0.826905,0.829081,0.820086,0.836699,0.818323,0.867334,0.247566,0.859411,0.249402,0.860133,0.240639,0.859943,0.240552,0.869099,0.242296,0.742232,0.626586,0.744154,0.636603,0.729982,0.632962,0.731275,0.61978,0.734401,0.627402,0.689398,0.315094,0.703089,0.320477,0.690566,0.321932,0.891684,0.980917,0.894425,0.977026,0.894495,0.978966,0.894564,0.980905,0.952616,0.950822,0.955399,0.950161,0.955538,0.951596,0.955677,0.953031,0.950975,0.951745,0.431397,0.938873,0.425605,0.941732,0.430128,0.937812,0.367308,0.949082,0.366224,0.949112,0.364141,0.943229,0.370517,0.941696,0.369063,0.946729,0.433183,0.944249,0.052056,0.441996,0.702198,0.331958,0.698402,0.330094,0.703729,0.327006,0.741072,0.613437,0.733852,0.615036,0.739641,0.609796,0.729292,0.608438,0.220407,0.912808,0.217221,0.920579,0.214363,0.916127,0.215528,0.91133,0.244426,0.933186,0.241275,0.939542,0.240316,0.933044,0.616841,0.298896,0.619457,0.29092,0.622619,0.299459,0.34094,0.613705,0.340483,0.609833,0.342275,0.610672,0.737188,0.662516,0.732863,0.671984,0.728651,0.67303,0.620826,0.314168,0.618276,0.31232,0.837735,0.831628,0.836557,0.836186,0.830231,0.830447,0.862216,0.236372,0.864909,0.240387,0.834737,0.838084,0.832692,0.838734,0.892743,0.638833,0.894389,0.639634,0.892047,0.644141,0.782406,0.920973,0.786572,0.918787,0.786678,0.920574,0.859965,0.91232,0.860217,0.914585,0.85625,0.914107,0.038053,0.917862,0.036269,0.918299,0.034269,0.918139,0.177138,0.810563,0.177322,0.806133,0.181478,0.810902,0.065837,0.676731,0.07215,0.677864,0.620936,0.323112,0.62795,0.326973,0.070083,0.675526,0.394837,0.977556,0.394597,0.979714,0.392463,0.979188,0.396731,0.98024,0.736668,0.683643,0.73761,0.686433,0.734789,0.67895,0.83971,0.9598,0.94431,0.14512,0.86468,0.795062,0.869863,0.788583,0.872157,0.791384,0.672347,0.275152,0.677769,0.263899,0.675067,0.27775,0.674705,0.266524,0.073786,0.44305,0.076425,0.438927,0.081753,0.44309,0.469339,0.972213,0.284632,0.964406,0.284586,0.959172,0.289404,0.967174,0.684289,0.24393,0.68861,0.25796,0.605261,0.634238,0.672923,0.240197,0.299708,0.897875,0.301205,0.893738,0.301929,0.897668,0.865475,0.795853,0.340349,0.604467,0.054174,0.855139,0.886683,0.475913,0.88205,0.480078,0.885422,0.471154,0.882661,0.413357,0.874498,0.409667,0.878593,0.405978,0.361748,0.910032,0.840908,0.821469,0.742905,0.646586,0.705483,0.304557,0.706487,0.313805,0.045123,0.440268,0.844672,0.66916,0.838572,0.673829,0.83479,0.665303,0.342746,0.895674,0.342539,0.90404,0.339048,0.894314,0.73132,0.655517,0.862058,0.167897,0.860686,0.177009,0.856752,0.165847,0.86308,0.178973,0.398122,0.183723,0.39817,0.182225,0.781237,0.927505,0.853162,0.909022,0.034636,0.9084,0.064963,0.680891,0.068005,0.674312,0.100481,0.803663,0.104024,0.805701,0.1021,0.807337,0.098961,0.807487,0.095214,0.806892,0.095644,0.805191,0.097125,0.803894,0.10534,0.80332,0.401149,0.349397,0.399796,0.345965,0.40203,0.345788,0.398285,0.35277,0.39569,0.35272,0.396626,0.349431,0.397886,0.34692,0.400375,0.351929,0.500309,0.639618,0.512327,0.638532,0.507825,0.653043,0.128232,0.676228,0.140878,0.672342,0.130057,0.679683,0.141988,0.64883,0.127932,0.652966,0.133819,0.641351,0.565692,0.246332,0.574671,0.25017,0.568427,0.25055,0.582121,0.244796,0.581722,0.252014,0.574687,0.224714,0.581741,0.222218,0.582242,0.231992,0.565424,0.225383,0.635327,0.192902,0.644312,0.190947,0.644987,0.193214,0.632659,0.198984,0.648465,0.195445,0.646927,0.20906,0.644005,0.215902,0.443368,0.679998,0.438332,0.6933,0.440491,0.67942,0.46536,0.55833,0.469102,0.56179,0.468893,0.576556,0.820056,0.456704,0.813188,0.480192,0.809741,0.479435,0.209971,0.653788,0.214328,0.661679,0.204748,0.658603,0.68774,0.449725,0.697188,0.447201,0.697587,0.452804,0.735092,0.701756,0.737524,0.713498,0.729785,0.713413,0.732005,0.705294,0.692792,0.441144,0.735852,0.717889,0.73361,0.722188,0.726417,0.724875,0.731804,0.732297,0.605314,0.883713,0.604194,0.87088,0.610075,0.874559,0.195617,0.898562,0.195925,0.90861,0.190823,0.898159,0.933901,0.408378,0.935781,0.405667,0.93409,0.415459,0.769033,0.317005,0.769995,0.323415,0.76365,0.323734,0.932414,0.304883,0.927292,0.304813,0.926663,0.295617,0.758763,0.329699,0.767924,0.332537,0.443679,0.8342,0.446213,0.848244,0.441183,0.848241,0.136662,0.972864,0.133763,0.979974,0.133937,0.969327,0.454018,0.296483,0.44273,0.286581,0.44215,0.278693,0.451812,0.28389,0.719417,0.892158,0.708304,0.894251,0.720392,0.882856,0.934783,0.142869,0.936046,0.130973,0.937487,0.139538,0.74937,0.846342,0.74642,0.831876,0.749981,0.836878,0.130078,0.759179,0.143735,0.768452,0.130431,0.771424,0.143165,0.78399,0.463495,0.322509,0.4695,0.323084,0.465442,0.33674,0.985521,0.027138,0.9829,0.029747,0.985879,0.023063,0.861383,0.339011,0.860724,0.341233,0.858074,0.33453,0.630324,0.774727,0.639064,0.784815,0.630126,0.777955,0.857818,0.329677,0.45424,0.33536,0.456863,0.33163,0.627499,0.414599,0.63166,0.40928,0.636351,0.42098,0.63345,0.4258,0.19159,0.907002,0.807152,0.936685,0.799626,0.937335,0.802396,0.929686,0.564847,0.94753,0.565402,0.953364,0.562582,0.949888,0.68944,0.469355,0.697123,0.460973,0.693406,0.469074,0.691738,0.473874,0.685867,0.481048,0.457805,0.32099,0.455625,0.311476,0.848997,0.195824,0.851922,0.196806,0.853239,0.20809,0.847932,0.207386,0.84808,0.202885,0.450103,0.302467,0.7273,0.69937,0.642477,0.79021,0.636857,0.788738,0.806369,0.235706,0.809609,0.237582,0.802266,0.237603,0.49684,0.654205,0.708156,0.279784,0.700773,0.272704,0.708726,0.265732,0.702765,0.279492,0.714648,0.279397,0.510945,0.66255,0.634941,0.212618,0.453523,0.558456,0.459395,0.583344,0.469058,0.580952,0.811013,0.454371,0.204967,0.652967,0.69107,0.456215,0.685387,0.444765,0.84078,0.918587,0.83996,0.926126,0.833937,0.921374,0.054764,0.927507,0.053568,0.917105,0.059235,0.924636,0.765317,0.316065,0.932832,0.297788,0.767909,0.339971,0.454007,0.84549,0.083861,0.913282,0.082074,0.922199,0.07866,0.916481,0.636474,0.375793,0.63643,0.382499,0.632549,0.385276,0.733675,0.733126,0.736486,0.727851,0.634857,0.389511,0.630176,0.400821,0.628785,0.392994,0.630024,0.393932,0.834631,0.06137,0.8388,0.065525,0.83565,0.068919,0.843343,0.069939,0.845628,0.059069,0.692889,0.460658,0.257413,0.91264,0.260189,0.917481,0.256896,0.920911,0.630444,0.782979,0.627666,0.786033,0.64688,0.790623,0.64605,0.786161,0.899826,0.91972,0.908022,0.921584,0.907111,0.928334,0.347183,0.947883,0.343966,0.9492,0.340064,0.946644,0.547326,0.200166,0.549477,0.193454,0.549628,0.195419,0.813267,0.245895,0.811714,0.24855,0.810075,0.261925,0.552512,0.201343,0.552931,0.206925,0.841473,0.434127,0.845229,0.430858,0.842313,0.435538,0.404925,0.8008,0.407282,0.806026,0.402858,0.80281,0.948773,0.85738,0.952033,0.855035,0.950046,0.861088,0.945339,0.858115,0.024061,0.982325,0.02141,0.975898,0.024983,0.977312,0.664539,0.619201,0.661202,0.620113,0.662982,0.609846,0.648227,0.592458,0.650878,0.58244,0.652237,0.57611,0.728492,0.277081,0.71939,0.27558,0.72612,0.270033,0.730309,0.259189,0.761296,0.871784,0.760002,0.865848,0.766923,0.861984,0.544652,0.174141,0.535897,0.177007,0.536627,0.171617,0.537358,0.166227,0.558188,0.133019,0.564788,0.128201,0.565061,0.134689,0.301734,0.046242,0.300768,0.059313,0.297006,0.055705,0.304871,0.078415,0.303622,0.070305,0.309579,0.07706,0.32515,0.027673,0.325698,0.034308,0.318481,0.034276,0.64161,0.160878,0.63689,0.17701,0.631219,0.167558,0.785022,0.319934,0.783162,0.325225,0.77802,0.339521,0.783506,0.318693,0.982504,0.066025,0.978882,0.071318,0.97888,0.066864,0.791479,0.320445,0.890813,0.798327,0.894131,0.7948,0.89182,0.800682,0.787848,0.707562,0.797684,0.71476,0.787994,0.715344,0.586851,0.14045,0.593573,0.133318,0.594113,0.146319,0.68863,0.893207,0.696528,0.889932,0.695122,0.904625,0.686359,0.90399,0.807446,0.886531,0.808749,0.901675,0.801324,0.896936,0.798743,0.887438,0.661477,0.641225,0.662614,0.650647,0.656372,0.648991,0.659703,0.627588,0.656068,0.638917,0.652487,0.564156,0.656989,0.566136,0.44037,0.598215,0.442422,0.593569,0.447042,0.597549,0.667451,0.623847,0.736528,0.064544,0.733108,0.058617,0.737371,0.060113,0.602838,0.807446,0.614941,0.802259,0.614949,0.810734,0.311561,0.035331,0.308753,0.035925,0.302085,0.031175,0.319285,0.087202,0.320864,0.082565,0.32234,0.081337,0.302133,0.02625,0.311289,0.026276,0.511491,0.077121,0.512444,0.092547,0.50771,0.085458,0.508102,0.073456,0.645042,0.148737,0.639028,0.142362,0.950951,0.959308,0.953647,0.96002,0.953913,0.972015,0.58352,0.130747,0.578463,0.133886,0.485433,0.825663,0.485397,0.81793,0.488833,0.828918,0.578801,0.157341,0.579752,0.150639,0.583336,0.151217,0.491537,0.835385,0.481407,0.835387,0.575572,0.147094,0.525155,0.017947,0.52278,0.0266,0.518927,0.017995,0.549269,0.262386,0.551697,0.255444,0.554454,0.265066,0.181004,0.954836,0.175656,0.948719,0.181379,0.947551,0.486862,0.805612,0.48989,0.821702,0.583925,0.159524,0.579011,0.174002,0.518397,0.04853,0.523495,0.05098,0.520271,0.060384,0.547792,0.234232,0.546529,0.225232,0.550661,0.222929,0.553048,0.232253,0.729623,0.249232,0.730481,0.25542,0.726919,0.245432,0.515704,0.071461,0.514232,0.068621,0.550605,0.222611,0.546134,0.219391,0.544133,0.21361,0.635082,0.162879,0.636405,0.14819,0.508694,0.038419,0.511196,0.034835,0.543718,0.248691,0.541303,0.245317,0.798023,0.722334,0.80266,0.724438,0.793274,0.722665,0.845084,0.421885,0.849846,0.41124,0.849571,0.417025,0.849296,0.422809,0.406717,0.814301,0.410702,0.815478,0.408997,0.821587,0.402732,0.813125,0.544627,0.242503,0.797132,0.340605,0.788014,0.330319,0.792664,0.330187,0.959682,0.760122,0.959639,0.774762,0.956864,0.763563,0.927262,0.391451,0.92311,0.39712,0.923931,0.381076,0.444595,0.615863,0.446661,0.626101,0.441484,0.622092,0.80878,0.245604,0.516784,0.079167,0.518525,0.080783,0.519347,0.086489,0.025458,0.979875,0.669368,0.610912,0.657744,0.588675,0.65411,0.596151,0.731187,0.269831,0.763734,0.874262,0.31222,0.083688,0.93153,0.214249,0.928672,0.216408,0.926378,0.209458,0.662136,0.557795,0.657394,0.554474,0.657677,0.631779,0.655698,0.620462,0.948002,0.851357,0.95071,0.850355,0.821649,0.080289,0.817867,0.067247,0.826703,0.078792,0.608106,0.795413,0.828176,0.063756,0.319395,0.094987,0.510271,0.092572,0.512284,0.098453,0.95135,0.969937,0.482038,0.82956,0.541791,0.159225,0.541551,0.146006,0.545101,0.143076,0.517582,0.057636,0.546013,0.21122,0.728643,0.291874,0.718723,0.29605,0.725875,0.286489,0.630259,0.13168,0.635375,0.13415,0.632154,0.137435,0.51171,0.05035,0.928518,0.278078,0.927805,0.264783,0.930016,0.275207,0.869103,0.746068,0.5,0,0.869059,0.746028,0.038917,0.498143,0.059907,0.476329,0.069987,0.485416,0.067852,0.61975,0.05266,0.601522,0.058378,0.596562,0.075035,0.489426,0.059513,0.505751,0.043335,0.628634,0.034051,0.608456,0.054294,0.636175,0.044153,0.597754,0.049004,0.506354,0.098657,0.909023,0.103009,0.891977,0.118206,0.903935,0.113773,0.870213,0.114561,0.878194,0.098125,0.867532,0.043585,0.637068,0.063574,0.656389,0.030255,0.654986,0.042212,0.451036,0.074796,0.45438,0.064002,0.471355,0.048425,0.6704,0.039343,0.673323,0.053137,0.434653,0.064203,0.432728,0.968973,0.792437,0.975717,0.794974,0.963246,0.807839,0.064298,0.391998,0.077396,0.404358,0.063983,0.424849,0.055537,0.684194,0.045471,0.713692,0.048548,0.679639,0.038399,0.712991,0.967742,0.823216,0.977717,0.811473,0.980537,0.820508,0.974484,0.840328,0.974865,0.883722,0.980774,0.9029,0.967995,0.900377,0.976979,0.923062,0.982583,0.915814,0.883679,0.98895,0.876427,0.976227,0.887307,0.981011,0.577016,0.966288,0.582997,0.987629,0.572361,0.978043,0.795404,0.014445,0.785016,0.019043,0.785015,0.005601,0.868065,0.984157,0.8609,0.99452,0.860928,0.981956,0.993771,0.025785,0.985819,0.028683,0.983153,0.014977,0.486962,0.977506,0.476442,0.990787,0.478849,0.972697,0.816121,0.009663,0.81886,0.005735,0.82215,0.008564,0.756419,0.016583,0.74854,0.007303,0.757315,0.008053,0.981227,0.586671,0.989102,0.592161,0.982867,0.594725,0.992166,0.576105,0.965628,0.853758,0.978146,0.862364,0.968891,0.867503,0.980356,0.567135,0.307849,0.819513,0.299265,0.843096,0.229132,0.809765,0.771431,0.840513,0.854132,0.819159,0.849861,0.859987,0.31026,0.779781,0.227169,0.76686,0.269051,0.757955,0.839404,0.887793,0.806592,0.870756,0.232555,0.756206,0.224379,0.783801,0.83698,0.742707,0.817998,0.775424,0.822842,0.746612,0.850796,0.740405,0.85088,0.782257,0.447423,0.929381,0.447385,0.904694,0.452947,0.906244,0.715728,0.966129,0.712137,0.949483,0.717974,0.950559,0.017755,0.455745,0.009376,0.537965,0.011605,0.971398,0.003039,0.968954,0.004454,0.954907,0.943904,0.280215,0.942391,0.269799,0.951468,0.266269,0.95147,0.282872,0.982955,0.186742,0.983086,0.202159,0.976805,0.201694,0.989206,0.128547,0.984873,0.144012,0.983813,0.129286,0.98568,0.853939,0.99427,0.872334,0.985341,0.866755,0.5485,0.921509,0.548925,0.914425,0.569441,0.916155,0.549038,0.879949,0.569484,0.873846,0.549253,0.886402,0.843422,0.986696,0.841955,0.959491,0.853143,0.962043,0.852581,0.987936,0.760478,0.977624,0.763384,0.995971,0.753313,0.99689,0.984394,0.531013,0.990312,0.559307,0.982764,0.552648,0.792728,0.969881,0.786351,0.993999,0.786308,0.970336,0.799176,0.969334,0.793806,0.990984,0.743677,0.994913,0.735768,0.993043,0.737652,0.977616,0.647679,0.593199,0.670491,0.584727,0.664268,0.599869,0.971979,0.071195,0.958122,0.077075,0.966492,0.037091,0.975732,0.521525,0.963107,0.484018,0.971735,0.486777,0.958709,0.039096,0.95891,0.517001,0.957586,0.483911,0.94033,0.959842,0.941772,0.988882,0.931015,0.986643,0.111347,0.939817,0.101024,0.975888,0.101476,0.944756,0.12388,0.94452,0.108094,0.973343,0.087197,0.939521,0.093964,0.940119,0.09254,0.981983,0.986872,0.353079,0.983556,0.310552,0.991484,0.311686,0.978547,0.935258,0.964538,0.984098,0.967296,0.935339,0.976801,0.353817,0.224614,0.982384,0.22494,0.939353,0.232018,0.938441,0.495351,0.909334,0.503431,0.907416,0.502334,0.953775,0.671488,0.953411,0.662663,0.943439,0.678866,0.928827,0.665492,0.623165,0.648051,0.618663,0.655371,0.603128,0.656925,0.638089,0.653199,0.652405,0.681769,0.679746,0.652459,0.665182,0.948086,0.597216,0.93388,0.589023,0.950214,0.587964,0.672927,0.965787,0.947304,0.60737,0.949284,0.615556,0.947156,0.633391,0.572064,0.885476,0.560415,0.913743,0.560846,0.892336,0.583974,0.934846,0.570281,0.92796,0.553831,0.941,0.56141,0.927699,0.561583,0.87505,0.552228,0.860631,0.582225,0.853652,0.390922,0.893487,0.383269,0.910031,0.390386,0.884189,0.394741,0.861409,0.395119,0.841708,0.399597,0.852431,0.671739,0.659217,0.674445,0.64806,0.684743,0.589732,0.688205,0.601174,0.696322,0.625038,0.682873,0.648803,0.704015,0.662061,0.681118,0.665333,0.695565,0.587495,0.703957,0.573918,0.717861,0.599339,0.706975,0.670824,0.722813,0.591878,0.734967,0.606479,0.756557,0.643745,0.737534,0.701033,0.715651,0.66428,0.76161,0.574694,0.32582,0.915565,0.318806,0.879386,0.323179,0.886774,0.454119,0.845883,0.448865,0.838281,0.452304,0.81903,0.448349,0.869294,0.318579,0.861999,0.454721,0.898985,0.448462,0.893933,0.99271,0.143737,0.807353,0.923991,0.80603,0.895177,0.812128,0.91255,0.056422,0.394655,0.05582,0.424788,0.057344,0.512549,0.076504,0.531179,0.052493,0.533578,0.04353,0.579934,0.046612,0.592851,0.046713,0.513108,0.049299,0.476288,0.052178,0.469144,0.010902,0.56214,0.702347,0.703164,0.729465,0.559874,0.762944,0.547453,0.95057,0.554545,0.926523,0.571245,0.511037,0.973474,0.506253,0.988284,0.505149,0.971511,0.98801,0.805523,0.996122,0.792146,0.997093,0.804186,0.987321,0.799522,0.51527,0.991336,0.606283,0.984364,0.596469,0.980574,0.597672,0.971347,0.836331,0.40619,0.828268,0.40534,0.831295,0.36719,0.819751,0.38817,0.811324,0.369393,0.345043,0.887272,0.353431,0.849061,0.363555,0.8527,0.846423,0.381683,0.852274,0.365046,0.356031,0.893904,0.368653,0.902878,0.382785,0.844135,0.087337,0.857946,0.102614,0.850081,0.088441,0.929197,0.085587,0.900128,0.300912,0.962774,0.302487,0.946333,0.312947,0.976336,0.025406,0.687559,0.018569,0.672143,0.009356,0.646375,0.032099,0.430065,0.04162,0.410938,0.025088,0.737614,0.006456,0.718354,0.027503,0.382461,0.04756,0.366115,0.582794,0.950451,0.539813,0.978114,0.539977,0.984269,0.535031,0.978336,0.483291,0.790882,0.509663,0.736373,0.520836,0.784677,0.456747,0.776212,0.534025,0.767476,0.529755,0.723895,0.924544,0.220517,0.927381,0.235621,0.910901,0.231169,0.933499,0.19968,0.534625,0.796018,0.540188,0.775221,0.5408,0.777624,0.784448,0.292842,0.747972,0.346603,0.753896,0.320447,0.766256,0.203082,0.764718,0.184613,0.790782,0.229117,0.768326,0.259493,0.723363,0.018257,0.739167,0.010753,0.728683,0.034248,0.721291,0.036257,0.074014,0.546881,0.037337,0.542384,0.936499,0.44387,0.943648,0.501903,0.901995,0.446152,0.836091,0.419425,0.844579,0.4237,0.836238,0.427744,0.448875,0.957034,0.44765,0.942707,0.455019,0.945754,0.451986,0.958867,0.962674,0.269362,0.961638,0.281843,0.958289,0.279954,0.959744,0.265941,0.51553,0.978726,0.518715,0.986428,0.46776,0.987472,0.455211,0.991297,0.455182,0.97361,0.911182,0.990131,0.910194,0.972371,0.923107,0.975951,0.345726,0.896044,0.822163,0.976842,0.829988,0.958612,0.8361,0.976017,0.365175,0.915666,0.382265,0.917484,0.616517,0.976907,0.612701,0.96374,0.63008,0.972157,0.553585,0.956005,0.54638,0.945612,0.946956,0.672635,0.938244,0.681907,0.931602,0.666784,0.42404,0.968525,0.432922,0.945187,0.439016,0.957386,0.44148,0.972407,0.441492,0.986867,0.432123,0.979385,0.674928,0.551052,0.688836,0.556477,0.661865,0.570081,0.96686,0.02715,0.956985,0.015413,0.975715,0.004333,0.948885,0.697926,0.939095,0.746027,0.951668,0.782257,0.938259,0.772554,0.472596,0.729645,0.516741,0.715449,0.497561,0.713657,0.777881,0.352432,0.873484,0.513146,0.813238,0.535277,0.810777,0.505424,0.844075,0.497716,0.813291,0.470724,0.892158,0.405352,0.861265,0.397697,0.861301,0.373387,0.863529,0.41755,0.891945,0.21644,0.913868,0.195384,0.928167,0.529604,0.902633,0.533181,0.911736,0.513286,0.869169,0.494895,0.894213,0.514008,0.149434,0.973572,0.133616,0.987181,0.132125,0.967258,0.077634,0.976753,0.065641,0.959628,0.077843,0.96125,0.114421,0.913256,0.967221,0.920586,0.283187,0.951036,0.276536,0.972235,0.272293,0.955209,0.574796,0.993575,0.793986,0.005964,0.993538,0.008395,0.983042,0.003736,0.821725,0.017864,0.816146,0.019018,0.978656,0.857044,0.9948,0.968638,0.986524,0.983079,0.985966,0.970276,0.99455,0.503749,0.995172,0.516931,0.982783,0.521742,0.984668,0.497756,0.850448,0.794286,0.782824,0.814751,0.305104,0.749129,0.81105,0.85586,0.725317,0.928423,0.452782,0.931039,0.665248,0.543919,0.661974,0.552247,0.011724,0.950967,0.975836,0.185787,0.996168,0.851309,0.777604,0.004536,0.7738,0.016735,0.768889,0.010424,0.77942,0.018017,0.753209,0.978197,0.991581,0.534416,0.989263,0.153295,0.99228,0.178073,0.983318,0.177405,0.744849,0.978484,0.638887,0.632943,0.63812,0.643977,0.644062,0.603889,0.977636,0.035804,0.930447,0.956627,0.974948,0.270973,0.98745,0.302197,0.97497,0.302606,0.982322,0.267299,0.116947,0.974774,0.084878,0.984454,0.991504,0.354813,0.971143,0.983407,0.976179,0.313725,0.232788,0.983035,0.493623,0.957473,0.981351,0.471876,0.980519,0.423795,0.985981,0.42375,0.972627,0.176719,0.963544,0.132618,0.97747,0.177662,0.679744,0.946871,0.644582,0.653603,0.583685,0.880185,0.320214,0.843765,0.060296,0.577742,0.074694,0.579953,0.728971,0.726975,0.966832,0.244578,0.945677,0.259456,0.945706,0.224511,0.959675,0.20433,0.93091,0.543949,0.827299,0.412389,0.528382,0.987129,0.525221,0.973289,0.53556,0.983758,0.6059,0.97409,0.819958,0.396584,0.33279,0.871938,0.335728,0.85852,0.089136,0.84788,0.103659,0.932426,0.584287,0.947118,0.771029,0.977032,0.777207,0.992189,0.7737,0.989201,0.897324,0.422373,0.875791,0.428967,0.027881,0.5531,0.832833,0.006956,0.833482,0.019033,0.82915,0.005327,0.828109,0.01619,0.461394,0.97146,0.917665,0.992258,0.849717,0.196233,0.845546,0.185339,0.850901,0.186415,0.166447,0.986656,0.167369,0.969437,0.173485,0.98036,0.034598,0.975793,0.023901,0.968917,0.040438,0.961901,0.0235,0.951078,0.819671,0.957822,0.926492,0.648646,0.553696,0.846598,0.290539,0.943335,0.992089,0.092695,0.992256,0.114272,0.983188,0.117685,0.649899,0.566646,0.933995,0.700017,0.92951,0.723876,0.996733,0.951899,0.990457,0.938238,0.996734,0.932357,0.473183,0.801129,0.792875,0.317966,0.886984,0.381177,0.854389,0.491785,0.149237,0.952583,0.061194,0.978903,0.582237,0.568674,0.536126,0.672552,0.47069,0.690986,0.27004,0.495627,0.237543,0.544124,0.220821,0.499959,0.155808,0.391892,0.22149,0.392847,0.369235,0.595606,0.400373,0.687393,0.356403,0.658487,0.501793,0.822921,0.540064,0.821171,0.505201,0.888802,0.469776,0.832232,0.461026,0.818768,0.644509,0.853589,0.641686,0.906864,0.637025,0.887891,0.173028,0.213314,0.159028,0.231216,0.107009,0.208948,0.489072,0.146706,0.397127,0.17499,0.422285,0.151051,0.109434,0.288872,0.079876,0.252033,0.102329,0.234287,0.417352,0.126754,0.395038,0.108861,0.39932,0.074248,0.444172,0.062968,0.474017,0.130372,0.080138,0.315873,0.038075,0.273618,0.353847,0.086006,0.05739,0.244253,0.039042,0.249414,0.032754,0.228561,0.373267,0.114705,0.355278,0.108696,0.350221,0.128165,0.142166,0.896825,0.167791,0.943287,0.132017,0.943244,0.1532,0.850301,0.171781,0.860483,0.172823,0.899056,0.874113,0.686558,0.883209,0.647198,0.913904,0.636239,0.916344,0.732963,0.871944,0.731743,0.200335,0.885348,0.181521,0.893152,0.183448,0.8477,0.218041,0.85368,0.940744,0.142079,0.954653,0.174398,0.922278,0.17878,0.921517,0.087492,0.936462,0.11438,0.955603,0.372987,0.963832,0.380097,0.967696,0.412395,0.956163,0.423197,0.969574,0.444358,0.970049,0.593194,0.966185,0.625497,0.957955,0.632606,0.958516,0.582397,0.95809,0.530498,0.971926,0.561236,0.931041,0.833222,0.93044,0.792123,0.956609,0.805771,0.947999,0.838997,0.93867,0.871848,0.931591,0.873691,0.224237,0.890898,0.247192,0.879863,0.25815,0.905985,0.224616,0.85224,0.234391,0.855062,0.985092,0.60614,0.987588,0.631936,0.981857,0.630115,0.886159,0.049325,0.851645,0.070078,0.851238,0.044575,0.982842,0.729332,0.982381,0.696187,0.991947,0.73468,0.981579,0.680152,0.976625,0.644933,0.989968,0.64444,0.41626,0.054506,0.477931,0.054475,0.160371,0.305997,0.487486,0.086825,0.850957,0.003184,0.876079,0.017588,0.190634,0.950873,0.184528,0.982764,0.181276,0.944528,0.253419,0.967873,0.26291,0.944512,0.264685,0.968696,0.197103,0.810028,0.210424,0.836247,0.194853,0.840546,0.473285,0.45528,0.491036,0.474248,0.443958,0.429431,0.207888,0.781396,0.712956,0.910245,0.725384,0.878809,0.726026,0.90642,0.599333,0.552059,0.520235,0.522988,0.546215,0.468835,0.575033,0.487131,0.617105,0.535044,0.060805,0.786472,0.021937,0.85972,0.021395,0.799092,0.023956,0.750505,0.546554,0.4606,0.86719,0.774481,0.867434,0.742765,0.88904,0.754243,0.889035,0.782257,0.91158,0.400585,0.911639,0.372202,0.937519,0.377903,0.843625,0.946241,0.817743,0.951942,0.817684,0.92356,0.850161,0.913695,0.817625,0.895177,0.392969,0.931731,0.373766,0.965044,0.37382,0.925922,0.907535,0.054274,0.893429,0.070778,0.89458,0.039362,0.875213,0.609457,0.869106,0.588962,0.894804,0.576646,0.48277,0.947875,0.461084,0.965904,0.461055,0.93651,0.479529,0.923525,0.461026,0.907116,0.87545,0.566127,0.88802,0.542124,0.684479,0.740793,0.698017,0.758546,0.653687,0.7535,0.715936,0.751078,0.724996,0.781806,0.097121,0.826832,0.103932,0.80885,0.126248,0.836675,0.674798,0.024476,0.664336,0.003423,0.683779,0.010442,0.663819,0.033284,0.342381,0.469293,0.360118,0.473108,0.386676,0.502942,0.369356,0.549869,0.339738,0.532256,0.852496,0.350724,0.87859,0.2665,0.883799,0.310351,0.855684,0.263381,0.671897,0.405399,0.672061,0.426412,0.643271,0.420628,0.64536,0.394807,0.642099,0.363971,0.668743,0.385623,0.516804,0.907809,0.5408,0.910388,0.539686,0.926503,0.516512,0.933714,0.53388,0.946202,0.510435,0.964119,0.705865,0.324749,0.730241,0.277641,0.722903,0.301592,0.740975,0.358387,0.705209,0.090957,0.731987,0.049631,0.723493,0.108616,0.732117,0.132006,0.670032,0.298175,0.691462,0.26887,0.701294,0.274257,0.673522,0.320446,0.668845,0.089697,0.701719,0.135814,0.691854,0.141141,0.670604,0.111704,0.229831,0.024031,0.241334,0.177349,0.167533,0.174317,0.556425,0.183678,0.481588,0.184306,0.546376,0.13495,0.081557,0.183221,0.10088,0.049417,0.382513,0.234401,0.414969,0.312614,0.338554,0.292599,0.045224,0.176689,0.042622,0.131181,0.359079,0.187627,0.593626,0.282082,0.543432,0.336881,0.069316,0.017148,0.027915,0.041486,0.461983,0.353716,0.382487,0.343033,0.046459,0.101904,0.016015,0.064718,0.361395,0.256243,0.260286,0.209824,0.27909,0.078418,0.294855,0.163667,0.590217,0.164512,0.622456,0.94777,0.61379,0.948143,0.610166,0.930591,0.725016,0.2118,0.694037,0.220639,0.699324,0.202825,0.649983,0.481277,0.6989,0.427028,0.706866,0.464117,0.636708,0.53654,0.641261,0.511214,0.807577,0.101757,0.74795,0.110591,0.821045,0.032094,0.834946,0.051332,0.845309,0.063874,0.616089,0.863061,0.592008,0.877799,0.614471,0.727416,0.631128,0.747595,0.609891,0.766341,0.381603,0.777828,0.400733,0.807469,0.374282,0.809416,0.368011,0.833508,0.324854,0.789742,0.050461,0.92753,0.057761,0.8864,0.071953,0.892469,0.944541,0.060859,0.930341,0.067078,0.922979,0.02883,0.94087,0.885822,0.951263,0.879797,0.958729,0.917795,0.944638,0.946828,0.958781,0.946355,0.969292,0.297838,0.969237,0.358387,0.956516,0.35404,0.943794,0.349692,0.942301,0.319074,0.955102,0.293895,0.940807,0.288456,0.748814,0.457265,0.786665,0.454801,0.770292,0.466658,0.703547,0.241686,0.700403,0.267085,0.694133,0.189387,0.693933,0.170845,0.730212,0.161825,0.700783,0.142981,0.979642,0.236743,0.972666,0.208507,0.984262,0.219638,0.210957,0.970659,0.201203,0.985767,0.206601,0.956031,0.218041,0.944528,0.885553,0.096189,0.914836,0.076362,0.914846,0.125349,0.884011,0.164098,0.914856,0.174337,0.852459,0.171823,0.894014,0.807052,0.917422,0.889768,0.876071,0.861769,0.691702,0.893501,0.659521,0.890324,0.703578,0.872343,0.781267,0.152158,0.75313,0.163409,0.800896,0.137826,0.548833,0.791044,0.565886,0.749384,0.605572,0.791229,0.609493,0.814699,0.550206,0.838518,0.322552,0.708152,0.38321,0.722475,0.378575,0.747742,0.321074,0.751497,0.357674,0.416183,0.322457,0.365442,0.389023,0.389701,0.393463,0.423139,0.363005,0.439305,0.123781,0.667209,0.145504,0.664536,0.151659,0.697505,0.71449,0.845296,0.810863,0.149658,0.81118,0.170266,0.787514,0.173308,0.026457,0.30509,0.034526,0.34832,0.00279,0.336109,0.066263,0.360531,0.34211,0.055349,0.349925,0.01366,0.381303,0.002792,0.399655,0.383863,0.422912,0.399428,0.147316,0.635654,0.184396,0.631166,0.164987,0.670025,0.394522,0.461138,0.369771,0.459072,0.35141,0.469201,0.651115,0.077623,0.685138,0.06958,0.656127,0.309128,0.656279,0.101475,0.033649,0.195511,0.021813,0.228496,0.027632,0.164353,0.702422,0.057111,0.719019,0.042002,0.019365,0.899016,0.022875,0.876125,0.039518,0.888294,0.042304,0.942764,0.01699,0.922016,0.418176,0.885988,0.441492,0.868488,0.440858,0.925125,0.41763,0.508679,0.154734,0.576137,0.220297,0.594049,0.286193,0.933019,0.275264,0.85215,0.299804,0.860514,0.117919,0.49804,0.251121,0.583337,0.921562,0.902698,0.898275,0.966165,0.89677,0.905541,0.92486,0.961619,0.37584,0.601412,0.354591,0.566437,0.881815,0.206595,0.885665,0.222655,0.821071,0.638859,0.846974,0.643051,0.836647,0.725753,0.818661,0.542431,0.857301,0.56035,0.7764,0.61924,0.777645,0.543139,0.792647,0.555731,0.802499,0.617737,0.809896,0.677591,0.935098,0.304079,0.935227,0.358387,0.891988,0.344324,0.917255,0.259672,0.934969,0.249771,0.782239,0.735164,0.809537,0.785077,0.787801,0.774048,0.774156,0.686874,0.812384,0.733141,0.886974,0.930254,0.890561,0.968003,0.875727,0.968004,0.860892,0.968004,0.868106,0.90038,0.787001,0.951339,0.777897,0.962807,0.770774,0.896023,0.745751,0.891982,0.735294,0.89988,0.735502,0.818641,0.75009,0.813363,0.736609,0.737691,0.747762,0.741269,0.421789,0.779624,0.438932,0.861632,0.406313,0.845309,0.420576,0.709323,0.439933,0.707392,0.084762,0.41544,0.340823,0.625478,0.573049,0.624858,0.270603,0.421695,0.289026,0.468394,0.63671,0.841092,0.108877,0.306942,0.398002,0.038462,0.915781,0.684619,0.182199,0.937315,0.191562,0.913311,0.920469,0.132348,0.955738,0.475094,0.223499,0.930623,0.466796,0.396418,0.976704,0.692064,0.171897,0.274499,0.482154,0.423157,0.982964,0.779312,0.97559,0.746595,0.987979,0.741559,0.24922,0.940944,0.242635,0.981351,0.185602,0.817092,0.824443,0.163321,0.045237,0.851109,0.039036,0.753827,0.015394,0.755528,0.059175,0.823766,0.524559,0.470508,0.927057,0.767789,0.904617,0.77508,0.912651,0.743332,0.944054,0.410447,0.911521,0.428967,0.332903,0.932902,0.352106,0.966214,0.332957,0.972023,0.356024,0.948024,0.39689,0.949917,0.908904,0.01372,0.893335,0.008146,0.898866,0.619396,0.887544,0.628784,0.087323,0.794463,0.099242,0.763264,0.634887,0.036087,0.646058,0.01358,0.656197,0.026718,0.634279,0.005817,0.873376,0.351481,0.227445,0.228817,0.340944,0.318777,0.148895,0.007204,0.34706,0.207159,0.615054,0.221106,0.813554,0.025571,0.798839,0.033639,0.821973,0.025939,0.728498,0.439954,0.724864,0.461434,0.749038,0.062221,0.596854,0.707886,0.059561,0.940843,0.932048,0.016877,0.930769,0.899995,0.93044,0.950911,0.800309,0.442763,0.988921,0.250681,0.980001,0.25812,0.210376,0.989755,0.92485,0.845803,0.92486,0.796816,0.862462,0.799327,0.658298,0.839536,0.339948,0.39625,0.113328,0.679689,0.087705,0.739997,0.09693,0.706019,0.318547,0.024529,0.638452,0.095712,0.685423,0.337054,0.419147,0.912726,0.424277,0.937106,0.2738,0.894618,0.3121,0.919813,0.74391,0.967836,0.735306,0.905854,0.761606,0.910303,0.763373,0.969859,0.819848,0.734014,0.903474,0.30407,0.877193,0.912502,0.79284,0.89576,0.796765,0.932927,0.756208,0.884085,0.441483,0.78507,0.890027,0.89343,0.882095,0.903945,0.887294,0.877832,0.893187,0.876027,0.034477,0.964923,0.037461,0.985375,0.033043,0.984521,0.033257,0.948516,0.026148,0.957511,0.026387,0.913363,0.865439,0.467373,0.86708,0.459447,0.879327,0.486491,0.839801,0.439771,0.866728,0.631678,0.884978,0.658301,0.876544,0.653746,0.881444,0.59354,0.875501,0.605219,0.875975,0.579058,0.884921,0.578645,0.879509,0.609953,0.03789,0.884216,0.035197,0.911348,0.884766,0.681706,0.882274,0.933526,0.89081,0.912264,0.891631,0.9573,0.882779,0.964501,0.852514,0.751179,0.883041,0.722944,0.87275,0.738694,0.867117,0.732347,0.877112,0.71797,0.89093,0.678663,0.842662,0.435755,0.852365,0.621697,0.914725,0.014769,0.91131,0.040757,0.911314,0.017635,0.921055,0.041555,0.884671,0.986053,0.893112,0.98062,0.029358,0.877204,0.871394,0.538813,0.871418,0.530926,0.876139,0.509493,0.846975,0.564041,0.659741,0.570559,0.655814,0.570913,0.657347,0.566923,0.218879,0.834917,0.226948,0.866962,0.218656,0.859129,0.294892,0.902226,0.286345,0.91176,0.292286,0.879447,0.880622,0.091217,0.8724,0.078485,0.872609,0.069543,0.874289,0.370951,0.852623,0.385457,0.881174,0.355018,0.869546,0.271513,0.853882,0.255791,0.856039,0.253608,0.884107,0.156843,0.855658,0.187701,0.852262,0.186408,0.902138,0.010715,0.908323,0.041804,0.899402,0.041396,0.219004,0.772218,0.227556,0.799648,0.218755,0.791309,0.297747,0.987085,0.289248,0.989715,0.289306,0.971738,0.297141,0.966242,0.874176,0.161805,0.885563,0.138803,0.88996,0.128432,0.893567,0.130299,0.889213,0.304814,0.883708,0.286883,0.884608,0.334306,0.883306,0.30277,0.887532,0.089034,0.288928,0.92878,0.295859,0.917504,0.29497,0.944967,0.226478,0.839291,0.221489,0.881584,0.296459,0.879017,0.854212,0.059853,0.887776,0.351648,0.610506,0.206748,0.609277,0.20315,0.612217,0.206384,0.85586,0.388983,0.911428,0.58158,0.904767,0.611402,0.902508,0.582067,0.898503,0.02491,0.227858,0.776867,0.606475,0.202251,0.605288,0.206224,0.560926,0.955914,0.551354,0.937301,0.560536,0.932296,0.053154,0.877078,0.049623,0.89516,0.049148,0.878398,0.057125,0.888284,0.054342,0.908763,0.580589,0.865069,0.567845,0.854166,0.572529,0.85261,0.589671,0.868868,0.169788,0.932894,0.155163,0.950264,0.162009,0.9344,0.619014,0.203736,0.622107,0.199891,0.620988,0.206798,0.148754,0.961026,0.165524,0.948645,0.151984,0.96392,0.55426,0.899189,0.561284,0.880727,0.562204,0.897633,0.046629,0.938936,0.054333,0.937249,0.055068,0.971298,0.168334,0.913286,0.161424,0.906448,0.150552,0.870521,0.592553,0.890288,0.58247,0.927426,0.58429,0.908834,0.044199,0.910195,0.551342,0.920929,0.615176,0.205094,0.616057,0.201692,0.561874,0.974027,0.552766,0.957588,0.569842,0.850432,0.5692,0.944495,0.162894,0.891187,0.312718,0.8981,0.32265,0.89125,0.318699,0.907805,0.870144,0.94403,0.874938,0.951336,0.873637,0.970917,0.940631,0.731789,0.929548,0.738579,0.950889,0.711965,0.205057,0.897303,0.190408,0.870459,0.207008,0.883269,0.212262,0.906421,0.193249,0.86763,0.313696,0.969698,0.30878,0.950248,0.317017,0.944337,0.874826,0.877768,0.872541,0.915285,0.865199,0.91062,0.930944,0.648785,0.934993,0.650558,0.950326,0.67823,0.94593,0.685753,0.192807,0.960321,0.202967,0.925728,0.206985,0.929056,0.947455,0.705987,0.862486,0.940167,0.308402,0.921706,0.432516,0.614502,0.432013,0.618481,0.430646,0.615893,0.17887,0.924258,0.182128,0.909635,0.185804,0.922639,0.869001,0.969669,0.931709,0.742014,0.319182,0.973417,0.870854,0.877991,0.180558,0.90531,0.177841,0.908031,0.113394,0.626862,0.114969,0.646295,0.111148,0.645547,0.120391,0.617841,0.112095,0.597915,0.121609,0.596788,0.118891,0.671672,0.11164,0.675164,0.112551,0.652747,0.781633,0.872029,0.747319,0.87136,0.748694,0.866485,0.796803,0.889043,0.788462,0.887092,0.769134,0.875575,0.891922,0.500439,0.914904,0.484605,0.91662,0.491142,0.939613,0.485881,0.920889,0.475557,0.920581,0.479839,0.915755,0.476142,0.938426,0.56687,0.902552,0.551636,0.908466,0.547819,0.910704,0.476579,0.908305,0.441742,0.916995,0.435991,0.843226,0.921976,0.851083,0.943378,0.841701,0.948216,0.906664,0.418643,0.917223,0.412745,0.796727,0.915613,0.777376,0.933734,0.793625,0.90598,0.888983,0.527498,0.897699,0.505271,0.909216,0.40777,0.911677,0.399185,0.921217,0.398946,0.844564,0.962219,0.115904,0.652719,0.112866,0.699963,0.121498,0.695243,0.747095,0.948843,0.766276,0.94675,0.845921,0.892874,0.853105,0.902957,0.852392,0.884436,0.886199,0.515126,0.892195,0.517908,0.85594,0.96904,0.847594,0.974174,0.645818,0.572209,0.648363,0.568387,0.650282,0.571292,0.330279,0.407054,0.322529,0.411615,0.325846,0.388186,0.330444,0.39155,0.071044,0.898799,0.062172,0.903529,0.063144,0.878415,0.440527,0.788961,0.438033,0.805962,0.433626,0.804649,0.440629,0.77396,0.433312,0.785728,0.37444,0.884901,0.378588,0.872049,0.400202,0.859475,0.612005,0.915745,0.631411,0.928278,0.629393,0.934699,0.654785,0.932936,0.327113,0.548458,0.32405,0.542058,0.329508,0.544262,0.632027,0.863929,0.619387,0.866668,0.645004,0.852581,0.438684,0.811088,0.429836,0.83627,0.430791,0.81078,0.226556,0.916946,0.21798,0.918016,0.218943,0.88684,0.381735,0.907915,0.39932,0.927606,0.411872,0.940726,0.373904,0.906115,0.388669,0.927931,0.604115,0.896241,0.617375,0.878674,0.607997,0.896607,0.37652,0.889412,0.440119,0.757406,0.431453,0.743496,0.440853,0.742504,0.071385,0.918173,0.062489,0.927258,0.323556,0.384959,0.326715,0.384082,0.071421,0.875672,0.431894,0.762247,0.423994,0.862767,0.401391,0.866559,0.607894,0.922162,0.654851,0.936836,0.655967,0.85466,0.425916,0.941219,0.436266,0.842184,0.219859,0.944697,0.228519,0.945122,0.224124,0.955882,0.227887,0.887386,0.440566,0.864945,0.431931,0.870579,0.071492,0.931108,0.183661,0.893459,0.176518,0.899212,0.179078,0.871756,0.848385,0.424469,0.838767,0.42609,0.839233,0.409956,0.847998,0.408588,0.8397,0.393823,0.325775,0.471066,0.324071,0.447578,0.33154,0.451183,0.869687,0.04019,0.867519,0.019593,0.87685,0.021405,0.173426,0.767141,0.156214,0.780027,0.15158,0.774366,0.163228,0.762454,0.184543,0.757109,0.545824,0.204278,0.539991,0.20742,0.543234,0.199932,0.730482,0.867469,0.701255,0.866847,0.731214,0.862984,0.71897,0.766021,0.73207,0.766479,0.698043,0.784687,0.678677,0.873494,0.685917,0.873787,0.678512,0.908656,0.95288,0.561794,0.947856,0.526503,0.960242,0.55559,0.960696,0.571752,0.947111,0.497369,0.956371,0.496993,0.67723,0.93877,0.669788,0.946563,0.673591,0.804131,0.675028,0.816564,0.667493,0.828776,0.672118,0.847098,0.151106,0.796821,0.684619,0.97106,0.675157,0.970643,0.950554,0.476777,0.960161,0.476393,0.177677,0.868327,0.181012,0.867607,0.848455,0.392575,0.32937,0.472706,0.878437,0.043289,0.212149,0.760628,0.681922,0.860797,0.690276,0.856299,0.183799,0.872485,0.213598,0.858772,0.197884,0.858319,0.175379,0.839653,0.669938,0.908016,0.956392,0.520241,0.689011,0.782762,0.680803,0.95584,0.96449,0.457179,0.954744,0.457615,0.438717,0.892525,0.439742,0.9165,0.432413,0.91233,0.430946,0.877357,0.440867,0.875675,0.489376,0.897399,0.481542,0.899798,0.48448,0.87604,0.482432,0.927463,0.491451,0.914745,0.491893,0.930614,0.799899,0.855082,0.757315,0.851386,0.773741,0.853002,0.751058,0.855927,0.741771,0.841147,0.239578,0.783599,0.26893,0.766756,0.269215,0.773576,0.297049,0.770029,0.729497,0.972977,0.731719,0.979676,0.725147,0.976169,0.598808,0.205435,0.602331,0.203543,0.602331,0.20742,0.488778,0.876021,0.488911,0.873899,0.800309,0.859305,0.775448,0.861258,0.296882,0.868555,0.253538,0.849737,0.264598,0.850619,0.716808,0.940461,0.725414,0.940008,0.350107,0.874339,0.359646,0.869664,0.354925,0.906722,0.346037,0.906343,0.353632,0.930156,0.34463,0.929926,0.715173,0.91018,0.725896,0.900018,0.742799,0.811257,0.74029,0.799556,0.762312,0.778516,0.23678,0.807491,0.244917,0.787771,0.735679,0.823154,0.722666,0.873283,0.732355,0.873041,0.357379,0.952262,0.364031,0.973718,0.354156,0.973348,0.347888,0.952002,0.59752,0.201762,0.279337,0.867843,0.799987,0.761021,0.788061,0.757798,0.359001,0.858124,0.241935,0.828449,0.718004,0.891219,0.965315,0.664465,0.974742,0.718826,0.964672,0.709917,0.979289,0.74196,0.969483,0.742863,0.959093,0.13444,0.967698,0.132757,0.965592,0.153124,0.957186,0.15455,0.961721,0.103851,0.971074,0.100983,0.459331,0.799105,0.454111,0.823526,0.45188,0.828287,0.58451,0.794865,0.589339,0.788584,0.604804,0.815417,0.13991,0.979082,0.138264,0.996749,0.134541,0.995856,0.132762,0.973497,0.141343,0.954362,0.133899,0.939662,0.143785,0.937374,0.926637,0.396076,0.929671,0.393949,0.933825,0.416483,0.926466,0.429459,0.935813,0.442643,0.526191,0.865054,0.501715,0.868755,0.498845,0.860925,0.615488,0.72476,0.588982,0.742601,0.592727,0.728163,0.654528,0.715281,0.654283,0.719841,0.971574,0.181434,0.975812,0.188352,0.967683,0.185807,0.637551,0.841944,0.615384,0.83566,0.607316,0.82405,0.933886,0.478028,0.924286,0.480039,0.92684,0.462144,0.936029,0.46466,0.142089,0.919938,0.132037,0.901264,0.14172,0.90314,0.961573,0.67826,0.974377,0.07506,0.964674,0.074255,0.45074,0.801079,0.48371,0.757886,0.469901,0.765892,0.581044,0.749368,0.576244,0.761608,0.466552,0.854025,0.475861,0.863764,0.623568,0.714223,0.925307,0.393915,0.654318,0.840976,0.525176,0.747349,0.490755,0.758871,0.513833,0.742266,0.974688,0.636679,0.972286,0.659296,0.964783,0.636315,0.973397,0.62512,0.451748,0.839902,0.132359,0.91755,0.961031,0.831234,0.970961,0.799917,0.968696,0.840136,0.973554,0.776972,0.962794,0.787325,0.966694,0.757698,0.701869,0.91393,0.70488,0.957599,0.695568,0.954702,0.707975,0.98113,0.698301,0.981394,0.040787,0.8324,0.029882,0.810577,0.040087,0.814602,0.06655,0.850651,0.06811,0.861146,0.030265,0.785441,0.036118,0.782386,0.3848,0.742633,0.359647,0.778007,0.353661,0.774914,0.348319,0.802567,0.351532,0.819777,0.881129,0.24499,0.886433,0.22035,0.888285,0.242324,0.996424,0.526398,0.987273,0.529529,0.988115,0.502327,0.996065,0.500363,0.322347,0.434042,0.324053,0.417575,0.331256,0.424087,0.939493,0.618506,0.937855,0.642989,0.929853,0.640823,0.105122,0.745049,0.106579,0.749744,0.078671,0.751818,0.075921,0.744425,0.051033,0.761567,0.047646,0.755092,0.394051,0.847188,0.395477,0.853565,0.365314,0.839148,0.424794,0.850963,0.424133,0.853722,0.423085,0.726842,0.405771,0.724297,0.426314,0.720907,0.106059,0.867535,0.693094,0.912074,0.70411,0.874136,0.964621,0.860289,0.36859,0.833828,0.93795,0.591839,0.930714,0.614856,0.997032,0.560102,0.986166,0.571782,0.987876,0.553676,0.882026,0.219778,0.879992,0.218452,0.881413,0.215809,0.976703,0.758403,0.379092,0.738884,0.327381,0.442817,0.32883,0.53268,0.327996,0.5387,0.323112,0.532813,0.326946,0.526683,0.107274,0.861797,0.696712,0.877353,0.975673,0.866213,0.971715,0.877019,0.928596,0.59016,0.884291,0.216728,0.913771,0.114576,0.902213,0.08295,0.915494,0.086561,0.916612,0.144077,0.904279,0.131918,0.918097,0.168102,0.921318,0.189706,0.911213,0.190354,0.124182,0.844547,0.137187,0.807376,0.136073,0.853327,0.128777,0.790919,0.142909,0.764104,0.166198,0.734442,0.159889,0.726145,0.192122,0.692798,0.206457,0.652647,0.203296,0.691889,0.033688,0.685831,0.079669,0.725765,0.064094,0.724687,0.02422,0.655169,0.032355,0.662484,0.062917,0.707392,0.022929,0.622648,0.029481,0.616249,0.967109,0.979977,0.96325,0.980138,0.963711,0.949134,0.972233,0.947293,0.9722,0.92311,0.963352,0.928258,0.962126,0.902513,0.934906,0.945096,0.927209,0.96798,0.927308,0.940206,0.172785,0.605451,0.125972,0.601882,0.128748,0.597099,0.063931,0.578436,0.066533,0.586149,0.040776,0.597348,0.138343,0.893253,0.132919,0.898049,0.130733,0.891098,0.10665,0.583066,0.105965,0.578485,0.105299,0.73243,0.09081,0.735721,0.124745,0.746965,0.124674,0.741771,0.136389,0.885658,0.907282,0.058739,0.91645,0.045884,0.919882,0.057769,0.042688,0.587725,0.199649,0.62131,0.193207,0.605226,0.209619,0.632175,0.926253,0.989457,0.936362,0.97621,0.934752,0.995141,0.970639,0.892483,0.959323,0.880774,0.9077,0.167731,0.134894,0.755219,0.188726,0.715415,0.211796,0.666534,0.928903,0.907703,0.92463,0.908312,0.172418,0.597738,0.125246,0.597583,0.137777,0.748446,0.027817,0.602461,0.313136,0.576798,0.316438,0.57806,0.312314,0.580634,0.921889,0.788833,0.935693,0.767684,0.930233,0.800639,0.9378,0.310756,0.939284,0.351637,0.93064,0.358042,0.447068,0.675746,0.454584,0.670363,0.481188,0.701403,0.441839,0.639725,0.44712,0.6359,0.672176,0.421103,0.641272,0.467691,0.63354,0.468081,0.65346,0.42724,0.674345,0.40639,0.637823,0.516343,0.630874,0.501442,0.927407,0.021246,0.935509,0.00973,0.936443,0.042492,0.889035,0.022046,0.887194,0.051239,0.881447,0.049029,0.852852,0.2216,0.859603,0.250105,0.851675,0.247695,0.526324,0.585628,0.478959,0.582468,0.525486,0.580653,0.675712,0.546569,0.674379,0.553131,0.654236,0.54718,0.650152,0.536422,0.638881,0.531457,0.327728,0.515897,0.33154,0.523293,0.324909,0.519529,0.32311,0.510475,0.700451,0.397225,0.717828,0.397535,0.708097,0.404934,0.527434,0.728404,0.514978,0.733112,0.47311,0.709002,0.942395,0.257958,0.925363,0.305038,0.932084,0.886994,0.920915,0.888778,0.917055,0.861357,0.930157,0.841778,0.931295,0.901859,0.448017,0.604424,0.449877,0.612582,0.861435,0.208394,0.86194,0.228388,0.852547,0.202459,0.862537,0.195902,0.839732,0.202912,0.843158,0.199858,0.843925,0.203652,0.918183,0.831685,0.927245,0.757749,0.94591,0.382275,0.937957,0.389419,0.840083,0.239959,0.847711,0.236431,0.92711,0.00574,0.926895,0.04383,0.881404,0.018563,0.487491,0.588076,0.462224,0.597842,0.716194,0.549824,0.932332,0.266057,0.926371,0.071192,0.936222,0.069183,0.311514,0.798404,0.310793,0.762974,0.326403,0.768832,0.326022,0.802796,0.328137,0.837233,0.316403,0.835381,0.326362,0.875592,0.53887,0.794989,0.551542,0.791062,0.55278,0.822164,0.548065,0.734698,0.561942,0.720411,0.551364,0.759649,0.540328,0.761477,0.237153,0.432904,0.258092,0.407162,0.264866,0.417076,0.243687,0.440362,0.230758,0.470715,0.22521,0.466152,0.222343,0.509594,0.03113,0.532985,0.037779,0.525303,0.060199,0.549725,0.236073,0.965378,0.235437,0.937566,0.243359,0.953756,0.244649,0.9242,0.234972,0.898652,0.118119,0.93624,0.122006,0.902863,0.126652,0.942391,0.118406,0.963083,0.127248,0.969305,0.268974,0.561273,0.317409,0.563487,0.276949,0.569198,0.049153,0.39729,0.065253,0.399809,0.038963,0.409422,0.080341,0.390258,0.105734,0.393005,0.106348,0.398302,0.562921,0.868356,0.564257,0.873258,0.556609,0.871159,0.327422,0.570151,0.331537,0.571901,0.33154,0.576416,0.11651,0.904118,0.118228,0.901574,0.090346,0.563109,0.105292,0.567864,0.081729,0.572133,0.053241,0.560048,0.310898,0.39678,0.54519,0.859244,0.537527,0.827985,0.331835,0.740461,0.020181,0.429495,0.010386,0.455512,0.020832,0.418394,0.233646,0.540563,0.226731,0.513201,0.115985,0.986784,0.233362,0.877244,0.243164,0.878704,0.336746,0.87698,0.554574,0.712069,0.017971,0.49708,0.015915,0.464926,0.248405,0.559693,0.325561,0.575091,0.291249,0.394408,0.319154,0.736361,0.333858,0.722585,0.125774,0.996662,0.244883,0.897026,0.914421,0.619771,0.924958,0.619571,0.919566,0.656639,0.904724,0.659489,0.251316,0.961945,0.261051,0.957721,0.261842,0.992391,0.93936,0.174832,0.932369,0.120706,0.948102,0.124872,0.984345,0.659153,0.992932,0.672262,0.982561,0.679245,0.983292,0.635852,0.992738,0.639829,0.539039,0.31667,0.543004,0.313114,0.557239,0.342914,0.551056,0.350634,0.45242,0.431112,0.448576,0.456471,0.434711,0.463391,0.474685,0.403748,0.481824,0.414886,0.436037,0.498892,0.438306,0.538124,0.430382,0.508207,0.844549,0.028202,0.836667,0.049049,0.838353,0.011235,0.259344,0.885013,0.250917,0.903918,0.250595,0.879404,0.991879,0.727164,0.984478,0.715283,0.99388,0.702493,0.992813,0.742979,0.984465,0.740776,0.586864,0.219264,0.57244,0.215955,0.606426,0.21158,0.626379,0.214525,0.6279,0.218559,0.566842,0.226705,0.541489,0.243331,0.551872,0.228647,0.483151,0.566465,0.482464,0.573187,0.455408,0.559867,0.5262,0.567068,0.525352,0.572493,0.327934,0.506628,0.32331,0.505509,0.326874,0.500083,0.843709,0.009838,0.574698,0.375118,0.628549,0.384126,0.607176,0.386892,0.952003,0.084975,0.903424,0.694006,0.919349,0.689848,0.92226,0.722891,0.443457,0.539929,0.456919,0.553747,0.984243,0.69561,0.260263,0.928299,0.250385,0.930454,0.252063,0.996287,0.94978,0.156165,0.951475,0.190306,0.581173,0.362625,0.537576,0.273879,0.533461,0.274646,0.844958,0.049132,0.260568,0.909795,0.867889,0.217238,0.875994,0.220733,0.86966,0.248733,0.331538,0.501725,0.520944,0.398466,0.504215,0.392844,0.947474,0.075299,0.938196,0.08292,0.907785,0.723113,0.919281,0.741857,0.838098,0.007315,0.003424,0.473566,0.004018,0.482115,0.001628,0.481869,0.446763,0.208218,0.429401,0.208337,0.431286,0.198462,0.443749,0.194484,0.460112,0.201864,0.31468,0.007406,0.277057,0.021636,0.280469,0.011758,0.267314,0.009688,0.310087,0.001789,0.241537,0.04095,0.707527,0.17571,0.692499,0.145566,0.701367,0.141711,0.803538,0.421044,0.807551,0.411194,0.815606,0.401893,0.817721,0.477071,0.80103,0.438451,0.818503,0.433195,0.821798,0.513872,0.80691,0.494585,0.817393,0.544223,0.827836,0.543828,0.834732,0.570309,0.824636,0.571782,0.682936,0.146613,0.689377,0.079442,0.701728,0.073411,0.69911,0.036034,0.713674,0.021019,0.706785,0.010084,0.221268,0.135077,0.225076,0.078212,0.234738,0.075046,0.498397,0.244472,0.494308,0.25596,0.518442,0.294796,0.521764,0.323118,0.517615,0.342346,0.473579,0.956332,0.470782,0.987566,0.464082,0.986179,0.46714,0.927669,0.465261,0.953181,0.335882,0.932028,0.327875,0.927428,0.327525,0.89419,0.328465,0.969231,0.321621,0.184393,0.263114,0.182388,0.27301,0.178408,0.238811,0.166915,0.239365,0.160397,0.4737,0.3818,0.471554,0.374692,0.506399,0.350533,0.430778,0.38279,0.226466,0.129388,0.335323,0.993668,0.325606,0.995454,0.337792,0.970942,0.465127,0.894593,0.475472,0.9071,0.461926,0.873899,0.472013,0.875528,0.127237,0.007992,0.152927,0.011744,0.130224,0.02101,0.143028,0.38419,0.114465,0.385681,0.11548,0.37956,0.111629,0.37322,0.127217,0.373309,0.147544,0.370297,0.683632,0.162142,0.684458,0.181291,0.674697,0.15103,0.65803,0.148782,0.671473,0.13214,0.730295,0.577969,0.715122,0.599039,0.703869,0.618448,0.705938,0.664789,0.686926,0.629814,0.713761,0.70067,0.702239,0.700816,0.721513,0.730004,0.731967,0.755852,0.72219,0.758164,0.65799,0.103771,0.671368,0.101379,0.674937,0.025549,0.681499,0.039384,0.67361,0.067537,0.662095,0.068498,0.178633,0.361167,0.178003,0.034926,0.172558,0.043125,0.454777,0.96112,0.448188,0.990388,0.443823,0.989509,0.447997,0.946968,0.447042,0.900821,0.457827,0.929131,0.811241,0.927778,0.819079,0.918199,0.820243,0.938021,0.819506,0.971494,0.810018,0.971813,0.154548,0.213664,0.113409,0.207141,0.154137,0.20704,0.183005,0.224855,0.161873,0.181299,0.196636,0.155033,0.201817,0.156265,0.703464,0.185125,0.114924,0.2014,0.204888,0.119445,0.210863,0.131479,0.817106,0.990223,0.807252,0.991901,0.445019,0.874061,0.454964,0.875578,0.952935,0.331959,0.95311,0.262633,0.958348,0.270066,0.900228,0.42309,0.892554,0.426448,0.902124,0.417021,0.546127,0.176518,0.569541,0.179027,0.538441,0.184937,0.842214,0.177155,0.847063,0.185263,0.828725,0.186064,0.961704,0.342035,0.967218,0.323763,0.832136,0.284443,0.816811,0.279101,0.842325,0.253428,0.147304,0.405869,0.123733,0.410004,0.125303,0.402154,0.433415,0.176533,0.429957,0.166362,0.451647,0.171533,0.474048,0.17012,0.473421,0.181412,0.647343,0.164336,0.655956,0.154389,0.714469,0.580649,0.690494,0.607337,0.677504,0.601623,0.693571,0.590667,0.683472,0.624151,0.677548,0.661509,0.666276,0.622377,0.67908,0.697276,0.668116,0.696659,0.007018,0.770694,0.004841,0.741993,0.015383,0.744564,0.017136,0.772647,0.018134,0.798761,0.00802,0.79702,0.631471,0.110439,0.644544,0.107394,0.646835,0.135956,0.632525,0.146464,0.004117,0.707362,0.013838,0.705385,0.012976,0.734488,0.00287,0.73717,0.499533,0.158238,0.516055,0.130626,0.520431,0.135771,0.524082,0.100252,0.518856,0.067764,0.517941,0.058368,0.179197,0.418537,0.174686,0.427245,0.149756,0.397435,0.204831,0.486369,0.210655,0.480826,0.209051,0.516296,0.019981,0.859221,0.017345,0.884809,0.009878,0.878779,0.010986,0.856726,0.009807,0.826406,0.019985,0.832315,0.005942,0.611389,0.014004,0.608532,0.015117,0.632209,0.470902,0.017732,0.431588,0.010628,0.433052,0.006194,0.704534,0.189547,0.125615,0.584944,0.166607,0.580566,0.126603,0.59013,0.20301,0.538038,0.184046,0.567297,0.187607,0.557222,0.012654,0.679963,0.002775,0.681711,0.005098,0.662544,0.00629,0.63752,0.01456,0.660414,0.324286,0.560935,0.329306,0.558583,0.328329,0.563348,0.324798,0.557472,0.821798,0.307394,0.837914,0.356258,0.824606,0.33929,0.848454,0.388384,0.83523,0.381147,0.83607,0.162596,0.818425,0.161957,0.823918,0.110735,0.837372,0.090005,0.830097,0.077238,0.83957,0.054869,0.84926,0.055597,0.581157,0.156707,0.557374,0.171444,0.607268,0.119605,0.613591,0.12042,0.619157,0.090518,0.268494,0.619339,0.218741,0.583631,0.22245,0.579446,0.097862,0.934083,0.103261,0.959773,0.095642,0.954332,0.095325,0.900953,0.106638,0.927119,0.833687,0.917417,0.82577,0.920102,0.824502,0.886895,0.835119,0.937186,0.827318,0.949508,0.570832,0.026841,0.532584,0.015444,0.534579,0.010774,0.578918,0.200901,0.581053,0.202905,0.577859,0.205975,0.291827,0.693835,0.279606,0.728415,0.279779,0.716094,0.598761,0.040563,0.600945,0.037118,0.616361,0.061612,0.836683,0.957785,0.825421,0.976783,0.10515,0.897361,0.093559,0.875314,0.103797,0.876109,0.572791,0.204766,0.574327,0.200481,0.797183,0.315579,0.797779,0.280608,0.810005,0.288229,0.815339,0.349444,0.82456,0.376225,0.814499,0.377074,0.8096,0.145613,0.798179,0.152214,0.800612,0.108094,0.814931,0.095013,0.813492,0.072887,0.740955,0.73159,0.78158,0.693264,0.783622,0.700902,0.796201,0.657433,0.800009,0.658842,0.726712,0.409393,0.722567,0.392397,0.752153,0.420912,0.524891,0.956542,0.520705,0.985945,0.516835,0.955259,0.527027,0.929851,0.533883,0.882712,0.537953,0.881044,0.543612,0.92218,0.533174,0.962156,0.535428,0.924429,0.737532,0.582344,0.776378,0.600325,0.77717,0.612604,0.760703,0.551602,0.785841,0.506247,0.780105,0.532257,0.725008,0.569566,0.722085,0.56517,0.76526,0.537819,0.953041,0.360351,0.961398,0.36521,0.962093,0.389424,0.922917,0.217374,0.922926,0.208881,0.931607,0.206262,0.812958,0.174133,0.811335,0.264734,0.827353,0.251151,0.541802,0.972509,0.531022,0.982068,0.523426,0.885361,0.517575,0.927501,0.514509,0.894782,0.511831,0.873899,0.001637,0.476298,0.688044,0.162305,0.301705,0.595304,0.302711,0.590075,0.303669,0.592449,0.71659,0.177634,0.830573,0.396408,0.217879,0.109615,0.47652,0.935547,0.332859,0.893066,0.2805,0.188419,0.497762,0.370207,0.709439,0.18117,0.713959,0.184459,0.432271,0.388209,0.561559,0.201595,0.566313,0.201681,0.561564,0.2059,0.690464,0.663523,0.710957,0.731327,0.688074,0.01416,0.173601,0.353176,0.196384,0.327229,0.202946,0.086387,0.201403,0.064959,0.813382,0.885919,0.808508,0.88679,0.168131,0.187304,0.113249,0.194546,0.456967,0.898097,0.551799,0.205932,0.553792,0.200987,0.556308,0.204724,0.53193,0.172503,0.886946,0.470886,0.885199,0.407145,0.663624,0.659671,0.641468,0.074446,0.630936,0.076059,0.504112,0.165692,0.198777,0.448525,0.009231,0.909784,0.008307,0.578015,0.003122,0.57844,0.467856,0.009405,0.495208,0.023572,0.164493,0.572295,0.690833,0.189574,0.33154,0.564412,0.204021,0.545372,0.512181,0.037859,0.83392,0.133804,0.092637,0.986771,0.829792,0.886422,0.571571,0.018699,0.259709,0.741192,0.220778,0.756969,0.223336,0.761948,0.611435,0.060284,0.835209,0.986961,0.806295,0.356647,0.825494,0.068433,0.737976,0.743722,0.776068,0.456641,0.740604,0.577576,0.793045,0.618585,0.590269,0.205723,0.58877,0.200054,0.592279,0.200057,0.952339,0.382736,0.933362,0.215462,0.928283,0.222021,0.585551,0.205929,0.584594,0.201683,0.004262,0.464177,0.002233,0.461531,0.003576,0.454662,0.306607,0.1971,0.308951,0.206849,0.294315,0.210638,0.063691,0.372729,0.068174,0.368326,0.106995,0.380751,0.106152,0.386539,0.059072,0.380748,0.535952,0.586176,0.539175,0.578403,0.574172,0.589379,0.571175,0.605564,0.842876,0.750659,0.814933,0.721817,0.829928,0.709348,0.826793,0.743694,0.818848,0.732949,0.822969,0.630796,0.837091,0.616583,0.829188,0.665244,0.812748,0.699071,0.836823,0.577126,0.846681,0.578379,0.644343,0.584933,0.077129,0.89975,0.078584,0.875243,0.088077,0.879056,0.086803,0.902528,0.087867,0.934777,0.077828,0.92239,0.022911,0.317105,0.028664,0.348936,0.011091,0.298345,0.011199,0.279393,0.24634,0.258036,0.288679,0.205041,0.221611,0.296279,0.231742,0.262327,0.112752,0.484213,0.119364,0.458523,0.12062,0.485492,0.019647,0.939562,0.010245,0.967916,0.010766,0.932591,0.010337,0.915989,0.018303,0.913729,0.087457,0.969001,0.08696,0.990856,0.078951,0.97721,0.078509,0.945492,0.104555,0.203393,0.106496,0.207397,0.066033,0.209914,0.033574,0.214464,0.060906,0.202949,0.266314,0.37437,0.274517,0.383651,0.253114,0.375496,0.229205,0.350231,0.31782,0.381131,0.316948,0.386228,0.221849,0.322889,0.22743,0.335337,0.01357,0.2429,0.03973,0.218907,0.085052,0.010849,0.094367,0.017862,0.055714,0.030936,0.338522,0.208594,0.322575,0.208735,0.326396,0.202395,0.325246,0.196289,0.354337,0.197698,0.543543,0.60636,0.555305,0.606617,0.567775,0.616767,0.397814,0.672,0.409101,0.693363,0.408018,0.713508,0.384586,0.683729,0.39921,0.624576,0.3838,0.625844,0.393302,0.585419,0.971651,0.542874,0.981053,0.524945,0.982382,0.567976,0.971993,0.571782,0.61947,0.616583,0.65611,0.611606,0.656167,0.622026,0.506114,0.904261,0.499124,0.874467,0.508773,0.878096,0.506647,0.928843,0.496888,0.926926,0.359126,0.211558,0.390349,0.220646,0.385389,0.228633,0.409912,0.252632,0.419246,0.302006,0.416047,0.287183,0.034123,0.035902,0.058459,0.011793,0.018242,0.073474,0.013316,0.068333,0.005739,0.129001,0.113138,0.419359,0.119182,0.39755,0.120586,0.431088,0.973645,0.441408,0.982265,0.434766,0.981659,0.453752,0.112366,0.73484,0.113467,0.708669,0.12151,0.714616,0.508045,0.976268,0.508601,0.998208,0.500154,0.988491,0.497791,0.959422,0.326769,0.37927,0.324205,0.373649,0.365178,0.366372,0.052157,0.188211,0.018347,0.157001,0.052217,0.180404,0.105855,0.191428,0.07898,0.195379,0.94486,0.906359,0.943063,0.884337,0.949098,0.902069,0.950668,0.88235,0.953456,0.89843,0.104905,0.196764,0.016897,0.1613,0.010987,0.135572,0.412188,0.335103,0.391208,0.363311,0.390387,0.35418,0.971722,0.485918,0.981498,0.489998,0.94597,0.812613,0.954268,0.807653,0.534775,0.197565,0.534663,0.206118,0.530202,0.20742,0.546065,0.4063,0.531526,0.410403,0.537981,0.397973,0.564096,0.399342,0.5583,0.66786,0.533202,0.60634,0.556538,0.6315,0.561651,0.654994,0.560598,0.651065,0.57073,0.661149,0.591016,0.683814,0.354082,0.688774,0.358174,0.680202,0.36611,0.686556,0.337188,0.649905,0.348495,0.657035,0.360933,0.576475,0.33648,0.574257,0.335056,0.566673,0.33732,0.021672,0.330033,0.015585,0.36995,0.011006,0.58103,0.655727,0.568087,0.63433,0.589601,0.641703,0.37759,0.664799,0.360543,0.666097,0.362393,0.591798,0.372975,0.590931,0.37116,0.626442,0.357291,0.628398,0.616659,0.65716,0.651283,0.644628,0.650253,0.655314,0.979794,0.092574,0.980821,0.060134,0.990844,0.063097,0.989727,0.094709,0.989848,0.135151,0.980274,0.134032,0.37345,0.021713,0.402593,0.028703,0.398026,0.036145,0.416523,0.061616,0.424548,0.092653,0.420042,0.096178,0.390817,0.555517,0.4081,0.522072,0.412972,0.528934,0.359824,0.569929,0.355864,0.563977,0.420823,0.475446,0.976416,0.247898,0.984501,0.246017,0.985183,0.267026,0.873024,0.398027,0.872216,0.428077,0.865301,0.425634,0.982846,0.165397,0.989736,0.189933,0.981678,0.188017,0.331323,0.189022,0.328968,0.1836,0.368421,0.176653,0.378009,0.400379,0.377998,0.393347,0.399139,0.40646,0.399188,0.416786,0.1183,0.546626,0.112639,0.581802,0.112277,0.54412,0.991751,0.17046,0.97474,0.293966,0.983847,0.310767,0.973156,0.3415,0.116229,0.540812,0.340521,0.608003,0.993159,0.883991,0.983081,0.887077,0.982014,0.861255,0.991998,0.842611,0.981857,0.825078,0.637444,0.674663,0.586882,0.666217,0.279723,0.916235,0.272359,0.877536,0.28203,0.880591,0.604173,0.439085,0.599127,0.443469,0.557568,0.411309,0.619751,0.486952,0.614768,0.491101,0.63587,0.386928,0.631816,0.379975,0.674069,0.345236,0.699228,0.314561,0.67551,0.354474,0.119034,0.5283,0.111057,0.534921,0.113507,0.498582,0.860479,0.398145,0.859432,0.428003,0.852725,0.425634,0.270882,0.986343,0.271736,0.947651,0.281199,0.972648,0.534066,0.571969,0.532384,0.567447,0.570821,0.555973,0.701974,0.248387,0.701203,0.262922,0.67567,0.228617,0.633822,0.206316,0.636379,0.201504,0.117767,0.495863,0.614132,0.520461,0.596171,0.548282,0.594022,0.542081,0.281099,0.944417,0.26952,0.924186,0.992408,0.81229,0.983757,0.794014,0.993347,0.780982,0.324658,0.640702,0.312947,0.651365,0.312245,0.625715,0.317453,0.597329,0.907852,0.979051,0.897457,0.983874,0.897682,0.953303,0.607104,0.691498,0.645219,0.687038,0.644275,0.696836,0.982906,0.900002,0.99147,0.939142,0.981618,0.933717,0.724755,0.026563,0.725486,0.019873,0.771925,0.066543,0.785634,0.106963,0.782164,0.109308,0.768581,0.070152,0.732075,0.367494,0.763875,0.327924,0.767496,0.333098,0.899616,0.894147,0.906385,0.880252,0.909732,0.908737,0.863908,0.580489,0.869246,0.612905,0.86242,0.610589,0.992212,0.9804,0.990688,0.995711,0.780492,0.139912,0.767171,0.163584,0.75544,0.162795,0.772628,0.246776,0.770188,0.256657,0.75186,0.236778,0.831987,0.028451,0.824072,0.04623,0.828201,0.011601,0.722744,0.185138,0.743609,0.180535,0.726296,0.189742,0.718888,0.21094,0.754298,0.228915,0.717107,0.215043,0.946517,0.785177,0.943512,0.764962,0.953412,0.759269,0.955526,0.780831,0.635072,0.558399,0.642259,0.558769,0.642248,0.567301,0.577658,0.690232,0.600021,0.703418,0.326712,0.668023,0.331638,0.654082,0.993176,0.964636,0.98368,0.970993,0.89938,0.924282,0.908603,0.941368,0.825439,0.007177,0.829686,0.007249,0.293734,0.193821,0.274377,0.205603,0.835596,0.754725,0.829937,0.601678,0.639301,0.597126,0.112531,0.44699,0.849858,0.579318,0.857615,0.582687,0.854525,0.612111,0.235673,0.350389,0.954721,0.908692,0.951691,0.912531,0.02001,0.97667,0.00975,0.991911,0.117378,0.446128,0.112724,0.443374,0.083966,0.004513,0.598143,0.633947,0.588298,0.618642,0.425247,0.717164,0.380839,0.659786,0.404391,0.585571,0.970712,0.515966,0.496231,0.901661,0.003564,0.101929,0.112683,0.438734,0.118621,0.74524,0.369436,0.372879,0.115107,0.395969,0.32363,0.378724,0.507398,0.948638,0.113678,0.392317,0.111608,0.394376,0.530189,0.19494,0.975827,0.389049,0.983725,0.353665,0.985822,0.386123,0.618626,0.643833,0.414001,0.138351,0.417734,0.137647,0.386369,0.546806,0.120588,0.579033,0.976049,0.264115,0.865242,0.394716,0.39316,0.173105,0.370521,0.184921,0.391666,0.165739,0.337018,0.387566,0.415926,0.442624,0.415741,0.428701,0.351085,0.598329,0.642085,0.664295,0.269937,0.901742,0.982992,0.767233,0.990428,0.758087,0.852693,0.39477,0.278349,0.992896,0.571139,0.564628,0.683248,0.225463,0.706268,0.277592,0.115161,0.491918,0.11142,0.494013,0.328791,0.5964,0.992129,0.904028,0.726733,0.035313,0.781717,0.293161,0.832057,0.049397,0.897402,0.878735,0.871988,0.583706,0.631378,0.565738,0.627886,0.558029,0.634397,0.5733,0.783321,0.272801,0.873016,0.872047,0.876555,0.80782,0.896208,0.816182,0.861067,0.870683,0.905765,0.386449,0.917859,0.338944,0.915374,0.377183,0.898294,0.383321,0.907141,0.325988,0.899452,0.58659,0.89844,0.611678,0.893161,0.612576,0.917551,0.293581,0.912406,0.305281,0.842307,0.820067,0.843246,0.846087,0.820238,0.816799,0.877659,0.787642,0.895119,0.790932,0.906407,0.248432,0.911411,0.247454,0.907176,0.295562,0.901719,0.248291,0.946574,0.932562,0.946892,0.990397,0.941902,0.986892,0.940895,0.943568,0.812774,0.880208,0.820008,0.846373,0.846964,0.880072,0.900223,0.760192,0.868954,0.760577,0.829798,0.238696,0.830347,0.212566,0.835344,0.212673,0.822553,0.237895,0.824805,0.21239,0.900498,0.220394,0.904056,0.20962,0.793718,0.196771,0.812776,0.227657,0.800073,0.235733,0.817976,0.242563,0.884638,0.193575,0.89276,0.193596,0.891163,0.200532,0.886051,0.209236,0.885373,0.20056,0.880025,0.208855,0.879653,0.199688,0.852914,0.779672,0.81185,0.773908,0.853649,0.770869,0.913425,0.389424,0.856165,0.040004,0.856871,0.027886,0.864159,0.031076,0.855736,0.763882,0.844541,0.757877,0.857186,0.757753,0.819727,0.757849,0.810234,0.763854,0.897563,0.871884,0.909667,0.870662,0.849193,0.007176,0.855675,0.007529,0.84918,0.02466,0.861469,0.022654,0.862248,0.004394,0.89371,0.585334,0.88788,0.604234,0.951838,0.9904,0.95173,0.936638,0.834903,0.234242,0.796382,0.049406,0.805557,0.010341,0.802211,0.039104,0.809554,0.005716,0.814421,0.010834,0.809561,0.048757,0.82059,0.047508,0.802021,0.20316,0.891896,0.208836,0.849182,0.030726,0.807252,0.757698]]
							},
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						}]
				},
				{
					"uuid": "296FD541-3B7F-4C4B-866A-DF23995BFF2B",
					"type": "Mesh",
					"name": "villa-pavilion",
					"matrix": [10,0,0,0,0,10,0,0,0,0,10,0,0,20,0,1],
					"geometry": "274556E7-4673-4904-85B1-2072DA20B20D",
					"material": "8C194F0A-0D60-4D8F-8980-CE755BECC630"
				},
				{
					"uuid": "D07BE125-9BD5-429F-9704-7E8AB6B56E30",
					"type": "Mesh",
					"name": "OctreeBox",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-99.9839859008789,10,129.63385009765625,1],
					"geometry": "FFED66E6-F040-4BD1-94CA-E3BFB6E2957B",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "A39F20FC-AD40-4F9B-8A2E-F4F3B45A9054",
					"type": "Mesh",
					"name": "OctreeBox",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-118.50160217285156,10,106.7699966430664,1],
					"geometry": "5687A0F3-3F14-4987-B8B3-CF67560DC0D2",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "E9C420DE-52FA-4328-9FDD-7DC38192F1F2",
					"type": "Mesh",
					"name": "OctreeBox",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-28.746749877929688,10,20.008712768554688,1],
					"geometry": "661EF0C8-12B4-4DB5-A1F9-839B67994023",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "8179D2BC-D220-484C-BD41-E8E90FD39A10",
					"type": "Mesh",
					"name": "OctreeBox",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-257.5652160644531,10,-62.78227615356445,1],
					"geometry": "C7A1BA80-8FF7-464B-A215-C189682C2230",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "8300E908-EB3C-4878-AF2D-6C601B345C9C",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-263.5179748535156,36.02474594116211,126.36673736572266,1],
					"geometry": "04E15955-E6AC-4A7D-B6AF-F82A10EF955A",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "3D7E5F15-A405-4A7B-BB8E-FF51688F9CC8",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-257.4410400390625,36.02474594116211,-107.32504272460938,1],
					"geometry": "52BFA6F1-E404-49CB-9ADE-92DEF1B01FF0",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "A453D833-E3AC-482D-BA2F-B1138E2DDD49",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-126.50769805908203,36.02474594116211,-30.331430435180664,1],
					"geometry": "75A093B3-BAF1-4294-899B-976D29EA7134",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "74B9C98A-AF37-455B-8F63-B07E7386BADD",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-301.4292297363281,36.02474594116211,15.450045585632324,1],
					"geometry": "0B41C8F8-1361-4CEC-B632-C80B8F1A3686",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "1F760C5E-C123-4327-9A91-649340790BCD",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-211.52896118164062,36.02474594116211,-78.8356704711914,1],
					"geometry": "349204E9-DECA-459C-933D-82C573017ABE",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "2E632F16-D468-4F7C-BF87-7C5C8F69FDB4",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-268.9599914550781,36.825069427490234,-50.49449920654297,1],
					"geometry": "9728BD2E-3888-48DA-A321-930DD4F0F008",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "0D13CE47-87DC-4B85-874E-3F5E5F604EC2",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-217.42791748046875,36.825069427490234,-50.49449920654297,1],
					"geometry": "893F6FC2-AD77-41A9-A9C7-C0EDE041645B",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "682C46FC-1AE4-4EAD-B9E5-3A66F8831390",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-251.42434692382812,36.825069427490234,-92.59930419921875,1],
					"geometry": "55526B80-94AA-407B-8CF3-E7478B16AFC0",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "DC9FB530-9276-4256-AC82-34195577913E",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-222.56405639648438,36.825069427490234,-92.59930419921875,1],
					"geometry": "23B1F79E-E5F9-48C1-B526-DA6DC1AA8A60",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "7B13F363-20F8-4667-B0AD-C15B683BA953",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-255.92306518554688,36.02474594116211,-61.05853271484375,1],
					"geometry": "D7ADD3F8-09F7-4DD1-B420-E143D5B67F54",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "96FF2660-43FA-44C1-B57C-ACB072A180A6",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,249.8148193359375,36.02474594116211,25.48697853088379,1],
					"geometry": "5B4E8A1F-A9AC-4656-9A7C-E0AA886321FF",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "F03D13A2-3A2D-4720-AFDC-657ACB8FBA90",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,176.62991333007812,36.02474594116211,-42.00640869140625,1],
					"geometry": "BE2CA660-1EF1-4EDC-8826-B5211281C6C7",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "B47E52B2-D852-44C8-B545-E3A7E196B721",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,129.0048370361328,36.02474594116211,14.578648567199707,1],
					"geometry": "8E03F94E-1195-4B5F-BAC6-66EC9FAC77A6",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "B5E342A9-D176-4A24-B16A-5D729F6F897C",
					"type": "Mesh",
					"name": "OctreeBox",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,134.20001220703125,36.02474594116211,80.74774932861328,1],
					"geometry": "0C9CB670-F3CC-47DD-BE62-E1F54CC6F8DE",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "90832875-4B03-4103-99C3-86EA55ED0146",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,13.567914962768555,36.02474594116211,55.322532653808594,1],
					"geometry": "69E328E7-F063-4882-835D-5EEC49A9FAD3",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "328503CF-6A1B-43C4-9D3F-3C4997FAE9E6",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,73.6352767944336,36.02474594116211,-15.836639404296875,1],
					"geometry": "9E4A4D9E-1EC4-4329-A9C4-EEE5E29DACEF",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "9DB68AD7-88A5-410F-8B2C-39C05A8D5F57",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,182.28335571289062,36.02474594116211,20.162036895751953,1],
					"geometry": "6F43F137-6FD9-4399-833D-E45B0BBDC0D7",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "A7A2C1EA-A74C-476F-B99C-927D26AD1A9E",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,34.6464958190918,36.02474594116211,20.162036895751953,1],
					"geometry": "044DA352-F295-4DB0-82F5-BF2256FAE9B1",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "CA48EA65-650E-45A6-ABAA-93D3AE8119FA",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,134.6553497314453,36.02474594116211,81.5606689453125,1],
					"geometry": "1CC01CD4-A068-4B96-B9F2-A31DC21897C2",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "1BF6C397-33C0-435B-AE72-05E4A10FB277",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,170.4744110107422,25,94.16537475585938,1],
					"geometry": "AE19DA45-512B-4073-9388-881DEFC049A3",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "093317B6-F8EA-40BA-A5AD-A7004A0B98BD",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,80.38349151611328,25,116.66653442382812,1],
					"geometry": "8334E11D-5154-42E7-BE62-4B1193606FD4",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "983C160E-3F6D-4E49-B72C-F41469B8871B",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-103.91635131835938,25,138.3490753173828,1],
					"geometry": "2B283292-8CEE-4CBF-B5B8-AFC2FF22A0F3",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "80A731B2-A99E-4B63-8239-8342B432CE58",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-48.05229187011719,25,-53.208587646484375,1],
					"geometry": "3BEBBB05-3EC4-4ECE-9C86-CBD8C1C7EFE7",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "A80F7607-2F15-4510-8E40-3969C0595128",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,116.62353515625,25,-50.64353942871094,1],
					"geometry": "3E328028-FF28-44C5-AE78-D1523465DA67",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "88ED03D8-82BB-4091-8F56-A8AD781D3383",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-255.92306518554688,36.02474594116211,-96.467529296875,1],
					"geometry": "D7ADD3F8-09F7-4DD1-B420-E143D5B67F54",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				},
				{
					"uuid": "0B2A8D26-B8F6-4C55-B94A-A7DDE84DFB6D",
					"type": "Mesh",
					"name": "OctreeBox",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-141.27842712402344,21.831588745117188,-24.804182052612305,1],
					"geometry": "21283C5F-680D-4042-9A40-309BB4A61C01",
					"material": "89A7DD37-9C31-4205-8AE1-4780174CCA90"
				}]
		}
	},
	"scripts": {
		"E49F27D7-529D-4C7A-9F53-D3859D6F30CE": [
			{
				"name": "jquery.min.js",
				"source": "/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.3\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=M.replace(\"w\",\"w#\"),O=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+N+\"))|)\"+L+\"*\\\\]\",P=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+O+\")*)|.*)\\\\)|)\",Q=new RegExp(L+\"+\",\"g\"),R=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),S=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),T=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),U=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),V=new RegExp(P),W=new RegExp(\"^\"+N+\"$\"),X={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+O),PSEUDO:new RegExp(\"^\"+P),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},eb=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fb){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function gb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\"string\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+rb(o[l]);w=ab.test(a)&&pb(b.parentNode)||b,x=o.join(\",\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function hb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ib(a){return a[u]=!0,a}function jb(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function kb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function lb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function nb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function ob(a){return ib(function(b){return b=+b,ib(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pb(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=gb.support={},f=gb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=gb.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\"unload\",eb,!1):e.attachEvent&&e.attachEvent(\"onunload\",eb)),p=!f(g),c.attributes=jb(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=jb(function(a){return a.appendChild(g.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=jb(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(jb(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\f]' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),jb(function(a){var b=g.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&jb(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",P)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return lb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?lb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},gb.matches=function(a,b){return gb(a,null,null,b)},gb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return gb(b,n,null,[a]).length>0},gb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},gb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},gb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},gb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=gb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=gb.selectors={cacheLength:50,createPseudo:ib,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||gb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&gb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=gb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(Q,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||gb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ib(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ib(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?ib(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ib(function(a){return function(b){return gb(a,b).length>0}}),contains:ib(function(a){return a=a.replace(cb,db),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ib(function(a){return W.test(a||\"\")||gb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:ob(function(){return[0]}),last:ob(function(a,b){return[b-1]}),eq:ob(function(a,b,c){return[0>c?c+b:c]}),even:ob(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:ob(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:ob(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:ob(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=mb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=nb(b);function qb(){}qb.prototype=d.filters=d.pseudos,d.setFilters=new qb,g=gb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?gb.error(a):z(a,i).slice(0)};function rb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function sb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function tb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ub(a,b,c){for(var d=0,e=b.length;e>d;d++)gb(a,b[d],c);return c}function vb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wb(a,b,c,d,e,f){return d&&!d[u]&&(d=wb(d)),e&&!e[u]&&(e=wb(e,f)),ib(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ub(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:vb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=vb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=vb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=sb(function(a){return a===b},h,!0),l=sb(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sb(tb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wb(i>1&&tb(m),i>1&&rb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&xb(a.slice(i,e)),f>e&&xb(a=a.slice(e)),f>e&&rb(a))}m.push(c)}return tb(m)}function yb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=vb(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&gb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ib(f):f}return h=gb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,yb(e,d)),f.selector=a}return f},i=gb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&pb(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&rb(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&pb(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=jb(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),jb(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||kb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&jb(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||kb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),jb(function(a){return null==a.getAttribute(\"disabled\")})||kb(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),gb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)\n},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec=/#.*$/,fc=/([?&])_=[^&]*/,gc=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,hc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ic=/^(?:GET|HEAD)$/,jc=/^\\/\\//,kc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,lc={},mc={},nc=\"*/\".concat(\"*\"),oc=a.location.href,pc=kc.exec(oc.toLowerCase())||[];function qc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rc(a,b,c,d){var e={},f=a===mc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function sc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function uc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:oc,type:\"GET\",isLocal:hc.test(pc[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":nc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sc(sc(a,n.ajaxSettings),b):sc(n.ajaxSettings,a)},ajaxPrefilter:qc(lc),ajaxTransport:qc(mc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gc.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||oc)+\"\").replace(ec,\"\").replace(jc,pc[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=kc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pc[1]&&h[2]===pc[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(pc[3]||(\"http:\"===pc[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rc(lc,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!ic.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=fc.test(d)?d.replace(fc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+nc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rc(mc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tc(k,v,f)),u=uc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vc=/%20/g,wc=/\\[\\]$/,xc=/\\r?\\n/g,yc=/^(?:submit|button|image|reset|file)$/i,zc=/^(?:input|select|textarea|keygen)/i;function Ac(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wc.test(a)?d(a,e):Ac(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Ac(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ac(c,a[c],b,e);return d.join(\"&\").replace(vc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&zc.test(this.nodeName)&&!yc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xc,\"\\r\\n\")}}):{name:b.name,value:c.replace(xc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bc=0,Cc={},Dc={0:200,1223:204},Ec=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in Cc)Cc[a]()}),k.cors=!!Ec&&\"withCredentials\"in Ec,k.ajax=Ec=!!Ec,n.ajaxTransport(function(a){var b;return k.cors||Ec&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Dc[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Cc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fc=[],Gc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Fc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Gc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hc=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Hc)return Hc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ic=a.document.documentElement;function Jc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ic;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ic})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Kc=a.jQuery,Lc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lc),b&&a.jQuery===n&&(a.jQuery=Kc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n"
			},
			{
				"name": "bootbox.min.js",
				"source": "/**\n * bootbox.js v4.4.0\n *\n * http://bootboxjs.com/license.txt\n */\n!function(a,b){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],b):\"object\"==typeof exports?module.exports=b(require(\"jquery\")):a.bootbox=b(a.jQuery)}(this,function a(b,c){\"use strict\";function d(a){var b=q[o.locale];return b?b[a]:q.en[a]}function e(a,c,d){a.stopPropagation(),a.preventDefault();var e=b.isFunction(d)&&d.call(c,a)===!1;e||c.modal(\"hide\")}function f(a){var b,c=0;for(b in a)c++;return c}function g(a,c){var d=0;b.each(a,function(a,b){c(a,b,d++)})}function h(a){var c,d;if(\"object\"!=typeof a)throw new Error(\"Please supply an object of options\");if(!a.message)throw new Error(\"Please specify a message\");return a=b.extend({},o,a),a.buttons||(a.buttons={}),c=a.buttons,d=f(c),g(c,function(a,e,f){if(b.isFunction(e)&&(e=c[a]={callback:e}),\"object\"!==b.type(e))throw new Error(\"button with key \"+a+\" must be an object\");e.label||(e.label=a),e.className||(e.className=2>=d&&f===d-1?\"btn-primary\":\"btn-default\")}),a}function i(a,b){var c=a.length,d={};if(1>c||c>2)throw new Error(\"Invalid argument length\");return 2===c||\"string\"==typeof a[0]?(d[b[0]]=a[0],d[b[1]]=a[1]):d=a[0],d}function j(a,c,d){return b.extend(!0,{},a,i(c,d))}function k(a,b,c,d){var e={className:\"bootbox-\"+a,buttons:l.apply(null,b)};return m(j(e,d,c),b)}function l(){for(var a={},b=0,c=arguments.length;c>b;b++){var e=arguments[b],f=e.toLowerCase(),g=e.toUpperCase();a[f]={label:d(g)}}return a}function m(a,b){var d={};return g(b,function(a,b){d[b]=!0}),g(a.buttons,function(a){if(d[a]===c)throw new Error(\"button key \"+a+\" is not allowed (options are \"+b.join(\"\\n\")+\")\")}),a}var n={dialog:\"<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>\",header:\"<div class='modal-header'><h4 class='modal-title'></h4></div>\",footer:\"<div class='modal-footer'></div>\",closeButton:\"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\",form:\"<form class='bootbox-form'></form>\",inputs:{text:\"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\",textarea:\"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\",email:\"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\",select:\"<select class='bootbox-input bootbox-input-select form-control'></select>\",checkbox:\"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\",date:\"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\",time:\"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\",number:\"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\",password:\"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\"}},o={locale:\"en\",backdrop:\"static\",animate:!0,className:null,closeButton:!0,show:!0,container:\"body\"},p={};p.alert=function(){var a;if(a=k(\"alert\",[\"ok\"],[\"message\",\"callback\"],arguments),a.callback&&!b.isFunction(a.callback))throw new Error(\"alert requires callback property to be a function when provided\");return a.buttons.ok.callback=a.onEscape=function(){return b.isFunction(a.callback)?a.callback.call(this):!0},p.dialog(a)},p.confirm=function(){var a;if(a=k(\"confirm\",[\"cancel\",\"confirm\"],[\"message\",\"callback\"],arguments),a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,!1)},a.buttons.confirm.callback=function(){return a.callback.call(this,!0)},!b.isFunction(a.callback))throw new Error(\"confirm requires a callback\");return p.dialog(a)},p.prompt=function(){var a,d,e,f,h,i,k;if(f=b(n.form),d={className:\"bootbox-prompt\",buttons:l(\"cancel\",\"confirm\"),value:\"\",inputType:\"text\"},a=m(j(d,arguments,[\"title\",\"callback\"]),[\"cancel\",\"confirm\"]),i=a.show===c?!0:a.show,a.message=f,a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,null)},a.buttons.confirm.callback=function(){var c;switch(a.inputType){case\"text\":case\"textarea\":case\"email\":case\"select\":case\"date\":case\"time\":case\"number\":case\"password\":c=h.val();break;case\"checkbox\":var d=h.find(\"input:checked\");c=[],g(d,function(a,d){c.push(b(d).val())})}return a.callback.call(this,c)},a.show=!1,!a.title)throw new Error(\"prompt requires a title\");if(!b.isFunction(a.callback))throw new Error(\"prompt requires a callback\");if(!n.inputs[a.inputType])throw new Error(\"invalid prompt type\");switch(h=b(n.inputs[a.inputType]),a.inputType){case\"text\":case\"textarea\":case\"email\":case\"date\":case\"time\":case\"number\":case\"password\":h.val(a.value);break;case\"select\":var o={};if(k=a.inputOptions||[],!b.isArray(k))throw new Error(\"Please pass an array of input options\");if(!k.length)throw new Error(\"prompt with select requires options\");g(k,function(a,d){var e=h;if(d.value===c||d.text===c)throw new Error(\"given options in wrong format\");d.group&&(o[d.group]||(o[d.group]=b(\"<optgroup/>\").attr(\"label\",d.group)),e=o[d.group]),e.append(\"<option value='\"+d.value+\"'>\"+d.text+\"</option>\")}),g(o,function(a,b){h.append(b)}),h.val(a.value);break;case\"checkbox\":var q=b.isArray(a.value)?a.value:[a.value];if(k=a.inputOptions||[],!k.length)throw new Error(\"prompt with checkbox requires options\");if(!k[0].value||!k[0].text)throw new Error(\"given options in wrong format\");h=b(\"<div/>\"),g(k,function(c,d){var e=b(n.inputs[a.inputType]);e.find(\"input\").attr(\"value\",d.value),e.find(\"label\").append(d.text),g(q,function(a,b){b===d.value&&e.find(\"input\").prop(\"checked\",!0)}),h.append(e)})}return a.placeholder&&h.attr(\"placeholder\",a.placeholder),a.pattern&&h.attr(\"pattern\",a.pattern),a.maxlength&&h.attr(\"maxlength\",a.maxlength),f.append(h),f.on(\"submit\",function(a){a.preventDefault(),a.stopPropagation(),e.find(\".btn-primary\").click()}),e=p.dialog(a),e.off(\"shown.bs.modal\"),e.on(\"shown.bs.modal\",function(){h.focus()}),i===!0&&e.modal(\"show\"),e},p.dialog=function(a){a=h(a);var d=b(n.dialog),f=d.find(\".modal-dialog\"),i=d.find(\".modal-body\"),j=a.buttons,k=\"\",l={onEscape:a.onEscape};if(b.fn.modal===c)throw new Error(\"$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.\");if(g(j,function(a,b){k+=\"<button data-bb-handler='\"+a+\"' type='button' class='btn \"+b.className+\"'>\"+b.label+\"</button>\",l[a]=b.callback}),i.find(\".bootbox-body\").html(a.message),a.animate===!0&&d.addClass(\"fade\"),a.className&&d.addClass(a.className),\"large\"===a.size?f.addClass(\"modal-lg\"):\"small\"===a.size&&f.addClass(\"modal-sm\"),a.title&&i.before(n.header),a.closeButton){var m=b(n.closeButton);a.title?d.find(\".modal-header\").prepend(m):m.css(\"margin-top\",\"-10px\").prependTo(i)}return a.title&&d.find(\".modal-title\").html(a.title),k.length&&(i.after(n.footer),d.find(\".modal-footer\").html(k)),d.on(\"hidden.bs.modal\",function(a){a.target===this&&d.remove()}),d.on(\"shown.bs.modal\",function(){d.find(\".btn-primary:first\").focus()}),\"static\"!==a.backdrop&&d.on(\"click.dismiss.bs.modal\",function(a){d.children(\".modal-backdrop\").length&&(a.currentTarget=d.children(\".modal-backdrop\").get(0)),a.target===a.currentTarget&&d.trigger(\"escape.close.bb\")}),d.on(\"escape.close.bb\",function(a){l.onEscape&&e(a,d,l.onEscape)}),d.on(\"click\",\".modal-footer button\",function(a){var c=b(this).data(\"bb-handler\");e(a,d,l[c])}),d.on(\"click\",\".bootbox-close-button\",function(a){e(a,d,l.onEscape)}),d.on(\"keyup\",function(a){27===a.which&&d.trigger(\"escape.close.bb\")}),b(a.container).append(d),d.modal({backdrop:a.backdrop?\"static\":!1,keyboard:!1,show:!1}),a.show&&d.modal(\"show\"),d},p.setDefaults=function(){var a={};2===arguments.length?a[arguments[0]]=arguments[1]:a=arguments[0],b.extend(o,a)},p.hideAll=function(){return b(\".bootbox\").modal(\"hide\"),p};var q={bg_BG:{OK:\"Ок\",CANCEL:\"Отказ\",CONFIRM:\"Потвърждавам\"},br:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Sim\"},cs:{OK:\"OK\",CANCEL:\"Zrušit\",CONFIRM:\"Potvrdit\"},da:{OK:\"OK\",CANCEL:\"Annuller\",CONFIRM:\"Accepter\"},de:{OK:\"OK\",CANCEL:\"Abbrechen\",CONFIRM:\"Akzeptieren\"},el:{OK:\"Εντάξει\",CANCEL:\"Ακύρωση\",CONFIRM:\"Επιβεβαίωση\"},en:{OK:\"OK\",CANCEL:\"Cancel\",CONFIRM:\"OK\"},es:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Aceptar\"},et:{OK:\"OK\",CANCEL:\"Katkesta\",CONFIRM:\"OK\"},fa:{OK:\"قبول\",CANCEL:\"لغو\",CONFIRM:\"تایید\"},fi:{OK:\"OK\",CANCEL:\"Peruuta\",CONFIRM:\"OK\"},fr:{OK:\"OK\",CANCEL:\"Annuler\",CONFIRM:\"D'accord\"},he:{OK:\"אישור\",CANCEL:\"ביטול\",CONFIRM:\"אישור\"},hu:{OK:\"OK\",CANCEL:\"Mégsem\",CONFIRM:\"Megerősít\"},hr:{OK:\"OK\",CANCEL:\"Odustani\",CONFIRM:\"Potvrdi\"},id:{OK:\"OK\",CANCEL:\"Batal\",CONFIRM:\"OK\"},it:{OK:\"OK\",CANCEL:\"Annulla\",CONFIRM:\"Conferma\"},ja:{OK:\"OK\",CANCEL:\"キャンセル\",CONFIRM:\"確認\"},lt:{OK:\"Gerai\",CANCEL:\"Atšaukti\",CONFIRM:\"Patvirtinti\"},lv:{OK:\"Labi\",CANCEL:\"Atcelt\",CONFIRM:\"Apstiprināt\"},nl:{OK:\"OK\",CANCEL:\"Annuleren\",CONFIRM:\"Accepteren\"},no:{OK:\"OK\",CANCEL:\"Avbryt\",CONFIRM:\"OK\"},pl:{OK:\"OK\",CANCEL:\"Anuluj\",CONFIRM:\"Potwierdź\"},pt:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Confirmar\"},ru:{OK:\"OK\",CANCEL:\"Отмена\",CONFIRM:\"Применить\"},sq:{OK:\"OK\",CANCEL:\"Anulo\",CONFIRM:\"Prano\"},sv:{OK:\"OK\",CANCEL:\"Avbryt\",CONFIRM:\"OK\"},th:{OK:\"ตกลง\",CANCEL:\"ยกเลิก\",CONFIRM:\"ยืนยัน\"},tr:{OK:\"Tamam\",CANCEL:\"İptal\",CONFIRM:\"Onayla\"},zh_CN:{OK:\"OK\",CANCEL:\"取消\",CONFIRM:\"确认\"},zh_TW:{OK:\"OK\",CANCEL:\"取消\",CONFIRM:\"確認\"}};return p.addLocale=function(a,c){return b.each([\"OK\",\"CANCEL\",\"CONFIRM\"],function(a,b){if(!c[b])throw new Error(\"Please supply a translation for '\"+b+\"'\")}),q[a]={OK:c.OK,CANCEL:c.CANCEL,CONFIRM:c.CONFIRM},p},p.removeLocale=function(a){return delete q[a],p},p.setLocale=function(a){return p.setDefaults(\"locale\",a)},p.init=function(c){return a(c||b)},p});"
			},
			{
				"name": "bootstrap.min.js",
				"source": "/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.6\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.6\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.6\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.6\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");\nd.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.6\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);"
			},
			{
				"name": "DeviceDetector.js",
				"source": "//  Device Detector.\n\n    var isMobile = ( function () {\n        var ua = navigator.userAgent,\n            apple_phone      = /iPhone/i,\n            apple_ipod       = /iPod/i,\n            apple_tablet     = /iPad/i,\n            android_phone    = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n            android_tablet   = /Android/i,\n            windows_phone    = /IEMobile/i,\n            windows_tablet   = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n            other_blackberry = /BlackBerry/i,\n            other_opera      = /Opera Mini/i,\n            other_firefox    = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i; // Match 'Firefox' AND 'Mobile'\n\n        if (\n        apple_phone.test( ua )      ||\n        apple_phone.test( ua )      ||\n        apple_ipod.test( ua )       ||\n        apple_tablet.test( ua )     ||\n        android_phone.test( ua )    ||\n        android_tablet.test( ua )   ||\n        windows_phone.test( ua )    ||\n        windows_tablet.test( ua )   ||\n        other_blackberry.test( ua ) ||\n        other_opera.test( ua )      ||\n        other_firefox.test( ua )\n        ){\n\n            return true;\n\n        } else {\n\n            return false;\n\n        }\n    })();\n"
			},
			{
				"name": "validator.min.js",
				"source": "/*!\n * Copyright (c) 2016 Chris O'Hara <cohara87@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.validator=t()}(this,function(){\"use strict\";function f(e){if(!(\"string\"==typeof e||e instanceof String))throw new TypeError(\"This library (validator.js) validates strings only\")}function i(e){return f(e),e=Date.parse(e),isNaN(e)?null:new Date(e)}function r(e){return f(e),parseFloat(e)}var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};function n(e){return\"object\"===(void 0===e?\"undefined\":a(e))&&null!==e?e=\"function\"==typeof e.toString?e.toString():\"[object Object]\":(null==e||isNaN(e)&&!e.length)&&(e=\"\"),String(e)}function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}function d(e,t){f(e);var r=void 0,o=void 0;\"object\"===(void 0===t?\"undefined\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=encodeURI(e).split(/%..|./).length-1;return r<=i&&(void 0===o||i<=o)}var l={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};function p(e,t){f(e),(t=c(t,l)).allow_trailing_dot&&\".\"===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var r=e.split(\".\"),o=0;o<r.length;o++)if(63<r[o].length)return!1;if(t.require_tld){var i=r.pop();if(!r.length||!/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(i))return!1;if(/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20]/.test(i))return!1}for(var n,a=0;a<r.length;a++){if(n=r[a],t.allow_underscores&&(n=n.replace(/_/g,\"\")),!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(n))return!1;if(/[\\uff01-\\uff5e]/.test(n))return!1;if(\"-\"===n[0]||\"-\"===n[n.length-1])return!1}return!0}var g={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},A=/^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i,h=/^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i,v=/^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i,m=/^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i,_=/^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;var s=/^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/,u=/^[0-9A-F]{1,4}$/i;function F(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"\";if(f(e),!(t=String(t)))return F(e,4)||F(e,6);if(\"4\"===t)return!!s.test(e)&&e.split(\".\").sort(function(e,t){return e-t})[3]<=255;if(\"6\"===t){var r=e.split(\":\"),o=!1,i=F(r[r.length-1],4),n=i?7:8;if(r.length>n)return!1;if(\"::\"===e)return!0;\"::\"===e.substr(0,2)?(r.shift(),r.shift(),o=!0):\"::\"===e.substr(e.length-2)&&(r.pop(),r.pop(),o=!0);for(var a=0;a<r.length;++a)if(\"\"===r[a]&&0<a&&a<r.length-1){if(o)return!1;o=!0}else if(i&&a===r.length-1);else if(!u.test(r[a]))return!1;return o?1<=r.length:r.length===n}return!1}var $={protocols:[\"http\",\"https\",\"ftp\"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},S=/^\\[([^\\]]+)\\](?::([0-9]+))?$/;function R(e,t){for(var r=0;r<t.length;r++){var o=t[r];if(e===o||(i=o,\"[object RegExp]\"===Object.prototype.toString.call(i)&&o.test(e)))return!0}var i;return!1}var t=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;for(var e,o={\"en-US\":/^[A-Z]+$/i,\"bg-BG\":/^[А-Я]+$/i,\"cs-CZ\":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\"da-DK\":/^[A-ZÆØÅ]+$/i,\"de-DE\":/^[A-ZÄÖÜß]+$/i,\"el-GR\":/^[Α-ω]+$/i,\"es-ES\":/^[A-ZÁÉÍÑÓÚÜ]+$/i,\"fr-FR\":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\"it-IT\":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\"nb-NO\":/^[A-ZÆØÅ]+$/i,\"nl-NL\":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,\"nn-NO\":/^[A-ZÆØÅ]+$/i,\"hu-HU\":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\"pl-PL\":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\"pt-PT\":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\"ru-RU\":/^[А-ЯЁ]+$/i,\"sk-SK\":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\"sr-RS@latin\":/^[A-ZČĆŽŠĐ]+$/i,\"sr-RS\":/^[А-ЯЂЈЉЊЋЏ]+$/i,\"sv-SE\":/^[A-ZÅÄÖ]+$/i,\"tr-TR\":/^[A-ZÇĞİıÖŞÜ]+$/i,\"uk-UA\":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},E={\"en-US\":/^[0-9A-Z]+$/i,\"bg-BG\":/^[0-9А-Я]+$/i,\"cs-CZ\":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\"da-DK\":/^[0-9A-ZÆØÅ]+$/i,\"de-DE\":/^[0-9A-ZÄÖÜß]+$/i,\"el-GR\":/^[0-9Α-ω]+$/i,\"es-ES\":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\"fr-FR\":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\"it-IT\":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\"hu-HU\":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\"nb-NO\":/^[0-9A-ZÆØÅ]+$/i,\"nl-NL\":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\"nn-NO\":/^[0-9A-ZÆØÅ]+$/i,\"pl-PL\":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\"pt-PT\":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\"ru-RU\":/^[0-9А-ЯЁ]+$/i,\"sk-SK\":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\"sr-RS@latin\":/^[0-9A-ZČĆŽŠĐ]+$/i,\"sr-RS\":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\"sv-SE\":/^[0-9A-ZÅÄÖ]+$/i,\"tr-TR\":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,\"uk-UA\":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},x={\"en-US\":\".\",ar:\"٫\"},M=[\"AU\",\"GB\",\"HK\",\"IN\",\"NZ\",\"ZA\",\"ZM\"],C=0;C<M.length;C++)o[e=\"en-\"+M[C]]=o[\"en-US\"],E[e]=E[\"en-US\"],x[e]=x[\"en-US\"];for(var N,w=[\"AE\",\"BH\",\"DZ\",\"EG\",\"IQ\",\"JO\",\"KW\",\"LB\",\"LY\",\"MA\",\"QM\",\"QA\",\"SA\",\"SD\",\"SY\",\"TN\",\"YE\"],T=0;T<w.length;T++)o[N=\"ar-\"+w[T]]=o.ar,E[N]=E.ar,x[N]=x.ar;for(var Z=[],B=[\"bg-BG\",\"cs-CZ\",\"da-DK\",\"de-DE\",\"el-GR\",\"es-ES\",\"fr-FR\",\"it-IT\",\"hu-HU\",\"nb-NO\",\"nn-NO\",\"nl-NL\",\"pl-Pl\",\"pt-PT\",\"ru-RU\",\"sr-RS@latin\",\"sr-RS\",\"sv-SE\",\"tr-TR\",\"uk-UA\"],I=0;I<Z.length;I++)x[Z[I]]=x[\"en-US\"];for(var L=0;L<B.length;L++)x[B[L]]=\",\";o[\"pt-BR\"]=o[\"pt-PT\"],E[\"pt-BR\"]=E[\"pt-PT\"],x[\"pt-BR\"]=x[\"pt-PT\"];var y=/^[+-]?([0-9]*[.])?[0-9]+$/;var G=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,D=/^[-+]?[0-9]+$/;function O(e,t){f(e);var r=(t=t||{}).hasOwnProperty(\"allow_leading_zeroes\")&&!t.allow_leading_zeroes?G:D,o=!t.hasOwnProperty(\"min\")||e>=t.min,i=!t.hasOwnProperty(\"max\")||e<=t.max,n=!t.hasOwnProperty(\"lt\")||e<t.lt,a=!t.hasOwnProperty(\"gt\")||e>t.gt;return r.test(e)&&o&&i&&n&&a}var U=/^[\\x00-\\x7F]+$/;var b=/[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;var P=/[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;var K=/[^\\x00-\\x7F]/;var k=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;var H={force_decimal:!1,decimal_digits:\"1,\",locale:\"en-US\"},z=[\"\",\"-\",\"+\"];var V=/^[0-9A-F]+$/i;function W(e){return f(e),V.test(e)}var Y=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;var j=/^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;var J=/^[a-f0-9]{32}$/;var q={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};var Q={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};var X=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;var ee=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;var te=/^(?:[0-9]{9}X|[0-9]{10})$/,re=/^(?:[0-9]{13})$/,oe=[1,3];var ie=\"^\\\\d{4}-?\\\\d{3}[\\\\dX]$\";var ne={\"ar-AE\":/^((\\+?971)|0)?5[024568]\\d{7}$/,\"ar-DZ\":/^(\\+?213|0)(5|6|7)\\d{8}$/,\"ar-EG\":/^((\\+?20)|0)?1[012]\\d{8}$/,\"ar-JO\":/^(\\+?962|0)?7[789]\\d{7}$/,\"ar-SA\":/^(!?(\\+?966)|0)?5\\d{8}$/,\"ar-SY\":/^(!?(\\+?963)|0)?9\\d{8}$/,\"be-BY\":/^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\"bg-BG\":/^(\\+?359|0)?8[789]\\d{7}$/,\"cs-CZ\":/^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\"da-DK\":/^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\"de-DE\":/^(\\+?49[ \\.\\-])?([\\(]{1}[0-9]{1,6}[\\)])?([0-9 \\.\\-\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,\"el-GR\":/^(\\+?30|0)?(69\\d{8})$/,\"en-AU\":/^(\\+?61|0)4\\d{8}$/,\"en-GB\":/^(\\+?44|0)7\\d{9}$/,\"en-HK\":/^(\\+?852\\-?)?[456789]\\d{3}\\-?\\d{4}$/,\"en-IN\":/^(\\+?91|0)?[6789]\\d{9}$/,\"en-KE\":/^(\\+?254|0)?[7]\\d{8}$/,\"en-NG\":/^(\\+?234|0)?[789]\\d{9}$/,\"en-NZ\":/^(\\+?64|0)2\\d{7,9}$/,\"en-PK\":/^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$/,\"en-RW\":/^(\\+?250|0)?[7]\\d{8}$/,\"en-SG\":/^(\\+65)?[89]\\d{7}$/,\"en-TZ\":/^(\\+?255|0)?[67]\\d{8}$/,\"en-UG\":/^(\\+?256|0)?[7]\\d{8}$/,\"en-US\":/^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\"en-ZA\":/^(\\+?27|0)\\d{9}$/,\"en-ZM\":/^(\\+?26)?09[567]\\d{7}$/,\"es-ES\":/^(\\+?34)?(6\\d{1}|7[1234])\\d{7}$/,\"et-EE\":/^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\"fa-IR\":/^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\"fi-FI\":/^(\\+?358|0)\\s?(4(0|1|2|4|5|6)?|50)\\s?(\\d\\s?){4,8}\\d$/,\"fo-FO\":/^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\"fr-FR\":/^(\\+?33|0)[67]\\d{8}$/,\"he-IL\":/^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}/,\"hu-HU\":/^(\\+?36)(20|30|70)\\d{7}$/,\"id-ID\":/^(\\+?62|0[1-9])[\\s|\\d]+$/,\"it-IT\":/^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\"ja-JP\":/^(\\+?81|0)[789]0[ \\-]?[1-9]\\d{2}[ \\-]?\\d{5}$/,\"kk-KZ\":/^(\\+?7|8)?7\\d{9}$/,\"kl-GL\":/^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\"ko-KR\":/^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\"lt-LT\":/^(\\+370|8)\\d{8}$/,\"ms-MY\":/^(\\+?6?01){1}(([145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\"nb-NO\":/^(\\+?47)?[49]\\d{7}$/,\"nl-BE\":/^(\\+?32|0)4?\\d{8}$/,\"nn-NO\":/^(\\+?47)?[49]\\d{7}$/,\"pl-PL\":/^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\"pt-BR\":/^(\\+?55|0)\\-?[1-9]{2}\\-?[2-9]{1}\\d{3,4}\\-?\\d{4}$/,\"pt-PT\":/^(\\+?351)?9[1236]\\d{7}$/,\"ro-RO\":/^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\"ru-RU\":/^(\\+?7|8)?9\\d{9}$/,\"sk-SK\":/^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\"sr-RS\":/^(\\+3816|06)[- \\d]{5,9}$/,\"th-TH\":/^(\\+66|66|0)\\d{9}$/,\"tr-TR\":/^(\\+?90|0)?5\\d{9}$/,\"uk-UA\":/^(\\+?38|8)?0\\d{9}$/,\"vi-VN\":/^(\\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\"zh-CN\":/^(\\+?0?86\\-?)?1[3456789]\\d{9}$/,\"zh-TW\":/^(\\+?886\\-?|0)?9\\d{8}$/};ne[\"en-CA\"]=ne[\"en-US\"],ne[\"fr-BE\"]=ne[\"nl-BE\"],ne[\"zh-HK\"]=ne[\"en-HK\"];var ae={symbol:\"$\",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:\",\",decimal_separator:\".\",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};var le=/^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;var se=/([01][0-9]|2[0-3])/,ue=/[0-5][0-9]/,de=new RegExp(\"[-+]\"+se.source+\":\"+ue.source),ce=new RegExp(\"([zZ]|\"+de.source+\")\"),fe=new RegExp(se.source+\":\"+ue.source+\":\"+/([0-5][0-9]|60)/.source+/(\\.[0-9]+)?/.source),pe=new RegExp(/[0-9]{4}/.source+\"-\"+/(0[1-9]|1[0-2])/.source+\"-\"+/([12]\\d|0[1-9]|3[01])/.source),ge=new RegExp(\"\"+fe.source+ce.source),Ae=new RegExp(pe.source+\"[ tT]\"+ge.source);var he=[\"AD\",\"AE\",\"AF\",\"AG\",\"AI\",\"AL\",\"AM\",\"AO\",\"AQ\",\"AR\",\"AS\",\"AT\",\"AU\",\"AW\",\"AX\",\"AZ\",\"BA\",\"BB\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BJ\",\"BL\",\"BM\",\"BN\",\"BO\",\"BQ\",\"BR\",\"BS\",\"BT\",\"BV\",\"BW\",\"BY\",\"BZ\",\"CA\",\"CC\",\"CD\",\"CF\",\"CG\",\"CH\",\"CI\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"CR\",\"CU\",\"CV\",\"CW\",\"CX\",\"CY\",\"CZ\",\"DE\",\"DJ\",\"DK\",\"DM\",\"DO\",\"DZ\",\"EC\",\"EE\",\"EG\",\"EH\",\"ER\",\"ES\",\"ET\",\"FI\",\"FJ\",\"FK\",\"FM\",\"FO\",\"FR\",\"GA\",\"GB\",\"GD\",\"GE\",\"GF\",\"GG\",\"GH\",\"GI\",\"GL\",\"GM\",\"GN\",\"GP\",\"GQ\",\"GR\",\"GS\",\"GT\",\"GU\",\"GW\",\"GY\",\"HK\",\"HM\",\"HN\",\"HR\",\"HT\",\"HU\",\"ID\",\"IE\",\"IL\",\"IM\",\"IN\",\"IO\",\"IQ\",\"IR\",\"IS\",\"IT\",\"JE\",\"JM\",\"JO\",\"JP\",\"KE\",\"KG\",\"KH\",\"KI\",\"KM\",\"KN\",\"KP\",\"KR\",\"KW\",\"KY\",\"KZ\",\"LA\",\"LB\",\"LC\",\"LI\",\"LK\",\"LR\",\"LS\",\"LT\",\"LU\",\"LV\",\"LY\",\"MA\",\"MC\",\"MD\",\"ME\",\"MF\",\"MG\",\"MH\",\"MK\",\"ML\",\"MM\",\"MN\",\"MO\",\"MP\",\"MQ\",\"MR\",\"MS\",\"MT\",\"MU\",\"MV\",\"MW\",\"MX\",\"MY\",\"MZ\",\"NA\",\"NC\",\"NE\",\"NF\",\"NG\",\"NI\",\"NL\",\"NO\",\"NP\",\"NR\",\"NU\",\"NZ\",\"OM\",\"PA\",\"PE\",\"PF\",\"PG\",\"PH\",\"PK\",\"PL\",\"PM\",\"PN\",\"PR\",\"PS\",\"PT\",\"PW\",\"PY\",\"QA\",\"RE\",\"RO\",\"RS\",\"RU\",\"RW\",\"SA\",\"SB\",\"SC\",\"SD\",\"SE\",\"SG\",\"SH\",\"SI\",\"SJ\",\"SK\",\"SL\",\"SM\",\"SN\",\"SO\",\"SR\",\"SS\",\"ST\",\"SV\",\"SX\",\"SY\",\"SZ\",\"TC\",\"TD\",\"TF\",\"TG\",\"TH\",\"TJ\",\"TK\",\"TL\",\"TM\",\"TN\",\"TO\",\"TR\",\"TT\",\"TV\",\"TW\",\"TZ\",\"UA\",\"UG\",\"UM\",\"US\",\"UY\",\"UZ\",\"VA\",\"VC\",\"VE\",\"VG\",\"VI\",\"VN\",\"VU\",\"WF\",\"WS\",\"YE\",\"YT\",\"ZA\",\"ZM\",\"ZW\"];var ve=[\"AFG\",\"ALA\",\"ALB\",\"DZA\",\"ASM\",\"AND\",\"AGO\",\"AIA\",\"ATA\",\"ATG\",\"ARG\",\"ARM\",\"ABW\",\"AUS\",\"AUT\",\"AZE\",\"BHS\",\"BHR\",\"BGD\",\"BRB\",\"BLR\",\"BEL\",\"BLZ\",\"BEN\",\"BMU\",\"BTN\",\"BOL\",\"BES\",\"BIH\",\"BWA\",\"BVT\",\"BRA\",\"IOT\",\"BRN\",\"BGR\",\"BFA\",\"BDI\",\"KHM\",\"CMR\",\"CAN\",\"CPV\",\"CYM\",\"CAF\",\"TCD\",\"CHL\",\"CHN\",\"CXR\",\"CCK\",\"COL\",\"COM\",\"COG\",\"COD\",\"COK\",\"CRI\",\"CIV\",\"HRV\",\"CUB\",\"CUW\",\"CYP\",\"CZE\",\"DNK\",\"DJI\",\"DMA\",\"DOM\",\"ECU\",\"EGY\",\"SLV\",\"GNQ\",\"ERI\",\"EST\",\"ETH\",\"FLK\",\"FRO\",\"FJI\",\"FIN\",\"FRA\",\"GUF\",\"PYF\",\"ATF\",\"GAB\",\"GMB\",\"GEO\",\"DEU\",\"GHA\",\"GIB\",\"GRC\",\"GRL\",\"GRD\",\"GLP\",\"GUM\",\"GTM\",\"GGY\",\"GIN\",\"GNB\",\"GUY\",\"HTI\",\"HMD\",\"VAT\",\"HND\",\"HKG\",\"HUN\",\"ISL\",\"IND\",\"IDN\",\"IRN\",\"IRQ\",\"IRL\",\"IMN\",\"ISR\",\"ITA\",\"JAM\",\"JPN\",\"JEY\",\"JOR\",\"KAZ\",\"KEN\",\"KIR\",\"PRK\",\"KOR\",\"KWT\",\"KGZ\",\"LAO\",\"LVA\",\"LBN\",\"LSO\",\"LBR\",\"LBY\",\"LIE\",\"LTU\",\"LUX\",\"MAC\",\"MKD\",\"MDG\",\"MWI\",\"MYS\",\"MDV\",\"MLI\",\"MLT\",\"MHL\",\"MTQ\",\"MRT\",\"MUS\",\"MYT\",\"MEX\",\"FSM\",\"MDA\",\"MCO\",\"MNG\",\"MNE\",\"MSR\",\"MAR\",\"MOZ\",\"MMR\",\"NAM\",\"NRU\",\"NPL\",\"NLD\",\"NCL\",\"NZL\",\"NIC\",\"NER\",\"NGA\",\"NIU\",\"NFK\",\"MNP\",\"NOR\",\"OMN\",\"PAK\",\"PLW\",\"PSE\",\"PAN\",\"PNG\",\"PRY\",\"PER\",\"PHL\",\"PCN\",\"POL\",\"PRT\",\"PRI\",\"QAT\",\"REU\",\"ROU\",\"RUS\",\"RWA\",\"BLM\",\"SHN\",\"KNA\",\"LCA\",\"MAF\",\"SPM\",\"VCT\",\"WSM\",\"SMR\",\"STP\",\"SAU\",\"SEN\",\"SRB\",\"SYC\",\"SLE\",\"SGP\",\"SXM\",\"SVK\",\"SVN\",\"SLB\",\"SOM\",\"ZAF\",\"SGS\",\"SSD\",\"ESP\",\"LKA\",\"SDN\",\"SUR\",\"SJM\",\"SWZ\",\"SWE\",\"CHE\",\"SYR\",\"TWN\",\"TJK\",\"TZA\",\"THA\",\"TLS\",\"TGO\",\"TKL\",\"TON\",\"TTO\",\"TUN\",\"TUR\",\"TKM\",\"TCA\",\"TUV\",\"UGA\",\"UKR\",\"ARE\",\"GBR\",\"USA\",\"UMI\",\"URY\",\"UZB\",\"VUT\",\"VEN\",\"VNM\",\"VGB\",\"VIR\",\"WLF\",\"ESH\",\"YEM\",\"ZMB\",\"ZWE\"];var me=/[^A-Z0-9+\\/=]/i;var _e=/^[a-z]+\\/[a-z0-9\\-\\+]+$/i,Fe=/^[a-z\\-]+=[a-z0-9\\-]+$/i,$e=/^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;var Se=/^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i,Re=/^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i,Ee=/^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i;var xe=/^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/,Me=/^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/,Ce=/^\\d{4}$/,Ne=/^\\d{5}$/,we=/^\\d{6}$/,Te={AT:Ce,AU:Ce,BE:Ce,BG:Ce,CA:/^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,CH:Ce,CZ:/^\\d{3}\\s?\\d{2}$/,DE:Ne,DK:Ce,DZ:Ne,ES:Ne,FI:Ne,FR:/^\\d{2}\\s?\\d{3}$/,GB:/^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,GR:/^\\d{3}\\s?\\d{2}$/,IL:Ne,IN:we,IS:/^\\d{3}$/,IT:Ne,JP:/^\\d{3}\\-\\d{4}$/,KE:Ne,LI:/^(948[5-9]|949[0-7])$/,MX:Ne,NL:/^\\d{4}\\s?[a-z]{2}$/i,NO:Ce,PL:/^\\d{2}\\-\\d{3}$/,PT:/^\\d{4}\\-\\d{3}?$/,RO:we,RU:we,SA:Ne,SE:/^\\d{3}\\s?\\d{2}$/,SK:/^\\d{3}\\s?\\d{2}$/,TW:/^\\d{3}(\\d{2})?$/,US:/^\\d{5}(-\\d{4})?$/,ZA:Ce,ZM:Ne};function Ze(e,t){f(e);var r=t?new RegExp(\"^[\"+t+\"]+\",\"g\"):/^\\s+/g;return e.replace(r,\"\")}function Be(e,t){f(e);for(var r=t?new RegExp(\"[\"+t+\"]\"):/\\s/,o=e.length-1;0<=o&&r.test(e[o]);)o--;return o<e.length?e.substr(0,o+1):e}function Ie(e,t){return f(e),e.replace(new RegExp(\"[\"+t+\"]+\",\"g\"),\"\")}var Le={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},ye=[\"icloud.com\",\"me.com\"],Ge=[\"hotmail.at\",\"hotmail.be\",\"hotmail.ca\",\"hotmail.cl\",\"hotmail.co.il\",\"hotmail.co.nz\",\"hotmail.co.th\",\"hotmail.co.uk\",\"hotmail.com\",\"hotmail.com.ar\",\"hotmail.com.au\",\"hotmail.com.br\",\"hotmail.com.gr\",\"hotmail.com.mx\",\"hotmail.com.pe\",\"hotmail.com.tr\",\"hotmail.com.vn\",\"hotmail.cz\",\"hotmail.de\",\"hotmail.dk\",\"hotmail.es\",\"hotmail.fr\",\"hotmail.hu\",\"hotmail.id\",\"hotmail.ie\",\"hotmail.in\",\"hotmail.it\",\"hotmail.jp\",\"hotmail.kr\",\"hotmail.lv\",\"hotmail.my\",\"hotmail.ph\",\"hotmail.pt\",\"hotmail.sa\",\"hotmail.sg\",\"hotmail.sk\",\"live.be\",\"live.co.uk\",\"live.com\",\"live.com.ar\",\"live.com.mx\",\"live.de\",\"live.es\",\"live.eu\",\"live.fr\",\"live.it\",\"live.nl\",\"msn.com\",\"outlook.at\",\"outlook.be\",\"outlook.cl\",\"outlook.co.il\",\"outlook.co.nz\",\"outlook.co.th\",\"outlook.com\",\"outlook.com.ar\",\"outlook.com.au\",\"outlook.com.br\",\"outlook.com.gr\",\"outlook.com.pe\",\"outlook.com.tr\",\"outlook.com.vn\",\"outlook.cz\",\"outlook.de\",\"outlook.dk\",\"outlook.es\",\"outlook.fr\",\"outlook.hu\",\"outlook.id\",\"outlook.ie\",\"outlook.in\",\"outlook.it\",\"outlook.jp\",\"outlook.kr\",\"outlook.lv\",\"outlook.my\",\"outlook.ph\",\"outlook.pt\",\"outlook.sa\",\"outlook.sg\",\"outlook.sk\",\"passport.com\"],De=[\"rocketmail.com\",\"yahoo.ca\",\"yahoo.co.uk\",\"yahoo.com\",\"yahoo.de\",\"yahoo.fr\",\"yahoo.in\",\"yahoo.it\",\"ymail.com\"],Oe=[\"yandex.ru\",\"yandex.ua\",\"yandex.kz\",\"yandex.com\",\"yandex.by\",\"ya.ru\"];function Ue(e){return 1<e.length?e:\"\"}return{version:\"10.1.0\",toDate:i,toFloat:r,toInt:function(e,t){return f(e),parseInt(e,t||10)},toBoolean:function(e,t){return f(e),t?\"1\"===e||\"true\"===e:\"0\"!==e&&\"false\"!==e&&\"\"!==e},equals:function(e,t){return f(e),e===t},contains:function(e,t){return f(e),0<=e.indexOf(n(t))},matches:function(e,t,r){return f(e),\"[object RegExp]\"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,r)),t.test(e)},isEmail:function(e,t){if(f(e),(t=c(t,g)).require_display_name||t.allow_display_name){var r=e.match(A);if(r)e=r[1];else if(t.require_display_name)return!1}var o=e.split(\"@\"),i=o.pop(),n=o.join(\"@\"),a=i.toLowerCase();if(\"gmail.com\"!==a&&\"googlemail.com\"!==a||(n=n.toLowerCase()),!d(n,{max:64})||!d(i,{max:254}))return!1;if(!p(i,{require_tld:t.require_tld}))return!1;if('\"'===n[0])return n=n.slice(1,n.length-1),t.allow_utf8_local_part?_.test(n):v.test(n);for(var l=t.allow_utf8_local_part?m:h,s=n.split(\".\"),u=0;u<s.length;u++)if(!l.test(s[u]))return!1;return!0},isURL:function(e,t){if(f(e),!e||2083<=e.length||/[\\s<>]/.test(e))return!1;if(0===e.indexOf(\"mailto:\"))return!1;t=c(t,$);var r=void 0,o=void 0,i=void 0,n=void 0,a=void 0,l=void 0,s=void 0,u=void 0;if(1<(s=(e=(s=(e=(s=e.split(\"#\")).shift()).split(\"?\")).shift()).split(\"://\")).length){if(r=s.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(r))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&\"//\"===e.substr(0,2)&&(s[0]=e.substr(2))}if(\"\"===(e=s.join(\"://\")))return!1;if(\"\"===(e=(s=e.split(\"/\")).shift())&&!t.require_host)return!0;if(1<(s=e.split(\"@\")).length&&0<=(o=s.shift()).indexOf(\":\")&&2<o.split(\":\").length)return!1;u=l=null;var d=(n=s.join(\"@\")).match(S);return d?(i=\"\",u=d[1],l=d[2]||null):(i=(s=n.split(\":\")).shift(),s.length&&(l=s.join(\":\"))),!(null!==l&&(a=parseInt(l,10),!/^[0-9]+$/.test(l)||a<=0||65535<a)||!(F(i)||p(i,t)||u&&F(u,6))||(i=i||u,t.host_whitelist&&!R(i,t.host_whitelist)||t.host_blacklist&&R(i,t.host_blacklist)))},isMACAddress:function(e){return f(e),t.test(e)},isIP:F,isFQDN:p,isBoolean:function(e){return f(e),0<=[\"true\",\"false\",\"1\",\"0\"].indexOf(e)},isAlpha:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"en-US\";if(f(e),t in o)return o[t].test(e);throw new Error(\"Invalid locale '\"+t+\"'\")},isAlphanumeric:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"en-US\";if(f(e),t in E)return E[t].test(e);throw new Error(\"Invalid locale '\"+t+\"'\")},isNumeric:function(e){return f(e),y.test(e)},isPort:function(e){return O(e,{min:0,max:65535})},isLowercase:function(e){return f(e),e===e.toLowerCase()},isUppercase:function(e){return f(e),e===e.toUpperCase()},isAscii:function(e){return f(e),U.test(e)},isFullWidth:function(e){return f(e),b.test(e)},isHalfWidth:function(e){return f(e),P.test(e)},isVariableWidth:function(e){return f(e),b.test(e)&&P.test(e)},isMultibyte:function(e){return f(e),K.test(e)},isSurrogatePair:function(e){return f(e),k.test(e)},isInt:O,isFloat:function(e,t){f(e),t=t||{};var r=new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\"+(t.locale?x[t.locale]:\".\")+\"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\");if(\"\"===e||\".\"===e||\"-\"===e||\"+\"===e)return!1;var o=parseFloat(e.replace(\",\",\".\"));return r.test(e)&&(!t.hasOwnProperty(\"min\")||o>=t.min)&&(!t.hasOwnProperty(\"max\")||o<=t.max)&&(!t.hasOwnProperty(\"lt\")||o<t.lt)&&(!t.hasOwnProperty(\"gt\")||o>t.gt)},isDecimal:function(e,t){if(f(e),(t=c(t,H)).locale in x)return!z.includes(e.replace(/ /g,\"\"))&&(r=t,new RegExp(\"^[-+]?([0-9]+)?(\\\\\"+x[r.locale]+\"[0-9]{\"+r.decimal_digits+\"})\"+(r.force_decimal?\"\":\"?\")+\"$\")).test(e);var r;throw new Error(\"Invalid locale '\"+t.locale+\"'\")},isHexadecimal:W,isDivisibleBy:function(e,t){return f(e),r(e)%parseInt(t,10)==0},isHexColor:function(e){return f(e),Y.test(e)},isISRC:function(e){return f(e),j.test(e)},isMD5:function(e){return f(e),J.test(e)},isHash:function(e,t){return f(e),new RegExp(\"^[a-f0-9]{\"+q[t]+\"}$\").test(e)},isJSON:function(e){f(e);try{var t=JSON.parse(e);return!!t&&\"object\"===(void 0===t?\"undefined\":a(t))}catch(e){}return!1},isEmpty:function(e){return f(e),0===e.length},isLength:function(e,t){f(e);var r=void 0,o=void 0;\"object\"===(void 0===t?\"undefined\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=e.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g)||[],n=e.length-i.length;return r<=n&&(void 0===o||n<=o)},isByteLength:d,isUUID:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"all\";f(e);var r=Q[t];return r&&r.test(e)},isMongoId:function(e){return f(e),W(e)&&24===e.length},isAfter:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&r<o)},isBefore:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&o<r)},isIn:function(e,t){f(e);var r=void 0;if(\"[object Array]\"===Object.prototype.toString.call(t)){var o=[];for(r in t)({}).hasOwnProperty.call(t,r)&&(o[r]=n(t[r]));return 0<=o.indexOf(e)}return\"object\"===(void 0===t?\"undefined\":a(t))?t.hasOwnProperty(e):!(!t||\"function\"!=typeof t.indexOf)&&0<=t.indexOf(e)},isCreditCard:function(e){f(e);var t=e.replace(/[- ]+/g,\"\");if(!X.test(t))return!1;for(var r=0,o=void 0,i=void 0,n=void 0,a=t.length-1;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i%10+1:i,n=!n;return!(r%10!=0||!t)},isISIN:function(e){if(f(e),!ee.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),r=0,o=void 0,i=void 0,n=!0,a=t.length-2;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i+1:i,n=!n;return parseInt(e.substr(e.length-1),10)===(1e4-r)%10},isISBN:function e(t){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"\";if(f(t),!(r=String(r)))return e(t,10)||e(t,13);var o=t.replace(/[\\s-]+/g,\"\"),i=0,n=void 0;if(\"10\"===r){if(!te.test(o))return!1;for(n=0;n<9;n++)i+=(n+1)*o.charAt(n);if(\"X\"===o.charAt(9)?i+=100:i+=10*o.charAt(9),i%11==0)return!!o}else if(\"13\"===r){if(!re.test(o))return!1;for(n=0;n<12;n++)i+=oe[n%2]*o.charAt(n);if(o.charAt(12)-(10-i%10)%10==0)return!!o}return!1},isISSN:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};f(e);var r=ie;if(r=t.require_hyphen?r.replace(\"?\",\"\"):r,!(r=t.case_sensitive?new RegExp(r):new RegExp(r,\"i\")).test(e))return!1;var o=e.replace(\"-\",\"\"),i=8,n=0,a=!0,l=!1,s=void 0;try{for(var u,d=o[Symbol.iterator]();!(a=(u=d.next()).done);a=!0){var c=u.value;n+=(\"X\"===c.toUpperCase()?10:+c)*i,--i}}catch(e){l=!0,s=e}finally{try{!a&&d.return&&d.return()}finally{if(l)throw s}}return n%11==0},isMobilePhone:function(e,t,r){if(f(e),r&&r.strictMode&&!e.startsWith(\"+\"))return!1;if(t in ne)return ne[t].test(e);if(\"any\"===t){for(var o in ne)if(ne.hasOwnProperty(o)&&ne[o].test(e))return!0;return!1}throw new Error(\"Invalid locale '\"+t+\"'\")},isPostalCode:function(e,t){if(f(e),t in Te)return Te[t].test(e);if(\"any\"===t){for(var r in Te)if(Te.hasOwnProperty(r)&&Te[r].test(e))return!0;return!1}throw new Error(\"Invalid locale '\"+t+\"'\")},isCurrency:function(e,t){return f(e),function(e){var r=\"\\\\d{\"+e.digits_after_decimal[0]+\"}\";e.digits_after_decimal.forEach(function(e,t){0!==t&&(r=r+\"|\\\\d{\"+e+\"}\")});var t=\"(\\\\\"+e.symbol.replace(/\\./g,\"\\\\.\")+\")\"+(e.require_symbol?\"\":\"?\"),o=\"(\"+[\"0\",\"[1-9]\\\\d*\",\"[1-9]\\\\d{0,2}(\\\\\"+e.thousands_separator+\"\\\\d{3})*\"].join(\"|\")+\")?\",i=\"(\\\\\"+e.decimal_separator+\"(\"+r+\"))\"+(e.require_decimal?\"\":\"?\"),n=o+(e.allow_decimal||e.require_decimal?i:\"\");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?n+=\"-?\":e.negative_sign_before_digits&&(n=\"-?\"+n)),e.allow_negative_sign_placeholder?n=\"( (?!\\\\-))?\"+n:e.allow_space_after_symbol?n=\" ?\"+n:e.allow_space_after_digits&&(n+=\"( (?!$))?\"),e.symbol_after_digits?n+=t:n=t+n,e.allow_negatives&&(e.parens_for_negatives?n=\"(\\\\(\"+n+\"\\\\)|\"+n+\")\":e.negative_sign_before_digits||e.negative_sign_after_digits||(n=\"-?\"+n)),new RegExp(\"^(?!-? )(?=.*\\\\d)\"+n+\"$\")}(t=c(t,ae)).test(e)},isISO8601:function(e){return f(e),le.test(e)},isRFC3339:function(e){return f(e),Ae.test(e)},isISO31661Alpha2:function(e){return f(e),he.includes(e.toUpperCase())},isISO31661Alpha3:function(e){return f(e),ve.includes(e.toUpperCase())},isBase64:function(e){f(e);var t=e.length;if(!t||t%4!=0||me.test(e))return!1;var r=e.indexOf(\"=\");return-1===r||r===t-1||r===t-2&&\"=\"===e[t-1]},isDataURI:function(e){f(e);var t=e.split(\",\");if(t.length<2)return!1;var r=t.shift().trim().split(\";\"),o=r.shift();if(\"data:\"!==o.substr(0,5))return!1;var i=o.substr(5);if(\"\"!==i&&!_e.test(i))return!1;for(var n=0;n<r.length;n++)if(n===r.length-1&&\"base64\"===r[n].toLowerCase());else if(!Fe.test(r[n]))return!1;for(var a=0;a<t.length;a++)if(!$e.test(t[a]))return!1;return!0},isMimeType:function(e){return f(e),Se.test(e)||Re.test(e)||Ee.test(e)},isLatLong:function(e){if(f(e),!e.includes(\",\"))return!1;var t=e.split(\",\");return xe.test(t[0])&&Me.test(t[1])},ltrim:Ze,rtrim:Be,trim:function(e,t){return Be(Ze(e,t),t)},escape:function(e){return f(e),e.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\\//g,\"&#x2F;\").replace(/\\\\/g,\"&#x5C;\").replace(/`/g,\"&#96;\")},unescape:function(e){return f(e),e.replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"').replace(/&#x27;/g,\"'\").replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\").replace(/&#x2F;/g,\"/\").replace(/&#x5C;/g,\"\\\\\").replace(/&#96;/g,\"`\")},stripLow:function(e,t){return f(e),Ie(e,t?\"\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F\":\"\\\\x00-\\\\x1F\\\\x7F\")},whitelist:function(e,t){return f(e),e.replace(new RegExp(\"[^\"+t+\"]+\",\"g\"),\"\")},blacklist:Ie,isWhitelisted:function(e,t){f(e);for(var r=e.length-1;0<=r;r--)if(-1===t.indexOf(e[r]))return!1;return!0},normalizeEmail:function(e,t){t=c(t,Le);var r=e.split(\"@\"),o=r.pop(),i=[r.join(\"@\"),o];if(i[1]=i[1].toLowerCase(),\"gmail.com\"===i[1]||\"googlemail.com\"===i[1]){if(t.gmail_remove_subaddress&&(i[0]=i[0].split(\"+\")[0]),t.gmail_remove_dots&&(i[0]=i[0].replace(/\\.+/g,Ue)),!i[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=t.gmail_convert_googlemaildotcom?\"gmail.com\":i[1]}else if(~ye.indexOf(i[1])){if(t.icloud_remove_subaddress&&(i[0]=i[0].split(\"+\")[0]),!i[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~Ge.indexOf(i[1])){if(t.outlookdotcom_remove_subaddress&&(i[0]=i[0].split(\"+\")[0]),!i[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~De.indexOf(i[1])){if(t.yahoo_remove_subaddress){var n=i[0].split(\"-\");i[0]=1<n.length?n.slice(0,-1).join(\"-\"):n[0]}if(!i[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(i[0]=i[0].toLowerCase())}else~Oe.indexOf(i[1])?((t.all_lowercase||t.yandex_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=\"yandex.ru\"):t.all_lowercase&&(i[0]=i[0].toLowerCase());return i.join(\"@\")},toString:n}});"
			},
			{
				"name": "rawinflate-rawdeflate.js",
				"source": "/*\n * $Id: rawinflate.js,v 0.3 2013/04/09 14:25:38 dankogai Exp dankogai $\n *\n * GNU General Public License, version 2 (GPL-2.0)\n *   http://opensource.org/licenses/GPL-2.0\n * original:\n *   http://www.onicos.com/staff/iz/amuse/javascript/expert/inflate.txt\n */\n\n(function(ctx){\n\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0.0.1\n * LastModified: Dec 25 1999\n */\n\n/* Interface:\n * data = zip_inflate(src);\n */\n\n/* constant parameters */\nvar zip_WSIZE = 32768;\t\t// Sliding Window size\nvar zip_STORED_BLOCK = 0;\nvar zip_STATIC_TREES = 1;\nvar zip_DYN_TREES    = 2;\n\n/* for inflate */\nvar zip_lbits = 9; \t\t// bits in base literal/length lookup table\nvar zip_dbits = 6; \t\t// bits in base distance lookup table\nvar zip_INBUFSIZ = 32768;\t// Input buffer size\nvar zip_INBUF_EXTRA = 64;\t// Extra buffer\n\n/* variables (inflate) */\nvar zip_slide;\nvar zip_wp;\t\t\t// current position in slide\nvar zip_fixed_tl = null;\t// inflate static\nvar zip_fixed_td;\t\t// inflate static\nvar zip_fixed_bl, zip_fixed_bd;\t// inflate static\nvar zip_bit_buf;\t\t// bit buffer\nvar zip_bit_len;\t\t// bits in bit buffer\nvar zip_method;\nvar zip_eof;\nvar zip_copy_leng;\nvar zip_copy_dist;\nvar zip_tl, zip_td;\t// literal/length and distance decoder tables\nvar zip_bl, zip_bd;\t// number of bits decoded by tl and td\n\nvar zip_inflate_data;\nvar zip_inflate_pos;\n\n\n/* constant tables (inflate) */\nvar zip_MASK_BITS = new Array(\n    0x0000,\n    0x0001, 0x0003, 0x0007, 0x000f, 0x001f, 0x003f, 0x007f, 0x00ff,\n    0x01ff, 0x03ff, 0x07ff, 0x0fff, 0x1fff, 0x3fff, 0x7fff, 0xffff);\n// Tables for deflate from PKZIP's appnote.txt.\nvar zip_cplens = new Array( // Copy lengths for literal codes 257..285\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n    35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0);\n/* note: see note #13 above about the 258 in this list. */\nvar zip_cplext = new Array( // Extra bits for literal codes 257..285\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n    3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99); // 99==invalid\nvar zip_cpdist = new Array( // Copy offsets for distance codes 0..29\n    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n    257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n    8193, 12289, 16385, 24577);\nvar zip_cpdext = new Array( // Extra bits for distance codes\n    0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n    7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n    12, 12, 13, 13);\nvar zip_border = new Array(  // Order of the bit length code lengths\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15);\n/* objects (inflate) */\n\nvar zip_HuftList = function() {\n    this.next = null;\n    this.list = null;\n}\n\nvar zip_HuftNode = function() {\n    this.e = 0; // number of extra bits or operation\n    this.b = 0; // number of bits in this code or subcode\n\n    // union\n    this.n = 0; // literal, length base, or distance base\n    this.t = null; // (zip_HuftNode) pointer to next level of table\n}\n\nvar zip_HuftBuild = function(b,\t// code lengths in bits (all assumed <= BMAX)\n\t\t       n,\t// number of codes (assumed <= N_MAX)\n\t\t       s,\t// number of simple-valued codes (0..s-1)\n\t\t       d,\t// list of base values for non-simple codes\n\t\t       e,\t// list of extra bits for non-simple codes\n\t\t       mm\t// maximum lookup bits\n\t\t   ) {\n    this.BMAX = 16;   // maximum bit length of any code\n    this.N_MAX = 288; // maximum number of codes in any set\n    this.status = 0;\t// 0: success, 1: incomplete table, 2: bad input\n    this.root = null;\t// (zip_HuftList) starting table\n    this.m = 0;\t\t// maximum lookup bits, returns actual\n\n/* Given a list of code lengths and a maximum table size, make a set of\n   tables to decode that set of codes.\tReturn zero on success, one if\n   the given code set is incomplete (the tables are still built in this\n   case), two if the input is invalid (all zero length codes or an\n   oversubscribed set of lengths), and three if not enough memory.\n   The code with value 256 is special, and the tables are constructed\n   so that no bits beyond that code are fetched when that code is\n   decoded. */\n    {\n\tvar a;\t\t\t// counter for codes of length k\n\tvar c = new Array(this.BMAX+1);\t// bit length count table\n\tvar el;\t\t\t// length of EOB code (value 256)\n\tvar f;\t\t\t// i repeats in table every f entries\n\tvar g;\t\t\t// maximum code length\n\tvar h;\t\t\t// table level\n\tvar i;\t\t\t// counter, current code\n\tvar j;\t\t\t// counter\n\tvar k;\t\t\t// number of bits in current code\n\tvar lx = new Array(this.BMAX+1);\t// stack of bits per table\n\tvar p;\t\t\t// pointer into c[], b[], or v[]\n\tvar pidx;\t\t// index of p\n\tvar q;\t\t\t// (zip_HuftNode) points to current table\n\tvar r = new zip_HuftNode(); // table entry for structure assignment\n\tvar u = new Array(this.BMAX); // zip_HuftNode[BMAX][]  table stack\n\tvar v = new Array(this.N_MAX); // values in order of bit length\n\tvar w;\n\tvar x = new Array(this.BMAX+1);// bit offsets, then code stack\n\tvar xp;\t\t\t// pointer into x or c\n\tvar y;\t\t\t// number of dummy codes added\n\tvar z;\t\t\t// number of entries in current table\n\tvar o;\n\tvar tail;\t\t// (zip_HuftList)\n\n\ttail = this.root = null;\n\tfor(i = 0; i < c.length; i++)\n\t    c[i] = 0;\n\tfor(i = 0; i < lx.length; i++)\n\t    lx[i] = 0;\n\tfor(i = 0; i < u.length; i++)\n\t    u[i] = null;\n\tfor(i = 0; i < v.length; i++)\n\t    v[i] = 0;\n\tfor(i = 0; i < x.length; i++)\n\t    x[i] = 0;\n\n\t// Generate counts for each bit length\n\tel = n > 256 ? b[256] : this.BMAX; // set length of EOB code, if any\n\tp = b; pidx = 0;\n\ti = n;\n\tdo {\n\t    c[p[pidx]]++;\t// assume all entries <= BMAX\n\t    pidx++;\n\t} while(--i > 0);\n\tif(c[0] == n) {\t// null input--all zero length codes\n\t    this.root = null;\n\t    this.m = 0;\n\t    this.status = 0;\n\t    return;\n\t}\n\n\t// Find minimum and maximum length, bound *m by those\n\tfor(j = 1; j <= this.BMAX; j++)\n\t    if(c[j] != 0)\n\t\tbreak;\n\tk = j;\t\t\t// minimum code length\n\tif(mm < j)\n\t    mm = j;\n\tfor(i = this.BMAX; i != 0; i--)\n\t    if(c[i] != 0)\n\t\tbreak;\n\tg = i;\t\t\t// maximum code length\n\tif(mm > i)\n\t    mm = i;\n\n\t// Adjust last length count to fill out codes, if needed\n\tfor(y = 1 << j; j < i; j++, y <<= 1)\n\t    if((y -= c[j]) < 0) {\n\t\tthis.status = 2;\t// bad input: more codes than bits\n\t\tthis.m = mm;\n\t\treturn;\n\t    }\n\tif((y -= c[i]) < 0) {\n\t    this.status = 2;\n\t    this.m = mm;\n\t    return;\n\t}\n\tc[i] += y;\n\n\t// Generate starting offsets into the value table for each length\n\tx[1] = j = 0;\n\tp = c;\n\tpidx = 1;\n\txp = 2;\n\twhile(--i > 0)\t\t// note that i == g from above\n\t    x[xp++] = (j += p[pidx++]);\n\n\t// Make a table of values in order of bit lengths\n\tp = b; pidx = 0;\n\ti = 0;\n\tdo {\n\t    if((j = p[pidx++]) != 0)\n\t\tv[x[j]++] = i;\n\t} while(++i < n);\n\tn = x[g];\t\t\t// set n to length of v\n\n\t// Generate the Huffman codes and for each, make the table entries\n\tx[0] = i = 0;\t\t// first Huffman code is zero\n\tp = v; pidx = 0;\t\t// grab values in bit order\n\th = -1;\t\t\t// no tables yet--level -1\n\tw = lx[0] = 0;\t\t// no bits decoded yet\n\tq = null;\t\t\t// ditto\n\tz = 0;\t\t\t// ditto\n\n\t// go through the bit lengths (k already is bits in shortest code)\n\tfor(; k <= g; k++) {\n\t    a = c[k];\n\t    while(a-- > 0) {\n\t\t// here i is the Huffman code of length k bits for value p[pidx]\n\t\t// make tables up to required level\n\t\twhile(k > w + lx[1 + h]) {\n\t\t    w += lx[1 + h]; // add bits already decoded\n\t\t    h++;\n\n\t\t    // compute minimum size table less than or equal to *m bits\n\t\t    z = (z = g - w) > mm ? mm : z; // upper limit\n\t\t    if((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n\t\t\t// too few codes for k-w bit table\n\t\t\tf -= a + 1;\t// deduct codes from patterns left\n\t\t\txp = k;\n\t\t\twhile(++j < z) { // try smaller tables up to z bits\n\t\t\t    if((f <<= 1) <= c[++xp])\n\t\t\t\tbreak;\t// enough codes to use up j bits\n\t\t\t    f -= c[xp];\t// else deduct codes from patterns\n\t\t\t}\n\t\t    }\n\t\t    if(w + j > el && w < el)\n\t\t\tj = el - w;\t// make EOB code end at table\n\t\t    z = 1 << j;\t// table entries for j-bit table\n\t\t    lx[1 + h] = j; // set table size in stack\n\n\t\t    // allocate and link in new table\n\t\t    q = new Array(z);\n\t\t    for(o = 0; o < z; o++) {\n\t\t\tq[o] = new zip_HuftNode();\n\t\t    }\n\n\t\t    if(tail == null)\n\t\t\ttail = this.root = new zip_HuftList();\n\t\t    else\n\t\t\ttail = tail.next = new zip_HuftList();\n\t\t    tail.next = null;\n\t\t    tail.list = q;\n\t\t    u[h] = q;\t// table starts after link\n\n\t\t    /* connect to last table, if there is one */\n\t\t    if(h > 0) {\n\t\t\tx[h] = i;\t\t// save pattern for backing up\n\t\t\tr.b = lx[h];\t// bits to dump before this table\n\t\t\tr.e = 16 + j;\t// bits in this table\n\t\t\tr.t = q;\t\t// pointer to this table\n\t\t\tj = (i & ((1 << w) - 1)) >> (w - lx[h]);\n\t\t\tu[h-1][j].e = r.e;\n\t\t\tu[h-1][j].b = r.b;\n\t\t\tu[h-1][j].n = r.n;\n\t\t\tu[h-1][j].t = r.t;\n\t\t    }\n\t\t}\n\n\t\t// set up table entry in r\n\t\tr.b = k - w;\n\t\tif(pidx >= n)\n\t\t    r.e = 99;\t\t// out of values--invalid code\n\t\telse if(p[pidx] < s) {\n\t\t    r.e = (p[pidx] < 256 ? 16 : 15); // 256 is end-of-block code\n\t\t    r.n = p[pidx++];\t// simple code is just the value\n\t\t} else {\n\t\t    r.e = e[p[pidx] - s];\t// non-simple--look up in lists\n\t\t    r.n = d[p[pidx++] - s];\n\t\t}\n\n\t\t// fill code-like entries with r //\n\t\tf = 1 << (k - w);\n\t\tfor(j = i >> w; j < z; j += f) {\n\t\t    q[j].e = r.e;\n\t\t    q[j].b = r.b;\n\t\t    q[j].n = r.n;\n\t\t    q[j].t = r.t;\n\t\t}\n\n\t\t// backwards increment the k-bit code i\n\t\tfor(j = 1 << (k - 1); (i & j) != 0; j >>= 1)\n\t\t    i ^= j;\n\t\ti ^= j;\n\n\t\t// backup over finished tables\n\t\twhile((i & ((1 << w) - 1)) != x[h]) {\n\t\t    w -= lx[h];\t\t// don't need to update q\n\t\t    h--;\n\t\t}\n\t    }\n\t}\n\n\t/* return actual size of base table */\n\tthis.m = lx[1];\n\n\t/* Return true (1) if we were given an incomplete table */\n\tthis.status = ((y != 0 && g != 1) ? 1 : 0);\n    } /* end of constructor */\n}\n\n\n/* routines (inflate) */\n\nvar zip_GET_BYTE = function() {\n    if(zip_inflate_data.length == zip_inflate_pos)\n\treturn -1;\n    return zip_inflate_data.charCodeAt(zip_inflate_pos++) & 0xff;\n}\n\nvar zip_NEEDBITS = function(n) {\n    while(zip_bit_len < n) {\n\tzip_bit_buf |= zip_GET_BYTE() << zip_bit_len;\n\tzip_bit_len += 8;\n    }\n}\n\nvar zip_GETBITS = function(n) {\n    return zip_bit_buf & zip_MASK_BITS[n];\n}\n\nvar zip_DUMPBITS = function(n) {\n    zip_bit_buf >>= n;\n    zip_bit_len -= n;\n}\n\nvar zip_inflate_codes = function(buff, off, size) {\n    /* inflate (decompress) the codes in a deflated (compressed) block.\n       Return an error code or zero if it all goes ok. */\n    var e;\t\t// table entry flag/number of extra bits\n    var t;\t\t// (zip_HuftNode) pointer to table entry\n    var n;\n\n    if(size == 0)\n      return 0;\n\n    // inflate the coded data\n    n = 0;\n    for(;;) {\t\t\t// do until end of block\n\tzip_NEEDBITS(zip_bl);\n\tt = zip_tl.list[zip_GETBITS(zip_bl)];\n\te = t.e;\n\twhile(e > 16) {\n\t    if(e == 99)\n\t\treturn -1;\n\t    zip_DUMPBITS(t.b);\n\t    e -= 16;\n\t    zip_NEEDBITS(e);\n\t    t = t.t[zip_GETBITS(e)];\n\t    e = t.e;\n\t}\n\tzip_DUMPBITS(t.b);\n\n\tif(e == 16) {\t\t// then it's a literal\n\t    zip_wp &= zip_WSIZE - 1;\n\t    buff[off + n++] = zip_slide[zip_wp++] = t.n;\n\t    if(n == size)\n\t\treturn size;\n\t    continue;\n\t}\n\n\t// exit if end of block\n\tif(e == 15)\n\t    break;\n\n\t// it's an EOB or a length\n\n\t// get length of block to copy\n\tzip_NEEDBITS(e);\n\tzip_copy_leng = t.n + zip_GETBITS(e);\n\tzip_DUMPBITS(e);\n\n\t// decode distance of block to copy\n\tzip_NEEDBITS(zip_bd);\n\tt = zip_td.list[zip_GETBITS(zip_bd)];\n\te = t.e;\n\n\twhile(e > 16) {\n\t    if(e == 99)\n\t\treturn -1;\n\t    zip_DUMPBITS(t.b);\n\t    e -= 16;\n\t    zip_NEEDBITS(e);\n\t    t = t.t[zip_GETBITS(e)];\n\t    e = t.e;\n\t}\n\tzip_DUMPBITS(t.b);\n\tzip_NEEDBITS(e);\n\tzip_copy_dist = zip_wp - t.n - zip_GETBITS(e);\n\tzip_DUMPBITS(e);\n\n\t// do the copy\n\twhile(zip_copy_leng > 0 && n < size) {\n\t    zip_copy_leng--;\n\t    zip_copy_dist &= zip_WSIZE - 1;\n\t    zip_wp &= zip_WSIZE - 1;\n\t    buff[off + n++] = zip_slide[zip_wp++]\n\t\t= zip_slide[zip_copy_dist++];\n\t}\n\n\tif(n == size)\n\t    return size;\n    }\n\n    zip_method = -1; // done\n    return n;\n}\n\nvar zip_inflate_stored = function(buff, off, size) {\n    /* \"decompress\" an inflated type 0 (stored) block. */\n    var n;\n\n    // go to byte boundary\n    n = zip_bit_len & 7;\n    zip_DUMPBITS(n);\n\n    // get the length and its complement\n    zip_NEEDBITS(16);\n    n = zip_GETBITS(16);\n    zip_DUMPBITS(16);\n    zip_NEEDBITS(16);\n    if(n != ((~zip_bit_buf) & 0xffff))\n\treturn -1;\t\t\t// error in compressed data\n    zip_DUMPBITS(16);\n\n    // read and output the compressed data\n    zip_copy_leng = n;\n\n    n = 0;\n    while(zip_copy_leng > 0 && n < size) {\n\tzip_copy_leng--;\n\tzip_wp &= zip_WSIZE - 1;\n\tzip_NEEDBITS(8);\n\tbuff[off + n++] = zip_slide[zip_wp++] =\n\t    zip_GETBITS(8);\n\tzip_DUMPBITS(8);\n    }\n\n    if(zip_copy_leng == 0)\n      zip_method = -1; // done\n    return n;\n}\n\nvar zip_inflate_fixed = function(buff, off, size) {\n    /* decompress an inflated type 1 (fixed Huffman codes) block.  We should\n       either replace this with a custom decoder, or at least precompute the\n       Huffman tables. */\n\n    // if first time, set up tables for fixed blocks\n    if(zip_fixed_tl == null) {\n\tvar i;\t\t\t// temporary variable\n\tvar l = new Array(288);\t// length list for huft_build\n\tvar h;\t// zip_HuftBuild\n\n\t// literal table\n\tfor(i = 0; i < 144; i++)\n\t    l[i] = 8;\n\tfor(; i < 256; i++)\n\t    l[i] = 9;\n\tfor(; i < 280; i++)\n\t    l[i] = 7;\n\tfor(; i < 288; i++)\t// make a complete, but wrong code set\n\t    l[i] = 8;\n\tzip_fixed_bl = 7;\n\n\th = new zip_HuftBuild(l, 288, 257, zip_cplens, zip_cplext,\n\t\t\t      zip_fixed_bl);\n\tif(h.status != 0) {\n\t    alert(\"HufBuild error: \"+h.status);\n\t    return -1;\n\t}\n\tzip_fixed_tl = h.root;\n\tzip_fixed_bl = h.m;\n\n\t// distance table\n\tfor(i = 0; i < 30; i++)\t// make an incomplete code set\n\t    l[i] = 5;\n\tzip_fixed_bd = 5;\n\n\th = new zip_HuftBuild(l, 30, 0, zip_cpdist, zip_cpdext, zip_fixed_bd);\n\tif(h.status > 1) {\n\t    zip_fixed_tl = null;\n\t    alert(\"HufBuild error: \"+h.status);\n\t    return -1;\n\t}\n\tzip_fixed_td = h.root;\n\tzip_fixed_bd = h.m;\n    }\n\n    zip_tl = zip_fixed_tl;\n    zip_td = zip_fixed_td;\n    zip_bl = zip_fixed_bl;\n    zip_bd = zip_fixed_bd;\n    return zip_inflate_codes(buff, off, size);\n}\n\nvar zip_inflate_dynamic = function(buff, off, size) {\n    // decompress an inflated type 2 (dynamic Huffman codes) block.\n    var i;\t\t// temporary variables\n    var j;\n    var l;\t\t// last length\n    var n;\t\t// number of lengths to get\n    var t;\t\t// (zip_HuftNode) literal/length code table\n    var nb;\t\t// number of bit length codes\n    var nl;\t\t// number of literal/length codes\n    var nd;\t\t// number of distance codes\n    var ll = new Array(286+30); // literal/length and distance code lengths\n    var h;\t\t// (zip_HuftBuild)\n\n    for(i = 0; i < ll.length; i++)\n\tll[i] = 0;\n\n    // read in table lengths\n    zip_NEEDBITS(5);\n    nl = 257 + zip_GETBITS(5);\t// number of literal/length codes\n    zip_DUMPBITS(5);\n    zip_NEEDBITS(5);\n    nd = 1 + zip_GETBITS(5);\t// number of distance codes\n    zip_DUMPBITS(5);\n    zip_NEEDBITS(4);\n    nb = 4 + zip_GETBITS(4);\t// number of bit length codes\n    zip_DUMPBITS(4);\n    if(nl > 286 || nd > 30)\n      return -1;\t\t// bad lengths\n\n    // read in bit-length-code lengths\n    for(j = 0; j < nb; j++)\n    {\n\tzip_NEEDBITS(3);\n\tll[zip_border[j]] = zip_GETBITS(3);\n\tzip_DUMPBITS(3);\n    }\n    for(; j < 19; j++)\n\tll[zip_border[j]] = 0;\n\n    // build decoding table for trees--single level, 7 bit lookup\n    zip_bl = 7;\n    h = new zip_HuftBuild(ll, 19, 19, null, null, zip_bl);\n    if(h.status != 0)\n\treturn -1;\t// incomplete code set\n\n    zip_tl = h.root;\n    zip_bl = h.m;\n\n    // read in literal and distance code lengths\n    n = nl + nd;\n    i = l = 0;\n    while(i < n) {\n\tzip_NEEDBITS(zip_bl);\n\tt = zip_tl.list[zip_GETBITS(zip_bl)];\n\tj = t.b;\n\tzip_DUMPBITS(j);\n\tj = t.n;\n\tif(j < 16)\t\t// length of code in bits (0..15)\n\t    ll[i++] = l = j;\t// save last length in l\n\telse if(j == 16) {\t// repeat last length 3 to 6 times\n\t    zip_NEEDBITS(2);\n\t    j = 3 + zip_GETBITS(2);\n\t    zip_DUMPBITS(2);\n\t    if(i + j > n)\n\t\treturn -1;\n\t    while(j-- > 0)\n\t\tll[i++] = l;\n\t} else if(j == 17) {\t// 3 to 10 zero length codes\n\t    zip_NEEDBITS(3);\n\t    j = 3 + zip_GETBITS(3);\n\t    zip_DUMPBITS(3);\n\t    if(i + j > n)\n\t\treturn -1;\n\t    while(j-- > 0)\n\t\tll[i++] = 0;\n\t    l = 0;\n\t} else {\t\t// j == 18: 11 to 138 zero length codes\n\t    zip_NEEDBITS(7);\n\t    j = 11 + zip_GETBITS(7);\n\t    zip_DUMPBITS(7);\n\t    if(i + j > n)\n\t\treturn -1;\n\t    while(j-- > 0)\n\t\tll[i++] = 0;\n\t    l = 0;\n\t}\n    }\n\n    // build the decoding tables for literal/length and distance codes\n    zip_bl = zip_lbits;\n    h = new zip_HuftBuild(ll, nl, 257, zip_cplens, zip_cplext, zip_bl);\n    if(zip_bl == 0)\t// no literals or lengths\n\th.status = 1;\n    if(h.status != 0) {\n\tif(h.status == 1)\n\t    ;// **incomplete literal tree**\n\treturn -1;\t\t// incomplete code set\n    }\n    zip_tl = h.root;\n    zip_bl = h.m;\n\n    for(i = 0; i < nd; i++)\n\tll[i] = ll[i + nl];\n    zip_bd = zip_dbits;\n    h = new zip_HuftBuild(ll, nd, 0, zip_cpdist, zip_cpdext, zip_bd);\n    zip_td = h.root;\n    zip_bd = h.m;\n\n    if(zip_bd == 0 && nl > 257) {   // lengths but no distances\n\t// **incomplete distance tree**\n\treturn -1;\n    }\n\n    if(h.status == 1) {\n\t;// **incomplete distance tree**\n    }\n    if(h.status != 0)\n\treturn -1;\n\n    // decompress until an end-of-block code\n    return zip_inflate_codes(buff, off, size);\n}\n\nvar zip_inflate_start = function() {\n    var i;\n\n    if(zip_slide == null)\n\tzip_slide = new Array(2 * zip_WSIZE);\n    zip_wp = 0;\n    zip_bit_buf = 0;\n    zip_bit_len = 0;\n    zip_method = -1;\n    zip_eof = false;\n    zip_copy_leng = zip_copy_dist = 0;\n    zip_tl = null;\n}\n\nvar zip_inflate_internal = function(buff, off, size) {\n    // decompress an inflated entry\n    var n, i;\n\n    n = 0;\n    while(n < size) {\n\tif(zip_eof && zip_method == -1)\n\t    return n;\n\n\tif(zip_copy_leng > 0) {\n\t    if(zip_method != zip_STORED_BLOCK) {\n\t\t// STATIC_TREES or DYN_TREES\n\t\twhile(zip_copy_leng > 0 && n < size) {\n\t\t    zip_copy_leng--;\n\t\t    zip_copy_dist &= zip_WSIZE - 1;\n\t\t    zip_wp &= zip_WSIZE - 1;\n\t\t    buff[off + n++] = zip_slide[zip_wp++] =\n\t\t\tzip_slide[zip_copy_dist++];\n\t\t}\n\t    } else {\n\t\twhile(zip_copy_leng > 0 && n < size) {\n\t\t    zip_copy_leng--;\n\t\t    zip_wp &= zip_WSIZE - 1;\n\t\t    zip_NEEDBITS(8);\n\t\t    buff[off + n++] = zip_slide[zip_wp++] = zip_GETBITS(8);\n\t\t    zip_DUMPBITS(8);\n\t\t}\n\t\tif(zip_copy_leng == 0)\n\t\t    zip_method = -1; // done\n\t    }\n\t    if(n == size)\n\t\treturn n;\n\t}\n\n\tif(zip_method == -1) {\n\t    if(zip_eof)\n\t\tbreak;\n\n\t    // read in last block bit\n\t    zip_NEEDBITS(1);\n\t    if(zip_GETBITS(1) != 0)\n\t\tzip_eof = true;\n\t    zip_DUMPBITS(1);\n\n\t    // read in block type\n\t    zip_NEEDBITS(2);\n\t    zip_method = zip_GETBITS(2);\n\t    zip_DUMPBITS(2);\n\t    zip_tl = null;\n\t    zip_copy_leng = 0;\n\t}\n\n\tswitch(zip_method) {\n\t  case 0: // zip_STORED_BLOCK\n\t    i = zip_inflate_stored(buff, off + n, size - n);\n\t    break;\n\n\t  case 1: // zip_STATIC_TREES\n\t    if(zip_tl != null)\n\t\ti = zip_inflate_codes(buff, off + n, size - n);\n\t    else\n\t\ti = zip_inflate_fixed(buff, off + n, size - n);\n\t    break;\n\n\t  case 2: // zip_DYN_TREES\n\t    if(zip_tl != null)\n\t\ti = zip_inflate_codes(buff, off + n, size - n);\n\t    else\n\t\ti = zip_inflate_dynamic(buff, off + n, size - n);\n\t    break;\n\n\t  default: // error\n\t    i = -1;\n\t    break;\n\t}\n\n\tif(i == -1) {\n\t    if(zip_eof)\n\t\treturn 0;\n\t    return -1;\n\t}\n\tn += i;\n    }\n    return n;\n}\n\nvar zip_inflate = function(str) {\n    var i, j;\n\n    zip_inflate_start();\n    zip_inflate_data = str;\n    zip_inflate_pos = 0;\n\n    var buff = new Array(1024);\n    var aout = [];\n    while((i = zip_inflate_internal(buff, 0, buff.length)) > 0) {\n\tvar cbuf = new Array(i);\n\tfor(j = 0; j < i; j++){\n\t    cbuf[j] = String.fromCharCode(buff[j]);\n\t}\n\taout[aout.length] = cbuf.join(\"\");\n    }\n    zip_inflate_data = null; // G.C.\n    return aout.join(\"\");\n}\n\nif (! ctx.RawDeflate) ctx.RawDeflate = {};\nctx.RawDeflate.inflate = zip_inflate;\n\n})(this);\n\n/*\n * $Id: rawdeflate.js,v 0.5 2013/04/09 14:25:38 dankogai Exp dankogai $\n *\n * GNU General Public License, version 2 (GPL-2.0)\n *   http://opensource.org/licenses/GPL-2.0\n * Original:\n *  http://www.onicos.com/staff/iz/amuse/javascript/expert/deflate.txt\n */\n\n(function(ctx){\n\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0.1\n * LastModified: Dec 25 1999\n */\n\n/* Interface:\n * data = zip_deflate(src);\n */\n\n/* constant parameters */\nvar zip_WSIZE = 32768;\t\t// Sliding Window size\nvar zip_STORED_BLOCK = 0;\nvar zip_STATIC_TREES = 1;\nvar zip_DYN_TREES    = 2;\n\n/* for deflate */\nvar zip_DEFAULT_LEVEL = 6;\nvar zip_FULL_SEARCH = true;\nvar zip_INBUFSIZ = 32768;\t// Input buffer size\nvar zip_INBUF_EXTRA = 64;\t// Extra buffer\nvar zip_OUTBUFSIZ = 1024 * 8;\nvar zip_window_size = 2 * zip_WSIZE;\nvar zip_MIN_MATCH = 3;\nvar zip_MAX_MATCH = 258;\nvar zip_BITS = 16;\n// for SMALL_MEM\nvar zip_LIT_BUFSIZE = 0x2000;\nvar zip_HASH_BITS = 13;\n// for MEDIUM_MEM\n// var zip_LIT_BUFSIZE = 0x4000;\n// var zip_HASH_BITS = 14;\n// for BIG_MEM\n// var zip_LIT_BUFSIZE = 0x8000;\n// var zip_HASH_BITS = 15;\nif(zip_LIT_BUFSIZE > zip_INBUFSIZ)\n    alert(\"error: zip_INBUFSIZ is too small\");\nif((zip_WSIZE<<1) > (1<<zip_BITS))\n    alert(\"error: zip_WSIZE is too large\");\nif(zip_HASH_BITS > zip_BITS-1)\n    alert(\"error: zip_HASH_BITS is too large\");\nif(zip_HASH_BITS < 8 || zip_MAX_MATCH != 258)\n    alert(\"error: Code too clever\");\nvar zip_DIST_BUFSIZE = zip_LIT_BUFSIZE;\nvar zip_HASH_SIZE = 1 << zip_HASH_BITS;\nvar zip_HASH_MASK = zip_HASH_SIZE - 1;\nvar zip_WMASK = zip_WSIZE - 1;\nvar zip_NIL = 0; // Tail of hash chains\nvar zip_TOO_FAR = 4096;\nvar zip_MIN_LOOKAHEAD = zip_MAX_MATCH + zip_MIN_MATCH + 1;\nvar zip_MAX_DIST = zip_WSIZE - zip_MIN_LOOKAHEAD;\nvar zip_SMALLEST = 1;\nvar zip_MAX_BITS = 15;\nvar zip_MAX_BL_BITS = 7;\nvar zip_LENGTH_CODES = 29;\nvar zip_LITERALS =256;\nvar zip_END_BLOCK = 256;\nvar zip_L_CODES = zip_LITERALS + 1 + zip_LENGTH_CODES;\nvar zip_D_CODES = 30;\nvar zip_BL_CODES = 19;\nvar zip_REP_3_6 = 16;\nvar zip_REPZ_3_10 = 17;\nvar zip_REPZ_11_138 = 18;\nvar zip_HEAP_SIZE = 2 * zip_L_CODES + 1;\nvar zip_H_SHIFT = parseInt((zip_HASH_BITS + zip_MIN_MATCH - 1) /\n\t\t\t   zip_MIN_MATCH);\n\n/* variables */\nvar zip_free_queue;\nvar zip_qhead, zip_qtail;\nvar zip_initflag;\nvar zip_outbuf = null;\nvar zip_outcnt, zip_outoff;\nvar zip_complete;\nvar zip_window;\nvar zip_d_buf;\nvar zip_l_buf;\nvar zip_prev;\nvar zip_bi_buf;\nvar zip_bi_valid;\nvar zip_block_start;\nvar zip_ins_h;\nvar zip_hash_head;\nvar zip_prev_match;\nvar zip_match_available;\nvar zip_match_length;\nvar zip_prev_length;\nvar zip_strstart;\nvar zip_match_start;\nvar zip_eofile;\nvar zip_lookahead;\nvar zip_max_chain_length;\nvar zip_max_lazy_match;\nvar zip_compr_level;\nvar zip_good_match;\nvar zip_nice_match;\nvar zip_dyn_ltree;\nvar zip_dyn_dtree;\nvar zip_static_ltree;\nvar zip_static_dtree;\nvar zip_bl_tree;\nvar zip_l_desc;\nvar zip_d_desc;\nvar zip_bl_desc;\nvar zip_bl_count;\nvar zip_heap;\nvar zip_heap_len;\nvar zip_heap_max;\nvar zip_depth;\nvar zip_length_code;\nvar zip_dist_code;\nvar zip_base_length;\nvar zip_base_dist;\nvar zip_flag_buf;\nvar zip_last_lit;\nvar zip_last_dist;\nvar zip_last_flags;\nvar zip_flags;\nvar zip_flag_bit;\nvar zip_opt_len;\nvar zip_static_len;\nvar zip_deflate_data;\nvar zip_deflate_pos;\n\n/* objects (deflate) */\n\nvar zip_DeflateCT = function() {\n    this.fc = 0; // frequency count or bit string\n    this.dl = 0; // father node in Huffman tree or length of bit string\n}\n\nvar zip_DeflateTreeDesc = function() {\n    this.dyn_tree = null;\t// the dynamic tree\n    this.static_tree = null;\t// corresponding static tree or NULL\n    this.extra_bits = null;\t// extra bits for each code or NULL\n    this.extra_base = 0;\t// base index for extra_bits\n    this.elems = 0;\t\t// max number of elements in the tree\n    this.max_length = 0;\t// max bit length for the codes\n    this.max_code = 0;\t\t// largest code with non zero frequency\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nvar zip_DeflateConfiguration = function(a, b, c, d) {\n    this.good_length = a; // reduce lazy search above this match length\n    this.max_lazy = b;    // do not perform lazy search above this match length\n    this.nice_length = c; // quit search above this match length\n    this.max_chain = d;\n}\n\nvar zip_DeflateBuffer = function() {\n    this.next = null;\n    this.len = 0;\n    this.ptr = new Array(zip_OUTBUFSIZ);\n    this.off = 0;\n}\n\n/* constant tables */\nvar zip_extra_lbits = new Array(\n    0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0);\nvar zip_extra_dbits = new Array(\n    0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13);\nvar zip_extra_blbits = new Array(\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7);\nvar zip_bl_order = new Array(\n    16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15);\nvar zip_configuration_table = new Array(\n\tnew zip_DeflateConfiguration(0,    0,   0,    0),\n\tnew zip_DeflateConfiguration(4,    4,   8,    4),\n\tnew zip_DeflateConfiguration(4,    5,  16,    8),\n\tnew zip_DeflateConfiguration(4,    6,  32,   32),\n\tnew zip_DeflateConfiguration(4,    4,  16,   16),\n\tnew zip_DeflateConfiguration(8,   16,  32,   32),\n\tnew zip_DeflateConfiguration(8,   16, 128,  128),\n\tnew zip_DeflateConfiguration(8,   32, 128,  256),\n\tnew zip_DeflateConfiguration(32, 128, 258, 1024),\n\tnew zip_DeflateConfiguration(32, 258, 258, 4096));\n\n\n/* routines (deflate) */\n\nvar zip_deflate_start = function(level) {\n    var i;\n\n    if(!level)\n\tlevel = zip_DEFAULT_LEVEL;\n    else if(level < 1)\n\tlevel = 1;\n    else if(level > 9)\n\tlevel = 9;\n\n    zip_compr_level = level;\n    zip_initflag = false;\n    zip_eofile = false;\n    if(zip_outbuf != null)\n\treturn;\n\n    zip_free_queue = zip_qhead = zip_qtail = null;\n    zip_outbuf = new Array(zip_OUTBUFSIZ);\n    zip_window = new Array(zip_window_size);\n    zip_d_buf = new Array(zip_DIST_BUFSIZE);\n    zip_l_buf = new Array(zip_INBUFSIZ + zip_INBUF_EXTRA);\n    zip_prev = new Array(1 << zip_BITS);\n    zip_dyn_ltree = new Array(zip_HEAP_SIZE);\n    for(i = 0; i < zip_HEAP_SIZE; i++)\n\tzip_dyn_ltree[i] = new zip_DeflateCT();\n    zip_dyn_dtree = new Array(2*zip_D_CODES+1);\n    for(i = 0; i < 2*zip_D_CODES+1; i++)\n\tzip_dyn_dtree[i] = new zip_DeflateCT();\n    zip_static_ltree = new Array(zip_L_CODES+2);\n    for(i = 0; i < zip_L_CODES+2; i++)\n\tzip_static_ltree[i] = new zip_DeflateCT();\n    zip_static_dtree = new Array(zip_D_CODES);\n    for(i = 0; i < zip_D_CODES; i++)\n\tzip_static_dtree[i] = new zip_DeflateCT();\n    zip_bl_tree = new Array(2*zip_BL_CODES+1);\n    for(i = 0; i < 2*zip_BL_CODES+1; i++)\n\tzip_bl_tree[i] = new zip_DeflateCT();\n    zip_l_desc = new zip_DeflateTreeDesc();\n    zip_d_desc = new zip_DeflateTreeDesc();\n    zip_bl_desc = new zip_DeflateTreeDesc();\n    zip_bl_count = new Array(zip_MAX_BITS+1);\n    zip_heap = new Array(2*zip_L_CODES+1);\n    zip_depth = new Array(2*zip_L_CODES+1);\n    zip_length_code = new Array(zip_MAX_MATCH-zip_MIN_MATCH+1);\n    zip_dist_code = new Array(512);\n    zip_base_length = new Array(zip_LENGTH_CODES);\n    zip_base_dist = new Array(zip_D_CODES);\n    zip_flag_buf = new Array(parseInt(zip_LIT_BUFSIZE / 8));\n}\n\nvar zip_deflate_end = function() {\n    zip_free_queue = zip_qhead = zip_qtail = null;\n    zip_outbuf = null;\n    zip_window = null;\n    zip_d_buf = null;\n    zip_l_buf = null;\n    zip_prev = null;\n    zip_dyn_ltree = null;\n    zip_dyn_dtree = null;\n    zip_static_ltree = null;\n    zip_static_dtree = null;\n    zip_bl_tree = null;\n    zip_l_desc = null;\n    zip_d_desc = null;\n    zip_bl_desc = null;\n    zip_bl_count = null;\n    zip_heap = null;\n    zip_depth = null;\n    zip_length_code = null;\n    zip_dist_code = null;\n    zip_base_length = null;\n    zip_base_dist = null;\n    zip_flag_buf = null;\n}\n\nvar zip_reuse_queue = function(p) {\n    p.next = zip_free_queue;\n    zip_free_queue = p;\n}\n\nvar zip_new_queue = function() {\n    var p;\n\n    if(zip_free_queue != null)\n    {\n\tp = zip_free_queue;\n\tzip_free_queue = zip_free_queue.next;\n    }\n    else\n\tp = new zip_DeflateBuffer();\n    p.next = null;\n    p.len = p.off = 0;\n\n    return p;\n}\n\nvar zip_head1 = function(i) {\n    return zip_prev[zip_WSIZE + i];\n}\n\nvar zip_head2 = function(i, val) {\n    return zip_prev[zip_WSIZE + i] = val;\n}\n\n/* put_byte is used for the compressed output, put_ubyte for the\n * uncompressed output. However unlzw() uses window for its\n * suffix table instead of its output buffer, so it does not use put_ubyte\n * (to be cleaned up).\n */\nvar zip_put_byte = function(c) {\n    zip_outbuf[zip_outoff + zip_outcnt++] = c;\n    if(zip_outoff + zip_outcnt == zip_OUTBUFSIZ)\n\tzip_qoutbuf();\n}\n\n/* Output a 16 bit value, lsb first */\nvar zip_put_short = function(w) {\n    w &= 0xffff;\n    if(zip_outoff + zip_outcnt < zip_OUTBUFSIZ - 2) {\n\tzip_outbuf[zip_outoff + zip_outcnt++] = (w & 0xff);\n\tzip_outbuf[zip_outoff + zip_outcnt++] = (w >>> 8);\n    } else {\n\tzip_put_byte(w & 0xff);\n\tzip_put_byte(w >>> 8);\n    }\n}\n\n/* ==========================================================================\n * Insert string s in the dictionary and set match_head to the previous head\n * of the hash chain (the most recent string with same hash key). Return\n * the previous length of the hash chain.\n * IN  assertion: all calls to to INSERT_STRING are made with consecutive\n *    input characters and the first MIN_MATCH bytes of s are valid\n *    (except for the last MIN_MATCH-1 bytes of the input file).\n */\nvar zip_INSERT_STRING = function() {\n    zip_ins_h = ((zip_ins_h << zip_H_SHIFT)\n\t\t ^ (zip_window[zip_strstart + zip_MIN_MATCH - 1] & 0xff))\n\t& zip_HASH_MASK;\n    zip_hash_head = zip_head1(zip_ins_h);\n    zip_prev[zip_strstart & zip_WMASK] = zip_hash_head;\n    zip_head2(zip_ins_h, zip_strstart);\n}\n\n/* Send a code of the given tree. c and tree must not have side effects */\nvar zip_SEND_CODE = function(c, tree) {\n    zip_send_bits(tree[c].fc, tree[c].dl);\n}\n\n/* Mapping from a distance to a distance code. dist is the distance - 1 and\n * must not have side effects. dist_code[256] and dist_code[257] are never\n * used.\n */\nvar zip_D_CODE = function(dist) {\n    return (dist < 256 ? zip_dist_code[dist]\n\t    : zip_dist_code[256 + (dist>>7)]) & 0xff;\n}\n\n/* ==========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nvar zip_SMALLER = function(tree, n, m) {\n    return tree[n].fc < tree[m].fc ||\n      (tree[n].fc == tree[m].fc && zip_depth[n] <= zip_depth[m]);\n}\n\n/* ==========================================================================\n * read string data\n */\nvar zip_read_buff = function(buff, offset, n) {\n    var i;\n    for(i = 0; i < n && zip_deflate_pos < zip_deflate_data.length; i++)\n\tbuff[offset + i] =\n\t    zip_deflate_data.charCodeAt(zip_deflate_pos++) & 0xff;\n    return i;\n}\n\n/* ==========================================================================\n * Initialize the \"longest match\" routines for a new file\n */\nvar zip_lm_init = function() {\n    var j;\n\n    /* Initialize the hash table. */\n    for(j = 0; j < zip_HASH_SIZE; j++)\n//\tzip_head2(j, zip_NIL);\n\tzip_prev[zip_WSIZE + j] = 0;\n    /* prev will be initialized on the fly */\n\n    /* Set the default configuration parameters:\n     */\n    zip_max_lazy_match = zip_configuration_table[zip_compr_level].max_lazy;\n    zip_good_match     = zip_configuration_table[zip_compr_level].good_length;\n    if(!zip_FULL_SEARCH)\n\tzip_nice_match = zip_configuration_table[zip_compr_level].nice_length;\n    zip_max_chain_length = zip_configuration_table[zip_compr_level].max_chain;\n\n    zip_strstart = 0;\n    zip_block_start = 0;\n\n    zip_lookahead = zip_read_buff(zip_window, 0, 2 * zip_WSIZE);\n    if(zip_lookahead <= 0) {\n\tzip_eofile = true;\n\tzip_lookahead = 0;\n\treturn;\n    }\n    zip_eofile = false;\n    /* Make sure that we always have enough lookahead. This is important\n     * if input comes from a device such as a tty.\n     */\n    while(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\n\tzip_fill_window();\n\n    /* If lookahead < MIN_MATCH, ins_h is garbage, but this is\n     * not important since only literal bytes will be emitted.\n     */\n    zip_ins_h = 0;\n    for(j = 0; j < zip_MIN_MATCH - 1; j++) {\n//      UPDATE_HASH(ins_h, window[j]);\n\tzip_ins_h = ((zip_ins_h << zip_H_SHIFT) ^ (zip_window[j] & 0xff)) & zip_HASH_MASK;\n    }\n}\n\n/* ==========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n */\nvar zip_longest_match = function(cur_match) {\n    var chain_length = zip_max_chain_length; // max hash chain length\n    var scanp = zip_strstart; // current string\n    var matchp;\t\t// matched string\n    var len;\t\t// length of current match\n    var best_len = zip_prev_length;\t// best match length so far\n\n    /* Stop when cur_match becomes <= limit. To simplify the code,\n     * we prevent matches with the string of window index 0.\n     */\n    var limit = (zip_strstart > zip_MAX_DIST ? zip_strstart - zip_MAX_DIST : zip_NIL);\n\n    var strendp = zip_strstart + zip_MAX_MATCH;\n    var scan_end1 = zip_window[scanp + best_len - 1];\n    var scan_end  = zip_window[scanp + best_len];\n\n    /* Do not waste too much time if we already have a good match: */\n    if(zip_prev_length >= zip_good_match)\n\tchain_length >>= 2;\n\n//  Assert(encoder->strstart <= window_size-MIN_LOOKAHEAD, \"insufficient lookahead\");\n\n    do {\n//    Assert(cur_match < encoder->strstart, \"no future\");\n\tmatchp = cur_match;\n\n\t/* Skip to next match if the match length cannot increase\n\t    * or if the match length is less than 2:\n\t*/\n\tif(zip_window[matchp + best_len]\t!= scan_end  ||\n\t   zip_window[matchp + best_len - 1]\t!= scan_end1 ||\n\t   zip_window[matchp]\t\t\t!= zip_window[scanp] ||\n\t   zip_window[++matchp]\t\t\t!= zip_window[scanp + 1]) {\n\t    continue;\n\t}\n\n\t/* The check at best_len-1 can be removed because it will be made\n         * again later. (This heuristic is not always a win.)\n         * It is not necessary to compare scan[2] and match[2] since they\n         * are always equal when the other bytes match, given that\n         * the hash keys are equal and that HASH_BITS >= 8.\n         */\n\tscanp += 2;\n\tmatchp++;\n\n\t/* We check for insufficient lookahead only every 8th comparison;\n         * the 256th check will be made at strstart+258.\n         */\n\tdo {\n\t} while(zip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tzip_window[++scanp] == zip_window[++matchp] &&\n\t\tscanp < strendp);\n\n      len = zip_MAX_MATCH - (strendp - scanp);\n      scanp = strendp - zip_MAX_MATCH;\n\n      if(len > best_len) {\n\t  zip_match_start = cur_match;\n\t  best_len = len;\n\t  if(zip_FULL_SEARCH) {\n\t      if(len >= zip_MAX_MATCH) break;\n\t  } else {\n\t      if(len >= zip_nice_match) break;\n\t  }\n\n\t  scan_end1  = zip_window[scanp + best_len-1];\n\t  scan_end   = zip_window[scanp + best_len];\n      }\n    } while((cur_match = zip_prev[cur_match & zip_WMASK]) > limit\n\t    && --chain_length != 0);\n\n    return best_len;\n}\n\n/* ==========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead, and sets eofile if end of input file.\n * IN assertion: lookahead < MIN_LOOKAHEAD && strstart + lookahead > 0\n * OUT assertions: at least one byte has been read, or eofile is set;\n *    file reads are performed for at least two bytes (required for the\n *    translate_eol option).\n */\nvar zip_fill_window = function() {\n    var n, m;\n\n    // Amount of free space at the end of the window.\n    var more = zip_window_size - zip_lookahead - zip_strstart;\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if(more == -1) {\n\t/* Very unlikely, but possible on 16 bit machine if strstart == 0\n         * and lookahead == 1 (input done one byte at time)\n         */\n\tmore--;\n    } else if(zip_strstart >= zip_WSIZE + zip_MAX_DIST) {\n\t/* By the IN assertion, the window is not empty so we can't confuse\n         * more == 0 with more == 64K on a 16 bit machine.\n         */\n//\tAssert(window_size == (ulg)2*WSIZE, \"no sliding with BIG_MEM\");\n\n//\tSystem.arraycopy(window, WSIZE, window, 0, WSIZE);\n\tfor(n = 0; n < zip_WSIZE; n++)\n\t    zip_window[n] = zip_window[n + zip_WSIZE];\n      \n\tzip_match_start -= zip_WSIZE;\n\tzip_strstart    -= zip_WSIZE; /* we now have strstart >= MAX_DIST: */\n\tzip_block_start -= zip_WSIZE;\n\n\tfor(n = 0; n < zip_HASH_SIZE; n++) {\n\t    m = zip_head1(n);\n\t    zip_head2(n, m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\n\t}\n\tfor(n = 0; n < zip_WSIZE; n++) {\n\t    /* If n is not on any hash chain, prev[n] is garbage but\n\t     * its value will never be used.\n\t     */\n\t    m = zip_prev[n];\n\t    zip_prev[n] = (m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\n\t}\n\tmore += zip_WSIZE;\n    }\n    // At this point, more >= 2\n    if(!zip_eofile) {\n\tn = zip_read_buff(zip_window, zip_strstart + zip_lookahead, more);\n\tif(n <= 0)\n\t    zip_eofile = true;\n\telse\n\t    zip_lookahead += n;\n    }\n}\n\n/* ==========================================================================\n * Processes a new input file and return its compressed length. This\n * function does not perform lazy evaluationof matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nvar zip_deflate_fast = function() {\n    while(zip_lookahead != 0 && zip_qhead == null) {\n\tvar flush; // set if current block must be flushed\n\n\t/* Insert the string window[strstart .. strstart+2] in the\n\t * dictionary, and set hash_head to the head of the hash chain:\n\t */\n\tzip_INSERT_STRING();\n\n\t/* Find the longest match, discarding those <= prev_length.\n\t * At this point we have always match_length < MIN_MATCH\n\t */\n\tif(zip_hash_head != zip_NIL &&\n\t   zip_strstart - zip_hash_head <= zip_MAX_DIST) {\n\t    /* To simplify the code, we prevent matches with the string\n\t     * of window index 0 (in particular we have to avoid a match\n\t     * of the string with itself at the start of the input file).\n\t     */\n\t    zip_match_length = zip_longest_match(zip_hash_head);\n\t    /* longest_match() sets match_start */\n\t    if(zip_match_length > zip_lookahead)\n\t\tzip_match_length = zip_lookahead;\n\t}\n\tif(zip_match_length >= zip_MIN_MATCH) {\n//\t    check_match(strstart, match_start, match_length);\n\n\t    flush = zip_ct_tally(zip_strstart - zip_match_start,\n\t\t\t\t zip_match_length - zip_MIN_MATCH);\n\t    zip_lookahead -= zip_match_length;\n\n\t    /* Insert new strings in the hash table only if the match length\n\t     * is not too large. This saves time but degrades compression.\n\t     */\n\t    if(zip_match_length <= zip_max_lazy_match) {\n\t\tzip_match_length--; // string at strstart already in hash table\n\t\tdo {\n\t\t    zip_strstart++;\n\t\t    zip_INSERT_STRING();\n\t\t    /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t     * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\n\t\t     * these bytes are garbage, but it does not matter since\n\t\t     * the next lookahead bytes will be emitted as literals.\n\t\t     */\n\t\t} while(--zip_match_length != 0);\n\t\tzip_strstart++;\n\t    } else {\n\t\tzip_strstart += zip_match_length;\n\t\tzip_match_length = 0;\n\t\tzip_ins_h = zip_window[zip_strstart] & 0xff;\n//\t\tUPDATE_HASH(ins_h, window[strstart + 1]);\n\t\tzip_ins_h = ((zip_ins_h<<zip_H_SHIFT) ^ (zip_window[zip_strstart + 1] & 0xff)) & zip_HASH_MASK;\n\n//#if MIN_MATCH != 3\n//\t\tCall UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n\n\t    }\n\t} else {\n\t    /* No match, output a literal byte */\n\t    flush = zip_ct_tally(0, zip_window[zip_strstart] & 0xff);\n\t    zip_lookahead--;\n\t    zip_strstart++;\n\t}\n\tif(flush) {\n\t    zip_flush_block(0);\n\t    zip_block_start = zip_strstart;\n\t}\n\n\t/* Make sure that we always have enough lookahead, except\n\t * at the end of the input file. We need MAX_MATCH bytes\n\t * for the next match, plus MIN_MATCH bytes to insert the\n\t * string following the next match.\n\t */\n\twhile(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\n\t    zip_fill_window();\n    }\n}\n\nvar zip_deflate_better = function() {\n    /* Process the input block. */\n    while(zip_lookahead != 0 && zip_qhead == null) {\n\t/* Insert the string window[strstart .. strstart+2] in the\n\t * dictionary, and set hash_head to the head of the hash chain:\n\t */\n\tzip_INSERT_STRING();\n\n\t/* Find the longest match, discarding those <= prev_length.\n\t */\n\tzip_prev_length = zip_match_length;\n\tzip_prev_match = zip_match_start;\n\tzip_match_length = zip_MIN_MATCH - 1;\n\n\tif(zip_hash_head != zip_NIL &&\n\t   zip_prev_length < zip_max_lazy_match &&\n\t   zip_strstart - zip_hash_head <= zip_MAX_DIST) {\n\t    /* To simplify the code, we prevent matches with the string\n\t     * of window index 0 (in particular we have to avoid a match\n\t     * of the string with itself at the start of the input file).\n\t     */\n\t    zip_match_length = zip_longest_match(zip_hash_head);\n\t    /* longest_match() sets match_start */\n\t    if(zip_match_length > zip_lookahead)\n\t\tzip_match_length = zip_lookahead;\n\n\t    /* Ignore a length 3 match if it is too distant: */\n\t    if(zip_match_length == zip_MIN_MATCH &&\n\t       zip_strstart - zip_match_start > zip_TOO_FAR) {\n\t\t/* If prev_match is also MIN_MATCH, match_start is garbage\n\t\t * but we will ignore the current match anyway.\n\t\t */\n\t\tzip_match_length--;\n\t    }\n\t}\n\t/* If there was a match at the previous step and the current\n\t * match is not better, output the previous match:\n\t */\n\tif(zip_prev_length >= zip_MIN_MATCH &&\n\t   zip_match_length <= zip_prev_length) {\n\t    var flush; // set if current block must be flushed\n\n//\t    check_match(strstart - 1, prev_match, prev_length);\n\t    flush = zip_ct_tally(zip_strstart - 1 - zip_prev_match,\n\t\t\t\t zip_prev_length - zip_MIN_MATCH);\n\n\t    /* Insert in hash table all strings up to the end of the match.\n\t     * strstart-1 and strstart are already inserted.\n\t     */\n\t    zip_lookahead -= zip_prev_length - 1;\n\t    zip_prev_length -= 2;\n\t    do {\n\t\tzip_strstart++;\n\t\tzip_INSERT_STRING();\n\t\t/* strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\n\t\t * these bytes are garbage, but it does not matter since the\n\t\t * next lookahead bytes will always be emitted as literals.\n\t\t */\n\t    } while(--zip_prev_length != 0);\n\t    zip_match_available = 0;\n\t    zip_match_length = zip_MIN_MATCH - 1;\n\t    zip_strstart++;\n\t    if(flush) {\n\t\tzip_flush_block(0);\n\t\tzip_block_start = zip_strstart;\n\t    }\n\t} else if(zip_match_available != 0) {\n\t    /* If there was no match at the previous position, output a\n\t     * single literal. If there was a match but the current match\n\t     * is longer, truncate the previous match to a single literal.\n\t     */\n\t    if(zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff)) {\n\t\tzip_flush_block(0);\n\t\tzip_block_start = zip_strstart;\n\t    }\n\t    zip_strstart++;\n\t    zip_lookahead--;\n\t} else {\n\t    /* There is no previous match to compare with, wait for\n\t     * the next step to decide.\n\t     */\n\t    zip_match_available = 1;\n\t    zip_strstart++;\n\t    zip_lookahead--;\n\t}\n\n\t/* Make sure that we always have enough lookahead, except\n\t * at the end of the input file. We need MAX_MATCH bytes\n\t * for the next match, plus MIN_MATCH bytes to insert the\n\t * string following the next match.\n\t */\n\twhile(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\n\t    zip_fill_window();\n    }\n}\n\nvar zip_init_deflate = function() {\n    if(zip_eofile)\n\treturn;\n    zip_bi_buf = 0;\n    zip_bi_valid = 0;\n    zip_ct_init();\n    zip_lm_init();\n\n    zip_qhead = null;\n    zip_outcnt = 0;\n    zip_outoff = 0;\n    zip_match_available = 0;\n\n    if(zip_compr_level <= 3)\n    {\n\tzip_prev_length = zip_MIN_MATCH - 1;\n\tzip_match_length = 0;\n    }\n    else\n    {\n\tzip_match_length = zip_MIN_MATCH - 1;\n\tzip_match_available = 0;\n        zip_match_available = 0;\n    }\n\n    zip_complete = false;\n}\n\n/* ==========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nvar zip_deflate_internal = function(buff, off, buff_size) {\n    var n;\n\n    if(!zip_initflag)\n    {\n\tzip_init_deflate();\n\tzip_initflag = true;\n\tif(zip_lookahead == 0) { // empty\n\t    zip_complete = true;\n\t    return 0;\n\t}\n    }\n\n    if((n = zip_qcopy(buff, off, buff_size)) == buff_size)\n\treturn buff_size;\n\n    if(zip_complete)\n\treturn n;\n\n    if(zip_compr_level <= 3) // optimized for speed\n\tzip_deflate_fast();\n    else\n\tzip_deflate_better();\n    if(zip_lookahead == 0) {\n\tif(zip_match_available != 0)\n\t    zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff);\n\tzip_flush_block(1);\n\tzip_complete = true;\n    }\n    return n + zip_qcopy(buff, n + off, buff_size - n);\n}\n\nvar zip_qcopy = function(buff, off, buff_size) {\n    var n, i, j;\n\n    n = 0;\n    while(zip_qhead != null && n < buff_size)\n    {\n\ti = buff_size - n;\n\tif(i > zip_qhead.len)\n\t    i = zip_qhead.len;\n//      System.arraycopy(qhead.ptr, qhead.off, buff, off + n, i);\n\tfor(j = 0; j < i; j++)\n\t    buff[off + n + j] = zip_qhead.ptr[zip_qhead.off + j];\n\t\n\tzip_qhead.off += i;\n\tzip_qhead.len -= i;\n\tn += i;\n\tif(zip_qhead.len == 0) {\n\t    var p;\n\t    p = zip_qhead;\n\t    zip_qhead = zip_qhead.next;\n\t    zip_reuse_queue(p);\n\t}\n    }\n\n    if(n == buff_size)\n\treturn n;\n\n    if(zip_outoff < zip_outcnt) {\n\ti = buff_size - n;\n\tif(i > zip_outcnt - zip_outoff)\n\t    i = zip_outcnt - zip_outoff;\n\t// System.arraycopy(outbuf, outoff, buff, off + n, i);\n\tfor(j = 0; j < i; j++)\n\t    buff[off + n + j] = zip_outbuf[zip_outoff + j];\n\tzip_outoff += i;\n\tn += i;\n\tif(zip_outcnt == zip_outoff)\n\t    zip_outcnt = zip_outoff = 0;\n    }\n    return n;\n}\n\n/* ==========================================================================\n * Allocate the match buffer, initialize the various tables and save the\n * location of the internal file attribute (ascii/binary) and method\n * (DEFLATE/STORE).\n */\nvar zip_ct_init = function() {\n    var n;\t// iterates over tree elements\n    var bits;\t// bit counter\n    var length;\t// length value\n    var code;\t// code value\n    var dist;\t// distance index\n\n    if(zip_static_dtree[0].dl != 0) return; // ct_init already called\n\n    zip_l_desc.dyn_tree\t\t= zip_dyn_ltree;\n    zip_l_desc.static_tree\t= zip_static_ltree;\n    zip_l_desc.extra_bits\t= zip_extra_lbits;\n    zip_l_desc.extra_base\t= zip_LITERALS + 1;\n    zip_l_desc.elems\t\t= zip_L_CODES;\n    zip_l_desc.max_length\t= zip_MAX_BITS;\n    zip_l_desc.max_code\t\t= 0;\n\n    zip_d_desc.dyn_tree\t\t= zip_dyn_dtree;\n    zip_d_desc.static_tree\t= zip_static_dtree;\n    zip_d_desc.extra_bits\t= zip_extra_dbits;\n    zip_d_desc.extra_base\t= 0;\n    zip_d_desc.elems\t\t= zip_D_CODES;\n    zip_d_desc.max_length\t= zip_MAX_BITS;\n    zip_d_desc.max_code\t\t= 0;\n\n    zip_bl_desc.dyn_tree\t= zip_bl_tree;\n    zip_bl_desc.static_tree\t= null;\n    zip_bl_desc.extra_bits\t= zip_extra_blbits;\n    zip_bl_desc.extra_base\t= 0;\n    zip_bl_desc.elems\t\t= zip_BL_CODES;\n    zip_bl_desc.max_length\t= zip_MAX_BL_BITS;\n    zip_bl_desc.max_code\t= 0;\n\n    // Initialize the mapping length (0..255) -> length code (0..28)\n    length = 0;\n    for(code = 0; code < zip_LENGTH_CODES-1; code++) {\n\tzip_base_length[code] = length;\n\tfor(n = 0; n < (1<<zip_extra_lbits[code]); n++)\n\t    zip_length_code[length++] = code;\n    }\n    // Assert (length == 256, \"ct_init: length != 256\");\n\n    /* Note that the length 255 (match length 258) can be represented\n     * in two different ways: code 284 + 5 bits or code 285, so we\n     * overwrite length_code[255] to use the best encoding:\n     */\n    zip_length_code[length-1] = code;\n\n    /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n    dist = 0;\n    for(code = 0 ; code < 16; code++) {\n\tzip_base_dist[code] = dist;\n\tfor(n = 0; n < (1<<zip_extra_dbits[code]); n++) {\n\t    zip_dist_code[dist++] = code;\n\t}\n    }\n    // Assert (dist == 256, \"ct_init: dist != 256\");\n    dist >>= 7; // from now on, all distances are divided by 128\n    for( ; code < zip_D_CODES; code++) {\n\tzip_base_dist[code] = dist << 7;\n\tfor(n = 0; n < (1<<(zip_extra_dbits[code]-7)); n++)\n\t    zip_dist_code[256 + dist++] = code;\n    }\n    // Assert (dist == 256, \"ct_init: 256+dist != 512\");\n\n    // Construct the codes of the static literal tree\n    for(bits = 0; bits <= zip_MAX_BITS; bits++)\n\tzip_bl_count[bits] = 0;\n    n = 0;\n    while(n <= 143) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\n    while(n <= 255) { zip_static_ltree[n++].dl = 9; zip_bl_count[9]++; }\n    while(n <= 279) { zip_static_ltree[n++].dl = 7; zip_bl_count[7]++; }\n    while(n <= 287) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\n    /* Codes 286 and 287 do not exist, but we must include them in the\n     * tree construction to get a canonical Huffman tree (longest code\n     * all ones)\n     */\n    zip_gen_codes(zip_static_ltree, zip_L_CODES + 1);\n\n    /* The static distance tree is trivial: */\n    for(n = 0; n < zip_D_CODES; n++) {\n\tzip_static_dtree[n].dl = 5;\n\tzip_static_dtree[n].fc = zip_bi_reverse(n, 5);\n    }\n\n    // Initialize the first block of the first file:\n    zip_init_block();\n}\n\n/* ==========================================================================\n * Initialize a new block.\n */\nvar zip_init_block = function() {\n    var n; // iterates over tree elements\n\n    // Initialize the trees.\n    for(n = 0; n < zip_L_CODES;  n++) zip_dyn_ltree[n].fc = 0;\n    for(n = 0; n < zip_D_CODES;  n++) zip_dyn_dtree[n].fc = 0;\n    for(n = 0; n < zip_BL_CODES; n++) zip_bl_tree[n].fc = 0;\n\n    zip_dyn_ltree[zip_END_BLOCK].fc = 1;\n    zip_opt_len = zip_static_len = 0;\n    zip_last_lit = zip_last_dist = zip_last_flags = 0;\n    zip_flags = 0;\n    zip_flag_bit = 1;\n}\n\n/* ==========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nvar zip_pqdownheap = function(\n    tree,\t// the tree to restore\n    k) {\t// node to move down\n    var v = zip_heap[k];\n    var j = k << 1;\t// left son of k\n\n    while(j <= zip_heap_len) {\n\t// Set j to the smallest of the two sons:\n\tif(j < zip_heap_len &&\n\t   zip_SMALLER(tree, zip_heap[j + 1], zip_heap[j]))\n\t    j++;\n\n\t// Exit if v is smaller than both sons\n\tif(zip_SMALLER(tree, v, zip_heap[j]))\n\t    break;\n\n\t// Exchange v with the smallest son\n\tzip_heap[k] = zip_heap[j];\n\tk = j;\n\n\t// And continue down the tree, setting j to the left son of k\n\tj <<= 1;\n    }\n    zip_heap[k] = v;\n}\n\n/* ==========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nvar zip_gen_bitlen = function(desc) { // the tree descriptor\n    var tree\t\t= desc.dyn_tree;\n    var extra\t\t= desc.extra_bits;\n    var base\t\t= desc.extra_base;\n    var max_code\t= desc.max_code;\n    var max_length\t= desc.max_length;\n    var stree\t\t= desc.static_tree;\n    var h;\t\t// heap index\n    var n, m;\t\t// iterate over the tree elements\n    var bits;\t\t// bit length\n    var xbits;\t\t// extra bits\n    var f;\t\t// frequency\n    var overflow = 0;\t// number of elements with bit length too large\n\n    for(bits = 0; bits <= zip_MAX_BITS; bits++)\n\tzip_bl_count[bits] = 0;\n\n    /* In a first pass, compute the optimal bit lengths (which may\n     * overflow in the case of the bit length tree).\n     */\n    tree[zip_heap[zip_heap_max]].dl = 0; // root of the heap\n\n    for(h = zip_heap_max + 1; h < zip_HEAP_SIZE; h++) {\n\tn = zip_heap[h];\n\tbits = tree[tree[n].dl].dl + 1;\n\tif(bits > max_length) {\n\t    bits = max_length;\n\t    overflow++;\n\t}\n\ttree[n].dl = bits;\n\t// We overwrite tree[n].dl which is no longer needed\n\n\tif(n > max_code)\n\t    continue; // not a leaf node\n\n\tzip_bl_count[bits]++;\n\txbits = 0;\n\tif(n >= base)\n\t    xbits = extra[n - base];\n\tf = tree[n].fc;\n\tzip_opt_len += f * (bits + xbits);\n\tif(stree != null)\n\t    zip_static_len += f * (stree[n].dl + xbits);\n    }\n    if(overflow == 0)\n\treturn;\n\n    // This happens for example on obj2 and pic of the Calgary corpus\n\n    // Find the first bit length which could increase:\n    do {\n\tbits = max_length - 1;\n\twhile(zip_bl_count[bits] == 0)\n\t    bits--;\n\tzip_bl_count[bits]--;\t\t// move one leaf down the tree\n\tzip_bl_count[bits + 1] += 2;\t// move one overflow item as its brother\n\tzip_bl_count[max_length]--;\n\t/* The brother of the overflow item also moves one step up,\n\t * but this does not affect bl_count[max_length]\n\t */\n\toverflow -= 2;\n    } while(overflow > 0);\n\n    /* Now recompute all bit lengths, scanning in increasing frequency.\n     * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n     * lengths instead of fixing only the wrong ones. This idea is taken\n     * from 'ar' written by Haruhiko Okumura.)\n     */\n    for(bits = max_length; bits != 0; bits--) {\n\tn = zip_bl_count[bits];\n\twhile(n != 0) {\n\t    m = zip_heap[--h];\n\t    if(m > max_code)\n\t\tcontinue;\n\t    if(tree[m].dl != bits) {\n\t\tzip_opt_len += (bits - tree[m].dl) * tree[m].fc;\n\t\ttree[m].fc = bits;\n\t    }\n\t    n--;\n\t}\n    }\n}\n\n  /* ==========================================================================\n   * Generate the codes for a given tree and bit counts (which need not be\n   * optimal).\n   * IN assertion: the array bl_count contains the bit length statistics for\n   * the given tree and the field len is set for all tree elements.\n   * OUT assertion: the field code is set for all tree elements of non\n   *     zero code length.\n   */\nvar zip_gen_codes = function(tree,\t// the tree to decorate\n\t\t   max_code) {\t// largest code with non zero frequency\n    var next_code = new Array(zip_MAX_BITS+1); // next code value for each bit length\n    var code = 0;\t\t// running code value\n    var bits;\t\t\t// bit index\n    var n;\t\t\t// code index\n\n    /* The distribution counts are first used to generate the code values\n     * without bit reversal.\n     */\n    for(bits = 1; bits <= zip_MAX_BITS; bits++) {\n\tcode = ((code + zip_bl_count[bits-1]) << 1);\n\tnext_code[bits] = code;\n    }\n\n    /* Check that the bit counts in bl_count are consistent. The last code\n     * must be all ones.\n     */\n//    Assert (code + encoder->bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n//\t    \"inconsistent bit counts\");\n//    Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n    for(n = 0; n <= max_code; n++) {\n\tvar len = tree[n].dl;\n\tif(len == 0)\n\t    continue;\n\t// Now reverse the bits\n\ttree[n].fc = zip_bi_reverse(next_code[len]++, len);\n\n//      Tracec(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n//\t  n, (isgraph(n) ? n : ' '), len, tree[n].fc, next_code[len]-1));\n    }\n}\n\n/* ==========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nvar zip_build_tree = function(desc) { // the tree descriptor\n    var tree\t= desc.dyn_tree;\n    var stree\t= desc.static_tree;\n    var elems\t= desc.elems;\n    var n, m;\t\t// iterate over heap elements\n    var max_code = -1;\t// largest code with non zero frequency\n    var node = elems;\t// next internal node of the tree\n\n    /* Construct the initial heap, with least frequent element in\n     * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n     * heap[0] is not used.\n     */\n    zip_heap_len = 0;\n    zip_heap_max = zip_HEAP_SIZE;\n\n    for(n = 0; n < elems; n++) {\n\tif(tree[n].fc != 0) {\n\t    zip_heap[++zip_heap_len] = max_code = n;\n\t    zip_depth[n] = 0;\n\t} else\n\t    tree[n].dl = 0;\n    }\n\n    /* The pkzip format requires that at least one distance code exists,\n     * and that at least one bit should be sent even if there is only one\n     * possible code. So to avoid special checks later on we force at least\n     * two codes of non zero frequency.\n     */\n    while(zip_heap_len < 2) {\n\tvar xnew = zip_heap[++zip_heap_len] = (max_code < 2 ? ++max_code : 0);\n\ttree[xnew].fc = 1;\n\tzip_depth[xnew] = 0;\n\tzip_opt_len--;\n\tif(stree != null)\n\t    zip_static_len -= stree[xnew].dl;\n\t// new is 0 or 1 so it does not have extra bits\n    }\n    desc.max_code = max_code;\n\n    /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n     * establish sub-heaps of increasing lengths:\n     */\n    for(n = zip_heap_len >> 1; n >= 1; n--)\n\tzip_pqdownheap(tree, n);\n\n    /* Construct the Huffman tree by repeatedly combining the least two\n     * frequent nodes.\n     */\n    do {\n\tn = zip_heap[zip_SMALLEST];\n\tzip_heap[zip_SMALLEST] = zip_heap[zip_heap_len--];\n\tzip_pqdownheap(tree, zip_SMALLEST);\n\n\tm = zip_heap[zip_SMALLEST];  // m = node of next least frequency\n\n\t// keep the nodes sorted by frequency\n\tzip_heap[--zip_heap_max] = n;\n\tzip_heap[--zip_heap_max] = m;\n\n\t// Create a new node father of n and m\n\ttree[node].fc = tree[n].fc + tree[m].fc;\n//\tdepth[node] = (char)(MAX(depth[n], depth[m]) + 1);\n\tif(zip_depth[n] > zip_depth[m] + 1)\n\t    zip_depth[node] = zip_depth[n];\n\telse\n\t    zip_depth[node] = zip_depth[m] + 1;\n\ttree[n].dl = tree[m].dl = node;\n\n\t// and insert the new node in the heap\n\tzip_heap[zip_SMALLEST] = node++;\n\tzip_pqdownheap(tree, zip_SMALLEST);\n\n    } while(zip_heap_len >= 2);\n\n    zip_heap[--zip_heap_max] = zip_heap[zip_SMALLEST];\n\n    /* At this point, the fields freq and dad are set. We can now\n     * generate the bit lengths.\n     */\n    zip_gen_bitlen(desc);\n\n    // The field len is now set, we can generate the bit codes\n    zip_gen_codes(tree, max_code);\n}\n\n/* ==========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree. Updates opt_len to take into account the repeat\n * counts. (The contribution of the bit length codes will be added later\n * during the construction of bl_tree.)\n */\nvar zip_scan_tree = function(tree,// the tree to be scanned\n\t\t       max_code) {  // and its largest code of non zero frequency\n    var n;\t\t\t// iterates over all tree elements\n    var prevlen = -1;\t\t// last emitted length\n    var curlen;\t\t\t// length of current code\n    var nextlen = tree[0].dl;\t// length of next code\n    var count = 0;\t\t// repeat count of the current code\n    var max_count = 7;\t\t// max repeat count\n    var min_count = 4;\t\t// min repeat count\n\n    if(nextlen == 0) {\n\tmax_count = 138;\n\tmin_count = 3;\n    }\n    tree[max_code + 1].dl = 0xffff; // guard\n\n    for(n = 0; n <= max_code; n++) {\n\tcurlen = nextlen;\n\tnextlen = tree[n + 1].dl;\n\tif(++count < max_count && curlen == nextlen)\n\t    continue;\n\telse if(count < min_count)\n\t    zip_bl_tree[curlen].fc += count;\n\telse if(curlen != 0) {\n\t    if(curlen != prevlen)\n\t\tzip_bl_tree[curlen].fc++;\n\t    zip_bl_tree[zip_REP_3_6].fc++;\n\t} else if(count <= 10)\n\t    zip_bl_tree[zip_REPZ_3_10].fc++;\n\telse\n\t    zip_bl_tree[zip_REPZ_11_138].fc++;\n\tcount = 0; prevlen = curlen;\n\tif(nextlen == 0) {\n\t    max_count = 138;\n\t    min_count = 3;\n\t} else if(curlen == nextlen) {\n\t    max_count = 6;\n\t    min_count = 3;\n\t} else {\n\t    max_count = 7;\n\t    min_count = 4;\n\t}\n    }\n}\n\n  /* ==========================================================================\n   * Send a literal or distance tree in compressed form, using the codes in\n   * bl_tree.\n   */\nvar zip_send_tree = function(tree, // the tree to be scanned\n\t\t   max_code) { // and its largest code of non zero frequency\n    var n;\t\t\t// iterates over all tree elements\n    var prevlen = -1;\t\t// last emitted length\n    var curlen;\t\t\t// length of current code\n    var nextlen = tree[0].dl;\t// length of next code\n    var count = 0;\t\t// repeat count of the current code\n    var max_count = 7;\t\t// max repeat count\n    var min_count = 4;\t\t// min repeat count\n\n    /* tree[max_code+1].dl = -1; */  /* guard already set */\n    if(nextlen == 0) {\n      max_count = 138;\n      min_count = 3;\n    }\n\n    for(n = 0; n <= max_code; n++) {\n\tcurlen = nextlen;\n\tnextlen = tree[n+1].dl;\n\tif(++count < max_count && curlen == nextlen) {\n\t    continue;\n\t} else if(count < min_count) {\n\t    do { zip_SEND_CODE(curlen, zip_bl_tree); } while(--count != 0);\n\t} else if(curlen != 0) {\n\t    if(curlen != prevlen) {\n\t\tzip_SEND_CODE(curlen, zip_bl_tree);\n\t\tcount--;\n\t    }\n\t    // Assert(count >= 3 && count <= 6, \" 3_6?\");\n\t    zip_SEND_CODE(zip_REP_3_6, zip_bl_tree);\n\t    zip_send_bits(count - 3, 2);\n\t} else if(count <= 10) {\n\t    zip_SEND_CODE(zip_REPZ_3_10, zip_bl_tree);\n\t    zip_send_bits(count-3, 3);\n\t} else {\n\t    zip_SEND_CODE(zip_REPZ_11_138, zip_bl_tree);\n\t    zip_send_bits(count-11, 7);\n\t}\n\tcount = 0;\n\tprevlen = curlen;\n\tif(nextlen == 0) {\n\t    max_count = 138;\n\t    min_count = 3;\n\t} else if(curlen == nextlen) {\n\t    max_count = 6;\n\t    min_count = 3;\n\t} else {\n\t    max_count = 7;\n\t    min_count = 4;\n\t}\n    }\n}\n\n/* ==========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nvar zip_build_bl_tree = function() {\n    var max_blindex;  // index of last bit length code of non zero freq\n\n    // Determine the bit length frequencies for literal and distance trees\n    zip_scan_tree(zip_dyn_ltree, zip_l_desc.max_code);\n    zip_scan_tree(zip_dyn_dtree, zip_d_desc.max_code);\n\n    // Build the bit length tree:\n    zip_build_tree(zip_bl_desc);\n    /* opt_len now includes the length of the tree representations, except\n     * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n     */\n\n    /* Determine the number of bit length codes to send. The pkzip format\n     * requires that at least 4 bit length codes be sent. (appnote.txt says\n     * 3 but the actual value used is 4.)\n     */\n    for(max_blindex = zip_BL_CODES-1; max_blindex >= 3; max_blindex--) {\n\tif(zip_bl_tree[zip_bl_order[max_blindex]].dl != 0) break;\n    }\n    /* Update opt_len to include the bit length tree and counts */\n    zip_opt_len += 3*(max_blindex+1) + 5+5+4;\n//    Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n//\t    encoder->opt_len, encoder->static_len));\n\n    return max_blindex;\n}\n\n/* ==========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nvar zip_send_all_trees = function(lcodes, dcodes, blcodes) { // number of codes for each tree\n    var rank; // index in bl_order\n\n//    Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n//    Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n//\t    \"too many codes\");\n//    Tracev((stderr, \"\\nbl counts: \"));\n    zip_send_bits(lcodes-257, 5); // not +255 as stated in appnote.txt\n    zip_send_bits(dcodes-1,   5);\n    zip_send_bits(blcodes-4,  4); // not -3 as stated in appnote.txt\n    for(rank = 0; rank < blcodes; rank++) {\n//      Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n\tzip_send_bits(zip_bl_tree[zip_bl_order[rank]].dl, 3);\n    }\n\n    // send the literal tree\n    zip_send_tree(zip_dyn_ltree,lcodes-1);\n\n    // send the distance tree\n    zip_send_tree(zip_dyn_dtree,dcodes-1);\n}\n\n/* ==========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nvar zip_flush_block = function(eof) { // true if this is the last block for a file\n    var opt_lenb, static_lenb; // opt_len and static_len in bytes\n    var max_blindex;\t// index of last bit length code of non zero freq\n    var stored_len;\t// length of input block\n\n    stored_len = zip_strstart - zip_block_start;\n    zip_flag_buf[zip_last_flags] = zip_flags; // Save the flags for the last 8 items\n\n    // Construct the literal and distance trees\n    zip_build_tree(zip_l_desc);\n//    Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\",\n//\t    encoder->opt_len, encoder->static_len));\n\n    zip_build_tree(zip_d_desc);\n//    Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\",\n//\t    encoder->opt_len, encoder->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = zip_build_bl_tree();\n\n    // Determine the best encoding. Compute first the block length in bytes\n    opt_lenb\t= (zip_opt_len   +3+7)>>3;\n    static_lenb = (zip_static_len+3+7)>>3;\n\n//    Trace((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u dist %u \",\n//\t   opt_lenb, encoder->opt_len,\n//\t   static_lenb, encoder->static_len, stored_len,\n//\t   encoder->last_lit, encoder->last_dist));\n\n    if(static_lenb <= opt_lenb)\n\topt_lenb = static_lenb;\n    if(stored_len + 4 <= opt_lenb // 4: two words for the lengths\n       && zip_block_start >= 0) {\n\tvar i;\n\n\t/* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n\t * Otherwise we can't have processed more than WSIZE input bytes since\n\t * the last block flush, because compression would have been\n\t * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n\t * transform a block into a stored block.\n\t */\n\tzip_send_bits((zip_STORED_BLOCK<<1)+eof, 3);  /* send block type */\n\tzip_bi_windup();\t\t /* align on byte boundary */\n\tzip_put_short(stored_len);\n\tzip_put_short(~stored_len);\n\n      // copy block\n/*\n      p = &window[block_start];\n      for(i = 0; i < stored_len; i++)\n\tput_byte(p[i]);\n*/\n\tfor(i = 0; i < stored_len; i++)\n\t    zip_put_byte(zip_window[zip_block_start + i]);\n\n    } else if(static_lenb == opt_lenb) {\n\tzip_send_bits((zip_STATIC_TREES<<1)+eof, 3);\n\tzip_compress_block(zip_static_ltree, zip_static_dtree);\n    } else {\n\tzip_send_bits((zip_DYN_TREES<<1)+eof, 3);\n\tzip_send_all_trees(zip_l_desc.max_code+1,\n\t\t\t   zip_d_desc.max_code+1,\n\t\t\t   max_blindex+1);\n\tzip_compress_block(zip_dyn_ltree, zip_dyn_dtree);\n    }\n\n    zip_init_block();\n\n    if(eof != 0)\n\tzip_bi_windup();\n}\n\n/* ==========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nvar zip_ct_tally = function(\n\tdist, // distance of matched string\n\tlc) { // match length-MIN_MATCH or unmatched char (if dist==0)\n    zip_l_buf[zip_last_lit++] = lc;\n    if(dist == 0) {\n\t// lc is the unmatched char\n\tzip_dyn_ltree[lc].fc++;\n    } else {\n\t// Here, lc is the match length - MIN_MATCH\n\tdist--;\t\t    // dist = match distance - 1\n//      Assert((ush)dist < (ush)MAX_DIST &&\n//\t     (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n//\t     (ush)D_CODE(dist) < (ush)D_CODES,  \"ct_tally: bad match\");\n\n\tzip_dyn_ltree[zip_length_code[lc]+zip_LITERALS+1].fc++;\n\tzip_dyn_dtree[zip_D_CODE(dist)].fc++;\n\n\tzip_d_buf[zip_last_dist++] = dist;\n\tzip_flags |= zip_flag_bit;\n    }\n    zip_flag_bit <<= 1;\n\n    // Output the flags if they fill a byte\n    if((zip_last_lit & 7) == 0) {\n\tzip_flag_buf[zip_last_flags++] = zip_flags;\n\tzip_flags = 0;\n\tzip_flag_bit = 1;\n    }\n    // Try to guess if it is profitable to stop the current block here\n    if(zip_compr_level > 2 && (zip_last_lit & 0xfff) == 0) {\n\t// Compute an upper bound for the compressed length\n\tvar out_length = zip_last_lit * 8;\n\tvar in_length = zip_strstart - zip_block_start;\n\tvar dcode;\n\n\tfor(dcode = 0; dcode < zip_D_CODES; dcode++) {\n\t    out_length += zip_dyn_dtree[dcode].fc * (5 + zip_extra_dbits[dcode]);\n\t}\n\tout_length >>= 3;\n//      Trace((stderr,\"\\nlast_lit %u, last_dist %u, in %ld, out ~%ld(%ld%%) \",\n//\t     encoder->last_lit, encoder->last_dist, in_length, out_length,\n//\t     100L - out_length*100L/in_length));\n\tif(zip_last_dist < parseInt(zip_last_lit/2) &&\n\t   out_length < parseInt(in_length/2))\n\t    return true;\n    }\n    return (zip_last_lit == zip_LIT_BUFSIZE-1 ||\n\t    zip_last_dist == zip_DIST_BUFSIZE);\n    /* We avoid equality with LIT_BUFSIZE because of wraparound at 64K\n     * on 16 bit machines and because stored blocks are restricted to\n     * 64K-1 bytes.\n     */\n}\n\n  /* ==========================================================================\n   * Send the block data compressed using the given Huffman trees\n   */\nvar zip_compress_block = function(\n\tltree,\t// literal tree\n\tdtree) {\t// distance tree\n    var dist;\t\t// distance of matched string\n    var lc;\t\t// match length or unmatched char (if dist == 0)\n    var lx = 0;\t\t// running index in l_buf\n    var dx = 0;\t\t// running index in d_buf\n    var fx = 0;\t\t// running index in flag_buf\n    var flag = 0;\t// current flags\n    var code;\t\t// the code to send\n    var extra;\t\t// number of extra bits to send\n\n    if(zip_last_lit != 0) do {\n\tif((lx & 7) == 0)\n\t    flag = zip_flag_buf[fx++];\n\tlc = zip_l_buf[lx++] & 0xff;\n\tif((flag & 1) == 0) {\n\t    zip_SEND_CODE(lc, ltree); /* send a literal byte */\n//\tTracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n\t} else {\n\t    // Here, lc is the match length - MIN_MATCH\n\t    code = zip_length_code[lc];\n\t    zip_SEND_CODE(code+zip_LITERALS+1, ltree); // send the length code\n\t    extra = zip_extra_lbits[code];\n\t    if(extra != 0) {\n\t\tlc -= zip_base_length[code];\n\t\tzip_send_bits(lc, extra); // send the extra length bits\n\t    }\n\t    dist = zip_d_buf[dx++];\n\t    // Here, dist is the match distance - 1\n\t    code = zip_D_CODE(dist);\n//\tAssert (code < D_CODES, \"bad d_code\");\n\n\t    zip_SEND_CODE(code, dtree);\t  // send the distance code\n\t    extra = zip_extra_dbits[code];\n\t    if(extra != 0) {\n\t\tdist -= zip_base_dist[code];\n\t\tzip_send_bits(dist, extra);   // send the extra distance bits\n\t    }\n\t} // literal or match pair ?\n\tflag >>= 1;\n    } while(lx < zip_last_lit);\n\n    zip_SEND_CODE(zip_END_BLOCK, ltree);\n}\n\n/* ==========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nvar zip_Buf_size = 16; // bit size of bi_buf\nvar zip_send_bits = function(\n\tvalue,\t// value to send\n\tlength) {\t// number of bits\n    /* If not enough room in bi_buf, use (valid) bits from bi_buf and\n     * (16 - bi_valid) bits from value, leaving (width - (16-bi_valid))\n     * unused bits in value.\n     */\n    if(zip_bi_valid > zip_Buf_size - length) {\n\tzip_bi_buf |= (value << zip_bi_valid);\n\tzip_put_short(zip_bi_buf);\n\tzip_bi_buf = (value >> (zip_Buf_size - zip_bi_valid));\n\tzip_bi_valid += length - zip_Buf_size;\n    } else {\n\tzip_bi_buf |= value << zip_bi_valid;\n\tzip_bi_valid += length;\n    }\n}\n\n/* ==========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nvar zip_bi_reverse = function(\n\tcode,\t// the value to invert\n\tlen) {\t// its bit length\n    var res = 0;\n    do {\n\tres |= code & 1;\n\tcode >>= 1;\n\tres <<= 1;\n    } while(--len > 0);\n    return res >> 1;\n}\n\n/* ==========================================================================\n * Write out any remaining bits in an incomplete byte.\n */\nvar zip_bi_windup = function() {\n    if(zip_bi_valid > 8) {\n\tzip_put_short(zip_bi_buf);\n    } else if(zip_bi_valid > 0) {\n\tzip_put_byte(zip_bi_buf);\n    }\n    zip_bi_buf = 0;\n    zip_bi_valid = 0;\n}\n\nvar zip_qoutbuf = function() {\n    if(zip_outcnt != 0) {\n\tvar q, i;\n\tq = zip_new_queue();\n\tif(zip_qhead == null)\n\t    zip_qhead = zip_qtail = q;\n\telse\n\t    zip_qtail = zip_qtail.next = q;\n\tq.len = zip_outcnt - zip_outoff;\n//      System.arraycopy(zip_outbuf, zip_outoff, q.ptr, 0, q.len);\n\tfor(i = 0; i < q.len; i++)\n\t    q.ptr[i] = zip_outbuf[zip_outoff + i];\n\tzip_outcnt = zip_outoff = 0;\n    }\n}\n\nvar zip_deflate = function(str, level) {\n    var i, j;\n\n    zip_deflate_data = str;\n    zip_deflate_pos = 0;\n    if(typeof level == \"undefined\")\n\tlevel = zip_DEFAULT_LEVEL;\n    zip_deflate_start(level);\n\n    var buff = new Array(1024);\n    var aout = [];\n    while((i = zip_deflate_internal(buff, 0, buff.length)) > 0) {\n\tvar cbuf = new Array(i);\n\tfor(j = 0; j < i; j++){\n\t    cbuf[j] = String.fromCharCode(buff[j]);\n\t}\n\taout[aout.length] = cbuf.join(\"\");\n    }\n    zip_deflate_data = null; // G.C.\n    return aout.join(\"\");\n}\n\nif (! ctx.RawDeflate) ctx.RawDeflate = {};\nctx.RawDeflate.deflate = zip_deflate;\n\n})(this);\n\n"
			},
			{
				"name": "store2.min.js",
				"source": "/*! store2 - v2.7.0 - 2018-03-04\n* Copyright (c) 2018 Nathan Bubna; Licensed (MIT OR GPL-3.0) */\n\n!function(a,b){var c={version:\"2.7.0\",areas:{},apis:{},inherit:function(a,b){for(var c in a)b.hasOwnProperty(c)||(b[c]=a[c]);return b},stringify:function(a){return void 0===a||\"function\"==typeof a?a+\"\":JSON.stringify(a)},parse:function(a){try{return JSON.parse(a)}catch(b){return a}},fn:function(a,b){c.storeAPI[a]=b;for(var d in c.apis)c.apis[d][a]=b},get:function(a,b){return a.getItem(b)},set:function(a,b,c){a.setItem(b,c)},remove:function(a,b){a.removeItem(b)},key:function(a,b){return a.key(b)},length:function(a){return a.length},clear:function(a){a.clear()},Store:function(a,b,d){var e=c.inherit(c.storeAPI,function(a,b,c){return 0===arguments.length?e.getAll():\"function\"==typeof b?e.transact(a,b,c):void 0!==b?e.set(a,b,c):\"string\"==typeof a||\"number\"==typeof a?e.get(a):a?e.setAll(a,b):e.clear()});e._id=a;try{b.setItem(\"_-bad-_\",\"wolf\"),e._area=b,b.removeItem(\"_-bad-_\")}catch(a){}return e._area||(e._area=c.inherit(c.storageAPI,{items:{},name:\"fake\"})),e._ns=d||\"\",c.areas[a]||(c.areas[a]=e._area),c.apis[e._ns+e._id]||(c.apis[e._ns+e._id]=e),e},storeAPI:{area:function(a,b){var d=this[a];return d&&d.area||(d=c.Store(a,b,this._ns),this[a]||(this[a]=d)),d},namespace:function(a,b){if(!a)return this._ns?this._ns.substring(0,this._ns.length-1):\"\";var d=a,e=this[d];return e&&e.namespace||(e=c.Store(this._id,this._area,this._ns+d+\".\"),this[d]||(this[d]=e),b||e.area(\"session\",c.areas.session)),e},isFake:function(){return\"fake\"===this._area.name},toString:function(){return\"store\"+(this._ns?\".\"+this.namespace():\"\")+\"[\"+this._id+\"]\"},has:function(a){return this._area.has?this._area.has(this._in(a)):!!(this._in(a)in this._area)},size:function(){return this.keys().length},each:function(a,b){for(var d=0,e=c.length(this._area);d<e;d++){var f=this._out(c.key(this._area,d));if(void 0!==f&&a.call(this,f,b||this.get(f))===!1)break;e>c.length(this._area)&&(e--,d--)}return b||this},keys:function(a){return this.each(function(a,b){b.push(a)},a||[])},get:function(a,b){var d=c.get(this._area,this._in(a));return null!==d?c.parse(d):b||d},getAll:function(a){return this.each(function(a,b){b[a]=this.get(a)},a||{})},transact:function(a,b,c){var d=this.get(a,c),e=b(d);return this.set(a,void 0===e?d:e),this},set:function(a,b,d){var e=this.get(a);return null!=e&&d===!1?b:c.set(this._area,this._in(a),c.stringify(b),d)||e},setAll:function(a,b){var c,d;for(var e in a)d=a[e],this.set(e,d,b)!==d&&(c=!0);return c},add:function(a,b){var d=this.get(a);if(d instanceof Array)b=d.concat(b);else if(null!==d){var e=typeof d;if(e===typeof b&&\"object\"===e){for(var f in b)d[f]=b[f];b=d}else b=d+b}return c.set(this._area,this._in(a),c.stringify(b)),b},remove:function(a){var b=this.get(a);return c.remove(this._area,this._in(a)),b},clear:function(){return this._ns?this.each(function(a){c.remove(this._area,this._in(a))},1):c.clear(this._area),this},clearAll:function(){var a=this._area;for(var b in c.areas)c.areas.hasOwnProperty(b)&&(this._area=c.areas[b],this.clear());return this._area=a,this},_in:function(a){return\"string\"!=typeof a&&(a=c.stringify(a)),this._ns?this._ns+a:a},_out:function(a){return this._ns?a&&0===a.indexOf(this._ns)?a.substring(this._ns.length):void 0:a}},storageAPI:{length:0,has:function(a){return this.items.hasOwnProperty(a)},key:function(a){var b=0;for(var c in this.items)if(this.has(c)&&a===b++)return c},setItem:function(a,b){this.has(a)||this.length++,this.items[a]=b},removeItem:function(a){this.has(a)&&(delete this.items[a],this.length--)},getItem:function(a){return this.has(a)?this.items[a]:null},clear:function(){for(var a in this.items)this.removeItem(a)},toString:function(){return this.length+\" items in \"+this.name+\"Storage\"}}},d=c.Store(\"local\",function(){try{return localStorage}catch(a){}}());d.local=d,d._=c,d.area(\"session\",function(){try{return sessionStorage}catch(a){}}()),\"function\"==typeof b&&void 0!==b.amd?b(\"store2\",[],function(){return d}):\"undefined\"!=typeof module&&module.exports?module.exports=d:(a.store&&(c.conflict=a.store),a.store=d)}(this,this.define);\n//# sourceMappingURL=store2.min.js.map"
			},
			{
				"name": "Objectid.js",
				"source": "/*\n*\n* Copyright (c) 2011-2014- Justin Dearing (zippy1981@gmail.com)\n* Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\n* and GPL (http://www.opensource.org/licenses/gpl-license.php) version 2 licenses.\n* This software is not distributed under version 3 or later of the GPL.\n*\n* Version 1.0.2\n*\n*/\n\nif (!document) var document = { cookie: '' }; // fix crashes on node\n\n/**\n * Javascript class that mimics how WCF serializes a object of type MongoDB.Bson.ObjectId\n * and converts between that format and the standard 24 character representation.\n*/\nvar ObjectId = (function () {\n    var increment = Math.floor(Math.random() * (16777216));\n    var pid = Math.floor(Math.random() * (65536));\n    var machine = Math.floor(Math.random() * (16777216));\n\n    var setMachineCookie = function() {\n        var cookieList = document.cookie.split('; ');\n        for (var i in cookieList) {\n            var cookie = cookieList[i].split('=');\n            var cookieMachineId = parseInt(cookie[1], 10);\n            if (cookie[0] == 'mongoMachineId' && cookieMachineId && cookieMachineId >= 0 && cookieMachineId <= 16777215) {\n                machine = cookieMachineId;\n                break;\n            }\n        }\n        document.cookie = 'mongoMachineId=' + machine + ';expires=Tue, 19 Jan 2038 05:00:00 GMT;path=/';\n    };\n    if (typeof (localStorage) != 'undefined') {\n        try {\n            var mongoMachineId = parseInt(localStorage['mongoMachineId']);\n            if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n                machine = Math.floor(localStorage['mongoMachineId']);\n            }\n            // Just always stick the value in.\n            localStorage['mongoMachineId'] = machine;\n        } catch (e) {\n            setMachineCookie();\n        }\n    }\n    else {\n        setMachineCookie();\n    }\n\n    function ObjId() {\n        if (!(this instanceof ObjectId)) {\n            return new ObjectId(arguments[0], arguments[1], arguments[2], arguments[3]).toString();\n        }\n\n        if (typeof (arguments[0]) == 'object') {\n            this.timestamp = arguments[0].timestamp;\n            this.machine = arguments[0].machine;\n            this.pid = arguments[0].pid;\n            this.increment = arguments[0].increment;\n        }\n        else if (typeof (arguments[0]) == 'string' && arguments[0].length == 24) {\n            this.timestamp = Number('0x' + arguments[0].substr(0, 8)),\n            this.machine = Number('0x' + arguments[0].substr(8, 6)),\n            this.pid = Number('0x' + arguments[0].substr(14, 4)),\n            this.increment = Number('0x' + arguments[0].substr(18, 6))\n        }\n        else if (arguments.length == 4 && arguments[0] != null) {\n            this.timestamp = arguments[0];\n            this.machine = arguments[1];\n            this.pid = arguments[2];\n            this.increment = arguments[3];\n        }\n        else {\n            this.timestamp = Math.floor(new Date().valueOf() / 1000);\n            this.machine = machine;\n            this.pid = pid;\n            this.increment = increment++;\n            if (increment > 0xffffff) {\n                increment = 0;\n            }\n        }\n    };\n    return ObjId;\n})();\n\nObjectId.prototype.getDate = function () {\n    return new Date(this.timestamp * 1000);\n};\n\nObjectId.prototype.toArray = function () {\n    var strOid = this.toString();\n    var array = [];\n    var i;\n    for(i = 0; i < 12; i++) {\n        array[i] = parseInt(strOid.slice(i*2, i*2+2), 16);\n    }\n    return array;\n};\n\n/**\n* Turns a WCF representation of a BSON ObjectId into a 24 character string representation.\n*/\nObjectId.prototype.toString = function () {\n    if (this.timestamp === undefined\n        || this.machine === undefined\n        || this.pid === undefined\n        || this.increment === undefined) {\n        return 'Invalid ObjectId';\n    }\n\n    var timestamp = this.timestamp.toString(16);\n    var machine = this.machine.toString(16);\n    var pid = this.pid.toString(16);\n    var increment = this.increment.toString(16);\n    return '00000000'.substr(0, 8 - timestamp.length) + timestamp +\n           '000000'.substr(0, 6 - machine.length) + machine +\n           '0000'.substr(0, 4 - pid.length) + pid +\n           '000000'.substr(0, 6 - increment.length) + increment;\n};\n"
			},
			{
				"name": "zangodb.min.js",
				"source": "!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).zango=t()}}(function(){return function t(e,n,r){function i(u,a){if(!n[u]){if(!e[u]){var s=\"function\"==typeof require&&require;if(!a&&s)return s(u,!0);if(o)return o(u,!0);var f=new Error(\"Cannot find module '\"+u+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var c=n[u]={exports:{}};e[u][0].call(c.exports,function(t){var n=e[u][1][t];return i(n||t)},c,c.exports,t,e,n,r)}return n[u].exports}for(var o=\"function\"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}({1:[function(t,e,n){\"use strict\";var r=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),i=t(\"./util.js\").unknownOp,o=t(\"./cursor.js\"),u={$match:function(t,e){return t.filter(e)},$project:function(t,e){return t.project(e)},$group:function(t,e){return t.group(e)},$unwind:function(t,e){return t.unwind(e)},$sort:function(t,e){return t.sort(e)},$skip:function(t,e){return t.skip(e)},$limit:function(t,e){return t.limit(e)}},a=function(t){var e=Object.keys(t);if(e.length>1)throw Error(\"stages must be passed only one operator\");var n=e[0],r=u[n];return r||i(n),[r,t[n]]};e.exports=function(t,e){var n=new o(t,\"readonly\"),i=!0,u=!1,s=void 0;try{for(var f,c=e[Symbol.iterator]();!(i=(f=c.next()).done);i=!0){var l=f.value,p=a(l),h=r(p,2);(0,h[0])(n,h[1])}}catch(t){u=!0,s=t}finally{try{!i&&c.return&&c.return()}finally{if(u)throw s}}return n}},{\"./cursor.js\":4,\"./util.js\":21}],2:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),u=t(\"q\"),a=t(\"./util.js\").getIDBError,s=t(\"./cursor.js\"),f=t(\"./aggregate.js\"),c=t(\"./update.js\"),l=t(\"./remove.js\"),p=function(){function t(e,n){r(this,t),this._db=e,this._name=n,this._indexes=new Set}return o(t,[{key:\"_isIndexed\",value:function(t){return this._indexes.has(t)||\"_id\"===t}},{key:\"find\",value:function(t,e){var n=new s(this,\"readonly\");return n.filter(t),e&&n.project(e),n}},{key:\"findOne\",value:function(t,e,n){\"function\"==typeof e&&(n=e,e=null);var r=u.defer();return this.find(t,e).limit(1).toArray(function(t,e){t?r.reject(t):r.resolve(e[0])}),r.promise.nodeify(n),r.promise}},{key:\"aggregate\",value:function(t){return f(this,t)}},{key:\"_validate\",value:function(t){for(var e in t){if(\"$\"===e[0])throw Error(\"field name cannot start with '$'\");var n=t[e];if(Array.isArray(n)){var r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=a.value;this._validate(f)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}}else\"object\"===(void 0===n?\"undefined\":i(n))&&this._validate(n)}}},{key:\"insert\",value:function(t,e){var n=this;Array.isArray(t)||(t=[t]);var r=u.defer();return this._db._getConn(function(e,i){var o=void 0,u=n._name;try{o=i.transaction([u],\"readwrite\")}catch(e){return r.reject(e)}o.oncomplete=function(){return r.resolve()},o.onerror=function(t){return r.reject(a(t))};var s=o.objectStore(u),f=0;!function e(){var i=t[f];try{n._validate(i)}catch(t){return r.reject(t)}s.add(i).onsuccess=function(){++f<t.length&&e()}}()}),r.promise.nodeify(e),r.promise}},{key:\"_modify\",value:function(t,e,n){var r=u.defer(),i=new s(this,\"readwrite\");return i.filter(e),t(i,function(t){t?r.reject(t):r.resolve()}),r.promise.nodeify(n),r.promise}},{key:\"update\",value:function(t,e,n){return this._modify(function(t,n){return c(t,e,n)},t,n)}},{key:\"remove\",value:function(t,e){return this._modify(l,t,e)}},{key:\"name\",get:function(){return this._name}}]),t}();e.exports=p},{\"./aggregate.js\":1,\"./cursor.js\":4,\"./remove.js\":16,\"./update.js\":20,\"./util.js\":21,q:96}],3:[function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},i=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),o=t(\"deepmerge\"),u=t(\"./util.js\"),a=u.hashify,s=u.getIDBError,f=t(\"./filter.js\"),c=t(\"./sort.js\"),l=t(\"./lang/filter.js\"),p=l.build,h=l.Conjunction,y=l.Disjunction,d=l.Exists,v=function(t){return t>0?\"next\":\"prev\"},g=function(t){return t.length>1?new h(t):t[0]},b=function(t){var e=t.parent,n=t.index;e.args.splice(n,1)},m=function(t,e){var n=t.col,r=t.read_pref;n._db._getConn(function(t,i){if(t)return e(t);var o=n._name;try{var u=i.transaction([o],r);u.onerror=function(t){return e(s(t))},e(null,u.objectStore(o))}catch(t){e(t)}})},w=function(t,e){var n=e.idb_key_range||null,r=e.idb_direction||\"next\",i=e.path.literal;return(\"_id\"===i?t:t.index(i)).openCursor(n,r)},_=function(t){return t.openCursor()},j=function(t){var e=[],n=!0,r=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(n=(u=a.next()).done);n=!0){var s=i(u.value,2),c=s[0],l=s[1];if(c===f){var h=p(l);if(!1===h)return;if(!h)continue;l=h}e.push([c,l])}}catch(t){r=!0,o=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return e},x=function(t){var e=t.pipeline,n=[],r=[],u=0,a=!0,s=!1,l=void 0;try{for(var p,h=e[Symbol.iterator]();!(a=(p=h.next()).done);a=!0){var y=i(p.value,2),d=y[0],v=y[1];if(d===c)r.push(v);else{if(d!==f)break;n.push(v)}u++}}catch(t){s=!0,l=t}finally{try{!a&&h.return&&h.return()}finally{if(s)throw l}}e.splice(0,u),t.pred=g(n),r.length&&(t.sort_spec=r.reduce(o,{}))},O=function(t,e){if(!e)return[];var n=[],r=[],i=!0,o=!1,u=void 0;try{for(var a,s=e.getClauses()[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;t._isIndexed(f.path.literal)&&(f instanceof d?r.push(f):n.push(f))}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}return n.length?n:r},k=function(t){var e=t.col,n=t.pred;t.clauses=O(e,n)},E=function(t){if(t.hint){var e=t.clauses,n=t.hint,r=[],i=!0,o=!1,u=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;f.path.literal===n&&r.push(f)}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}r.length||(r=[{path:{literal:n}}]),t.clauses=r}},A=function(t){if(t.sort_spec){var e=t.clauses,n=t.sort_spec,r=t.pipeline,i=[],o=!0,u=!1,a=void 0;try{for(var s,f=e[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var l=s.value,p=l.path.literal;if(n.hasOwnProperty(p)){var h=n[p];l.idb_direction=v(h),i.push(l)}}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}i.length?t.clauses=i:r.unshift([c,n])}},S=function(t){var e=t.pred,n=t.clauses,i=t.pipeline,o=void 0;if(n.length){var u=function(){var t=n[0];if(o=function(e){return w(e,t)},!e||t===e)return{v:o};b(t)}();if(\"object\"===(void 0===u?\"undefined\":r(u)))return u.v}else if(o=_,!e)return o;return i.unshift([f,e]),o},I=function(t){var e=void 0,n=void 0,r=S(t),i=function(t){n.onsuccess=function(n){e=n.target.result,t()},n.onerror=function(e){return t(s(e))}},o=function(t){i(t),e.continue()},u=function(a){m(t,function(t,s){if(t)return a(t);n=r(s),i(function(t){e&&(u=o),a(t)})})};return function(t){return u(function(n){return t(n,e)})}},T=function(t,e){var n=t.pipeline,r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=i(a.value,2);e=(0,f[0])(e,f[1])}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return e},P=function(t){for(var e=[],n=t.pred.args,r=n.length-1;r>=0;r--){var i={col:t.col,read_pref:t.read_pref,pred:n[r],pipeline:[]};k(i);var o=B(i);e.push(T(i,o))}var u=new Set,s=function(t){var e=a(t._id);if(!u.has(e))return u.add(e)},f=function(){return e.pop()},l=f(),p=function(t){(l=f())?h(t):t()},h=function t(e){l(function(n,r,i){n?e(n):r?s(r)?e(null,r,i):t(e):p(e)})},y=t.sort_spec;return y&&t.pipeline.push([c,y]),h},B=function(t){var e=I(t);return function(t){e(function(e,n){n?t(null,n.value,n):t(e)})}};e.exports=function(t){var e=void 0;try{e=j(t._pipeline)}catch(t){return function(e){return e(t)}}if(!e)return function(t){return t()};var n={col:t._col,read_pref:t._read_pref,hint:t._hint,pipeline:e};x(n);var r=void 0;return n.pred instanceof y?r=P(n):(k(n),E(n),A(n),r=B(n)),T(n,r)}},{\"./filter.js\":6,\"./lang/filter.js\":11,\"./sort.js\":18,\"./util.js\":21,deepmerge:26}],4:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function i(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function o(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var u=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=t(\"events\"),s=t(\"q\"),f=t(\"./create_next_fn.js\"),c=t(\"./filter.js\"),l=t(\"./project.js\"),p=t(\"./group.js\"),h=t(\"./unwind.js\"),y=t(\"./sort.js\"),d=t(\"./skip.js\"),v=t(\"./limit.js\"),g=function(t){function e(t,n){r(this,e);var o=i(this,Object.getPrototypeOf(e).call(this));return o._col=t,o._read_pref=n,o._pipeline=[],o._next=o._init,o}return o(e,a),u(e,[{key:\"_forEach\",value:function(t,e){var n=this;this._next(function(r,i){i?(t(i),n.emit(\"data\",i),n._forEach(t,e)):(n.emit(\"end\"),e(r))})}},{key:\"forEach\",value:function(){var t=arguments.length<=0||void 0===arguments[0]?function(){}:arguments[0],e=arguments[1],n=s.defer();return this._forEach(t,function(t){t?n.reject(t):n.resolve()}),n.promise.nodeify(e),n.promise}},{key:\"_toArray\",value:function(t){var e=[];this._forEach(function(t){e.push(t)},function(n){return t(n,e)})}},{key:\"toArray\",value:function(t){var e=s.defer();return this._toArray(function(t,n){t?e.reject(t):e.resolve(n)}),e.promise.nodeify(t),e.promise}},{key:\"_assertUnopened\",value:function(){if(this._opened)throw Error(\"cursor has already been opened\")}},{key:\"hint\",value:function(t){if(this._assertUnopened(),!this._col._isIndexed(t))throw Error(\"index '\"+t+\"' does not exist\");return this._hint=t,this}},{key:\"_addStage\",value:function(t,e){return this._assertUnopened(),this._pipeline.push([t,e]),this}},{key:\"filter\",value:function(t){return this._addStage(c,t)}},{key:\"limit\",value:function(t){return this._addStage(v,t)}},{key:\"skip\",value:function(t){return this._addStage(d,t)}},{key:\"project\",value:function(t){return this._addStage(l,t)}},{key:\"group\",value:function(t){return this._addStage(p,t)}},{key:\"unwind\",value:function(t){return this._addStage(h,t)}},{key:\"sort\",value:function(t){return this._addStage(y,t)}},{key:\"_init\",value:function(t){this._opened=!0,this._next=f(this),this._next(t)}}]),e}();e.exports=g},{\"./create_next_fn.js\":3,\"./filter.js\":6,\"./group.js\":7,\"./limit.js\":14,\"./project.js\":15,\"./skip.js\":17,\"./sort.js\":18,\"./unwind.js\":19,events:71,q:96}],5:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function i(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function o(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=t(\"events\"),f=t(\"memoizee\"),c=t(\"q\"),l=t(\"./util.js\").getIDBError,p=t(\"./collection.js\"),h=function(t){function e(t,n,o){r(this,e);var a=i(this,Object.getPrototypeOf(e).call(this));if(a._name=t,\"object\"===(void 0===n?\"undefined\":u(n))?o=n:a._version=n,a._cols={},a._config={},a._initGetConn(),Array.isArray(o)){var s=!0,f=!1,c=void 0;try{for(var l,p=o[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){var h=l.value;a._addCollection(h),a._config[h]=!0}}catch(t){f=!0,c=t}finally{try{!s&&p.return&&p.return()}finally{if(f)throw c}}}else for(var y in o)a._addCollection(y),a._addIndex(o[y],y);return a}return o(e,s),a(e,[{key:\"_addCollection\",value:function(t){this._cols[t]=new p(this,t)}},{key:\"_addIndex\",value:function(t,e){var n=this._config;if(!t)return n[e]=!1;if(\"object\"!==(void 0===t?\"undefined\":u(t)))return n[e]={};var r=this._cols[e];if(Array.isArray(t)){var i={},o=!0,a=!1,s=void 0;try{for(var f,c=t[Symbol.iterator]();!(o=(f=c.next()).done);o=!0){var l=f.value;i[l]=!0,r._indexes.add(l)}}catch(t){a=!0,s=t}finally{try{!o&&c.return&&c.return()}finally{if(a)throw s}}n[e]=i}else{for(var p in t)t[p]&&r._indexes.add(p);n[e]=t}}},{key:\"_addStore\",value:function(t,e){var n=t.createObjectStore(e,{keyPath:\"_id\",autoIncrement:!0}),r=this._config[e];for(var i in r)r[i]?n.createIndex(i,i,{unique:!1}):n.deleteIndex(i)}},{key:\"_getConn\",value:function(t){var e=this,n=void 0;(n=this._version?indexedDB.open(this._name,this._version):indexedDB.open(this._name)).onsuccess=function(n){var r=n.target.result;e._idb=r,e._version=r.version,e._open=!0,t(null,r)},n.onerror=function(e){return t(l(e))},n.onupgradeneeded=function(n){var r=n.target.result;for(var i in e._config)try{e._config[i]?r.objectStoreNames.contains(i)||e._addStore(r,i):r.deleteObjectStore(i)}catch(e){return t(e)}},n.onblocked=function(){return e.emit(\"blocked\")}}},{key:\"_initGetConn\",value:function(){this._getConn=f(this._getConn,{async:!0})}},{key:\"collection\",value:function(t){var e=this._cols[t];if(!e)throw Error(\"collection '\"+t+\"' does not exist\");return e}},{key:\"open\",value:function(t){var e=this,n=c.defer();return this._getConn(function(t){t?n.reject(t):n.resolve(e)}),n.promise.nodeify(t),n.promise}},{key:\"close\",value:function(){this._open&&(this._idb.close(),this._open=!1,this._initGetConn())}},{key:\"drop\",value:function(t){this.close();var e=c.defer(),n=indexedDB.deleteDatabase(this._name);return n.onsuccess=function(){return e.resolve()},n.onerror=function(t){return e.reject(l(t))},e.promise.nodeify(t),e.promise}},{key:\"name\",get:function(){return this._name}},{key:\"version\",get:function(){return this._version}}]),e}();e.exports=h},{\"./collection.js\":2,\"./util.js\":21,events:71,memoizee:81,q:96}],6:[function(t,e,n){\"use strict\";var r=t(\"./lang/fields.js\");e.exports=function(t,e){return function(n){!function i(){t(function(t,o,u){o?e.run(new r(o))?n(null,o,u):i():n(t)})}()}}},{\"./lang/fields.js\":10}],7:[function(t,e,n){\"use strict\";function r(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function i(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},a=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if(\"value\"in i)return i.value;var u=i.get;if(void 0!==u)return u.call(r)},s=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),f=t(\"memoizee\"),c=t(\"./util.js\"),l=c.unknownOp,p=c.hashify,h=t(\"./lang/expression.js\"),y=t(\"./lang/fields.js\"),d=function(){function t(){o(this,t)}return s(t,[{key:\"getOpValueWithRefs\",value:function(t,e,n){var r=t.ast,i=t.fields;n(r.run(i))}},{key:\"value\",get:function(){return this._value}}],[{key:\"getNoRefsSteps\",value:function(t){return t.in_iter}},{key:\"getOpValue\",value:function(t,e){e(t.ast.run())}}]),t}(),v=function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._value=0,t}return i(e,d),s(e,[{key:\"getOpValueWithRefs\",value:function(t,n,r){a(Object.getPrototypeOf(e.prototype),\"getOpValueWithRefs\",this).call(this,t,n,function(t){e._verify(t,r)})}},{key:\"add\",value:function(t){this._value+=t}}],[{key:\"_verify\",value:function(t,e){\"number\"==typeof t&&e(t)}},{key:\"getOpValue\",value:function(t,n){a(Object.getPrototypeOf(e),\"getOpValue\",this).call(this,t,function(t){return e._verify(t,n)})}}]),e}(),g=function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._count=0,t}return i(e,v),s(e,[{key:\"add\",value:function(t){this._count++,a(Object.getPrototypeOf(e.prototype),\"add\",this).call(this,t)}},{key:\"value\",get:function(){return this._value/this._count||0}}]),e}(),b=function(t){function e(t){o(this,e);var n=r(this,Object.getPrototypeOf(e).call(this));return n._value=null,n._fn=t,n._add=n._add1,n}return i(e,d),s(e,[{key:\"_add1\",value:function(t){this._value=t,this._add=this._add2}},{key:\"_add2\",value:function(t){this._fn(t,this._value)&&(this._value=t)}},{key:\"add\",value:function(t){null!=t&&this._add(t)}}],[{key:\"getNoRefsSteps\",value:function(t){return t.in_end}}]),e}(),m=function(t){for(var e=arguments.length,n=Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];var i=!0,o=!1,u=void 0;try{for(var a,s=t[Symbol.iterator]();!(i=(a=s.next()).done);i=!0)a.value.apply(void 0,n)}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}},w=function(t,e){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0){var a=o.value;m(t,a)}}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}},_=function(t,e,n,r){return function(i){var o=function(t){t||w(e,n),i(t,n)};!function e(){t(function(t,n){if(!n)return o(t);r(n),e()})}()}},j=function(t,e,n){var r=n.in_start,i=n.in_iter,o=n.in_end,u=[],a=f(function(t,e){var n={_id:e};return u.push(n),m(r,n),n},{length:1}),s=e.ast,c=function(t){return s.run(new y(t))},l=void 0;return l=i.length?function(t){var e=c(t),n=a(p(e),e);m(i,n,t)}:function(t){var e=c(t);a(p(e),e)},_(t,o,u,l)},x=function(t,e,n){if(e.has_refs)return j(t,e,n);var r=n.in_start,i=n.in_iter,o=n.in_end,a=[],s=function(){var t={_id:e.ast.run()};return m(r,t),a.push(t),t};if(i.length){var c=function(){var e=f(function(){return s()});return{v:_(t,o,a,function(t){m(i,e(),t)})}}();if(\"object\"===(void 0===c?\"undefined\":u(c)))return c.v}return function(e){t(function(t,n){n&&(s(),w(o,a)),e(t,a)})}},O={$sum:v,$avg:g,$min:function(t){function e(){return o(this,e),r(this,Object.getPrototypeOf(e).call(this,function(t,e){return t<e}))}return i(e,b),e}(),$max:function(t){function e(){return o(this,e),r(this,Object.getPrototypeOf(e).call(this,function(t,e){return t>e}))}return i(e,b),e}(),$push:function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._value=[],t}return i(e,d),s(e,[{key:\"add\",value:function(t){this._value.push(t)}}]),e}(),$addToSet:function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._hashes={},t}return i(e,d),s(e,[{key:\"add\",value:function(t){this._hashes[p(t)]=t}},{key:\"value\",get:function(){var t=[];for(var e in this._hashes)t.push(this._hashes[e]);return t}}],[{key:\"getNoRefsSteps\",value:function(t){return t.in_end}}]),e}()},k=function(t,e,n){var r=t.in_start,i=t.in_iter,o=t.in_end,u=Object.keys(n);if(u.length>1)throw Error(\"fields must have only one operator\");var a=u[0],s=O[a];if(!s)throw\"$\"===a[0]&&l(a),Error(\"unexpected field '\"+a+\"'\");var f=h(n[a]);r.push(function(t){t[e]=new s(f)}),f.has_refs?i.push(function(t,n){var r=new y(n);if(r.ensure(f.paths)){var i=t[e],o=Object.assign({fields:r},f);i.getOpValueWithRefs(o,n,function(t){return i.add(t)})}}):s.getOpValue(f,function(n){s.getNoRefsSteps(t).push(function(t){t[e].add(n)})}),o.push(function(t){t[e]=t[e].value})};e.exports=function(t,e){if(!e.hasOwnProperty(\"_id\"))throw Error(\"the '_id' field is missing\");var n=h(e._id),r=Object.assign({},e);delete r._id;var i={in_start:[],in_iter:[],in_end:[]};for(var o in r)k(i,o,r[o]);var u=x(t,n,i),a=function(t){u(function(e,n){e?t(e):(a=function(t){return t(null,n.pop())})(t)})};return function(t){return a(t)}}},{\"./lang/expression.js\":9,\"./lang/fields.js\":10,\"./util.js\":21,memoizee:81}],8:[function(t,e,n){\"use strict\";e.exports={Db:t(\"./db.js\")}},{\"./db.js\":5}],9:[function(t,e,n){\"use strict\";function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function i(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function o(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function u(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=t(\"../util.js\").unknownOp,f=t(\"./missing_symbol.js\"),c=t(\"./path.js\"),l=function(){function t(e){u(this,t),this.value=e}return a(t,[{key:\"run\",value:function(){return this.value}},{key:\"ResultType\",get:function(){return this.constructor}}],[{key:\"any\",value:function(e){return\"number\"==typeof e?new p(e):\"string\"==typeof e?new h(e):Array.isArray(e)?new y(e):e instanceof Date?new d(e):new t(e)}},{key:\"literal\",value:function(e){return new v(t.any(e))}}]),t}(),p=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return\"number\"==typeof t}}]),e}(),h=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return\"string\"==typeof t}}]),e}(),y=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return Array.isArray(t)}}]),e}(),d=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\"isType\",value:function(t){return t instanceof Date}}]),e}(),v=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,[{key:\"run\",value:function(){return this.value.run()}},{key:\"ResultType\",get:function(){return this.value.ResultType}}]),e}(),g=function(){function t(e){u(this,t),this.path=e}return a(t,[{key:\"run\",value:function(t){var e=t.get(this.path);return e===f?null:e}}]),t}(),b=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,[{key:\"run\",value:function(t){var e={},n=this.value;for(var r in n)e[r]=n[r].run(t);return e}}]),e}(),m=function(){function t(){u(this,t),this.args=[]}return a(t,[{key:\"add\",value:function(t){this.args.push(t)}},{key:\"alt\",get:function(){return new l(null)}}]),t}(),w=function(t){function e(t){u(this,e);var n=i(this,Object.getPrototypeOf(e).call(this));return n.fn=t,n}return o(e,m),a(e,[{key:\"run\",value:function(t){var e=this.args,n=this.fn;return e.map(function(e){return e.run(t)}).reduce(n)}},{key:\"length\",get:function(){return 1/0}}]),e}(),_=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,w),a(e,[{key:\"run\",value:function(t){return this.fn(this.args[0].run(t))}},{key:\"length\",get:function(){return 1}}]),e}(),j=function(t,e){return function(n){function r(){return u(this,r),i(this,Object.getPrototypeOf(r).call(this,e))}return o(r,t),r}()},x=function(t,e){var n=arguments.length<=2||void 0===arguments[2]?e:arguments[2],r=function(e){function n(){return u(this,n),i(this,Object.getPrototypeOf(n).apply(this,arguments))}return o(n,t),n}();return r.prototype.InputType=e,r.prototype.ResultType=n,r},O=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,p)),e}(),k=function(t){return j(O,t)},E=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t+e})),e}(),A=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t-e})),e}(),S=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t*e})),e}(),I=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t/e})),e}(),T=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t%e})),e}(),P=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,p)),a(e,[{key:\"run\",value:function(t){return this.fn.apply(this,r(this.args.map(function(e){return e.run(t)})))}},{key:\"length\",get:function(){return this.fn.length}}]),e}(),B=function(t){return j(P,t)},C=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.abs)),e}(),L=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.ceil)),e}(),U=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.floor)),e}(),R=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.log)),e}(),$=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.log10)),e}(),N=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.pow)),e}(),M=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.sqrt)),e}(),D=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.trunc)),e}(),z=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,h)),e}(),F=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(z,function(t,e){return t+e})),e}(),Y=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(_,h)),a(e,[{key:\"alt\",get:function(){return new h(\"\")}}]),e}(),q=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Y,function(t){return t.toLowerCase()})),e}(),V=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Y,function(t){return t.toUpperCase()})),e}(),Q=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,y)),e}(),K=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Q,function(t,e){return t.concat(e)})),e}(),W=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(_,d,p)),e}(),H=function(t){return j(W,t)},J=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getDate()})),e}(),G=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCFullYear()})),e}(),X=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMonth()+1})),e}(),Z=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCHours()})),e}(),tt=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMinutes()})),e}(),et=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCSeconds()})),e}(),nt=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMilliseconds()})),e}(),rt=function(){function t(e,n,r){u(this,t);var i=r.InputType,o=r.alt;this.result_types=new Set([r.ResultType,o.ResultType]),this.stack=e,this.isType=i.isType,this.args=n,this.op=r,this.alt_value=o.value}return a(t,[{key:\"run\",value:function(t){var e=this.stack,n=this.isType,r=this.op,i=[],o=!0,u=!1,a=void 0;try{for(var s,f=this.args[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value.run(t);if(!n(c))return this.alt_value;i.push(c)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}for(var l=i.length-1;l>=0;l--)e.push(i[l]);return r.run(t)}}]),t}(),it=function(){function t(e){u(this,t),this.stack=e}return a(t,[{key:\"run\",value:function(){return this.stack.pop()}}]),t}(),ot={$add:E,$subtract:A,$multiply:S,$divide:I,$mod:T,$abs:C,$ceil:L,$floor:U,$ln:R,$log10:$,$pow:N,$sqrt:M,$trunc:D,$concat:F,$toLower:q,$toUpper:V,$concatArrays:K,$dayOfMonth:J,$year:G,$month:X,$hour:Z,$minute:tt,$second:et,$millisecond:nt},ut=function(t,e,n){var r=ot[e];r||s(e),Array.isArray(n)||(n=[n]);for(var i=new r,o=[],u=[],a=[],f=0;f<n.length&&f<i.length;f++){var c=st(u,n[f]);if(c.ResultType){if(c.ResultType!==i.InputType)return i.alt;i.add(c)}else{if(c instanceof rt){if(!c.result_types.has(i.InputType))return i.alt;if(1===c.result_types.size){i.add(c);continue}}o.push(c),i.add(new it(a))}}return u.length?(t.push.apply(t,u),o.length?new rt(a,o,i):i):new i.ResultType(i.run())},at=function(t,e){var n=new Set,r=new Set;for(var i in e)(\"$\"===i[0]?n:r).add(i);if(n.size>1)throw Error(\"objects cannot have more than one operator\");if(n.size){var o=!0,u=!1,a=void 0;try{for(var s,f=r[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value;throw Error(\"unexpected field '\"+c+\"'\")}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}var p=!0,h=!1,y=void 0;try{for(var d,v=n[Symbol.iterator]();!(p=(d=v.next()).done);p=!0){var g=d.value;return\"$literal\"===g?l.literal(e[g]):ut(t,g,e[g])}}catch(t){h=!0,y=t}finally{try{!p&&v.return&&v.return()}finally{if(h)throw y}}}var m=[],w={};for(var _ in e)w[_]=st(m,e[_]);var j=new b(w);return m.length?(t.push.apply(t,m),j):new l(j.run())},st=function(t,e){if(\"string\"==typeof e&&\"$\"===e[0]){var n=new c(e.substring(1));return t.push(n),new g(n)}return null==e||e.constructor!==Object?l.any(e):at(t,e)};e.exports=function(t){var e=[];return{ast:st(e,t),paths:e,has_refs:!!e.length}}},{\"../util.js\":21,\"./missing_symbol.js\":12,\"./path.js\":13}],10:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=t(\"memoizee\"),u=t(\"../util.js\").get,a=t(\"./missing_symbol.js\"),s=function(){function t(e){r(this,t),this._doc=e,this.get=o(this.get)}return i(t,[{key:\"get\",value:function(t){var e=a;return u(this._doc,t.pieces,function(t,n){e=t[n]}),e}},{key:\"ensure\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=t[Symbol.iterator]();!(e=(i=o.next()).done);e=!0){var u=i.value;if(this.get(u)===a)return!1}}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!0}}]),t}();e.exports=s},{\"../util.js\":21,\"./missing_symbol.js\":12,memoizee:81}],11:[function(t,e,n){\"use strict\";function r(t){return Array.isArray(t)?t:Array.from(t)}function i(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function o(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function u(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var s=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if(\"value\"in i)return i.value;var u=i.get;if(void 0!==u)return u.call(r)},f=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=t(\"../util.js\"),l=c.isObject,p=c.equal,h=c.unknownOp,y=t(\"./missing_symbol.js\"),d=t(\"./path.js\"),v=t(\"./fields.js\"),g=function t(e){if(\"number\"==typeof e)return!isNaN(e);if(\"string\"==typeof e)return!0;if(\"boolean\"==typeof e)return!0;if(!e)return!1;if(e.constructor===Object)return!1;if(Array.isArray(e)){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0)if(!t(o.value))return!1}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}return!0}return e instanceof Date&&!isNaN(e.valueOf())},b=function(){function t(){a(this,t)}return f(t,[{key:\"getClauses\",value:function(){return this.is_index_matchable?[this]:[]}}]),t}(),m=function(t){function e(t){a(this,e);var n=o(this,Object.getPrototypeOf(e).call(this));return n.args=t,n}return u(e,b),e}(),w=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,m),f(e,[{key:\"getClauses\",value:function(){for(var t=[],e=0;e<this.args.length;e++){var n=this.args[e];n instanceof m?t.push.apply(t,i(n.getClauses())):n.is_index_matchable&&(n.parent=this,n.index=e,t.push(n))}return t}},{key:\"run\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=this.args[Symbol.iterator]();!(e=(i=o.next()).done);e=!0)if(!i.value.run(t))return!1}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!0}}]),e}(),_=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,m),f(e,[{key:\"getClauses\",value:function(){return[]}},{key:\"run\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=this.args[Symbol.iterator]();!(e=(i=o.next()).done);e=!0)if(i.value.run(t))return!0}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!1}}]),e}(),j=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,w),f(e,[{key:\"getClauses\",value:function(){return[]}},{key:\"run\",value:function(t){return!s(Object.getPrototypeOf(e.prototype),\"run\",this).call(this,t)}}]),e}(),x=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.bool=n,r}return u(e,b),f(e,[{key:\"run\",value:function(t){return t.get(this.path)!==y===this.bool}},{key:\"is_index_matchable\",get:function(){return!!this.bool}}]),e}(),O=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.value=n,r}return u(e,b),f(e,[{key:\"run\",value:function(t){var e=t.get(this.path);return e!==y&&p(e,this.value)}},{key:\"is_index_matchable\",get:function(){return g(this.value)}},{key:\"idb_key_range\",get:function(){return IDBKeyRange.only(this.value)}}]),e}(),k=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,O),f(e,[{key:\"run\",value:function(t){return!s(Object.getPrototypeOf(e.prototype),\"run\",this).call(this,t)}},{key:\"is_index_matchable\",get:function(){return!1}}]),e}(),E=function(t){function e(t,n,r){a(this,e);var i=o(this,Object.getPrototypeOf(e).call(this));return i.path=t,i.fns=n,i.values=r,i}return u(e,b),f(e,[{key:\"run\",value:function(t){var e=t.get(this.path);if(e===y||null==e)return!1;for(var n=this.fns,r=this.values,i=0;i<n.length;i++)if(!n[i](e,r[i]))return!1;return!0}},{key:\"is_index_matchable\",get:function(){return!0}}]),e}(),A=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(t){function n(t,r){return a(this,n),o(this,Object.getPrototypeOf(n).call(this,t,e,r))}return u(n,E),n}()},S=function(t,e){return t>e},I=function(t,e){return t>=e},T=function(t,e){return t<e},P=function(t,e){return t<=e},B=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).lowerBound.apply(t,i(this.values).concat([!0]))}}]),e}(),C=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).lowerBound.apply(t,i(this.values))}}]),e}(),L=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(T)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).upperBound.apply(t,i(this.values).concat([!0]))}}]),e}(),U=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(P)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).upperBound.apply(t,i(this.values))}}]),e}(),R=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S,T)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!0,!0]))}}]),e}(),$=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I,T)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!1,!0]))}}]),e}(),N=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S,P)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!0,!1]))}}]),e}(),M=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I,P)),f(e,[{key:\"idb_key_range\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values))}}]),e}(),D=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.op=n,r}return u(e,b),f(e,[{key:\"run\",value:function(t){var e=t.get(this.path);if(!e||!e[Symbol.iterator])return!1;var n=this.op,r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done);r=!0){var s=u.value;if(l(s)&&n.run(new v(s)))return!0}}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return!1}},{key:\"is_index_matchable\",get:function(){return!1}}]),e}(),z=function(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done);r=!0){var s=u.value,f=Q(s);f&&n.push(f)}}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n.length&&t.push(new j(n)),!0},F={$and:function(t,e){var n=!0,r=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(n=(u=a.next()).done);n=!0){var s=u.value,f=Q(s);if(!1===f)return!1;f&&(f.constructor===w?t.push.apply(t,i(f.args)):t.push(f))}}catch(t){r=!0,o=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return!0},$or:function(t,e){var n=[],r=void 0,o=!0,u=!1,a=void 0;try{for(var s,f=e[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value,l=Q(c);l?l.constructor===_?n.push.apply(n,i(l.args)):n.push(l):!1===l&&(r=!0)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}if(n.length>1)t.push(new _(n));else if(n.length)t.push(n[0]);else if(r)return!1;return!0},$not:z,$nor:z},Y=[[R,\"$gt\",\"$lt\"],[$,\"$gte\",\"$lt\"],[N,\"$gt\",\"$lte\"],[M,\"$gte\",\"$lte\"],[B,\"$gt\"],[C,\"$gte\"],[L,\"$lt\"],[U,\"$lte\"]],q=function(t,e,n,i){var o=!0,u=!1,a=void 0;try{for(var s,f=Y[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=r(s.value),l=function(r,o){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=o[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;if(!i.has(p))return;var h=n[p];if(!g(h))return!1;u.push(h)}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}return t.push(new r(e,u)),!0}(c[0],c.slice(1));if(!1===l)return;if(l){i.delete(\"$gt\"),i.delete(\"$gte\"),i.delete(\"$lt\"),i.delete(\"$lte\");break}}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}return!0},V=function(t,e,n){var r=function(){return t.push(new O(e,n)),!0};if(null==n||n.constructor!==Object)return r();var i=new Set(Object.keys(n));if(i.has(\"$exists\")&&!n.$exists)return t.push(new x(e,!1)),!0;var o=[];if(i.has(\"$eq\")&&(o.push(new O(e,n.$eq)),i.delete(\"$eq\")),i.has(\"$ne\")&&(o.push(new k(e,n.$ne)),i.delete(\"$ne\")),!q(o,e,n,i))return!1;if(i.has(\"$in\")){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=n.$in[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;u.push(new O(e,p))}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}u.length>1?o.push(new _(u)):u.length&&o.push(u[0]),i.delete(\"$in\")}if(i.has(\"$nin\")){var y=!0,d=!1,v=void 0;try{for(var g,b=n.$nin[Symbol.iterator]();!(y=(g=b.next()).done);y=!0){var m=g.value;o.push(new k(e,m))}}catch(t){d=!0,v=t}finally{try{!y&&b.return&&b.return()}finally{if(d)throw v}}i.delete(\"$nin\")}if(i.has(\"$elemMatch\")){var w=Q(n.$elemMatch);w&&o.push(new D(e,w)),i.delete(\"$elemMatch\")}n.$exists&&!o.length&&(o.push(new x(e,!0)),i.delete(\"$exists\"));var j=!0,E=!1,A=void 0;try{for(var S,I=i[Symbol.iterator]();!(j=(S=I.next()).done);j=!0){var T=S.value;\"$\"===T[0]&&h(T)}}catch(t){E=!0,A=t}finally{try{!j&&I.return&&I.return()}finally{if(E)throw A}}return o.length?(t.push.apply(t,o),!0):r()},Q=function(t){var e=[];for(var n in t){var r=t[n],i=void 0;if(\"$\"!==n[0])i=V(e,new d(n),r);else{Array.isArray(r)||(r=[r]);var o=F[n];o||h(n),i=o(e,r)}if(!i)return i}if(e.length)return 1===e.length?e[0]:new w(e)};e.exports.build=Q,e.exports.Conjunction=w,e.exports.Disjunction=_,e.exports.Exists=x},{\"../util.js\":21,\"./fields.js\":10,\"./missing_symbol.js\":12,\"./path.js\":13}],12:[function(t,e,n){\"use strict\";e.exports=Symbol(\"missing\")},{}],13:[function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var i=t(\"../util.js\").toPathPieces;e.exports=function t(e){r(this,t),this.pieces=i(e),this.literal=e}},{\"../util.js\":21}],14:[function(t,e,n){\"use strict\";e.exports=function(t,e){var n=0;return function(r){n++<e?t(r):r()}}},{}],15:[function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},i=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),o=t(\"./util.js\"),u=o.toPathPieces,a=o.set,s=o.remove2,f=o.copy,c=t(\"./lang/expression.js\"),l=t(\"./lang/fields.js\"),p=function(t,e,n){var r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=i(a.value,2),c=f[0];(0,f[1])(t,e,c)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return e},h=function(t){var e=c(t),n=e.ast,i=e.paths;if(!e.has_refs){var o=function(){var t=n.run();return{v:function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return a.apply(void 0,r.concat([t]))}}}();if(\"object\"===(void 0===o?\"undefined\":r(o)))return o.v}return function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),o=1;o<e;o++)r[o-1]=arguments[o];var u=new l(t);u.ensure(i)&&a.apply(void 0,r.concat([n.run(u)]))}};e.exports=function(t,e){var n=function(t){return!!e[t]},r=!0;e.hasOwnProperty(\"_id\")&&(r=n(\"_id\"),delete e._id);var i=[],o=[],a=!0,c=function(t){if(n(t)!==a)throw Error(\"cannot mix inclusions and exclusions\")},l=function(t){a=n(t),l=c};for(var y in e){var d=e[y],v=u(y);\"boolean\"==typeof d||1===d||0===d?(l(y),i.push(v)):o.push([v,h(d)])}var g=[];o.length&&g.push(function(t,e){return p(t,e,o)}),i.length?function(){a===r&&i.push([\"_id\"]);var t=a?f:s;g.push(function(e){return t(e,i)})}():function(){var t=void 0;t=r?function(t,e){t.hasOwnProperty(\"_id\")&&(e._id=t._id)}:function(t,e){delete e._id},g.push(function(e,n){return t(e,n),n})}();return function(e){t(function(t,n){if(!n)return e(t);var r=n,i=!0,o=!1,u=void 0;try{for(var a,s=g[Symbol.iterator]();!(i=(a=s.next()).done);i=!0)r=(0,a.value)(n,r)}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}e(null,r)})}}},{\"./lang/expression.js\":9,\"./lang/fields.js\":10,\"./util.js\":21}],16:[function(t,e,n){\"use strict\";var r=t(\"./util.js\").getIDBError;e.exports=function(t,e){!function n(){t._next(function(t,i,o){if(!i)return e(t);var u=o.delete();u.onsuccess=n,u.onerror=function(t){return e(r(t))}})}()}},{\"./util.js\":21}],17:[function(t,e,n){\"use strict\";e.exports=function(t,e){var n=0;return function r(i){t(function(t,o){o?++n>e?i(null,o):r(i):i(t)})}}},{}],18:[function(t,e,n){\"use strict\";var r=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),i=t(\"./util.js\"),o=i.toPathPieces,u=i.isObject,a=i.equal,s=function(t,e,n,r){for(var i=0;i<n.length-1;i++){var o=n[i];if(t=t[o],e=e[o],u(t)){if(u(e))continue}else if(!u(e))return null;return r}var s=n[i];if(t.hasOwnProperty(s)){if(e.hasOwnProperty(s))return t=t[s],e=e[s],a(t,e)?0:(t<e?1:-1)*r}else if(!e.hasOwnProperty(s))return null;return r};e.exports=function(t,e){var n=[];for(var i in e)n.push([o(i),e[i]]);var u=function(t,e){var i=!0,o=!1,u=void 0;try{for(var a,f=n[Symbol.iterator]();!(i=(a=f.next()).done);i=!0){var c=r(a.value,2),l=c[0],p=c[1],h=s(t,e,l,p);if(h>0||h<0)return h}}catch(t){o=!0,u=t}finally{try{!i&&f.return&&f.return()}finally{if(o)throw u}}return-p},a=[],f=function(t){return t(null,a.pop())},c=function(e){var n=function(t){if(t)return e(t);a=a.sort(u),(c=f)(e)};!function e(){t(function(t,r){if(!r)return n(t);a.push(r),e()})}()};return function(t){return c(t)}}},{\"./util.js\":21}],19:[function(t,e,n){\"use strict\";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var i=t(\"./util.js\"),o=i.toPathPieces,u=i.get;e.exports=function(t,e){var n=o(e.substring(1)),i=[],a=function(t){return t(null,i.pop())},s=function(t,e){var o=i.length;if(u(t,n,function(t,e){var n=t[e];if(n&&n[Symbol.iterator]){var o=!0,u=!1,a=void 0;try{for(var s,f=n[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value;i.push(r({},e,c))}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}}}),o===i.length)return f(e);a(e)},f=function(e){t(function(t,n){t?e(t):n?s(n,e):(f=a)(e)})};return function(t){return f(t)}}},{\"./util.js\":21}],20:[function(t,e,n){\"use strict\";var r=t(\"./util.js\"),i=r.toPathPieces,o=r.get,u=r.set,a=r.modify,s=r.remove1,f=r.rename,c=r.equal,l=r.unknownOp,p=r.getIDBError,h={};h.$set=function(t,e){return function(n){u(n,t,e)}},h.$unset=function(t){return function(e){return s(e,t)}},h.$rename=function(t,e){return function(n){f(n,t,e)}};var y=function(t,e,n){return function(r){a(r,t,e,n)}},d=function(t){return function(e,n){return y(e,function(e,r){var i=e[r];\"number\"==typeof i&&(e[r]=t(n,i))},function(t,e){return t[e]=0})}};h.$inc=d(function(t,e){return t+e}),h.$mul=d(function(t,e){return t*e});var v=function(t){return function(e,n){return y(e,function(e,r){t(n,e[r])&&(e[r]=n)},function(t,e){return t[e]=n})}};h.$min=v(function(t,e){return t<e}),h.$max=v(function(t,e){return t>e}),h.$push=function(t,e){return y(t,function(t,n){var r=t[n];Array.isArray(r)&&r.push(e)},function(t,n){return t[n]=[e]})},h.$pop=function(t,e){var n=void 0;return n=e<1?function(t){return t.shift()}:function(t){return t.pop()},function(e){o(e,t,function(t,e){var r=t[e];Array.isArray(r)&&n(r)})}},h.$pullAll=function(t,e){return function(n){o(n,t,function(t,n){var r=t[n];if(Array.isArray(r)){var i=[],o=!0,u=!1,a=void 0;try{for(var s,f=r[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var l=s.value;(function(t){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0){var a=o.value;if(c(t,a))return!0}}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}})(l)||i.push(l)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}t[n]=i}})}},h.$pull=function(t,e){return h.$pullAll(t,[e])},h.$addToSet=function(t,e){return function(n){o(n,t,function(t,n){var r=t[n];if(Array.isArray(r)){var i=!0,o=!1,u=void 0;try{for(var a,s=r[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;if(c(f,e))return}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}r.push(e)}})}};var g=function(t,e,n){if(\"$\"!==e[0])return t.push(h.$set(i(e),n));var r=h[e];r||l(e);for(var o in n)t.push(r(i(o),n[o]))};e.exports=function(t,e,n){var r=[];for(var i in e)g(r,i,e[i]);if(!r.length)return n(null);!function e(){t._next(function(t,i,o){if(!i)return n(t);var u=!0,a=!1,s=void 0;try{for(var f,c=r[Symbol.iterator]();!(u=(f=c.next()).done);u=!0)(0,f.value)(i)}catch(t){a=!0,s=t}finally{try{!u&&c.return&&c.return()}finally{if(a)throw s}}var l=o.update(i);l.onsuccess=e,l.onerror=function(t){return n(p(t))}})}()}},{\"./util.js\":21}],21:[function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},i=t(\"deepmerge\"),o=t(\"clone\"),u=t(\"object-hash\"),a=function(t,e){for(var n=0;n<e.length-1;n++){var r=e[n];if(!t.hasOwnProperty(r))return;if(t=t[r],!c(t))return}if(t.hasOwnProperty(e[n]))return t},s=function(t,e,n){for(var r=n;r<e.length-1;r++)t[e[r]]={},t=t[e[r]];return t},f=function(t,e,n){(t=a(t,e))&&n(t,e[e.length-1])},c=function(t){return\"object\"===(void 0===t?\"undefined\":r(t))&&null!==t},l=function(t,e,n,r){var i=e[e.length-1],o=function(n){t=s(t,e,n),r(t,i)};if(!t.hasOwnProperty(e[0]))return o(0);if(e.length>1){t=t[e[0]];for(var u=1;u<e.length-1;u++){var a=e[u];if(!c(t[a]))return;if(Array.isArray(t)&&a<0)return;if(!t.hasOwnProperty(a))return o(u);t=t[a]}}n(t,i)},p=function t(e,n,r){for(var i in e)!function(i){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=r[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;if(p[0]===i){if(1===p.length)return;u.push(p.slice(1))}}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}if(u.length){var h=e[i];n[i]=new h.constructor,t(h,n[i],u)}else n[i]=o(e[i])}(i)},h=function(t,e,n){for(var r=0;r<n.length-1;r++){var i=n[r];if(t=t[i],!c(t))return;e[i]=new t.constructor,e=e[i]}if(t.hasOwnProperty(n[r]))return e[n[r]]=t[n[r]],t},y=function(t){if(void 0!==t)return u(t)};e.exports.toPathPieces=function(t){return t.split(\".\")},e.exports.exists=function(t,e){return!!a(t,e)},e.exports.create=s,e.exports.get=f,e.exports.set=function(t,e,n){var r=function(t,e){return t[e]=n};l(t,e,r,r)},e.exports.isObject=c,e.exports.modify=l,e.exports.remove1=function(t,e){for(var n=0;n<e.length-1;n++)if(t=t[e[n]],!c(t))return;if(Array.isArray(t)){var r=Number.parseFloat(e[n]);Number.isInteger(r)&&t.splice(r,1)}else delete t[e[n]]},e.exports.remove2=function(t,e){var n=new t.constructor;return p(t,n,e),n},e.exports.rename=function(t,e,n){f(t,e,function(t,e){t[n]=t[e],delete t[e]})},e.exports.copy=function(t,e){var n=[],r=!0,o=!1,u=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=a.value,c=new t.constructor;h(t,c,f)&&n.push(c)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return n.reduce(i,{})},e.exports.equal=function(t,e){return y(t)===y(e)},e.exports.unknownOp=function(t){throw Error(\"unknown operator '\"+t+\"'\")},e.exports.hashify=y,e.exports.getIDBError=function(t){return Error(t.target.error.message)}},{clone:24,deepmerge:26,\"object-hash\":94}],22:[function(t,e,n){\"use strict\";function r(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");return\"=\"===t[e-2]?2:\"=\"===t[e-1]?1:0}function i(t){return u[t>>18&63]+u[t>>12&63]+u[t>>6&63]+u[63&t]}function o(t,e,n){for(var r,o=[],u=e;u<n;u+=3)r=(t[u]<<16)+(t[u+1]<<8)+t[u+2],o.push(i(r));return o.join(\"\")}n.byteLength=function(t){return 3*t.length/4-r(t)},n.toByteArray=function(t){var e,n,i,o,u,f=t.length;o=r(t),u=new s(3*f/4-o),n=o>0?f-4:f;var c=0;for(e=0;e<n;e+=4)i=a[t.charCodeAt(e)]<<18|a[t.charCodeAt(e+1)]<<12|a[t.charCodeAt(e+2)]<<6|a[t.charCodeAt(e+3)],u[c++]=i>>16&255,u[c++]=i>>8&255,u[c++]=255&i;return 2===o?(i=a[t.charCodeAt(e)]<<2|a[t.charCodeAt(e+1)]>>4,u[c++]=255&i):1===o&&(i=a[t.charCodeAt(e)]<<10|a[t.charCodeAt(e+1)]<<4|a[t.charCodeAt(e+2)]>>2,u[c++]=i>>8&255,u[c++]=255&i),u},n.fromByteArray=function(t){for(var e,n=t.length,r=n%3,i=\"\",a=[],s=0,f=n-r;s<f;s+=16383)a.push(o(t,s,s+16383>f?f:s+16383));return 1===r?(e=t[n-1],i+=u[e>>2],i+=u[e<<4&63],i+=\"==\"):2===r&&(e=(t[n-2]<<8)+t[n-1],i+=u[e>>10],i+=u[e>>4&63],i+=u[e<<2&63],i+=\"=\"),a.push(i),a.join(\"\")};for(var u=[],a=[],s=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",c=0,l=f.length;c<l;++c)u[c]=f[c],a[f.charCodeAt(c)]=c;a[\"-\".charCodeAt(0)]=62,a[\"_\".charCodeAt(0)]=63},{}],23:[function(t,e,n){\"use strict\";function r(t){if(t>H)throw new RangeError(\"Invalid typed array length\");var e=new Uint8Array(t);return e.__proto__=i.prototype,e}function i(t,e,n){if(\"number\"==typeof t){if(\"string\"==typeof e)throw new Error(\"If encoding is specified then the first argument must be a string\");return s(t)}return o(t,e,n)}function o(t,e,n){if(\"number\"==typeof t)throw new TypeError('\"value\" argument must not be a number');return q(t)?l(t,e,n):\"string\"==typeof t?f(t,e):p(t)}function u(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function a(t,e,n){return u(t),t<=0?r(t):void 0!==e?\"string\"==typeof n?r(t).fill(e,n):r(t).fill(e):r(t)}function s(t){return u(t),r(t<0?0:0|h(t))}function f(t,e){if(\"string\"==typeof e&&\"\"!==e||(e=\"utf8\"),!i.isEncoding(e))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|y(t,e),o=r(n),u=o.write(t,e);return u!==n&&(o=o.slice(0,u)),o}function c(t){for(var e=t.length<0?0:0|h(t.length),n=r(e),i=0;i<e;i+=1)n[i]=255&t[i];return n}function l(t,e,n){if(e<0||t.byteLength<e)throw new RangeError(\"'offset' is out of bounds\");if(t.byteLength<e+(n||0))throw new RangeError(\"'length' is out of bounds\");var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),r.__proto__=i.prototype,r}function p(t){if(i.isBuffer(t)){var e=0|h(t.length),n=r(e);return 0===n.length?n:(t.copy(n,0,0,e),n)}if(t){if(V(t)||\"length\"in t)return\"number\"!=typeof t.length||Q(t.length)?r(0):c(t);if(\"Buffer\"===t.type&&Array.isArray(t.data))return c(t.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}function h(t){if(t>=H)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+H.toString(16)+\" bytes\");return 0|t}function y(t,e){if(i.isBuffer(t))return t.length;if(V(t)||q(t))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return n;case\"utf8\":case\"utf-8\":case void 0:return M(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*n;case\"hex\":return n>>>1;case\"base64\":return F(t).length;default:if(r)return M(t).length;e=(\"\"+e).toLowerCase(),r=!0}}function d(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return\"\";if(n>>>=0,e>>>=0,n<=e)return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return T(this,e,n);case\"utf8\":case\"utf-8\":return E(this,e,n);case\"ascii\":return S(this,e,n);case\"latin1\":case\"binary\":return I(this,e,n);case\"base64\":return k(this,e,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return P(this,e,n);default:if(r)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),r=!0}}function v(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,o){if(0===t.length)return-1;if(\"string\"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,Q(n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if(\"string\"==typeof e&&(e=i.from(e,r)),i.isBuffer(e))return 0===e.length?-1:b(t,e,n,r,o);if(\"number\"==typeof e)return e&=255,\"function\"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):b(t,[e],n,r,o);throw new TypeError(\"val must be string, number or Buffer\")}function b(t,e,n,r,i){function o(t,e){return 1===u?t[e]:t.readUInt16BE(e*u)}var u=1,a=t.length,s=e.length;if(void 0!==r&&(\"ucs2\"===(r=String(r).toLowerCase())||\"ucs-2\"===r||\"utf16le\"===r||\"utf-16le\"===r)){if(t.length<2||e.length<2)return-1;u=2,a/=2,s/=2,n/=2}var f;if(i){var c=-1;for(f=n;f<a;f++)if(o(t,f)===o(e,-1===c?0:f-c)){if(-1===c&&(c=f),f-c+1===s)return c*u}else-1!==c&&(f-=f-c),c=-1}else for(n+s>a&&(n=a-s),f=n;f>=0;f--){for(var l=!0,p=0;p<s;p++)if(o(t,f+p)!==o(e,p)){l=!1;break}if(l)return f}return-1}function m(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=e.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");r>o/2&&(r=o/2);for(var u=0;u<r;++u){var a=parseInt(e.substr(2*u,2),16);if(Q(a))return u;t[n+u]=a}return u}function w(t,e,n,r){return Y(M(e,t.length-n),t,n,r)}function _(t,e,n,r){return Y(D(e),t,n,r)}function j(t,e,n,r){return _(t,e,n,r)}function x(t,e,n,r){return Y(F(e),t,n,r)}function O(t,e,n,r){return Y(z(e,t.length-n),t,n,r)}function k(t,e,n){return 0===e&&n===t.length?K.fromByteArray(t):K.fromByteArray(t.slice(e,n))}function E(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var o=t[i],u=null,a=o>239?4:o>223?3:o>191?2:1;if(i+a<=n){var s,f,c,l;switch(a){case 1:o<128&&(u=o);break;case 2:128==(192&(s=t[i+1]))&&(l=(31&o)<<6|63&s)>127&&(u=l);break;case 3:s=t[i+1],f=t[i+2],128==(192&s)&&128==(192&f)&&(l=(15&o)<<12|(63&s)<<6|63&f)>2047&&(l<55296||l>57343)&&(u=l);break;case 4:s=t[i+1],f=t[i+2],c=t[i+3],128==(192&s)&&128==(192&f)&&128==(192&c)&&(l=(15&o)<<18|(63&s)<<12|(63&f)<<6|63&c)>65535&&l<1114112&&(u=l)}}null===u?(u=65533,a=1):u>65535&&(u-=65536,r.push(u>>>10&1023|55296),u=56320|1023&u),r.push(u),i+=a}return A(r)}function A(t){var e=t.length;if(e<=J)return String.fromCharCode.apply(String,t);for(var n=\"\",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=J));return n}function S(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function I(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function T(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i=\"\",o=e;o<n;++o)i+=N(t[o]);return i}function P(t,e,n){for(var r=t.slice(e,n),i=\"\",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function B(t,e,n){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>n)throw new RangeError(\"Trying to access beyond buffer length\")}function C(t,e,n,r,o,u){if(!i.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>o||e<u)throw new RangeError('\"value\" argument is out of bounds');if(n+r>t.length)throw new RangeError(\"Index out of range\")}function L(t,e,n,r,i,o){if(n+r>t.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"Index out of range\")}function U(t,e,n,r,i){return e=+e,n>>>=0,i||L(t,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),W.write(t,e,n,r,23,4),n+4}function R(t,e,n,r,i){return e=+e,n>>>=0,i||L(t,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),W.write(t,e,n,r,52,8),n+8}function $(t){if((t=t.trim().replace(G,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}function N(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function M(t,e){e=e||1/0;for(var n,r=t.length,i=null,o=[],u=0;u<r;++u){if((n=t.charCodeAt(u))>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(u+1===r){(e-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function D(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function z(t,e){for(var n,r,i,o=[],u=0;u<t.length&&!((e-=2)<0);++u)r=(n=t.charCodeAt(u))>>8,i=n%256,o.push(i),o.push(r);return o}function F(t){return K.toByteArray($(t))}function Y(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}function q(t){return t instanceof ArrayBuffer||null!=t&&null!=t.constructor&&\"ArrayBuffer\"===t.constructor.name&&\"number\"==typeof t.byteLength}function V(t){return\"function\"==typeof ArrayBuffer.isView&&ArrayBuffer.isView(t)}function Q(t){return t!==t}var K=t(\"base64-js\"),W=t(\"ieee754\");n.Buffer=i,n.SlowBuffer=function(t){return+t!=t&&(t=0),i.alloc(+t)},n.INSPECT_MAX_BYTES=50;var H=2147483647;n.kMaxLength=H,i.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()}catch(t){return!1}}(),i.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),\"undefined\"!=typeof Symbol&&Symbol.species&&i[Symbol.species]===i&&Object.defineProperty(i,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),i.poolSize=8192,i.from=function(t,e,n){return o(t,e,n)},i.prototype.__proto__=Uint8Array.prototype,i.__proto__=Uint8Array,i.alloc=function(t,e,n){return a(t,e,n)},i.allocUnsafe=function(t){return s(t)},i.allocUnsafeSlow=function(t){return s(t)},i.isBuffer=function(t){return null!=t&&!0===t._isBuffer},i.compare=function(t,e){if(!i.isBuffer(t)||!i.isBuffer(e))throw new TypeError(\"Arguments must be Buffers\");if(t===e)return 0;for(var n=t.length,r=e.length,o=0,u=Math.min(n,r);o<u;++o)if(t[o]!==e[o]){n=t[o],r=e[o];break}return n<r?-1:r<n?1:0},i.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},i.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return i.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=i.allocUnsafe(e),o=0;for(n=0;n<t.length;++n){var u=t[n];if(!i.isBuffer(u))throw new TypeError('\"list\" argument must be an Array of Buffers');u.copy(r,o),o+=u.length}return r},i.byteLength=y,i.prototype._isBuffer=!0,i.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var e=0;e<t;e+=2)v(this,e,e+1);return this},i.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var e=0;e<t;e+=4)v(this,e,e+3),v(this,e+1,e+2);return this},i.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var e=0;e<t;e+=8)v(this,e,e+7),v(this,e+1,e+6),v(this,e+2,e+5),v(this,e+3,e+4);return this},i.prototype.toString=function(){var t=this.length;return 0===t?\"\":0===arguments.length?E(this,0,t):d.apply(this,arguments)},i.prototype.equals=function(t){if(!i.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===i.compare(this,t)},i.prototype.inspect=function(){var t=\"\",e=n.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,e).match(/.{2}/g).join(\" \"),this.length>e&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},i.prototype.compare=function(t,e,n,r,o){if(!i.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError(\"out of range index\");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,o>>>=0,this===t)return 0;for(var u=o-r,a=n-e,s=Math.min(u,a),f=this.slice(r,o),c=t.slice(e,n),l=0;l<s;++l)if(f[l]!==c[l]){u=f[l],a=c[l];break}return u<a?-1:a<u?1:0},i.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},i.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},i.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},i.prototype.write=function(t,e,n,r){if(void 0===e)r=\"utf8\",n=this.length,e=0;else if(void 0===n&&\"string\"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r=\"utf8\")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");r||(r=\"utf8\");for(var o=!1;;)switch(r){case\"hex\":return m(this,t,e,n);case\"utf8\":case\"utf-8\":return w(this,t,e,n);case\"ascii\":return _(this,t,e,n);case\"latin1\":case\"binary\":return j(this,t,e,n);case\"base64\":return x(this,t,e,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return O(this,t,e,n);default:if(o)throw new TypeError(\"Unknown encoding: \"+r);r=(\"\"+r).toLowerCase(),o=!0}},i.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var J=4096;i.prototype.slice=function(t,e){var n=this.length;t=~~t,e=void 0===e?n:~~e,t<0?(t+=n)<0&&(t=0):t>n&&(t=n),e<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return r.__proto__=i.prototype,r},i.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return r},i.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t+--e],i=1;e>0&&(i*=256);)r+=this[t+--e]*i;return r},i.prototype.readUInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),this[t]},i.prototype.readUInt16LE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]|this[t+1]<<8},i.prototype.readUInt16BE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]<<8|this[t+1]},i.prototype.readUInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},i.prototype.readUInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},i.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*e)),r},i.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=e,i=1,o=this[t+--r];r>0&&(i*=256);)o+=this[t+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},i.prototype.readInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},i.prototype.readInt16LE=function(t,e){t>>>=0,e||B(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt16BE=function(t,e){t>>>=0,e||B(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},i.prototype.readInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},i.prototype.readFloatLE=function(t,e){return t>>>=0,e||B(t,4,this.length),W.read(this,t,!0,23,4)},i.prototype.readFloatBE=function(t,e){return t>>>=0,e||B(t,4,this.length),W.read(this,t,!1,23,4)},i.prototype.readDoubleLE=function(t,e){return t>>>=0,e||B(t,8,this.length),W.read(this,t,!0,52,8)},i.prototype.readDoubleBE=function(t,e){return t>>>=0,e||B(t,8,this.length),W.read(this,t,!1,52,8)},i.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var i=1,o=0;for(this[e]=255&t;++o<n&&(i*=256);)this[e+o]=t/i&255;return e+n},i.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+n},i.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,1,255,0),this[e]=255&t,e+1},i.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},i.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},i.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},i.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},i.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);C(this,t,e,n,i-1,-i)}var o=0,u=1,a=0;for(this[e]=255&t;++o<n&&(u*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/u>>0)-a&255;return e+n},i.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);C(this,t,e,n,i-1,-i)}var o=n-1,u=1,a=0;for(this[e+o]=255&t;--o>=0&&(u*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/u>>0)-a&255;return e+n},i.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},i.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},i.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},i.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},i.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},i.prototype.writeFloatLE=function(t,e,n){return U(this,t,e,!0,n)},i.prototype.writeFloatBE=function(t,e,n){return U(this,t,e,!1,n)},i.prototype.writeDoubleLE=function(t,e,n){return R(this,t,e,!0,n)},i.prototype.writeDoubleBE=function(t,e,n){return R(this,t,e,!1,n)},i.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(n<0||n>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(r<0)throw new RangeError(\"sourceEnd out of bounds\");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,o=r-n;if(this===t&&n<e&&e<r)for(i=o-1;i>=0;--i)t[i+e]=this[i+n];else if(o<1e3)for(i=0;i<o;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},i.prototype.fill=function(t,e,n,r){if(\"string\"==typeof t){if(\"string\"==typeof e?(r=e,e=0,n=this.length):\"string\"==typeof n&&(r=n,n=this.length),1===t.length){var o=t.charCodeAt(0);o<256&&(t=o)}if(void 0!==r&&\"string\"!=typeof r)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof r&&!i.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r)}else\"number\"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError(\"Out of range index\");if(n<=e)return this;e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0);var u;if(\"number\"==typeof t)for(u=e;u<n;++u)this[u]=t;else{var a=i.isBuffer(t)?t:new i(t,r),s=a.length;for(u=0;u<n-e;++u)this[u+e]=a[u%s]}return this};var G=/[^+/0-9A-Za-z-_]/g},{\"base64-js\":22,ieee754:72}],24:[function(t,e,n){(function(t){var n=function(){\"use strict\";function e(t,e){return null!=e&&t instanceof e}function n(r,s,f,c,l){function p(r,f){if(null===r)return null;if(0===f)return r;var v,g;if(\"object\"!=typeof r)return r;if(e(r,o))v=new o;else if(e(r,u))v=new u;else if(e(r,a))v=new a(function(t,e){r.then(function(e){t(p(e,f-1))},function(t){e(p(t,f-1))})});else if(n.__isArray(r))v=[];else if(n.__isRegExp(r))v=new RegExp(r.source,i(r)),r.lastIndex&&(v.lastIndex=r.lastIndex);else if(n.__isDate(r))v=new Date(r.getTime());else{if(d&&t.isBuffer(r))return v=new t(r.length),r.copy(v),v;e(r,Error)?v=Object.create(r):void 0===c?(g=Object.getPrototypeOf(r),v=Object.create(g)):(v=Object.create(c),g=c)}if(s){var b=h.indexOf(r);if(-1!=b)return y[b];h.push(r),y.push(v)}e(r,o)&&r.forEach(function(t,e){var n=p(e,f-1),r=p(t,f-1);v.set(n,r)}),e(r,u)&&r.forEach(function(t){var e=p(t,f-1);v.add(e)});for(var m in r){var w;g&&(w=Object.getOwnPropertyDescriptor(g,m)),w&&null==w.set||(v[m]=p(r[m],f-1))}if(Object.getOwnPropertySymbols)for(var _=Object.getOwnPropertySymbols(r),m=0;m<_.length;m++){var j=_[m];(!(k=Object.getOwnPropertyDescriptor(r,j))||k.enumerable||l)&&(v[j]=p(r[j],f-1),k.enumerable||Object.defineProperty(v,j,{enumerable:!1}))}if(l)for(var x=Object.getOwnPropertyNames(r),m=0;m<x.length;m++){var O=x[m],k=Object.getOwnPropertyDescriptor(r,O);k&&k.enumerable||(v[O]=p(r[O],f-1),Object.defineProperty(v,O,{enumerable:!1}))}return v}\"object\"==typeof s&&(f=s.depth,c=s.prototype,l=s.includeNonEnumerable,s=s.circular);var h=[],y=[],d=void 0!==t;return void 0===s&&(s=!0),void 0===f&&(f=1/0),p(r,f)}function r(t){return Object.prototype.toString.call(t)}function i(t){var e=\"\";return t.global&&(e+=\"g\"),t.ignoreCase&&(e+=\"i\"),t.multiline&&(e+=\"m\"),e}var o;try{o=Map}catch(t){o=function(){}}var u;try{u=Set}catch(t){u=function(){}}var a;try{a=Promise}catch(t){a=function(){}}return n.clonePrototype=function(t){if(null===t)return null;var e=function(){};return e.prototype=t,new e},n.__objToStr=r,n.__isDate=function(t){return\"object\"==typeof t&&\"[object Date]\"===r(t)},n.__isArray=function(t){return\"object\"==typeof t&&\"[object Array]\"===r(t)},n.__isRegExp=function(t){return\"object\"==typeof t&&\"[object RegExp]\"===r(t)},n.__getRegExpFlags=i,n}();\"object\"==typeof e&&e.exports&&(e.exports=n)}).call(this,t(\"buffer\").Buffer)},{buffer:23}],25:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/assign\"),i=t(\"es5-ext/object/normalize-options\"),o=t(\"es5-ext/object/is-callable\"),u=t(\"es5-ext/string/#/contains\");(e.exports=function(t,e){var n,o,a,s,f;return arguments.length<2||\"string\"!=typeof t?(s=e,e=t,t=null):s=arguments[2],null==t?(n=a=!0,o=!1):(n=u.call(t,\"c\"),o=u.call(t,\"e\"),a=u.call(t,\"w\")),f={value:e,configurable:n,enumerable:o,writable:a},s?r(i(s),f):f}).gs=function(t,e,n){var a,s,f,c;return\"string\"!=typeof t?(f=n,n=e,e=t,t=null):f=arguments[3],null==e?e=void 0:o(e)?null==n?n=void 0:o(n)||(f=n,n=void 0):(f=e,e=n=void 0),null==t?(a=!0,s=!1):(a=u.call(t,\"c\"),s=u.call(t,\"e\")),c={get:e,set:n,configurable:a,enumerable:s},f?r(i(f),c):c}},{\"es5-ext/object/assign\":46,\"es5-ext/object/is-callable\":50,\"es5-ext/object/normalize-options\":58,\"es5-ext/string/#/contains\":61}],26:[function(t,e,n){\"use strict\";function r(t){return!!t&&\"object\"==typeof t}function i(t){var e=Object.prototype.toString.call(t);return\"[object RegExp]\"!==e&&\"[object Date]\"!==e}function o(t){return Array.isArray(t)?[]:{}}function u(t,e){return e&&!0===e.clone&&c(t)?f(o(t),t,e):t}function a(t,e,n){var r=t.slice();return e.forEach(function(e,i){void 0===r[i]?r[i]=u(e,n):c(e)?r[i]=f(t[i],e,n):-1===t.indexOf(e)&&r.push(u(e,n))}),r}function s(t,e,n){var r={};return c(t)&&Object.keys(t).forEach(function(e){r[e]=u(t[e],n)}),Object.keys(e).forEach(function(i){c(e[i])&&t[i]?r[i]=f(t[i],e[i],n):r[i]=u(e[i],n)}),r}function f(t,e,n){var r=Array.isArray(e),i=Array.isArray(t),o=n||{arrayMerge:a};return r===i?r?(o.arrayMerge||a)(t,e,n):s(t,e,n):u(e,n)}var c=function(t){return r(t)&&i(t)};f.all=function(t,e){if(!Array.isArray(t)||t.length<2)throw new Error(\"first argument should be an array with at least two elements\");return t.reduce(function(t,n){return f(t,n,e)})};var l=f;e.exports=l},{}],27:[function(t,e,n){\"use strict\";var r=t(\"../../number/is-nan\"),i=t(\"../../number/to-pos-integer\"),o=t(\"../../object/valid-value\"),u=Array.prototype.indexOf,a=Object.prototype.hasOwnProperty,s=Math.abs,f=Math.floor;e.exports=function(t){var e,n,c,l;if(!r(t))return u.apply(this,arguments);for(n=i(o(this).length),c=arguments[1],e=c=isNaN(c)?0:c>=0?f(c):i(this.length)-f(s(c));e<n;++e)if(a.call(this,e)&&(l=this[e],r(l)))return e;return-1}},{\"../../number/is-nan\":40,\"../../number/to-pos-integer\":44,\"../../object/valid-value\":60}],28:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Array.from:t(\"./shim\")},{\"./is-implemented\":29,\"./shim\":30}],29:[function(t,e,n){\"use strict\";e.exports=function(){var t,e,n=Array.from;return\"function\"==typeof n&&(t=[\"raz\",\"dwa\"],e=n(t),Boolean(e&&e!==t&&\"dwa\"===e[1]))}},{}],30:[function(t,e,n){\"use strict\";var r=t(\"es6-symbol\").iterator,i=t(\"../../function/is-arguments\"),o=t(\"../../function/is-function\"),u=t(\"../../number/to-pos-integer\"),a=t(\"../../object/valid-callable\"),s=t(\"../../object/valid-value\"),f=t(\"../../object/is-value\"),c=t(\"../../string/is-string\"),l=Array.isArray,p=Function.prototype.call,h={configurable:!0,enumerable:!0,writable:!0,value:null},y=Object.defineProperty;e.exports=function(t){var e,n,d,v,g,b,m,w,_,j,x=arguments[1],O=arguments[2];if(t=Object(s(t)),f(x)&&a(x),this&&this!==Array&&o(this))e=this;else{if(!x){if(i(t))return 1!==(g=t.length)?Array.apply(null,t):(v=new Array(1),v[0]=t[0],v);if(l(t)){for(v=new Array(g=t.length),n=0;n<g;++n)v[n]=t[n];return v}}v=[]}if(!l(t))if(void 0!==(_=t[r])){for(m=a(_).call(t),e&&(v=new e),w=m.next(),n=0;!w.done;)j=x?p.call(x,O,w.value,n):w.value,e?(h.value=j,y(v,n,h)):v[n]=j,w=m.next(),++n;g=n}else if(c(t)){for(g=t.length,e&&(v=new e),n=0,d=0;n<g;++n)j=t[n],n+1<g&&(b=j.charCodeAt(0))>=55296&&b<=56319&&(j+=t[++n]),j=x?p.call(x,O,j,d):j,e?(h.value=j,y(v,d,h)):v[d]=j,++d;g=d}if(void 0===g)for(g=u(t.length),e&&(v=new e(g)),n=0;n<g;++n)j=x?p.call(x,O,t[n],n):t[n],e?(h.value=j,y(v,n,h)):v[n]=j;return e&&(h.value=null,v.length=g),v}},{\"../../function/is-arguments\":34,\"../../function/is-function\":35,\"../../number/to-pos-integer\":44,\"../../object/is-value\":52,\"../../object/valid-callable\":59,\"../../object/valid-value\":60,\"../../string/is-string\":64,\"es6-symbol\":65}],31:[function(t,e,n){\"use strict\";var r=t(\"./from\"),i=Array.isArray;e.exports=function(t){return i(t)?t:r(t)}},{\"./from\":28}],32:[function(t,e,n){\"use strict\";var r=t(\"../object/assign\"),i=t(\"../object/is-object\"),o=t(\"../object/is-value\"),u=Error.captureStackTrace;n=e.exports=function(t){var e=new Error(t),a=arguments[1],s=arguments[2];return o(s)||i(a)&&(s=a,a=null),o(s)&&r(e,s),o(a)&&(e.code=a),u&&u(e,n),e}},{\"../object/assign\":46,\"../object/is-object\":51,\"../object/is-value\":52}],33:[function(t,e,n){\"use strict\";var r,i,o,u,a=t(\"../number/to-pos-integer\"),s=function(t,e){return e};try{Object.defineProperty(s,\"length\",{configurable:!0,writable:!1,enumerable:!1,value:1})}catch(t){}1===s.length?(r={configurable:!0,writable:!1,enumerable:!1},i=Object.defineProperty,e.exports=function(t,e){return e=a(e),t.length===e?t:(r.value=e,i(t,\"length\",r))}):(u=t(\"../object/mixin\"),o=function(){var t=[];return function(e){var n,r=0;if(t[e])return t[e];for(n=[];e--;)n.push(\"a\"+(++r).toString(36));return new Function(\"fn\",\"return function (\"+n.join(\", \")+\") { return fn.apply(this, arguments); };\")}}(),e.exports=function(t,e){var n;if(e=a(e),t.length===e)return t;n=o(e)(t);try{u(n,t)}catch(t){}return n})},{\"../number/to-pos-integer\":44,\"../object/mixin\":57}],34:[function(t,e,n){\"use strict\";var r=Object.prototype.toString,i=r.call(function(){return arguments}());e.exports=function(t){return r.call(t)===i}},{}],35:[function(t,e,n){\"use strict\";var r=Object.prototype.toString,i=r.call(t(\"./noop\"));e.exports=function(t){return\"function\"==typeof t&&r.call(t)===i}},{\"./noop\":36}],36:[function(t,e,n){\"use strict\";e.exports=function(){}},{}],37:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Math.sign:t(\"./shim\")},{\"./is-implemented\":38,\"./shim\":39}],38:[function(t,e,n){\"use strict\";e.exports=function(){var t=Math.sign;return\"function\"==typeof t&&(1===t(10)&&-1===t(-20))}},{}],39:[function(t,e,n){\"use strict\";e.exports=function(t){return t=Number(t),isNaN(t)||0===t?t:t>0?1:-1}},{}],40:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Number.isNaN:t(\"./shim\")},{\"./is-implemented\":41,\"./shim\":42}],41:[function(t,e,n){\"use strict\";e.exports=function(){var t=Number.isNaN;return\"function\"==typeof t&&(!t({})&&t(NaN)&&!t(34))}},{}],42:[function(t,e,n){\"use strict\";e.exports=function(t){return t!==t}},{}],43:[function(t,e,n){\"use strict\";var r=t(\"../math/sign\"),i=Math.abs,o=Math.floor;e.exports=function(t){return isNaN(t)?0:0!==(t=Number(t))&&isFinite(t)?r(t)*o(i(t)):t}},{\"../math/sign\":37}],44:[function(t,e,n){\"use strict\";var r=t(\"./to-integer\"),i=Math.max;e.exports=function(t){return i(0,r(t))}},{\"./to-integer\":43}],45:[function(t,e,n){\"use strict\";var r=t(\"./valid-callable\"),i=t(\"./valid-value\"),o=Function.prototype.bind,u=Function.prototype.call,a=Object.keys,s=Object.prototype.propertyIsEnumerable;e.exports=function(t,e){return function(n,f){var c,l=arguments[2],p=arguments[3];return n=Object(i(n)),r(f),c=a(n),p&&c.sort(\"function\"==typeof p?o.call(p,n):void 0),\"function\"!=typeof t&&(t=c[t]),u.call(t,c,function(t,r){return s.call(n,t)?u.call(f,l,n[t],t,n,r):e})}}},{\"./valid-callable\":59,\"./valid-value\":60}],46:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Object.assign:t(\"./shim\")},{\"./is-implemented\":47,\"./shim\":48}],47:[function(t,e,n){\"use strict\";e.exports=function(){var t,e=Object.assign;return\"function\"==typeof e&&(t={foo:\"raz\"},e(t,{bar:\"dwa\"},{trzy:\"trzy\"}),t.foo+t.bar+t.trzy===\"razdwatrzy\")}},{}],48:[function(t,e,n){\"use strict\";var r=t(\"../keys\"),i=t(\"../valid-value\"),o=Math.max;e.exports=function(t,e){var n,u,a,s=o(arguments.length,2);for(t=Object(i(t)),a=function(r){try{t[r]=e[r]}catch(t){n||(n=t)}},u=1;u<s;++u)e=arguments[u],r(e).forEach(a);if(void 0!==n)throw n;return t}},{\"../keys\":53,\"../valid-value\":60}],49:[function(t,e,n){\"use strict\";e.exports=t(\"./_iterate\")(\"forEach\")},{\"./_iterate\":45}],50:[function(t,e,n){\"use strict\";e.exports=function(t){return\"function\"==typeof t}},{}],51:[function(t,e,n){\"use strict\";var r=t(\"./is-value\"),i={function:!0,object:!0};e.exports=function(t){return r(t)&&i[typeof t]||!1}},{\"./is-value\":52}],52:[function(t,e,n){\"use strict\";var r=t(\"../function/noop\")();e.exports=function(t){return t!==r&&null!==t}},{\"../function/noop\":36}],53:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Object.keys:t(\"./shim\")},{\"./is-implemented\":54,\"./shim\":55}],54:[function(t,e,n){\"use strict\";e.exports=function(){try{return Object.keys(\"primitive\"),!0}catch(t){return!1}}},{}],55:[function(t,e,n){\"use strict\";var r=t(\"../is-value\"),i=Object.keys;e.exports=function(t){return i(r(t)?Object(t):t)}},{\"../is-value\":52}],56:[function(t,e,n){\"use strict\";var r=t(\"./valid-callable\"),i=t(\"./for-each\"),o=Function.prototype.call;e.exports=function(t,e){var n={},u=arguments[2];return r(e),i(t,function(t,r,i,a){n[r]=o.call(e,u,t,r,i,a)}),n}},{\"./for-each\":49,\"./valid-callable\":59}],57:[function(t,e,n){\"use strict\";var r=t(\"./valid-value\"),i=Object.defineProperty,o=Object.getOwnPropertyDescriptor,u=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols;e.exports=function(t,e){var n,s=Object(r(e));if(t=Object(r(t)),u(s).forEach(function(r){try{i(t,r,o(e,r))}catch(t){n=t}}),\"function\"==typeof a&&a(s).forEach(function(r){try{i(t,r,o(e,r))}catch(t){n=t}}),void 0!==n)throw n;return t}},{\"./valid-value\":60}],58:[function(t,e,n){\"use strict\";var r=t(\"./is-value\"),i=Array.prototype.forEach,o=Object.create,u=function(t,e){var n;for(n in t)e[n]=t[n]};e.exports=function(t){var e=o(null);return i.call(arguments,function(t){r(t)&&u(Object(t),e)}),e}},{\"./is-value\":52}],59:[function(t,e,n){\"use strict\";e.exports=function(t){if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");return t}},{}],60:[function(t,e,n){\"use strict\";var r=t(\"./is-value\");e.exports=function(t){if(!r(t))throw new TypeError(\"Cannot use null or undefined\");return t}},{\"./is-value\":52}],61:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?String.prototype.contains:t(\"./shim\")},{\"./is-implemented\":62,\"./shim\":63}],62:[function(t,e,n){\"use strict\";var r=\"razdwatrzy\";e.exports=function(){return\"function\"==typeof r.contains&&(!0===r.contains(\"dwa\")&&!1===r.contains(\"foo\"))}},{}],63:[function(t,e,n){\"use strict\";var r=String.prototype.indexOf;e.exports=function(t){return r.call(this,t,arguments[1])>-1}},{}],64:[function(t,e,n){\"use strict\";var r=Object.prototype.toString,i=r.call(\"\");e.exports=function(t){return\"string\"==typeof t||t&&\"object\"==typeof t&&(t instanceof String||r.call(t)===i)||!1}},{}],65:[function(t,e,n){\"use strict\";e.exports=t(\"./is-implemented\")()?Symbol:t(\"./polyfill\")},{\"./is-implemented\":66,\"./polyfill\":68}],66:[function(t,e,n){\"use strict\";var r={object:!0,symbol:!0};e.exports=function(){var t;if(\"function\"!=typeof Symbol)return!1;t=Symbol(\"test symbol\");try{String(t)}catch(t){return!1}return!!r[typeof Symbol.iterator]&&(!!r[typeof Symbol.toPrimitive]&&!!r[typeof Symbol.toStringTag])}},{}],67:[function(t,e,n){\"use strict\";e.exports=function(t){return!!t&&(\"symbol\"==typeof t||!!t.constructor&&(\"Symbol\"===t.constructor.name&&\"Symbol\"===t[t.constructor.toStringTag]))}},{}],68:[function(t,e,n){\"use strict\";var r,i,o,u,a=t(\"d\"),s=t(\"./validate-symbol\"),f=Object.create,c=Object.defineProperties,l=Object.defineProperty,p=Object.prototype,h=f(null);if(\"function\"==typeof Symbol){r=Symbol;try{String(r()),u=!0}catch(t){}}var y=function(){var t=f(null);return function(e){for(var n,r,i=0;t[e+(i||\"\")];)++i;return e+=i||\"\",t[e]=!0,n=\"@@\"+e,l(p,n,a.gs(null,function(t){r||(r=!0,l(this,n,a(t)),r=!1)})),n}}();o=function(t){if(this instanceof o)throw new TypeError(\"Symbol is not a constructor\");return i(t)},e.exports=i=function t(e){var n;if(this instanceof t)throw new TypeError(\"Symbol is not a constructor\");return u?r(e):(n=f(o.prototype),e=void 0===e?\"\":String(e),c(n,{__description__:a(\"\",e),__name__:a(\"\",y(e))}))},c(i,{for:a(function(t){return h[t]?h[t]:h[t]=i(String(t))}),keyFor:a(function(t){var e;s(t);for(e in h)if(h[e]===t)return e}),hasInstance:a(\"\",r&&r.hasInstance||i(\"hasInstance\")),isConcatSpreadable:a(\"\",r&&r.isConcatSpreadable||i(\"isConcatSpreadable\")),iterator:a(\"\",r&&r.iterator||i(\"iterator\")),match:a(\"\",r&&r.match||i(\"match\")),replace:a(\"\",r&&r.replace||i(\"replace\")),search:a(\"\",r&&r.search||i(\"search\")),species:a(\"\",r&&r.species||i(\"species\")),split:a(\"\",r&&r.split||i(\"split\")),toPrimitive:a(\"\",r&&r.toPrimitive||i(\"toPrimitive\")),toStringTag:a(\"\",r&&r.toStringTag||i(\"toStringTag\")),unscopables:a(\"\",r&&r.unscopables||i(\"unscopables\"))}),c(o.prototype,{constructor:a(i),toString:a(\"\",function(){return this.__name__})}),c(i.prototype,{toString:a(function(){return\"Symbol (\"+s(this).__description__+\")\"}),valueOf:a(function(){return s(this)})}),l(i.prototype,i.toPrimitive,a(\"\",function(){var t=s(this);return\"symbol\"==typeof t?t:t.toString()})),l(i.prototype,i.toStringTag,a(\"c\",\"Symbol\")),l(o.prototype,i.toStringTag,a(\"c\",i.prototype[i.toStringTag])),l(o.prototype,i.toPrimitive,a(\"c\",i.prototype[i.toPrimitive]))},{\"./validate-symbol\":69,d:25}],69:[function(t,e,n){\"use strict\";var r=t(\"./is-symbol\");e.exports=function(t){if(!r(t))throw new TypeError(t+\" is not a symbol\");return t}},{\"./is-symbol\":67}],70:[function(t,e,n){\"use strict\";var r,i,o,u,a,s,f,c=t(\"d\"),l=t(\"es5-ext/object/valid-callable\"),p=Function.prototype.apply,h=Function.prototype.call,y=Object.create,d=Object.defineProperty,v=Object.defineProperties,g=Object.prototype.hasOwnProperty,b={configurable:!0,enumerable:!1,writable:!0};a={on:r=function(t,e){var n;return l(e),g.call(this,\"__ee__\")?n=this.__ee__:(n=b.value=y(null),d(this,\"__ee__\",b),b.value=null),n[t]?\"object\"==typeof n[t]?n[t].push(e):n[t]=[n[t],e]:n[t]=e,this},once:i=function(t,e){var n,i;return l(e),i=this,r.call(this,t,n=function(){o.call(i,t,n),p.call(e,this,arguments)}),n.__eeOnceListener__=e,this},off:o=function(t,e){var n,r,i,o;if(l(e),!g.call(this,\"__ee__\"))return this;if(!(n=this.__ee__)[t])return this;if(\"object\"==typeof(r=n[t]))for(o=0;i=r[o];++o)i!==e&&i.__eeOnceListener__!==e||(2===r.length?n[t]=r[o?0:1]:r.splice(o,1));else r!==e&&r.__eeOnceListener__!==e||delete n[t];return this},emit:u=function(t){var e,n,r,i,o;if(g.call(this,\"__ee__\")&&(i=this.__ee__[t]))if(\"object\"==typeof i){for(n=arguments.length,o=new Array(n-1),e=1;e<n;++e)o[e-1]=arguments[e];for(i=i.slice(),e=0;r=i[e];++e)p.call(r,this,o)}else switch(arguments.length){case 1:h.call(i,this);break;case 2:h.call(i,this,arguments[1]);break;case 3:h.call(i,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,o=new Array(n-1),e=1;e<n;++e)o[e-1]=arguments[e];p.call(i,this,o)}}},s={on:c(r),once:c(i),off:c(o),emit:c(u)},f=v({},s),e.exports=n=function(t){return null==t?y(f):v(Object(t),s)},n.methods=a},{d:25,\"es5-ext/object/valid-callable\":59}],71:[function(t,e,n){function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(t){return\"function\"==typeof t}function o(t){return\"number\"==typeof t}function u(t){return\"object\"==typeof t&&null!==t}function a(t){return void 0===t}e.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(t){if(!o(t)||t<0||isNaN(t))throw TypeError(\"n must be a positive number\");return this._maxListeners=t,this},r.prototype.emit=function(t){var e,n,r,o,s,f;if(this._events||(this._events={}),\"error\"===t&&(!this._events.error||u(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var c=new Error('Uncaught, unspecified \"error\" event. ('+e+\")\");throw c.context=e,c}if(n=this._events[t],a(n))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:o=Array.prototype.slice.call(arguments,1),n.apply(this,o)}else if(u(n))for(o=Array.prototype.slice.call(arguments,1),r=(f=n.slice()).length,s=0;s<r;s++)f[s].apply(this,o);return!0},r.prototype.addListener=function(t,e){var n;if(!i(e))throw TypeError(\"listener must be a function\");return this._events||(this._events={}),this._events.newListener&&this.emit(\"newListener\",t,i(e.listener)?e.listener:e),this._events[t]?u(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,u(this._events[t])&&!this._events[t].warned&&(n=a(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&n>0&&this._events[t].length>n&&(this._events[t].warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\",this._events[t].length),\"function\"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(t,e){function n(){this.removeListener(t,n),r||(r=!0,e.apply(this,arguments))}if(!i(e))throw TypeError(\"listener must be a function\");var r=!1;return n.listener=e,this.on(t,n),this},r.prototype.removeListener=function(t,e){var n,r,o,a;if(!i(e))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[t])return this;if(n=this._events[t],o=n.length,r=-1,n===e||i(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit(\"removeListener\",t,e);else if(u(n)){for(a=o;a-- >0;)if(n[a]===e||n[a].listener&&n[a].listener===e){r=a;break}if(r<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(r,1),this._events.removeListener&&this.emit(\"removeListener\",t,e)}return this},r.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)\"removeListener\"!==e&&this.removeAllListeners(e);return this.removeAllListeners(\"removeListener\"),this._events={},this}if(n=this._events[t],i(n))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},r.prototype.listeners=function(t){return this._events&&this._events[t]?i(this._events[t])?[this._events[t]]:this._events[t].slice():[]},r.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(i(e))return 1;if(e)return e.length}return 0},r.listenerCount=function(t,e){return t.listenerCount(e)}},{}],72:[function(t,e,n){n.read=function(t,e,n,r,i){var o,u,a=8*i-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?i-1:0,p=n?-1:1,h=t[e+l];for(l+=p,o=h&(1<<-c)-1,h>>=-c,c+=a;c>0;o=256*o+t[e+l],l+=p,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=r;c>0;u=256*u+t[e+l],l+=p,c-=8);if(0===o)o=1-f;else{if(o===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),o-=f}return(h?-1:1)*u*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var u,a,s,f=8*o-i-1,c=(1<<f)-1,l=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,y=r?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,u=c):(u=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-u))<1&&(u--,s*=2),(e+=u+l>=1?p/s:p*Math.pow(2,1-l))*s>=2&&(u++,s/=2),u+l>=c?(a=0,u=c):u+l>=1?(a=(e*s-1)*Math.pow(2,i),u+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),u=0));i>=8;t[n+h]=255&a,h+=y,a/=256,i-=8);for(u=u<<i|a,f+=i;f>0;t[n+h]=255&u,h+=y,u/=256,f-=8);t[n+h-y]|=128*d}},{}],73:[function(t,e,n){e.exports=function(t){return!!t&&(\"object\"==typeof t||\"function\"==typeof t)&&\"function\"==typeof t.then}},{}],74:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\"),i=Object.create,o=Object.prototype.hasOwnProperty;e.exports=function(t){var e,n=0,u=1,a=i(null),s=i(null),f=0;return t=r(t),{hit:function(r){var i=s[r],c=++f;if(a[c]=r,s[r]=c,!i){if(++n<=t)return;return r=a[u],e(r),r}if(delete a[i],u===i)for(;!o.call(a,++u);)continue},delete:e=function(t){var e=s[t];if(e&&(delete a[e],delete s[t],--n,u===e)){if(!n)return f=0,void(u=1);for(;!o.call(a,++u);)continue}},clear:function(){n=0,u=1,a=i(null),s=i(null),f=0}}}},{\"es5-ext/number/to-pos-integer\":44}],75:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/from\"),i=t(\"es5-ext/object/map\"),o=t(\"es5-ext/object/mixin\"),u=t(\"es5-ext/function/_define-length\"),a=t(\"next-tick\"),s=Array.prototype.slice,f=Function.prototype.apply,c=Object.create,l=Object.prototype.hasOwnProperty;t(\"../lib/registered-extensions\").async=function(t,e){var n,p,h,y=c(null),d=c(null),v=e.memoized,g=e.original;e.memoized=u(function(t){var e=arguments,r=e[e.length-1];return\"function\"==typeof r&&(n=r,e=s.call(e,0,-1)),v.apply(p=this,h=e)},v);try{o(e.memoized,v)}catch(t){}e.on(\"get\",function(t){var r,i,o;if(n){if(y[t])return\"function\"==typeof y[t]?y[t]=[y[t],n]:y[t].push(n),void(n=null);r=n,i=p,o=h,n=p=h=null,a(function(){var u;l.call(d,t)?(u=d[t],e.emit(\"getasync\",t,o,i),f.call(r,u.context,u.args)):(n=r,p=i,h=o,v.apply(i,o))})}}),e.original=function(){var t,i,o,u;return n?(t=r(arguments),i=function t(n){var i,o,s=t.id;if(null!=s){if(delete t.id,i=y[s],delete y[s],i)return o=r(arguments),e.has(s)&&(n?e.delete(s):(d[s]={context:this,args:o},e.emit(\"setasync\",s,\"function\"==typeof i?1:i.length))),\"function\"==typeof i?u=f.call(i,this,o):i.forEach(function(t){u=f.call(t,this,o)},this),u}else a(f.bind(t,this,arguments))},o=n,n=p=h=null,t.push(i),u=f.call(g,this,t),i.cb=o,n=i,u):f.call(g,this,arguments)},e.on(\"set\",function(t){n?(y[t]?\"function\"==typeof y[t]?y[t]=[y[t],n.cb]:y[t].push(n.cb):y[t]=n.cb,delete n.cb,n.id=t,n=null):e.delete(t)}),e.on(\"delete\",function(t){var n;l.call(y,t)||d[t]&&(n=d[t],delete d[t],e.emit(\"deleteasync\",t,s.call(n.args,1)))}),e.on(\"clear\",function(){var t=d;d=c(null),e.emit(\"clearasync\",i(t,function(t){return s.call(t.args,1)}))})}},{\"../lib/registered-extensions\":83,\"es5-ext/array/from\":28,\"es5-ext/function/_define-length\":33,\"es5-ext/object/map\":56,\"es5-ext/object/mixin\":57,\"next-tick\":93}],76:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/valid-callable\"),i=t(\"es5-ext/object/for-each\"),o=t(\"../lib/registered-extensions\"),u=Function.prototype.apply;o.dispose=function(t,e,n){var a;if(r(t),n.async&&o.async||n.promise&&o.promise)return e.on(\"deleteasync\",a=function(e,n){u.call(t,null,n)}),void e.on(\"clearasync\",function(t){i(t,function(t,e){a(e,t)})});e.on(\"delete\",a=function(e,n){t(n)}),e.on(\"clear\",function(t){i(t,function(t,e){a(e,t)})})}},{\"../lib/registered-extensions\":83,\"es5-ext/object/for-each\":49,\"es5-ext/object/valid-callable\":59}],77:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/from\"),i=t(\"es5-ext/object/for-each\"),o=t(\"next-tick\"),u=t(\"is-promise\"),a=t(\"timers-ext/valid-timeout\"),s=t(\"../lib/registered-extensions\"),f=Function.prototype,c=Math.max,l=Math.min,p=Object.create;s.maxAge=function(t,e,n){var h,y,d,v;(t=a(t))&&(h=p(null),y=n.async&&s.async||n.promise&&s.promise?\"async\":\"\",e.on(\"set\"+y,function(n){h[n]=setTimeout(function(){e.delete(n)},t),v&&(v[n]&&\"nextTick\"!==v[n]&&clearTimeout(v[n]),v[n]=setTimeout(function(){delete v[n]},d))}),e.on(\"delete\"+y,function(t){clearTimeout(h[t]),delete h[t],v&&(\"nextTick\"!==v[t]&&clearTimeout(v[t]),delete v[t])}),n.preFetch&&(d=!0===n.preFetch||isNaN(n.preFetch)?.333:c(l(Number(n.preFetch),1),0))&&(v={},d=(1-d)*t,e.on(\"get\"+y,function(t,i,a){v[t]||(v[t]=\"nextTick\",o(function(){var o;\"nextTick\"===v[t]&&(delete v[t],e.delete(t),n.async&&(i=r(i)).push(f),o=e.memoized.apply(a,i),n.promise&&u(o)&&(\"function\"==typeof o.done?o.done(f,f):o.then(f,f)))}))})),e.on(\"clear\"+y,function(){i(h,function(t){clearTimeout(t)}),h={},v&&(i(v,function(t){\"nextTick\"!==t&&clearTimeout(t)}),v={})}))}},{\"../lib/registered-extensions\":83,\"es5-ext/array/from\":28,\"es5-ext/object/for-each\":49,\"is-promise\":73,\"next-tick\":93,\"timers-ext/valid-timeout\":98}],78:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\"),i=t(\"lru-queue\"),o=t(\"../lib/registered-extensions\");o.max=function(t,e,n){var u,a,s;(t=r(t))&&(a=i(t),u=n.async&&o.async||n.promise&&o.promise?\"async\":\"\",e.on(\"set\"+u,s=function(t){void 0!==(t=a.hit(t))&&e.delete(t)}),e.on(\"get\"+u,s),e.on(\"delete\"+u,a.delete),e.on(\"clear\"+u,a.clear))}},{\"../lib/registered-extensions\":83,\"es5-ext/number/to-pos-integer\":44,\"lru-queue\":74}],79:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/map\"),i=t(\"is-promise\"),o=t(\"next-tick\"),u=Object.create,a=Object.prototype.hasOwnProperty;t(\"../lib/registered-extensions\").promise=function(t,e){var n=u(null),s=u(null),f=u(null);e.on(\"set\",function(r,u,a){var c=!1;if(!i(a))return s[r]=a,void e.emit(\"setasync\",r,1);n[r]=1,f[r]=a;var l=function(t){var i=n[r];if(c)throw new Error(\"Memoizee error: Promise resolved with both failure and success, this can be result of unordered done & finally resolution.\\nInstead of `promise: true` consider configuring memoization via `promise: 'then'` or `promise: 'done'\");i&&(delete n[r],s[r]=t,e.emit(\"setasync\",r,i))},p=function(){c=!0,n[r]&&(delete n[r],delete f[r],e.delete(r))};\"then\"!==t&&\"function\"==typeof a.done?\"done\"!==t&&\"function\"==typeof a.finally?(a.done(l),a.finally(p)):a.done(l,p):a.then(function(t){o(l.bind(this,t))},function(){o(p)})}),e.on(\"get\",function(t,r,u){var a;if(n[t])++n[t];else{a=f[t];var s=function(){e.emit(\"getasync\",t,r,u)};i(a)?\"function\"==typeof a.done?a.done(s):a.then(function(){o(s)}):s()}}),e.on(\"delete\",function(t){if(delete f[t],n[t])delete n[t];else if(a.call(s,t)){var r=s[t];delete s[t],e.emit(\"deleteasync\",t,[r])}}),e.on(\"clear\",function(){var t=s;s=u(null),n=u(null),f=u(null),e.emit(\"clearasync\",r(t,function(t){return[t]}))})}},{\"../lib/registered-extensions\":83,\"es5-ext/object/map\":56,\"is-promise\":73,\"next-tick\":93}],80:[function(t,e,n){\"use strict\";var r=t(\"d\"),i=t(\"../lib/registered-extensions\"),o=Object.create,u=Object.defineProperties;i.refCounter=function(t,e,n){var a,s;a=o(null),s=n.async&&i.async||n.promise&&i.promise?\"async\":\"\",e.on(\"set\"+s,function(t,e){a[t]=e||1}),e.on(\"get\"+s,function(t){++a[t]}),e.on(\"delete\"+s,function(t){delete a[t]}),e.on(\"clear\"+s,function(){a={}}),u(e.memoized,{deleteRef:r(function(){var t=e.get(arguments);return null===t?null:a[t]?!--a[t]&&(e.delete(t),!0):null}),getRefCount:r(function(){var t=e.get(arguments);return null===t?0:a[t]?a[t]:0})})}},{\"../lib/registered-extensions\":83,d:25}],81:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/normalize-options\"),i=t(\"./lib/resolve-length\"),o=t(\"./plain\");e.exports=function(e){var n,u=r(arguments[1]);return u.normalizer||0!==(n=u.length=i(u.length,e.length,u.async))&&(u.primitive?!1===n?u.normalizer=t(\"./normalizers/primitive\"):n>1&&(u.normalizer=t(\"./normalizers/get-primitive-fixed\")(n)):u.normalizer=!1===n?t(\"./normalizers/get\")():1===n?t(\"./normalizers/get-1\")():t(\"./normalizers/get-fixed\")(n)),u.async&&t(\"./ext/async\"),u.promise&&t(\"./ext/promise\"),u.dispose&&t(\"./ext/dispose\"),u.maxAge&&t(\"./ext/max-age\"),u.max&&t(\"./ext/max\"),u.refCounter&&t(\"./ext/ref-counter\"),o(e,u)}},{\"./ext/async\":75,\"./ext/dispose\":76,\"./ext/max\":78,\"./ext/max-age\":77,\"./ext/promise\":79,\"./ext/ref-counter\":80,\"./lib/resolve-length\":84,\"./normalizers/get\":90,\"./normalizers/get-1\":87,\"./normalizers/get-fixed\":88,\"./normalizers/get-primitive-fixed\":89,\"./normalizers/primitive\":91,\"./plain\":92,\"es5-ext/object/normalize-options\":58}],82:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/error/custom\"),i=t(\"es5-ext/function/_define-length\"),o=t(\"d\"),u=t(\"event-emitter\").methods,a=t(\"./resolve-resolve\"),s=t(\"./resolve-normalize\"),f=Function.prototype.apply,c=Function.prototype.call,l=Object.create,p=Object.prototype.hasOwnProperty,h=Object.defineProperties,y=u.on,d=u.emit;e.exports=function(t,e,n){var u,v,g,b,m,w,_,j,x,O,k,E,A,S,I,T=l(null);return v=!1!==e?e:isNaN(t.length)?1:t.length,n.normalizer&&(O=s(n.normalizer),g=O.get,b=O.set,m=O.delete,w=O.clear),null!=n.resolvers&&(I=a(n.resolvers)),S=g?i(function(e){var n,i,o=arguments;if(I&&(o=I(o)),null!==(n=g(o))&&p.call(T,n))return k&&u.emit(\"get\",n,o,this),T[n];if(i=1===o.length?c.call(t,this,o[0]):f.call(t,this,o),null===n){if(null!==(n=g(o)))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");n=b(o)}else if(p.call(T,n))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return T[n]=i,E&&u.emit(\"set\",n,null,i),i},v):0===e?function(){var e;if(p.call(T,\"data\"))return k&&u.emit(\"get\",\"data\",arguments,this),T.data;if(e=arguments.length?f.call(t,this,arguments):c.call(t,this),p.call(T,\"data\"))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return T.data=e,E&&u.emit(\"set\",\"data\",null,e),e}:function(e){var n,i,o=arguments;if(I&&(o=I(arguments)),i=String(o[0]),p.call(T,i))return k&&u.emit(\"get\",i,o,this),T[i];if(n=1===o.length?c.call(t,this,o[0]):f.call(t,this,o),p.call(T,i))throw r(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return T[i]=n,E&&u.emit(\"set\",i,null,n),n},u={original:t,memoized:S,get:function(t){return I&&(t=I(t)),g?g(t):String(t[0])},has:function(t){return p.call(T,t)},delete:function(t){var e;p.call(T,t)&&(m&&m(t),e=T[t],delete T[t],A&&u.emit(\"delete\",t,e))},clear:function(){var t=T;w&&w(),T=l(null),u.emit(\"clear\",t)},on:function(t,e){return\"get\"===t?k=!0:\"set\"===t?E=!0:\"delete\"===t&&(A=!0),y.call(this,t,e)},emit:d,updateEnv:function(){t=u.original}},_=g?i(function(t){var e,n=arguments;I&&(n=I(n)),null!==(e=g(n))&&u.delete(e)},v):0===e?function(){return u.delete(\"data\")}:function(t){return I&&(t=I(arguments)[0]),u.delete(t)},j=i(function(){var t,e=arguments;return I&&(e=I(e)),t=g(e),T[t]}),x=i(function(){var t,e=arguments;return I&&(e=I(e)),null!==(t=g(e))&&u.has(t)}),h(S,{__memoized__:o(!0),delete:o(_),clear:o(u.clear),_get:o(j),_has:o(x)}),u}},{\"./resolve-normalize\":85,\"./resolve-resolve\":86,d:25,\"es5-ext/error/custom\":32,\"es5-ext/function/_define-length\":33,\"event-emitter\":70}],83:[function(t,e,n){\"use strict\"},{}],84:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\");e.exports=function(t,e,n){var i;return isNaN(t)?(i=e)>=0?n&&i?i-1:i:1:!1!==t&&r(t)}},{\"es5-ext/number/to-pos-integer\":44}],85:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/valid-callable\");e.exports=function(t){var e;return\"function\"==typeof t?{set:t,get:t}:(e={get:r(t.get)},void 0!==t.set?(e.set=r(t.set),t.delete&&(e.delete=r(t.delete)),t.clear&&(e.clear=r(t.clear)),e):(e.set=e.get,e))}},{\"es5-ext/object/valid-callable\":59}],86:[function(t,e,n){\"use strict\";var r,i=t(\"es5-ext/array/to-array\"),o=t(\"es5-ext/object/valid-callable\"),u=Array.prototype.slice;r=function(t){return this.map(function(e,n){return e?e(t[n]):t[n]}).concat(u.call(t,this.length))},e.exports=function(t){return(t=i(t)).forEach(function(t){null!=t&&o(t)}),r.bind(t)}},{\"es5-ext/array/to-array\":31,\"es5-ext/object/valid-callable\":59}],87:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/#/e-index-of\");e.exports=function(){var t=0,e=[],n=[];return{get:function(t){var i=r.call(e,t[0]);return-1===i?null:n[i]},set:function(r){return e.push(r[0]),n.push(++t),t},delete:function(t){var i=r.call(n,t);-1!==i&&(e.splice(i,1),n.splice(i,1))},clear:function(){e=[],n=[]}}}},{\"es5-ext/array/#/e-index-of\":27}],88:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/#/e-index-of\"),i=Object.create;e.exports=function(t){var e=0,n=[[],[]],o=i(null);return{get:function(e){for(var i,o=0,u=n;o<t-1;){if(-1===(i=r.call(u[0],e[o])))return null;u=u[1][i],++o}return-1===(i=r.call(u[0],e[o]))?null:u[1][i]||null},set:function(i){for(var u,a=0,s=n;a<t-1;)-1===(u=r.call(s[0],i[a]))&&(u=s[0].push(i[a])-1,s[1].push([[],[]])),s=s[1][u],++a;return-1===(u=r.call(s[0],i[a]))&&(u=s[0].push(i[a])-1),s[1][u]=++e,o[e]=i,e},delete:function(e){for(var i,u=0,a=n,s=[],f=o[e];u<t-1;){if(-1===(i=r.call(a[0],f[u])))return;s.push(a,i),a=a[1][i],++u}if(-1!==(i=r.call(a[0],f[u]))){for(e=a[1][i],a[0].splice(i,1),a[1].splice(i,1);!a[0].length&&s.length;)i=s.pop(),(a=s.pop())[0].splice(i,1),a[1].splice(i,1);delete o[e]}},clear:function(){n=[[],[]],o=i(null)}}}},{\"es5-ext/array/#/e-index-of\":27}],89:[function(t,e,n){\"use strict\";e.exports=function(t){return t?function(e){for(var n=String(e[0]),r=0,i=t;--i;)n+=\"\u0001\"+e[++r];return n}:function(){return\"\"}}},{}],90:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/array/#/e-index-of\"),i=Object.create;e.exports=function(){var t=0,e=[],n=i(null);return{get:function(t){var n,i=0,o=e,u=t.length;if(0===u)return o[u]||null;if(o=o[u]){for(;i<u-1;){if(-1===(n=r.call(o[0],t[i])))return null;o=o[1][n],++i}return-1===(n=r.call(o[0],t[i]))?null:o[1][n]||null}return null},set:function(i){var o,u=0,a=e,s=i.length;if(0===s)a[s]=++t;else{for(a[s]||(a[s]=[[],[]]),a=a[s];u<s-1;)-1===(o=r.call(a[0],i[u]))&&(o=a[0].push(i[u])-1,a[1].push([[],[]])),a=a[1][o],++u;-1===(o=r.call(a[0],i[u]))&&(o=a[0].push(i[u])-1),a[1][o]=++t}return n[t]=i,t},delete:function(t){var i,o=0,u=e,a=n[t],s=a.length,f=[];if(0===s)delete u[s];else if(u=u[s]){for(;o<s-1;){if(-1===(i=r.call(u[0],a[o])))return;f.push(u,i),u=u[1][i],++o}if(-1===(i=r.call(u[0],a[o])))return;for(t=u[1][i],u[0].splice(i,1),u[1].splice(i,1);!u[0].length&&f.length;)i=f.pop(),(u=f.pop())[0].splice(i,1),u[1].splice(i,1)}delete n[t]},clear:function(){e=[],n=i(null)}}}},{\"es5-ext/array/#/e-index-of\":27}],91:[function(t,e,n){\"use strict\";e.exports=function(t){var e,n,r=t.length;if(!r)return\"\u0002\";for(e=String(t[n=0]);--r;)e+=\"\u0001\"+t[++n];return e}},{}],92:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/object/valid-callable\"),i=t(\"es5-ext/object/for-each\"),o=t(\"./lib/registered-extensions\"),u=t(\"./lib/configure-map\"),a=t(\"./lib/resolve-length\"),s=Object.prototype.hasOwnProperty;e.exports=function t(e){var n,f,c;if(r(e),(n=Object(arguments[1])).async&&n.promise)throw new Error(\"Options 'async' and 'promise' cannot be used together\");return s.call(e,\"__memoized__\")&&!n.force?e:(f=a(n.length,e.length,n.async&&o.async),c=u(e,f,n),i(o,function(t,e){n[e]&&t(n[e],c,n)}),t.__profiler__&&t.__profiler__(c),c.updateEnv(),c.memoized)}},{\"./lib/configure-map\":82,\"./lib/registered-extensions\":83,\"./lib/resolve-length\":84,\"es5-ext/object/for-each\":49,\"es5-ext/object/valid-callable\":59}],93:[function(t,e,n){(function(t){\"use strict\";var n,r;n=function(t){if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");return t},r=function(t){var e,r,i=document.createTextNode(\"\"),o=0;return new t(function(){var t;if(e)r&&(e=r.concat(e));else{if(!r)return;e=r}if(r=e,e=null,\"function\"==typeof r)return t=r,r=null,void t();for(i.data=o=++o%2;r;)t=r.shift(),r.length||(r=null),t()}).observe(i,{characterData:!0}),function(t){n(t),e?\"function\"==typeof e?e=[e,t]:e.push(t):(e=t,i.data=o=++o%2)}},e.exports=function(){if(\"object\"==typeof t&&t&&\"function\"==typeof t.nextTick)return t.nextTick;if(\"object\"==typeof document&&document){if(\"function\"==typeof MutationObserver)return r(MutationObserver);if(\"function\"==typeof WebKitMutationObserver)return r(WebKitMutationObserver)}return\"function\"==typeof setImmediate?function(t){setImmediate(n(t))}:\"function\"==typeof setTimeout||\"object\"==typeof setTimeout?function(t){setTimeout(n(t),0)}:null}()}).call(this,t(\"_process\"))},{_process:95}],94:[function(t,e,n){(function(r){!function(t){if(\"object\"==typeof n)e.exports=t();else{var i;\"undefined\"!=typeof window?i=window:void 0!==r?i=r:\"undefined\"!=typeof self&&(i=self),i.objectHash=t()}}(function(){return function e(n,r,i){function o(a,s){if(!r[a]){if(!n[a]){var f=\"function\"==typeof t&&t;if(!s&&f)return f(a,!0);if(u)return u(a,!0);throw new Error(\"Cannot find module '\"+a+\"'\")}var c=r[a]={exports:{}};n[a][0].call(c.exports,function(t){var e=n[a][1][t];return o(e||t)},c,c.exports,e,n,r,i)}return r[a].exports}for(var u=\"function\"==typeof t&&t,a=0;a<i.length;a++)o(i[a]);return o}({1:[function(t,e,n){(function(r,i,o,u,a,s,f,c,l){\"use strict\";function p(t,e){return e=h(t,e),d(t,e)}function h(t,e){if(e=e||{},e.algorithm=e.algorithm||\"sha1\",e.encoding=e.encoding||\"hex\",e.excludeValues=!!e.excludeValues,e.algorithm=e.algorithm.toLowerCase(),e.encoding=e.encoding.toLowerCase(),e.ignoreUnknown=!0===e.ignoreUnknown,e.respectType=!1!==e.respectType,e.respectFunctionNames=!1!==e.respectFunctionNames,e.respectFunctionProperties=!1!==e.respectFunctionProperties,e.unorderedArrays=!0===e.unorderedArrays,e.unorderedSets=!1!==e.unorderedSets,e.replacer=e.replacer||void 0,void 0===t)throw new Error(\"Object argument required.\");for(var n=0;n<m.length;++n)m[n].toLowerCase()===e.algorithm.toLowerCase()&&(e.algorithm=m[n]);if(-1===m.indexOf(e.algorithm))throw new Error('Algorithm \"'+e.algorithm+'\"  not supported. supported values: '+m.join(\", \"));if(-1===w.indexOf(e.encoding)&&\"passthrough\"!==e.algorithm)throw new Error('Encoding \"'+e.encoding+'\"  not supported. supported values: '+w.join(\", \"));return e}function y(t){return\"function\"==typeof t&&null!=/^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i.exec(Function.prototype.toString.call(t))}function d(t,e){var n;if(void 0===(n=\"passthrough\"!==e.algorithm?b.createHash(e.algorithm):new g).write&&(n.write=n.update,n.end=n.update),v(e,n).dispatch(t),n.update||n.end(\"\"),n.digest)return n.digest(\"buffer\"===e.encoding?void 0:e.encoding);var r=n.read();return\"buffer\"===e.encoding?r:r.toString(e.encoding)}function v(t,e,n){n=n||[];var r=function(t){return e.update?e.update(t,\"utf8\"):e.write(t,\"utf8\")};return{dispatch:function(e){t.replacer&&(e=t.replacer(e));var n=typeof e;return null===e&&(n=\"null\"),this[\"_\"+n](e)},_object:function(e){var i=/\\[object (.*)\\]/i,u=Object.prototype.toString.call(e),a=i.exec(u);a=(a=a?a[1]:\"unknown:[\"+u+\"]\").toLowerCase();var s=null;if((s=n.indexOf(e))>=0)return this.dispatch(\"[CIRCULAR:\"+s+\"]\");if(n.push(e),void 0!==o&&o.isBuffer&&o.isBuffer(e))return r(\"buffer:\"),r(e);if(\"object\"===a||\"function\"===a){var f=Object.keys(e).sort();!1===t.respectType||y(e)||f.splice(0,0,\"prototype\",\"__proto__\",\"constructor\"),r(\"object:\"+f.length+\":\");var c=this;return f.forEach(function(n){c.dispatch(n),r(\":\"),t.excludeValues||c.dispatch(e[n]),r(\",\")})}if(!this[\"_\"+a]){if(t.ignoreUnknown)return r(\"[\"+a+\"]\");throw new Error('Unknown object type \"'+a+'\"')}this[\"_\"+a](e)},_array:function(e,i){i=void 0!==i?i:!1!==t.unorderedArrays;var o=this;if(r(\"array:\"+e.length+\":\"),!i||e.length<=1)return e.forEach(function(t){return o.dispatch(t)});var u=[],a=e.map(function(e){var r=new g,i=n.slice();return v(t,r,i).dispatch(e),u=u.concat(i.slice(n.length)),r.read().toString()});return n=n.concat(u),a.sort(),this._array(a,!1)},_date:function(t){return r(\"date:\"+t.toJSON())},_symbol:function(t){return r(\"symbol:\"+t.toString())},_error:function(t){return r(\"error:\"+t.toString())},_boolean:function(t){return r(\"bool:\"+t.toString())},_string:function(t){r(\"string:\"+t.length+\":\"),r(t)},_function:function(e){r(\"fn:\"),y(e)?this.dispatch(\"[native]\"):this.dispatch(e.toString()),!1!==t.respectFunctionNames&&this.dispatch(\"function-name:\"+String(e.name)),t.respectFunctionProperties&&this._object(e)},_number:function(t){return r(\"number:\"+t.toString())},_xml:function(t){return r(\"xml:\"+t.toString())},_null:function(){return r(\"Null\")},_undefined:function(){return r(\"Undefined\")},_regexp:function(t){return r(\"regex:\"+t.toString())},_uint8array:function(t){return r(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(t))},_uint8clampedarray:function(t){return r(\"uint8clampedarray:\"),this.dispatch(Array.prototype.slice.call(t))},_int8array:function(t){return r(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(t))},_uint16array:function(t){return r(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(t))},_int16array:function(t){return r(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(t))},_uint32array:function(t){return r(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(t))},_int32array:function(t){return r(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(t))},_float32array:function(t){return r(\"float32array:\"),this.dispatch(Array.prototype.slice.call(t))},_float64array:function(t){return r(\"float64array:\"),this.dispatch(Array.prototype.slice.call(t))},_arraybuffer:function(t){return r(\"arraybuffer:\"),this.dispatch(new Uint8Array(t))},_url:function(t){return r(\"url:\"+t.toString())},_map:function(e){r(\"map:\");var n=Array.from(e);return this._array(n,!1!==t.unorderedSets)},_set:function(e){r(\"set:\");var n=Array.from(e);return this._array(n,!1!==t.unorderedSets)},_blob:function(){if(t.ignoreUnknown)return r(\"[blob]\");throw Error('Hashing Blob objects is currently not supported\\n(see https://github.com/puleos/object-hash/issues/26)\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n')},_domwindow:function(){return r(\"domwindow\")},_process:function(){return r(\"process\")},_timer:function(){return r(\"timer\")},_pipe:function(){return r(\"pipe\")},_tcp:function(){return r(\"tcp\")},_udp:function(){return r(\"udp\")},_tty:function(){return r(\"tty\")},_statwatcher:function(){return r(\"statwatcher\")},_securecontext:function(){return r(\"securecontext\")},_connection:function(){return r(\"connection\")},_zlib:function(){return r(\"zlib\")},_context:function(){return r(\"context\")},_nodescript:function(){return r(\"nodescript\")},_httpparser:function(){return r(\"httpparser\")},_dataview:function(){return r(\"dataview\")},_signal:function(){return r(\"signal\")},_fsevent:function(){return r(\"fsevent\")},_tlswrap:function(){return r(\"tlswrap\")}}}function g(){return{buf:\"\",write:function(t){this.buf+=t},end:function(t){this.buf+=t},read:function(){return this.buf}}}var b=t(\"crypto\");(n=e.exports=p).sha1=function(t){return p(t)},n.keys=function(t){return p(t,{excludeValues:!0,algorithm:\"sha1\",encoding:\"hex\"})},n.MD5=function(t){return p(t,{algorithm:\"md5\",encoding:\"hex\"})},n.keysMD5=function(t){return p(t,{algorithm:\"md5\",encoding:\"hex\",excludeValues:!0})};var m=b.getHashes?b.getHashes().slice():[\"sha1\",\"md5\"];m.push(\"passthrough\");var w=[\"buffer\",\"hex\",\"binary\",\"base64\"];n.writeToStream=function(t,e,n){return void 0===n&&(n=e,e={}),e=h(t,e),v(e,n).dispatch(t)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_8c3adc78.js\",\"/\")},{buffer:3,crypto:5,lYpoI2:10}],2:[function(t,e,n){(function(t,e,r,i,o,u,a,s,f){var c=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";!function(t){\"use strict\";function e(t){var e=t.charCodeAt(0);return e===r||e===s?62:e===i||e===f?63:e<o?-1:e<o+10?e-o+26+26:e<a+26?e-a:e<u+26?e-u+26:void 0}var n=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,r=\"+\".charCodeAt(0),i=\"/\".charCodeAt(0),o=\"0\".charCodeAt(0),u=\"a\".charCodeAt(0),a=\"A\".charCodeAt(0),s=\"-\".charCodeAt(0),f=\"_\".charCodeAt(0);t.toByteArray=function(t){function r(t){f[l++]=t}var i,o,u,a,s,f;if(t.length%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var c=t.length;s=\"=\"===t.charAt(c-2)?2:\"=\"===t.charAt(c-1)?1:0,f=new n(3*t.length/4-s),u=s>0?t.length-4:t.length;var l=0;for(i=0,o=0;i<u;i+=4,o+=3)a=e(t.charAt(i))<<18|e(t.charAt(i+1))<<12|e(t.charAt(i+2))<<6|e(t.charAt(i+3)),r((16711680&a)>>16),r((65280&a)>>8),r(255&a);return 2===s?(a=e(t.charAt(i))<<2|e(t.charAt(i+1))>>4,r(255&a)):1===s&&(a=e(t.charAt(i))<<10|e(t.charAt(i+1))<<4|e(t.charAt(i+2))>>2,r(a>>8&255),r(255&a)),f},t.fromByteArray=function(t){function e(t){return c.charAt(t)}var n,r,i,o=t.length%3,u=\"\";for(n=0,i=t.length-o;n<i;n+=3)r=(t[n]<<16)+(t[n+1]<<8)+t[n+2],u+=function(t){return e(t>>18&63)+e(t>>12&63)+e(t>>6&63)+e(63&t)}(r);switch(o){case 1:u+=e((r=t[t.length-1])>>2),u+=e(r<<4&63),u+=\"==\";break;case 2:u+=e((r=(t[t.length-2]<<8)+t[t.length-1])>>10),u+=e(r>>4&63),u+=e(r<<2&63),u+=\"=\"}return u}}(void 0===n?this.base64js={}:n)}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/node_modules/gulp-browserify/node_modules/base64-js/lib\")},{buffer:3,lYpoI2:10}],3:[function(t,e,n){(function(e,r,i,o,u,a,s,f,c){function i(t,e,n){if(!(this instanceof i))return new i(t,e,n);var r=typeof t;if(\"base64\"===e&&\"string\"===r)for(t=U(t);t.length%4!=0;)t+=\"=\";var o;if(\"number\"===r)o=$(t);else if(\"string\"===r)o=i.byteLength(t,e);else{if(\"object\"!==r)throw new Error(\"First argument needs to be a number, array or string.\");o=$(t.length)}var u;i._useTypedArrays?u=i._augment(new Uint8Array(o)):(u=this,u.length=o,u._isBuffer=!0);var a;if(i._useTypedArrays&&\"number\"==typeof t.byteLength)u._set(t);else if(M(t))for(a=0;a<o;a++)i.isBuffer(t)?u[a]=t.readUInt8(a):u[a]=t[a];else if(\"string\"===r)u.write(t,0,e);else if(\"number\"===r&&!i._useTypedArrays&&!n)for(a=0;a<o;a++)u[a]=0;return u}function l(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;var u=e.length;J(u%2==0,\"Invalid hex string\"),r>u/2&&(r=u/2);for(var a=0;a<r;a++){var s=parseInt(e.substr(2*a,2),16);J(!isNaN(s),\"Invalid hex string\"),t[n+a]=s}return i._charsWritten=2*a,a}function p(t,e,n,r){return i._charsWritten=V(z(e),t,n,r)}function h(t,e,n,r){return i._charsWritten=V(F(e),t,n,r)}function y(t,e,n,r){return h(t,e,n,r)}function d(t,e,n,r){return i._charsWritten=V(q(e),t,n,r)}function v(t,e,n,r){return i._charsWritten=V(Y(e),t,n,r)}function g(t,e,n){return 0===e&&n===t.length?G.fromByteArray(t):G.fromByteArray(t.slice(e,n))}function b(t,e,n){var r=\"\",i=\"\";n=Math.min(t.length,n);for(var o=e;o<n;o++)t[o]<=127?(r+=Q(i)+String.fromCharCode(t[o]),i=\"\"):i+=\"%\"+t[o].toString(16);return r+Q(i)}function m(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var i=e;i<n;i++)r+=String.fromCharCode(t[i]);return r}function w(t,e,n){return m(t,e,n)}function _(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i=\"\",o=e;o<n;o++)i+=D(t[o]);return i}function j(t,e,n){for(var r=t.slice(e,n),i=\"\",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function x(t,e,n,r){r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+1<t.length,\"Trying to read beyond buffer length\"));var i=t.length;if(!(e>=i)){var o;return n?(o=t[e],e+1<i&&(o|=t[e+1]<<8)):(o=t[e]<<8,e+1<i&&(o|=t[e+1])),o}}function O(t,e,n,r){r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+3<t.length,\"Trying to read beyond buffer length\"));var i=t.length;if(!(e>=i)){var o;return n?(e+2<i&&(o=t[e+2]<<16),e+1<i&&(o|=t[e+1]<<8),o|=t[e],e+3<i&&(o+=t[e+3]<<24>>>0)):(e+1<i&&(o=t[e+1]<<16),e+2<i&&(o|=t[e+2]<<8),e+3<i&&(o|=t[e+3]),o+=t[e]<<24>>>0),o}}function k(t,e,n,r){if(r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+1<t.length,\"Trying to read beyond buffer length\")),!(e>=t.length)){var i=x(t,e,n,!0);return 32768&i?-1*(65535-i+1):i}}function E(t,e,n,r){if(r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e+3<t.length,\"Trying to read beyond buffer length\")),!(e>=t.length)){var i=O(t,e,n,!0);return 2147483648&i?-1*(4294967295-i+1):i}}function A(t,e,n,r){return r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(e+3<t.length,\"Trying to read beyond buffer length\")),X.read(t,e,n,23,4)}function S(t,e,n,r){return r||(J(\"boolean\"==typeof n,\"missing or invalid endian\"),J(e+7<t.length,\"Trying to read beyond buffer length\")),X.read(t,e,n,52,8)}function I(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+1<t.length,\"trying to write beyond buffer length\"),K(e,65535));var o=t.length;if(!(n>=o))for(var u=0,a=Math.min(o-n,2);u<a;u++)t[n+u]=(e&255<<8*(r?u:1-u))>>>8*(r?u:1-u)}function T(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+3<t.length,\"trying to write beyond buffer length\"),K(e,4294967295));var o=t.length;if(!(n>=o))for(var u=0,a=Math.min(o-n,4);u<a;u++)t[n+u]=e>>>8*(r?u:3-u)&255}function P(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+1<t.length,\"Trying to write beyond buffer length\"),W(e,32767,-32768)),n>=t.length||(e>=0?I(t,e,n,r,i):I(t,65535+e+1,n,r,i))}function B(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+3<t.length,\"Trying to write beyond buffer length\"),W(e,2147483647,-2147483648)),n>=t.length||(e>=0?T(t,e,n,r,i):T(t,4294967295+e+1,n,r,i))}function C(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+3<t.length,\"Trying to write beyond buffer length\"),H(e,3.4028234663852886e38,-3.4028234663852886e38)),n>=t.length||X.write(t,e,n,r,23,4)}function L(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\"missing value\"),J(\"boolean\"==typeof r,\"missing or invalid endian\"),J(void 0!==n&&null!==n,\"missing offset\"),J(n+7<t.length,\"Trying to write beyond buffer length\"),H(e,1.7976931348623157e308,-1.7976931348623157e308)),n>=t.length||X.write(t,e,n,r,52,8)}function U(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function R(t,e,n){return\"number\"!=typeof t?n:(t=~~t)>=e?e:t>=0?t:(t+=e)>=0?t:0}function $(t){return(t=~~Math.ceil(+t))<0?0:t}function N(t){return(Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)})(t)}function M(t){return N(t)||i.isBuffer(t)||t&&\"object\"==typeof t&&\"number\"==typeof t.length}function D(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function z(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);if(r<=127)e.push(t.charCodeAt(n));else{var i=n;r>=55296&&r<=57343&&n++;for(var o=encodeURIComponent(t.slice(i,n+1)).substr(1).split(\"%\"),u=0;u<o.length;u++)e.push(parseInt(o[u],16))}}return e}function F(t){for(var e=[],n=0;n<t.length;n++)e.push(255&t.charCodeAt(n));return e}function Y(t){for(var e,n,r,i=[],o=0;o<t.length;o++)e=t.charCodeAt(o),n=e>>8,r=e%256,i.push(r),i.push(n);return i}function q(t){return G.toByteArray(t)}function V(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);i++)e[i+n]=t[i];return i}function Q(t){try{return decodeURIComponent(t)}catch(t){return String.fromCharCode(65533)}}function K(t,e){J(\"number\"==typeof t,\"cannot write a non-number as a number\"),J(t>=0,\"specified a negative value for writing an unsigned value\"),J(t<=e,\"value is larger than maximum value for type\"),J(Math.floor(t)===t,\"value has a fractional component\")}function W(t,e,n){J(\"number\"==typeof t,\"cannot write a non-number as a number\"),J(t<=e,\"value larger than maximum allowed value\"),J(t>=n,\"value smaller than minimum allowed value\"),J(Math.floor(t)===t,\"value has a fractional component\")}function H(t,e,n){J(\"number\"==typeof t,\"cannot write a non-number as a number\"),J(t<=e,\"value larger than maximum allowed value\"),J(t>=n,\"value smaller than minimum allowed value\")}function J(t,e){if(!t)throw new Error(e||\"Failed assertion\")}var G=t(\"base64-js\"),X=t(\"ieee754\");n.Buffer=i,n.SlowBuffer=i,n.INSPECT_MAX_BYTES=50,i.poolSize=8192,i._useTypedArrays=function(){try{var t=new ArrayBuffer(0),e=new Uint8Array(t);return e.foo=function(){return 42},42===e.foo()&&\"function\"==typeof e.subarray}catch(t){return!1}}(),i.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"raw\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},i.isBuffer=function(t){return!(null===t||void 0===t||!t._isBuffer)},i.byteLength=function(t,e){var n;switch(t+=\"\",e||\"utf8\"){case\"hex\":n=t.length/2;break;case\"utf8\":case\"utf-8\":n=z(t).length;break;case\"ascii\":case\"binary\":case\"raw\":n=t.length;break;case\"base64\":n=q(t).length;break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":n=2*t.length;break;default:throw new Error(\"Unknown encoding\")}return n},i.concat=function(t,e){if(J(N(t),\"Usage: Buffer.concat(list, [totalLength])\\nlist should be an Array.\"),0===t.length)return new i(0);if(1===t.length)return t[0];var n;if(\"number\"!=typeof e)for(e=0,n=0;n<t.length;n++)e+=t[n].length;var r=new i(e),o=0;for(n=0;n<t.length;n++){var u=t[n];u.copy(r,o),o+=u.length}return r},i.prototype.write=function(t,e,n,r){if(isFinite(e))isFinite(n)||(r=n,n=void 0);else{var i=r;r=e,e=n,n=i}e=Number(e)||0;var o=this.length-e;n?(n=Number(n))>o&&(n=o):n=o;var u;switch(r=String(r||\"utf8\").toLowerCase()){case\"hex\":u=l(this,t,e,n);break;case\"utf8\":case\"utf-8\":u=p(this,t,e,n);break;case\"ascii\":u=h(this,t,e,n);break;case\"binary\":u=y(this,t,e,n);break;case\"base64\":u=d(this,t,e,n);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":u=v(this,t,e,n);break;default:throw new Error(\"Unknown encoding\")}return u},i.prototype.toString=function(t,e,n){var r=this;if(t=String(t||\"utf8\").toLowerCase(),e=Number(e)||0,(n=void 0!==n?Number(n):n=r.length)===e)return\"\";var i;switch(t){case\"hex\":i=_(r,e,n);break;case\"utf8\":case\"utf-8\":i=b(r,e,n);break;case\"ascii\":i=m(r,e,n);break;case\"binary\":i=w(r,e,n);break;case\"base64\":i=g(r,e,n);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":i=j(r,e,n);break;default:throw new Error(\"Unknown encoding\")}return i},i.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},i.prototype.copy=function(t,e,n,r){var o=this;if(n||(n=0),r||0===r||(r=this.length),e||(e=0),r!==n&&0!==t.length&&0!==o.length){J(r>=n,\"sourceEnd < sourceStart\"),J(e>=0&&e<t.length,\"targetStart out of bounds\"),J(n>=0&&n<o.length,\"sourceStart out of bounds\"),J(r>=0&&r<=o.length,\"sourceEnd out of bounds\"),r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var u=r-n;if(u<100||!i._useTypedArrays)for(var a=0;a<u;a++)t[a+e]=this[a+n];else t._set(this.subarray(n,n+u),e)}},i.prototype.slice=function(t,e){var n=this.length;if(t=R(t,n,0),e=R(e,n,n),i._useTypedArrays)return i._augment(this.subarray(t,e));for(var r=e-t,o=new i(r,void 0,!0),u=0;u<r;u++)o[u]=this[u+t];return o},i.prototype.get=function(t){return console.log(\".get() is deprecated. Access using array indexes instead.\"),this.readUInt8(t)},i.prototype.set=function(t,e){return console.log(\".set() is deprecated. Access using array indexes instead.\"),this.writeUInt8(t,e)},i.prototype.readUInt8=function(t,e){if(e||(J(void 0!==t&&null!==t,\"missing offset\"),J(t<this.length,\"Trying to read beyond buffer length\")),!(t>=this.length))return this[t]},i.prototype.readUInt16LE=function(t,e){return x(this,t,!0,e)},i.prototype.readUInt16BE=function(t,e){return x(this,t,!1,e)},i.prototype.readUInt32LE=function(t,e){return O(this,t,!0,e)},i.prototype.readUInt32BE=function(t,e){return O(this,t,!1,e)},i.prototype.readInt8=function(t,e){if(e||(J(void 0!==t&&null!==t,\"missing offset\"),J(t<this.length,\"Trying to read beyond buffer length\")),!(t>=this.length))return 128&this[t]?-1*(255-this[t]+1):this[t]},i.prototype.readInt16LE=function(t,e){return k(this,t,!0,e)},i.prototype.readInt16BE=function(t,e){return k(this,t,!1,e)},i.prototype.readInt32LE=function(t,e){return E(this,t,!0,e)},i.prototype.readInt32BE=function(t,e){return E(this,t,!1,e)},i.prototype.readFloatLE=function(t,e){return A(this,t,!0,e)},i.prototype.readFloatBE=function(t,e){return A(this,t,!1,e)},i.prototype.readDoubleLE=function(t,e){return S(this,t,!0,e)},i.prototype.readDoubleBE=function(t,e){return S(this,t,!1,e)},i.prototype.writeUInt8=function(t,e,n){n||(J(void 0!==t&&null!==t,\"missing value\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e<this.length,\"trying to write beyond buffer length\"),K(t,255)),e>=this.length||(this[e]=t)},i.prototype.writeUInt16LE=function(t,e,n){I(this,t,e,!0,n)},i.prototype.writeUInt16BE=function(t,e,n){I(this,t,e,!1,n)},i.prototype.writeUInt32LE=function(t,e,n){T(this,t,e,!0,n)},i.prototype.writeUInt32BE=function(t,e,n){T(this,t,e,!1,n)},i.prototype.writeInt8=function(t,e,n){n||(J(void 0!==t&&null!==t,\"missing value\"),J(void 0!==e&&null!==e,\"missing offset\"),J(e<this.length,\"Trying to write beyond buffer length\"),W(t,127,-128)),e>=this.length||(t>=0?this.writeUInt8(t,e,n):this.writeUInt8(255+t+1,e,n))},i.prototype.writeInt16LE=function(t,e,n){P(this,t,e,!0,n)},i.prototype.writeInt16BE=function(t,e,n){P(this,t,e,!1,n)},i.prototype.writeInt32LE=function(t,e,n){B(this,t,e,!0,n)},i.prototype.writeInt32BE=function(t,e,n){B(this,t,e,!1,n)},i.prototype.writeFloatLE=function(t,e,n){C(this,t,e,!0,n)},i.prototype.writeFloatBE=function(t,e,n){C(this,t,e,!1,n)},i.prototype.writeDoubleLE=function(t,e,n){L(this,t,e,!0,n)},i.prototype.writeDoubleBE=function(t,e,n){L(this,t,e,!1,n)},i.prototype.fill=function(t,e,n){if(t||(t=0),e||(e=0),n||(n=this.length),\"string\"==typeof t&&(t=t.charCodeAt(0)),J(\"number\"==typeof t&&!isNaN(t),\"value is not a number\"),J(n>=e,\"end < start\"),n!==e&&0!==this.length){J(e>=0&&e<this.length,\"start out of bounds\"),J(n>=0&&n<=this.length,\"end out of bounds\");for(var r=e;r<n;r++)this[r]=t}},i.prototype.inspect=function(){for(var t=[],e=this.length,r=0;r<e;r++)if(t[r]=D(this[r]),r===n.INSPECT_MAX_BYTES){t[r+1]=\"...\";break}return\"<Buffer \"+t.join(\" \")+\">\"},i.prototype.toArrayBuffer=function(){if(\"undefined\"!=typeof Uint8Array){if(i._useTypedArrays)return new i(this).buffer;for(var t=new Uint8Array(this.length),e=0,n=t.length;e<n;e+=1)t[e]=this[e];return t.buffer}throw new Error(\"Buffer.toArrayBuffer not supported in this browser\")};var Z=i.prototype;i._augment=function(t){return t._isBuffer=!0,t._get=t.get,t._set=t.set,t.get=Z.get,t.set=Z.set,t.write=Z.write,t.toString=Z.toString,t.toLocaleString=Z.toString,t.toJSON=Z.toJSON,t.copy=Z.copy,t.slice=Z.slice,t.readUInt8=Z.readUInt8,t.readUInt16LE=Z.readUInt16LE,t.readUInt16BE=Z.readUInt16BE,t.readUInt32LE=Z.readUInt32LE,t.readUInt32BE=Z.readUInt32BE,t.readInt8=Z.readInt8,t.readInt16LE=Z.readInt16LE,t.readInt16BE=Z.readInt16BE,t.readInt32LE=Z.readInt32LE,t.readInt32BE=Z.readInt32BE,t.readFloatLE=Z.readFloatLE,t.readFloatBE=Z.readFloatBE,t.readDoubleLE=Z.readDoubleLE,t.readDoubleBE=Z.readDoubleBE,t.writeUInt8=Z.writeUInt8,t.writeUInt16LE=Z.writeUInt16LE,t.writeUInt16BE=Z.writeUInt16BE,t.writeUInt32LE=Z.writeUInt32LE,t.writeUInt32BE=Z.writeUInt32BE,t.writeInt8=Z.writeInt8,t.writeInt16LE=Z.writeInt16LE,t.writeInt16BE=Z.writeInt16BE,t.writeInt32LE=Z.writeInt32LE,t.writeInt32BE=Z.writeInt32BE,t.writeFloatLE=Z.writeFloatLE,t.writeFloatBE=Z.writeFloatBE,t.writeDoubleLE=Z.writeDoubleLE,t.writeDoubleBE=Z.writeDoubleBE,t.fill=Z.fill,t.inspect=Z.inspect,t.toArrayBuffer=Z.toArrayBuffer,t}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/node_modules/gulp-browserify/node_modules/buffer\")},{\"base64-js\":2,buffer:3,ieee754:11,lYpoI2:10}],4:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){if(t.length%h!=0){var n=t.length+(h-t.length%h);t=i.concat([t,y],n)}for(var r=[],o=e?t.readInt32BE:t.readInt32LE,u=0;u<t.length;u+=h)r.push(o.call(t,u));return r}function p(t,e,n){for(var r=new i(e),o=n?r.writeInt32BE:r.writeInt32LE,u=0;u<t.length;u++)o.call(r,t[u],4*u,!0);return r}var h=4,y=new(i=t(\"buffer\").Buffer)(h);y.fill(0);var d=8;e.exports={hash:function(t,e,n,r){return i.isBuffer(t)||(t=new i(t)),p(e(l(t,r),t.length*d),n,r)}}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:10}],5:[function(t,e,n){(function(e,r,i,o,u,a,s,f,c){function l(t,e,n){i.isBuffer(e)||(e=new i(e)),i.isBuffer(n)||(n=new i(n)),e.length>b?e=t(e):e.length<b&&(e=i.concat([e,m],b));for(var r=new i(b),o=new i(b),u=0;u<b;u++)r[u]=54^e[u],o[u]=92^e[u];var a=t(i.concat([r,n]));return t(i.concat([o,a]))}function p(t,e){var n=g[t=t||\"sha1\"],r=[],o=0;return n||h(\"algorithm:\",t,\"is not yet supported\"),{update:function(t){return i.isBuffer(t)||(t=new i(t)),r.push(t),o+=t.length,this},digest:function(t){var o=i.concat(r),u=e?l(n,e,o):n(o);return r=null,t?u.toString(t):u}}}function h(){var t=[].slice.call(arguments).join(\" \");throw new Error([t,\"we accept pull requests\",\"http://github.com/dominictarr/crypto-browserify\"].join(\"\\n\"))}var i=t(\"buffer\").Buffer,y=t(\"./sha\"),d=t(\"./sha256\"),v=t(\"./rng\"),g={sha1:y,sha256:d,md5:t(\"./md5\")},b=64,m=new i(b);m.fill(0),n.createHash=function(t){return p(t)},n.createHmac=function(t,e){return p(t,e)},n.randomBytes=function(t,e){if(!e||!e.call)return new i(v(t));try{e.call(this,void 0,new i(v(t)))}catch(t){e(t)}},function(t,e){for(var n in t)e(t[n],n)}([\"createCredentials\",\"createCipher\",\"createCipheriv\",\"createDecipher\",\"createDecipheriv\",\"createSign\",\"createVerify\",\"createDiffieHellman\",\"pbkdf2\"],function(t){n[t]=function(){h(\"sorry,\",t,\"is not implemented yet\")}})}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./md5\":6,\"./rng\":7,\"./sha\":8,\"./sha256\":9,buffer:3,lYpoI2:10}],6:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){t[e>>5]|=128<<e%32,t[14+(e+64>>>9<<4)]=e;for(var n=1732584193,r=-271733879,i=-1732584194,o=271733878,u=0;u<t.length;u+=16){var a=n,s=r,f=i,c=o;r=v(r=v(r=v(r=v(r=d(r=d(r=d(r=d(r=y(r=y(r=y(r=y(r=h(r=h(r=h(r=h(r,i=h(i,o=h(o,n=h(n,r,i,o,t[u+0],7,-680876936),r,i,t[u+1],12,-389564586),n,r,t[u+2],17,606105819),o,n,t[u+3],22,-1044525330),i=h(i,o=h(o,n=h(n,r,i,o,t[u+4],7,-176418897),r,i,t[u+5],12,1200080426),n,r,t[u+6],17,-1473231341),o,n,t[u+7],22,-45705983),i=h(i,o=h(o,n=h(n,r,i,o,t[u+8],7,1770035416),r,i,t[u+9],12,-1958414417),n,r,t[u+10],17,-42063),o,n,t[u+11],22,-1990404162),i=h(i,o=h(o,n=h(n,r,i,o,t[u+12],7,1804603682),r,i,t[u+13],12,-40341101),n,r,t[u+14],17,-1502002290),o,n,t[u+15],22,1236535329),i=y(i,o=y(o,n=y(n,r,i,o,t[u+1],5,-165796510),r,i,t[u+6],9,-1069501632),n,r,t[u+11],14,643717713),o,n,t[u+0],20,-373897302),i=y(i,o=y(o,n=y(n,r,i,o,t[u+5],5,-701558691),r,i,t[u+10],9,38016083),n,r,t[u+15],14,-660478335),o,n,t[u+4],20,-405537848),i=y(i,o=y(o,n=y(n,r,i,o,t[u+9],5,568446438),r,i,t[u+14],9,-1019803690),n,r,t[u+3],14,-187363961),o,n,t[u+8],20,1163531501),i=y(i,o=y(o,n=y(n,r,i,o,t[u+13],5,-1444681467),r,i,t[u+2],9,-51403784),n,r,t[u+7],14,1735328473),o,n,t[u+12],20,-1926607734),i=d(i,o=d(o,n=d(n,r,i,o,t[u+5],4,-378558),r,i,t[u+8],11,-2022574463),n,r,t[u+11],16,1839030562),o,n,t[u+14],23,-35309556),i=d(i,o=d(o,n=d(n,r,i,o,t[u+1],4,-1530992060),r,i,t[u+4],11,1272893353),n,r,t[u+7],16,-155497632),o,n,t[u+10],23,-1094730640),i=d(i,o=d(o,n=d(n,r,i,o,t[u+13],4,681279174),r,i,t[u+0],11,-358537222),n,r,t[u+3],16,-722521979),o,n,t[u+6],23,76029189),i=d(i,o=d(o,n=d(n,r,i,o,t[u+9],4,-640364487),r,i,t[u+12],11,-421815835),n,r,t[u+15],16,530742520),o,n,t[u+2],23,-995338651),i=v(i,o=v(o,n=v(n,r,i,o,t[u+0],6,-198630844),r,i,t[u+7],10,1126891415),n,r,t[u+14],15,-1416354905),o,n,t[u+5],21,-57434055),i=v(i,o=v(o,n=v(n,r,i,o,t[u+12],6,1700485571),r,i,t[u+3],10,-1894986606),n,r,t[u+10],15,-1051523),o,n,t[u+1],21,-2054922799),i=v(i,o=v(o,n=v(n,r,i,o,t[u+8],6,1873313359),r,i,t[u+15],10,-30611744),n,r,t[u+6],15,-1560198380),o,n,t[u+13],21,1309151649),i=v(i,o=v(o,n=v(n,r,i,o,t[u+4],6,-145523070),r,i,t[u+11],10,-1120210379),n,r,t[u+2],15,718787259),o,n,t[u+9],21,-343485551),n=g(n,a),r=g(r,s),i=g(i,f),o=g(o,c)}return Array(n,r,i,o)}function p(t,e,n,r,i,o){return g(b(g(g(e,t),g(r,o)),i),n)}function h(t,e,n,r,i,o,u){return p(e&n|~e&r,t,e,i,o,u)}function y(t,e,n,r,i,o,u){return p(e&r|n&~r,t,e,i,o,u)}function d(t,e,n,r,i,o,u){return p(e^n^r,t,e,i,o,u)}function v(t,e,n,r,i,o,u){return p(n^(e|~r),t,e,i,o,u)}function g(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function b(t,e){return t<<e|t>>>32-e}var m=t(\"./helpers\");e.exports=function(t){return m.hash(t,l,16)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],7:[function(t,e,n){(function(t,n,r,i,o,u,a,s,f){!function(){var t,n;t=function(t){for(var e,n=new Array(t),r=0;r<t;r++)0==(3&r)&&(e=4294967296*Math.random()),n[r]=e>>>((3&r)<<3)&255;return n},this.crypto&&crypto.getRandomValues&&(n=function(t){var e=new Uint8Array(t);return crypto.getRandomValues(e),e}),e.exports=n||t}()}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:10}],8:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){t[e>>5]|=128<<24-e%32,t[15+(e+64>>9<<4)]=e;for(var n=Array(80),r=1732584193,i=-271733879,o=-1732584194,u=271733878,a=-1009589776,s=0;s<t.length;s+=16){for(var f=r,c=i,l=o,v=u,g=a,b=0;b<80;b++){n[b]=b<16?t[s+b]:d(n[b-3]^n[b-8]^n[b-14]^n[b-16],1);var m=y(y(d(r,5),p(b,i,o,u)),y(y(a,n[b]),h(b)));a=u,u=o,o=d(i,30),i=r,r=m}r=y(r,f),i=y(i,c),o=y(o,l),u=y(u,v),a=y(a,g)}return Array(r,i,o,u,a)}function p(t,e,n,r){return t<20?e&n|~e&r:t<40?e^n^r:t<60?e&n|e&r|n&r:e^n^r}function h(t){return t<20?1518500249:t<40?1859775393:t<60?-1894007588:-899497514}function y(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function d(t,e){return t<<e|t>>>32-e}var v=t(\"./helpers\");e.exports=function(t){return v.hash(t,l,20,!0)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],9:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){var l=t(\"./helpers\"),p=function(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n},h=function(t,e){return t>>>e|t<<32-e},y=function(t,e){return t>>>e},d=function(t,e,n){return t&e^~t&n},v=function(t,e,n){return t&e^t&n^e&n},g=function(t){return h(t,2)^h(t,13)^h(t,22)},b=function(t){return h(t,6)^h(t,11)^h(t,25)},m=function(t){return h(t,7)^h(t,18)^y(t,3)},w=function(t){return h(t,17)^h(t,19)^y(t,10)},_=function(t,e){var n,r,i,o,u,a,s,f,c,l,h=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),y=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),_=new Array(64);t[e>>5]|=128<<24-e%32,t[15+(e+64>>9<<4)]=e;for(var j=0;j<t.length;j+=16){n=y[0],r=y[1],i=y[2],o=y[3],u=y[4],a=y[5],s=y[6],f=y[7];for(var x=0;x<64;x++)_[x]=x<16?t[x+j]:p(p(p(w(_[x-2]),_[x-7]),m(_[x-15])),_[x-16]),c=p(p(p(p(f,b(u)),d(u,a,s)),h[x]),_[x]),l=p(g(n),v(n,r,i)),f=s,s=a,a=u,u=p(o,c),o=i,i=r,r=n,n=p(c,l);y[0]=p(n,y[0]),y[1]=p(r,y[1]),y[2]=p(i,y[2]),y[3]=p(o,y[3]),y[4]=p(u,y[4]),y[5]=p(a,y[5]),y[6]=p(s,y[6]),y[7]=p(f,y[7])}return y};e.exports=function(t){return l.hash(t,_,32,!0)}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],10:[function(t,e,n){(function(t,n,r,i,o,u,a,s,f){function c(){}(t=e.exports={}).nextTick=function(){var t=\"undefined\"!=typeof window&&window.setImmediate,e=\"undefined\"!=typeof window&&window.postMessage&&window.addEventListener;if(t)return function(t){return window.setImmediate(t)};if(e){var n=[];return window.addEventListener(\"message\",function(t){var e=t.source;(e===window||null===e)&&\"process-tick\"===t.data&&(t.stopPropagation(),n.length>0)&&n.shift()()},!0),function(t){n.push(t),window.postMessage(\"process-tick\",\"*\")}}return function(t){setTimeout(t,0)}}(),t.title=\"browser\",t.browser=!0,t.env={},t.argv=[],t.on=c,t.addListener=c,t.once=c,t.off=c,t.removeListener=c,t.removeAllListeners=c,t.emit=c,t.binding=function(t){throw new Error(\"process.binding is not supported\")},t.cwd=function(){return\"/\"},t.chdir=function(t){throw new Error(\"process.chdir is not supported\")}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/process/browser.js\",\"/node_modules/gulp-browserify/node_modules/process\")},{buffer:3,lYpoI2:10}],11:[function(t,e,n){(function(t,e,r,i,o,u,a,s,f){n.read=function(t,e,n,r,i){var o,u,a=8*i-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?i-1:0,p=n?-1:1,h=t[e+l];for(l+=p,o=h&(1<<-c)-1,h>>=-c,c+=a;c>0;o=256*o+t[e+l],l+=p,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=r;c>0;u=256*u+t[e+l],l+=p,c-=8);if(0===o)o=1-f;else{if(o===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),o-=f}return(h?-1:1)*u*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var u,a,s,f=8*o-i-1,c=(1<<f)-1,l=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,y=r?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,u=c):(u=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-u))<1&&(u--,s*=2),(e+=u+l>=1?p/s:p*Math.pow(2,1-l))*s>=2&&(u++,s/=2),u+l>=c?(a=0,u=c):u+l>=1?(a=(e*s-1)*Math.pow(2,i),u+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),u=0));i>=8;t[n+h]=255&a,h+=y,a/=256,i-=8);for(u=u<<i|a,f+=i;f>0;t[n+h]=255&u,h+=y,u/=256,f-=8);t[n+h-y]|=128*d}}).call(this,t(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/ieee754/index.js\",\"/node_modules/ieee754\")},{buffer:3,lYpoI2:10}]},{},[1])(1)})}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],95:[function(t,e,n){function r(){throw new Error(\"setTimeout has not been defined\")}function i(){throw new Error(\"clearTimeout has not been defined\")}function o(t){if(l===setTimeout)return setTimeout(t,0);if((l===r||!l)&&setTimeout)return l=setTimeout,setTimeout(t,0);try{return l(t,0)}catch(e){try{return l.call(null,t,0)}catch(e){return l.call(this,t,0)}}}function u(t){if(p===clearTimeout)return clearTimeout(t);if((p===i||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(t);try{return p(t)}catch(e){try{return p.call(null,t)}catch(e){return p.call(this,t)}}}function a(){v&&y&&(v=!1,y.length?d=y.concat(d):g=-1,d.length&&s())}function s(){if(!v){var t=o(a);v=!0;for(var e=d.length;e;){for(y=d,d=[];++g<e;)y&&y[g].run();g=-1,e=d.length}y=null,v=!1,u(t)}}function f(t,e){this.fun=t,this.array=e}function c(){}var l,p,h=e.exports={};!function(){try{l=\"function\"==typeof setTimeout?setTimeout:r}catch(t){l=r}try{p=\"function\"==typeof clearTimeout?clearTimeout:i}catch(t){p=i}}();var y,d=[],v=!1,g=-1;h.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];d.push(new f(t,e)),1!==d.length||v||o(s)},f.prototype.run=function(){this.fun.apply(null,this.array)},h.title=\"browser\",h.browser=!0,h.env={},h.argv=[],h.version=\"\",h.versions={},h.on=c,h.addListener=c,h.once=c,h.off=c,h.removeListener=c,h.removeAllListeners=c,h.emit=c,h.prependListener=c,h.prependOnceListener=c,h.listeners=function(t){return[]},h.binding=function(t){throw new Error(\"process.binding is not supported\")},h.cwd=function(){return\"/\"},h.chdir=function(t){throw new Error(\"process.chdir is not supported\")},h.umask=function(){return 0}},{}],96:[function(t,e,n){(function(t){!function(t){\"use strict\";if(\"function\"==typeof bootstrap)bootstrap(\"promise\",t);else if(\"object\"==typeof n&&\"object\"==typeof e)e.exports=t();else if(\"undefined\"!=typeof ses){if(!ses.ok())return;ses.makeQ=t}else{if(\"undefined\"==typeof window&&\"undefined\"==typeof self)throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");var r=\"undefined\"!=typeof window?window:self,i=r.Q;r.Q=t(),r.Q.noConflict=function(){return r.Q=i,this}}}(function(){\"use strict\";function e(t){return function(){return R.apply(t,arguments)}}function n(t){return t===Object(t)}function r(t){return\"[object StopIteration]\"===V(t)||t instanceof B}function i(t,e){if(T&&e.stack&&\"object\"==typeof t&&null!==t&&t.stack){for(var n=[],r=e;r;r=r.source)r.stack&&(!t.__minimumStackCounter__||t.__minimumStackCounter__>r.stackCounter)&&(F(t,\"__minimumStackCounter__\",{value:r.stackCounter,configurable:!0}),n.unshift(r.stack));n.unshift(t.stack);var i=o(n.join(\"\\n\"+Q+\"\\n\"));F(t,\"stack\",{value:i,configurable:!0})}}function o(t){for(var e=t.split(\"\\n\"),n=[],r=0;r<e.length;++r){var i=e[r];s(i)||u(i)||!i||n.push(i)}return n.join(\"\\n\")}function u(t){return-1!==t.indexOf(\"(module.js:\")||-1!==t.indexOf(\"(node.js:\")}function a(t){var e=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(t);if(e)return[e[1],Number(e[2])];var n=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(t);if(n)return[n[1],Number(n[2])];var r=/.*@(.+):(\\d+)$/.exec(t);return r?[r[1],Number(r[2])]:void 0}function s(t){var e=a(t);if(!e)return!1;var n=e[0],r=e[1];return n===P&&r>=C&&r<=X}function f(){if(T)try{throw new Error}catch(n){var t=n.stack.split(\"\\n\"),e=a(t[0].indexOf(\"@\")>0?t[1]:t[2]);if(!e)return;return P=e[0],e[1]}}function c(t){return t instanceof y?t:b(t)?O(t):x(t)}function l(){function t(t){e=t,c.longStackSupport&&T&&(o.source=t),N(n,function(e,n){c.nextTick(function(){t.promiseDispatch.apply(t,n)})},void 0),n=void 0,r=void 0}var e,n=[],r=[],i=z(l.prototype),o=z(y.prototype);if(o.promiseDispatch=function(t,i,o){var u=$(arguments);n?(n.push(u),\"when\"===i&&o[1]&&r.push(o[1])):c.nextTick(function(){e.promiseDispatch.apply(e,u)})},o.valueOf=function(){if(n)return o;var t=v(e);return g(t)&&(e=t),t},o.inspect=function(){return e?e.inspect():{state:\"pending\"}},c.longStackSupport&&T)try{throw new Error}catch(t){o.stack=t.stack.substring(t.stack.indexOf(\"\\n\")+1),o.stackCounter=K++}return i.promise=o,i.resolve=function(n){e||t(c(n))},i.fulfill=function(n){e||t(x(n))},i.reject=function(n){e||t(j(n))},i.notify=function(t){e||N(r,function(e,n){c.nextTick(function(){n(t)})},void 0)},i}function p(t){if(\"function\"!=typeof t)throw new TypeError(\"resolver must be a function.\");var e=l();try{t(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}return e.promise}function h(t){return p(function(e,n){for(var r=0,i=t.length;r<i;r++)c(t[r]).then(e,n)})}function y(t,e,n){void 0===e&&(e=function(t){return j(new Error(\"Promise does not support operation: \"+t))}),void 0===n&&(n=function(){return{state:\"unknown\"}});var r=z(y.prototype);if(r.promiseDispatch=function(n,i,o){var u;try{u=t[i]?t[i].apply(r,o):e.call(r,i,o)}catch(t){u=j(t)}n&&n(u)},r.inspect=n,n){var i=n();\"rejected\"===i.state&&(r.exception=i.reason),r.valueOf=function(){var t=n();return\"pending\"===t.state||\"rejected\"===t.state?r:t.value}}return r}function d(t,e,n,r){return c(t).then(e,n,r)}function v(t){if(g(t)){var e=t.inspect();if(\"fulfilled\"===e.state)return e.value}return t}function g(t){return t instanceof y}function b(t){return n(t)&&\"function\"==typeof t.then}function m(){W.length=0,H.length=0,G||(G=!0)}function w(e,n){G&&(\"object\"==typeof t&&\"function\"==typeof t.emit&&c.nextTick.runAfter(function(){-1!==M(H,e)&&(t.emit(\"unhandledRejection\",n,e),J.push(e))}),H.push(e),n&&void 0!==n.stack?W.push(n.stack):W.push(\"(no stack) \"+n))}function _(e){if(G){var n=M(H,e);-1!==n&&(\"object\"==typeof t&&\"function\"==typeof t.emit&&c.nextTick.runAfter(function(){var r=M(J,e);-1!==r&&(t.emit(\"rejectionHandled\",W[n],e),J.splice(r,1))}),H.splice(n,1),W.splice(n,1))}}function j(t){var e=y({when:function(e){return e&&_(this),e?e(t):this}},function(){return this},function(){return{state:\"rejected\",reason:t}});return w(e,t),e}function x(t){return y({when:function(){return t},get:function(e){return t[e]},set:function(e,n){t[e]=n},delete:function(e){delete t[e]},post:function(e,n){return null===e||void 0===e?t.apply(void 0,n):t[e].apply(t,n)},apply:function(e,n){return t.apply(e,n)},keys:function(){return q(t)}},void 0,function(){return{state:\"fulfilled\",value:t}})}function O(t){var e=l();return c.nextTick(function(){try{t.then(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}}),e.promise}function k(t,e,n){return c(t).spread(e,n)}function E(t,e,n){return c(t).dispatch(e,n)}function A(t){return d(t,function(t){var e=0,n=l();return N(t,function(r,i,o){var u;g(i)&&\"fulfilled\"===(u=i.inspect()).state?t[o]=u.value:(++e,d(i,function(r){t[o]=r,0==--e&&n.resolve(t)},n.reject,function(t){n.notify({index:o,value:t})}))},void 0),0===e&&n.resolve(t),n.promise})}function S(t){if(0===t.length)return c.resolve();var e=c.defer(),n=0;return N(t,function(r,i,o){var u=t[o];n++,d(u,function(t){e.resolve(t)},function(t){0==--n&&(t.message=\"Q can't get fulfillment value from any promise, all promises were rejected. Last error message: \"+t.message,e.reject(t))},function(t){e.notify({index:o,value:t})})},void 0),e.promise}function I(t){return d(t,function(t){return t=D(t,c),d(A(D(t,function(t){return d(t,L,L)})),function(){return t})})}var T=!1;try{throw new Error}catch(t){T=!!t.stack}var P,B,C=f(),L=function(){},U=function(){function e(){for(var t,e;r.next;)t=(r=r.next).task,r.task=void 0,(e=r.domain)&&(r.domain=void 0,e.enter()),n(t,e);for(;s.length;)n(t=s.pop());o=!1}function n(t,n){try{t()}catch(t){if(a)throw n&&n.exit(),setTimeout(e,0),n&&n.enter(),t;setTimeout(function(){throw t},0)}n&&n.exit()}var r={task:void 0,next:null},i=r,o=!1,u=void 0,a=!1,s=[];if(U=function(e){i=i.next={task:e,domain:a&&t.domain,next:null},o||(o=!0,u())},\"object\"==typeof t&&\"[object process]\"===t.toString()&&t.nextTick)a=!0,u=function(){t.nextTick(e)};else if(\"function\"==typeof setImmediate)u=\"undefined\"!=typeof window?setImmediate.bind(window,e):function(){setImmediate(e)};else if(\"undefined\"!=typeof MessageChannel){var f=new MessageChannel;f.port1.onmessage=function(){u=c,f.port1.onmessage=e,e()};var c=function(){f.port2.postMessage(0)};u=function(){setTimeout(e,0),c()}}else u=function(){setTimeout(e,0)};return U.runAfter=function(t){s.push(t),o||(o=!0,u())},U}(),R=Function.call,$=e(Array.prototype.slice),N=e(Array.prototype.reduce||function(t,e){var n=0,r=this.length;if(1===arguments.length)for(;;){if(n in this){e=this[n++];break}if(++n>=r)throw new TypeError}for(;n<r;n++)n in this&&(e=t(e,this[n],n));return e}),M=e(Array.prototype.indexOf||function(t){for(var e=0;e<this.length;e++)if(this[e]===t)return e;return-1}),D=e(Array.prototype.map||function(t,e){var n=this,r=[];return N(n,function(i,o,u){r.push(t.call(e,o,u,n))},void 0),r}),z=Object.create||function(t){function e(){}return e.prototype=t,new e},F=Object.defineProperty||function(t,e,n){return t[e]=n.value,t},Y=e(Object.prototype.hasOwnProperty),q=Object.keys||function(t){var e=[];for(var n in t)Y(t,n)&&e.push(n);return e},V=e(Object.prototype.toString);B=\"undefined\"!=typeof ReturnValue?ReturnValue:function(t){this.value=t};var Q=\"From previous event:\";c.resolve=c,c.nextTick=U,c.longStackSupport=!1;var K=1;\"object\"==typeof t&&t&&t.env&&t.env.Q_DEBUG&&(c.longStackSupport=!0),c.defer=l,l.prototype.makeNodeResolver=function(){var t=this;return function(e,n){e?t.reject(e):arguments.length>2?t.resolve($(arguments,1)):t.resolve(n)}},c.Promise=p,c.promise=p,p.race=h,p.all=A,p.reject=j,p.resolve=c,c.passByCopy=function(t){return t},y.prototype.passByCopy=function(){return this},c.join=function(t,e){return c(t).join(e)},y.prototype.join=function(t){return c([this,t]).spread(function(t,e){if(t===e)return t;throw new Error(\"Q can't join: not the same: \"+t+\" \"+e)})},c.race=h,y.prototype.race=function(){return this.then(c.race)},c.makePromise=y,y.prototype.toString=function(){return\"[object Promise]\"},y.prototype.then=function(t,e,n){function r(e){try{return\"function\"==typeof t?t(e):e}catch(t){return j(t)}}function o(t){if(\"function\"==typeof e){i(t,a);try{return e(t)}catch(t){return j(t)}}return j(t)}function u(t){return\"function\"==typeof n?n(t):t}var a=this,s=l(),f=!1;return c.nextTick(function(){a.promiseDispatch(function(t){f||(f=!0,s.resolve(r(t)))},\"when\",[function(t){f||(f=!0,s.resolve(o(t)))}])}),a.promiseDispatch(void 0,\"when\",[void 0,function(t){var e,n=!1;try{e=u(t)}catch(t){if(n=!0,!c.onerror)throw t;c.onerror(t)}n||s.notify(e)}]),s.promise},c.tap=function(t,e){return c(t).tap(e)},y.prototype.tap=function(t){return t=c(t),this.then(function(e){return t.fcall(e).thenResolve(e)})},c.when=d,y.prototype.thenResolve=function(t){return this.then(function(){return t})},c.thenResolve=function(t,e){return c(t).thenResolve(e)},y.prototype.thenReject=function(t){return this.then(function(){throw t})},c.thenReject=function(t,e){return c(t).thenReject(e)},c.nearer=v,c.isPromise=g,c.isPromiseAlike=b,c.isPending=function(t){return g(t)&&\"pending\"===t.inspect().state},y.prototype.isPending=function(){return\"pending\"===this.inspect().state},c.isFulfilled=function(t){return!g(t)||\"fulfilled\"===t.inspect().state},y.prototype.isFulfilled=function(){return\"fulfilled\"===this.inspect().state},c.isRejected=function(t){return g(t)&&\"rejected\"===t.inspect().state},y.prototype.isRejected=function(){return\"rejected\"===this.inspect().state};var W=[],H=[],J=[],G=!0;c.resetUnhandledRejections=m,c.getUnhandledReasons=function(){return W.slice()},c.stopUnhandledRejectionTracking=function(){m(),G=!1},m(),c.reject=j,c.fulfill=x,c.master=function(t){return y({isDef:function(){}},function(e,n){return E(t,e,n)},function(){return c(t).inspect()})},c.spread=k,y.prototype.spread=function(t,e){return this.all().then(function(e){return t.apply(void 0,e)},e)},c.async=function(t){return function(){function e(t,e){var u;if(\"undefined\"==typeof StopIteration){try{u=n[t](e)}catch(t){return j(t)}return u.done?c(u.value):d(u.value,i,o)}try{u=n[t](e)}catch(t){return r(t)?c(t.value):j(t)}return d(u,i,o)}var n=t.apply(this,arguments),i=e.bind(e,\"next\"),o=e.bind(e,\"throw\");return i()}},c.spawn=function(t){c.done(c.async(t)())},c.return=function(t){throw new B(t)},c.promised=function(t){return function(){return k([this,A(arguments)],function(e,n){return t.apply(e,n)})}},c.dispatch=E,y.prototype.dispatch=function(t,e){var n=this,r=l();return c.nextTick(function(){n.promiseDispatch(r.resolve,t,e)}),r.promise},c.get=function(t,e){return c(t).dispatch(\"get\",[e])},y.prototype.get=function(t){return this.dispatch(\"get\",[t])},c.set=function(t,e,n){return c(t).dispatch(\"set\",[e,n])},y.prototype.set=function(t,e){return this.dispatch(\"set\",[t,e])},c.del=c.delete=function(t,e){return c(t).dispatch(\"delete\",[e])},y.prototype.del=y.prototype.delete=function(t){return this.dispatch(\"delete\",[t])},c.mapply=c.post=function(t,e,n){return c(t).dispatch(\"post\",[e,n])},y.prototype.mapply=y.prototype.post=function(t,e){return this.dispatch(\"post\",[t,e])},c.send=c.mcall=c.invoke=function(t,e){return c(t).dispatch(\"post\",[e,$(arguments,2)])},y.prototype.send=y.prototype.mcall=y.prototype.invoke=function(t){return this.dispatch(\"post\",[t,$(arguments,1)])},c.fapply=function(t,e){return c(t).dispatch(\"apply\",[void 0,e])},y.prototype.fapply=function(t){return this.dispatch(\"apply\",[void 0,t])},c.try=c.fcall=function(t){return c(t).dispatch(\"apply\",[void 0,$(arguments,1)])},y.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,$(arguments)])},c.fbind=function(t){var e=c(t),n=$(arguments,1);return function(){return e.dispatch(\"apply\",[this,n.concat($(arguments))])}},y.prototype.fbind=function(){var t=this,e=$(arguments);return function(){return t.dispatch(\"apply\",[this,e.concat($(arguments))])}},c.keys=function(t){return c(t).dispatch(\"keys\",[])},y.prototype.keys=function(){return this.dispatch(\"keys\",[])},c.all=A,y.prototype.all=function(){return A(this)},c.any=S,y.prototype.any=function(){return S(this)},c.allResolved=function(t,e,n){return function(){return\"undefined\"!=typeof console&&\"function\"==typeof console.warn&&console.warn(e+\" is deprecated, use \"+n+\" instead.\",new Error(\"\").stack),t.apply(t,arguments)}}(I,\"allResolved\",\"allSettled\"),y.prototype.allResolved=function(){return I(this)},c.allSettled=function(t){return c(t).allSettled()},y.prototype.allSettled=function(){return this.then(function(t){return A(D(t,function(t){function e(){return t.inspect()}return(t=c(t)).then(e,e)}))})},c.fail=c.catch=function(t,e){return c(t).then(void 0,e)},y.prototype.fail=y.prototype.catch=function(t){return this.then(void 0,t)},c.progress=function(t,e){return c(t).then(void 0,void 0,e)},y.prototype.progress=function(t){return this.then(void 0,void 0,t)},c.fin=c.finally=function(t,e){return c(t).finally(e)},y.prototype.fin=y.prototype.finally=function(t){if(!t||\"function\"!=typeof t.apply)throw new Error(\"Q can't apply finally callback\");return t=c(t),this.then(function(e){return t.fcall().then(function(){return e})},function(e){return t.fcall().then(function(){throw e})})},c.done=function(t,e,n,r){return c(t).done(e,n,r)},y.prototype.done=function(e,n,r){var o=function(t){c.nextTick(function(){if(i(t,u),!c.onerror)throw t;c.onerror(t)})},u=e||n||r?this.then(e,n,r):this;\"object\"==typeof t&&t&&t.domain&&(o=t.domain.bind(o)),u.then(void 0,o)},c.timeout=function(t,e,n){return c(t).timeout(e,n)},y.prototype.timeout=function(t,e){var n=l(),r=setTimeout(function(){e&&\"string\"!=typeof e||((e=new Error(e||\"Timed out after \"+t+\" ms\")).code=\"ETIMEDOUT\"),n.reject(e)},t);return this.then(function(t){clearTimeout(r),n.resolve(t)},function(t){clearTimeout(r),n.reject(t)},n.notify),n.promise},c.delay=function(t,e){return void 0===e&&(e=t,t=void 0),c(t).delay(e)},y.prototype.delay=function(t){return this.then(function(e){var n=l();return setTimeout(function(){n.resolve(e)},t),n.promise})},c.nfapply=function(t,e){return c(t).nfapply(e)},y.prototype.nfapply=function(t){var e=l(),n=$(t);return n.push(e.makeNodeResolver()),this.fapply(n).fail(e.reject),e.promise},c.nfcall=function(t){var e=$(arguments,1);return c(t).nfapply(e)},y.prototype.nfcall=function(){var t=$(arguments),e=l();return t.push(e.makeNodeResolver()),this.fapply(t).fail(e.reject),e.promise},c.nfbind=c.denodeify=function(t){if(void 0===t)throw new Error(\"Q can't wrap an undefined function\");var e=$(arguments,1);return function(){var n=e.concat($(arguments)),r=l();return n.push(r.makeNodeResolver()),c(t).fapply(n).fail(r.reject),r.promise}},y.prototype.nfbind=y.prototype.denodeify=function(){var t=$(arguments);return t.unshift(this),c.denodeify.apply(void 0,t)},c.nbind=function(t,e){var n=$(arguments,2);return function(){var r=n.concat($(arguments)),i=l();return r.push(i.makeNodeResolver()),c(function(){return t.apply(e,arguments)}).fapply(r).fail(i.reject),i.promise}},y.prototype.nbind=function(){var t=$(arguments,0);return t.unshift(this),c.nbind.apply(void 0,t)},c.nmapply=c.npost=function(t,e,n){return c(t).npost(e,n)},y.prototype.nmapply=y.prototype.npost=function(t,e){var n=$(e||[]),r=l();return n.push(r.makeNodeResolver()),this.dispatch(\"post\",[t,n]).fail(r.reject),r.promise},c.nsend=c.nmcall=c.ninvoke=function(t,e){var n=$(arguments,2),r=l();return n.push(r.makeNodeResolver()),c(t).dispatch(\"post\",[e,n]).fail(r.reject),r.promise},y.prototype.nsend=y.prototype.nmcall=y.prototype.ninvoke=function(t){var e=$(arguments,1),n=l();return e.push(n.makeNodeResolver()),this.dispatch(\"post\",[t,e]).fail(n.reject),n.promise},c.nodeify=function(t,e){return c(t).nodeify(e)},y.prototype.nodeify=function(t){if(!t)return this;this.then(function(e){c.nextTick(function(){t(null,e)})},function(e){c.nextTick(function(){t(e)})})},c.noConflict=function(){throw new Error(\"Q.noConflict only works when Q is used as a global\")};var X=f();return c})}).call(this,t(\"_process\"))},{_process:95}],97:[function(t,e,n){\"use strict\";e.exports=2147483647},{}],98:[function(t,e,n){\"use strict\";var r=t(\"es5-ext/number/to-pos-integer\"),i=t(\"./max-timeout\");e.exports=function(t){if((t=r(t))>i)throw new TypeError(t+\" exceeds maximum possible timeout\");return t}},{\"./max-timeout\":97,\"es5-ext/number/to-pos-integer\":44}]},{},[8])(8)});\n"
			},
			{
				"name": "MathDecimalAdjustment.js",
				"source": "// MathDecimalAdjustment.js\n// Closure\n(function() {\n  /**\n   * Decimal adjustment of a number.\n   *\n   * @param {String}  type  The type of adjustment.\n   * @param {Number}  value The number.\n   * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n   * @returns {Number} The adjusted value.\n   */\n  function decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n\n  // Decimal round\n  if (!Math.round10) {\n    Math.round10 = function(value, exp) {\n      return decimalAdjust('round', value, exp);\n    };\n  }\n  // Decimal floor\n  if (!Math.floor10) {\n    Math.floor10 = function(value, exp) {\n      return decimalAdjust('floor', value, exp);\n    };\n  }\n  // Decimal ceil\n  if (!Math.ceil10) {\n    Math.ceil10 = function(value, exp) {\n      return decimalAdjust('ceil', value, exp);\n    };\n  }\n})();\n/*\n//  Round\n    Math.round10(55.55, -1);   // 55.6\n    Math.round10(55.549, -1);  // 55.5\n    Math.round10(55, 1);       // 60\n    Math.round10(54.9, 1);     // 50\n    Math.round10(-55.55, -1);  // -55.5 -- round works towards +8 when in-between two values\n    Math.round10(-55.551, -1); // -55.6\n    Math.round10(-55, 1);      // -50 -- round works towards +8 when in-between two values\n    Math.round10(-55.1, 1);    // -60\n    Math.round10(1.005, -2);   // 1.01 -- compare this with Math.round(1.005*100)/100 above\n    Math.round10(-1.005, -2);  // -1.0 -- round works towards +8 when exactly in-between two values\n    // Floor\n    Math.floor10(55.59, -1);   // 55.5\n    Math.floor10(59, 1);       // 50\n    Math.floor10(-55.51, -1);  // -55.6 -- floor is always lower than or equal to floored number: -55.6 < -55.51\n    Math.floor10(-51, 1);      // -60 -- ditto\n    // Ceil\n    Math.ceil10(55.51, -1);    // 55.6\n    Math.ceil10(51, 1);        // 60\n    Math.ceil10(-55.59, -1);   // -55.5 -- ceil is always equal or above ceiled number: -55.5 > -55.59\n    Math.ceil10(-59, 1);       // -59 -- ditto\n*/\n"
			},
			{
				"name": "shader.js",
				"source": "//  shader.js\n\nvertexShader = [\n\n\t\"attribute vec4 tangent;\",\n\n\t\"uniform float time;\",\n\t\"uniform vec2 repeat;\",\n\t\"uniform float useNormal;\",\n\t\"uniform float useRim;\",\n\n\t\"varying vec2 vUv;\",\n\t\"varying vec3 vTangent;\",\n\t\"varying vec3 vBinormal;\",\n\t\"varying vec3 vNormal;\",\n\t\"varying vec3 vEye;\",\n\t\"varying vec3 vU;\",\n\t\"varying vec2 vN;\",\n\n\t\"void main() {\",\n\n\t\"vU = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\",\n\n\t\"if( useNormal == 0. ) {\",\n\t\"vec3 n = normalize( normalMatrix * normal );\",\n\t\"vec3 r = reflect( vU, n );\",\n\t\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\",\n\t\"vN = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\",\n\t\"} else {\",\n\t\"vN = vec2( 0. );\",\n\t\"}\",\n\n\t\"vUv = repeat * uv;\",\n\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\"vNormal = normalize( normalMatrix * normal );\",\n\t\"if( useNormal == 1. ) {\",\n\t\"vTangent = normalize( normalMatrix * tangent.xyz );\",\n\t\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\n\t\"} else {\",\n\t\"vTangent = vec3( 0. );\",\n\t\"vBinormal = vec3( 0. );\",\n\t\"}\",\n\n\t\"if( useRim > 0. ) {\",\n\t\"vEye = ( modelViewMatrix * vec4( position, 1.0 ) ).xyz;\",\n\t\"} else {\",\n\t\"vEye = vec3( 0. );\",\n\t\"}\",\n\t\"}\"\n].join(\" \");\n\nfragmentShader = [\n\n\t\"uniform float time;\",\n\t\"uniform float bump;\",\n\t\"uniform sampler2D tNormal;\",\n\t\"uniform sampler2D tMatCap;\",\n\t\"uniform float noise;\",\n\t\"uniform float useNormal;\",\n\t\"uniform float useRim;\",\n\t\"uniform float rimPower;\",\n\t\"uniform float useScreen;\",\n\t\"uniform float normalScale;\",\n\t\"uniform float normalRepeat;\",\n\n\t\"varying vec2 vUv;\",\n\t\"varying vec3 vTangent;\",\n\t\"varying vec3 vBinormal;\",\n\t\"varying vec3 vNormal;\",\n\t\"varying vec3 vEye;\",\n\t\"varying vec3 vU;\",\n\t\"varying vec2 vN;\",\n\n\t\"float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}\",\n\n\t\"void main() {\",\n\n\t\"vec3 finalNormal = vNormal;\",\n\t\"vec2 calculatedNormal = vN;\",\n\n\t\"if( useNormal == 1. ) {\",\n\t\"vec3 normalTex = texture2D( tNormal, vUv * normalRepeat ).xyz * 2.0 - 1.0;\",\n\t\"normalTex.xy *= normalScale;\",\n\t\"normalTex.y *= -1.;\",\n\t\"normalTex = normalize( normalTex );\",\n\t\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\n\t\"finalNormal = tsb * normalTex;\",\n\n\t\"vec3 r = reflect( vU, normalize( finalNormal ) );\",\n\t\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\",\n\t\"calculatedNormal = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\",\n\t\"}\",\n\n\t\"vec3 base = texture2D( tMatCap, calculatedNormal ).rgb;\",\n\n\t// rim lighting\n\n\t\"if( useRim > 0. ) {\",\n\t\"float f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );\",\n\t\"f = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\",\n\t\"base += vec3( f );\",\n\t\"}\",\n\n\t// screen blending\n\n\t\"if( useScreen == 1. ) {\",\n\t\"base = vec3( 1. ) - ( vec3( 1. ) - base ) * ( vec3( 1. ) - base );\",\n\t\"}\",\n\n\t// noise \n\n\t\"base += noise * ( .5 - random( vec3( 1. ), length( gl_FragCoord ) ) );\",\n\n\t\"gl_FragColor = vec4( base, 1. );\",\n\t\"}\",\n].join(\"\");\n\nfunction ShaderMaterial(normalMap, matcapMap, callback){\n\treturn new Promise( function(resolve, reject){\n\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\tuniforms: { \n\t\t\t\ttNormal: { type: \"t\", value: normalMap },\n\t\t\t\ttMatCap: { type: \"t\", value: matcapMap },\n\t\t\t\ttime: { type: \"f\", value: 0 },\n\t\t\t\tbump: { type: \"f\", value: 0 },\n\t\t\t\tnoise: { type: \"f\", value: 0.04 },\n\t\t\t\trepeat: { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\t\t\t\tuseNormal: { type: \"f\", value: 0 },\n\t\t\t\tuseRim: { type: \"f\", value: 0 },\n\t\t\t\trimPower: { type: \"f\", value: 0 },\n\t\t\t\tuseScreen: { type: \"f\", value: 0 },\n\t\t\t\tnormalScale: { type: \"f\", value: 1 },\n\t\t\t\tnormalRepeat: { type: \"f\", value: 1 }\n\t\t\t},\n\t\t\tvertexShader: vertexShader,       //  document.getElementById( \"vertexShader\" ).textContent,\n\t\t\tfragmentShader: fragmentShader,   //  document.getElementById( \"fragmentShader\" ).textContent,\n\t\t\tshading: THREE.SmoothShading,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\n\t\tmaterial.uniforms.tMatCap.value.wrapS = material.uniforms.tMatCap.value.wrapT = THREE.ClampToEdgeWrapping;\n\t\tmaterial.uniforms.tNormal.value.wrapS = material.uniforms.tNormal.value.wrapT = THREE.RepeatWrapping;\n\n\t\tmaterial.uniforms.tMatCap.value.needsUpdate = true;\n\t\tmaterial.uniforms.tNormal.value.needsUpdate = true;\n\n\t\tif ( !!callback ) callback( material );\n\n\t\tresolve( material );\n\t});\n}\n\n"
			},
			{
				"name": "watch.js",
				"source": "/**\n * DEVELOPED BY\n * GIL LOPES BUENO\n * gilbueno.mail@gmail.com\n *\n * WORKS WITH:\n * IE8*, IE 9+, FF 4+, SF 5+, WebKit, CH 7+, OP 12+, BESEN, Rhino 1.7+\n * For IE8 (and other legacy browsers) WatchJS will use dirty checking  \n *\n * FORK:\n * https://github.com/melanke/Watch.JS\n *\n * LICENSE: MIT\n */\n\n\"use strict\";\n(function (factory) {\n    if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else {\n        // Browser globals\n        window.WatchJS = factory();\n        window.watch = window.WatchJS.watch;\n        window.unwatch = window.WatchJS.unwatch;\n        window.callWatchers = window.WatchJS.callWatchers;\n    }\n}(function () {\n\n    var WatchJS = {\n        noMore: false,        // use WatchJS.suspend(obj) instead\n        useDirtyCheck: false, // use only dirty checking to track changes.\n        preserveExistingSetters: false\n    },\n    lengthsubjects = [];\n    \n    var dirtyChecklist = [];\n    var pendingChanges = []; // used coalesce changes from defineProperty and __defineSetter__\n    \n    var supportDefineProperty = false;\n    try {\n        supportDefineProperty = Object.defineProperty && Object.defineProperty({},'x', {});\n    } catch(ex) {  /* not supported */  }\n\n    var isFunction = function (functionToCheck) {\n        var getType = {};\n        return functionToCheck && getType.toString.call(functionToCheck) == '[object Function]';\n    };\n\n    var isInt = function (x) {\n        return x % 1 === 0;\n    };\n\n    var isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    var isObject = function(obj) {\n        return {}.toString.apply(obj) === '[object Object]';\n    };\n    \n    var getObjDiff = function(a, b){\n        var aplus = [],\n        bplus = [];\n\n        if(!(typeof a == \"string\") && !(typeof b == \"string\")){\n\n            if (isArray(a) && b) {\n                for (var i=0; i<a.length; i++) {\n                    if (b[i] === undefined) aplus.push(i);\n                }\n            } else {\n                for(var i in a){\n                    if (a.hasOwnProperty(i)) {\n                        if(b && !b.hasOwnProperty(i)) {\n                            aplus.push(i);\n                        }\n                    }\n                }\n            }\n\n            if (isArray(b) && a) {\n                for (var j=0; j<b.length; j++) {\n                    if (a[j] === undefined) bplus.push(j);\n                }\n            } else {\n                for(var j in b){\n                    if (b.hasOwnProperty(j)) {\n                        if(a && !a.hasOwnProperty(j)) {\n                            bplus.push(j);\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            added: aplus,\n            removed: bplus\n        }\n    };\n\n    var clone = function(obj){\n\n        if (null == obj || \"object\" != typeof obj) {\n            return obj;\n        }\n\n        var copy = obj.constructor();\n\n        for (var attr in obj) {\n            copy[attr] = obj[attr];\n        }\n\n        return copy;        \n\n    }\n\n    var getExistingSetter = function (obj, propName) {\n        if (WatchJS.preserveExistingSetters) {\n            var existing = Object.getOwnPropertyDescriptor(obj, propName);\n            return existing.set;\n        }\n\n        return undefined;\n    }\n\n    var defineGetAndSet = function (obj, propName, getter, setter) {\n        try {\n            var existingSetter = getExistingSetter(obj, propName);\n            Object.defineProperty(obj, propName, {\n                get: getter,\n                set: function(value) {\n                    setter.call(this, value, true); // coalesce changes\n                    if (existingSetter) {\n                        existingSetter(value);\n                    }\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n        catch(e1) {\n            try{\n                Object.prototype.__defineGetter__.call(obj, propName, getter);\n                Object.prototype.__defineSetter__.call(obj, propName, function(value) {\n                    setter.call(this,value,true); // coalesce changes\n                });\n            }\n            catch(e2) {\n                observeDirtyChanges(obj,propName,setter);\n                //throw new Error(\"watchJS error: browser not supported :/\")\n            }\n        }\n\n    };\n\n    var defineProp = function (obj, propName, value) {\n        try {\n            Object.defineProperty(obj, propName, {\n                enumerable: false,\n                configurable: true,\n                writable: false,\n                value: value\n            });\n        } catch(error) {\n            obj[propName] = value;\n        }\n    };\n\n    var observeDirtyChanges = function(obj,propName,setter) {\n        dirtyChecklist[dirtyChecklist.length] = {\n            prop:       propName,\n            object:     obj,\n            orig:       clone(obj[propName]),\n            callback:   setter\n        }        \n    }\n    \n    var watch = function () {\n\n        if (isFunction(arguments[1])) {\n            watchAll.apply(this, arguments);\n        } else if (isArray(arguments[1])) {\n            watchMany.apply(this, arguments);\n        } else {\n            watchOne.apply(this, arguments);\n        }\n\n    };\n\n\n    var watchAll = function (obj, watcher, level, addNRemove) {\n\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if(isArray(obj)) {\n            defineWatcher(obj, \"__watchall__\", watcher, level); // watch all changes on the array\n            if (level===undefined||level > 0) {\n                for (var prop = 0; prop < obj.length; prop++) { // watch objects in array\n                   watchAll(obj[prop],watcher,level, addNRemove);\n                }\n            }\n        } \n        else {\n            var prop,props = [];\n            for (prop in obj) { //for each attribute if obj is an object\n                if (prop == \"$val\" || (!supportDefineProperty && prop === 'watchers')) {\n                    continue;\n                }\n\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                    props.push(prop); //put in the props\n                }\n            }\n            watchMany(obj, props, watcher, level, addNRemove); //watch all items of the props\n        }\n\n\n        if (addNRemove) {\n            pushToLengthSubjects(obj, \"$$watchlengthsubjectroot\", watcher, level);\n        }\n    };\n\n\n    var watchMany = function (obj, props, watcher, level, addNRemove) {\n\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        for (var i=0; i<props.length; i++) { //watch each property\n            var prop = props[i];\n            watchOne(obj, prop, watcher, level, addNRemove);\n        }\n\n    };\n\n    var watchOne = function (obj, prop, watcher, level, addNRemove) {\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if(isFunction(obj[prop])) { //dont watch if it is a function\n            return;\n        }\n        if(obj[prop] != null && (level === undefined || level > 0)){\n            watchAll(obj[prop], watcher, level!==undefined? level-1 : level); //recursively watch all attributes of this\n        }\n\n        defineWatcher(obj, prop, watcher, level);\n\n        if(addNRemove && (level === undefined || level > 0)){\n            pushToLengthSubjects(obj, prop, watcher, level);\n        }\n\n    };\n\n    var unwatch = function () {\n\n        if (isFunction(arguments[1])) {\n            unwatchAll.apply(this, arguments);\n        } else if (isArray(arguments[1])) {\n            unwatchMany.apply(this, arguments);\n        } else {\n            unwatchOne.apply(this, arguments);\n        }\n\n    };\n\n    var unwatchAll = function (obj, watcher) {\n\n        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if (isArray(obj)) {\n            var props = ['__watchall__'];\n            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array\n                props.push(prop); //put in the props\n            }\n            unwatchMany(obj, props, watcher); //watch all itens of the props\n        } else {\n            var unwatchPropsInObject = function (obj2) {\n                var props = [];\n                for (var prop2 in obj2) { //for each attribute if obj is an object\n                    if (obj2.hasOwnProperty(prop2)) {\n                        if (obj2[prop2] instanceof Object) {\n                            unwatchPropsInObject(obj2[prop2]); //recurs into object props\n                        } else {\n                            props.push(prop2); //put in the props\n                        }\n                    }\n                }\n                unwatchMany(obj2, props, watcher); //unwatch all of the props\n            };\n            unwatchPropsInObject(obj);\n        }\n    };\n\n\n    var unwatchMany = function (obj, props, watcher) {\n\n        for (var prop2 in props) { //watch each attribute of \"props\" if is an object\n            if (props.hasOwnProperty(prop2)) {\n                unwatchOne(obj, props[prop2], watcher);\n            }\n        }\n    };\n\n    var timeouts = [],\n        timerID = null;\n    function clearTimerID() {\n        timerID = null;\n        for(var i=0; i< timeouts.length; i++) {\n            timeouts[i]();\n        }\n        timeouts.length = 0;\n    }\n    var getTimerID= function () {\n        if (!timerID)  {\n            timerID = setTimeout(clearTimerID);\n        }\n        return timerID;\n    }\n    var registerTimeout = function(fn) { // register function to be called on timeout\n        if (timerID==null) getTimerID();\n        timeouts[timeouts.length] = fn;\n    }\n    \n    // Track changes made to an array, object or an object's property \n    // and invoke callback with a single change object containing type, value, oldvalue and array splices\n    // Syntax: \n    //      trackChange(obj, callback, recursive, addNRemove)\n    //      trackChange(obj, prop, callback, recursive, addNRemove)\n    var trackChange = function() {\n        var fn = (isFunction(arguments[2])) ? trackProperty : trackObject ;\n        fn.apply(this,arguments);\n    }\n\n    // track changes made to an object and invoke callback with a single change object containing type, value and array splices\n    var trackObject= function(obj, callback, recursive, addNRemove) {\n        var change = null,lastTimerID = -1;\n        var isArr = isArray(obj);\n        var level,fn = function(prop, action, newValue, oldValue) {\n            var timerID = getTimerID();\n            if (lastTimerID!==timerID) { // check if timer has changed since last update\n                lastTimerID = timerID;\n                change = {\n                    type: 'update'\n                }\n                change['value'] = obj;\n                change['splices'] = null;\n                registerTimeout(function() {\n                    callback.call(this,change);\n                    change = null;\n                });\n            }\n            // create splices for array changes\n            if (isArr && obj === this && change !== null)  {                \n                if (action==='pop'||action==='shift') {\n                    newValue = [];\n                    oldValue = [oldValue];\n                }\n                else if (action==='push'||action==='unshift') {\n                    newValue = [newValue];\n                    oldValue = [];\n                }\n                else if (action!=='splice') { \n                    return; // return here - for reverse and sort operations we don't need to return splices. a simple update will do\n                }\n                if (!change.splices) change.splices = [];\n                change.splices[change.splices.length] = {\n                    index: prop,\n                    deleteCount: oldValue ? oldValue.length : 0,\n                    addedCount: newValue ? newValue.length : 0,\n                    added: newValue,\n                    deleted: oldValue\n                };\n            }\n\n        }  \n        level = (recursive==true) ? undefined : 0;        \n        watchAll(obj,fn, level, addNRemove);\n    }\n    \n    // track changes made to the property of an object and invoke callback with a single change object containing type, value, oldvalue and splices\n    var trackProperty = function(obj,prop,callback,recursive, addNRemove) { \n        if (obj && prop) {\n            watchOne(obj,prop,function(prop, action, newvalue, oldvalue) {\n                var change = {\n                    type: 'update'\n                }\n                change['value'] = newvalue;\n                change['oldvalue'] = oldvalue;\n                if (recursive && isObject(newvalue)||isArray(newvalue)) {\n                    trackObject(newvalue,callback,recursive, addNRemove);\n                }               \n                callback.call(this,change);\n            },0)\n            \n            if (recursive && isObject(obj[prop])||isArray(obj[prop])) {\n                trackObject(obj[prop],callback,recursive, addNRemove);\n            }                           \n        }\n    }\n    \n    \n    var defineWatcher = function (obj, prop, watcher, level) {\n        var newWatcher = false;\n        var isArr = isArray(obj);\n        \n        if (!obj.watchers) {\n            defineProp(obj, \"watchers\", {});\n            if (isArr) {\n                // watch array functions\n                watchFunctions(obj, function(index,action,newValue, oldValue) {\n                    addPendingChange(obj, index, action,newValue, oldValue);\n                    if (level !== 0 && newValue && (isObject(newValue) || isArray(newValue))) {\n                        var i,n, ln, wAll, watchList = obj.watchers[prop];\n                        if ((wAll = obj.watchers['__watchall__'])) {\n                            watchList = watchList ? watchList.concat(wAll) : wAll;\n                        }\n                        ln = watchList ?  watchList.length : 0;\n                        for (i = 0; i<ln; i++) {\n                            if (action!=='splice') {\n                                watchAll(newValue, watchList[i], (level===undefined)?level:level-1);\n                            }\n                            else {\n                                // watch spliced values\n                                for(n=0; n < newValue.length; n++) {\n                                    watchAll(newValue[n], watchList[i], (level===undefined)?level:level-1);\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        }\n\n        if (!obj.watchers[prop]) {\n            obj.watchers[prop] = [];\n            if (!isArr) newWatcher = true;\n        }\n\n        for (var i=0; i<obj.watchers[prop].length; i++) {\n            if(obj.watchers[prop][i] === watcher){\n                return;\n            }\n        }\n\n        obj.watchers[prop].push(watcher); //add the new watcher to the watchers array\n\n        if (newWatcher) {\n            var val = obj[prop];            \n            var getter = function () {\n                return val;                        \n            };\n\n            var setter = function (newval, delayWatcher) {\n                var oldval = val;\n                val = newval;                \n                if (level !== 0 \n                    && obj[prop] && (isObject(obj[prop]) || isArray(obj[prop]))\n                    && !obj[prop].watchers) {\n                    // watch sub properties\n                    var i,ln = obj.watchers[prop].length; \n                    for(i=0; i<ln; i++) {\n                        watchAll(obj[prop], obj.watchers[prop][i], (level===undefined)?level:level-1);\n                    }\n                }\n\n                //watchFunctions(obj, prop);\n                \n                if (isSuspended(obj, prop)) {\n                    resume(obj, prop);\n                    return;\n                }\n\n                if (!WatchJS.noMore){ // this does not work with Object.observe\n                    //if (JSON.stringify(oldval) !== JSON.stringify(newval)) {\n                    if (oldval !== newval) {\n                        if (!delayWatcher) {\n                            callWatchers(obj, prop, \"set\", newval, oldval);\n                        }\n                        else {\n                            addPendingChange(obj, prop, \"set\", newval, oldval);\n                        }\n                        WatchJS.noMore = false;\n                    }\n                }\n            };\n\n            if (WatchJS.useDirtyCheck) {\n                observeDirtyChanges(obj,prop,setter);\n            }\n            else {\n                defineGetAndSet(obj, prop, getter, setter);\n            }\n        }\n\n    };\n\n    var callWatchers = function (obj, prop, action, newval, oldval) {\n        if (prop !== undefined) {\n            var ln, wl, watchList = obj.watchers[prop];\n            if ((wl = obj.watchers['__watchall__'])) {\n                watchList = watchList ? watchList.concat(wl) : wl;\n            }\n            ln = watchList ? watchList.length : 0;\n            for (var wr=0; wr< ln; wr++) {\n                watchList[wr].call(obj, prop, action, newval, oldval);\n            }\n        } else {\n            for (var prop in obj) {//call all\n                if (obj.hasOwnProperty(prop)) {\n                    callWatchers(obj, prop, action, newval, oldval);\n                }\n            }\n        }\n    };\n\n    var methodNames = ['pop', 'push', 'reverse', 'shift', 'sort', 'slice', 'unshift', 'splice'];\n    var defineArrayMethodWatcher = function (obj, original, methodName, callback) {\n        defineProp(obj, methodName, function () {\n            var index = 0;\n            var i,newValue, oldValue, response;                        \n            // get values before splicing array \n            if (methodName === 'splice') {\n               var start = arguments[0];\n               var end = start + arguments[1];\n               oldValue = obj.slice(start,end);\n               newValue = [];\n               for(i=2;i<arguments.length;i++) {\n                   newValue[i-2] = arguments[i];\n               }\n               index = start;\n            } \n            else {\n                newValue = arguments.length > 0 ? arguments[0] : undefined;\n            } \n\n            response = original.apply(obj, arguments);\n            if (methodName !== 'slice') {\n                if (methodName === 'pop') {\n                    oldValue = response;\n                    index = obj.length;\n                }\n                else if (methodName === 'push') {\n                    index = obj.length-1;\n                }\n                else if (methodName === 'shift') {\n                    oldValue = response;\n                }\n                else if (methodName !== 'unshift' && newValue===undefined) {\n                    newValue = response;\n                }\n                callback.call(obj, index, methodName,newValue, oldValue)\n            }\n            return response;\n        });\n    };\n\n    var watchFunctions = function(obj, callback) {\n\n        if (!isFunction(callback) || !obj || (obj instanceof String) || (!isArray(obj))) {\n            return;\n        }\n\n        for (var i = methodNames.length, methodName; i--;) {\n            methodName = methodNames[i];\n            defineArrayMethodWatcher(obj, obj[methodName], methodName, callback);\n        }\n\n    };\n\n    var unwatchOne = function (obj, prop, watcher) {\n        if (prop) {\n            if (obj.watchers && obj.watchers[prop]) {\n                if (watcher === undefined) {\n                    delete obj.watchers[prop]; // remove all property watchers\n                }\n                else {\n                    for (var i = 0; i < obj.watchers[prop].length; i++) {\n                        var w = obj.watchers[prop][i];\n                        if (w == watcher) {\n                            obj.watchers[prop].splice(i, 1);\n                        }\n                    }\n                }\n            }\n        } else {\n            delete obj.watchers;\n        }\n\n        removeFromLengthSubjects(obj, prop, watcher);\n        removeFromDirtyChecklist(obj, prop);\n    };\n    \n    // suspend watchers until next update cycle\n    var suspend = function(obj, prop) {\n        if (obj.watchers) {\n            var name = '__wjs_suspend__'+(prop!==undefined ? prop : '');\n            obj.watchers[name] = true;\n        }\n    }\n    \n    var isSuspended = function(obj, prop) {\n        return obj.watchers \n               && (obj.watchers['__wjs_suspend__'] || \n                   obj.watchers['__wjs_suspend__'+prop]);\n    }\n    \n    // resumes preivously suspended watchers\n    var resume = function(obj, prop) {\n        registerTimeout(function() {\n            delete obj.watchers['__wjs_suspend__'];\n            delete obj.watchers['__wjs_suspend__'+prop];\n        })\n    }\n\n    var pendingTimerID = null;\n    var addPendingChange = function(obj,prop, mode, newval, oldval) {\n        pendingChanges[pendingChanges.length] = {\n            obj:obj,\n            prop: prop,\n            mode: mode,\n            newval: newval,\n            oldval: oldval\n        };\n        if (pendingTimerID===null) {\n            pendingTimerID = setTimeout(applyPendingChanges);\n        }\n    };\n    \n    \n    var applyPendingChanges = function()  {\n        // apply pending changes\n        var change = null;\n        pendingTimerID = null;\n        for(var i=0;i < pendingChanges.length;i++) {\n            change = pendingChanges[i];\n            callWatchers(change.obj, change.prop, change.mode, change.newval, change.oldval);\n        }\n        if (change) {\n            pendingChanges = [];\n            change = null;\n        }        \n    }\n\n    var loop = function(){\n\n        // check for new or deleted props\n        for(var i=0; i<lengthsubjects.length; i++) {\n\n            var subj = lengthsubjects[i];\n\n            if (subj.prop === \"$$watchlengthsubjectroot\") {\n\n                var difference = getObjDiff(subj.obj, subj.actual);\n\n                if(difference.added.length || difference.removed.length){\n                    if(difference.added.length){\n                        watchMany(subj.obj, difference.added, subj.watcher, subj.level - 1, true);\n                    }\n\n                    subj.watcher.call(subj.obj, \"root\", \"differentattr\", difference, subj.actual);\n                }\n                subj.actual = clone(subj.obj);\n\n\n            } else {\n\n                var difference = getObjDiff(subj.obj[subj.prop], subj.actual);\n\n                if(difference.added.length || difference.removed.length){\n                    if(difference.added.length){\n                        for (var j=0; j<subj.obj.watchers[subj.prop].length; j++) {\n                            watchMany(subj.obj[subj.prop], difference.added, subj.obj.watchers[subj.prop][j], subj.level - 1, true);\n                        }\n                    }\n\n                    callWatchers(subj.obj, subj.prop, \"differentattr\", difference, subj.actual);\n                }\n\n                subj.actual = clone(subj.obj[subj.prop]);\n\n            }\n\n        }\n        \n        // start dirty check\n        var n, value;\n        if (dirtyChecklist.length > 0) {\n            for (var i = 0; i < dirtyChecklist.length; i++) {\n                n = dirtyChecklist[i];\n                value = n.object[n.prop];\n                if (!compareValues(n.orig, value)) {\n                    n.orig = clone(value);\n                    n.callback(value);\n                }\n            }\n        }\n\n    };\n\n    var compareValues =  function(a,b) {\n        var i, state = true;\n        if (a!==b)  {\n            if (isObject(a)) {\n                for(i in a) {\n                    if (!supportDefineProperty && i==='watchers') continue;\n                    if (a[i]!==b[i]) {\n                        state = false;\n                        break;\n                    };\n                }\n            }\n            else {\n                state = false;\n            }\n        }\n        return state;\n    }\n    \n    var pushToLengthSubjects = function(obj, prop, watcher, level){\n\n        var actual;\n\n        if (prop === \"$$watchlengthsubjectroot\") {\n            actual =  clone(obj);\n        } else {\n            actual = clone(obj[prop]);\n        }\n\n        lengthsubjects.push({\n            obj: obj,\n            prop: prop,\n            actual: actual,\n            watcher: watcher,\n            level: level\n        });\n    };\n\n    var removeFromLengthSubjects = function(obj, prop, watcher){\n        for (var i=0; i<lengthsubjects.length; i++) {\n            var subj = lengthsubjects[i];\n\n            if (subj.obj == obj) {\n                if (!prop || subj.prop == prop) {\n                    if (!watcher || subj.watcher == watcher) {\n                        // if we splice off one item at position i\n                        // we need to decrement i as the array is one item shorter\n                        // so when we increment i in the loop statement we\n                        // will land at the correct index.\n                        // if it's not decremented, you won't delete all length subjects\n                        lengthsubjects.splice(i--, 1);\n                    }\n                }\n            }\n        }\n\n    };\n    \n    var removeFromDirtyChecklist = function(obj, prop){\n        var notInUse;\n        for (var i=0; i<dirtyChecklist.length; i++) {\n            var n = dirtyChecklist[i];\n            var watchers = n.object.watchers;\n            notInUse = (\n                n.object == obj \n                && (!prop || n.prop == prop)\n                && watchers\n                && (!prop || !watchers[prop] || watchers[prop].length == 0 )\n            );\n            if (notInUse)  {\n                // we use the same syntax as in removeFromLengthSubjects\n                dirtyChecklist.splice(i--, 1);\n            }\n        }\n\n    };    \n\n    setInterval(loop, 50);\n\n    WatchJS.watch = watch;\n    WatchJS.unwatch = unwatch;\n    WatchJS.callWatchers = callWatchers;\n    WatchJS.suspend = suspend; // suspend watchers    \n    WatchJS.onChange = trackChange;  // track changes made to object or  it's property and return a single change object\n\n    return WatchJS;\n\n}));\n"
			}],
		"BCC3A53B-07C6-4FC3-B308-8F4A3E94469D": [
			{
				"name": "index.js",
				"source": "//\tboilerplate (v1.1)\n\ndebugMode = true;\ndebugMode && console.log( this );\n\nfemale = {};\t//\timportant!\nAnimations = {};\nMaleAnimations = {};\nFemaleAnimations = {};\n\nTHREE.Cache.enabled = true;\n\ncontainer = player.dom;\nmouse = new THREE.Vector2();\n//\tclock = new THREE.Clock();\n\nvar fontPath = \"/three/fonts/helvetiker_regular.typeface.json\";\n\nvar rendererHalfWidth  = container.offsetWidth * 0.5;\nvar rendererHalfHeight = container.offsetHeight * 0.5;\n\nfunction init(){\n\twindow.addEventListener( \"resize\", updateHalfWidthHeight )\n}\n\nfunction updateHalfWidthHeight() {\n\trendererHalfWidth  = container.offsetWidth * 0.5;\n\trendererHalfHeight = container.offsetHeight * 0.5;\n}\n\n//\tonMouseMove.\n\nfunction mousemove( event ) {\n\tmouse.x = ( event.clientX - rendererHalfWidth );\n\tmouse.y = ( event.clientY - rendererHalfHeight );\n}\n/*\n//\tUpdate.\nfunction update( event ){\n\t//\tvar time = clock.getElapsedTime();\n}\n*/\n//\tDebug.\n\nfunction stop( event ){\n\twindow.removeEventListener( \"resize\", updateHalfWidthHeight )\n}\n\n//\tHelpers.\n"
			},
			{
				"name": "background.js",
				"source": "//  Background.\n\nsceneBackground([\n\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n]);\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tloader.load( urls, function(texture){\n\t\tscene.background = texture;\n\t\tscene.background.needsUpdate = true;\n\t});\n}\n"
			},
			{
				"name": "groundHelper.js",
				"source": "\tgroundHelper = newGroundHelper(1000, 10);  \n//\taxisCustomHelper = customAxisHelper(5200);\n//\taxisOriginHelper = originAxisHelper(1200);\n\nfunction newGroundHelper(xz, step){\n\tif (!xz) xz = 1000;\n\tif (!step) step = 10;\n\tvar grid = new THREE.GridHelper( xz, step, 0x444444, 0x444444 );\n\tgrid.name = \"GRID\"\n\tgrid.position.y = 0;\n\tscene.add( grid );\n\treturn grid;\n}\n"
			},
			{
				"name": "sunlight.js",
				"source": "//  Shadow Light.\n/*\nfunction init(){\n\n\tsunLight = new THREE.DirectionalLight( 0xdfebff, 0.75 );\n\tsunLight.position.set( 0, 500, 300 );\n\tsunLight.position.multiplyScalar( 1.5 );\n\tsunLight.castShadow = true;\n\tsunLight.shadow.mapSize.width  = Math.pow(2, 10); // 2048;\n\tsunLight.shadow.mapSize.height = Math.pow(2, 10); // 2048;\n\n\tvar d = 30;\n\tsunLight.shadow.camera.left = - d;\n\tsunLight.shadow.camera.right = d;\n\tsunLight.shadow.camera.top = d;\n\tsunLight.shadow.camera.bottom = - d;\n\tsunLight.shadow.camera.far = 10000;\n\n\tshadowHelper = new THREE.CameraHelper(sunLight.shadow.camera);\n\tshadowHelper.visible = false;\n\n//\tscene.add( sunLight, shadowHelper  );\n\n}\n*/"
			}],
		"AA807597-475F-44C0-9BCF-F909388F0C98": [
			{
				"name": "Animations.js",
				"source": "/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Animation = function ( root, data ) {\n\n\tthis.root = root;\n\tthis.data = THREE.AnimationHandler.init( data );\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\n\n\tthis.currentTime = 0;\n\tthis.timeScale = 1;\n\n\tthis.isPlaying = false;\n\tthis.loop = true;\n\tthis.weight = 0;\n\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\n\n};\n\nTHREE.Animation.prototype = {\n\n\tconstructor: THREE.Animation,\n\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\n\n\tplay: function ( startTime, weight ) {\n\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\n\t\tthis.weight = weight !== undefined ? weight : 1;\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.reset();\n\n\t\tTHREE.AnimationHandler.play( this );\n\n\t},\n\n\tstop: function() {\n\n\t\tthis.isPlaying = false;\n\n\t\tTHREE.AnimationHandler.stop( this );\n\n\t},\n\n\treset: function () {\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\n\t\t\tif ( object.animationCache === undefined ) {\n\n\t\t\t\tobject.animationCache = {\n\t\t\t\t\tanimations: {},\n\t\t\t\t\tblending: {\n\t\t\t\t\t\tpositionWeight: 0.0,\n\t\t\t\t\t\tquaternionWeight: 0.0,\n\t\t\t\t\t\tscaleWeight: 0.0\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar name = this.data.name;\n\t\t\tvar animations = object.animationCache.animations;\n\t\t\tvar animationCache = animations[ name ];\n\n\t\t\tif ( animationCache === undefined ) {\n\n\t\t\t\tanimationCache = {\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\n\t\t\t\t\toriginalMatrix: object.matrix\n\t\t\t\t};\n\n\t\t\t\tanimations[ name ] = animationCache;\n\n\t\t\t}\n\n\t\t\t// Get keys to match our current time\n\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\n\n\t\t\t\tvar type = this.keyTypes[ t ];\n\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\n\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n\t\t\t\t}\n\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tresetBlendWeights: function () {\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\t\t\tvar animationCache = object.animationCache;\n\n\t\t\tif ( animationCache !== undefined ) {\n\n\t\t\t\tvar blending = animationCache.blending;\n\n\t\t\t\tblending.positionWeight = 0.0;\n\t\t\t\tblending.quaternionWeight = 0.0;\n\t\t\t\tblending.scaleWeight = 0.0;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function() {\n\n\t\tvar points = [];\n\t\tvar target = new THREE.Vector3();\n\t\tvar newVector = new THREE.Vector3();\n\t\tvar newQuat = new THREE.Quaternion();\n\n\t\t// Catmull-Rom spline\n\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\n\n\t\t\tvar c = [], v3 = [],\n\t\t\tpoint, intPoint, weight, w2, w3,\n\t\t\tpa, pb, pc, pd;\n\n\t\t\tpoint = ( points.length - 1 ) * scale;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\n\n\t\t\tpa = points[ c[ 0 ] ];\n\t\t\tpb = points[ c[ 1 ] ];\n\t\t\tpc = points[ c[ 2 ] ];\n\t\t\tpd = points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t};\n\n\t\treturn function ( delta ) {\n\n\t\t\tif ( this.isPlaying === false ) return;\n\n\t\t\tthis.currentTime += delta * this.timeScale;\n\n\t\t\tif ( this.weight === 0 )\n\t\t\t\treturn;\n\n\t\t\t//\n\n\t\t\tvar duration = this.data.length;\n\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\n\n\t\t\t\tif ( this.loop ) {\n\n\t\t\t\t\tthis.currentTime %= duration;\n\n\t\t\t\t\tif ( this.currentTime < 0 )\n\t\t\t\t\t\tthis.currentTime += duration;\n\n\t\t\t\t\tthis.reset();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.stop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\t\tvar object = this.hierarchy[ h ];\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\n\t\t\t\tvar blending = object.animationCache.blending;\n\n\t\t\t\t// loop through pos/rot/scl\n\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\n\n\t\t\t\t\t// get keys\n\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\n\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\n\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\n\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\n\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\n\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\n\n\t\t\t\t\t// interpolate\n\n\t\t\t\t\tif ( type === \"pos\" ) {\n\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\n\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n\t\t\t\t\t\t\t// blend\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\n\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\n\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\n\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\n\n\t\t\t\t\t\t\t// blend\n\n\t\t\t\t\t\t\tvar vector = object.position;\n\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\n\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\n\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\n\t\t\t\t\t\t\t\ttarget.sub( vector );\n\t\t\t\t\t\t\t\ttarget.y = 0;\n\t\t\t\t\t\t\t\ttarget.normalize();\n\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( type === \"rot\" ) {\n\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\n\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\n\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( type === \"scl\" ) {\n\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t} )(),\n\n\tgetNextKeyWith: function ( type, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\n\n\t\t} else {\n\n\t\t\tkey = key % keys.length;\n\n\t\t}\n\n\t\tfor ( ; key < keys.length; key ++ ) {\n\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\n\n\t},\n\n\tgetPrevKeyWith: function ( type, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\tkey = key > 0 ? key : 0;\n\n\t\t} else {\n\n\t\t\tkey = key >= 0 ? key : key + keys.length;\n\n\t\t}\n\n\n\t\tfor ( ; key >= 0; key -- ) {\n\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\n\n\t}\n\n};\n"
			},
			{
				"name": "AnimationHandler.js",
				"source": "/**\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.AnimationHandler = {\n\n\tLINEAR: 0,\n\tCATMULLROM: 1,\n\tCATMULLROM_FORWARD: 2,\n\n\t//\n\n\tadd: function () {\n\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\n\n\t},\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\n\n\t},\n\tremove: function () {\n\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\n\n\t},\n\n\t//\n\n\tanimations: [],\n\n\tinit: function ( data ) {\n\n\t\tif ( data.initialized === true ) return data;\n\n\t\t// loop through all keys\n\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\n\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t// remove minus times\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\n\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\n\n\t\t\t\t}\n\n\t\t\t\t// create quaternions\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\n\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// prepare morph target keys\n\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\n\n\t\t\t\t// get all used\n\n\t\t\t\tvar usedMorphTargets = {};\n\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\n\n\n\t\t\t\t// set all used on all frames\n\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t\tvar influences = {};\n\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\n\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\n\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// remove all keys that are on the same time\n\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\n\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\n\t\t\t\t\tk --;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// set index\n\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdata.initialized = true;\n\n\t\treturn data;\n\n\t},\n\n\tparse: function ( root ) {\n\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\n\n\t\t\thierarchy.push( root );\n\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\n\n\t\t};\n\n\t\t// setup hierarchy\n\n\t\tvar hierarchy = [];\n\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\n\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\n\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparseRecurseHierarchy( root, hierarchy );\n\n\t\t}\n\n\t\treturn hierarchy;\n\n\t},\n\n\tplay: function ( animation ) {\n\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\n\n\t\t\tthis.animations.push( animation );\n\n\t\t}\n\n\t},\n\n\tstop: function ( animation ) {\n\n\t\tvar index = this.animations.indexOf( animation );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.animations.splice( index, 1 );\n\n\t\t}\n\n\t},\n\n\tupdate: function ( deltaTimeMS ) {\n\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\tthis.animations[ i ].resetBlendWeights();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\n\n\t\t}\n\n\t}\n\n};\n"
			},
			{
				"name": "KeyFrameAnimation.js",
				"source": "/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author khang duong\n * @author erik kitson\n */\n\nTHREE.KeyFrameAnimation = function ( data ) {\n\n\tthis.root = data.node;\n\tthis.data = THREE.AnimationHandler.init( data );\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\n\tthis.currentTime = 0;\n\tthis.timeScale = 0.001;\n\tthis.isPlaying = false;\n\tthis.isPaused = true;\n\tthis.loop = true;\n\n\t// initialize to first keyframes\n\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys,\n\t\t\tsids = this.data.hierarchy[ h ].sids,\n\t\t\tobj = this.hierarchy[ h ];\n\n\t\tif ( keys.length && sids ) {\n\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\n\n\t\t\t\tvar sid = sids[ s ],\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\n\n\t\t\t\tif ( next ) {\n\n\t\t\t\t\tnext.apply( sid );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.matrixAutoUpdate = false;\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\n\t\t\tobj.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.KeyFrameAnimation.prototype = {\n\n\tconstructor: THREE.KeyFrameAnimation,\n\n\tplay: function ( startTime ) {\n\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\n\n\t\tif ( this.isPlaying === false ) {\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\t// reset key cache\n\n\t\t\tvar h, hl = this.hierarchy.length,\n\t\t\t\tobject,\n\t\t\t\tnode;\n\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\n\n\t\t\t\tobject = this.hierarchy[ h ];\n\t\t\t\tnode = this.data.hierarchy[ h ];\n\n\t\t\t\tif ( node.animationCache === undefined ) {\n\n\t\t\t\t\tnode.animationCache = {};\n\t\t\t\t\tnode.animationCache.prevKey = null;\n\t\t\t\t\tnode.animationCache.nextKey = null;\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\n\n\t\t\t\t}\n\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\n\n\t\t\t\tif ( keys.length > 1 ) {\n\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\n\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.update( 0 );\n\n\t\t}\n\n\t\tthis.isPaused = false;\n\t},\n\n\tstop: function () {\n\n\t\tthis.isPlaying = false;\n\t\tthis.isPaused  = false;\n\n\t\t// reset JIT matrix and remove cache\n\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\n\n\t\t\tvar obj = this.hierarchy[ h ];\n\t\t\tvar node = this.data.hierarchy[ h ];\n\n\t\t\tif ( node.animationCache !== undefined ) {\n\n\t\t\t\tvar original = node.animationCache.originalMatrix;\n\n\t\t\t\toriginal.copy( obj.matrix );\n\t\t\t\tobj.matrix = original;\n\n\t\t\t\tdelete node.animationCache;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function ( delta ) {\n\n\t\tif ( this.isPlaying === false ) return;\n\n\t\tthis.currentTime += delta * this.timeScale;\n\n\t\t//\n\n\t\tvar duration = this.data.length;\n\n\t\tif ( this.loop === true && this.currentTime > duration ) {\n\n\t\t\tthis.currentTime %= duration;\n\n\t\t}\n\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\t\t\tvar node = this.data.hierarchy[ h ];\n\n\t\t\tvar keys = node.keys,\n\t\t\t\tanimationCache = node.animationCache;\n\n\n\t\t\tif ( keys.length ) {\n\n\t\t\t\tvar prevKey = animationCache.prevKey;\n\t\t\t\tvar nextKey = animationCache.nextKey;\n\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\n\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationCache.prevKey = prevKey;\n\t\t\t\t\tanimationCache.nextKey = nextKey;\n\n\t\t\t\t}\n\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\n\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\n\n\t\t\t\t}\n\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tgetNextKeyWith: function ( sid, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\t\tkey = key % keys.length;\n\n\t\tfor ( ; key < keys.length; key ++ ) {\n\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keys[ 0 ];\n\n\t},\n\n\tgetPrevKeyWith: function ( sid, h, key ) {\n\n\t\tvar keys = this.data.hierarchy[ h ].keys;\n\t\tkey = key >= 0 ? key : key + keys.length;\n\n\t\tfor ( ; key >= 0; key -- ) {\n\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\n\n\t\t\t\treturn keys[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keys[ keys.length - 1 ];\n\n\t}\n\n};\n"
			},
			{
				"name": "animationLoader.js",
				"source": "/*\n\tAnimations = {};\n\tMaleAnimations = {};\n\tFemaleAnimations = {};\n\n\tvar idle = \"/animations/rlc/female/RLC_SDK_HFBody_v6_idle_sec3.0_v1.json\";\n\tvar walk = \"/animations/rlc/female/RLC_SDK_HFBody_v6_walk_sec1.0_v1.json\";\n\n\tvar loader = new THREE.XHRLoader();\n\tloader.setResponseType( \"json\" );\n\n\tloader.load(idle, function( json ){\n\t\tdebugMode && console.log( json );\n\t\tFemaleAnimations.idle = json;\n\t});\n\n\tloader.load(walk, function( json ){\n\t\tdebugMode && console.log( json );\n\t\tFemaleAnimations.walk = json;\n\t});\n*/\n\n"
			}],
		"EAB32261-6842-401B-A01B-BDD9F02445C6": [
			{
				"name": "MW.js",
				"source": "// MW.js\n\n/*!\n* @author yomotsu http://yomotsu.net/\n* MIT License\n*/\n\nMW = {};\n\n\nMW.triangle = {};\n\n\nMW.triangle.makeBoundingBox = function ( triangle ) {\n\n  var bb = new THREE.Box3();\n\n  bb.min = bb.min.min( triangle.a );\n  bb.min = bb.min.min( triangle.b );\n  bb.min = bb.min.min( triangle.c );\n\n  bb.max = bb.max.max( triangle.a );\n  bb.max = bb.max.max( triangle.b );\n  bb.max = bb.max.max( triangle.c );\n\n  return bb;\n\n};\n\nMW.triangle.makeBoundingSphere = function ( triangle, normal ) {\n \n  var bs = new THREE.Sphere(),\n      v = new THREE.Vector3(),\n      v0 = new THREE.Vector3(),\n      v1 = new THREE.Vector3(),\n      e0 = new THREE.Vector3(),\n      e1 = new THREE.Vector3(),\n      a, b, c, d, e,\n      div, t, s;\n \n  // obtuse triangle\n \n  v0.subVectors( triangle.b, triangle.a );\n  v1.subVectors( triangle.c, triangle.a );\n \n  if ( v0.dot( v1 ) <= 0 ) {\n \n    bs.center.addVectors( triangle.b, triangle.c ).divideScalar( 2 );\n    bs.radius = v.subVectors( triangle.b, triangle.c ).length() / 2;\n    return bs;\n \n  }\n \n  v0.subVectors( triangle.a, triangle.b );\n  v1.subVectors( triangle.c, triangle.b );\n \n  if ( v0.dot( v1 ) <= 0 ) {\n \n    bs.center.addVectors( triangle.a, triangle.c ).divideScalar( 2 );\n    bs.radius = v.subVectors( triangle.a, triangle.c ).length() / 2;\n    return bs;\n \n  }\n \n  v0.subVectors( triangle.a, triangle.c );\n  v1.subVectors( triangle.b, triangle.c );\n \n  if ( v0.dot( v1 ) <= 0 ) {\n \n    bs.center.addVectors( triangle.a, triangle.b ).divideScalar( 2 );\n    bs.radius = v.subVectors( triangle.a, triangle.b ).length() / 2;\n    return bs;\n \n  }\n \n  // acute‐angled triangle\n \n  if ( !normal ) {\n \n    normal = triangle.normal();\n \n  }\n \n  v0.crossVectors( v.subVectors( triangle.c, triangle.b ), normal );\n  v1.crossVectors( v.subVectors( triangle.c, triangle.a ), normal );\n \n  e0.addVectors( triangle.c, triangle.b ).multiplyScalar( .5 );\n  e1.addVectors( triangle.c, triangle.a ).multiplyScalar( .5 );\n \n  a = v0.dot( v1 );\n  b = v0.dot( v0 );\n  d = v1.dot( v1 );\n  c = -v.subVectors( e1, e0 ).dot( v0 );\n  e = -v.subVectors( e1, e0 ).dot( v1 );\n \n  div = - a * a + b * d;\n  // t = ( - a * c + b * e ) / div;\n  s = ( - c * d + a * e ) / div;\n \n  bs.center = e0.clone().add( v0.clone().multiplyScalar( s ) );\n  bs.radius = v.subVectors( bs.center, triangle.a ).length();\n  return bs;\n \n}\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  ns.collision = {};\n\n  // aabb: <THREE.Box3>\n  // Plane: <THREE.Plane>\n  ns.collision.isIntersectionAABBPlane = function ( aabb, Plane ) {\n\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\n\n    var r = extents.x * Math.abs( Plane.normal.x ) + extents.y * Math.abs( Plane.normal.y ) + extents.z * Math.abs( Plane.normal.z );\n    var s = Plane.normal.dot( center ) - Plane.constant;\n\n    return Math.abs( s ) <= r;\n\n  };\n\n  // based on http://www.gamedev.net/topic/534655-aabb-triangleplane-intersection--distance-to-plane-is-incorrect-i-have-solved-it/\n  //\n  // a: <THREE.Vector3>, // vertex of a triangle\n  // b: <THREE.Vector3>, // vertex of a triangle\n  // c: <THREE.Vector3>, // vertex of a triangle\n  // aabb: <THREE.Box3>\n  ns.collision.isIntersectionTriangleAABB = function ( a, b, c, aabb ) {\n\n    var p0, p1, p2, r;\n    \n    // Compute box center and extents of AABoundingBox (if not already given in that format)\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\n\n    // Translate triangle as conceptually moving AABB to origin\n    var v0 = new THREE.Vector3().subVectors( a, center ),\n        v1 = new THREE.Vector3().subVectors( b, center ),\n        v2 = new THREE.Vector3().subVectors( c, center );\n\n    // Compute edge vectors for triangle\n    var f0 = new THREE.Vector3().subVectors( v1, v0 ),\n        f1 = new THREE.Vector3().subVectors( v2, v1 ),\n        f2 = new THREE.Vector3().subVectors( v0, v2 );\n\n    // Test axes a00..a22 (category 3)\n    var a00 = new THREE.Vector3( 0, -f0.z, f0.y ),\n        a01 = new THREE.Vector3( 0, -f1.z, f1.y ),\n        a02 = new THREE.Vector3( 0, -f2.z, f2.y ),\n        a10 = new THREE.Vector3( f0.z, 0, -f0.x ),\n        a11 = new THREE.Vector3( f1.z, 0, -f1.x ),\n        a12 = new THREE.Vector3( f2.z, 0, -f2.x ),\n        a20 = new THREE.Vector3( -f0.y, f0.x, 0 ),\n        a21 = new THREE.Vector3( -f1.y, f1.x, 0 ),\n        a22 = new THREE.Vector3( -f2.y, f2.x, 0 );\n\n    // Test axis a00\n    p0 = v0.dot( a00 );\n    p1 = v1.dot( a00 );\n    p2 = v2.dot( a00 );\n    r = extents.y * Math.abs( f0.z ) + extents.z * Math.abs( f0.y );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a01\n    p0 = v0.dot( a01 );\n    p1 = v1.dot( a01 );\n    p2 = v2.dot( a01 );\n    r = extents.y * Math.abs( f1.z ) + extents.z * Math.abs( f1.y );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a02\n    p0 = v0.dot( a02 );\n    p1 = v1.dot( a02 );\n    p2 = v2.dot( a02 );\n    r = extents.y * Math.abs( f2.z ) + extents.z * Math.abs( f2.y );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a10\n    p0 = v0.dot( a10 );\n    p1 = v1.dot( a10 );\n    p2 = v2.dot( a10 );\n    r = extents.x * Math.abs( f0.z ) + extents.z * Math.abs( f0.x );\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a11\n    p0 = v0.dot( a11 );\n    p1 = v1.dot( a11 );\n    p2 = v2.dot( a11 );\n    r = extents.x * Math.abs( f1.z ) + extents.z * Math.abs( f1.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a12\n    p0 = v0.dot( a12 );\n    p1 = v1.dot( a12 );\n    p2 = v2.dot( a12 );\n    r = extents.x * Math.abs( f2.z ) + extents.z * Math.abs( f2.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a20\n    p0 = v0.dot( a20 );\n    p1 = v1.dot( a20 );\n    p2 = v2.dot( a20 );\n    r = extents.x * Math.abs( f0.y ) + extents.y * Math.abs( f0.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a21\n    p0 = v0.dot( a21 );\n    p1 = v1.dot( a21 );\n    p2 = v2.dot( a21 );\n    r = extents.x * Math.abs( f1.y ) + extents.y * Math.abs( f1.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test axis a22\n    p0 = v0.dot( a22 );\n    p1 = v1.dot( a22 );\n    p2 = v2.dot( a22 );\n    r = extents.x * Math.abs( f2.y ) + extents.y * Math.abs( f2.x );\n\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n      return false; // Axis is a separating axis\n\n    }\n\n    // Test the three axes corresponding to the face normals of AABB b (category 1).\n    // Exit if...\n    // ... [-extents.x, extents.x] and [min(v0.x,v1.x,v2.x), max(v0.x,v1.x,v2.x)] do not overlap\n    if ( Math.max( v0.x, v1.x, v2.x ) < -extents.x || Math.min( v0.x, v1.x, v2.x ) > extents.x ) {\n\n      return false;\n\n    }\n    // ... [-extents.y, extents.y] and [min(v0.y,v1.y,v2.y), max(v0.y,v1.y,v2.y)] do not overlap\n    if ( Math.max( v0.y, v1.y, v2.y ) < -extents.y || Math.min( v0.y, v1.y, v2.y ) > extents.y ) {\n\n      return false;\n\n    }\n    // ... [-extents.z, extents.z] and [min(v0.z,v1.z,v2.z), max(v0.z,v1.z,v2.z)] do not overlap\n    if ( Math.max( v0.z, v1.z, v2.z ) < -extents.z || Math.min( v0.z, v1.z, v2.z ) > extents.z ) {\n\n      return false;\n\n    }\n\n    // Test separating axis corresponding to triangle face normal (category 2)\n    // Face Normal is -ve as Triangle is clockwise winding (and XNA uses -z for into screen)\n    var plane = new THREE.Plane();\n    plane.normal = new THREE.Vector3().copy( f1 ).cross( f0 ).normalize();\n    plane.constant = plane.normal.dot( a );\n    \n    return ns.collision.isIntersectionAABBPlane( aabb, plane );\n\n  };\n\n\n  // sphere1: <THREE.Sphere>\n  // sphere2: <THREE.Sphere>\n  ns.collision.isIntersectionSphereSphere = function ( sphere1, sphere2 ) {\n\n    var radiusSum = sphere1.radius + sphere2.radius;\n\n    return sphere1.center.distanceToSquared( sphere2.center ) <= ( radiusSum * radiusSum );\n\n  };\n\n  // Section 5.1.3\n  // sphere: <THREE.Sphere>\n  // aabb: <THREE.Box3>\n\n  ns.collision.isIntersectionSphereAABB = function ( sphere, aabb ) {\n\n    var sqDist = 0;\n\n    if ( sphere.center.x < aabb.min.x ) { sqDist += ( aabb.min.x - sphere.center.x ) * ( aabb.min.x - sphere.center.x ); }\n    if ( sphere.center.x > aabb.max.x ) { sqDist += ( sphere.center.x - aabb.max.x ) * ( sphere.center.x - aabb.max.x ); }\n\n    if ( sphere.center.y < aabb.min.y ) { sqDist += ( aabb.min.y - sphere.center.y ) * ( aabb.min.y - sphere.center.y ); }\n    if ( sphere.center.y > aabb.max.y ) { sqDist += ( sphere.center.y - aabb.max.y ) * ( sphere.center.y - aabb.max.y ); }\n\n    if ( sphere.center.z < aabb.min.z ) { sqDist += ( aabb.min.z - sphere.center.z ) * ( aabb.min.z - sphere.center.z ); }\n    if ( sphere.center.z > aabb.max.z ) { sqDist += ( sphere.center.z - aabb.max.z ) * ( sphere.center.z - aabb.max.z ); }\n\n    return sqDist <= sphere.radius * sphere.radius;\n\n  };\n\n\n  //http://clb.demon.fi/MathGeoLib/docs/Triangle.cpp_code.html#459\n\n  // sphere: <THREE.Sphere>\n  // a: <THREE.Vector3>, // vertex of a triangle\n  // b: <THREE.Vector3>, // vertex of a triangle\n  // c: <THREE.Vector3>, // vertex of a triangle\n  // normal: <THREE.Vector3>, // normal of a triangle\n  ns.collision.isIntersectionSphereTriangle = function ( sphere, a, b, c, normal ) {\n    // http://realtimecollisiondetection.net/blog/?p=103\n\n    // vs plain of traiangle face\n    var A = new THREE.Vector3(),\n        B = new THREE.Vector3(),\n        C = new THREE.Vector3(),\n        rr,\n        V = new THREE.Vector3(),\n        d,\n        e;\n\n    A.subVectors( a, sphere.center );\n    B.subVectors( b, sphere.center );\n    C.subVectors( c, sphere.center );\n    rr = sphere.radius * sphere.radius;\n    V.crossVectors( B.clone().sub( A ), C.clone().sub( A ) );\n    d = A.dot( V );\n    e = V.dot( V );\n\n    if ( d * d > rr * e ) {\n\n      return false;\n\n    }\n\n    // vs triangle vertex\n    var aa,\n        ab,\n        ac,\n        bb,\n        bc,\n        cc;\n\n    aa = A.dot( A );\n    ab = A.dot( B );\n    ac = A.dot( C );\n    bb = B.dot( B );\n    bc = B.dot( C );\n    cc = C.dot( C );\n\n    if (\n      ( aa > rr ) & ( ab > aa ) & ( ac > aa ) ||\n      ( bb > rr ) & ( ab > bb ) & ( bc > bb ) ||\n      ( cc > rr ) & ( ac > cc ) & ( bc > cc )\n    ) {\n\n      return false;\n\n    }\n\n    // vs edge\n    var AB = new THREE.Vector3(),\n        BC = new THREE.Vector3(),\n        CA = new THREE.Vector3(),\n        d1,\n        d2,\n        d3,\n        e1,\n        e2,\n        e3,\n        Q1 = new THREE.Vector3(),\n        Q2 = new THREE.Vector3(),\n        Q3 = new THREE.Vector3(),\n        QC = new THREE.Vector3(),\n        QA = new THREE.Vector3(),\n        QB = new THREE.Vector3();\n\n    AB.subVectors( B, A );\n    BC.subVectors( C, B );\n    CA.subVectors( A, C );\n    d1 = ab - aa;\n    d2 = bc - bb;\n    d3 = ac - cc;\n    e1 = AB.dot( AB );\n    e2 = BC.dot( BC );\n    e3 = CA.dot( CA );\n    Q1.subVectors( A.multiplyScalar( e1 ), AB.multiplyScalar( d1 ) );\n    Q2.subVectors( B.multiplyScalar( e2 ), BC.multiplyScalar( d2 ) );\n    Q3.subVectors( C.multiplyScalar( e3 ), CA.multiplyScalar( d3 ) );\n    QC.subVectors( C.multiplyScalar( e1 ), Q1 );\n    QA.subVectors( A.multiplyScalar( e2 ), Q2 );\n    QB.subVectors( B.multiplyScalar( e3 ), Q3 );\n\n    if (\n      ( Q1.dot( Q1 ) > rr * e1 * e1 ) && ( Q1.dot( QC ) >= 0 ) ||\n      ( Q2.dot( Q2 ) > rr * e2 * e2 ) && ( Q2.dot( QA ) >= 0 ) ||\n      ( Q3.dot( Q3 ) > rr * e3 * e3 ) && ( Q3.dot( QB ) >= 0 )\n    ) {\n\n      return false;\n\n    }\n\n    var distance = Math.sqrt( d * d / e ) - sphere.radius - 1,\n        contactPoint = new THREE.Vector3(),\n        negatedNormal = new THREE.Vector3( -normal.x, -normal.y, -normal.z );\n\n    contactPoint.copy( sphere.center ).add( negatedNormal.multiplyScalar( distance ) );\n\n    return {\n      distance    : distance,\n      contactPoint: contactPoint\n    };\n\n  };\n\n  // based on Real-Time Collision Detection Section 5.3.4\n  // p: <THREE.Vector3>, // line3.start\n  // q: <THREE.Vector3>, // line3.end\n  // a: <THREE.Vector3>, // triangle.a\n  // b: <THREE.Vector3>, // triangle.b\n  // c: <THREE.Vector3>, // triangle.c\n  // normal: <THREE.Vector3>, // triangle.normal, optional\n\n  // var scalarTriple = function ( a, b, c ) {\n\n  //   var m = b.clone().cross( c );\n  //   return a.dot( m );\n\n  // }\n\n  // var vectorTriple = function ( a, b, c ) {\n\n  //   var m = b.clone().cross( c );\n  //   return a.clone().cross( m );\n\n  // }\n\n  // ns.collision.isIntersectionLineTriangle = function ( p, q, a, b, c, precision ) {\n\n  //   var pq = q.clone().sub( p ),\n  //       pa = a.clone().sub( p ),\n  //       pb = b.clone().sub( p ),\n  //       pc = c.clone().sub( p ),\n  //       u, v, w;\n\n  //   u = scalarTriple( pq, pc, pb );\n\n  //   if ( u < 0 ) { return false; }\n\n  //   v = scalarTriple( pq, pa, pc );\n\n  //   if ( v < 0 ) { return false; }\n\n  //   w = scalarTriple( pq, pb, pa );\n\n  //   if ( w < 0 ) { return false; }\n\n  //   var denom = 1 / ( u + v + w );\n  //   u *= denom;\n  //   v *= denom;\n  //   w *= denom;\n\n  //   var au = a.clone().multiplyScalar( u ),\n  //       bv = b.clone().multiplyScalar( v ),\n  //       cw = c.clone().multiplyScalar( w ),\n  //       contactPoint = au.clone().add( bv ).add( cw );\n\n  //   return {\n  //     contactPoint: contactPoint\n  //   }\n\n  // }\n\n  ns.collision.testSegmentTriangle = function ( p, q, a, b, c ) {\n\n    var ab = b.clone().sub( a );\n    var ac = c.clone().sub( a );\n    var qp = p.clone().sub( q );\n\n    var n = ab.clone().cross( ac );\n\n    var d = qp.dot( n );\n    if ( d <= 0 ) { return false; }\n\n    var ap = p.clone().sub( a );\n    var t = ap.dot( n );\n\n    if ( t < 0 ) { return 0; }\n    if ( t > d ) { return 0; }\n\n    var e = qp.clone().cross( ap );\n    var v = ac.dot( e );\n\n    if ( v < 0 || v > d ) { return 0; }\n\n    var w = ab.clone().dot( e ) * -1;\n\n    if ( w < 0 || v + w > d ) { return 0; }\n\n    var ood = 1 / d;\n    t *= ood;\n    v *= ood;\n    w *= ood;\n    var u = 1 - v - w;\n\n    var au = a.clone().multiplyScalar( u ),\n        bv = b.clone().multiplyScalar( v ),\n        cw = c.clone().multiplyScalar( w ),\n        contactPoint = au.clone().add( bv ).add( cw );\n\n    return {\n      contactPoint: contactPoint\n    }\n\n}\n\n} )( THREE, MW );\n\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  ns.World = function () {\n\n    // console.log( 'THREEFIELD.World' );\n\n    this.colliderPool  = [];\n    this.characterPool = [];\n\n  };\n\n  ns.World.prototype.add = function ( object ) {\n    \n    if ( object instanceof ns.Octree ) {\n\n      this.colliderPool.push( object );\n\n    } else if ( object instanceof ns.CharacterController ) {\n\n      this.characterPool.push( object );\n      object.world = this;\n\n    }\n\n  };\n\n  ns.World.prototype.step = function ( dt ) {\n\n    var character,\n        octree,\n        sphere,\n        intersectedNodes,\n        faces,\n        contactInfo,\n        i, ii, iii, l, ll, lll;\n\n    for ( i = 0, l = this.characterPool.length; i < l; i ++ ) {\n\n      character = this.characterPool[ i ];\n\n      // octree で絞られた node に含まれる face だけを\n      // charactore に渡して判定する\n      for ( ii = 0, ll = this.colliderPool.length; ii < ll; ii ++ ) {\n\n        octree = this.colliderPool[ ii ];\n        sphere = new THREE.Sphere( character.center, character.radius + character.groundPadding );\n        intersectedNodes = octree.getIntersectedNodes( sphere, octree.maxDepth );\n        faces = ns.Octree.uniqTriangkesfromNodes( intersectedNodes );\n\n      }\n      \n      character.collisionCandidate = faces;\n      character.update( dt );\n\n    }\n\n  };\n\n} )( THREE, MW );\n\n// @author yomotsu\n// MIT License\n\n// OcTree with Morton Order\n// based on http://marupeke296.com/COL_3D_No15_Octree.html\n//\n//       +------+------+\n//       |\\   2  \\   3  \\\n//       | +------+------+\n//       + |\\      \\      \\\n//       |\\| +------+------+\n//       | + |      |      |\n//       +0|\\|   6  |   7  |\n//        \\| +------+------+\n//         + |      |      |\n//    y     \\|   4  |   5  |\n//    |      +------+------+\n//    +--x\n//     \\\n//      z\n//\n//\n//       +------+------+\n//       |\\   6  \\   7  \\\n//       | +------+------+\n//       + |\\      \\      \\\n//       |\\| +------+------+\n//       | + |      |      |\n//       +4|\\|   2  |   3  |\n//        \\| +------+------+\n//         + |      |      |\n//  z y     \\|   0  |   1  |\n//   \\|      +------+------+\n//    +--x\n//\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  // min: <THREE.Vector3>\n  // max: <THREE.Vector3>\n  // maxDepth: <Number>\n  ns.Octree = function ( min, max, maxDepth ) {\n\n    this.min = min;\n    this.max = max;\n    this.maxDepth = maxDepth;\n    this.nodes = [];\n\n    var i, length, depth, mortonNumber,\n        pow2, pow4,\n        indexX, indexY, indexZ,\n        nodeBoxSize = new THREE.Vector3(),\n        nodeBoxMin = new THREE.Vector3(),\n        nodeBoxMax = new THREE.Vector3();\n\n    for ( depth = 0; depth < this.maxDepth; depth ++ ) {\n\n      this.nodes.push( [] );\n      pow2 = Math.pow( 2, depth );\n      pow4 = Math.pow( 4, depth );\n      nodeBoxSize.subVectors( this.max, this.min ).divideScalar( pow2 );\n\n      for ( i = 0, length = Math.pow( 8, depth ); i < length; i ++ ) {\n\n        indexX = i % pow2;\n        indexY = ( i / pow4 )|0;\n        indexZ = ( ( i / pow2 )|0 ) % pow2;\n\n        nodeBoxMin.set(\n          this.min.x + indexX * nodeBoxSize.x,\n          this.min.y + indexY * nodeBoxSize.y,\n          this.min.z + indexZ * nodeBoxSize.z\n        );\n        nodeBoxMax.copy( nodeBoxMin ).add( nodeBoxSize );\n\n        mortonNumber = ns.Octree.getMortonNumber( indexX, indexY, indexZ );\n        this.nodes[ depth ][ mortonNumber ] = new ns.OctreeNode( this, depth, mortonNumber, nodeBoxMin, nodeBoxMax );\n\n      }\n\n    }\n\n  };\n\n  ns.Octree.prototype = {\n\n    constructor: ns.Octree,\n\n    importThreeMesh: function ( threeMesh ) {\n\n\n      var i, ii, l, ll,\n          vec3 = new THREE.Vector3(),\n          geometry,\n          geometryId,\n          face,\n          normal,\n          index,\n          count,\n          start,\n          a, b, c,\n        \tvA  = new THREE.Vector3(),\n        \tvB  = new THREE.Vector3(),\n        \tvC  = new THREE.Vector3(),\n        \tvnA = new THREE.Vector3(),\n        \tvnB = new THREE.Vector3(),\n        \tvnC = new THREE.Vector3(),\n          ab  = new THREE.Vector3(),\n          cb  = new THREE.Vector3(),\n          faceNormal;\n\n      threeMesh.updateMatrix();\n\n      geometryId = threeMesh.geometry.uuid;\n      geometry   = threeMesh.geometry.clone();\n      geometry.applyMatrix( threeMesh.matrix );\n      geometry.computeVertexNormals();\n\n      if ( geometry instanceof THREE.BufferGeometry ) {\n\n        if ( geometry.index !== undefined ) {\n\n          var indices   = geometry.index.array;\n          var positions = geometry.attributes.position.array;\n          var normals   = geometry.attributes.normal.array;\n          var offsets   = geometry.groups;\n\n          if ( offsets.length === 0 ) {\n\n            offsets = [ { start: 0, count: indices.length, index: 0 } ];\n\n          }\n\n          for ( i = 0, l = offsets.length; i < l; ++ i ) {\n\n            start  = offsets[ i ].start;\n            count  = offsets[ i ].count;\n            index  = offsets[ i ].materialIndex;\n\n            for ( ii = start, ll = start + count; ii < ll; ii += 3 ) {\n\n              a = index + indices[ ii ];\n              b = index + indices[ ii + 1 ];\n              c = index + indices[ ii + 2 ];\n\n              vA = vec3.fromArray( positions, a * 3 ).clone();\n              vB = vec3.fromArray( positions, b * 3 ).clone();\n              vC = vec3.fromArray( positions, c * 3 ).clone();\n\n              // https://github.com/mrdoob/three.js/issues/4691\n              // make face normal\n              cb.subVectors( vC, vB );\n              ab.subVectors( vA, vB );\n              faceNormal = cb.cross( ab ).normalize().clone();\n\n              face = new ns.Face(\n                vA,\n                vB,\n                vC,\n                faceNormal,\n                geometryId\n              );\n\n              this.addFace( face );\n\n            }\n\n          }\n\n        }\n\n        return;\n\n      }\n\n      geometry.computeFaceNormals();\n\n      for ( i = 0, l = geometry.faces.length; i < l; i ++ ) {\n\n        face = new ns.Face(\n          geometry.vertices[ geometry.faces[ i ].a ],\n          geometry.vertices[ geometry.faces[ i ].b ],\n          geometry.vertices[ geometry.faces[ i ].c ],\n          geometry.faces[ i ].normal,\n          geometryId\n        );\n        this.addFace( face );\n\n      }\n\n    },\n\n    addFace: function ( face ) {\n\n      var i, ii, l, ll, node, targetNodes = [], tmp = [], isIntersected;\n\n      targetNodes = this.nodes[ 0 ].slice( 0 );\n\n      for ( i = 0, l = this.maxDepth; i < l; i ++ ) {\n\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\n\n          node = targetNodes[ ii ];\n          isIntersected = ns.collision.isIntersectionTriangleAABB( face.a, face.b, face.c, node );\n\n          if ( isIntersected ) {\n\n            node.trianglePool.push( face );\n\n            if ( i + 1 !== this.maxDepth ) {\n\n              tmp = tmp.concat( node.getChildNodes() );\n\n            }\n\n          }\n\n        }\n\n        if ( tmp.length === 0 ) {\n\n          break;\n\n        }\n\n        targetNodes = tmp.slice( 0 );\n        tmp.length = 0;\n\n      }\n\n    },\n\n    removeThreeMesh: function ( meshID ) {\n\n      var that = this;\n\n      this.nodes.forEach( function ( nodeDepth ) {\n\n        nodeDepth.forEach( function ( node ) {\n\n          var newTrianglePool = [];\n\n          node.trianglePool.forEach( function ( face ) {\n\n            if ( face.meshID !== meshID ) {\n\n              newTrianglePool.push( face );\n\n            }\n\n          } );\n\n          node.trianglePool = newTrianglePool;\n\n        } );\n\n      } );\n\n    },\n\n    getIntersectedNodes: function ( sphere, depth ) {\n\n      var i, ii, l, ll, node, targetNodes = [], tmp = [],\n          isIntersected, intersectedNodes = [], isAtMaxDepth;\n\n      isIntersected = ns.collision.isIntersectionSphereAABB( sphere, this );\n\n      if ( !isIntersected ) {\n\n        return [];\n\n      }\n\n      targetNodes = this.nodes[ 0 ].slice( 0 );\n\n      for ( i = 0, l = depth; i < l; i ++ ) {\n\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\n\n          node = targetNodes[ ii ];\n          isIntersected = ns.collision.isIntersectionSphereAABB( sphere, node );\n\n          if ( isIntersected ) {\n\n            isAtMaxDepth = ( i + 1 === depth );\n\n            if ( isAtMaxDepth ) {\n\n              if ( node.trianglePool.length !== 0 ) {\n\n                intersectedNodes.push( node );\n\n              }\n\n            } else {\n\n              tmp = tmp.concat( node.getChildNodes() );\n\n            }\n\n          }\n\n        }\n\n        targetNodes = tmp.slice( 0 );\n        tmp.length = 0;\n\n      }\n\n      return intersectedNodes;\n\n    }\n\n  };\n\n  ns.Octree.separate3Bit = function ( n ) {\n\n    n = ( n | n << 8 ) & 0x0000f00f;\n    n = ( n | n << 4 ) & 0x000c30c3;\n    n = ( n | n << 2 ) & 0x00249249;\n    return n;\n\n  };\n\n  ns.Octree.getMortonNumber = function ( x, y, z ) {\n\n    return ns.Octree.separate3Bit( x ) |\n           ns.Octree.separate3Bit( y ) << 1 |\n           ns.Octree.separate3Bit( z ) << 2;\n\n  };\n\n  ns.Octree.uniqTriangkesfromNodes = function ( nodes ) {\n\n    var i, ii, iii, l, ll, lll, uniq = [], isContained = false;\n\n    if ( nodes.length === 0 ) {\n\n      return [];\n\n    } else if ( nodes.length === 1 ) {\n\n      return nodes[ 0 ].trianglePool.slice( 0 );\n\n    }\n\n    for ( i = 0, l = nodes.length; i < l; i ++ ) {\n\n      for ( ii = 0, ll = nodes[ i ].trianglePool.length; ii < ll; ii ++ ) {\n\n        for ( iii = 0, lll = uniq.length; iii < lll; iii ++ ) {\n\n          if ( nodes[ i ].trianglePool[ ii ] === uniq[ iii ] ) {\n\n            isContained = true;\n\n          }\n\n        }\n\n        if ( !isContained ) {\n\n          uniq.push( nodes[ i ].trianglePool[ ii ] );\n\n        }\n\n        isContained = false;\n\n      }\n\n    }\n\n    return uniq;\n\n  };\n\n  //\n\n  ns.OctreeNode = function ( tree, depth, mortonNumber, min, max ) {\n\n    this.tree = tree;\n    this.depth = depth;\n    this.mortonNumber = mortonNumber;\n    this.min = new THREE.Vector3( min.x, min.y, min.z );\n    this.max = new THREE.Vector3( max.x, max.y, max.z );\n    this.trianglePool = [];\n\n  };\n\n  ns.OctreeNode.prototype = {\n\n    constructor: ns.OctreeNode,\n\n    getParentNode: function () {\n\n      if ( this.depth === 0 ) {\n\n        return null;\n\n      }\n\n      this.tree.nodes[ this.depth ][ this.mortonNumber >> 3 ];\n\n    },\n\n    getChildNodes: function () {\n\n      if ( this.tree.maxDepth === this.depth ) {\n\n        return null;\n\n      }\n\n      var firstChild = this.mortonNumber << 3;\n\n      return [\n        this.tree.nodes[ this.depth + 1 ][ firstChild ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 1 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 2 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 3 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 4 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 5 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 6 ],\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 7 ]\n      ];\n\n    }\n\n  };\n\n  //\n\n  // a: <THREE.Vector3>\n  // b: <THREE.Vector3>\n  // c: <THREE.Vector3>\n  // normal: <THREE.Vector3>\n  // meshID: <String>\n  ns.Face = function ( a, b, c, normal, meshID ) {\n\n    this.a = a.clone();\n    this.b = b.clone();\n    this.c = c.clone();\n    this.normal = normal.clone();\n    this.meshID = meshID;\n\n  };\n\n  ns.Face.prototype = {\n\n    constructor: ns.Face\n\n  };\n\n  // origin   : <THREE.Vector3>\n  // direction: <THREE.Vector3>\n  // distance : <Float>\n  ns.Ray = function ( origin, direction, distance ) {\n    this.origin = origin;\n    this.direction = direction;\n    this.distance = distance;\n  };\n\n} )( THREE, MW );\n\n\n"
			},
			{
				"name": "MWtps.js",
				"source": "// MWtps.js\n\n/*!\n* @author yomotsu http://yomotsu.net/\n* MIT License\n*/\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  ns.CharacterController = function ( object3d, radius ) {\n\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n    this.object = object3d;\n    this.center = this.object.position.clone();\n    this.radius = radius;\n    this.groundPadding = 0.5;\n    this.maxSlopeGradient = Math.cos( THREE.Math.degToRad( 50 ) );\n    this.isGrounded = false;\n    this.isOnSlope  = false;\n    this.isIdling   = false;\n    this.isRunning  = false;\n    this.isJumping  = false;\n    this.direction  = 0; // 0 to 2PI(=360deg) in rad\n    this.movementSpeed = 28; // default: 50; // Meters Per Second\n    this.velocity = new THREE.Vector3( 0, -10, 0 );\n    this.currentJumpPower = 0;\n    this.jumpStartTime = 0;\n    this.groundHeight = 0;\n    this.groundNormal = new THREE.Vector3();\n    this.collisionCandidate;\n    this.contactInfo = [];\n\n  };\n\n  ns.CharacterController.prototype = {\n\n    constructor: ns.CharacterController,\n\n    update: function ( dt ) {\n\n      this.isGrounded = false;\n      this.isOnSlope  = false;\n      this.groundHeight = -Infinity;\n      this.groundNormal.set( 0, 1, 0 );\n\n      this.updateGrounding();\n      this.updateJumping();\n      this.updatePosition( dt );\n      this.collisionDetection();\n      this.solvePosition();\n      this.updateVelocity();\n      this.events();\n\n    },\n\n    updateVelocity: function () {\n\n      var FALL_VELOCITY = -50,\n          frontDierction = -Math.cos( this.direction ),\n          rightDierction = -Math.sin( this.direction ),\n          normal,\n          isHittingCeiling = false,\n          wallNomal2D,\n          direction2D,\n          wallAngle,\n          frontAngle,\n          negativeFrontAngle,\n          i, l;\n      \n      this.velocity.set(\n        rightDierction * this.movementSpeed * this.isRunning, \n        FALL_VELOCITY,\n        frontDierction * this.movementSpeed * this.isRunning\n      );\n\n      if ( this.contactInfo.length === 0 && !this.isJumping ) {\n\n        return;\n\n      } else if ( this.isGrounded && !this.isOnSlope && !this.isJumping ) {\n\n        this.velocity.y = 0;\n\n      } else if ( this.isOnSlope ) {\n\n        var slidingDownVelocity = FALL_VELOCITY;\n        var holizontalSpead = - slidingDownVelocity / ( 1 - this.groundNormal.y ) * 0.2;\n\n        this.velocity.x = this.groundNormal.x * holizontalSpead;\n        this.velocity.y = FALL_VELOCITY;\n        this.velocity.z = this.groundNormal.z * holizontalSpead;\n\n      } else if ( !this.isGrounded && !this.isOnSlope && this.isJumping ) {\n\n        this.velocity.y = this.currentJumpPower * -FALL_VELOCITY;\n\n      }\n\n\n      // vs walls and sliding on the wall\n      direction2D = new THREE.Vector2( rightDierction, frontDierction );\n      frontAngle = Math.atan2( direction2D.y, direction2D.x );\n      negativeFrontAngle = Math.atan2( -direction2D.y, -direction2D.x );\n      \n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\n\n        normal = this.contactInfo[ i ].face.normal;\n        // var distance = this.contactInfo[ i ].distance;\n\n        if ( this.maxSlopeGradient < normal.y || this.isOnSlope ) {\n\n          continue;\n\n        }\n\n        if ( !isHittingCeiling && normal.y < 0 ) {\n\n          isHittingCeiling = true;\n\n        }\n\n        wallNomal2D = new THREE.Vector2( normal.x, normal.z ).normalize();\n        wallAngle = Math.atan2( wallNomal2D.y, wallNomal2D.x );\n\n        if (\n          Math.abs( negativeFrontAngle - wallAngle ) >= Math.PI * 0.5 && //  90deg\n          Math.abs( negativeFrontAngle - wallAngle ) <= Math.PI * 1.5    // 270deg\n        ) {\n\n          continue;\n\n        }\n\n        wallNomal2D.set(\n          direction2D.dot( wallNomal2D ) * wallNomal2D.x,\n          direction2D.dot( wallNomal2D ) * wallNomal2D.y\n        );\n        direction2D.subVectors( direction2D, wallNomal2D );\n\n        this.velocity.x = direction2D.x * this.movementSpeed * this.isRunning;\n        this.velocity.z = direction2D.y * this.movementSpeed * this.isRunning;\n\n      }\n\n      if ( isHittingCeiling ) {\n\n        this.velocity.y = Math.min( 0, this.velocity.y );\n        this.isJumping = false;\n\n      }\n\n    },\n\n    updateGrounding: function () {\n\n      // \"頭上からほぼ無限に下方向までの線 (segment)\" vs \"フェイス (triangle)\" の\n      // 交差判定を行う\n      // もし、フェイスとの交差点が「頭上」から「下groundPadding」までの間だったら\n      // 地面上 (isGrounded) にいることとみなす\n      //\n      //   ___\n      //  / | \\\n      // |  |  | player sphere\n      //  \\_|_/\n      //    |\n      //---[+]---- ground\n      //    |\n      //    |\n      //    | segment (player's head to almost -infinity)\n\n\n      var i, l,\n          groundContactInfo,\n          groundContactInfoTmp,\n          faces = this.collisionCandidate,\n          distanceToGround;\n\n      var head = new THREE.Vector3(\n        this.center.x,\n        this.center.y + this.radius,\n        this.center.z\n      );\n\n      var to = new THREE.Vector3(\n        this.center.x,\n        this.center.y - 1e10,\n        this.center.z\n      );\n\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\n\n        groundContactInfoTmp = ns.collision.testSegmentTriangle( head, to, faces[ i ].a, faces[ i ].b, faces[ i ].c );\n\n        if ( groundContactInfoTmp && !groundContactInfo ) {\n\n          groundContactInfo = groundContactInfoTmp;\n          groundContactInfo.face = faces[ i ];\n\n        } else if (\n          groundContactInfoTmp &&\n          groundContactInfoTmp.contactPoint.y > groundContactInfo.contactPoint.y\n        ) {\n          \n          groundContactInfo = groundContactInfoTmp;\n          groundContactInfo.face = faces[ i ];\n\n        }\n\n      }\n\n      if ( !groundContactInfo ) {\n\n        return;\n\n      }\n\n      this.groundHeight = groundContactInfo.contactPoint.y;\n      this.groundNormal.copy( groundContactInfo.face.normal );\n\n      var top    = head.y;\n      var bottom = this.center.y - this.radius - this.groundPadding;\n\n      if ( this.isJumping && 0 < this.currentJumpPower ) {\n\n        this.isOnSlope  = false;\n        this.isGrounded = false;\n        return;\n\n      }\n\n      this.isGrounded = ( bottom <= this.groundHeight && this.groundHeight <= top );\n      this.isOnSlope  = ( this.groundNormal.y <= this.maxSlopeGradient );\n\n      if ( this.isGrounded ) {\n\n        this.isJumping = false;\n\n      }\n\n    },\n\n    updatePosition: function ( dt ) {\n\n      var x = this.center.x + this.velocity.x * dt,\n          y = this.center.y + this.velocity.y * dt,\n          z = this.center.z + this.velocity.z * dt;\n\n      if ( this.isGrounded ) {\n\n        y = this.groundHeight + this.radius;\n\n      }\n\n      this.center.set( x, y, z );\n\n    },\n\n    collisionDetection: function () {\n\n      var i, l,\n          faces = this.collisionCandidate,\n          contactInfo;\n\n      this.contactInfo.length = 0;\n\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\n\n        contactInfo = ns.collision.isIntersectionSphereTriangle( this, faces[ i ].a, faces[ i ].b, faces[ i ].c, faces[ i ].normal );\n\n        if ( !contactInfo ) {\n\n          continue;\n\n        }\n\n        contactInfo.face = faces[ i ];\n        this.contactInfo.push( contactInfo );\n\n      }\n\n    },\n\n    solvePosition: function () {\n\n      var face,\n          normal,\n          distance,\n          point1 = new THREE.Vector3(),\n          point2 = new THREE.Vector3(),\n          direction = new THREE.Vector3(),\n          plainD,\n          t,\n          translateScoped = new THREE.Vector3(),\n          translate = new THREE.Vector3(),\n          i, l;\n\n      if ( this.contactInfo.length === 0 ) {\n\n        this.object.position.copy( this.center );\n        return;\n\n      }\n\n      // \n      // vs walls and sliding on the wall\n\n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\n\n        face = this.contactInfo[ i ].face;\n        normal = this.contactInfo[ i ].face.normal;\n        distance = this.contactInfo[ i ].distance;\n\n        // if ( 0 <= distance ) {\n\n        //   continue;\n\n        // }\n\n        if ( this.maxSlopeGradient < normal.y ) {\n\n          // this triangle is a ground or slope, not a wall or ceil.\n          continue;\n\n        }\n\n        var isSlopeFace = ( this.maxSlopeGradient <= face.normal.y && face.normal.y < 1 );\n\n        if ( this.isJumping && 0 >= this.currentJumpPower && isSlopeFace ) {\n\n          this.isJumping = false;\n          this.isGrounded = true;\n          // console.log( 'jump end' );\n\n        }\n\n        if ( this.isGrounded || this.isOnSlope ) {\n\n          // http://gamedev.stackexchange.com/questions/80293/how-do-i-resolve-a-sphere-triangle-collision-in-a-given-direction\n          point1.copy( normal ).multiplyScalar( -this.radius ).add( this.center );\n          direction.set( normal.x, 0, normal.z ).normalize();\n          plainD = face.a.dot( normal );\n          t = ( plainD - ( normal.x * point1.x + normal.y * point1.y + normal.z * point1.z ) ) / ( normal.x * direction.x + normal.y * direction.y + normal.z * direction.z );\n          point2.copy( direction ).multiplyScalar( t ).add( point1 );\n          translateScoped.subVectors( point2, point1 );\n\n          if ( Math.abs( translate.x ) > Math.abs( translateScoped.x ) ) {\n\n            translate.x += translateScoped.x;\n\n          }\n\n          if ( Math.abs( translate.z ) > Math.abs( translateScoped.z ) ) {\n\n            translate.z += translateScoped.z;\n\n          }\n\n          // break;\n          continue;\n\n        }\n\n      }\n\n      this.center.add( translate );\n      this.object.position.copy( this.center );\n\n    },\n\n    events: function () {\n\n      var isFirstUpdate = true,\n          wasGrounded,\n          wasOnSlope,\n          wasIdling,\n          wasRunning,\n          wasJumping;\n\n      return function () {\n\n        if ( isFirstUpdate ) {\n\n            isFirstUpdate = false;\n            wasGrounded = this.isGrounded;\n            wasOnSlope  = this.isOnSlope;\n            wasIdling   = this.isIdling;\n            wasRunning  = this.isRunning;\n            wasJumping  = this.isJumping;\n            return;\n\n        }\n\n        if ( !wasRunning && !this.isRunning && this.isGrounded && !this.isIdling ) {\n\n            this.isIdling = true;\n            this.dispatchEvent( { type: 'startIdling' } );\n\n        } else if (\n          ( !wasRunning && this.isRunning && !this.isJumping && this.isGrounded ) ||\n          ( !wasGrounded && this.isGrounded && this.isRunning ) ||\n          ( wasOnSlope && !this.isOnSlope && this.isRunning && this.isGrounded )\n        ) {\n\n            this.isIdling = false;\n            this.dispatchEvent( { type: 'startRunning' } );\n          \n        } else if ( !wasJumping && this.isJumping ) {\n\n            this.isIdling = false;\n            this.dispatchEvent( { type: 'startJumping' } );\n          \n        } else if ( !wasOnSlope && this.isOnSlope ) {\n\n            this.dispatchEvent( { type: 'startSliding' } );\n          \n        } else if ( wasGrounded && !this.isGrounded && !this.isJumping ) {\n\n            this.dispatchEvent( { type: 'startFalling' } );\n          \n        }\n\n        if ( !wasGrounded && this.isGrounded ) {\n\n            this.dispatchEvent( { type: 'endJumping' } );\n          \n        }\n\n        wasGrounded = this.isGrounded;\n        wasOnSlope  = this.isOnSlope;\n        wasIdling   = this.isIdling;\n        wasRunning  = this.isRunning;\n        wasJumping  = this.isJumping;\n\n      };\n\n    }(),\n\n    setDirection : function () {\n\n\n\n    },\n\n    jump: function () {\n      \n      if ( this.isJumping || !this.isGrounded || this.isOnSlope ) {\n\n        return;\n\n      }\n\n      // since ios dose not support porformance.now()\n      // this.jumpStartTime = performance.now();\n      this.jumpStartTime = Date.now();\n      this.currentJumpPower = 0.01;\n      this.isJumping = true;\n\n    },\n\n    updateJumping: function () {\n\n      var JUMP_DURATION = 1500;\n\n      if ( !this.isJumping ) {\n\n        return;\n\n      }\n\n      // since ios dose not support porformance.now()\n      // var elapsed = performance.now() - this.jumpStartTime;\n      var elapsed = Date.now() - this.jumpStartTime;\n      var progress = elapsed / JUMP_DURATION;\n      this.currentJumpPower = Math.cos( Math.min( progress, 1 ) * Math.PI );\n\n    }\n\n  }\n\n} )( THREE, MW );\n\n// @author yomotsu\n// MIT License\n\nMW.AnimationController = function ( mesh ) {\n\n  this.mesh   = mesh;\n  this.motion = {};\n  this.mixer  = new THREE.AnimationMixer( mesh );\n  this.currentMotionName = \"\";\n\n  var i, l, anim;\n\n  for ( i = 0, l = this.mesh.geometry.animations.length; i < l; i ++ ) {\n\n    anim = this.mesh.geometry.animations[ i ];\n    this.motion[ anim.name ] = this.mixer.clipAction( anim );\n    this.motion[ anim.name ].setEffectiveWeight( 1 );\n\n  }\n  \n};\n\nMW.AnimationController.prototype = {\n\n  play: function ( name ) {\n\n    if ( this.currentMotionName === name ) { return; }\n\n    if ( this.motion[ this.currentMotionName ] ) {\n\n      var from = this.motion[ this.currentMotionName ].play();\n      var to   = this.motion[ name ].play();\n\n      from.enabled = true;\n      to.enabled = true;\n\n      from.crossFadeTo( to, .3 );\n\n    } else {\n\n      this.motion[ name ].enabled = true;\n      this.motion[ name ].play();\n\n    }\n\n    this.currentMotionName = name;\n\n  },\n\n  turn: function () {\n\n    var DURATION  = 200;\n    var TAU = 2 * Math.PI;\n\n    var mod = function ( a, n ) { return ( a % n + n ) % n; };\n\n    var getDeltaAngle = function ( current, target ) {\n\n      var a = mod( ( current - target ), TAU );\n      var b = mod( ( target - current ), TAU );\n\n      return a < b ? -a : b;\n\n    };\n\n    return function ( rad, immediate ) {\n\n\n      var that       = this;\n      var progress   = 0;\n      var prevRotY   = this.mesh.rotation.y;\n      var targetRotY = rad;\n      var deltaY     = getDeltaAngle( prevRotY, targetRotY );\n      // var duration   = Math.abs( deltaY ) * 100;\n      var start      = Date.now();\n      var end        = start + DURATION;\n\n      if ( immediate ) {\n\n        this.mesh.rotation.y = targetRotY;\n        return;\n\n      }\n\n      if ( this._targetRotY === targetRotY ) { return; }\n\n      this._targetRotY = targetRotY;\n\n      ( function () {\n\n        var _targetRotY = targetRotY;\n\n        ( function interval () {\n\n          var now = Date.now();\n          var isAborted = _targetRotY !== that._targetRotY;\n\n          if ( isAborted ) { return; }\n\n          if ( now >= end ) {\n\n            that.mesh.rotation.y = _targetRotY;\n            delete that._targetRotY;\n            return;\n\n          }\n\n          requestAnimationFrame( interval );\n          progress = ( now - start ) / DURATION;\n          that.mesh.rotation.y = prevRotY + deltaY * progress;\n\n        } )();\n\n      } )();\n\n    }\n\n  }(),\n\n  update: function ( delta ) {\n\n    this.mixer.update( delta );\n\n  }\n\n};\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  var KEY_W     = 87,\n      KEY_UP    = 38,\n      KEY_S     = 83,\n      KEY_DOWN  = 40,\n      KEY_A     = 65,\n      KEY_LEFT  = 37,\n      KEY_D     = 68,\n      KEY_RIGHT = 39,\n      KEY_SPACE = 32,\n      KEY_R     = 82; // hack //\n\n  var DEG_0   = THREE.Math.degToRad(   0 ),\n      DEG_45  = THREE.Math.degToRad(  45 ),\n      DEG_90  = THREE.Math.degToRad(  90 ),\n      DEG_135 = THREE.Math.degToRad( 135 ),\n      DEG_180 = THREE.Math.degToRad( 180 ),\n      DEG_225 = THREE.Math.degToRad( 225 ),\n      DEG_270 = THREE.Math.degToRad( 270 ),\n      DEG_315 = THREE.Math.degToRad( 315 ),\n      DEG_360 = THREE.Math.degToRad( 360 );\n\n  ns.KeyInputControl = function () {\n    \n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n\n    this.isDisabled = false;\n\n    this.isUp    = false;\n    this.isDown  = false;\n    this.isLeft  = false;\n    this.isRight = false;\n    this.inRun   = false; // hack.\n    this.isMoveKeyHolded = false;\n    this.frontAngle = 0;\n\n    this._keydownListener = onkeydown.bind( this );\n    this._keyupListener   = onkeyup.bind( this );\n    this._blurListener    = onblur.bind( this );\n\n    window.addEventListener( 'keydown', this._keydownListener, false );\n    window.addEventListener( 'keyup',   this._keyupListener,   false );\n    window.addEventListener( 'blur',    this._blurListener,    false );\n\n  };\n\n  ns.KeyInputControl.prototype.jump = function () {\n\n    this.dispatchEvent( { type: 'jumpkeypress' } );\n\n  };\n\n  ns.KeyInputControl.prototype.updateAngle = function () {\n\n    var up    = this.isUp;\n    var down  = this.isDown;\n    var left  = this.isLeft;\n    var right = this.isRight;\n\n    if (  up && !left && !down && !right )      { this.frontAngle = DEG_0  ; }\n    else if (  up &&  left && !down && !right ) { this.frontAngle = DEG_45 ; }\n    else if ( !up &&  left && !down && !right ) { this.frontAngle = DEG_90 ; }\n    else if ( !up &&  left &&  down && !right ) { this.frontAngle = DEG_135; }\n    else if ( !up && !left &&  down && !right ) { this.frontAngle = DEG_180; }\n    else if ( !up && !left &&  down &&  right ) { this.frontAngle = DEG_225; }\n    else if ( !up && !left && !down &&  right ) { this.frontAngle = DEG_270; }\n    else if (  up && !left && !down &&  right ) { this.frontAngle = DEG_315; }\n\n  };\n\n\n  function onkeydown ( e ) {\n\n    if ( this.isDisabled ) { return; }\n\n    switch ( e.keyCode ) {\n\n      case KEY_W :\n      case KEY_UP :\n        this.isUp = true;\n        break;\n\n      case KEY_S :\n      case KEY_DOWN :\n        this.isDown = true;\n        break;\n\n      case KEY_A :\n      case KEY_LEFT :\n        this.isLeft = true;\n        break;\n\n      case KEY_D :\n      case KEY_RIGHT :\n        this.isRight = true;\n        break;\n\n      case KEY_SPACE :\n        this.jump();\n        break;\n\n      default:\n        return;\n\n    }\n    \n    var prevAngle = this.frontAngle;\n\n    this.updateAngle();\n\n    if ( prevAngle !== this.frontAngle ) {\n\n      this.dispatchEvent( { type: 'movekeychange' } );\n\n    }\n\n    if (\n      ( this.isUp || this.isDown || this.isLeft || this.isRight ) &&\n      !this.isMoveKeyHolded\n    ) {\n\n      this.isMoveKeyHolded = true;\n      this.dispatchEvent( { type: 'movekeyon' } );\n\n    }\n\n  }\n\n  function onkeyup ( e ) {\n\n    if ( this.isDisabled ) { return; }\n\n    switch ( e.keyCode ) {\n\n      case KEY_W :\n      case KEY_UP :\n        this.isUp = false;\n        break;\n\n      case KEY_S :\n      case KEY_DOWN :\n        this.isDown = false;\n        break;\n        \n      case KEY_A :\n      case KEY_LEFT :\n        this.isLeft = false;\n        break;\n\n      case KEY_D :\n      case KEY_RIGHT :\n        this.isRight = false;\n        break;\n\n      case KEY_SPACE :\n        break;\n\n      case KEY_R:\n        this.inRun = !this.inRun; // hack //  console.log(\"case KEY_R:\", e.keyCode, this.inRun);\n        break;\n\n      default:\n        return;\n\n    }\n    \n    var prevAngle = this.frontAngle;\n\n    this.updateAngle();\n\n    if ( prevAngle !== this.frontAngle ) {\n\n      this.dispatchEvent( { type: 'movekeychange' } );\n\n    }\n\n    if ( !this.isUp && !this.isDown && !this.isLeft && !this.isRight &&\n      (\n           e.keyCode === KEY_W\n        || e.keyCode === KEY_UP\n        || e.keyCode === KEY_S\n        || e.keyCode === KEY_DOWN\n        || e.keyCode === KEY_A\n        || e.keyCode === KEY_LEFT\n        || e.keyCode === KEY_D\n        || e.keyCode === KEY_RIGHT\n      )\n    ) {\n\n      this.isMoveKeyHolded = false;\n      this.dispatchEvent( { type: 'movekeyoff' } );\n\n    }\n\n  }\n\n  function onblur ( e ) {\n\n    this.isUp    = false;\n    this.isDown  = false;\n    this.isLeft  = false;\n    this.isRight = false;\n//  this.inRun   = false; // hack // DO NOT SET TO FALSE ON BLUR. //\n    \n    if ( this.isMoveKeyHolded ) {\n\n      this.isMoveKeyHolded = false;\n      this.dispatchEvent( { type: 'movekeyoff' } );\n\n    }\n\n  }\n\n} )( THREE, MW );\n\n// @author yomotsu\n// MIT License\n\n;( function ( THREE, ns ) {\n\n  'use strict';\n\n  var PI2     = Math.PI * 2,\n      PI_HALF = Math.PI / 2;\n\n  var modulo = function ( n, d ) {\n\n    return ( ( n % d ) + d ) % d;\n\n  };\n\n  // camera              isntance of THREE.Camera\n  // trackObject         isntance of THREE.Object3D\n  // params.el           DOM element\n  // params.radius       number\n  // params.minRadius    number\n  // params.maxRadius    number\n  // params.rigidObjects array of inctances of THREE.Mesh\n  ns.TPSCameraControl = function ( camera, trackObject, params ) {\n\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n    this.camera = camera;\n    this.trackObject  = trackObject;\n    this.el           = params && params.el || document.body;\n    this.offset       = params && params.offset || new THREE.Vector3( 0, 0, 0 ),\n    this.radius       = params && params.radius    || 10;\n    this.minRadius    = params && params.minRadius || 1;\n    this.maxRadius    = params && params.maxRadius || 30;\n    this.rigidObjects = params && params.rigidObjects || [];\n    this.lat   = 0;\n    this.lon   = 0;\n    this.phi   = 0; // angle of zenith\n    this.theta = 0; // angle of azimuth\n    this.mouseAccelerationX = params && params.mouseAccelerationX !== undefined ? params.mouseAccelerationX : 100;\n    this.mouseAccelerationY = params && params.mouseAccelerationY !== undefined ? params.mouseAccelerationY : 30;\n    this._pointerStart = { x: 0, y: 0 };\n    this._pointerLast  = { x: 0, y: 0 };\n\n    this.setNearPlainCornersWithPadding();\n    this.update();\n\n    this._mousedownListener = onmousedown.bind( this );\n    this._mouseupListener   = onmouseup.bind( this );\n    this._mousedragListener = onmousedrag.bind( this );\n    this._scrollListener    = onscroll.bind( this );\n\n    this.el.addEventListener( 'mousedown', this._mousedownListener, false );\n    this.el.addEventListener( 'mouseup',   this._mouseupListener,   false );\n    this.el.addEventListener( 'mousewheel',     this._scrollListener, false );\n    this.el.addEventListener( 'DOMMouseScroll', this._scrollListener, false );\n\n  };\n\n  ns.TPSCameraControl.prototype = {\n\n    constructor: ns.TPSCameraControl,\n\n    update: function () {\n\n      var position,\n          distance;\n\n      this._center = new THREE.Vector3(\n        this.trackObject.matrixWorld.elements[ 12 ] + this.offset.x,\n        this.trackObject.matrixWorld.elements[ 13 ] + this.offset.y,\n        this.trackObject.matrixWorld.elements[ 14 ] + this.offset.z\n      );\n      position = new THREE.Vector3(\n        Math.cos( this.phi ) * Math.cos( this.theta + PI_HALF ),\n        Math.sin( this.phi ),\n        Math.cos( this.phi ) * Math.sin( this.theta + PI_HALF )\n      );\n      distance = this.collisionTest( position.clone().normalize() );\n      position.multiplyScalar( distance );\n      position.add( this._center );\n      this.camera.position.copy( position );\n\n      if ( this.lat === 90 ) {\n\n        this.camera.up.set(\n          Math.cos( this.theta + Math.PI ),\n          0,\n          Math.sin( this.theta + Math.PI )\n        );\n\n      } else if ( this.lat === -90 ) {\n\n        this.camera.up.set(\n          Math.cos( this.theta ),\n          0,\n          Math.sin( this.theta )\n        );\n\n      } else {\n\n        this.camera.up.set( 0, 1, 0 );\n\n      }\n\n      this.camera.lookAt( this._center );\n      this.dispatchEvent( { type: 'updated' } );\n\n    },\n\n    getFrontAngle: function () {\n\n      return PI2 + this.theta;\n\n    },\n\n    setNearPlainCornersWithPadding: function () {\n\n      var near = this.camera.near,\n          halfFov = this.camera.fov * 0.5,\n          h = ( Math.tan( THREE.Math.degToRad( halfFov ) ) * near ),\n          w = h * this.camera.aspect;\n\n      this.nearPlainCornersWithPadding = [\n        new THREE.Vector3( -w - near, -h - near, 0 ),\n        new THREE.Vector3(  w + near, -h - near, 0 ),\n        new THREE.Vector3(  w + near,  h + near, 0 ),\n        new THREE.Vector3( -w - near,  h + near, 0 )\n      ];\n\n    },\n\n    setLatLon: function ( lat, lon ) {\n\n      this.lat = lat >  90 ?  90 :\n                 lat < -90 ? -90 :\n                 lat;\n      this.lon = lon < 0 ? 360 + lon % 360 : lon % 360;\n\n      this.phi   =  THREE.Math.degToRad( this.lat );\n      this.theta = -THREE.Math.degToRad( this.lon );\n\n    },\n\n    collisionTest: function ( direction ) {\n\n      var i,\n          distance = this.radius,\n          nearPlainCorner,\n          rotationMatrix = new THREE.Matrix4(),\n          rotationX = new THREE.Matrix4().makeRotationX( this.phi ),\n          rotationY = new THREE.Matrix4().makeRotationY( this.theta ),\n          origin,\n          raycaster,\n          intersects;\n\n      rotationMatrix.multiplyMatrices( rotationX, rotationY );\n\n      for ( i = 0; i < 4; i ++ ) {\n\n        nearPlainCorner = this.nearPlainCornersWithPadding[ i ].clone();\n        nearPlainCorner.applyMatrix4( rotationMatrix );\n\n        origin = new THREE.Vector3(\n          this._center.x + nearPlainCorner.x,\n          this._center.y + nearPlainCorner.y,\n          this._center.z + nearPlainCorner.z\n        );\n        raycaster = new THREE.Raycaster(\n          origin,           // origin\n          direction,        // direction\n          this.camera.near, // near\n          this.radius       // far\n        );\n        intersects = raycaster.intersectObjects( this.rigidObjects );\n\n        if ( intersects.length !== 0 && intersects[ 0 ].distance < distance ) {\n\n          distance = intersects[ 0 ].distance;\n\n        }\n\n      }\n\n      return distance;\n\n    }\n\n  };\n\n  function onmousedown ( event ) {\n\n    this.dispatchEvent( { type: 'mousedown' } );\n    this._pointerStart.x = event.clientX;\n    this._pointerStart.y = event.clientY;\n    this._pointerLast.x = this.lon;\n    this._pointerLast.y = this.lat;\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\n    this.el.addEventListener( 'mousemove', this._mousedragListener, false );\n//  document.body.className += ' js-TPSCameraDragging';\n    document.body.classList.add(\"js-TPSCameraDragging\");\n\n  }\n\n  function onmouseup () {\n\n    this.dispatchEvent( { type: 'mouseup' } );\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\n//  document.body.className = document.body.className.replace( / js-TPSCameraDragging/g, '' );\n    document.body.classList.remove(\"js-TPSCameraDragging\");\n\n  }\n\n  function onmousedrag ( event ) {\n\n    var w = this.el.offsetWidth,\n        h = this.el.offsetHeight,\n        x = ( this._pointerStart.x - event.clientX ) / w * 2,\n        y = ( this._pointerStart.y - event.clientY ) / h * 2;\n\n    this.setLatLon(\n      this._pointerLast.y + y * this.mouseAccelerationY,\n      this._pointerLast.x + x * this.mouseAccelerationX\n    );\n\n  }\n\n  function onscroll ( event ) {\n\n    event.preventDefault();\n\n    if ( event.wheelDeltaY ) {\n\n      // WebKit\n      this.radius -= event.wheelDeltaY * 0.05;\n\n    } else if ( event.wheelDelta ) {\n\n      // IE\n      this.radius -= event.wheelDelta * 0.05 ;\n\n    } else if ( event.detail ) {\n\n      // Firefox\n      this.radius += event.detail;\n\n    }\n\n    this.radius = Math.max( this.radius, this.minRadius );\n    this.radius = Math.min( this.radius, this.maxRadius );\n\n  }\n\n} )( THREE, MW );\n"
			},
			{
				"name": "VirtualInput.js",
				"source": "/*!\n * @author yomotsu http://yomotsu.net/\n * MIT License\n */\n\nvirtualInput = {};\n\n( function ( ns ) {\n\n    var _ua = function () {\n        return {\n            Touch: typeof document.ontouchstart != \"undefined\",\n            Pointer: window.navigator.pointerEnabled,\n            MSPoniter: window.navigator.msPointerEnabled\n        }\n    };\n\n    ns._start = \"pointerdown MSPointerDown touchstart mousedown\";\n    ns._move  = \"pointermove MSPointerMove touchmove  mousemove\";\n    ns._end   = \"pointerup   MSPointerUp   touchend   mouseup\";\n\n    ns.Joystick = function ( $container, size, params ) {\n\n        Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\n\n        this.angle = 0;\n        this.position = { x: 0, y: 0 };\n        this.pointerId = null;\n        this.isActive = false;\n\n        this.width = size * 2;\n        this.halfWidth = size;\n\n        var that = this;\n        var id = params && params.id ? params.id  : '';\n        var template = [\n          '<div class=\"gameinput-joystick\" id=\"' + id + '\">',\n            '<div class=\"gameinput-joystick__button\"></div>',\n            '<svg class=\"gameinput-frame\" width=\"' + this.width + '\" height=\"' + this.width + '\" viewbox=\"0 0 64 64\">',\n              '<polygon points=\"32 19 34 21 30 21\" fill=\"#fff\"></polygon>',\n              '<polygon points=\"45 32 43 34 43 30\" fill=\"#fff\"></polygon>',\n              '<polygon points=\"32 45 34 43 30 43\" fill=\"#fff\"></polygon>',\n              '<polygon points=\"19 32 21 34 21 30\" fill=\"#fff\"></polygon>',\n              '<circle cx=\"32\" cy=\"32\" r=\"16\" fill=\"none\" stroke=\"#fff\" stroke-width=\"' + ( this.halfWidth / 64 ) + '\"></circle>',\n            '</svg>',\n          '</div>'\n        ].join( '' );\n\n        var $win = $( window );\n        this.$all = $( template );\n        this.$button = this.$all.find( \".gameinput-joystick__button\" );\n        $container.append( this.$all );\n\n        this.$all.css({\n            width:  this.width,\n            height: this.width\n        });\n\n        this.$button.css({\n            width:  size * .6,\n            height: size * .6\n        });\n\n        this.offset = this.$all.offset();\n        this.buttonRadius = this.$button.width() / 2;\n        this.frameRadius = size / 2;\n    //  this.position = { x: 0, y: 0 };\n\n        var onbuttondown = function ( event ) {\n\n            event.preventDefault();\n            event.stopPropagation();\n            \n            that.dispatchEvent( { type: 'active' } );\n            that.isActive = true;\n            \n            if ( event.originalEvent.pointerId ) {\n            \n                that.pointerId = event.originalEvent.pointerId;\n            \n            } else if ( event.originalEvent.changedTouches ) {\n            \n                that.pointerId = event.originalEvent.changedTouches[ event.originalEvent.changedTouches.length - 1 ].identifier;\n            \n            }\n            \n            var coordinate = that.getEventCoordinate( event );\n            \n            if ( !coordinate ) { return; }\n            \n            that.setPosition( coordinate.x, coordinate.y );\n            \n            $win.on( ns._move, onbuttonmove );\n            $win.on( ns._end,  onbuttonup );\n\n        };\n\n        var onbuttonmove = function ( event ) {\n\n            event.preventDefault();\n            event.stopPropagation();\n            \n            var coordinate = that.getEventCoordinate( event );\n            \n            if ( !coordinate ) {\n                return;\n            }\n            \n            that.setPosition( coordinate.x, coordinate.y );\n\n        };\n\n        var onbuttonup = function ( event ) {\n\n            event.stopPropagation();\n\n            var wasEventHappend;\n\n            if ( event.originalEvent.pointerId ) {\n\n                if ( that.pointerId !== event.originalEvent.pointerId ) {\n                    return;\n                }\n\n            } else if ( event.originalEvent.changedTouches ) {\n            \n                for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\n                \n                    if ( that.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\n                        wasEventHappend = true;\n                        break;\n                    }\n                \n                    if ( !wasEventHappend ) {\n                        return;\n                    }\n                \n                }\n            \n            }\n\n            that.dispatchEvent( { type: \"disactive\" } );\n            that.isActive = false;\n            that.setPosition( 0, 0 );\n            $win.off( ns._move, onbuttonmove );\n            $win.off( ns._end,  onbuttonup );\n\n        };\n\n        this.setCSSPosition( 0, 0 );\n        this.$all.on( ns._start, onbuttondown );\n\n        $win.on( \"resize\", function () {\n\n            that.offset = that.$all.offset();\n\n        });\n\n    };\n\n    ns.Joystick.prototype.getLength = function ( x, y ) {\n        return Math.sqrt( Math.pow( x, 2 ) + Math.pow( y, 2 ) );\n    };\n\n    ns.Joystick.prototype.getAngle = function ( lengthX, lengthY ) {\n\n        if ( lengthX === 0 && lengthY === 0 ) {\n          return this.angle;\n        }\n\n        var angle = Math.atan( lengthY / lengthX );\n\n        if ( 0 > lengthX && 0 <= lengthY ) {\n          //the second quadrant\n          angle += Math.PI;\n\n        } else if ( 0 > lengthX && 0 > lengthY ) {\n          //the third quadrant\n          angle += Math.PI;\n\n        } else if ( 0 <= lengthX && 0 > lengthY ) {\n          //the fourth quadrant\n          angle += Math.PI * 2;\n\n        }\n\n        this.angle = angle;\n        return angle;\n\n    };\n\n    ns.Joystick.prototype.getPointOnRadius = function ( angle ) {\n\n        return {\n          x: Math.cos( angle ),\n          y: Math.sin( angle )\n        };\n\n    };\n\n    ns.Joystick.prototype.getEventCoordinate = function ( event ) {\n\n        var x, y, _event = null, i, l;\n\n        if ( event.originalEvent.pointerId ) {\n\n            if ( this.pointerId === event.originalEvent.pointerId ) {\n                _event = event.originalEvent;\n            }\n\n        } else if ( event.originalEvent.changedTouches ) {\n\n            for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\n                if ( this.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\n                  _event = event.originalEvent.changedTouches[ i ];\n                }\n            }\n\n        } else {\n\n            _event = event;\n\n        }\n\n        if ( _event === null ) {\n            return false;\n        }\n\n        x = (   ( _event.clientX - this.offset.left ) - this.halfWidth ) / this.halfWidth * 2;\n        y = ( - ( _event.clientY - this.offset.top  ) + this.halfWidth ) / this.halfWidth * 2;\n\n        return { x: x, y: y };\n\n    };\n\n    ns.Joystick.prototype.setPosition = function ( x, y ) {\n\n        this.position.x = x;\n        this.position.y = y;\n        var length = this.getLength( x, y );\n        var angle = this.getAngle( x, y );\n\n        if ( 1 >= length ) {\n            this.setCSSPosition( x, y );\n            return;\n        }\n\n        var pointOnRadius = this.getPointOnRadius( angle );\n        this.setCSSPosition( pointOnRadius.x, pointOnRadius.y );\n\n    };\n\n    ns.Joystick.prototype.setCSSPosition = function ( x, y ) {\n\n        this.$button.css( {\n            left: ( this.halfWidth + x * this.frameRadius - this.buttonRadius ),\n            top:  ( this.halfWidth - y * this.frameRadius - this.buttonRadius )\n        });\n\n    };\n\n    ns.Button = function ( $container, size, params ) {\n\n        Object.assign( this, THREE.EventDispatcher.prototype );  // THREE.EventDispatcher.prototype.apply( this );\n\n        var that = this;\n        var id = params && params.id ? params.id  : \"\";\n        var label = params.label;\n        var template = [\n          '<div class=\"gameinput-button\" id=\"' + id + '\">',\n            '<div class=\"gameinput-button__inner\">',\n              label,\n            '</div>',\n          '</div>'\n        ].join( \"\" );\n        var $button = $( template );\n        $container.append( $button );\n        $button.css( {\n            width: size,\n            height: size\n        });\n\n        $button.on( ns._start, function () {\n            that.dispatchEvent( { type: \"press\" } );\n        });\n\n    };\n\n})( virtualInput );\n"
			},
			{
				"name": "world.js",
				"source": "//  MW WORLD.\n\nworld = new MW.World();\n\nvar clock = new THREE.Clock();\nfunction update( event ){\n\tvar delta = clock.getDelta();\n\tworld.step( delta );\n}\n"
			},
			{
				"name": "octree.js",
				"source": "//  OCTREE.\n\n//  Make a octree object, which will be the \n//  container of rigid objects such as terrain ect.\n\nconst partition = 2;\n\nconst min = new THREE.Vector3( -1000, -1000, -1000 );\nconst max = new THREE.Vector3(  1000,  1000,  1000 );\n\noctree = new MW.Octree( min, max, partition );\n\n//  WORLD.\n\nworld.add( octree );\n\n//  GROUND.\n\nground = new THREE.Mesh(\n\tnew THREE.PlaneGeometry( 2500, 2500, 1, 1 ),\n\tnew THREE.MeshPhongMaterial({ \n\t\tcolor:0x829ec4,\n\t\ttransparent:false,\n\t\topacity:1, \n\t\tshininess: 80,\n\t\twireframe:false,\n\t})\n);\n\nground.rotation.x = THREE.Math.degToRad( -90 );\n\n//  We want the ground as collision surface only,\n//  so we do not add the ground in the scene.\n\n//\tscene.add( ground );\n//\tground.visible = false;\n//  ground.receiveShadow = true;\n\n//  Add the ground to WALKMESH world octree object.\n//  MESHWALK use octree system to detect collision objects.\n\noctree.importThreeMesh( ground ); // important!\n\n//  Octree helpers.\n\nvar octMeshHelpers = [];\nvar octEdgesHelpers = [];\n\n//  Add octree edges helpers.\n//  octreeHelpers( octree );\n\nfunction octreeHelpers( octree ){\n\tvar nodeIndex = octree.nodes.length - 1;\n\tvar node = octree.nodes[ nodeIndex ][0];\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\n\toctree.nodes[ nodeIndex ].forEach(function(node){\n\n\t\tvar x = node.max.x - node.min.x;\n\t\tvar y = node.max.y - node.min.y;\n\t\tvar z = node.max.z - node.min.z;\n\n\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\n\t\tmesh.position.set(\n\t\t\tnode.min.x + (x/2),\n\t\t\tnode.min.y + (y/2),\n\t\t\tnode.min.z + (z/2)\n\t\t);\n\n\t\t//  scene.add( mesh );\n\t\tscene.add( mesh, helper );\n\n\t\toctMeshHelpers.push(mesh);\n\t\toctEdgesHelpers.push(helper);\n\t});\n}\n\nfunction octreeNodeHelper( node ){\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.set(\n\t\tnode.min.x + (x/2),\n\t\tnode.min.y + (y/2),\n\t\tnode.min.z + (z/2)\n\t);\n\tscene.add( mesh );\n\toctMeshHelpers.push(mesh);\n\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\thelper.name = \"octree helper\";\n\tscene.add( helper );\n\toctEdgesHelpers.push(helper);\n}\n\n/*\n//  Remove octree mesh helpers.\n    setTimeout(function(){\n        octMeshHelpers.forEach( function( item, i ){\n            scene.remove( octMeshHelpers[i] );\n            var geometry = octMeshHelpers[i].geometry;\n            var material = octMeshHelpers[i].material;\n            geometry.dispose();\n            material.dispose();\n        });\n        console.log( \"octree mesh helpers has been removed.\" );\n    }, 5000);\n*/\n\n"
			},
			{
				"name": "AW3D.js (v0.4)",
				"source": "//  AW3D.js (v0.4.0)\n\nAW3D = { VERSION: \"0.4.0\" };\n\n//  Player Holder.\nAW3D.PlayerHolder = function ( name ){\n\tvar holder = new THREE.Object3D();\n\tholder.position.set( 0, 1, 0 );\n\tholder.name = name || \"PLAYER HOLDER\";\n\treturn holder;\n};\n\n//  Player Holder Helper.\nAW3D.PlayerHolderHelper = function ( name ){\n\tvar helper = new THREE.BoxHelper();\n\thelper.name = name || \"HOLDER HELPER\";\n\thelper.visible = true;\n\treturn helper;\n};\n\n//  Player Controller Direction pointer.\nAW3D.DirectionPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n\t//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshStandardMaterial({color:0x00ff00});\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 15, 0);\n\tpointer.name = name || \"PLAYER DIRECTION\";\n\tpointer.visible = true;\n\treturn pointer;\n};\n\n//  Player Sphere.\nAW3D.PlayerSphere = function ( name ){\n\tvar sphere = new THREE.Mesh(\n\t\tnew THREE.SphereGeometry( 15, 8, 4 ),\n\t\tnew THREE.MeshBasicMaterial({ \n\t\t\tcolor: 0xff0000,  \n\t\t\twireframe: true,\n\t\t})\n\t); \n\tsphere.position.y = 12;\n\tsphere.name = name || \"PLAYER SPHERE\";\n\tsphere.visible = true;\n\treturn sphere;\n};\n\n//  Player pointer.\nAW3D.PlayerPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n\t//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshNormalMaterial();\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 40, 0);\n\tpointer.name = name || \"PLAYER POINTER\";\n\tpointer.visible = true; // debugMode || false;\n\treturn pointer;\n};\n\n\n//  OutfitManager.js\n\nAW3D.OutfitManager = function(){\n\n\tvar self = this;\n\n\t//  requires \"signals.min.js\"\n\tvar Signal = signals.Signal;\n\tthis.added = new Signal();\n\tthis.removed = new Signal();\n\tthis.changed = new Signal();\n\n\tthis.eventTimeout = undefined;\n\tthis.direction = new THREE.Object3D();\n\n\tthis.gender = {\n\t\tmale    : false,\n\t\tfemale  : false,\n\t\tshemale : false,\n\t\ttrans   : false,\n\t};\n\n\tthis.genitals = { \n\t\tvagina   : false,\n\t\tpenis    : false,\n\t\tattached : false,\n\t};\n\n\tthis.layers = [\n\t\t\"body\",\n\t\t\"head\",\n\t\t\"face\",\n\t\t\"hairs\",\n\t\t\"upper\", // chest.\n\t\t\"lower\", // hips.\n\t\t\"torso\", // (chest & hips).\n\t\t\"arms\",\n\t\t\"legs\",\n\t\t\"hands\",\n\t\t\"feet\",\n\t\t\"genitals\", \n\t\t\"skeleton\",\n\t];\n\n\tthis.slots = [\n\t\t\"skeleton\",\n\t\t\"body\",\n\t\t\"hairs\",\n\t\t\"eyes\",\n\t\t\"glasses\",\n\t\t\"hat\",\n\t\t\"stockings\",\n\t\t\"underwears\",\n\t\t\"costume\",\n\t\t\"tshirt\",\n\t\t\"skirt\",\n\t\t\"trousers\",\n\t\t\"skirt\",\n\t\t\"dress\",\n\t\t\"shoes\",\n\t\t\"coat\",\n\t\t\"penis\", \n\t\t\"vagina\",\n\t];\n\n\tthis.stickers = [\n\t\t\"skin\",\n\t\t\"makeup\",\n\t\t\"tattoo\",\n\t\t\"bodypaint\",\n\t\t\"neck\",\n\t\t\"chest\",\n\t\t\"belly\",\n\t\t\"upperlimb\",\n\t\t\"arm\",\n\t\t\"forearm\",\n\t\t\"wrist\",\n\t\t\"hand\",\n\t\t\"lowerlimb\",\n\t\t\"thigh\",\n\t\t\"leg\",\n\t\t\"foot\",\n\t\t\"butt\",\n\t\t\"back\",\n\t\t\"scapula\",\n\t\t\"lumbar\",\n\t];\n\n\tthis.attachments = [\n\t\t\"helmet\",\n\t\t\"face\",\n\t\t\"mask\",\n\t\t\"teeth\",\n\t\t\"beard\",\n\t\t\"eyelash\",\n\t\t\"glasses\",\n\t\t\"ears\",\n\t\t\"belly\",\n\t\t\"gun\",\n\t\t\"wepon\",\n\t\t\"knife\",\n\t\t\"sword\",\n\t\t\"bistol\",\n\t\t\"watch\",\n\t\t\"jewelry\",\n\t\t\"earings\",\n\t\t\"necklace\",\n\t\t\"bracelet\",\n\t\t\"bag\",\n\t\t\"handbag\",\n\t\t\"cape\",\n\t\t\"coat\",\n\t\t\"horn\",\n\t\t\"tail\",\n\t\t\"penis\", \n\t];\n\n\tthis.AnimationsHandler = [];\n\n\t//  Outfit.AnimationsHandler is an simple array where local\n\t//  player.outfit keeps the AW3D.AnimationHandler instances.\n\n\tthis.AnimationsHandler.reset = function(){\n\t\tthis.length = 0; // reset array.\n\t};\n\n\tthis.AnimationsHandler.stop = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.stop();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.jump = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.jump();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.play = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.play(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOff = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOff(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeIn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeIn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeOut = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeOut(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.refresh = function(){\n\n\t\tthis.stop();\n\t\tthis.fill(null);\n\t\tthis.reset();\n\n\t\tvar gender = self.getGender();\n\n\t\tself.slots.forEach( function(name, i){\n\n\t\t\tif ( !!self[ name ] ){\n\n\t\t\t\tvar handler = new AW3D.AnimationHandler( self[ name ], gender );\n\n\t\t\t\tself.AnimationsHandler.push( handler );\n\t\t\t}\n\t\t});\n\n\t\tthis.play(\"idle\");\n\t};\n\n\t//  Outfit EventDispatcher.\n\tObject.assign( this, THREE.EventDispatcher.prototype );  // important!\n\n};\n\n\nAW3D.OutfitManager.prototype = {\n\n\tconstructor: AW3D.OutfitManager,\n\n\trefresh: function(){\n\t\tthis.AnimationsHandler.refresh();\n\t},\n\n\n\tget: function(){\n\n\t\tvar results = {};\n\n\t\tvar _get = ( arg ) => {\n\n\t\t\tif ( typeof( arg ) == \"string\" ) {\n\t\t\t\tif ( !!this[arg] ) results[arg] =  this[arg];\n\t\t\t}\n\n\t\t\tif ( arg instanceof Array ) {\n\t\t\t\targ.forEach( ( key ) => {\n\t\t\t\t\t_get( key );\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif ( arguments.length > 0 ){\n\n\t\t\tfor (var i in arguments){\n\n\t\t\t\tif ( !arguments[i] ) continue;\n\n\t\t\t\t_get( arguments[i] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.slots.forEach( (name) => { _get( name ); });\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tset: function(){\n\t\t//  Set \"this.slot\" but not add to \"this.direction\".\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( !!this[ name ] ) this.remove( name );\n\n\t\t\tthis[ name ] = asset;\n\n\t\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[ name ], this.getGender() );\n\n\t\t\t//  Add animation handler.\n\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t}\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( () => {\n\t\t\tthis.dispatchEvent( {type:\"change\"} );\n\t\t\tthis.changed && this.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tadd: function(){\n\n\t\tfor (var arg in arguments) {\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( this[ name ] ) this.remove( name );  // important!\n\n\t\t\tthis[ name ] = asset;\n\n\t\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[name], this.getGender() );\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t\t//  Copy each action properties of first animation handler.\n\t\t\t\tvar masterHandler = this.AnimationsHandler[0];\n\n\t\t\t\tfor ( var action in handler.actions ) {\n\n\t\t\t\t\tif ( !action ) break;\n\n\t\t\t\t\thandler.actions[action].loop = masterHandler.actions[action].loop;\n\t\t\t\t\thandler.actions[action].weight = masterHandler.actions[action].weight;\n\t\t\t\t\thandler.actions[action].timeScale = masterHandler.actions[action].timeScale;\n\t\t\t\t\thandler.actions[action].currentTime = masterHandler.actions[action].currentTime;\n\t\t\t\t\thandler.actions[action].interpolationType = masterHandler.actions[action].interpolationType;\n\n\t\t\t\t\tif ( masterHandler.actions[action].isPlaying ) {\n\t\t\t\t\t\thandler.actions[action].play( masterHandler.actions[action].currentTime );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t\t} else {\n\n\t\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\t\t\t\t//  Play idle.\n\t\t\t\tthis.AnimationsHandler.play(\"idle\");\n\n\t\t\t}\n\n\t\t\t//  Add outfit item to scene.\n\t\t\tthis.direction.add( this[ name ] );\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"add\"} );\n\t\tthis.added && this.added.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( () => {\n\t\t\tthis.dispatchEvent( {type:\"change\"} );\n\t\t\tthis.changed && this.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremove: function(){\n\n\t\tif ( arguments.length == 0 ) return;\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif ( !arguments[arg] ) continue;\n\t\t\tif ( !this.slots.includes( arguments[arg] ) ) continue;\n\n\t\t\tvar name = arguments[arg];\n\n\t\t\t//  Remove from scene (does not throw error).\n\t\t\tthis.direction.remove( this[ name ] );\n\n\t\t\t//  Dispose textures.\n\n\t\t\tif ( this[ name ] ) {\n\n\t\t\t\tif (this[ name ].material && !this[ name ].material.materials) {\n\n\t\t\t\t\t//  Single material.\n\n\t\t\t\t\tObject.keys(this[ name ].material).filter( (key) => {\n\t\t\t\t\t\treturn this[ name ].material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t}).forEach( (key) => {\n\t\t\t\t\t\tthis[ name ].material[ key ].dispose();\n\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE.  important!\n\t\t\t\t\t});\n\n\t\t\t\t\tthis[ name ].material.dispose();\n\n\t\t\t\t} else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n\t\t\t\t\t//  Multimaterial.\n\n\t\t\t\t\tthis[ name ].material.materials.forEach(function(material){\n\n\t\t\t\t\t\tObject.keys(material).filter(function(key){\n\t\t\t\t\t\t\treturn material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t\t}).forEach(function(key){\n\t\t\t\t\t\t\tmaterial[ key ].dispose();\n\t\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE. important!\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmaterial.dispose();\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//  Dispose geometry.\n\t\t\tif ( this[ name ] ) this[ name ].geometry.dispose();\n\n\t\t\t//  Dispose bones texture. !important\n\t\t\tif ( this[ name ] && this[ name ].skeleton  )\n\t\t\t\tthis[ name ].skeleton.boneTexture.dispose();\n\n\t\t\t//  Remove the animation handler.\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t\t//  Find handler index.\n\t\t\t\tvar index = this.AnimationsHandler.findIndex((handler) => {\n\t\t\t\t\treturn handler.mesh == this[ name ];\n\t\t\t\t});\n\n\t\t\t\t//  Keep in mind \"splice()\" uses \"zero\" \n\t\t\t\t//  and \"negative\" indexes also. // danger!\n\t\t\t\t//  debugMode && console.log({\"index\": index});\n\n\t\t\t\tif ( index != undefined && index > -1 ) {\n\n\t\t\t\t\t//  Get and remove handler from AnimationsHandler.\n\t\t\t\t\tvar handler = this.AnimationsHandler.splice(index, 1)[0];\n\n\t\t\t\t\t//  Stop handler animations.\n\t\t\t\t\thandler.stop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//  Delete slot.\n\t\t\tdelete this[ name ];\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"remove\"} );\n\t\tthis.removed && this.removed.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  remove has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( () => {\n\t\t\tthis.dispatchEvent( {type:\"change\"} );\n\t\t\tthis.changed && this.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremoveAll: function() { \n\n\t\tthis.slots.forEach( ( name ) => {\n\t\t\tif ( this[ name ] ) this.remove( name );\n\t\t});\n\n\t\treturn this;\n\n\t},\n\n\tremoveFromScene: function(){\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tthis.slots.forEach( ( name ) => {\n\t\t\t\tthis.remove( name );\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tfor (var arg in arguments){\n\t\t\t\tthis.remove( arguments[arg] );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveTexture: function( outfit, map, index ){\n\n\t\t//  outfit: outfit slot name (e.g \"body\", \"hair\", \"dress\", etc.)\n\t\t//  map   : material map name (e.g. \"map\", \"bumpMap\", \"normalMap\", etc.)\n\t\t//  index : material index of multimaterial (\"null\" for simple material).\n\n\t\tif ( !this[ outfit ] ) return;\n\t\tif ( !this[ outfit ].material ) return;\n\n\t\t//  Material.\n\n\t\tif ( index == null || isNaN(index) || typeof(index) != \"number\" ) {\n\n\t\t\tif ( !this[ outfit ].material[ map ] ) return;\n\n\t\t\tthis[ outfit ].material[ map ].dispose();\n\t\t\tthis[ outfit ].material[ map ] = null;\n\t\t\tthis[ outfit ].material.needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t//  MultiMaterial.\n\n\t\tif ( typeof(index) == \"number\" && index > -1 ) {\n\n\t\t\tif ( !this[ outfit ].material.materials ) return;\n\t\t\tif ( !this[ outfit ].material.materials[ index ] ) return;\n\t\t\tif ( !this.body.material.materials[ index ][ map ] ) return;\n\n\t\t\tthis[ outfit ].material.materials[ index ][ map ].dispose();\n\t\t\tthis[ outfit ].material.materials[ index ][ map ] = null;\n\t\t\tthis[ outfit ].material.materials[ index ].needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\t},\n\n\tsetGender: function( gender ){\n\n\t\tvar self = this;\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = ( name == gender );\n\t\t});\n\n\t\t//  Outfit direction scale. (object3D)\n\n\t\tswitch ( this.getGender() ){\n\n\t\t\tcase \"male\":\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t\t\tbreak;\n\n\t\t\tcase \"female\":\n\t\t\t\tthis.direction.scale.set(0.95, 0.95, 0.95);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t}\n\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetGender: function(){\n\n\t\tvar self = this;\n\n\t\tif (arguments.length > 0){\n\n\t\t\treturn self.gender[ arguments[0] ];\n\n\t\t} else {\n\n\t\t\treturn Object.keys(this.gender).find( function( name ){\n\t\t\t\treturn self.gender[ name ];\n\t\t\t});\n\n\t\t}\n\t},\n\n\tresetGender: function(){\n\n\t\tvar self = this;\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = false;\n\t\t});\n\n\t\tthis.direction.scale.set(1, 1, 1);\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetPose: function( name ){\n\n\t\tvar name = name || \"body\";\n\t\tif ( !this[ name ] ) return;\n\t\tif ( !this.slots.includes( name ) ) return;\n\n\t\tvar pose = [];\n\n\t\tfor (var i in this[ name ].skeleton.bones) {\n\t\t\tvar key = {}; // {\"pos\":[], \"rot\":[], \"scl\":[]};\n\t\t\tkey.pos = this[ name ].skeleton.bones[i].position.toArray();\n\t\t\tkey.rot = this[ name ].skeleton.bones[i].quaternion.toArray();\n\t\t\tkey.scl = this[ name ].skeleton.bones[i].scale.toArray();\n\t\t\tpose.push(key);\n\t\t}\n\n\t\treturn pose;\n\t},\n\n\n\ttoJSON: function(){\n\n\t\tvar data = {};\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tfor (var i = 0; i < this.slots.length; i++) {\n\n\t\t\t\tvar name = this.slots[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material  = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor (var i = 0; i < arguments.length; i++){\n\n\t\t\t\tvar name = arguments[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.getGender() ) \n\t\t\tdata.gender = this.getGender();\n\n\t\tvar data = JSON.stringify( data );\n\n\t\tif ( data === \"{}\" ) \n\t\t\treturn null;\n\t\telse \n\t\t\treturn JSON.parse( data );\n\n\t},\n\n\t//  fromJSON (v2.1).\n\n\tfromJSON: function( json ){\n\n\t\t//  Make a copy of json. important!\n\n\t\tif ( typeof(json) == \"object\" ) {\n\n\t\t\ttry {\n\n\t\t\t\tvar json = JSON.stringify( json ); // string copy of json.\n\n\t\t\t} catch(err) { throw err; }\n\n\t\t}\n\n\t\t//  requires \"validation.js\".\n\n\t\tif ( typeof(json) == \"string\" ) {\n\n\t\t\tif ( !validator.isJSON( json ) ) {\n\t\t\t\tthrow \"Validation Error: json not valid\";\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow \"Type Error: json is not string type.\";\n\n\t\t}\n\n\n\t\tvar json = JSON.parse( json ); // (now is a json copy).\n\n\n\t\tvar self = this;\n\n\t\t//  Set gender first.\n\n\t\tthis.removeAll();          // important!\n\t\tvar gender = json.gender;  // important!\n\t\tthis.setGender( gender );  // important!\n\n\t\t//  Clear gender of json.\n\t\tdelete json.gender; // (is a copy of json).\n\n\t\t//  ORDER DOES MATTER for transparency:\n\t\t//   Order in localPlayer.outfit.direction.children array DOES MATTER.\n\t\t//  So we must deliver the outfit.direction.children array with the following order:\n\t\t//  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\n\n\t\tvar orderMap = [];\n\n\t\t(function(){\n\t\t\tif (json.skeleton) orderMap.push(\"skeleton\");\n\t\t\tif (json.body) orderMap.push(\"body\");\n\t\t\tif (json.eyes) orderMap.push(\"eyes\");\n\t\t\tif (json.glasses) orderMap.push(\"glasses\");\n\t\t\tif (json.hairs) orderMap.push(\"hairs\");\n\t\t\tif (json.hat) orderMap.push(\"hat\");\n\t\t\tif (json.stockings) orderMap.push(\"stockings\");\n\t\t\tif (json.underwears) orderMap.push(\"underwears\");\n\t\t\tif (json.costume) orderMap.push(\"costume\");\n\t\t\tif (json.tshirt) orderMap.push(\"tshirt\");\n\t\t\tif (json.trousers) orderMap.push(\"trousers\");\n\t\t\tif (json.skirt) orderMap.push(\"skirt\");\n\t\t\tif (json.dress) orderMap.push(\"dress\");\n\t\t\tif (json.shoes) orderMap.push(\"shoes\");\n\t\t\tif (json.coat) orderMap.push(\"coat\");\n\t\t})();\n\n\t\tdebugMode && console.log({\"orderMap\": orderMap});\n\n\t\tvar outfit = {};\n\t\tvar promises = [];\n\n\t\tfor (var i = 0; i < orderMap.length; i++){\n\n\t\t\tpromises.push(\n\t\t\t\tnew Promise(function(resolve, reject){\n\n\t\t\t\t\tvar object = {};\n\t\t\t\t\tvar sortIndex = i;\n\t\t\t\t\tvar key = orderMap[i];\n\n\t\t\t\t\tobject.name      = json[ key ].name;\n\t\t\t\t\tobject.visible   = json[ key ].visible;\n\t\t\t\t\tobject.material  = json[ key ].material;\n\t\t\t\t\tobject.geometry  = json[ key ].geometry;  // (url).\n\n\t\t\t\t\t//  Scale.\n\t\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\t\tobject.scale = vector.fromArray( json[ key ].scale );\n\n\t\t\t\t\t//  Material.\n\t\t\t\t\tvar material = materialfromJSON( object.material );\n\n\t\t\t\t\t//  Geometry: cache first.\n\t\t\t\t\tcaches.match( object.geometry ).then(function(response){\n\n\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\tthrow \"geometry not found! Trying to fetch geometry...\";\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}).catch(function(err){\n\t\t\t\t\t\tconsole.error(err);\n\n\t\t\t\t\t\treturn caches.open(\"geometries\").then(function(cache){\n\t\t\t\t\t\t\treturn cache.add( object.geometry ).then(function(){\n\t\t\t\t\t\t\t\treturn cache.match( object.geometry ).then(function(response){\n\t\t\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\tif (!response) throw \"None response returned!\";\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\t}).then(function( gmtjson ){\n\n\t\t\t\t\t\tif ( !gmtjson ) throw \"None json returned fromJSON!\";\n\n\t\t\t\t\t\tvar loader = new THREE.JSONLoader();\n\t\t\t\t\t\tvar geometry = loader.parse( gmtjson ).geometry;\n\n\t\t\t\t\t\tgeometry.name = gmtjson.name;\n\t\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\t\tgeometry.computeVertexNormals();\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\t\t\t\t\tgeometry.sourceFile = object.geometry;  // important!\n\n\t\t\t\t\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\tskinned.renderDepth = 1;\n\t\t\t\t\t\tskinned.frustumCulled = false;\n\t\t\t\t\t\tskinned.position.set( 0, 0, 0 );\n\t\t\t\t\t\tskinned.rotation.set( 0, 0, 0 );\n\t\t\t\t\t\tskinned.scale.copy( object.scale );\n\t\t\t\t\t\tskinned.castShadow = true;\n\t\t\t\t\t\tskinned.name = object.name;\n\t\t\t\t\t\tskinned.sortIndex = sortIndex;\n\n\t\t\t\t\t\tvar obj = {};\n\t\t\t\t\t\tobj[ key ] = skinned;\n\t\t\t\t\t\tresolve( obj );\n\n\t\t\t\t\t\toutfit[ key ] = skinned;\n\n\t\t\t\t\t}).catch(function(err){\n\t\t\t\t\t\tresolve( null );\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\n\t\t\t\t}) // end of promise,\n\t\t\t); // end push.\n\t\t}// end for.\n\n\t\tdebugMode && console.log(\"promises:\", promises);\n\n\t\treturn Promise.all(promises).then(function(results){\n\t\t\tdebugMode && console.log(\"results:\", results);\n\n\t\t\t//  cleanup.\n\t\t\tvar results = results.filter(Boolean); // important!\n\t\t\tdebugMode && console.log(\"cleaned results:\", results);\n\n\t\t\t//  add outfit.\n\t\t\twhile (results.length) {\n\t\t\t\tself.add( results.shift() );\n\t\t\t}\n\n\t\t}).then(function(){\n\t\t\tdebugMode && console.log(\"outfit:\", outfit);\n\t\t\treturn outfit;\n\t\t});\n\n\t},\n\n\n\t//  Outfit DNA is an object that contains the outfit data that needed to\n\t//  create the player oufit anywhere remotly. It is player outfit assets\n\t//  in transfered structure ( aka like .toJSON() ).\n\t//\n\t//  .toDNA(); .fromDNA(dna); Usage:\n\t//      dna = localPlayer.outfit.toDNA();\n\t//      player = new Player();\n\t//      player.outfit = new AW3D.Outfit(player);\n\t//      player.outfit.fromDNA( dna );\n\n\t//\t.toDNA, .fromDNA (v2).\n\t//\trequires \"rawinflate.js, rawdeflate.js, and validator.js\"\n\n\ttoDNA: function(){\n\n\t\treturn encode( JSON.stringify( this.toJSON() ) );\n\n\t\tfunction encode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn window.btoa( RawDeflate.deflate( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n\tfromDNA: function( dna ){\n\n\t\t//  Validation.\n\n\t\tif ( typeof(dna) == \"string\" ) {\n\n\t\t\tif ( validator.isBase64( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( decode( dna ) );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else if ( validator.isJSON( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( dna );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar err = \"DNA is not valid.\";\n\t\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t\t//  throw Error( err );\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\tvar err = \"Unsupported DNA type: \" + typeof(dna);\n\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t//  throw Error( err );\n\t\t\t});\n\n\t\t}\n\n\t\tfunction decode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn RawDeflate.inflate( window.atob( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n\n};\n\n\n//  AW3D AnimationHandler.js\n\n//  Reset THREE.AnimationHandler.animations array.\nTHREE.AnimationHandler.animations.length = 0;\nAnimationManager = THREE.AnimationHandler;\n\nAW3D.AnimationHandler = function ( mesh, gender ) {\n\n\tthis.mesh = mesh;\n\tthis.gender = gender; // important!\n\tthis.actions = {};\n\n\t//  This create the animations of skinned mesh. \n\tthis.reloadActions(); // important!\n\n};\n\n\nAW3D.AnimationHandler.prototype = {\n\n\tconstructor: AW3D.AnimationHandler,\n\n\tfindAction: function(action){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation == action); // boolean.\n\t\t}); \n\t},\n\n\tfindByUuid: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.uuid == this.actions[ name ].uuid); // boolean.\n\t\t});\n\t},\n\n\tfindByName: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.data.name == name); // boolean.\n\t\t});\n\t},\n\n\tgetCurrentAction: function(){\n\t\t//  returns current playing action name.\n\t\tfor (var name in this.actions) {\n\t\t\tif ( !name ) return;\n\t\t\tvar action = this.actions[ name ];\n\t\t\tif ( action.isPlaying ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t},\n\n\t//  To stop an animation, find the animation in\n\t//  THREE.AnimationHandler.animations and stop it from there.\n\n\tstop: function stop(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tvar action = self.actions[name];\n\t\t\tself.findAction(action).forEach(function(animation){\n\t\t\t\tanimation.stop();\n\t\t\t});\n\t\t});\n\t},\n\n\t//  To delete an action, stop the animation in \n\t//  THREE.AnimationHandler.animations and then delete it from this.actions.\n\n\tdelete: function( name ){\n\t\tvar action = this.actions[ name ];\n\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\tanimation.stop();\n\t\t});\n\t\tdelete this.actions[ name ];\n\t},\n\n\treset: function reset(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.actions[ name ].weight = 1;\n\t\t\tthis.actions[ name ].timeScale = 1;\n\t\t\tthis.actions[ name ].currentTime = 0;\n\t\t}\n\t},\n\n\tresetAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.reset( name );\n\t\t});\n\t},\n\n\tdeleteAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.delete[ name ]\n\t\t});\n\t},\n\n\tplay: function play(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tif ( !this.actions[ name ] ) return;\n\t\t\tthis.actions[ name ].play(0);\n\t\t}\n\t},\n\n\t//  To pause an animation, find the animation \n\t//  in THREE.AnimationHandler.animations and set timeScale to 0.\n\n\tpause: function pause(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 0;\n\t\t\t});\n\t\t}\n\t},\n\n\t//  To unpause an animation, find the animation \n\t//  in THREE.AnimationHandler.animations and set timeScale to 1.\n\n\tcontinue: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOff: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 0;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOn: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tfadeIn: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar animation = this.actions[ name ];\n\t\t\tfades.push(function fade(){\n\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\tanimation.weight += ( 0.05 * (1 - animation.weight) );\n\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\tdebugMode && console.log( \"fadeIn: \", round(animation.weight, 3) );\n\t\t\t\tif ( round(animation.weight, 3) > 0.9 ){\n\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\tanimation.play(animation.currentTime, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tfadeOut: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tfades.push(function fade(){\n\t\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\t\tanimation.weight -= ( 0.05 * animation.weight );\n\t\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\t\tdebugMode && console.log( \"fadeOut:\", round(animation.weight, 3) );\n\t\t\t\t\tif ( round(animation.weight, 3) < 0.1 ){\n\t\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\t\tanimation.stop();\n\t\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tidle: function idle(){\n\t\tthis.actions.idle.play(0);\n\t},\n\n\tjump: function jump(){\n\t\tthis.actions.jump.play(0);\n\t},\n\n\trun: function run(){\n\t\tthis.actions.run.play(0);\n\t},\n\n\twalk: function walk(){\n\t\tthis.actions.walk.play(0);\n\t},\n\n\t//  ------------------------------------------------------  //\n\t//  This create the animations of skinned mesh. important!  //\n\t//  ------------------------------------------------------  //\n\n\tloadAction: function(){\n\n\t\tfor ( var i in arguments ) {\n\n\t\t\tvar name = arguments[i];\n\n\t\t\tvar data;\n\n\t\t\tswitch (this.gender) {\n\n\t\t\t\tcase \"male\":\n\t\t\t\t\tdata = MaleAnimations[ name ];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"female\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdata = Animations[ name ];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar action = new THREE.Animation( this.mesh, data );\n\t\t\taction.uuid = THREE.Math.generateUUID();\n\t\t\taction.weight = 1;\n\t\t\taction.timeScale = 1;\n\t\t\taction.currentTime = 0;\n\t\t\tthis.actions[ name ] = action;\n\t\t}\n\n\t},\n\n\treloadActions: function(){\n\n\t\tvar self = this;\n\n\t\tthis.stop();\n\t\tthis.deleteAll();\n\t\tthis.actions = {};\n\n\t\tif (this.actions.jump) this.actions.jump.loop = false;\n\n\t\tif (MaleAnimations && this.gender && this.gender == \"male\") {\n\t\t\tObject.keys( MaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (FemaleAnimations && this.gender && this.gender == \"female\") {\n\t\t\tObject.keys( FemaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Animations && !this.gender ) {\n\t\t\tObject.keys( Animations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.gender && this.gender != \"male\" && this.gender != \"female\" ){\n\t\t\tconsole.warn( \"AW3D.AnimationHandler: reloadActions(\" \n\t\t\t+ this.gender + \"): Gender exists but is not male or female.\");\n\n\t\t\treturn;\n\t\t}\n\n\t},\n\n};\n\n\n//  MATERIAL TO JSON.\n\n//  materialtoJson.js (v1.6)\n//  Return a promise with the \n//  material json object resolved.\n\nfunction materialtoJSON( material ){\n\n\t//  MULTIMATERIAL.\n\n\tif ( material.type == \"MultiMaterial\" || material.materials ) {\n\n\t\t//  multimaterial to json.\n\n\t\tvar multjson = {\n\n\t\t\t_id: \"\",\n\t\t\ttype: material.type,\n\t\t\tuuid: material.uuid || THREE.Math.generateUUID(),\n\n\t\t};\n\n\n\t\t//  materials to json.\n\n\t\tmultjson.materials = [];\n\n\t\tfor ( var i = 0; i < material.materials.length; i++ ){\n\n\t\t\tmultjson.materials.push( materialtoJSON( material.materials[i] ) );\n\n\t\t}\n\n\n\t\tdebugMode && console.log( \"multimaterial to json:\", multjson );\n\n\t\treturn multjson;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar json = {};\n\n\tfor ( var name in material ){\n\n\t\tif ( material[ name ] == undefined ) continue;         // important!\n\t\tif ( material[ name ] instanceof Function ) continue;  // important!\n\t\tif ( typeof(material[name]) === \"function\" ) continue; // important!\n\n\t\tswitch( name ){\n\n\t\t\tcase \"defines\":\n\t\t\tcase \"program\":\n\t\t\tcase \"_listeners\":\n\t\t\tcase \"needsUpdate\":\n\t\t\tcase \"_needsUpdate\":\n\t\t\tcase \"__webglShader\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  name, _id, uuid.\n\n\t\t\tcase \"name\":\n\t\t\t\tjson.name = material.name;\n\t\t\t\tbreak;\n\n\t\t\tcase \"_id\":\n\t\t\t\tjson._id = material._id || ObjectId();\n\t\t\t\tbreak;\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson.uuid = material.uuid || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  texture to json.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"aoMap\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Texture) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Texture\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = texturetoJSON( material[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Color) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Color\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].getHex();\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 to array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Vector2) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Vector2\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].toArray();\n\n\t\t\t\tbreak;\n\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = material[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n}\n\n\n//  TEXTURE TO JSON.\n//  Return a promise resolved \n//  with the texture json object.\n\nfunction texturetoJSON( texture ){\n\n\tvar json = {};\n\n\tfor (var name in texture ){\n\n\t\tif ( texture[ name ] == undefined ) continue;\n\t\tif ( texture[ name ] instanceof Function ) continue;\n\t\tif ( typeof(texture[name]) === \"function\" ) continue;\n\n\t\tswitch (name){\n\n\t\t\tcase \"_listeners\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson[ name ] = texture[ name ] || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 to array.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\t\t\t\tjson[ name ] = texture[ name ].toArray();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  image to json.\n\n\t\t\tcase \"image\":\n\t\t\t\tjson[ name ] = texture.sourceFile || getDataURL( texture[ name ] ); // important!\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = texture[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n}\n\n\n//  IMAGE TO JSON.\n//  Return an image object.\n\nfunction imagetoJSON( image ){\n\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: image.src || getDataURL( image ),\n\t};\n\n}\n\n\n//  TEXTURE IMAGE TO JSON.\n//  Return an image object.\n\nfunction textureImagetoJSON( texture ){\n\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: texture.sourceFile || texture.image.src || getDataURL( texture.image )\n\t};\n\n}\n\n\n//  MATERIAL FROM JSON.\n//  materialfromJson.js (v1.6)\n//  Return a promise with the material resolved.\n\nfunction materialfromJSON( json ){\n\n\t//  MULTIMATERIAL.\n\n\tif ( json.type == \"MultiMaterial\" ) {\n\n\n\t\tvar materials = [];\n\n\t\tfor ( var i = 0; i < json.materials.length; i++ ){\n\n\t\t\tmaterials.push( materialfromJSON( json.materials[i] ) );\n\n\t\t}\n\n\n\t\t//  Create multimaterial.\n\n\t\tvar multimaterial = new THREE.MeshFaceMaterial(materials);\n\n\t\tmultimaterial.uuid = json.uuid || THREE.Math.generateUUID();\n\n\t\treturn multimaterial;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar options = {};\n\n\tfor (var name in json){\n\n\t\tif ( json[ name ] == undefined ) continue; // important!\n\n\n\t\tswitch (name){\n\n\t\t\tcase \"_id\":\n\t\t\tcase \"meta\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\toptions.uuid = json.uuid || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  texture from json.\n\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"aoMap\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"map\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\n\t\t\t\toptions[ name ] = texturefromJSON( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\toptions[ name ] = new THREE.Color();\n\t\t\t\toptions[ name ].setHex( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 from array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\toptions[ name ] = new THREE.Vector2();\n\t\t\t\toptions[ name ].fromArray( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\toptions[ name ] = json[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn new THREE[ options.type ](options);\n}\n\n\n//  TEXTURE FROM JSON (v1.6)\n//  Return a promise with the texture resolved.\n\nfunction texturefromJSON( json ){\n\n\tvar texture = new THREE.Texture();\n\n\tfor ( var name in json ){\n\n\t\tswitch (name){\n\n\t\t\tcase \"meta\":\n\t\t\tcase \"image\":\n\t\t\t\tbreak;\n\n\t\t\t\t//  array to vector2.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\n\t\t\t\ttexture[ name ] = new THREE.Vector2();\n\t\t\t\ttexture[ name ].fromArray( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  wrapS & wrapT.\n\n\t\t\tcase \"wrap\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\t\t\t\tif ( !( json[ name ] instanceof Array ) ) break;\n\n\t\t\t\ttexture.wrapS = json[ name ][0];\n\t\t\t\ttexture.wrapT = json[ name ][1];\n\n\t\t\t\tbreak;\n\n\t\t\t\t//  image from texture json with\"FileReader.readAsDataURL(blob)\".\n\n\t\t\t\t//  Check whether a match for the request is found in   \n\t\t\t\t//  the CacheStorage using CacheStorage.match(). If so, serve that.\n\n\t\t\t\t//  If not, open the \"textures\" cache using open(), \n\t\t\t\t//  put the default network request in the cache using Cache.put() \n\t\t\t\t//  and return a clone of the default network request using return response.clone().\n\n\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t//  If this fails (e.g., because the network is down), return a fallback response.\n\n\t\t\t\t//  Pros:\n\n\t\t\t\t//  Easy to use.\n\t\t\t\t//  Small, compact, safe code.\n\t\t\t\t//  Texture.image.src is string.\n\t\t\t\t//  Texture.image.src is dataURL.\n\t\t\t\t//  Texture.image.src can reused.\n\t\t\t\t//  Texture.image.src is always valid.\n\t\t\t\t//  Texture.image.src can be send everywhere.\n\t\t\t\t//  Texture.image.src can converted to canvas.\n\t\t\t\t//  Texture.image (canvas) size always power of 2.\n\t\t\t\t//  Texture.image.src can saved in storage objects.\n\t\t\t\t//  Texture.image.src can converted vice versa to blob.\n\n\t\t\t\t//  Cons:\n\n\t\t\t\t//  Larger size (~33%)\n\t\t\t\t//  Take more time than URL.createObjectURL(blob);\n\n\t\t\t\t//  sourceFile.\n\t\t\t\t//  case \"sourceFile\":\n\t\t\t\t//      texture.sourceFile = json[ name ]; // important!\n\t\t\t\t//  break;\n\n\t\t\t\t//  case \"image\": (N/A).\n\t\t\tcase \"sourceFile\":\n\n\t\t\t\ttexture.sourceFile = json.sourceFile;\n\n\t\t\t\t//  SourceFile first.\n\t\t\t\tvar url = json.sourceFile || json.image.src || json.image || \"//i.imgur.com/ODeftia.jpg\";\n\n\t\t\t\t//  URL.\n\n\t\t\t\tif ( validator && validator.isURL( url ) ) {\n\n\t\t\t\t\t//  Cache first.\n\t\t\t\t\tcaches.match( url ).then(function(response){\n\n\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\tthrow \"Texture not found!\";\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}).catch(function(err){\n\n\t\t\t\t\t\t//  We use cors origin mode to avoid\n\t\t\t\t\t\t//  texture tainted canvases, images.\n\n\t\t\t\t\t\treturn fetch( url, {\n\t\t\t\t\t\t\tmode: \"cors\",  // important!\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\treturn caches.open(\"textures\").then(function(cache){\n\n\t\t\t\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\t\t\t\t\tvar clone = response.clone();\n\t\t\t\t\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\t\t\t\t\treturn response.blob();  //  important!\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(blob){\n\n\t\t\t\t\t\tvar img = new Image();\n\t\t\t\t\t\timg.crossOrigin = \"anonymous\";  //  important!\n\n\t\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\t\ttexture.image = canvas;\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\t\timg.onload = null; // optional!\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t//  Get dataURL from blob.\n\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onload = function() {\n\t\t\t\t\t\t\timg.src = reader.result;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\n\t\t\t\t//  DataURL.\n\n\t\t\t\tif ( validator && validator.isDataURI( url ) ) {\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.crossOrigin = \"anonymous\";\n\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\ttexture.image = canvas;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\timg.onload = null; // optional!\n\t\t\t\t\t}; \n\t\t\t\t\timg.src = url;  break;\n\t\t\t\t} \n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\ttexture[ name ] = json[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn texture;\n}\n\n\n//  IMAGE FROM JSON (v1.6)\n//  Return a promise with the image resolved.\n\nfunction imagefromJSON( json, onLoadEnd ){\n\n\tvar url = json.src;\n\n\t//  Cache first.\n\tcaches.match( url ).then(function(response){\n\n\t\tif ( !response ) \n\t\t\tthrow response;\n\t\telse\n\t\t\treturn response;\n\n\t}).catch(function(err){\n\n\t\t//  We use cors origin mode to avoid\n\t\t//  texture tainted canvases, images.\n\n\t\treturn fetch( url, {\n\t\t\tmode: \"cors\",  // important!\n\t\t\tmethod: \"GET\",\n\t\t});\n\n\t\t//  TODO: REPLACE async/await FOR BACKWARD COMPETALITY.\n\t}).then(function(response){\n\n\t\treturn caches.open(\"textures\").then(function(cache){\n\n\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\tvar clone = response.clone();\n\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\treturn response.blob(); //  important!\n\t\t\t});\n\n\t\t});\n\n\t}).then(function(blob){\n\n\t\tvar img = new Image();\n\t\timg.crossOrigin = \"anonymous\";  //  important!\n\t\timg.onload = onLoadEnd;\n\n\t\t//  Get dataURL from blob.\n\n\t\treturn new Promise(function(resolve, reject){\n\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\timg.src = reader.result;\n\t\t\t\tresolve( img );\n\t\t\t};\n\n\t\t\treader.readAsDataURL(blob);\n\n\t\t});\n\n\t});\n\n}\n\n\n//  blobToDataUrl.js\n//  https://gist.github.com/tantaman/6921973\n\nfunction convertToBase64(blob, callback) {\n\n\tvar reader = new FileReader();\n\n\treader.onload = function(e) {\n\t\tcallback(reader.result);\n\t};\n\n\treader.readAsDataURL(blob);\n}\n\n\n//  dataUrlToBlob.js\n//  https://gist.github.com/tantaman/6921973\n\nfunction dataURLToBlob(dataURL) {\n\n\tvar BASE64_MARKER = \";base64,\";\n\n\tif (dataURL.indexOf(BASE64_MARKER) == -1) {\n\t\tvar parts = dataURL.split(\",\");\n\t\tvar contentType = parts[0].split(\":\")[1];\n\t\tvar raw = parts[1];\n\n\t\treturn new Blob([raw], {type: contentType});\n\t}\n\n\tvar parts = dataURL.split(BASE64_MARKER);\n\tvar contentType = parts[0].split(\":\")[1];\n\tvar raw = window.atob(parts[1]);\n\tvar rawLength = raw.length;\n\n\tvar uInt8Array = new Uint8Array(rawLength);\n\n\tfor (var i = 0; i < rawLength; ++i) {\n\t\tuInt8Array[i] = raw.charCodeAt(i);\n\t}\n\n\treturn new Blob([uInt8Array], {type: contentType});\n}\n\n\n//  makePowerOfTwo.js\n\nfunction makePowerOfTwo( image, natural ) {\n\n\tvar canvas = document.createElement( \"canvas\" );\n\n\tif ( natural ){\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.naturalWidth );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.naturalHeight );\n\t} else {\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\t}\n\n\tvar context = canvas.getContext( \"2d\" );\n\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t//  debugMode && console.warn( \"outfitLoader:makePowerOfTwo(img):\", \n\t//  \"Image resized to:\", canvas.width, \"x\", canvas.height );\n\n\treturn canvas;\n}\n\n\n//  getDataURL.js\n\nfunction getDataURL( image ) {\n\n\tvar canvas;\n\n\tif ( image.toDataURL !== undefined ) {\n\n\t\tcanvas = image;\n\n\t} else {\n\n\t\tcanvas = document.createElementNS( \"http://www.w3.org/1999/xhtml\", \"canvas\" );\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\n\t\tcanvas.getContext( \"2d\" ).drawImage( image, 0, 0, image.width, image.height );\n\n\t}\n\n\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\treturn canvas.toDataURL( \"image/jpeg\", 0.6 );\n\n\t} else {\n\n\t\treturn canvas.toDataURL( \"image/png\" );\n\n\t}\n\n}\n\n\n//  deepCopy.js\n\nfunction deepCopy(obj) {\n\tif (Object.prototype.toString.call(obj) === \"[object Array]\") {\n\t\tvar out = [], i = 0, len = obj.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tout[i] = arguments.callee(obj[i]);\n\t\t}\n\t\treturn out;\n\t}\n\tif (typeof obj === \"object\") {\n\t\tvar out = {}, i;\n\t\tfor ( i in obj ) {\n\t\t\tout[i] = arguments.callee(obj[i]);\n\t\t}\n\t\treturn out;\n\t}\n\treturn obj;\n}\n\n\n//  round.js  source: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"\n\nfunction round(number, precision) {\n\tvar shift = function (number, precision, reverseShift) {\n\t\tif (reverseShift) {\n\t\t\tprecision = -precision;\n\t\t}  \n\t\tnumArray = (\"\" + number).split(\"e\");\n\t\treturn +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\n\t};\n\treturn shift(Math.round(shift(number, precision, false)), precision, true);\n}\n\n"
			},
			{
				"name": "PlayerControlller.js",
				"source": "//  PlayerController.js\n\nvar LocalPlayer = function(radius){\n\n\tvar player = this; // important!\n\n\tthis.holder = AW3D.PlayerHolder(); // important!\n\tscene.add( this.holder );\n\tthis.holder.visible = false;\n\n\tthis.holderHelper = AW3D.PlayerHolderHelper();\n//  scene.add( this.holderHelper );\n\n\tthis.sphere = AW3D.PlayerSphere();\n\tthis.sphere.position.y = 12;\n\tthis.holder.add( this.sphere ); \n\n\tthis.outfit = new AW3D.OutfitManager(); // important!\n\n\tthis.outfit.update = function() {\n\n\t//  Update avatar rotation y.\n\t\tvar direction = player.controller.direction - Math.PI;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.rotation.y = direction;\n\n\t//  Update avatar position.\n\t\tvar x = player.controller.center.x;\n\t\tvar y = player.controller.center.y - player.controller.radius;\n\t\tvar z = player.controller.center.z;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.position.set( x, y, z );\n\t};\n\n\tvar radius = radius || 3;\n\tthis.controller = new MW.CharacterController( this.holder, radius );\n\tthis.controller.isWalking = false;\n\n\tthis.controller.getdata = function( action ){\n\n\t\tvar data = {};\n\t\tdata.playerid = socket.id;\n\t\tdata.radius = this.radius;\n\t\tdata.isGrounded = this.isGrounded;\n\t\tdata.isOnSlope = this.isOnSlope;\n\t\tdata.isIdling  = this.isIdling;\n\t\tdata.isJumping = this.isJumping;\n\t\tdata.isRunning = this.isRunning;\n\t\tdata.isWalking = this.isWalking;\n\t\tdata.direction = this.direction;\n\t\tdata.movementSpeed = this.movementSpeed;\n\t\tdata.jumpStartTime = this.jumpStartTime;\n\t\tdata.position = this.center.toArray();\n\t\tif (!!action) data.action = action;\n\n\t\treturn data;\n\t};\n\n\tfunction onStartJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOff(\"idle\", \"walk\", \"run\");\n\t};\n\n\tfunction onEndJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOn(\"idle\", \"walk\", \"run\");\n\n\t\tif ( player.controller.isRunning && player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 28;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"walk\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else if ( player.controller.isRunning && !player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 45;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"run\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 0;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"idle\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t\t}\n\t}\n\n\tthis.controller.addEventListener(\"endJumping\",   onEndJumping);\n\tthis.controller.addEventListener(\"startJumping\", onStartJumping);\n\n\t//  Add controller to world.\n\tworld.add( this.controller ); // important!\n\n\tdebugMode && console.log( \n\t\t\"world.characterPool length:\", world.characterPool.length, \n\t\t\"index:\", world.characterPool.indexOf( this.controller )\n\t);\n\n\t//  Add outfit to scene.\n\tscene.add(this.outfit.direction); // important!\n\n};\n\nLocalPlayer.prototype = {\n\n\t//  Collect position, direction, nickname, and gender.\n\n\tgetdata: function( socket ){\n\t\tif ( !socket ) return;\n\t\tvar data = {};\n\t\tdata.playerid  = socket.id;\n\t\tdata.nickname  = this.nickname;\n\t\tdata.gender    = this.outfit.getGender();\n\t\tdata.direction = this.outfit.direction.rotation.y;\n\t\tdata.position  = this.outfit.direction.position.toArray();\n\t\tdata.dna       = this.outfit.toDNA();\n\t\tdebugMode && console.log(\"player data:\", data);\n\t\treturn data;\n\t},\n\n\t//  Remote player set data.\n\n\tsetdata: function( data ){\n\t\tif ( !data.playerid || data.playerid != this.playerid ) return;\n\n\t\tthis.playerid = data.playerid;\n\t\tthis.nickname = data.nickname;\n\t\tthis.outfit.setGender( data.gender );\n\t\tthis.outfit.direction.rotation.y = data.direction;\n\t\tthis.outfit.direction.position.fromArray(data.position);\n\n\t\tif (data.action != undefined) {\n\t\t\tthis.outfit.AnimationsHandler.stop();\n\t\t\tthis.outfit.AnimationsHandler.play( data.action );\n\t\t}\n\t},\n\n\t//  Create player outfit from dna data.\n\n\tfromDNA: function( dna ){\n\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle(); // face front.\n\t\tthis.controller.direction = frontAngle;\n\t\tthis.outfit.fromDNA( dna );\n\t\tscene.add(this.outfit.direction);\n\t\tthis.outfit.update();\n\t},\n\n\t//  Start remote player action.\n\tstartAction: function( running, walking, idling, speed, name, eventType ){\n\n\t\tthis.outfit.AnimationsHandler.stop();        \n\t\tthis.controller.isRunning = running;\n\t\tthis.controller.isWalking = walking;\n\t\tthis.controller.isIdling  = idling;\n\t\tthis.controller.movementSpeed = speed;\n\t\tthis.outfit.AnimationsHandler.play( name );\n\t\tthis.controller.dispatchEvent({type: eventType});\n\n\t},\n\n\t//  Get local player action data.\n\tgetActionData: function ( name ){\n\t\treturn {\n\t\t\tplayerid : socket.id,\n\t\t\tdirection: this.outfit.direction.rotation.y,\n\t\t\tposition : this.outfit.direction.position.toArray(),\n\t\t\taction   : name,\n\t\t};\n\t},\n\n};\n\n\nlocalPlayer = new LocalPlayer();\nlocalPlayer.controller.center.set(60, 250, 110);\ndebugMode && console.log({\"localPlayer\": localPlayer});\n\n\nfunction update( event ) {\n\n\tlocalPlayer.outfit.update();\n\n}\n"
			},
			{
				"name": "cameraControl.js",
				"source": "//  MW cameraControl.js\n\nvar light = scene.getObjectByName(\"Default Camera Light\");\n\ncameraControls = new MW.TPSCameraControl(camera, localPlayer.holder, {\n\tel: renderer.domElement,               // html renderer element.\n\toffset: new THREE.Vector3( 0, 15, 0 ), // camera eye height.\n\tradius: 40,                            // default: 37 // (distance of the character to the camera).\n\tminRadius: 6,                          // default: 10 // (can take and negative values, yes!!!).\n\tmaxRadius: 1500,                       // default: 64, runtime: 40.\n\trigidObjects: [],                      // collition objects for the camera.\n});\n\ncameraControls.getforward = function(){ \n\treturn -this.theta \n};\n\ncameraControls.setVerticalOffset = function(offset){ \n\tthis.offset.y = offset; \n};\n\n(cameraControls.frontAngleUpdate = function(){\n\twindowAnimationFrameRequestID = requestAnimationFrame( cameraControls.frontAngleUpdate );\n\tcameraControls.forward = -cameraControls.theta;\n})();\n\nfunction update( event ) {\n\tcameraControls.update();\n\tif ( light ) light.position.copy( cameraControls.camera.position );\n}\n"
			},
			{
				"name": "KeyInputControls.js",
				"source": "//  KeyInputControls.js\n\nkeyInputControls = new MW.KeyInputControl();\n\nkeyInputControls.On = function(){\n\n\tif ( !keyInputControls.isOff ) return;\n\n\t$(keyInputControls).on( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).on( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).on( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).on( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = false;\n\tdebugMode && console.log( \"keyInputControls are ON.\" );\n};\n\nkeyInputControls.Off = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\t$(keyInputControls).off( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).off( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).off( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).off( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = true;\n\tdebugMode && console.log( \"keyInputControls are OFF.\" );\n};\n\nkeyInputControls.update = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\tif ( keyInputControls.isMoveKeyHolded \n\t\t|| localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t|| localPlayer.controller.isOnSlope ){\n\n\t\tthis.dispatchEvent({type:\"update\"});\n\t}\n};\n\n//\tSet to off to activate key input controls.\n\nkeyInputControls.Off();  // important!\n\n//\tEnable key input controls.\n\nkeyInputControls.On(); // important!\n\n\nfunction onMoveKeyOn() { \n\tdebugMode && console.log(\"move key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = true; \n\tlocalPlayer.controller.isWalking = true;\n\tlocalPlayer.controller.movementSpeed = 28;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n}\n\nfunction onMoveKeyChange() {\n\tdebugMode && console.log(\"move key changed\");\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n}\n\nfunction onMoveKeyOff() {\n\tdebugMode && console.log(\"move key off\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tvar finalDirection = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.controller.direction = finalDirection;\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.isIdling  = true;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n}\n\nfunction onJumpInput() {\n\tdebugMode && console.log(\"jump key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.jump();\n\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n}\n\n\n//\tUpdate.\n\nfunction update( event ) {\n\tkeyInputControls.update();\n}\n\n//\tDebug.\n\nfunction stop(){\n\tkeyInputControls.Off();  // important!\n}"
			},
			{
				"name": "JoystickControls.js",
				"source": "//  JoystickControls.js\n\n/*\n$(document.head).append(\n\t\"<style class='joystick-controls'> \"\n\t+ \".gameinput-button__inner { display:table-cell; vertical-align: middle; } \"\n\t+ \".gameinput-joystick { border:solid 0px white; border-radius:50%; position:absolute; bottom:30px; user-select:none; \"\n\t+ \"touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \"\n\t+ \".gameinput-frame { position:absolute; top:0; left:0; pointer-events:none; opacity:0.5; } \"\n\t+ \".gameinput-button { cursor:pointer; text-align:center; position:absolute; display:table; \"\n\t+ \"box-sizing:border-box; border:1px solid #333; border-radius:50%; background:rgba( 255, 255, 255, .5 ); user-select:none; \"\n\t+ \"touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \"\n\t+ \"#joystick1 { bottom:50px; right:40px; width:120px; height:120px;z-index:1; } \"\n\t+ \"#joystick2 { bottom:50px; left:40px; width:120px; height:120px; z-index:1;} \"\n\t+ \"#jumpButton { right:105px; bottom:240px; z-index:1; } \"\n\t+ \"@media ( max-width: 768px ) { #joystick1 { bottom:0px; right:0px; } #joystick2 { bottom:0px; left:0px; } \"\n\t+ \"#jumpButton { bottom:190px; right:65px; } \"\n\t+ \".gameinput-joystick { bottom:0px;} } \"\n\t+ \".gameinput-joystick__button { position:absolute; width:72px; height:72px; left:85px; top:85px; cursor:pointer; \"\n\t+ \"box-sizing:border-box; border-radius:50%; border:1px solid #333; background:rgba( 255, 255, 255, .5 ); } \"\n\t+ \"</style>\"\n);\n\n$(document.body).append('<div class=\"joystick-controls\" id=\"joystick-controls-1\"></div><div class=\"joystick-controls\" id=\"joystick-controls-2\"></div>');\n*/\n\n//  MW Joystick Controls.\n\nvar joystick1Selector  = \"#joystick1\";\nvar joystick2Selector  = \"#joystick2\";\nvar jumpButtonSelector = \"#jumpButton\";\n\nvar joystickControlsSelector  = \".joystick-controls\";\nvar joystickControls1Selector = \"#joystick-controls-1\";\nvar joystickControls2Selector = \"#joystick-controls-2\";\n\nvar buttonSvgSrc = '<svg width=\"48\" height=\"48\" viewBox=\"0 0 64 64\"><path fill=\"#fff\" d=\"M44.5,54.5c-0.3-5.1-2.4-9.4-5.7-13.2C41,36,40.9,30,38.5,24.7c-1.2-2.7-3.9-4.4-6.9-3.3c-0.2,0.1-0.4,0.1-0.5,0.2c-3-4.3-6.6-8.3-10.1-11.8c-2.6-2.6-6.4,1.7-3.8,4.3c3.9,3.9,8.1,8.5,11,13.7c0,0.1,0.1,0.3,0.2,0.4c1.5,3.2,1.9,6.4,0.2,9.6c-0.3,0.5-0.4,1-0.5,1.5c-1.1,1.5-2.3,3-3.6,4.4c-0.8-2.3-1.4-4.7-1.6-7.1c-0.5-4.6-7.7-4.1-7.2,0.5c0.5,4.9,2.1,9.6,3.9,14.2c0.8,1.9,3.6,3.4,5.4,1.8c2.8-2.4,5.3-4.9,7.5-7.8c0.2,0.1,0.5,0.1,0.7,0.1c0.1,0.3,0.3,0.5,0.5,0.7c1.7,1.8,2.8,3.9,3.3,6.3c-2.2,0.8-4.6,1.4-7,1.4c-4.6,0.1-4.1,7.2,0.5,7.2c4-0.1,7.9-1.3,11.6-3C43.6,57.5,44.6,56.2,44.5,54.5z M34.2,8.9c0.7,0.1,1.6-0.1,2.3,0.3c1.5,0.8,2.6,2.1,3.2,3.6c0.2-2.2,0.5-4.3,0.8-6.5c0.5-3.7-5.1-4.7-5.7-1.1C34.6,6.3,34.3,7.8,34.2,8.9z\"/><circle fill=\"#fff\" cx=\"33.8\" cy=\"15.2\" r=\"4.9\"/></svg>';\n\njoystick1  = new virtualInput.Joystick( $( joystickControls1Selector ), 94, { id: \"joystick1\" } );\njoystick2  = new virtualInput.Joystick( $( joystickControls2Selector ), 94, { id: \"joystick2\" } );\njumpButton = new virtualInput.Button( $( joystickControls1Selector ),   58, { id: \"jumpButton\", label: \"<b>JUMP</b>\" } ); // buttonSvgSrc\n\njoystick1.addEventListener( \"active\", function () { \n\n\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded ||  localPlayer.controller.isOnSlope ) return;\n\n\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + joystick1.angle; // important!\n/*\n\tif ( localPlayer.controller.isRunning && !localPlayer.controller.isWalking ) {\n\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.movementSpeed = 45;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"run\");\n\n\t} else {\n*/\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = true; \n\t\tlocalPlayer.controller.isWalking = false;  // !!!danger: \"false\" cause bug in production server ??? //\n\t\tlocalPlayer.controller.movementSpeed = 28;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n//\t}\n\n});\n\njoystick1.addEventListener( \"disactive\", function () { \n\n\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded ||  localPlayer.controller.isOnSlope ) return;\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n});\n\njoystick1.update = function(){\n\n\tif ( joystick1.isActive ) {\n\n\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + joystick1.angle;\n\n\t\tjoystick1.dispatchEvent({type:\"update\"}); // important!\n\n\t}\n};\n\njoystick2.update = function(){\n\n\tif ( joystick2.isActive ) {\n\n\t\tcameraControls.setLatLon(\n\t\t\tcameraControls.lat + joystick2.position.y * 0.5, // deg.\n\t\t\tcameraControls.lon - joystick2.position.x        // deg.\n\t\t);\n\n\t\tjoystick2.dispatchEvent({type:\"update\"}); // important!\n\t}\n}\n\njumpButton.addEventListener( \"press\", function () { \n\n\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded || localPlayer.controller.isOnSlope ) return;\n\n\tlocalPlayer.controller.jump();\n\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n});\n\nfunction update( event ) {\n\tjoystick1.update();\n\tjoystick2.update();\n}\n\n//\tDebug.\n\nfunction stop(){\n//\t$(joystickControlsSelector).remove();\n}"
			},
			{
				"name": "AnimationsUpdate.js",
				"source": "var clock = new THREE.Clock();\nfunction update( event ) {\n\tvar delta = clock.getDelta();\n\tTHREE.AnimationHandler.update( delta );\n}\n"
			}],
		"B22F5FEF-F45E-4C2E-B36B-AEF0F249EFC7": [
			{
				"name": "UVsDebug.js",
				"source": "/* \n * @author zz85 / http://github.com/zz85\n * @author WestLangley / http://github.com/WestLangley\n *\n * tool for \"unwrapping\" and debugging three.js \n * geometries UV mapping\n *\n * Sample usage:\n *\tdocument.body.appendChild( THREE.UVsDebug( new THREE.SphereGeometry( 10, 10, 10, 10 ) );\n *\n */\n \nTHREE.UVsDebug = function( geometry, size ) {\n\n\t// handles wrapping of uv.x > 1 only\n    \n\tvar abc = 'abc';\n\n\tvar uv, u, ax, ay;\n\tvar i, il, j, jl;\n\tvar vnum;\n\n\tvar a = new THREE.Vector2();\n\tvar b = new THREE.Vector2();\n\n\tvar geo = ( geometry instanceof THREE.BufferGeometry ) ? new THREE.Geometry().fromBufferGeometry( geometry ) : geometry;\n\n\tvar faces = geo.faces;\n\tvar uvs = geo.faceVertexUvs[ 0 ];\n\n\tvar canvas = document.createElement( 'canvas' );\n\tvar width = size || 1024;   // power of 2 required for wrapping\n\tvar height = size || 1024;\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tvar ctx = canvas.getContext( '2d' );\n\tctx.lineWidth = 1;\n\tctx.strokeStyle = 'rgba( 0, 0, 0, 1.0 )';\n\tctx.textAlign = 'center';\n\n\t// paint background white\n\n\tctx.fillStyle = 'rgba( 255, 255, 255, 1.0 )';\n\tctx.fillRect( 0, 0, width, height );\n\n\tfor ( i = 0, il = uvs.length; i < il; i ++ ) {\n\n\t\tuv = uvs[ i ];\n\n\t\t// draw lines\n\n\t\tctx.beginPath();\n\n\t\ta.set( 0, 0 );\n\n\t\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\tu = uv[ j ];\n\n\t\t\ta.x += u.x;\n\t\t\ta.y += u.y;\n\n\t\t\tif ( j == 0 ) {\n\n\t\t\t\tctx.moveTo( u.x * width, ( 1 - u.y ) * height );\n\n\t\t\t} else {\n\n\t\t\t\tctx.lineTo( u.x * width, ( 1 - u.y ) * height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tctx.closePath();\n\t\tctx.stroke();\n\n\t\ta.divideScalar( jl );\n\n\t}\n\n\treturn canvas;\n\n};\n\n//  disable labels.\n\n/*\n\t\t// label the face number\n\n\t\tctx.font = \"12pt Arial bold\";\n\t\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\n\t\tctx.fillText( i, a.x * width, ( 1 - a.y ) * height );\n\n\t\tif ( a.x > 0.95 ) {\n\n\t\t\t// wrap x // 0.95 is arbitrary\n\n\t\t\tctx.fillText( i, ( a.x % 1 ) * width, ( 1 - a.y ) * height );\n\n\t\t}\n\n\t\tctx.font = \"8pt Arial bold\";\n\t\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\n\n\t\t// label uv edge orders\n\n\t\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\tu = uv[ j ];\n\t\t\tb.addVectors( a, u ).divideScalar( 2 );\n\n\t\t\tvnum = faces[ i ][ abc[ j ] ];\n\t\t\tctx.fillText( abc[ j ] + vnum, b.x * width, ( 1 - b.y ) * height );\n\n\t\t\tif ( b.x > 0.95 ) {\n\n\t\t\t\t// wrap x\n\n\t\t\t\tctx.fillText( abc[ j ] + vnum, ( b.x % 1 ) * width, ( 1 - b.y ) * height );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn canvas;\n\n};\n*/\n\n"
			},
			{
				"name": "SubdivisionModifier.js",
				"source": "/*\n *\t@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog\n *\t@author centerionware / http://www.centerionware.com\n *\n *\tSubdivision Geometry Modifier\n *\t\tusing Loop Subdivision Scheme\n *\n *\tReferences:\n *\t\thttp://graphics.stanford.edu/~mdfisher/subdivision.html\n *\t\thttp://www.holmes3d.net/graphics/subdivision/\n *\t\thttp://www.cs.rutgers.edu/~decarlo/readings/subdiv-sg00c.pdf\n *\n *\tKnown Issues:\n *\t\t- currently doesn't handle \"Sharp Edges\"\n */\n\nTHREE.SubdivisionModifier = function ( subdivisions ) {\n\n\tthis.subdivisions = ( subdivisions === undefined ) ? 1 : subdivisions;\n\n};\n\n// Applies the \"modify\" pattern\nTHREE.SubdivisionModifier.prototype.modify = function ( geometry ) {\n\n\tvar repeats = this.subdivisions;\n\n\twhile ( repeats -- > 0 ) {\n\n\t\tthis.smooth( geometry );\n\n\t}\n\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\n};\n\n( function() {\n\n\t// Some constants\n\tvar WARNINGS = ! true; // Set to true for development\n\tvar ABC = [ 'a', 'b', 'c' ];\n\n\n\tfunction getEdge( a, b, map ) {\n\n\t\tvar vertexIndexA = Math.min( a, b );\n\t\tvar vertexIndexB = Math.max( a, b );\n\n\t\tvar key = vertexIndexA + \"_\" + vertexIndexB;\n\n\t\treturn map[ key ];\n\n\t}\n\n\n\tfunction processEdge( a, b, vertices, map, face, metaVertices ) {\n\n\t\tvar vertexIndexA = Math.min( a, b );\n\t\tvar vertexIndexB = Math.max( a, b );\n\n\t\tvar key = vertexIndexA + \"_\" + vertexIndexB;\n\n\t\tvar edge;\n\n\t\tif ( key in map ) {\n\n\t\t\tedge = map[ key ];\n\n\t\t} else {\n\n\t\t\tvar vertexA = vertices[ vertexIndexA ];\n\t\t\tvar vertexB = vertices[ vertexIndexB ];\n\n\t\t\tedge = {\n\n\t\t\t\ta: vertexA, // pointer reference\n\t\t\t\tb: vertexB,\n\t\t\t\tnewEdge: null,\n\t\t\t\t// aIndex: a, // numbered reference\n\t\t\t\t// bIndex: b,\n\t\t\t\tfaces: [] // pointers to face\n\n\t\t\t};\n\n\t\t\tmap[ key ] = edge;\n\n\t\t}\n\n\t\tedge.faces.push( face );\n\n\t\tmetaVertices[ a ].edges.push( edge );\n\t\tmetaVertices[ b ].edges.push( edge );\n\n\n\t}\n\n\tfunction generateLookups( vertices, faces, metaVertices, edges ) {\n\n\t\tvar i, il, face, edge;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tmetaVertices[ i ] = { edges: [] };\n\n\t\t}\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tprocessEdge( face.a, face.b, vertices, edges, face, metaVertices );\n\t\t\tprocessEdge( face.b, face.c, vertices, edges, face, metaVertices );\n\t\t\tprocessEdge( face.c, face.a, vertices, edges, face, metaVertices );\n\n\t\t}\n\n\t}\n\n\tfunction newFace( newFaces, a, b, c ) {\n\n\t\tnewFaces.push( new THREE.Face3( a, b, c ) );\n\n\t}\n\n\tfunction midpoint( a, b ) {\n\n\t\treturn ( Math.abs( b - a ) / 2 ) + Math.min( a, b );\n\n\t}\n\n\tfunction newUv( newUvs, a, b, c ) {\n\n\t\tnewUvs.push( [ a.clone(), b.clone(), c.clone() ] );\n\n\t}\n\n\t/////////////////////////////\n\n\t// Performs one iteration of Subdivision\n\tTHREE.SubdivisionModifier.prototype.smooth = function ( geometry ) {\n\n\t\tvar tmp = new THREE.Vector3();\n\n\t\tvar oldVertices, oldFaces, oldUvs;\n\t\tvar newVertices, newFaces, newUVs = [];\n\n\t\tvar n, l, i, il, j, k;\n\t\tvar metaVertices, sourceEdges;\n\n\t\t// new stuff.\n\t\tvar sourceEdges, newEdgeVertices, newSourceVertices;\n\n\t\toldVertices = geometry.vertices; // { x, y, z}\n\t\toldFaces = geometry.faces; // { a: oldVertex1, b: oldVertex2, c: oldVertex3 }\n\t\toldUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\tvar hasUvs = oldUvs !== undefined && oldUvs.length > 0;\n\n\t\t/******************************************************\n\t\t *\n\t\t * Step 0: Preprocess Geometry to Generate edges Lookup\n\t\t *\n\t\t *******************************************************/\n\n\t\tmetaVertices = new Array( oldVertices.length );\n\t\tsourceEdges = {}; // Edge => { oldVertex1, oldVertex2, faces[]  }\n\n\t\tgenerateLookups( oldVertices, oldFaces, metaVertices, sourceEdges );\n\n\n\t\t/******************************************************\n\t\t *\n\t\t *\tStep 1.\n\t\t *\tFor each edge, create a new Edge Vertex,\n\t\t *\tthen position it.\n\t\t *\n\t\t *******************************************************/\n\n\t\tnewEdgeVertices = [];\n\t\tvar other, currentEdge, newEdge, face;\n\t\tvar edgeVertexWeight, adjacentVertexWeight, connectedFaces;\n\n\t\tfor ( i in sourceEdges ) {\n\n\t\t\tcurrentEdge = sourceEdges[ i ];\n\t\t\tnewEdge = new THREE.Vector3();\n\n\t\t\tedgeVertexWeight = 3 / 8;\n\t\t\tadjacentVertexWeight = 1 / 8;\n\n\t\t\tconnectedFaces = currentEdge.faces.length;\n\n\t\t\t// check how many linked faces. 2 should be correct.\n\t\t\tif ( connectedFaces != 2 ) {\n\n\t\t\t\t// if length is not 2, handle condition\n\t\t\t\tedgeVertexWeight = 0.5;\n\t\t\t\tadjacentVertexWeight = 0;\n\n\t\t\t\tif ( connectedFaces != 1 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( 'Subdivision Modifier: Number of connected faces != 2, is: ', connectedFaces, currentEdge );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewEdge.addVectors( currentEdge.a, currentEdge.b ).multiplyScalar( edgeVertexWeight );\n\n\t\t\ttmp.set( 0, 0, 0 );\n\n\t\t\tfor ( j = 0; j < connectedFaces; j ++ ) {\n\n\t\t\t\tface = currentEdge.faces[ j ];\n\n\t\t\t\tfor ( k = 0; k < 3; k ++ ) {\n\n\t\t\t\t\tother = oldVertices[ face[ ABC[ k ] ] ];\n\t\t\t\t\tif ( other !== currentEdge.a && other !== currentEdge.b ) break;\n\n\t\t\t\t}\n\n\t\t\t\ttmp.add( other );\n\n\t\t\t}\n\n\t\t\ttmp.multiplyScalar( adjacentVertexWeight );\n\t\t\tnewEdge.add( tmp );\n\n\t\t\tcurrentEdge.newEdge = newEdgeVertices.length;\n\t\t\tnewEdgeVertices.push( newEdge );\n\n\t\t\t// console.log(currentEdge, newEdge);\n\n\t\t}\n\n\t\t/******************************************************\n\t\t *\n\t\t *\tStep 2.\n\t\t *\tReposition each source vertices.\n\t\t *\n\t\t *******************************************************/\n\n\t\tvar beta, sourceVertexWeight, connectingVertexWeight;\n\t\tvar connectingEdge, connectingEdges, oldVertex, newSourceVertex;\n\t\tnewSourceVertices = [];\n\n\t\tfor ( i = 0, il = oldVertices.length; i < il; i ++ ) {\n\n\t\t\toldVertex = oldVertices[ i ];\n\n\t\t\t// find all connecting edges (using lookupTable)\n\t\t\tconnectingEdges = metaVertices[ i ].edges;\n\t\t\tn = connectingEdges.length;\n\n\t\t\tif ( n == 3 ) {\n\n\t\t\t\tbeta = 3 / 16;\n\n\t\t\t} else if ( n > 3 ) {\n\n\t\t\t\tbeta = 3 / ( 8 * n ); // Warren's modified formula\n\n\t\t\t}\n\n\t\t\t// Loop's original beta formula\n\t\t\t// beta = 1 / n * ( 5/8 - Math.pow( 3/8 + 1/4 * Math.cos( 2 * Math. PI / n ), 2) );\n\n\t\t\tsourceVertexWeight = 1 - n * beta;\n\t\t\tconnectingVertexWeight = beta;\n\n\t\t\tif ( n <= 2 ) {\n\n\t\t\t\t// crease and boundary rules\n\t\t\t\t// console.warn('crease and boundary rules');\n\n\t\t\t\tif ( n == 2 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( '2 connecting edges', connectingEdges );\n\t\t\t\t\tsourceVertexWeight = 3 / 4;\n\t\t\t\t\tconnectingVertexWeight = 1 / 8;\n\n\t\t\t\t\t// sourceVertexWeight = 1;\n\t\t\t\t\t// connectingVertexWeight = 0;\n\n\t\t\t\t} else if ( n == 1 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( 'only 1 connecting edge' );\n\n\t\t\t\t} else if ( n == 0 ) {\n\n\t\t\t\t\tif ( WARNINGS ) console.warn( '0 connecting edges' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewSourceVertex = oldVertex.clone().multiplyScalar( sourceVertexWeight );\n\n\t\t\ttmp.set( 0, 0, 0 );\n\n\t\t\tfor ( j = 0; j < n; j ++ ) {\n\n\t\t\t\tconnectingEdge = connectingEdges[ j ];\n\t\t\t\tother = connectingEdge.a !== oldVertex ? connectingEdge.a : connectingEdge.b;\n\t\t\t\ttmp.add( other );\n\n\t\t\t}\n\n\t\t\ttmp.multiplyScalar( connectingVertexWeight );\n\t\t\tnewSourceVertex.add( tmp );\n\n\t\t\tnewSourceVertices.push( newSourceVertex );\n\n\t\t}\n\n\n\t\t/******************************************************\n\t\t *\n\t\t *\tStep 3.\n\t\t *\tGenerate Faces between source vertices\n\t\t *\tand edge vertices.\n\t\t *\n\t\t *******************************************************/\n\n\t\tnewVertices = newSourceVertices.concat( newEdgeVertices );\n\t\tvar sl = newSourceVertices.length, edge1, edge2, edge3;\n\t\tnewFaces = [];\n\n\t\tvar uv, x0, x1, x2;\n\t\tvar x3 = new THREE.Vector2();\n\t\tvar x4 = new THREE.Vector2();\n\t\tvar x5 = new THREE.Vector2();\n\n\t\tfor ( i = 0, il = oldFaces.length; i < il; i ++ ) {\n\n\t\t\tface = oldFaces[ i ];\n\n\t\t\t// find the 3 new edges vertex of each old face\n\n\t\t\tedge1 = getEdge( face.a, face.b, sourceEdges ).newEdge + sl;\n\t\t\tedge2 = getEdge( face.b, face.c, sourceEdges ).newEdge + sl;\n\t\t\tedge3 = getEdge( face.c, face.a, sourceEdges ).newEdge + sl;\n\n\t\t\t// create 4 faces.\n\n\t\t\tnewFace( newFaces, edge1, edge2, edge3 );\n\t\t\tnewFace( newFaces, face.a, edge1, edge3 );\n\t\t\tnewFace( newFaces, face.b, edge2, edge1 );\n\t\t\tnewFace( newFaces, face.c, edge3, edge2 );\n\n\t\t\t// create 4 new uv's\n\n\t\t\tif ( hasUvs ) {\n\n\t\t\t\tuv = oldUvs[ i ];\n\n\t\t\t\tx0 = uv[ 0 ];\n\t\t\t\tx1 = uv[ 1 ];\n\t\t\t\tx2 = uv[ 2 ];\n\n\t\t\t\tx3.set( midpoint( x0.x, x1.x ), midpoint( x0.y, x1.y ) );\n\t\t\t\tx4.set( midpoint( x1.x, x2.x ), midpoint( x1.y, x2.y ) );\n\t\t\t\tx5.set( midpoint( x0.x, x2.x ), midpoint( x0.y, x2.y ) );\n\n\t\t\t\tnewUv( newUVs, x3, x4, x5 );\n\t\t\t\tnewUv( newUVs, x0, x3, x5 );\n\n\t\t\t\tnewUv( newUVs, x1, x4, x3 );\n\t\t\t\tnewUv( newUVs, x2, x5, x4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Overwrite old arrays\n\t\tgeometry.vertices = newVertices;\n\t\tgeometry.faces = newFaces;\n\t\tif ( hasUvs ) geometry.faceVertexUvs[ 0 ] = newUVs;\n\n\t\t// console.log('done');\n\n\t};\n\n} )();\n"
			}],
		"817A9E70-F25D-467D-A1B9-F6960AE9B2CF": [
			{
				"name": "cannon.min.js",
				"source": "/*\n * Copyright (c) 2015 cannon.js Authors\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use, copy,\n * modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&false)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CANNON=e()}}(function(){return function e(f,n,o){function d(t,l){if(!n[t]){if(!f[t]){var u=\"function\"==typeof require&&require;if(!l&&u)return u(t,!0);if(i)return i(t,!0);throw new Error(\"Cannot find module '\"+t+\"'\")}var p=n[t]={exports:{}};f[t][0].call(p.exports,function(e){var n=f[t][1][e];return d(n?n:e)},p,p.exports,e,f,n,o)}return n[t].exports}for(var i=\"function\"==typeof require&&require,t=0;t<o.length;t++)d(o[t]);return d}({1:[function(e,f){f.exports={name:\"cannon\",version:\"0.6.2\",description:\"A lightweight 3D physics engine written in JavaScript.\",homepage:\"https://github.com/schteppe/cannon.js\",author:\"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)\",keywords:[\"cannon.js\",\"cannon\",\"physics\",\"engine\",\"3d\"],main:\"./build/cannon.js\",engines:{node:\"*\"},repository:{type:\"git\",url:\"https://github.com/schteppe/cannon.js.git\"},bugs:{url:\"https://github.com/schteppe/cannon.js/issues\"},licenses:[{type:\"MIT\"}],devDependencies:{jshint:\"latest\",\"uglify-js\":\"latest\",nodeunit:\"^0.9.0\",grunt:\"~0.4.0\",\"grunt-contrib-jshint\":\"~0.1.1\",\"grunt-contrib-nodeunit\":\"^0.4.1\",\"grunt-contrib-concat\":\"~0.1.3\",\"grunt-contrib-uglify\":\"^0.5.1\",\"grunt-browserify\":\"^2.1.4\",\"grunt-contrib-yuidoc\":\"^0.5.2\",browserify:\"*\"},dependencies:{}}},{}],2:[function(e,f){f.exports={version:e(\"../package.json\").version,AABB:e(\"./collision/AABB\"),ArrayCollisionMatrix:e(\"./collision/ArrayCollisionMatrix\"),Body:e(\"./objects/Body\"),Box:e(\"./shapes/Box\"),Broadphase:e(\"./collision/Broadphase\"),Constraint:e(\"./constraints/Constraint\"),ContactEquation:e(\"./equations/ContactEquation\"),Narrowphase:e(\"./world/Narrowphase\"),ConeTwistConstraint:e(\"./constraints/ConeTwistConstraint\"),ContactMaterial:e(\"./material/ContactMaterial\"),ConvexPolyhedron:e(\"./shapes/ConvexPolyhedron\"),Cylinder:e(\"./shapes/Cylinder\"),DistanceConstraint:e(\"./constraints/DistanceConstraint\"),Equation:e(\"./equations/Equation\"),EventTarget:e(\"./utils/EventTarget\"),FrictionEquation:e(\"./equations/FrictionEquation\"),GSSolver:e(\"./solver/GSSolver\"),GridBroadphase:e(\"./collision/GridBroadphase\"),Heightfield:e(\"./shapes/Heightfield\"),HingeConstraint:e(\"./constraints/HingeConstraint\"),LockConstraint:e(\"./constraints/LockConstraint\"),Mat3:e(\"./math/Mat3\"),Material:e(\"./material/Material\"),NaiveBroadphase:e(\"./collision/NaiveBroadphase\"),ObjectCollisionMatrix:e(\"./collision/ObjectCollisionMatrix\"),Pool:e(\"./utils/Pool\"),Particle:e(\"./shapes/Particle\"),Plane:e(\"./shapes/Plane\"),PointToPointConstraint:e(\"./constraints/PointToPointConstraint\"),Quaternion:e(\"./math/Quaternion\"),Ray:e(\"./collision/Ray\"),RaycastVehicle:e(\"./objects/RaycastVehicle\"),RaycastResult:e(\"./collision/RaycastResult\"),RigidVehicle:e(\"./objects/RigidVehicle\"),RotationalEquation:e(\"./equations/RotationalEquation\"),RotationalMotorEquation:e(\"./equations/RotationalMotorEquation\"),SAPBroadphase:e(\"./collision/SAPBroadphase\"),SPHSystem:e(\"./objects/SPHSystem\"),Shape:e(\"./shapes/Shape\"),Solver:e(\"./solver/Solver\"),Sphere:e(\"./shapes/Sphere\"),SplitSolver:e(\"./solver/SplitSolver\"),Spring:e(\"./objects/Spring\"),Trimesh:e(\"./shapes/Trimesh\"),Vec3:e(\"./math/Vec3\"),Vec3Pool:e(\"./utils/Vec3Pool\"),World:e(\"./world/World\")}},{\"../package.json\":1,\"./collision/AABB\":3,\"./collision/ArrayCollisionMatrix\":4,\"./collision/Broadphase\":5,\"./collision/GridBroadphase\":6,\"./collision/NaiveBroadphase\":7,\"./collision/ObjectCollisionMatrix\":8,\"./collision/Ray\":9,\"./collision/RaycastResult\":10,\"./collision/SAPBroadphase\":11,\"./constraints/ConeTwistConstraint\":12,\"./constraints/Constraint\":13,\"./constraints/DistanceConstraint\":14,\"./constraints/HingeConstraint\":15,\"./constraints/LockConstraint\":16,\"./constraints/PointToPointConstraint\":17,\"./equations/ContactEquation\":19,\"./equations/Equation\":20,\"./equations/FrictionEquation\":21,\"./equations/RotationalEquation\":22,\"./equations/RotationalMotorEquation\":23,\"./material/ContactMaterial\":24,\"./material/Material\":25,\"./math/Mat3\":27,\"./math/Quaternion\":28,\"./math/Vec3\":30,\"./objects/Body\":31,\"./objects/RaycastVehicle\":32,\"./objects/RigidVehicle\":33,\"./objects/SPHSystem\":34,\"./objects/Spring\":35,\"./shapes/Box\":37,\"./shapes/ConvexPolyhedron\":38,\"./shapes/Cylinder\":39,\"./shapes/Heightfield\":40,\"./shapes/Particle\":41,\"./shapes/Plane\":42,\"./shapes/Shape\":43,\"./shapes/Sphere\":44,\"./shapes/Trimesh\":45,\"./solver/GSSolver\":46,\"./solver/Solver\":47,\"./solver/SplitSolver\":48,\"./utils/EventTarget\":49,\"./utils/Pool\":51,\"./utils/Vec3Pool\":54,\"./world/Narrowphase\":55,\"./world/World\":56}],3:[function(e,f){function n(e){e=e||{},this.lowerBound=new o,e.lowerBound&&this.lowerBound.copy(e.lowerBound),this.upperBound=new o,e.upperBound&&this.upperBound.copy(e.upperBound)}{var o=e(\"../math/Vec3\");e(\"../utils/Utils\")}f.exports=n;var d=new o;n.prototype.setFromPoints=function(e,f,n,o){var i=this.lowerBound,t=this.upperBound,l=n;i.copy(e[0]),l&&l.vmult(i,i),t.copy(i);for(var u=1;u<e.length;u++){var p=e[u];l&&(l.vmult(p,d),p=d),p.x>t.x&&(t.x=p.x),p.x<i.x&&(i.x=p.x),p.y>t.y&&(t.y=p.y),p.y<i.y&&(i.y=p.y),p.z>t.z&&(t.z=p.z),p.z<i.z&&(i.z=p.z)}return f&&(f.vadd(i,i),f.vadd(t,t)),o&&(i.x-=o,i.y-=o,i.z-=o,t.x+=o,t.y+=o,t.z+=o),this},n.prototype.copy=function(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this},n.prototype.clone=function(){return(new n).copy(this)},n.prototype.extend=function(e){var f=e.lowerBound.x;this.lowerBound.x>f&&(this.lowerBound.x=f);var n=e.upperBound.x;this.upperBound.x<n&&(this.upperBound.x=n);var f=e.lowerBound.y;this.lowerBound.y>f&&(this.lowerBound.y=f);var n=e.upperBound.y;this.upperBound.y<n&&(this.upperBound.y=n);var f=e.lowerBound.z;this.lowerBound.z>f&&(this.lowerBound.z=f);var n=e.upperBound.z;this.upperBound.z<n&&(this.upperBound.z=n)},n.prototype.overlaps=function(e){var f=this.lowerBound,n=this.upperBound,o=e.lowerBound,d=e.upperBound;return(o.x<=n.x&&n.x<=d.x||f.x<=d.x&&d.x<=n.x)&&(o.y<=n.y&&n.y<=d.y||f.y<=d.y&&d.y<=n.y)&&(o.z<=n.z&&n.z<=d.z||f.z<=d.z&&d.z<=n.z)},n.prototype.contains=function(e){var f=this.lowerBound,n=this.upperBound,o=e.lowerBound,d=e.upperBound;return f.x<=o.x&&n.x>=d.x&&f.y<=o.y&&n.y>=d.y&&f.z<=o.z&&n.z>=d.z},n.prototype.getCorners=function(e,f,n,o,d,i,t,l){var u=this.lowerBound,p=this.upperBound;e.copy(u),f.set(p.x,u.y,u.z),n.set(p.x,p.y,u.z),o.set(u.x,p.y,p.z),d.set(p.x,u.y,u.z),i.set(u.x,p.y,u.z),t.set(u.x,u.y,p.z),l.copy(p)};var i=[new o,new o,new o,new o,new o,new o,new o,new o];n.prototype.toLocalFrame=function(e,f){var n=i,o=n[0],d=n[1],t=n[2],l=n[3],u=n[4],p=n[5],s=n[6],y=n[7];this.getCorners(o,d,t,l,u,p,s,y);for(var c=0;8!==c;c++){var a=n[c];e.pointToLocal(a,a)}return f.setFromPoints(n)},n.prototype.toWorldFrame=function(e,f){var n=i,o=n[0],d=n[1],t=n[2],l=n[3],u=n[4],p=n[5],s=n[6],y=n[7];this.getCorners(o,d,t,l,u,p,s,y);for(var c=0;8!==c;c++){var a=n[c];e.pointToWorld(a,a)}return f.setFromPoints(n)}},{\"../math/Vec3\":30,\"../utils/Utils\":53}],4:[function(e,f){function n(){this.matrix=[]}f.exports=n,n.prototype.get=function(e,f){if(e=e.index,f=f.index,f>e){var n=f;f=e,e=n}return this.matrix[(e*(e+1)>>1)+f-1]},n.prototype.set=function(e,f,n){if(e=e.index,f=f.index,f>e){var o=f;f=e,e=o}this.matrix[(e*(e+1)>>1)+f-1]=n?1:0},n.prototype.reset=function(){for(var e=0,f=this.matrix.length;e!==f;e++)this.matrix[e]=0},n.prototype.setNumObjects=function(e){this.matrix.length=e*(e-1)>>1}},{}],5:[function(e,f){function n(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}{var o=e(\"../objects/Body\"),d=e(\"../math/Vec3\"),i=e(\"../math/Quaternion\");e(\"../shapes/Shape\"),e(\"../shapes/Plane\")}f.exports=n,n.prototype.collisionPairs=function(){throw new Error(\"collisionPairs not implemented for this BroadPhase class!\")};var t=o.STATIC|o.KINEMATIC;n.prototype.needBroadphaseCollision=function(e,f){return 0===(e.collisionFilterGroup&f.collisionFilterMask)||0===(f.collisionFilterGroup&e.collisionFilterMask)?!1:0===(e.type&t)&&e.sleepState!==o.SLEEPING||0===(f.type&t)&&f.sleepState!==o.SLEEPING?!0:!1},n.prototype.intersectionTest=function(e,f,n,o){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,f,n,o):this.doBoundingSphereBroadphase(e,f,n,o)};{var l=new d;new d,new i,new d}n.prototype.doBoundingSphereBroadphase=function(e,f,n,o){var d=l;f.position.vsub(e.position,d);var i=Math.pow(e.boundingRadius+f.boundingRadius,2),t=d.norm2();i>t&&(n.push(e),o.push(f))},n.prototype.doBoundingBoxBroadphase=function(e,f,n,o){e.aabbNeedsUpdate&&e.computeAABB(),f.aabbNeedsUpdate&&f.computeAABB(),e.aabb.overlaps(f.aabb)&&(n.push(e),o.push(f))};var u={keys:[]},p=[],s=[];n.prototype.makePairsUnique=function(e,f){for(var n=u,o=p,d=s,i=e.length,t=0;t!==i;t++)o[t]=e[t],d[t]=f[t];e.length=0,f.length=0;for(var t=0;t!==i;t++){var l=o[t].id,y=d[t].id,c=y>l?l+\",\"+y:y+\",\"+l;n[c]=t,n.keys.push(c)}for(var t=0;t!==n.keys.length;t++){var c=n.keys.pop(),a=n[c];e.push(o[a]),f.push(d[a]),delete n[c]}},n.prototype.setWorld=function(){};var y=new d;n.boundingSphereCheck=function(e,f){var n=y;return e.position.vsub(f.position,n),Math.pow(e.shape.boundingSphereRadius+f.shape.boundingSphereRadius,2)>n.norm2()},n.prototype.aabbQuery=function(){return console.warn(\".aabbQuery is not implemented in this Broadphase subclass.\"),[]}},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Plane\":42,\"../shapes/Shape\":43}],6:[function(e,f){function n(e,f,n,i,t){o.apply(this),this.nx=n||10,this.ny=i||10,this.nz=t||10,this.aabbMin=e||new d(100,100,100),this.aabbMax=f||new d(-100,-100,-100);var l=this.nx*this.ny*this.nz;if(0>=l)throw\"GridBroadphase: Each dimension's n must be >0\";this.bins=[],this.binLengths=[],this.bins.length=l,this.binLengths.length=l;for(var u=0;l>u;u++)this.bins[u]=[],this.binLengths[u]=0}f.exports=n;var o=e(\"./Broadphase\"),d=e(\"../math/Vec3\"),i=e(\"../shapes/Shape\");n.prototype=new o,n.prototype.constructor=n;{var t=new d;new d}n.prototype.collisionPairs=function(e,f,n){function o(e,f,n,o,d,i,t){var l=(e-g)*v|0,u=(f-x)*A|0,p=(n-j)*C|0,b=I((o-g)*v),m=I((d-x)*A),N=I((i-j)*C);0>l?l=0:l>=s&&(l=s-1),0>u?u=0:u>=y&&(u=y-1),0>p?p=0:p>=c&&(p=c-1),0>b?b=0:b>=s&&(b=s-1),0>m?m=0:m>=y&&(m=y-1),0>N?N=0:N>=c&&(N=c-1),l*=a,u*=r,p*=w,b*=a,m*=r,N*=w;for(var O=l;b>=O;O+=a)for(var h=u;m>=h;h+=r)for(var k=p;N>=k;k+=w){var q=O+h+k;E[q][F[q]++]=t}}for(var d=e.numObjects(),l=e.bodies,u=this.aabbMax,p=this.aabbMin,s=this.nx,y=this.ny,c=this.nz,a=y*c,r=c,w=1,b=u.x,m=u.y,N=u.z,g=p.x,x=p.y,j=p.z,v=s/(b-g),A=y/(m-x),C=c/(N-j),O=(b-g)/s,h=(m-x)/y,k=(N-j)/c,q=.5*Math.sqrt(O*O+h*h+k*k),z=i.types,B=z.SPHERE,D=z.PLANE,E=(z.BOX,z.COMPOUND,z.CONVEXPOLYHEDRON,this.bins),F=this.binLengths,G=this.bins.length,H=0;H!==G;H++)F[H]=0;for(var I=Math.ceil,p=Math.min,u=Math.max,H=0;H!==d;H++){var J=l[H],K=J.shape;switch(K.type){case B:var L=J.position.x,M=J.position.y,P=J.position.z,Q=K.radius;o(L-Q,M-Q,P-Q,L+Q,M+Q,P+Q,J);break;case D:K.worldNormalNeedsUpdate&&K.computeWorldNormal(J.quaternion);var R=K.worldNormal,S=g+.5*O-J.position.x,T=x+.5*h-J.position.y,U=j+.5*k-J.position.z,V=t;V.set(S,T,U);for(var W=0,X=0;W!==s;W++,X+=a,V.y=T,V.x+=O)for(var Y=0,Z=0;Y!==y;Y++,Z+=r,V.z=U,V.y+=h)for(var $=0,_=0;$!==c;$++,_+=w,V.z+=k)if(V.dot(R)<q){var ef=X+Z+_;E[ef][F[ef]++]=J}break;default:J.aabbNeedsUpdate&&J.computeAABB(),o(J.aabb.lowerBound.x,J.aabb.lowerBound.y,J.aabb.lowerBound.z,J.aabb.upperBound.x,J.aabb.upperBound.y,J.aabb.upperBound.z,J)}}for(var H=0;H!==G;H++){var ff=F[H];if(ff>1)for(var nf=E[H],W=0;W!==ff;W++)for(var J=nf[W],Y=0;Y!==W;Y++){var of=nf[Y];this.needBroadphaseCollision(J,of)&&this.intersectionTest(J,of,f,n)}}this.makePairsUnique(f,n)}},{\"../math/Vec3\":30,\"../shapes/Shape\":43,\"./Broadphase\":5}],7:[function(e,f){function n(){o.apply(this)}f.exports=n;var o=e(\"./Broadphase\"),d=e(\"./AABB\");n.prototype=new o,n.prototype.constructor=n,n.prototype.collisionPairs=function(e,f,n){var o,d,i,t,l=e.bodies,u=l.length;for(o=0;o!==u;o++)for(d=0;d!==o;d++)i=l[o],t=l[d],this.needBroadphaseCollision(i,t)&&this.intersectionTest(i,t,f,n)};new d;n.prototype.aabbQuery=function(e,f,n){n=n||[];for(var o=0;o<e.bodies.length;o++){var d=e.bodies[o];d.aabbNeedsUpdate&&d.computeAABB(),d.aabb.overlaps(f)&&n.push(d)}return n}},{\"./AABB\":3,\"./Broadphase\":5}],8:[function(e,f){function n(){this.matrix={}}f.exports=n,n.prototype.get=function(e,f){if(e=e.id,f=f.id,f>e){var n=f;f=e,e=n}return e+\"-\"+f in this.matrix},n.prototype.set=function(e,f,n){if(e=e.id,f=f.id,f>e){var o=f;f=e,e=o}n?this.matrix[e+\"-\"+f]=!0:delete this.matrix[e+\"-\"+f]},n.prototype.reset=function(){this.matrix={}},n.prototype.setNumObjects=function(){}},{}],9:[function(e,f){function n(e,f){this.from=e?e.clone():new i,this.to=f?f.clone():new i,this._direction=new i,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=n.ANY,this.result=new u,this.hasHit=!1,this.callback=function(){}}function o(e,f,n,o){o.vsub(f,G),n.vsub(f,a),e.vsub(f,r);var d,i,t=G.dot(G),l=G.dot(a),u=G.dot(r),p=a.dot(a),s=a.dot(r);return(d=p*u-l*s)>=0&&(i=t*s-l*u)>=0&&t*p-l*l>d+i}function d(e,f,n){n.vsub(e,G);var o=G.dot(f);f.mult(o,H),H.vadd(e,H);var d=n.distanceTo(H);return d}f.exports=n;var i=e(\"../math/Vec3\"),t=e(\"../math/Quaternion\"),l=e(\"../math/Transform\"),u=(e(\"../shapes/ConvexPolyhedron\"),e(\"../shapes/Box\"),e(\"../collision/RaycastResult\")),p=e(\"../shapes/Shape\"),s=e(\"../collision/AABB\");n.prototype.constructor=n,n.CLOSEST=1,n.ANY=2,n.ALL=4;var y=new s,c=[];n.prototype.intersectWorld=function(e,f){return this.mode=f.mode||n.ANY,this.result=f.result||new u,this.skipBackfaces=!!f.skipBackfaces,this.collisionFilterMask=\"undefined\"!=typeof f.collisionFilterMask?f.collisionFilterMask:-1,this.collisionFilterGroup=\"undefined\"!=typeof f.collisionFilterGroup?f.collisionFilterGroup:-1,f.from&&this.from.copy(f.from),f.to&&this.to.copy(f.to),this.callback=f.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(y),c.length=0,e.broadphase.aabbQuery(e,y,c),this.intersectBodies(c),this.hasHit};var a=new i,r=new i;n.pointInTriangle=o;var w=new i,b=new t;n.prototype.intersectBody=function(e,f){f&&(this.result=f,this._updateDirection());var n=this.checkCollisionResponse;if((!n||e.collisionResponse)&&0!==(this.collisionFilterGroup&e.collisionFilterMask)&&0!==(e.collisionFilterGroup&this.collisionFilterMask))for(var o=w,d=b,i=0,t=e.shapes.length;t>i;i++){var l=e.shapes[i];if((!n||l.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[i],d),e.quaternion.vmult(e.shapeOffsets[i],o),o.vadd(e.position,o),this.intersectShape(l,d,o,e),this.result._shouldStop))break}},n.prototype.intersectBodies=function(e,f){f&&(this.result=f,this._updateDirection());for(var n=0,o=e.length;!this.result._shouldStop&&o>n;n++)this.intersectBody(e[n])},n.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},n.prototype.intersectShape=function(e,f,n,o){var i=this.from,t=d(i,this._direction,n);if(!(t>e.boundingSphereRadius)){var l=this[e.type];l&&l.call(this,e,f,n,o)}};{var m=(new i,new i,new i),N=new i,g=new i,x=new i;new i,new u}n.prototype.intersectBox=function(e,f,n,o){return this.intersectConvex(e.convexPolyhedronRepresentation,f,n,o)},n.prototype[p.types.BOX]=n.prototype.intersectBox,n.prototype.intersectPlane=function(e,f,n,o){var d=this.from,t=this.to,l=this._direction,u=new i(0,0,1);f.vmult(u,u);var p=new i;d.vsub(n,p);var s=p.dot(u);t.vsub(n,p);var y=p.dot(u);if(!(s*y>0||d.distanceTo(t)<s)){var c=u.dot(l);if(!(Math.abs(c)<this.precision)){var a=new i,r=new i,w=new i;d.vsub(n,a);var b=-u.dot(a)/c;l.scale(b,r),d.vadd(r,w),this.reportIntersection(u,w,e,o,-1)}}},n.prototype[p.types.PLANE]=n.prototype.intersectPlane,n.prototype.getAABB=function(e){var f=this.to,n=this.from;e.lowerBound.x=Math.min(f.x,n.x),e.lowerBound.y=Math.min(f.y,n.y),e.lowerBound.z=Math.min(f.z,n.z),e.upperBound.x=Math.max(f.x,n.x),e.upperBound.y=Math.max(f.y,n.y),e.upperBound.z=Math.max(f.z,n.z)};var j={faceList:[0]};n.prototype.intersectHeightfield=function(e,f,o,d){var t=(e.data,e.elementSize,new i),u=new n(this.from,this.to);l.pointToLocalFrame(o,f,u.from,u.from),l.pointToLocalFrame(o,f,u.to,u.to);var p=[],s=null,y=null,c=null,a=null,r=e.getIndexOfPosition(u.from.x,u.from.y,p,!1);if(r&&(s=p[0],y=p[1],c=p[0],a=p[1]),r=e.getIndexOfPosition(u.to.x,u.to.y,p,!1),r&&((null===s||p[0]<s)&&(s=p[0]),(null===c||p[0]>c)&&(c=p[0]),(null===y||p[1]<y)&&(y=p[1]),(null===a||p[1]>a)&&(a=p[1])),null!==s){var w=[];e.getRectMinMax(s,y,c,a,w);for(var b=(w[0],w[1],s);c>=b;b++)for(var m=y;a>=m;m++){if(this.result._shouldStop)return;if(e.getConvexTrianglePillar(b,m,!1),l.pointToWorldFrame(o,f,e.pillarOffset,t),this.intersectConvex(e.pillarConvex,f,t,d,j),this.result._shouldStop)return;e.getConvexTrianglePillar(b,m,!0),l.pointToWorldFrame(o,f,e.pillarOffset,t),this.intersectConvex(e.pillarConvex,f,t,d,j)}}},n.prototype[p.types.HEIGHTFIELD]=n.prototype.intersectHeightfield;var v=new i,A=new i;n.prototype.intersectSphere=function(e,f,n,o){var d=this.from,i=this.to,t=e.radius,l=Math.pow(i.x-d.x,2)+Math.pow(i.y-d.y,2)+Math.pow(i.z-d.z,2),u=2*((i.x-d.x)*(d.x-n.x)+(i.y-d.y)*(d.y-n.y)+(i.z-d.z)*(d.z-n.z)),p=Math.pow(d.x-n.x,2)+Math.pow(d.y-n.y,2)+Math.pow(d.z-n.z,2)-Math.pow(t,2),s=Math.pow(u,2)-4*l*p,y=v,c=A;if(!(0>s))if(0===s)d.lerp(i,s,y),y.vsub(n,c),c.normalize(),this.reportIntersection(c,y,e,o,-1);else{var a=(-u-Math.sqrt(s))/(2*l),r=(-u+Math.sqrt(s))/(2*l);if(a>=0&&1>=a&&(d.lerp(i,a,y),y.vsub(n,c),c.normalize(),this.reportIntersection(c,y,e,o,-1)),this.result._shouldStop)return;r>=0&&1>=r&&(d.lerp(i,r,y),y.vsub(n,c),c.normalize(),this.reportIntersection(c,y,e,o,-1))}},n.prototype[p.types.SPHERE]=n.prototype.intersectSphere;var C=new i,O=(new i,new i,new i);n.prototype.intersectConvex=function(e,f,n,d,i){for(var t=C,l=O,u=i&&i.faceList||null,p=e.faces,s=e.vertices,y=e.faceNormals,c=this._direction,a=this.from,r=this.to,w=a.distanceTo(r),b=u?u.length:p.length,j=this.result,v=0;!j._shouldStop&&b>v;v++){var A=u?u[v]:v,h=p[A],k=y[A],q=f,z=n;l.copy(s[h[0]]),q.vmult(l,l),l.vadd(z,l),l.vsub(a,l),q.vmult(k,t);var B=c.dot(t);if(!(Math.abs(B)<this.precision)){var D=t.dot(l)/B;if(!(0>D)){c.mult(D,m),m.vadd(a,m),N.copy(s[h[0]]),q.vmult(N,N),z.vadd(N,N);for(var E=1;!j._shouldStop&&E<h.length-1;E++){g.copy(s[h[E]]),x.copy(s[h[E+1]]),q.vmult(g,g),q.vmult(x,x),z.vadd(g,g),z.vadd(x,x);var F=m.distanceTo(a);!o(m,N,g,x)&&!o(m,g,N,x)||F>w||this.reportIntersection(t,m,e,d,A)}}}}},n.prototype[p.types.CONVEXPOLYHEDRON]=n.prototype.intersectConvex;var h=new i,k=new i,q=new i,z=new i,B=new i,D=new i,E=(new s,[]),F=new l;n.prototype.intersectTrimesh=function(e,f,n,d,i){var t=h,u=E,p=F,s=O,y=k,c=q,a=z,r=D,w=B,b=(i&&i.faceList||null,e.indices),j=(e.vertices,e.faceNormals,this.from),v=this.to,A=this._direction;p.position.copy(n),p.quaternion.copy(f),l.vectorToLocalFrame(n,f,A,y),l.pointToLocalFrame(n,f,j,c),l.pointToLocalFrame(n,f,v,a);var C=c.distanceSquared(a);e.tree.rayQuery(this,p,u);for(var G=0,H=u.length;!this.result._shouldStop&&G!==H;G++){var I=u[G];e.getNormal(I,t),e.getVertex(b[3*I],N),N.vsub(c,s);var J=y.dot(t),K=t.dot(s)/J;if(!(0>K)){y.scale(K,m),m.vadd(c,m),e.getVertex(b[3*I+1],g),e.getVertex(b[3*I+2],x);var L=m.distanceSquared(c);!o(m,g,N,x)&&!o(m,N,g,x)||L>C||(l.vectorToWorldFrame(f,t,w),l.pointToWorldFrame(n,f,m,r),this.reportIntersection(w,r,e,d,I))}}u.length=0},n.prototype[p.types.TRIMESH]=n.prototype.intersectTrimesh,n.prototype.reportIntersection=function(e,f,o,d,i){var t=this.from,l=this.to,u=t.distanceTo(f),p=this.result;if(!(this.skipBackfaces&&e.dot(this._direction)>0))switch(p.hitFaceIndex=\"undefined\"!=typeof i?i:-1,this.mode){case n.ALL:this.hasHit=!0,p.set(t,l,e,f,o,d,u),p.hasHit=!0,this.callback(p);break;case n.CLOSEST:(u<p.distance||!p.hasHit)&&(this.hasHit=!0,p.hasHit=!0,p.set(t,l,e,f,o,d,u));break;case n.ANY:this.hasHit=!0,p.hasHit=!0,p.set(t,l,e,f,o,d,u),p._shouldStop=!0}};var G=new i,H=new i},{\"../collision/AABB\":3,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43}],10:[function(e,f){function n(){this.rayFromWorld=new o,this.rayToWorld=new o,this.hitNormalWorld=new o,this.hitPointWorld=new o,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}var o=e(\"../math/Vec3\");f.exports=n,n.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},n.prototype.abort=function(){this._shouldStop=!0},n.prototype.set=function(e,f,n,o,d,i,t){this.rayFromWorld.copy(e),this.rayToWorld.copy(f),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(o),this.shape=d,this.body=i,this.distance=t}},{\"../math/Vec3\":30}],11:[function(e,f){function n(e){o.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var f=this.axisList;this._addBodyHandler=function(e){f.push(e.body)},this._removeBodyHandler=function(e){var n=f.indexOf(e.body);-1!==n&&f.splice(n,1)},e&&this.setWorld(e)}var o=(e(\"../shapes/Shape\"),e(\"../collision/Broadphase\"));f.exports=n,n.prototype=new o,n.prototype.setWorld=function(e){this.axisList.length=0;for(var f=0;f<e.bodies.length;f++)this.axisList.push(e.bodies[f]);e.removeEventListener(\"addBody\",this._addBodyHandler),e.removeEventListener(\"removeBody\",this._removeBodyHandler),e.addEventListener(\"addBody\",this._addBodyHandler),e.addEventListener(\"removeBody\",this._removeBodyHandler),this.world=e,this.dirty=!0},n.insertionSortX=function(e){for(var f=1,n=e.length;n>f;f++){for(var o=e[f],d=f-1;d>=0&&!(e[d].aabb.lowerBound.x<=o.aabb.lowerBound.x);d--)e[d+1]=e[d];e[d+1]=o}return e},n.insertionSortY=function(e){for(var f=1,n=e.length;n>f;f++){for(var o=e[f],d=f-1;d>=0&&!(e[d].aabb.lowerBound.y<=o.aabb.lowerBound.y);d--)e[d+1]=e[d];e[d+1]=o}return e},n.insertionSortZ=function(e){for(var f=1,n=e.length;n>f;f++){for(var o=e[f],d=f-1;d>=0&&!(e[d].aabb.lowerBound.z<=o.aabb.lowerBound.z);d--)e[d+1]=e[d];e[d+1]=o}return e},n.prototype.collisionPairs=function(e,f,o){var d,i,t=this.axisList,l=t.length,u=this.axisIndex;for(this.dirty&&(this.sortList(),this.dirty=!1),d=0;d!==l;d++){var p=t[d];for(i=d+1;l>i;i++){var s=t[i];if(this.needBroadphaseCollision(p,s)){if(!n.checkBounds(p,s,u))break;this.intersectionTest(p,s,f,o)}}}},n.prototype.sortList=function(){for(var e=this.axisList,f=this.axisIndex,o=e.length,d=0;d!==o;d++){var i=e[d];i.aabbNeedsUpdate&&i.computeAABB()}0===f?n.insertionSortX(e):1===f?n.insertionSortY(e):2===f&&n.insertionSortZ(e)},n.checkBounds=function(e,f,n){var o,d;0===n?(o=e.position.x,d=f.position.x):1===n?(o=e.position.y,d=f.position.y):2===n&&(o=e.position.z,d=f.position.z);var i=e.boundingRadius,t=f.boundingRadius,l=o+i,u=d-t;return l>u},n.prototype.autoDetectAxis=function(){for(var e=0,f=0,n=0,o=0,d=0,i=0,t=this.axisList,l=t.length,u=1/l,p=0;p!==l;p++){var s=t[p],y=s.position.x;e+=y,f+=y*y;var c=s.position.y;n+=c,o+=c*c;var a=s.position.z;d+=a,i+=a*a}var r=f-e*e*u,w=o-n*n*u,b=i-d*d*u;this.axisIndex=r>w?r>b?0:2:w>b?1:2},n.prototype.aabbQuery=function(e,f,n){n=n||[],this.dirty&&(this.sortList(),this.dirty=!1);var o=this.axisIndex,d=\"x\";1===o&&(d=\"y\"),2===o&&(d=\"z\");for(var i=this.axisList,t=(f.lowerBound[d],f.upperBound[d],0);t<i.length;t++){var l=i[t];l.aabbNeedsUpdate&&l.computeAABB(),l.aabb.overlaps(f)&&n.push(l)}return n}},{\"../collision/Broadphase\":5,\"../shapes/Shape\":43}],12:[function(e,f){function n(e,f,n){n=n||{};var l=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6,u=n.pivotA?n.pivotA.clone():new t,p=n.pivotB?n.pivotB.clone():new t;this.axisA=n.axisA?n.axisA.clone():new t,this.axisB=n.axisB?n.axisB.clone():new t,o.call(this,e,u,f,p,l),this.collideConnected=!!n.collideConnected,this.angle=\"undefined\"!=typeof n.angle?n.angle:0;var s=this.coneEquation=new d(e,f,n),y=this.twistEquation=new i(e,f,n);this.twistAngle=\"undefined\"!=typeof n.twistAngle?n.twistAngle:0,s.maxForce=0,s.minForce=-l,y.maxForce=0,y.minForce=-l,this.equations.push(s,y)}f.exports=n;var o=(e(\"./Constraint\"),e(\"./PointToPointConstraint\")),d=e(\"../equations/ConeEquation\"),i=e(\"../equations/RotationalEquation\"),t=(e(\"../equations/ContactEquation\"),e(\"../math/Vec3\"));n.prototype=new o,n.constructor=n;new t,new t;n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.coneEquation,d=this.twistEquation;o.prototype.update.call(this),e.vectorToWorldFrame(this.axisA,n.axisA),f.vectorToWorldFrame(this.axisB,n.axisB),this.axisA.tangents(d.axisA,d.axisA),e.vectorToWorldFrame(d.axisA,d.axisA),this.axisB.tangents(d.axisB,d.axisB),f.vectorToWorldFrame(d.axisB,d.axisB),n.angle=this.angle,d.maxAngle=this.twistAngle}},{\"../equations/ConeEquation\":18,\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],13:[function(e,f){function n(e,f,d){d=o.defaults(d,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=f,this.id=n.idCounter++,this.collideConnected=d.collideConnected,d.wakeUpBodies&&(e&&e.wakeUp(),f&&f.wakeUp())}f.exports=n;var o=e(\"../utils/Utils\");n.prototype.update=function(){throw new Error(\"method update() not implmemented in this Constraint subclass!\")},n.prototype.enable=function(){for(var e=this.equations,f=0;f<e.length;f++)e[f].enabled=!0},n.prototype.disable=function(){for(var e=this.equations,f=0;f<e.length;f++)e[f].enabled=!1},n.idCounter=0},{\"../utils/Utils\":53}],14:[function(e,f){function n(e,f,n,i){o.call(this,e,f),\"undefined\"==typeof n&&(n=e.position.distanceTo(f.position)),\"undefined\"==typeof i&&(i=1e6),this.distance=n;var t=this.distanceEquation=new d(e,f);this.equations.push(t),t.minForce=-i,t.maxForce=i}f.exports=n;var o=e(\"./Constraint\"),d=e(\"../equations/ContactEquation\");n.prototype=new o,n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.distanceEquation,o=.5*this.distance,d=n.ni;f.position.vsub(e.position,d),d.normalize(),d.mult(o,n.ri),d.mult(-o,n.rj)}},{\"../equations/ContactEquation\":19,\"./Constraint\":13}],15:[function(e,f){function n(e,f,n){n=n||{};var l=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6,u=n.pivotA?n.pivotA.clone():new t,p=n.pivotB?n.pivotB.clone():new t;o.call(this,e,u,f,p,l);var s=this.axisA=n.axisA?n.axisA.clone():new t(1,0,0);s.normalize();var y=this.axisB=n.axisB?n.axisB.clone():new t(1,0,0);y.normalize();var c=this.rotationalEquation1=new d(e,f,n),a=this.rotationalEquation2=new d(e,f,n),r=this.motorEquation=new i(e,f,l);r.enabled=!1,this.equations.push(c,a,r)}f.exports=n;var o=(e(\"./Constraint\"),e(\"./PointToPointConstraint\")),d=e(\"../equations/RotationalEquation\"),i=e(\"../equations/RotationalMotorEquation\"),t=(e(\"../equations/ContactEquation\"),e(\"../math/Vec3\"));n.prototype=new o,n.constructor=n,n.prototype.enableMotor=function(){this.motorEquation.enabled=!0},n.prototype.disableMotor=function(){this.motorEquation.enabled=!1},n.prototype.setMotorSpeed=function(e){this.motorEquation.targetVelocity=e},n.prototype.setMotorMaxForce=function(e){this.motorEquation.maxForce=e,this.motorEquation.minForce=-e};var l=new t,u=new t;n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.motorEquation,d=this.rotationalEquation1,i=this.rotationalEquation2,t=l,p=u,s=this.axisA,y=this.axisB;o.prototype.update.call(this),e.quaternion.vmult(s,t),f.quaternion.vmult(y,p),t.tangents(d.axisA,i.axisA),d.axisB.copy(p),i.axisB.copy(p),this.motorEquation.enabled&&(e.quaternion.vmult(this.axisA,n.axisA),f.quaternion.vmult(this.axisB,n.axisB))}},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],16:[function(e,f){function n(e,f,n){n=n||{};var t=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6,l=new i,u=new i,p=new i;e.position.vadd(f.position,p),p.scale(.5,p),f.pointToLocalFrame(p,u),e.pointToLocalFrame(p,l),o.call(this,e,l,f,u,t);var s=this.rotationalEquation1=new d(e,f,n),y=this.rotationalEquation2=new d(e,f,n),c=this.rotationalEquation3=new d(e,f,n);this.equations.push(s,y,c)}f.exports=n;var o=(e(\"./Constraint\"),e(\"./PointToPointConstraint\")),d=e(\"../equations/RotationalEquation\"),i=(e(\"../equations/RotationalMotorEquation\"),e(\"../equations/ContactEquation\"),e(\"../math/Vec3\"));n.prototype=new o,n.constructor=n;new i,new i;n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=(this.motorEquation,this.rotationalEquation1),d=this.rotationalEquation2,t=this.rotationalEquation3;o.prototype.update.call(this),e.vectorToWorldFrame(i.UNIT_X,n.axisA),f.vectorToWorldFrame(i.UNIT_Y,n.axisB),e.vectorToWorldFrame(i.UNIT_Y,d.axisA),f.vectorToWorldFrame(i.UNIT_Z,d.axisB),e.vectorToWorldFrame(i.UNIT_Z,t.axisA),f.vectorToWorldFrame(i.UNIT_X,t.axisB)}},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],17:[function(e,f){function n(e,f,n,t,l){o.call(this,e,n),l=\"undefined\"!=typeof l?l:1e6,this.pivotA=f?f.clone():new i,this.pivotB=t?t.clone():new i;var u=this.equationX=new d(e,n),p=this.equationY=new d(e,n),s=this.equationZ=new d(e,n);this.equations.push(u,p,s),u.minForce=p.minForce=s.minForce=-l,u.maxForce=p.maxForce=s.maxForce=l,u.ni.set(1,0,0),p.ni.set(0,1,0),s.ni.set(0,0,1)}f.exports=n;var o=e(\"./Constraint\"),d=e(\"../equations/ContactEquation\"),i=e(\"../math/Vec3\");n.prototype=new o,n.prototype.update=function(){var e=this.bodyA,f=this.bodyB,n=this.equationX,o=this.equationY,d=this.equationZ;e.quaternion.vmult(this.pivotA,n.ri),f.quaternion.vmult(this.pivotB,n.rj),o.ri.copy(n.ri),o.rj.copy(n.rj),d.ri.copy(n.ri),d.rj.copy(n.rj)}},{\"../equations/ContactEquation\":19,\"../math/Vec3\":30,\"./Constraint\":13}],18:[function(e,f){function n(e,f,n){n=n||{};var i=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6;d.call(this,e,f,-i,i),this.axisA=n.axisA?n.axisA.clone():new o(1,0,0),this.axisB=n.axisB?n.axisB.clone():new o(0,1,0),this.angle=\"undefined\"!=typeof n.angle?n.angle:0}f.exports=n;var o=e(\"../math/Vec3\"),d=(e(\"../math/Mat3\"),e(\"./Equation\"));n.prototype=new d,n.prototype.constructor=n;var i=new o,t=new o;n.prototype.computeB=function(e){var f=this.a,n=this.b,o=this.axisA,d=this.axisB,l=i,u=t,p=this.jacobianElementA,s=this.jacobianElementB;o.cross(d,l),d.cross(o,u),p.rotational.copy(u),s.rotational.copy(l);var y=Math.cos(this.angle)-o.dot(d),c=this.computeGW(),a=this.computeGiMf(),r=-y*f-c*n-e*a;return r}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],19:[function(e,f){function n(e,f,n){n=\"undefined\"!=typeof n?n:1e6,o.call(this,e,f,0,n),this.restitution=0,this.ri=new d,this.rj=new d,this.ni=new d}f.exports=n;{var o=e(\"./Equation\"),d=e(\"../math/Vec3\");e(\"../math/Mat3\")}n.prototype=new o,n.prototype.constructor=n;var i=new d,t=new d,l=new d;n.prototype.computeB=function(e){var f=this.a,n=this.b,o=this.bi,d=this.bj,u=this.ri,p=this.rj,s=i,y=t,c=o.velocity,a=o.angularVelocity,r=(o.force,o.torque,d.velocity),w=d.angularVelocity,b=(d.force,d.torque,l),m=this.jacobianElementA,N=this.jacobianElementB,g=this.ni;u.cross(g,s),p.cross(g,y),g.negate(m.spatial),s.negate(m.rotational),N.spatial.copy(g),N.rotational.copy(y),b.copy(d.position),b.vadd(p,b),b.vsub(o.position,b),b.vsub(u,b);var x=g.dot(b),j=this.restitution+1,v=j*r.dot(g)-j*c.dot(g)+w.dot(y)-a.dot(s),A=this.computeGiMf(),C=-x*f-v*n-e*A;return C};var u=new d,p=new d,s=new d,y=new d,c=new d;n.prototype.getImpactVelocityAlongNormal=function(){var e=u,f=p,n=s,o=y,d=c;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,o),this.bi.getVelocityAtWorldPoint(n,e),this.bj.getVelocityAtWorldPoint(o,f),e.vsub(f,d),this.ni.dot(d)}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],20:[function(e,f){function n(e,f,d,i){this.id=n.id++,this.minForce=\"undefined\"==typeof d?-1e6:d,this.maxForce=\"undefined\"==typeof i?1e6:i,this.bi=e,this.bj=f,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new o,this.jacobianElementB=new o,this.enabled=!0,this.setSpookParams(1e7,4,1/60)\n}f.exports=n;var o=e(\"../math/JacobianElement\"),d=e(\"../math/Vec3\");n.prototype.constructor=n,n.id=0,n.prototype.setSpookParams=function(e,f,n){var o=f,d=e,i=n;this.a=4/(i*(1+4*o)),this.b=4*o/(1+4*o),this.eps=4/(i*i*d*(1+4*o))},n.prototype.computeB=function(e,f,n){var o=this.computeGW(),d=this.computeGq(),i=this.computeGiMf();return-d*e-o*f-i*n},n.prototype.computeGq=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.position,i=o.position;return e.spatial.dot(d)+f.spatial.dot(i)};var i=new d;n.prototype.computeGW=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.velocity,t=o.velocity,l=n.angularVelocity||i,u=o.angularVelocity||i;return e.multiplyVectors(d,l)+f.multiplyVectors(t,u)},n.prototype.computeGWlambda=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.vlambda,t=o.vlambda,l=n.wlambda||i,u=o.wlambda||i;return e.multiplyVectors(d,l)+f.multiplyVectors(t,u)};var t=new d,l=new d,u=new d,p=new d;n.prototype.computeGiMf=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.force,i=n.torque,s=o.force,y=o.torque,c=n.invMassSolve,a=o.invMassSolve;return n.invInertiaWorldSolve?n.invInertiaWorldSolve.vmult(i,u):u.set(0,0,0),o.invInertiaWorldSolve?o.invInertiaWorldSolve.vmult(y,p):p.set(0,0,0),d.mult(c,t),s.mult(a,l),e.multiplyVectors(t,u)+f.multiplyVectors(l,p)};var s=new d;n.prototype.computeGiMGt=function(){var e=this.jacobianElementA,f=this.jacobianElementB,n=this.bi,o=this.bj,d=n.invMassSolve,i=o.invMassSolve,t=n.invInertiaWorldSolve,l=o.invInertiaWorldSolve,u=d+i;return t&&(t.vmult(e.rotational,s),u+=s.dot(e.rotational)),l&&(l.vmult(f.rotational,s),u+=s.dot(f.rotational)),u};{var y=new d;new d,new d,new d,new d,new d}n.prototype.addToWlambda=function(e){var f=this.jacobianElementA,n=this.jacobianElementB,o=this.bi,d=this.bj,i=y;f.spatial.mult(o.invMassSolve*e,i),o.vlambda.vadd(i,o.vlambda),n.spatial.mult(d.invMassSolve*e,i),d.vlambda.vadd(i,d.vlambda),o.invInertiaWorldSolve&&(o.invInertiaWorldSolve.vmult(f.rotational,i),i.mult(e,i),o.wlambda.vadd(i,o.wlambda)),d.invInertiaWorldSolve&&(d.invInertiaWorldSolve.vmult(n.rotational,i),i.mult(e,i),d.wlambda.vadd(i,d.wlambda))},n.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{\"../math/JacobianElement\":26,\"../math/Vec3\":30}],21:[function(e,f){function n(e,f,n){o.call(this,e,f,-n,n),this.ri=new d,this.rj=new d,this.t=new d}f.exports=n;{var o=e(\"./Equation\"),d=e(\"../math/Vec3\");e(\"../math/Mat3\")}n.prototype=new o,n.prototype.constructor=n;var i=new d,t=new d;n.prototype.computeB=function(e){var f=(this.a,this.b),n=(this.bi,this.bj,this.ri),o=this.rj,d=i,l=t,u=this.t;n.cross(u,d),o.cross(u,l);var p=this.jacobianElementA,s=this.jacobianElementB;u.negate(p.spatial),d.negate(p.rotational),s.spatial.copy(u),s.rotational.copy(l);var y=this.computeGW(),c=this.computeGiMf(),a=-y*f-e*c;return a}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],22:[function(e,f){function n(e,f,n){n=n||{};var i=\"undefined\"!=typeof n.maxForce?n.maxForce:1e6;d.call(this,e,f,-i,i),this.axisA=n.axisA?n.axisA.clone():new o(1,0,0),this.axisB=n.axisB?n.axisB.clone():new o(0,1,0),this.maxAngle=Math.PI/2}f.exports=n;var o=e(\"../math/Vec3\"),d=(e(\"../math/Mat3\"),e(\"./Equation\"));n.prototype=new d,n.prototype.constructor=n;var i=new o,t=new o;n.prototype.computeB=function(e){var f=this.a,n=this.b,o=this.axisA,d=this.axisB,l=i,u=t,p=this.jacobianElementA,s=this.jacobianElementB;o.cross(d,l),d.cross(o,u),p.rotational.copy(u),s.rotational.copy(l);var y=Math.cos(this.maxAngle)-o.dot(d),c=this.computeGW(),a=this.computeGiMf(),r=-y*f-c*n-e*a;return r}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],23:[function(e,f){function n(e,f,n){n=\"undefined\"!=typeof n?n:1e6,d.call(this,e,f,-n,n),this.axisA=new o,this.axisB=new o,this.targetVelocity=0}f.exports=n;var o=e(\"../math/Vec3\"),d=(e(\"../math/Mat3\"),e(\"./Equation\"));n.prototype=new d,n.prototype.constructor=n,n.prototype.computeB=function(e){var f=(this.a,this.b),n=(this.bi,this.bj,this.axisA),o=this.axisB,d=this.jacobianElementA,i=this.jacobianElementB;d.rotational.copy(n),o.negate(i.rotational);var t=this.computeGW()-this.targetVelocity,l=this.computeGiMf(),u=-t*f-e*l;return u}},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],24:[function(e,f){function n(e,f,d){d=o.defaults(d,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=n.idCounter++,this.materials=[e,f],this.friction=d.friction,this.restitution=d.restitution,this.contactEquationStiffness=d.contactEquationStiffness,this.contactEquationRelaxation=d.contactEquationRelaxation,this.frictionEquationStiffness=d.frictionEquationStiffness,this.frictionEquationRelaxation=d.frictionEquationRelaxation}var o=e(\"../utils/Utils\");f.exports=n,n.idCounter=0},{\"../utils/Utils\":53}],25:[function(e,f){function n(e){var f=\"\";e=e||{},\"string\"==typeof e?(f=e,e={}):\"object\"==typeof e&&(f=\"\"),this.name=f,this.id=n.idCounter++,this.friction=\"undefined\"!=typeof e.friction?e.friction:-1,this.restitution=\"undefined\"!=typeof e.restitution?e.restitution:-1}f.exports=n,n.idCounter=0},{}],26:[function(e,f){function n(){this.spatial=new o,this.rotational=new o}f.exports=n;var o=e(\"./Vec3\");n.prototype.multiplyElement=function(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)},n.prototype.multiplyVectors=function(e,f){return e.dot(this.spatial)+f.dot(this.rotational)}},{\"./Vec3\":30}],27:[function(e,f){function n(e){this.elements=e?e:[0,0,0,0,0,0,0,0,0]}f.exports=n;var o=e(\"./Vec3\");n.prototype.identity=function(){var e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1},n.prototype.setZero=function(){var e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0},n.prototype.setTrace=function(e){var f=this.elements;f[0]=e.x,f[4]=e.y,f[8]=e.z},n.prototype.getTrace=function(e){var e=e||new o,f=this.elements;e.x=f[0],e.y=f[4],e.z=f[8]},n.prototype.vmult=function(e,f){f=f||new o;var n=this.elements,d=e.x,i=e.y,t=e.z;return f.x=n[0]*d+n[1]*i+n[2]*t,f.y=n[3]*d+n[4]*i+n[5]*t,f.z=n[6]*d+n[7]*i+n[8]*t,f},n.prototype.smult=function(e){for(var f=0;f<this.elements.length;f++)this.elements[f]*=e},n.prototype.mmult=function(e,f){for(var o=f||new n,d=0;3>d;d++)for(var i=0;3>i;i++){for(var t=0,l=0;3>l;l++)t+=e.elements[d+3*l]*this.elements[l+3*i];o.elements[d+3*i]=t}return o},n.prototype.scale=function(e,f){f=f||new n;for(var o=this.elements,d=f.elements,i=0;3!==i;i++)d[3*i+0]=e.x*o[3*i+0],d[3*i+1]=e.y*o[3*i+1],d[3*i+2]=e.z*o[3*i+2];return f},n.prototype.solve=function(e,f){f=f||new o;for(var n=3,d=4,i=[],t=0;n*d>t;t++)i.push(0);var t,l;for(t=0;3>t;t++)for(l=0;3>l;l++)i[t+d*l]=this.elements[t+3*l];i[3]=e.x,i[7]=e.y,i[11]=e.z;var u,p,s=3,y=s,c=4;do{if(t=y-s,0===i[t+d*t])for(l=t+1;y>l;l++)if(0!==i[t+d*l]){u=c;do p=c-u,i[p+d*t]+=i[p+d*l];while(--u);break}if(0!==i[t+d*t])for(l=t+1;y>l;l++){var a=i[t+d*l]/i[t+d*t];u=c;do p=c-u,i[p+d*l]=t>=p?0:i[p+d*l]-i[p+d*t]*a;while(--u)}}while(--s);if(f.z=i[2*d+3]/i[2*d+2],f.y=(i[1*d+3]-i[1*d+2]*f.z)/i[1*d+1],f.x=(i[0*d+3]-i[0*d+2]*f.z-i[0*d+1]*f.y)/i[0*d+0],isNaN(f.x)||isNaN(f.y)||isNaN(f.z)||1/0===f.x||1/0===f.y||1/0===f.z)throw\"Could not solve equation! Got x=[\"+f.toString()+\"], b=[\"+e.toString()+\"], A=[\"+this.toString()+\"]\";return f},n.prototype.e=function(e,f,n){return void 0===n?this.elements[f+3*e]:void(this.elements[f+3*e]=n)},n.prototype.copy=function(e){for(var f=0;f<e.elements.length;f++)this.elements[f]=e.elements[f];return this},n.prototype.toString=function(){for(var e=\"\",f=\",\",n=0;9>n;n++)e+=this.elements[n]+f;return e},n.prototype.reverse=function(e){e=e||new n;for(var f=3,o=6,d=[],i=0;f*o>i;i++)d.push(0);var i,t;for(i=0;3>i;i++)for(t=0;3>t;t++)d[i+o*t]=this.elements[i+3*t];d[3]=1,d[9]=0,d[15]=0,d[4]=0,d[10]=1,d[16]=0,d[5]=0,d[11]=0,d[17]=1;var l,u,p=3,s=p,y=o;do{if(i=s-p,0===d[i+o*i])for(t=i+1;s>t;t++)if(0!==d[i+o*t]){l=y;do u=y-l,d[u+o*i]+=d[u+o*t];while(--l);break}if(0!==d[i+o*i])for(t=i+1;s>t;t++){var c=d[i+o*t]/d[i+o*i];l=y;do u=y-l,d[u+o*t]=i>=u?0:d[u+o*t]-d[u+o*i]*c;while(--l)}}while(--p);i=2;do{t=i-1;do{var c=d[i+o*t]/d[i+o*i];l=o;do u=o-l,d[u+o*t]=d[u+o*t]-d[u+o*i]*c;while(--l)}while(t--)}while(--i);i=2;do{var c=1/d[i+o*i];l=o;do u=o-l,d[u+o*i]=d[u+o*i]*c;while(--l)}while(i--);i=2;do{t=2;do{if(u=d[f+t+o*i],isNaN(u)||1/0===u)throw\"Could not reverse! A=[\"+this.toString()+\"]\";e.e(i,t,u)}while(t--)}while(i--);return e},n.prototype.setRotationFromQuaternion=function(e){var f=e.x,n=e.y,o=e.z,d=e.w,i=f+f,t=n+n,l=o+o,u=f*i,p=f*t,s=f*l,y=n*t,c=n*l,a=o*l,r=d*i,w=d*t,b=d*l,m=this.elements;return m[0]=1-(y+a),m[1]=p-b,m[2]=s+w,m[3]=p+b,m[4]=1-(u+a),m[5]=c-r,m[6]=s-w,m[7]=c+r,m[8]=1-(u+y),this},n.prototype.transpose=function(e){e=e||new n;for(var f=e.elements,o=this.elements,d=0;3!==d;d++)for(var i=0;3!==i;i++)f[3*d+i]=o[3*i+d];return e}},{\"./Vec3\":30}],28:[function(e,f){function n(e,f,n,o){this.x=void 0!==e?e:0,this.y=void 0!==f?f:0,this.z=void 0!==n?n:0,this.w=void 0!==o?o:1}f.exports=n;var o=e(\"./Vec3\");n.prototype.set=function(e,f,n,o){this.x=e,this.y=f,this.z=n,this.w=o},n.prototype.toString=function(){return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w},n.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},n.prototype.setFromAxisAngle=function(e,f){var n=Math.sin(.5*f);this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(.5*f)},n.prototype.toAxisAngle=function(e){e=e||new o,this.normalize();var f=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return.001>n?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/n,e.y=this.y/n,e.z=this.z/n),[e,f]};var d=new o,i=new o;n.prototype.setFromVectors=function(e,f){if(e.isAntiparallelTo(f)){var n=d,o=i;e.tangents(n,o),this.setFromAxisAngle(n,Math.PI)}else{var t=e.cross(f);this.x=t.x,this.y=t.y,this.z=t.z,this.w=Math.sqrt(Math.pow(e.norm(),2)*Math.pow(f.norm(),2))+e.dot(f),this.normalize()}};var t=new o,l=new o,u=new o;n.prototype.mult=function(e,f){f=f||new n;var o=this.w,d=t,i=l,p=u;return d.set(this.x,this.y,this.z),i.set(e.x,e.y,e.z),f.w=o*e.w-d.dot(i),d.cross(i,p),f.x=o*i.x+e.w*d.x+p.x,f.y=o*i.y+e.w*d.y+p.y,f.z=o*i.z+e.w*d.z+p.z,f},n.prototype.inverse=function(e){var f=this.x,o=this.y,d=this.z,i=this.w;e=e||new n,this.conjugate(e);var t=1/(f*f+o*o+d*d+i*i);return e.x*=t,e.y*=t,e.z*=t,e.w*=t,e},n.prototype.conjugate=function(e){return e=e||new n,e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e},n.prototype.normalize=function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e)},n.prototype.normalizeFast=function(){var e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e)},n.prototype.vmult=function(e,f){f=f||new o;var n=e.x,d=e.y,i=e.z,t=this.x,l=this.y,u=this.z,p=this.w,s=p*n+l*i-u*d,y=p*d+u*n-t*i,c=p*i+t*d-l*n,a=-t*n-l*d-u*i;return f.x=s*p+a*-t+y*-u-c*-l,f.y=y*p+a*-l+c*-t-s*-u,f.z=c*p+a*-u+s*-l-y*-t,f},n.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},n.prototype.toEuler=function(e,f){f=f||\"YZX\";var n,o,d,i=this.x,t=this.y,l=this.z,u=this.w;switch(f){case\"YZX\":var p=i*t+l*u;if(p>.499&&(n=2*Math.atan2(i,u),o=Math.PI/2,d=0),-.499>p&&(n=-2*Math.atan2(i,u),o=-Math.PI/2,d=0),isNaN(n)){var s=i*i,y=t*t,c=l*l;n=Math.atan2(2*t*u-2*i*l,1-2*y-2*c),o=Math.asin(2*p),d=Math.atan2(2*i*u-2*t*l,1-2*s-2*c)}break;default:throw new Error(\"Euler order \"+f+\" not supported yet.\")}e.y=n,e.z=o,e.x=d},n.prototype.setFromEuler=function(e,f,n,o){o=o||\"XYZ\";var d=Math.cos(e/2),i=Math.cos(f/2),t=Math.cos(n/2),l=Math.sin(e/2),u=Math.sin(f/2),p=Math.sin(n/2);return\"XYZ\"===o?(this.x=l*i*t+d*u*p,this.y=d*u*t-l*i*p,this.z=d*i*p+l*u*t,this.w=d*i*t-l*u*p):\"YXZ\"===o?(this.x=l*i*t+d*u*p,this.y=d*u*t-l*i*p,this.z=d*i*p-l*u*t,this.w=d*i*t+l*u*p):\"ZXY\"===o?(this.x=l*i*t-d*u*p,this.y=d*u*t+l*i*p,this.z=d*i*p+l*u*t,this.w=d*i*t-l*u*p):\"ZYX\"===o?(this.x=l*i*t-d*u*p,this.y=d*u*t+l*i*p,this.z=d*i*p-l*u*t,this.w=d*i*t+l*u*p):\"YZX\"===o?(this.x=l*i*t+d*u*p,this.y=d*u*t+l*i*p,this.z=d*i*p-l*u*t,this.w=d*i*t-l*u*p):\"XZY\"===o&&(this.x=l*i*t-d*u*p,this.y=d*u*t-l*i*p,this.z=d*i*p+l*u*t,this.w=d*i*t+l*u*p),this},n.prototype.clone=function(){return new n(this.x,this.y,this.z,this.w)}},{\"./Vec3\":30}],29:[function(e,f){function n(e){e=e||{},this.position=new o,e.position&&this.position.copy(e.position),this.quaternion=new d,e.quaternion&&this.quaternion.copy(e.quaternion)}var o=e(\"./Vec3\"),d=e(\"./Quaternion\");f.exports=n;var i=new d;n.pointToLocalFrame=function(e,f,n,d){var d=d||new o;return n.vsub(e,d),f.conjugate(i),i.vmult(d,d),d},n.prototype.pointToLocal=function(e,f){return n.pointToLocalFrame(this.position,this.quaternion,e,f)},n.pointToWorldFrame=function(e,f,n,d){var d=d||new o;return f.vmult(n,d),d.vadd(e,d),d},n.prototype.pointToWorld=function(e,f){return n.pointToWorldFrame(this.position,this.quaternion,e,f)},n.prototype.vectorToWorldFrame=function(e,f){var f=f||new o;return this.quaternion.vmult(e,f),f},n.vectorToWorldFrame=function(e,f,n){return e.vmult(f,n),n},n.vectorToLocalFrame=function(e,f,n,d){var d=d||new o;return f.w*=-1,f.vmult(n,d),f.w*=-1,d}},{\"./Quaternion\":28,\"./Vec3\":30}],30:[function(e,f){function n(e,f,n){this.x=e||0,this.y=f||0,this.z=n||0}f.exports=n;var o=e(\"./Mat3\");n.ZERO=new n(0,0,0),n.UNIT_X=new n(1,0,0),n.UNIT_Y=new n(0,1,0),n.UNIT_Z=new n(0,0,1),n.prototype.cross=function(e,f){var o=e.x,d=e.y,i=e.z,t=this.x,l=this.y,u=this.z;return f=f||new n,f.x=l*i-u*d,f.y=u*o-t*i,f.z=t*d-l*o,f},n.prototype.set=function(e,f,n){return this.x=e,this.y=f,this.z=n,this},n.prototype.setZero=function(){this.x=this.y=this.z=0},n.prototype.vadd=function(e,f){return f?(f.x=e.x+this.x,f.y=e.y+this.y,f.z=e.z+this.z,void 0):new n(this.x+e.x,this.y+e.y,this.z+e.z)},n.prototype.vsub=function(e,f){return f?(f.x=this.x-e.x,f.y=this.y-e.y,f.z=this.z-e.z,void 0):new n(this.x-e.x,this.y-e.y,this.z-e.z)},n.prototype.crossmat=function(){return new o([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},n.prototype.normalize=function(){var e=this.x,f=this.y,n=this.z,o=Math.sqrt(e*e+f*f+n*n);if(o>0){var d=1/o;this.x*=d,this.y*=d,this.z*=d}else this.x=0,this.y=0,this.z=0;return o},n.prototype.unit=function(e){e=e||new n;var f=this.x,o=this.y,d=this.z,i=Math.sqrt(f*f+o*o+d*d);return i>0?(i=1/i,e.x=f*i,e.y=o*i,e.z=d*i):(e.x=1,e.y=0,e.z=0),e},n.prototype.norm=function(){var e=this.x,f=this.y,n=this.z;return Math.sqrt(e*e+f*f+n*n)},n.prototype.length=n.prototype.norm,n.prototype.norm2=function(){return this.dot(this)},n.prototype.lengthSquared=n.prototype.norm2,n.prototype.distanceTo=function(e){var f=this.x,n=this.y,o=this.z,d=e.x,i=e.y,t=e.z;return Math.sqrt((d-f)*(d-f)+(i-n)*(i-n)+(t-o)*(t-o))},n.prototype.distanceSquared=function(e){var f=this.x,n=this.y,o=this.z,d=e.x,i=e.y,t=e.z;return(d-f)*(d-f)+(i-n)*(i-n)+(t-o)*(t-o)},n.prototype.mult=function(e,f){f=f||new n;var o=this.x,d=this.y,i=this.z;return f.x=e*o,f.y=e*d,f.z=e*i,f},n.prototype.scale=n.prototype.mult,n.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},n.prototype.isZero=function(){return 0===this.x&&0===this.y&&0===this.z},n.prototype.negate=function(e){return e=e||new n,e.x=-this.x,e.y=-this.y,e.z=-this.z,e};var d=new n,i=new n;n.prototype.tangents=function(e,f){var n=this.norm();if(n>0){var o=d,t=1/n;o.set(this.x*t,this.y*t,this.z*t);var l=i;Math.abs(o.x)<.9?(l.set(1,0,0),o.cross(l,e)):(l.set(0,1,0),o.cross(l,e)),o.cross(e,f)}else e.set(1,0,0),f.set(0,1,0)},n.prototype.toString=function(){return this.x+\",\"+this.y+\",\"+this.z},n.prototype.toArray=function(){return[this.x,this.y,this.z]},n.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},n.prototype.lerp=function(e,f,n){var o=this.x,d=this.y,i=this.z;n.x=o+(e.x-o)*f,n.y=d+(e.y-d)*f,n.z=i+(e.z-i)*f},n.prototype.almostEquals=function(e,f){return void 0===f&&(f=1e-6),Math.abs(this.x-e.x)>f||Math.abs(this.y-e.y)>f||Math.abs(this.z-e.z)>f?!1:!0},n.prototype.almostZero=function(e){return void 0===e&&(e=1e-6),Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e?!1:!0};var t=new n;n.prototype.isAntiparallelTo=function(e,f){return this.negate(t),t.almostEquals(e,f)},n.prototype.clone=function(){return new n(this.x,this.y,this.z)}},{\"./Mat3\":27}],31:[function(e,f){function n(e){e=e||{},o.apply(this),this.id=n.idCounter++,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new d,this.collisionFilterGroup=\"number\"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask=\"number\"==typeof e.collisionFilterMask?e.collisionFilterMask:1,this.collisionResponse=!0,this.position=new d,e.position&&this.position.copy(e.position),this.previousPosition=new d,this.initPosition=new d,this.velocity=new d,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new d,this.force=new d;var f=\"number\"==typeof e.mass?e.mass:0;this.mass=f,this.invMass=f>0?1/f:0,this.material=e.material||null,this.linearDamping=\"number\"==typeof e.linearDamping?e.linearDamping:.01,this.type=0>=f?n.STATIC:n.DYNAMIC,typeof e.type==typeof n.STATIC&&(this.type=e.type),this.allowSleep=\"undefined\"!=typeof e.allowSleep?e.allowSleep:!0,this.sleepState=0,this.sleepSpeedLimit=\"undefined\"!=typeof e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=\"undefined\"!=typeof e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new d,this.quaternion=new t,e.quaternion&&this.quaternion.copy(e.quaternion),this.initQuaternion=new t,this.angularVelocity=new d,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new d,this.interpolatedPosition=new d,this.interpolatedQuaternion=new t,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new d,this.invInertia=new d,this.invInertiaWorld=new i,this.invMassSolve=0,this.invInertiaSolve=new d,this.invInertiaWorldSolve=new i,this.fixedRotation=\"undefined\"!=typeof e.fixedRotation?e.fixedRotation:!1,this.angularDamping=\"undefined\"!=typeof e.angularDamping?e.angularDamping:.01,this.aabb=new l,this.aabbNeedsUpdate=!0,this.wlambda=new d,e.shape&&this.addShape(e.shape),this.updateMassProperties()}f.exports=n;var o=e(\"../utils/EventTarget\"),d=(e(\"../shapes/Shape\"),e(\"../math/Vec3\")),i=e(\"../math/Mat3\"),t=e(\"../math/Quaternion\"),l=(e(\"../material/Material\"),e(\"../collision/AABB\")),u=e(\"../shapes/Box\");n.prototype=new o,n.prototype.constructor=n,n.DYNAMIC=1,n.STATIC=2,n.KINEMATIC=4,n.AWAKE=0,n.SLEEPY=1,n.SLEEPING=2,n.idCounter=0,n.prototype.wakeUp=function(){var e=this.sleepState;this.sleepState=0,e===n.SLEEPING&&this.dispatchEvent({type:\"wakeup\"})},n.prototype.sleep=function(){this.sleepState=n.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0)},n.sleepyEvent={type:\"sleepy\"},n.sleepEvent={type:\"sleep\"},n.prototype.sleepTick=function(e){if(this.allowSleep){var f=this.sleepState,o=this.velocity.norm2()+this.angularVelocity.norm2(),d=Math.pow(this.sleepSpeedLimit,2);f===n.AWAKE&&d>o?(this.sleepState=n.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(n.sleepyEvent)):f===n.SLEEPY&&o>d?this.wakeUp():f===n.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(n.sleepEvent))}},n.prototype.updateSolveMassProperties=function(){this.sleepState===n.SLEEPING||this.type===n.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},n.prototype.pointToLocalFrame=function(e,f){var f=f||new d;return e.vsub(this.position,f),this.quaternion.conjugate().vmult(f,f),f},n.prototype.vectorToLocalFrame=function(e,f){var f=f||new d;return this.quaternion.conjugate().vmult(e,f),f},n.prototype.pointToWorldFrame=function(e,f){var f=f||new d;return this.quaternion.vmult(e,f),f.vadd(this.position,f),f},n.prototype.vectorToWorldFrame=function(e,f){var f=f||new d;return this.quaternion.vmult(e,f),f};var p=new d,s=new t;n.prototype.addShape=function(e,f,n){var o=new d,i=new t;return f&&o.copy(f),n&&i.copy(n),this.shapes.push(e),this.shapeOffsets.push(o),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,this},n.prototype.updateBoundingRadius=function(){for(var e=this.shapes,f=this.shapeOffsets,n=e.length,o=0,d=0;d!==n;d++){var i=e[d];i.updateBoundingSphereRadius();var t=f[d].norm(),l=i.boundingSphereRadius;t+l>o&&(o=t+l)}this.boundingRadius=o};var y=new l;n.prototype.computeAABB=function(){for(var e=this.shapes,f=this.shapeOffsets,n=this.shapeOrientations,o=e.length,d=p,i=s,t=this.quaternion,l=this.aabb,u=y,c=0;c!==o;c++){var a=e[c];n[c].mult(t,i),i.vmult(f[c],d),d.vadd(this.position,d),a.calculateWorldAABB(d,i,u.lowerBound,u.upperBound),0===c?l.copy(u):l.extend(u)}this.aabbNeedsUpdate=!1};{var c=new i,a=new i;new i}n.prototype.updateInertiaWorld=function(e){var f=this.invInertia;if(f.x!==f.y||f.y!==f.z||e){var n=c,o=a;n.setRotationFromQuaternion(this.quaternion),n.transpose(o),n.scale(f,n),n.mmult(o,this.invInertiaWorld)}else;};var r=new d,w=new d;n.prototype.applyForce=function(e,f){if(this.type===n.DYNAMIC){var o=r;f.vsub(this.position,o);var d=w;o.cross(e,d),this.force.vadd(e,this.force),this.torque.vadd(d,this.torque)}};var b=new d,m=new d;n.prototype.applyLocalForce=function(e,f){if(this.type===n.DYNAMIC){var o=b,d=m;this.vectorToWorldFrame(e,o),this.pointToWorldFrame(f,d),this.applyForce(o,d)}};var N=new d,g=new d,x=new d;n.prototype.applyImpulse=function(e,f){if(this.type===n.DYNAMIC){var o=N;f.vsub(this.position,o);var d=g;d.copy(e),d.mult(this.invMass,d),this.velocity.vadd(d,this.velocity);var i=x;o.cross(e,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}};var j=new d,v=new d;n.prototype.applyLocalImpulse=function(e,f){if(this.type===n.DYNAMIC){var o=j,d=v;this.vectorToWorldFrame(e,o),this.pointToWorldFrame(f,d),this.applyImpulse(o,d)}};var A=new d;n.prototype.updateMassProperties=function(){var e=A;this.invMass=this.mass>0?1/this.mass:0;var f=this.inertia,n=this.fixedRotation;this.computeAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),u.calculateInertia(e,this.mass,f),this.invInertia.set(f.x>0&&!n?1/f.x:0,f.y>0&&!n?1/f.y:0,f.z>0&&!n?1/f.z:0),this.updateInertiaWorld(!0)},n.prototype.getVelocityAtWorldPoint=function(e,f){var n=new d;return e.vsub(this.position,n),this.angularVelocity.cross(n,f),this.velocity.vadd(f,f),f}},{\"../collision/AABB\":3,\"../material/Material\":25,\"../math/Mat3\":27,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Shape\":43,\"../utils/EventTarget\":49}],32:[function(e,f){function n(e){this.chassisBody=e.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=\"undefined\"!=typeof e.indexRightAxis?e.indexRightAxis:1,this.indexForwardAxis=\"undefined\"!=typeof e.indexForwardAxis?e.indexForwardAxis:0,this.indexUpAxis=\"undefined\"!=typeof e.indexUpAxis?e.indexUpAxis:2}function o(e,f,n,o,i){var t=0,l=n,u=x,p=j,s=v;e.getVelocityAtWorldPoint(l,u),f.getVelocityAtWorldPoint(l,p),u.vsub(p,s);var y=o.dot(s),c=d(e,n,o),a=d(f,n,o),r=1,w=r/(c+a);return t=-y*w,t>i&&(t=i),-i>t&&(t=-i),t}function d(e,f,n){var o=A,d=C,i=O,t=h;return f.vsub(e.position,o),o.cross(n,d),e.invInertiaWorld.vmult(d,t),t.cross(o,i),e.invMass+n.dot(i)}function i(e,f,n,o,d,i){var t=d.norm2();if(t>1.1)return 0;var l=k,u=q,p=z;e.getVelocityAtWorldPoint(f,l),n.getVelocityAtWorldPoint(o,u),l.vsub(u,p);var s=d.dot(p),y=.2,c=1/(e.invMass+n.invMass),i=-y*s*c;return i}var t=(e(\"./Body\"),e(\"../math/Vec3\")),l=e(\"../math/Quaternion\"),u=(e(\"../collision/RaycastResult\"),e(\"../collision/Ray\")),p=e(\"../objects/WheelInfo\");f.exports=n;{var s=(new t,new t,new t,new t),y=new t,c=new t;new u}n.prototype.addWheel=function(e){e=e||{};var f=new p(e),n=this.wheelInfos.length;return this.wheelInfos.push(f),n},n.prototype.setSteeringValue=function(e,f){var n=this.wheelInfos[f];n.steering=e};new t;n.prototype.applyEngineForce=function(e,f){this.wheelInfos[f].engineForce=e},n.prototype.setBrake=function(e,f){this.wheelInfos[f].brake=e},n.prototype.addToWorld=function(e){this.constraints;e.add(this.chassisBody);var f=this;this.preStepCallback=function(){f.updateVehicle(e.dt)},e.addEventListener(\"preStep\",this.preStepCallback),this.world=e},n.prototype.getVehicleAxisWorld=function(e,f){f.set(0===e?1:0,1===e?1:0,2===e?1:0),this.chassisBody.vectorToWorldFrame(f,f)},n.prototype.updateVehicle=function(e){for(var f=this.wheelInfos,n=f.length,o=this.chassisBody,d=0;n>d;d++)this.updateWheelTransform(d);this.currentVehicleSpeedKmHour=3.6*o.velocity.norm();var i=new t;this.getVehicleAxisWorld(this.indexForwardAxis,i),i.dot(o.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(var d=0;n>d;d++)this.castRay(f[d]);this.updateSuspension(e);for(var l=new t,u=new t,d=0;n>d;d++){var p=f[d],s=p.suspensionForce;s>p.maxSuspensionForce&&(s=p.maxSuspensionForce),p.raycastResult.hitNormalWorld.scale(s*e,l),p.raycastResult.hitPointWorld.vsub(o.position,u),o.applyImpulse(l,p.raycastResult.hitPointWorld)}this.updateFriction(e);var y=new t,c=new t,a=new t;for(d=0;n>d;d++){var p=f[d];o.getVelocityAtWorldPoint(p.chassisConnectionPointWorld,a);var r=1;switch(this.indexUpAxis){case 1:r=-1}if(p.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,c);var w=c.dot(p.raycastResult.hitNormalWorld);p.raycastResult.hitNormalWorld.scale(w,y),c.vsub(y,c);var b=c.dot(a);p.deltaRotation=r*b*e/p.radius}!p.sliding&&p.isInContact||0===p.engineForce||!p.useCustomSlidingRotationalSpeed||(p.deltaRotation=(p.engineForce>0?1:-1)*p.customSlidingRotationalSpeed*e),Math.abs(p.brake)>Math.abs(p.engineForce)&&(p.deltaRotation=0),p.rotation+=p.deltaRotation,p.deltaRotation*=.99}},n.prototype.updateSuspension=function(){for(var e=this.chassisBody,f=e.mass,n=this.wheelInfos,o=n.length,d=0;o>d;d++){var i=n[d];if(i.isInContact){var t,l=i.suspensionRestLength,u=i.suspensionLength,p=l-u;t=i.suspensionStiffness*p*i.clippedInvContactDotSuspension;var s,y=i.suspensionRelativeVelocity;s=0>y?i.dampingCompression:i.dampingRelaxation,t-=s*y,i.suspensionForce=t*f,i.suspensionForce<0&&(i.suspensionForce=0)}else i.suspensionForce=0}},n.prototype.removeFromWorld=function(e){this.constraints;e.remove(this.chassisBody),e.removeEventListener(\"preStep\",this.preStepCallback),this.world=null};var a=new t,r=new t;n.prototype.castRay=function(e){var f=a,n=r;this.updateWheelTransformWorld(e);var o=this.chassisBody,d=-1,i=e.suspensionRestLength+e.radius;e.directionWorld.scale(i,f);var l=e.chassisConnectionPointWorld;l.vadd(f,n);var u=e.raycastResult;u.reset();var p=o.collisionResponse;o.collisionResponse=!1,this.world.rayTest(l,n,u),o.collisionResponse=p;var s=u.body;if(e.raycastResult.groundObject=0,s){d=u.distance,e.raycastResult.hitNormalWorld=u.hitNormalWorld,e.isInContact=!0;var y=u.distance;e.suspensionLength=y-e.radius;var c=e.suspensionRestLength-e.maxSuspensionTravel,w=e.suspensionRestLength+e.maxSuspensionTravel;e.suspensionLength<c&&(e.suspensionLength=c),e.suspensionLength>w&&(e.suspensionLength=w,e.raycastResult.reset());var b=e.raycastResult.hitNormalWorld.dot(e.directionWorld),m=new t;o.getVelocityAtWorldPoint(e.raycastResult.hitPointWorld,m);var N=e.raycastResult.hitNormalWorld.dot(m);if(b>=-.1)e.suspensionRelativeVelocity=0,e.clippedInvContactDotSuspension=10;else{var g=-1/b;e.suspensionRelativeVelocity=N*g,e.clippedInvContactDotSuspension=g}}else e.suspensionLength=e.suspensionRestLength+0*e.maxSuspensionTravel,e.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.raycastResult.hitNormalWorld),e.clippedInvContactDotSuspension=1;return d},n.prototype.updateWheelTransformWorld=function(e){e.isInContact=!1;var f=this.chassisBody;f.pointToWorldFrame(e.chassisConnectionPointLocal,e.chassisConnectionPointWorld),f.vectorToWorldFrame(e.directionLocal,e.directionWorld),f.vectorToWorldFrame(e.axleLocal,e.axleWorld)},n.prototype.updateWheelTransform=function(e){var f=s,n=y,o=c,d=this.wheelInfos[e];this.updateWheelTransformWorld(d),d.directionLocal.scale(-1,f),n.copy(d.axleLocal),f.cross(n,o),o.normalize(),n.normalize();var i=d.steering,t=new l;t.setFromAxisAngle(f,i);var u=new l;u.setFromAxisAngle(n,d.rotation);var p=d.worldTransform.quaternion;this.chassisBody.quaternion.mult(t,p),p.mult(u,p),p.normalize();var a=d.worldTransform.position;a.copy(d.directionWorld),a.scale(d.suspensionLength,a),a.vadd(d.chassisConnectionPointWorld,a)};var w=[new t(1,0,0),new t(0,1,0),new t(0,0,1)];n.prototype.getWheelTransformWorld=function(e){return this.wheelInfos[e].worldTransform};var b=new t,m=[],N=[],g=1;n.prototype.updateFriction=function(e){for(var f=b,n=this.wheelInfos,d=n.length,l=this.chassisBody,u=N,p=m,s=0,y=0;d>y;y++){var c=n[y],a=c.raycastResult.body;a&&s++,c.sideImpulse=0,c.forwardImpulse=0,u[y]||(u[y]=new t),p[y]||(p[y]=new t)}for(var y=0;d>y;y++){var c=n[y],a=c.raycastResult.body;if(a){var r=p[y],x=this.getWheelTransformWorld(y);x.vectorToWorldFrame(w[this.indexRightAxis],r);var j=c.raycastResult.hitNormalWorld,v=r.dot(j);j.scale(v,f),r.vsub(f,r),r.normalize(),j.cross(r,u[y]),u[y].normalize(),c.sideImpulse=i(l,c.raycastResult.hitPointWorld,a,c.raycastResult.hitPointWorld,r),c.sideImpulse*=g}}var A=1,C=.5;this.sliding=!1;for(var y=0;d>y;y++){var c=n[y],a=c.raycastResult.body,O=0;if(c.slipInfo=1,a){var h=0,k=c.brake?c.brake:h;O=o(l,a,c.raycastResult.hitPointWorld,u[y],k),O+=c.engineForce*e;var q=k/O;c.slipInfo*=q}if(c.forwardImpulse=0,c.skidInfo=1,a){c.skidInfo=1;var z=c.suspensionForce*e*c.frictionSlip,B=z,D=z*B;c.forwardImpulse=O;var E=c.forwardImpulse*C,F=c.sideImpulse*A,G=E*E+F*F;if(c.sliding=!1,G>D){this.sliding=!0,c.sliding=!0;var q=z/Math.sqrt(G);c.skidInfo*=q}}}if(this.sliding)for(var y=0;d>y;y++){var c=n[y];0!==c.sideImpulse&&c.skidInfo<1&&(c.forwardImpulse*=c.skidInfo,c.sideImpulse*=c.skidInfo)}for(var y=0;d>y;y++){var c=n[y],H=new t;if(H.copy(c.raycastResult.hitPointWorld),0!==c.forwardImpulse){var I=new t;u[y].scale(c.forwardImpulse,I),l.applyImpulse(I,H)}if(0!==c.sideImpulse){var a=c.raycastResult.body,J=new t;J.copy(c.raycastResult.hitPointWorld);var K=new t;p[y].scale(c.sideImpulse,K),l.pointToLocalFrame(H,H),H[\"xyz\"[this.indexUpAxis]]*=c.rollInfluence,l.pointToWorldFrame(H,H),l.applyImpulse(K,H),K.scale(-1,K),a.applyImpulse(K,J)}}};var x=new t,j=new t,v=new t,A=new t,C=new t,O=new t,h=new t,k=new t,q=new t,z=new t},{\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/WheelInfo\":36,\"./Body\":31}],33:[function(e,f){function n(e){if(this.wheelBodies=[],this.coordinateSystem=\"undefined\"==typeof e.coordinateSystem?new t(1,2,3):e.coordinateSystem.clone(),this.chassisBody=e.chassisBody,!this.chassisBody){var f=new i(new t(5,2,.5));this.chassisBody=new o(1,f)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}var o=e(\"./Body\"),d=e(\"../shapes/Sphere\"),i=e(\"../shapes/Box\"),t=e(\"../math/Vec3\"),l=e(\"../constraints/HingeConstraint\");f.exports=n,n.prototype.addWheel=function(e){e=e||{};var f=e.body;f||(f=new o(1,new d(1.2))),this.wheelBodies.push(f),this.wheelForces.push(0);var n=(new t,\"undefined\"!=typeof e.position?e.position.clone():new t),i=new t;this.chassisBody.pointToWorldFrame(n,i),f.position.set(i.x,i.y,i.z);var u=\"undefined\"!=typeof e.axis?e.axis.clone():new t(0,1,0);this.wheelAxes.push(u);var p=new l(this.chassisBody,f,{pivotA:n,axisA:u,pivotB:t.ZERO,axisB:u,collideConnected:!1});return this.constraints.push(p),this.wheelBodies.length-1},n.prototype.setSteeringValue=function(e,f){var n=this.wheelAxes[f],o=Math.cos(e),d=Math.sin(e),i=n.x,t=n.y;this.constraints[f].axisA.set(o*i-d*t,d*i+o*t,0)},n.prototype.setMotorSpeed=function(e,f){var n=this.constraints[f];n.enableMotor(),n.motorTargetVelocity=e},n.prototype.disableMotor=function(e){var f=this.constraints[e];\nf.disableMotor()};var u=new t;n.prototype.setWheelForce=function(e,f){this.wheelForces[f]=e},n.prototype.applyWheelForce=function(e,f){var n=this.wheelAxes[f],o=this.wheelBodies[f],d=o.torque;n.scale(e,u),o.vectorToWorldFrame(u,u),d.vadd(u,d)},n.prototype.addToWorld=function(e){for(var f=this.constraints,n=this.wheelBodies.concat([this.chassisBody]),o=0;o<n.length;o++)e.add(n[o]);for(var o=0;o<f.length;o++)e.addConstraint(f[o]);e.addEventListener(\"preStep\",this._update.bind(this))},n.prototype._update=function(){for(var e=this.wheelForces,f=0;f<e.length;f++)this.applyWheelForce(e[f],f)},n.prototype.removeFromWorld=function(e){for(var f=this.constraints,n=this.wheelBodies.concat([this.chassisBody]),o=0;o<n.length;o++)e.remove(n[o]);for(var o=0;o<f.length;o++)e.removeConstraint(f[o])};var p=new t;n.prototype.getWheelSpeed=function(e){var f=this.wheelAxes[e],n=this.wheelBodies[e],o=n.angularVelocity;return this.chassisBody.vectorToWorldFrame(f,p),o.dot(p)}},{\"../constraints/HingeConstraint\":15,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Sphere\":44,\"./Body\":31}],34:[function(e,f){function n(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}f.exports=n;{var o=(e(\"../shapes/Shape\"),e(\"../math/Vec3\"));e(\"../math/Quaternion\"),e(\"../shapes/Particle\"),e(\"../objects/Body\"),e(\"../material/Material\")}n.prototype.add=function(e){this.particles.push(e),this.neighbors.length<this.particles.length&&this.neighbors.push([])},n.prototype.remove=function(e){var f=this.particles.indexOf(e);-1!==f&&(this.particles.splice(f,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var d=new o;n.prototype.getNeighbors=function(e,f){for(var n=this.particles.length,o=e.id,i=this.smoothingRadius*this.smoothingRadius,t=d,l=0;l!==n;l++){var u=this.particles[l];u.position.vsub(e.position,t),o!==u.id&&t.norm2()<i&&f.push(u)}};var i=new o,t=new o,l=new o,u=new o,p=new o,s=new o;n.prototype.update=function(){for(var e=this.particles.length,f=i,n=this.speedOfSound,o=this.eps,d=0;d!==e;d++){var y=this.particles[d],c=this.neighbors[d];c.length=0,this.getNeighbors(y,c),c.push(this.particles[d]);for(var a=c.length,r=0,w=0;w!==a;w++){y.position.vsub(c[w].position,f);var b=f.norm(),m=this.w(b);r+=c[w].mass*m}this.densities[d]=r,this.pressures[d]=n*n*(this.densities[d]-this.density)}for(var N=t,g=l,x=u,j=p,v=s,d=0;d!==e;d++){var A=this.particles[d];N.set(0,0,0),g.set(0,0,0);for(var C,O,c=this.neighbors[d],a=c.length,w=0;w!==a;w++){var h=c[w];A.position.vsub(h.position,j);var k=j.norm();C=-h.mass*(this.pressures[d]/(this.densities[d]*this.densities[d]+o)+this.pressures[w]/(this.densities[w]*this.densities[w]+o)),this.gradw(j,x),x.mult(C,x),N.vadd(x,N),h.velocity.vsub(A.velocity,v),v.mult(1/(1e-4+this.densities[d]*this.densities[w])*this.viscosity*h.mass,v),O=this.nablaw(k),v.mult(O,v),g.vadd(v,g)}g.mult(A.mass,g),N.mult(A.mass,N),A.force.vadd(g,A.force),A.force.vadd(N,A.force)}},n.prototype.w=function(e){var f=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(f,9))*Math.pow(f*f-e*e,3)},n.prototype.gradw=function(e,f){var n=e.norm(),o=this.smoothingRadius;e.mult(945/(32*Math.PI*Math.pow(o,9))*Math.pow(o*o-n*n,2),f)},n.prototype.nablaw=function(e){var f=this.smoothingRadius,n=945/(32*Math.PI*Math.pow(f,9))*(f*f-e*e)*(7*e*e-3*f*f);return n}},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Particle\":41,\"../shapes/Shape\":43}],35:[function(e,f){function n(e,f,n){n=n||{},this.restLength=\"number\"==typeof n.restLength?n.restLength:1,this.stiffness=n.stiffness||100,this.damping=n.damping||1,this.bodyA=e,this.bodyB=f,this.localAnchorA=new o,this.localAnchorB=new o,n.localAnchorA&&this.localAnchorA.copy(n.localAnchorA),n.localAnchorB&&this.localAnchorB.copy(n.localAnchorB),n.worldAnchorA&&this.setWorldAnchorA(n.worldAnchorA),n.worldAnchorB&&this.setWorldAnchorB(n.worldAnchorB)}var o=e(\"../math/Vec3\");f.exports=n,n.prototype.setWorldAnchorA=function(e){this.bodyA.pointToLocalFrame(e,this.localAnchorA)},n.prototype.setWorldAnchorB=function(e){this.bodyB.pointToLocalFrame(e,this.localAnchorB)},n.prototype.getWorldAnchorA=function(e){this.bodyA.pointToWorldFrame(this.localAnchorA,e)},n.prototype.getWorldAnchorB=function(e){this.bodyB.pointToWorldFrame(this.localAnchorB,e)};var d=new o,i=new o,t=new o,l=new o,u=new o,p=new o,s=new o,y=new o,c=new o,a=new o,r=new o;n.prototype.applyForce=function(){var e=this.stiffness,f=this.damping,n=this.restLength,o=this.bodyA,w=this.bodyB,b=d,m=i,N=t,g=l,x=r,j=u,v=p,A=s,C=y,O=c,h=a;this.getWorldAnchorA(j),this.getWorldAnchorB(v),j.vsub(o.position,A),v.vsub(w.position,C),v.vsub(j,b);var k=b.norm();m.copy(b),m.normalize(),w.velocity.vsub(o.velocity,N),w.angularVelocity.cross(C,x),N.vadd(x,N),o.angularVelocity.cross(A,x),N.vsub(x,N),m.mult(-e*(k-n)-f*N.dot(m),g),o.force.vsub(g,o.force),w.force.vadd(g,w.force),A.cross(g,O),C.cross(g,h),o.torque.vsub(O,o.torque),w.torque.vadd(h,w.torque)}},{\"../math/Vec3\":30}],36:[function(e,f){function n(e){e=t.defaults(e,{chassisConnectionPointLocal:new o,chassisConnectionPointWorld:new o,directionLocal:new o,directionWorld:new o,axleLocal:new o,axleWorld:new o,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=e.maxSuspensionTravel,this.customSlidingRotationalSpeed=e.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=e.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=e.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=e.chassisConnectionPointWorld.clone(),this.directionLocal=e.directionLocal.clone(),this.directionWorld=e.directionWorld.clone(),this.axleLocal=e.axleLocal.clone(),this.axleWorld=e.axleWorld.clone(),this.suspensionRestLength=e.suspensionRestLength,this.suspensionMaxLength=e.suspensionMaxLength,this.radius=e.radius,this.suspensionStiffness=e.suspensionStiffness,this.dampingCompression=e.dampingCompression,this.dampingRelaxation=e.dampingRelaxation,this.frictionSlip=e.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=e.rollInfluence,this.maxSuspensionForce=e.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=e.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new i,this.worldTransform=new d,this.isInContact=!1}var o=e(\"../math/Vec3\"),d=e(\"../math/Transform\"),i=e(\"../collision/RaycastResult\"),t=e(\"../utils/Utils\");f.exports=n;var l=new o,u=new o,l=new o;n.prototype.updateWheel=function(e){var f=this.raycastResult;if(this.isInContact){var n=f.hitNormalWorld.dot(f.directionWorld);f.hitPointWorld.vsub(e.position,u),e.getVelocityAtWorldPoint(u,l);var o=f.hitNormalWorld.dot(l);if(n>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{var d=-1/n;this.suspensionRelativeVelocity=o*d,this.clippedInvContactDotSuspension=d}}else f.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,f.directionWorld.scale(-1,f.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{\"../collision/RaycastResult\":10,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Utils\":53}],37:[function(e,f){function n(e){o.call(this),this.type=o.types.BOX,this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=e(\"./ConvexPolyhedron\");n.prototype=new o,n.prototype.constructor=n,n.prototype.updateConvexPolyhedronRepresentation=function(){var e=this.halfExtents.x,f=this.halfExtents.y,n=this.halfExtents.z,o=d,t=[new o(-e,-f,-n),new o(e,-f,-n),new o(e,f,-n),new o(-e,f,-n),new o(-e,-f,n),new o(e,-f,n),new o(e,f,n),new o(-e,f,n)],l=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],u=([new o(0,0,1),new o(0,1,0),new o(1,0,0)],new i(t,l));this.convexPolyhedronRepresentation=u,u.material=this.material},n.prototype.calculateLocalInertia=function(e,f){return f=f||new d,n.calculateInertia(this.halfExtents,e,f),f},n.calculateInertia=function(e,f,n){var o=e;n.x=1/12*f*(2*o.y*2*o.y+2*o.z*2*o.z),n.y=1/12*f*(2*o.x*2*o.x+2*o.z*2*o.z),n.z=1/12*f*(2*o.y*2*o.y+2*o.x*2*o.x)},n.prototype.getSideNormals=function(e,f){var n=e,o=this.halfExtents;if(n[0].set(o.x,0,0),n[1].set(0,o.y,0),n[2].set(0,0,o.z),n[3].set(-o.x,0,0),n[4].set(0,-o.y,0),n[5].set(0,0,-o.z),void 0!==f)for(var d=0;d!==n.length;d++)f.vmult(n[d],n[d]);return n},n.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};{var t=new d;new d}n.prototype.forEachWorldCorner=function(e,f,n){for(var o=this.halfExtents,d=[[o.x,o.y,o.z],[-o.x,o.y,o.z],[-o.x,-o.y,o.z],[-o.x,-o.y,-o.z],[o.x,-o.y,-o.z],[o.x,o.y,-o.z],[-o.x,o.y,-o.z],[o.x,-o.y,o.z]],i=0;i<d.length;i++)t.set(d[i][0],d[i][1],d[i][2]),f.vmult(t,t),e.vadd(t,t),n(t.x,t.y,t.z)};var l=[new d,new d,new d,new d,new d,new d,new d,new d];n.prototype.calculateWorldAABB=function(e,f,n,o){var d=this.halfExtents;l[0].set(d.x,d.y,d.z),l[1].set(-d.x,d.y,d.z),l[2].set(-d.x,-d.y,d.z),l[3].set(-d.x,-d.y,-d.z),l[4].set(d.x,-d.y,-d.z),l[5].set(d.x,d.y,-d.z),l[6].set(-d.x,d.y,-d.z),l[7].set(d.x,-d.y,d.z);var i=l[0];f.vmult(i,i),e.vadd(i,i),o.copy(i),n.copy(i);for(var t=1;8>t;t++){var i=l[t];f.vmult(i,i),e.vadd(i,i);var u=i.x,p=i.y,s=i.z;u>o.x&&(o.x=u),p>o.y&&(o.y=p),s>o.z&&(o.z=s),u<n.x&&(n.x=u),p<n.y&&(n.y=p),s<n.z&&(n.z=s)}}},{\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],38:[function(e,f){function n(e,f,n){o.call(this),this.type=o.types.CONVEXPOLYHEDRON,this.vertices=e||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=f||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=n?n.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=(e(\"../math/Quaternion\"),e(\"../math/Transform\"));n.prototype=new o,n.prototype.constructor=n;var t=new d;n.prototype.computeEdges=function(){var e=this.faces,f=this.vertices,n=(f.length,this.uniqueEdges);n.length=0;for(var o=t,d=0;d!==e.length;d++)for(var i=e[d],l=i.length,u=0;u!==l;u++){var p=(u+1)%l;f[i[u]].vsub(f[i[p]],o),o.normalize();for(var s=!1,y=0;y!==n.length;y++)if(n[y].almostEquals(o)||n[y].almostEquals(o)){s=!0;break}s||n.push(o.clone())}},n.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var e=0;e<this.faces.length;e++){for(var f=0;f<this.faces[e].length;f++)if(!this.vertices[this.faces[e][f]])throw new Error(\"Vertex \"+this.faces[e][f]+\" not found!\");var n=this.faceNormals[e]||new d;this.getFaceNormal(e,n),n.negate(n),this.faceNormals[e]=n;var o=this.vertices[this.faces[e][0]];if(n.dot(o)<0){console.error(\".faceNormals[\"+e+\"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");for(var f=0;f<this.faces[e].length;f++)console.warn(\".vertices[\"+this.faces[e][f]+\"] = Vec3(\"+this.vertices[this.faces[e][f]].toString()+\")\")}}};var l=new d,u=new d;n.computeNormal=function(e,f,n,o){f.vsub(e,u),n.vsub(f,l),l.cross(u,o),o.isZero()||o.normalize()},n.prototype.getFaceNormal=function(e,f){var o=this.faces[e],d=this.vertices[o[0]],i=this.vertices[o[1]],t=this.vertices[o[2]];return n.computeNormal(d,i,t,f)};var p=new d;n.prototype.clipAgainstHull=function(e,f,n,o,i,t,l,u,s){for(var y=p,c=-1,a=-Number.MAX_VALUE,r=0;r<n.faces.length;r++){y.copy(n.faceNormals[r]),i.vmult(y,y);var w=y.dot(t);w>a&&(a=w,c=r)}for(var b=[],m=n.faces[c],N=m.length,g=0;N>g;g++){var x=n.vertices[m[g]],j=new d;j.copy(x),i.vmult(j,j),o.vadd(j,j),b.push(j)}c>=0&&this.clipFaceAgainstHull(t,e,f,b,l,u,s)};var s=new d,y=new d,c=new d,a=new d,r=new d,w=new d;n.prototype.findSeparatingAxis=function(e,f,n,o,d,i,t,l){var u=s,p=y,b=c,m=a,N=r,g=w,x=Number.MAX_VALUE,j=this,v=0;if(j.uniqueAxes)for(var A=0;A!==j.uniqueAxes.length;A++){n.vmult(j.uniqueAxes[A],u);var C=j.testSepAxis(u,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(u))}else for(var O=t?t.length:j.faces.length,A=0;O>A;A++){var h=t?t[A]:A;u.copy(j.faceNormals[h]),n.vmult(u,u);var C=j.testSepAxis(u,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(u))}if(e.uniqueAxes)for(var A=0;A!==e.uniqueAxes.length;A++){d.vmult(e.uniqueAxes[A],p),v++;var C=j.testSepAxis(p,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(p))}else for(var k=l?l.length:e.faces.length,A=0;k>A;A++){var h=l?l[A]:A;p.copy(e.faceNormals[h]),d.vmult(p,p),v++;var C=j.testSepAxis(p,e,f,n,o,d);if(C===!1)return!1;x>C&&(x=C,i.copy(p))}for(var q=0;q!==j.uniqueEdges.length;q++){n.vmult(j.uniqueEdges[q],m);for(var z=0;z!==e.uniqueEdges.length;z++)if(d.vmult(e.uniqueEdges[z],N),m.cross(N,g),!g.almostZero()){g.normalize();var B=j.testSepAxis(g,e,f,n,o,d);if(B===!1)return!1;x>B&&(x=B,i.copy(g))}}return o.vsub(f,b),b.dot(i)>0&&i.negate(i),!0};var b=[],m=[];n.prototype.testSepAxis=function(e,f,o,d,i,t){var l=this;n.project(l,e,o,d,b),n.project(f,e,i,t,m);var u=b[0],p=b[1],s=m[0],y=m[1];if(y>u||p>s)return!1;var c=u-y,a=s-p,r=a>c?c:a;return r};var N=new d,g=new d;n.prototype.calculateLocalInertia=function(e,f){this.computeLocalAABB(N,g);var n=g.x-N.x,o=g.y-N.y,d=g.z-N.z;f.x=1/12*e*(2*o*2*o+2*d*2*d),f.y=1/12*e*(2*n*2*n+2*d*2*d),f.z=1/12*e*(2*o*2*o+2*n*2*n)},n.prototype.getPlaneConstantOfFace=function(e){var f=this.faces[e],n=this.faceNormals[e],o=this.vertices[f[0]],d=-n.dot(o);return d};var x=new d,j=new d,v=new d,A=new d,C=new d,O=new d,h=new d,k=new d;n.prototype.clipFaceAgainstHull=function(e,f,n,o,d,i,t){for(var l=x,u=j,p=v,s=A,y=C,c=O,a=h,r=k,w=this,b=[],m=o,N=b,g=-1,q=Number.MAX_VALUE,z=0;z<w.faces.length;z++){l.copy(w.faceNormals[z]),n.vmult(l,l);var B=l.dot(e);q>B&&(q=B,g=z)}if(!(0>g)){var D=w.faces[g];D.connectedFaces=[];for(var E=0;E<w.faces.length;E++)for(var F=0;F<w.faces[E].length;F++)-1!==D.indexOf(w.faces[E][F])&&E!==g&&-1===D.connectedFaces.indexOf(E)&&D.connectedFaces.push(E);for(var G=(m.length,D.length),H=0;G>H;H++){var I=w.vertices[D[H]],J=w.vertices[D[(H+1)%G]];I.vsub(J,u),p.copy(u),n.vmult(p,p),f.vadd(p,p),s.copy(this.faceNormals[g]),n.vmult(s,s),f.vadd(s,s),p.cross(s,y),y.negate(y),c.copy(I),n.vmult(c,c),f.vadd(c,c);var K,L=(-c.dot(y),D.connectedFaces[H]);a.copy(this.faceNormals[L]);var M=this.getPlaneConstantOfFace(L);r.copy(a),n.vmult(r,r);var K=M-r.dot(f);for(this.clipFaceAgainstPlane(m,N,r,K);m.length;)m.shift();for(;N.length;)m.push(N.shift())}a.copy(this.faceNormals[g]);var M=this.getPlaneConstantOfFace(g);r.copy(a),n.vmult(r,r);for(var K=M-r.dot(f),E=0;E<m.length;E++){var P=r.dot(m[E])+K;if(d>=P&&(console.log(\"clamped: depth=\"+P+\" to minDist=\"+(d+\"\")),P=d),i>=P){var Q=m[E];if(0>=P){var R={point:Q,normal:r,depth:P};t.push(R)}}}}},n.prototype.clipFaceAgainstPlane=function(e,f,n,o){var i,t,l=e.length;if(2>l)return f;var u=e[e.length-1],p=e[0];i=n.dot(u)+o;for(var s=0;l>s;s++){if(p=e[s],t=n.dot(p)+o,0>i)if(0>t){var y=new d;y.copy(p),f.push(y)}else{var y=new d;u.lerp(p,i/(i-t),y),f.push(y)}else if(0>t){var y=new d;u.lerp(p,i/(i-t),y),f.push(y),f.push(p)}u=p,i=t}return f},n.prototype.computeWorldVertices=function(e,f){for(var n=this.vertices.length;this.worldVertices.length<n;)this.worldVertices.push(new d);for(var o=this.vertices,i=this.worldVertices,t=0;t!==n;t++)f.vmult(o[t],i[t]),e.vadd(i[t],i[t]);this.worldVerticesNeedsUpdate=!1};new d;n.prototype.computeLocalAABB=function(e,f){var n=this.vertices.length,o=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),f.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var d=0;n>d;d++){var i=o[d];i.x<e.x?e.x=i.x:i.x>f.x&&(f.x=i.x),i.y<e.y?e.y=i.y:i.y>f.y&&(f.y=i.y),i.z<e.z?e.z=i.z:i.z>f.z&&(f.z=i.z)}},n.prototype.computeWorldFaceNormals=function(e){for(var f=this.faceNormals.length;this.worldFaceNormals.length<f;)this.worldFaceNormals.push(new d);for(var n=this.faceNormals,o=this.worldFaceNormals,i=0;i!==f;i++)e.vmult(n[i],o[i]);this.worldFaceNormalsNeedsUpdate=!1},n.prototype.updateBoundingSphereRadius=function(){for(var e=0,f=this.vertices,n=0,o=f.length;n!==o;n++){var d=f[n].norm2();d>e&&(e=d)}this.boundingSphereRadius=Math.sqrt(e)};var q=new d;n.prototype.calculateWorldAABB=function(e,f,n,o){for(var d,i,t,l,u,p,s=this.vertices.length,y=this.vertices,c=0;s>c;c++){q.copy(y[c]),f.vmult(q,q),e.vadd(q,q);var a=q;a.x<d||void 0===d?d=a.x:(a.x>l||void 0===l)&&(l=a.x),a.y<i||void 0===i?i=a.y:(a.y>u||void 0===u)&&(u=a.y),a.z<t||void 0===t?t=a.z:(a.z>p||void 0===p)&&(p=a.z)}n.set(d,i,t),o.set(l,u,p)},n.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},n.prototype.getAveragePointLocal=function(e){e=e||new d;for(var f=this.vertices.length,n=this.vertices,o=0;f>o;o++)e.vadd(n[o],e);return e.mult(1/f,e),e},n.prototype.transformAllPoints=function(e,f){var n=this.vertices.length,o=this.vertices;if(f){for(var d=0;n>d;d++){var i=o[d];f.vmult(i,i)}for(var d=0;d<this.faceNormals.length;d++){var i=this.faceNormals[d];f.vmult(i,i)}}if(e)for(var d=0;n>d;d++){var i=o[d];i.vadd(e,i)}};var z=new d,B=new d,D=new d;n.prototype.pointIsInside=function(e){var f=this.vertices.length,n=this.vertices,o=this.faces,d=this.faceNormals,i=null,t=this.faces.length,l=z;this.getAveragePointLocal(l);for(var u=0;t>u;u++){var f=(this.faces[u].length,d[u]),p=n[o[u][0]],s=B;e.vsub(p,s);var y=f.dot(s),c=D;l.vsub(p,c);var a=f.dot(c);if(0>y&&a>0||y>0&&0>a)return!1}return i?1:-1};var E=(new d,new d),F=new d;n.project=function(e,f,n,o,d){var t=e.vertices.length,l=E,u=0,p=0,s=F,y=e.vertices;s.setZero(),i.vectorToLocalFrame(n,o,f,l),i.pointToLocalFrame(n,o,s,s);var c=s.dot(l);p=u=y[0].dot(l);for(var a=1;t>a;a++){var r=y[a].dot(l);r>u&&(u=r),p>r&&(p=r)}if(p-=c,u-=c,p>u){var w=p;p=u,u=w}d[0]=u,d[1]=p}},{\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"./Shape\":43}],39:[function(e,f){function n(e,f,n,t){var l=t,u=[],p=[],s=[],y=[],c=[],a=Math.cos,r=Math.sin;u.push(new d(f*a(0),f*r(0),.5*-n)),y.push(0),u.push(new d(e*a(0),e*r(0),.5*n)),c.push(1);for(var w=0;l>w;w++){var b=2*Math.PI/l*(w+1),m=2*Math.PI/l*(w+.5);l-1>w?(u.push(new d(f*a(b),f*r(b),.5*-n)),y.push(2*w+2),u.push(new d(e*a(b),e*r(b),.5*n)),c.push(2*w+3),s.push([2*w+2,2*w+3,2*w+1,2*w])):s.push([0,1,2*w+1,2*w]),(l%2===1||l/2>w)&&p.push(new d(a(m),r(m),0))}s.push(c),p.push(new d(0,0,1));for(var N=[],w=0;w<y.length;w++)N.push(y[y.length-w-1]);s.push(N),this.type=o.types.CONVEXPOLYHEDRON,i.call(this,u,s,p)}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=(e(\"../math/Quaternion\"),e(\"./ConvexPolyhedron\"));n.prototype=new i},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],40:[function(e,f){function n(e,f){f=t.defaults(f,{maxValue:null,minValue:null,elementSize:1}),this.data=e,this.maxValue=f.maxValue,this.minValue=f.minValue,this.elementSize=f.elementSize,null===f.minValue&&this.updateMinValue(),null===f.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,o.call(this),this.pillarConvex=new d,this.pillarOffset=new i,this.type=o.types.HEIGHTFIELD,this.updateBoundingSphereRadius(),this._cachedPillars={}}var o=e(\"./Shape\"),d=e(\"./ConvexPolyhedron\"),i=e(\"../math/Vec3\"),t=e(\"../utils/Utils\");f.exports=n,n.prototype=new o,n.prototype.update=function(){this._cachedPillars={}},n.prototype.updateMinValue=function(){for(var e=this.data,f=e[0][0],n=0;n!==e.length;n++)for(var o=0;o!==e[n].length;o++){var d=e[n][o];f>d&&(f=d)}this.minValue=f},n.prototype.updateMaxValue=function(){for(var e=this.data,f=e[0][0],n=0;n!==e.length;n++)for(var o=0;o!==e[n].length;o++){var d=e[n][o];d>f&&(f=d)}this.maxValue=f},n.prototype.setHeightValueAtIndex=function(e,f,n){var o=this.data;o[e][f]=n,this.clearCachedConvexTrianglePillar(e,f,!1),e>0&&(this.clearCachedConvexTrianglePillar(e-1,f,!0),this.clearCachedConvexTrianglePillar(e-1,f,!1)),f>0&&(this.clearCachedConvexTrianglePillar(e,f-1,!0),this.clearCachedConvexTrianglePillar(e,f-1,!1)),f>0&&e>0&&this.clearCachedConvexTrianglePillar(e-1,f-1,!0)},n.prototype.getRectMinMax=function(e,f,n,o,d){d=d||[];for(var i=this.data,t=this.minValue,l=e;n>=l;l++)for(var u=f;o>=u;u++){var p=i[l][u];p>t&&(t=p)}d[0]=this.minValue,d[1]=t},n.prototype.getIndexOfPosition=function(e,f,n,o){var d=this.elementSize,i=this.data,t=Math.floor(e/d),l=Math.floor(f/d);return n[0]=t,n[1]=l,o&&(0>t&&(t=0),0>l&&(l=0),t>=i.length-1&&(t=i.length-1),l>=i[0].length-1&&(l=i[0].length-1)),0>t||0>l||t>=i.length-1||l>=i[0].length-1?!1:!0},n.prototype.getHeightAt=function(e,f,n){var o=[];this.getIndexOfPosition(e,f,o,n);var d=[];return this.getRectMinMax(o[0],o[1]+1,o[0],o[1]+1,d),(d[0]+d[1])/2},n.prototype.getCacheConvexTrianglePillarKey=function(e,f,n){return e+\"_\"+f+\"_\"+(n?1:0)},n.prototype.getCachedConvexTrianglePillar=function(e,f,n){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,f,n)]},n.prototype.setCachedConvexTrianglePillar=function(e,f,n,o,d){this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,f,n)]={convex:o,offset:d}},n.prototype.clearCachedConvexTrianglePillar=function(e,f,n){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,f,n)]},n.prototype.getConvexTrianglePillar=function(e,f,n){var o=this.pillarConvex,t=this.pillarOffset;if(this.cacheEnabled){var l=this.getCachedConvexTrianglePillar(e,f,n);if(l)return this.pillarConvex=l.convex,void(this.pillarOffset=l.offset);o=new d,t=new i,this.pillarConvex=o,this.pillarOffset=t}var l=this.data,u=this.elementSize,p=o.faces;o.vertices.length=6;for(var s=0;6>s;s++)o.vertices[s]||(o.vertices[s]=new i);p.length=5;for(var s=0;5>s;s++)p[s]||(p[s]=[]);var y=o.vertices,c=(Math.min(l[e][f],l[e+1][f],l[e][f+1],l[e+1][f+1])-this.minValue)/2+this.minValue;n?(t.set((e+.75)*u,(f+.75)*u,c),y[0].set(.25*u,.25*u,l[e+1][f+1]-c),y[1].set(-.75*u,.25*u,l[e][f+1]-c),y[2].set(.25*u,-.75*u,l[e+1][f]-c),y[3].set(.25*u,.25*u,-c-1),y[4].set(-.75*u,.25*u,-c-1),y[5].set(.25*u,-.75*u,-c-1),p[0][0]=0,p[0][1]=1,p[0][2]=2,p[1][0]=5,p[1][1]=4,p[1][2]=3,p[2][0]=2,p[2][1]=5,p[2][2]=3,p[2][3]=0,p[3][0]=3,p[3][1]=4,p[3][2]=1,p[3][3]=0,p[4][0]=1,p[4][1]=4,p[4][2]=5,p[4][3]=2):(t.set((e+.25)*u,(f+.25)*u,c),y[0].set(-.25*u,-.25*u,l[e][f]-c),y[1].set(.75*u,-.25*u,l[e+1][f]-c),y[2].set(-.25*u,.75*u,l[e][f+1]-c),y[3].set(-.25*u,-.25*u,-c-1),y[4].set(.75*u,-.25*u,-c-1),y[5].set(-.25*u,.75*u,-c-1),p[0][0]=0,p[0][1]=1,p[0][2]=2,p[1][0]=5,p[1][1]=4,p[1][2]=3,p[2][0]=0,p[2][1]=2,p[2][2]=5,p[2][3]=3,p[3][0]=1,p[3][1]=0,p[3][2]=3,p[3][3]=4,p[4][0]=4,p[4][1]=5,p[4][2]=2,p[4][3]=1),o.computeNormals(),o.computeEdges(),o.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(e,f,n,o,t)},n.prototype.calculateLocalInertia=function(e,f){return f=f||new i,f.set(0,0,0),f},n.prototype.volume=function(){return Number.MAX_VALUE},n.prototype.calculateWorldAABB=function(e,f,n,o){n.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),o.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},n.prototype.updateBoundingSphereRadius=function(){var e=this.data,f=this.elementSize;this.boundingSphereRadius=new i(e.length*f,e[0].length*f,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()}},{\"../math/Vec3\":30,\"../utils/Utils\":53,\"./ConvexPolyhedron\":38,\"./Shape\":43}],41:[function(e,f){function n(){o.call(this),this.type=o.types.PARTICLE}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\");n.prototype=new o,n.prototype.constructor=n,n.prototype.calculateLocalInertia=function(e,f){return f=f||new d,f.set(0,0,0),f},n.prototype.volume=function(){return 0},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},n.prototype.calculateWorldAABB=function(e,f,n,o){n.copy(e),o.copy(e)}},{\"../math/Vec3\":30,\"./Shape\":43}],42:[function(e,f){function n(){o.call(this),this.type=o.types.PLANE,this.worldNormal=new d,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\");n.prototype=new o,n.prototype.constructor=n,n.prototype.computeWorldNormal=function(e){var f=this.worldNormal;f.set(0,0,1),e.vmult(f,f),this.worldNormalNeedsUpdate=!1},n.prototype.calculateLocalInertia=function(e,f){return f=f||new d},n.prototype.volume=function(){return Number.MAX_VALUE};var i=new d;n.prototype.calculateWorldAABB=function(e,f,n,o){i.set(0,0,1),f.vmult(i,i);var d=Number.MAX_VALUE;n.set(-d,-d,-d),o.set(d,d,d),1===i.x&&(o.x=e.x),1===i.y&&(o.y=e.y),1===i.z&&(o.z=e.z),-1===i.x&&(n.x=e.x),-1===i.y&&(n.y=e.y),-1===i.z&&(n.z=e.z)},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{\"../math/Vec3\":30,\"./Shape\":43}],43:[function(e,f){function n(){this.id=n.idCounter++,this.type=0,this.boundingSphereRadius=0,this.collisionResponse=!0,this.material=null}f.exports=n;{var n=e(\"./Shape\");e(\"../math/Vec3\"),e(\"../math/Quaternion\"),e(\"../material/Material\")}n.prototype.constructor=n,n.prototype.updateBoundingSphereRadius=function(){throw\"computeBoundingSphereRadius() not implemented for shape type \"+this.type},n.prototype.volume=function(){throw\"volume() not implemented for shape type \"+this.type},n.prototype.calculateLocalInertia=function(){throw\"calculateLocalInertia() not implemented for shape type \"+this.type},n.idCounter=0,n.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Shape\":43}],44:[function(e,f){function n(e){if(o.call(this),this.radius=void 0!==e?Number(e):1,this.type=o.types.SPHERE,this.radius<0)throw new Error(\"The sphere radius cannot be negative.\");this.updateBoundingSphereRadius()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\");n.prototype=new o,n.prototype.constructor=n,n.prototype.calculateLocalInertia=function(e,f){f=f||new d;var n=2*e*this.radius*this.radius/5;return f.x=n,f.y=n,f.z=n,f},n.prototype.volume=function(){return 4*Math.PI*this.radius/3},n.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},n.prototype.calculateWorldAABB=function(e,f,n,o){for(var d=this.radius,i=[\"x\",\"y\",\"z\"],t=0;t<i.length;t++){var l=i[t];n[l]=e[l]-d,o[l]=e[l]+d}}},{\"../math/Vec3\":30,\"./Shape\":43}],45:[function(e,f){function n(e,f){o.call(this),this.type=o.types.TRIMESH,this.vertices=new Float32Array(e),this.indices=new Int16Array(f),this.normals=new Float32Array(f.length),this.aabb=new t,this.edges=null,this.scale=new d(1,1,1),this.tree=new l,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}f.exports=n;var o=e(\"./Shape\"),d=e(\"../math/Vec3\"),i=(e(\"../math/Quaternion\"),e(\"../math/Transform\")),t=e(\"../collision/AABB\"),l=e(\"../utils/Octree\");n.prototype=new o,n.prototype.constructor=n;var u=new d;n.prototype.updateTree=function(){var e=this.tree;e.reset(),e.aabb.copy(this.aabb);var f=this.scale;e.aabb.lowerBound.x*=1/f.x,e.aabb.lowerBound.y*=1/f.y,e.aabb.lowerBound.z*=1/f.z,e.aabb.upperBound.x*=1/f.x,e.aabb.upperBound.y*=1/f.y,e.aabb.upperBound.z*=1/f.z;for(var n=new t,o=new d,i=new d,l=new d,u=[o,i,l],p=0;p<this.indices.length/3;p++){var s=3*p;this._getUnscaledVertex(this.indices[s],o),this._getUnscaledVertex(this.indices[s+1],i),this._getUnscaledVertex(this.indices[s+2],l),n.setFromPoints(u),e.insert(n,p)}e.removeEmptyNodes()};var p=new t;n.prototype.getTrianglesInAABB=function(e,f){p.copy(e);var n=this.scale,o=n.x,d=n.y,i=n.z,t=p.lowerBound,l=p.upperBound;return t.x/=o,t.y/=d,t.z/=i,l.x/=o,l.y/=d,l.z/=i,this.tree.aabbQuery(p,f)},n.prototype.setScale=function(e){var f=this.scale.x===this.scale.y===this.scale.z,n=e.x===e.y===e.z;f&&n||this.updateNormals(),this.scale.copy(e),this.updateAABB(),this.updateBoundingSphereRadius()},n.prototype.updateNormals=function(){for(var e=u,f=this.normals,o=0;o<this.indices.length/3;o++){var d=3*o,i=this.indices[d],t=this.indices[d+1],l=this.indices[d+2];this.getVertex(i,r),this.getVertex(t,w),this.getVertex(l,b),n.computeNormal(w,r,b,e),f[d]=e.x,f[d+1]=e.y,f[d+2]=e.z}},n.prototype.updateEdges=function(){for(var e={},f=function(){var f=i>d?d+\"_\"+i:i+\"_\"+d;e[f]=!0},n=0;n<this.indices.length/3;n++){var o=3*n,d=this.indices[o],i=this.indices[o+1],t=this.indices[o+2];f(d,i),f(i,t),f(t,d)}var l=Object.keys(e);this.edges=new Int16Array(2*l.length);for(var n=0;n<l.length;n++){var u=l[n].split(\"_\");this.edges[2*n]=parseInt(u[0],10),this.edges[2*n+1]=parseInt(u[1],10)}},n.prototype.getEdgeVertex=function(e,f,n){var o=this.edges[2*e+(f?1:0)];this.getVertex(o,n)};var s=new d,y=new d;n.prototype.getEdgeVector=function(e,f){var n=s,o=y;this.getEdgeVertex(e,0,n),this.getEdgeVertex(e,1,o),o.vsub(n,f)};var c=new d,a=new d;n.computeNormal=function(e,f,n,o){f.vsub(e,a),n.vsub(f,c),c.cross(a,o),o.isZero()||o.normalize()};var r=new d,w=new d,b=new d;n.prototype.getVertex=function(e,f){var n=this.scale;return this._getUnscaledVertex(e,f),f.x*=n.x,f.y*=n.y,f.z*=n.z,f},n.prototype._getUnscaledVertex=function(e,f){var n=3*e,o=this.vertices;return f.set(o[n],o[n+1],o[n+2])},n.prototype.getWorldVertex=function(e,f,n,o){return this.getVertex(e,o),i.pointToWorldFrame(f,n,o,o),o},n.prototype.getTriangleVertices=function(e,f,n,o){var d=3*e;this.getVertex(this.indices[d],f),this.getVertex(this.indices[d+1],n),this.getVertex(this.indices[d+2],o)},n.prototype.getNormal=function(e,f){var n=3*e;return f.set(this.normals[n],this.normals[n+1],this.normals[n+2])};var m=new t;n.prototype.calculateLocalInertia=function(e,f){this.computeLocalAABB(m);var n=m.upperBound.x-m.lowerBound.x,o=m.upperBound.y-m.lowerBound.y,d=m.upperBound.z-m.lowerBound.z;return f.set(1/12*e*(2*o*2*o+2*d*2*d),1/12*e*(2*n*2*n+2*d*2*d),1/12*e*(2*o*2*o+2*n*2*n))};var N=new d;n.prototype.computeLocalAABB=function(e){var f=e.lowerBound,n=e.upperBound,o=this.vertices.length,d=(this.vertices,N);this.getVertex(0,d),f.copy(d),n.copy(d);for(var i=0;i!==o;i++)this.getVertex(i,d),d.x<f.x?f.x=d.x:d.x>n.x&&(n.x=d.x),d.y<f.y?f.y=d.y:d.y>n.y&&(n.y=d.y),d.z<f.z?f.z=d.z:d.z>n.z&&(n.z=d.z)},n.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},n.prototype.updateBoundingSphereRadius=function(){for(var e=0,f=this.vertices,n=new d,o=0,i=f.length/3;o!==i;o++){this.getVertex(o,n);var t=n.norm2();t>e&&(e=t)}this.boundingSphereRadius=Math.sqrt(e)};var g=(new d,new i),x=new t;n.prototype.calculateWorldAABB=function(e,f,n,o){var d=g,i=x;d.position=e,d.quaternion=f,this.aabb.toWorldFrame(d,i),n.copy(i.lowerBound),o.copy(i.upperBound)},n.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},n.createTorus=function(e,f,o,d,i){e=e||1,f=f||.5,o=o||8,d=d||6,i=i||2*Math.PI;for(var t=[],l=[],u=0;o>=u;u++)for(var p=0;d>=p;p++){var s=p/d*i,y=u/o*Math.PI*2,c=(e+f*Math.cos(y))*Math.cos(s),a=(e+f*Math.cos(y))*Math.sin(s),r=f*Math.sin(y);t.push(c,a,r)}for(var u=1;o>=u;u++)for(var p=1;d>=p;p++){var w=(d+1)*u+p-1,b=(d+1)*(u-1)+p-1,m=(d+1)*(u-1)+p,N=(d+1)*u+p;l.push(w,b,N),l.push(b,m,N)}return new n(t,l)}},{\"../collision/AABB\":3,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Octree\":50,\"./Shape\":43}],46:[function(e,f){function n(){o.call(this),this.iterations=10,this.tolerance=1e-7}f.exports=n;var o=(e(\"../math/Vec3\"),e(\"../math/Quaternion\"),e(\"./Solver\"));n.prototype=new o;var d=[],i=[],t=[];n.prototype.solve=function(e,f){var n,o,l,u,p,s,y=0,c=this.iterations,a=this.tolerance*this.tolerance,r=this.equations,w=r.length,b=f.bodies,m=b.length,N=e;if(0!==w)for(var g=0;g!==m;g++)b[g].updateSolveMassProperties();var x=i,j=t,v=d;\nx.length=w,j.length=w,v.length=w;for(var g=0;g!==w;g++){var A=r[g];v[g]=0,j[g]=A.computeB(N),x[g]=1/A.computeC()}if(0!==w){for(var g=0;g!==m;g++){var C=b[g],O=C.vlambda,h=C.wlambda;O.set(0,0,0),h&&h.set(0,0,0)}for(y=0;y!==c;y++){u=0;for(var k=0;k!==w;k++){var A=r[k];n=j[k],o=x[k],s=v[k],p=A.computeGWlambda(),l=o*(n-p-A.eps*s),s+l<A.minForce?l=A.minForce-s:s+l>A.maxForce&&(l=A.maxForce-s),v[k]+=l,u+=l>0?l:-l,A.addToWlambda(l)}if(a>u*u)break}for(var g=0;g!==m;g++){var C=b[g],q=C.velocity,z=C.angularVelocity;q.vadd(C.vlambda,q),z&&z.vadd(C.wlambda,z)}}return y}},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Solver\":47}],47:[function(e,f){function n(){this.equations=[]}f.exports=n,n.prototype.solve=function(){return 0},n.prototype.addEquation=function(e){e.enabled&&this.equations.push(e)},n.prototype.removeEquation=function(e){var f=this.equations,n=f.indexOf(e);-1!==n&&f.splice(n,1)},n.prototype.removeAllEquations=function(){this.equations.length=0}},{}],48:[function(e,f){function n(e){for(l.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=e,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}function o(e){for(var f=e.length,n=0;n!==f;n++){var o=e[n];if(!(o.visited||o.body.type&c))return o}return!1}function d(e,f,n,d){for(a.push(e),e.visited=!0,f(e,n,d);a.length;)for(var i,t=a.pop();i=o(t.children);)i.visited=!0,f(i,n,d),a.push(i)}function i(e,f,n){f.push(e.body);for(var o=e.eqs.length,d=0;d!==o;d++){var i=e.eqs[d];-1===n.indexOf(i)&&n.push(i)}}function t(e,f){return f.id-e.id}f.exports=n;var l=(e(\"../math/Vec3\"),e(\"../math/Quaternion\"),e(\"./Solver\")),u=e(\"../objects/Body\");n.prototype=new l;var p=[],s=[],y={bodies:[]},c=u.STATIC,a=[];n.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},n.prototype.solve=function(e,f){for(var n=p,l=this.nodePool,u=f.bodies,c=this.equations,a=c.length,r=u.length,w=this.subsolver;l.length<r;)l.push(this.createNode());n.length=r;for(var b=0;r>b;b++)n[b]=l[b];for(var b=0;b!==r;b++){var m=n[b];m.body=u[b],m.children.length=0,m.eqs.length=0,m.visited=!1}for(var N=0;N!==a;N++){var g=c[N],b=u.indexOf(g.bi),x=u.indexOf(g.bj),j=n[b],v=n[x];j.children.push(v),j.eqs.push(g),v.children.push(j),v.eqs.push(g)}var A,C=0,O=s;w.tolerance=this.tolerance,w.iterations=this.iterations;for(var h=y;A=o(n);){O.length=0,h.bodies.length=0,d(A,i,h.bodies,O);var k=O.length;O=O.sort(t);for(var b=0;b!==k;b++)w.addEquation(O[b]);{w.solve(e,h)}w.removeAllEquations(),C++}return C}},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"./Solver\":47}],49:[function(e,f){var n=function(){};f.exports=n,n.prototype={constructor:n,addEventListener:function(e,f){void 0===this._listeners&&(this._listeners={});var n=this._listeners;return void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(f)&&n[e].push(f),this},hasEventListener:function(e,f){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(f)?!0:!1},removeEventListener:function(e,f){if(void 0===this._listeners)return this;var n=this._listeners;if(void 0===n[e])return this;var o=n[e].indexOf(f);return-1!==o&&n[e].splice(o,1),this},dispatchEvent:function(e){if(void 0===this._listeners)return this;var f=this._listeners,n=f[e.type];if(void 0!==n){e.target=this;for(var o=0,d=n.length;d>o;o++)n[o].call(this,e)}return this}}},{}],50:[function(e,f){function n(e){e=e||{},this.root=e.root||null,this.aabb=e.aabb?e.aabb.clone():new d,this.data=[],this.children=[]}function o(e,f){f=f||{},f.root=null,f.aabb=e,n.call(this,f),this.maxDepth=\"undefined\"!=typeof f.maxDepth?f.maxDepth:8}var d=e(\"../collision/AABB\"),i=e(\"../math/Vec3\");f.exports=o,o.prototype=new n,n.prototype.reset=function(){this.children.length=this.data.length=0},n.prototype.insert=function(e,f,n){var o=this.data;if(n=n||0,!this.aabb.contains(e))return!1;var d=this.children;if(n<(this.maxDepth||this.root.maxDepth)){var i=!1;d.length||(this.subdivide(),i=!0);for(var t=0;8!==t;t++)if(d[t].insert(e,f,n+1))return!0;i&&(d.length=0)}return o.push(f),!0};var t=new i;n.prototype.subdivide=function(){var e=this.aabb,f=e.lowerBound,o=e.upperBound,l=this.children;l.push(new n({aabb:new d({lowerBound:new i(0,0,0)})}),new n({aabb:new d({lowerBound:new i(1,0,0)})}),new n({aabb:new d({lowerBound:new i(1,1,0)})}),new n({aabb:new d({lowerBound:new i(1,1,1)})}),new n({aabb:new d({lowerBound:new i(0,1,1)})}),new n({aabb:new d({lowerBound:new i(0,0,1)})}),new n({aabb:new d({lowerBound:new i(1,0,1)})}),new n({aabb:new d({lowerBound:new i(0,1,0)})})),o.vsub(f,t),t.scale(.5,t);for(var u=this.root||this,p=0;8!==p;p++){var s=l[p];s.root=u;var y=s.aabb.lowerBound;y.x*=t.x,y.y*=t.y,y.z*=t.z,y.vadd(f,y),y.vadd(t,s.aabb.upperBound)}},n.prototype.aabbQuery=function(e,f){for(var n=(this.data,this.children,[this]);n.length;){var o=n.pop();o.aabb.overlaps(e)&&Array.prototype.push.apply(f,o.data),Array.prototype.push.apply(n,o.children)}return f};var l=new d;n.prototype.rayQuery=function(e,f,n){return e.getAABB(l),l.toLocalFrame(f,l),this.aabbQuery(l,n),n},n.prototype.removeEmptyNodes=function(){for(var e=[this];e.length;){for(var f=e.pop(),n=f.children.length-1;n>=0;n--)f.children[n].data.length||f.children.splice(n,1);Array.prototype.push.apply(e,f.children)}}},{\"../collision/AABB\":3,\"../math/Vec3\":30}],51:[function(e,f){function n(){this.objects=[],this.type=Object}f.exports=n,n.prototype.release=function(){for(var e=arguments.length,f=0;f!==e;f++)this.objects.push(arguments[f])},n.prototype.get=function(){return 0===this.objects.length?this.constructObject():this.objects.pop()},n.prototype.constructObject=function(){throw new Error(\"constructObject() not implemented in this Pool subclass yet!\")}},{}],52:[function(e,f){function n(){this.data={keys:[]}}f.exports=n,n.prototype.get=function(e,f){if(e>f){var n=f;f=e,e=n}return this.data[e+\"-\"+f]},n.prototype.set=function(e,f,n){if(e>f){var o=f;f=e,e=o}var d=e+\"-\"+f;this.get(e,f)||this.data.keys.push(d),this.data[d]=n},n.prototype.reset=function(){for(var e=this.data,f=e.keys;f.length>0;){var n=f.pop();delete e[n]}}},{}],53:[function(e,f){function n(){}f.exports=n,n.defaults=function(e,f){e=e||{};for(var n in f)n in e||(e[n]=f[n]);return e}},{}],54:[function(e,f){function n(){d.call(this),this.type=o}f.exports=n;var o=e(\"../math/Vec3\"),d=e(\"./Pool\");n.prototype=new d,n.prototype.constructObject=function(){return new o}},{\"../math/Vec3\":30,\"./Pool\":51}],55:[function(e,f){function n(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new s,this.world=e,this.currentContactMaterial=null,this.enableFrictionReduction=!1}function o(e,f,n){for(var o=null,d=e.length,i=0;i!==d;i++){var t=e[i],l=M;e[(i+1)%d].vsub(t,l);var u=P;l.cross(f,u);var p=Q;n.vsub(t,p);var s=u.dot(p);if(!(null===o||s>0&&o===!0||0>=s&&o===!1))return!1;null===o&&(o=s>0)}return!0}f.exports=n;var d=e(\"../collision/AABB\"),i=e(\"../shapes/Shape\"),t=e(\"../collision/Ray\"),l=e(\"../math/Vec3\"),u=e(\"../math/Transform\"),p=(e(\"../shapes/ConvexPolyhedron\"),e(\"../math/Quaternion\")),s=(e(\"../solver/Solver\"),e(\"../utils/Vec3Pool\")),y=e(\"../equations/ContactEquation\"),c=e(\"../equations/FrictionEquation\");n.prototype.createContactEquation=function(e,f,n,o,d,i){var t;this.contactPointPool.length?(t=this.contactPointPool.pop(),t.bi=e,t.bj=f):t=new y(e,f),t.enabled=e.collisionResponse&&f.collisionResponse&&n.collisionResponse&&o.collisionResponse;var l=this.currentContactMaterial;t.restitution=l.restitution,t.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);var u=n.material||e.material,p=o.material||f.material;return u&&p&&u.restitution>=0&&p.restitution>=0&&(t.restitution=u.restitution*p.restitution),t.si=d||n,t.sj=i||o,t},n.prototype.createFrictionEquationsFromContact=function(e,f){var n=e.bi,o=e.bj,d=e.si,i=e.sj,t=this.world,l=this.currentContactMaterial,u=l.friction,p=d.material||n.material,s=i.material||o.material;if(p&&s&&p.friction>=0&&s.friction>=0&&(u=p.friction*s.friction),u>0){var y=u*t.gravity.length(),a=n.invMass+o.invMass;a>0&&(a=1/a);var r=this.frictionEquationPool,w=r.length?r.pop():new c(n,o,y*a),b=r.length?r.pop():new c(n,o,y*a);return w.bi=b.bi=n,w.bj=b.bj=o,w.minForce=b.minForce=-y*a,w.maxForce=b.maxForce=y*a,w.ri.copy(e.ri),w.rj.copy(e.rj),b.ri.copy(e.ri),b.rj.copy(e.rj),e.ni.tangents(w.t,b.t),w.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,t.dt),b.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,t.dt),w.enabled=b.enabled=e.enabled,f.push(w,b),!0}return!1};var a=new l,r=new l,w=new l;n.prototype.createFrictionFromAverage=function(e){var f=this.result[this.result.length-1];if(this.createFrictionEquationsFromContact(f,this.frictionResult)&&1!==e){var n=this.frictionResult[this.frictionResult.length-2],o=this.frictionResult[this.frictionResult.length-1];a.setZero(),r.setZero(),w.setZero();for(var d=f.bi,i=(f.bj,0);i!==e;i++)f=this.result[this.result.length-1-i],f.bodyA!==d?(a.vadd(f.ni,a),r.vadd(f.ri,r),w.vadd(f.rj,w)):(a.vsub(f.ni,a),r.vadd(f.rj,r),w.vadd(f.ri,w));var t=1/e;r.scale(t,n.ri),w.scale(t,n.rj),o.ri.copy(n.ri),o.rj.copy(n.rj),a.normalize(),a.tangents(n.t,o.t)}};var b=new l,m=new l,N=new p,g=new p;n.prototype.getContacts=function(e,f,n,o,d,i,t){this.contactPointPool=d,this.frictionEquationPool=t,this.result=o,this.frictionResult=i;for(var l=N,u=g,p=b,s=m,y=0,c=e.length;y!==c;y++){var a=e[y],r=f[y],w=null;a.material&&r.material&&(w=n.getContactMaterial(a.material,r.material)||null);for(var x=0;x<a.shapes.length;x++){a.quaternion.mult(a.shapeOrientations[x],l),a.quaternion.vmult(a.shapeOffsets[x],p),p.vadd(a.position,p);for(var j=a.shapes[x],v=0;v<r.shapes.length;v++){r.quaternion.mult(r.shapeOrientations[v],u),r.quaternion.vmult(r.shapeOffsets[v],s),s.vadd(r.position,s);var A=r.shapes[v];if(!(p.distanceTo(s)>j.boundingSphereRadius+A.boundingSphereRadius)){var C=null;j.material&&A.material&&(C=n.getContactMaterial(j.material,A.material)||null),this.currentContactMaterial=C||w||n.defaultContactMaterial;var O=this[j.type|A.type];O&&(j.type<A.type?O.call(this,j,A,p,s,l,u,a,r,j,A):O.call(this,A,j,s,p,u,l,r,a,j,A))}}}}};n.prototype[i.types.BOX|i.types.BOX]=n.prototype.boxBox=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,f.convexPolyhedronRepresentation.material=f.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,f.convexPolyhedronRepresentation.collisionResponse=f.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,f.convexPolyhedronRepresentation,n,o,d,i,t,l,e,f)},n.prototype[i.types.BOX|i.types.CONVEXPOLYHEDRON]=n.prototype.boxConvex=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,f,n,o,d,i,t,l,e,f)},n.prototype[i.types.BOX|i.types.PARTICLE]=n.prototype.boxParticle=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,f,n,o,d,i,t,l,e,f)},n.prototype[i.types.SPHERE]=n.prototype.sphereSphere=function(e,f,n,o,d,i,t,l){var u=this.createContactEquation(t,l,e,f);o.vsub(n,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.mult(e.radius,u.ri),u.rj.mult(-f.radius,u.rj),u.ri.vadd(n,u.ri),u.ri.vsub(t.position,u.ri),u.rj.vadd(o,u.rj),u.rj.vsub(l.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)};var x=new l,j=new l,v=new l;n.prototype[i.types.PLANE|i.types.TRIMESH]=n.prototype.planeTrimesh=function(e,f,n,o,d,i,t,p){var s=new l,y=x;y.set(0,0,1),d.vmult(y,y);for(var c=0;c<f.vertices.length/3;c++){f.getVertex(c,s);var a=new l;a.copy(s),u.pointToWorldFrame(o,i,a,s);var r=j;s.vsub(n,r);var w=y.dot(r);if(0>=w){var b=this.createContactEquation(t,p,e,f);b.ni.copy(y);var m=v;y.scale(r.dot(y),m),s.vsub(m,m),b.ri.copy(m),b.ri.vsub(t.position,b.ri),b.rj.copy(s),b.rj.vsub(p.position,b.rj),this.result.push(b),this.createFrictionEquationsFromContact(b,this.frictionResult)}}};var A=new l,C=new l,O=(new l,new l),h=new l,k=new l,q=new l,z=new l,B=new l,D=new l,E=new l,F=new l,G=new l,H=new l,I=new d,J=[];n.prototype[i.types.SPHERE|i.types.TRIMESH]=n.prototype.sphereTrimesh=function(e,f,n,o,d,i,l,p){var s=k,y=q,c=z,a=B,r=D,w=E,b=I,m=h,N=C,g=J;u.pointToLocalFrame(o,i,n,r);var x=e.radius;b.lowerBound.set(r.x-x,r.y-x,r.z-x),b.upperBound.set(r.x+x,r.y+x,r.z+x),f.getTrianglesInAABB(b,g);for(var j=O,v=e.radius*e.radius,K=0;K<g.length;K++)for(var L=0;3>L;L++)if(f.getVertex(f.indices[3*g[K]+L],j),j.vsub(r,N),N.norm2()<=v){m.copy(j),u.pointToWorldFrame(o,i,m,j),j.vsub(n,N);var M=this.createContactEquation(l,p,e,f);M.ni.copy(N),M.ni.normalize(),M.ri.copy(M.ni),M.ri.scale(e.radius,M.ri),M.ri.vadd(n,M.ri),M.ri.vsub(l.position,M.ri),M.rj.copy(j),M.rj.vsub(p.position,M.rj),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult)}for(var K=0;K<g.length;K++)for(var L=0;3>L;L++){f.getVertex(f.indices[3*g[K]+L],s),f.getVertex(f.indices[3*g[K]+(L+1)%3],y),y.vsub(s,c),r.vsub(y,w);var P=w.dot(c);r.vsub(s,w);var Q=w.dot(c);if(Q>0&&0>P){r.vsub(s,w),a.copy(c),a.normalize(),Q=w.dot(a),a.scale(Q,w),w.vadd(s,w);var R=w.distanceTo(r);if(R<e.radius){var M=this.createContactEquation(l,p,e,f);w.vsub(r,M.ni),M.ni.normalize(),M.ni.scale(e.radius,M.ri),u.pointToWorldFrame(o,i,w,w),w.vsub(p.position,M.rj),u.vectorToWorldFrame(i,M.ni,M.ni),u.vectorToWorldFrame(i,M.ri,M.ri),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult)}}}for(var S=F,T=G,U=H,V=A,K=0,W=g.length;K!==W;K++){f.getTriangleVertices(g[K],S,T,U),f.getNormal(g[K],V),r.vsub(S,w);var R=w.dot(V);if(V.scale(R,w),r.vsub(w,w),R=w.distanceTo(r),t.pointInTriangle(w,S,T,U)&&R<e.radius){var M=this.createContactEquation(l,p,e,f);w.vsub(r,M.ni),M.ni.normalize(),M.ni.scale(e.radius,M.ri),u.pointToWorldFrame(o,i,w,w),w.vsub(p.position,M.rj),u.vectorToWorldFrame(i,M.ni,M.ni),u.vectorToWorldFrame(i,M.ri,M.ri),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult)}}g.length=0};var K=new l,L=new l;n.prototype[i.types.SPHERE|i.types.PLANE]=n.prototype.spherePlane=function(e,f,n,o,d,i,t,l){var u=this.createContactEquation(t,l,e,f);if(u.ni.set(0,0,1),i.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.mult(e.radius,u.ri),n.vsub(o,K),u.ni.mult(u.ni.dot(K),L),K.vsub(L,u.rj),-K.dot(u.ni)<=e.radius){var p=u.ri,s=u.rj;p.vadd(n,p),p.vsub(t.position,p),s.vadd(o,s),s.vsub(l.position,s),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}};var M=new l,P=new l,Q=new l,R=new l,S=new l,T=new l,U=new l,V=[new l,new l,new l,new l,new l,new l],W=new l,X=new l,Y=new l,Z=new l;n.prototype[i.types.SPHERE|i.types.BOX]=n.prototype.sphereBox=function(e,f,n,o,d,i,t,l){var u=this.v3pool,p=V;n.vsub(o,R),f.getSideNormals(p,i);for(var s=e.radius,y=!1,c=X,a=Y,r=Z,w=null,b=0,m=0,N=0,g=null,x=0,j=p.length;x!==j&&y===!1;x++){var v=S;v.copy(p[x]);var A=v.norm();v.normalize();var C=R.dot(v);if(A+s>C&&C>0){var O=T,h=U;O.copy(p[(x+1)%3]),h.copy(p[(x+2)%3]);var k=O.norm(),q=h.norm();O.normalize(),h.normalize();var z=R.dot(O),B=R.dot(h);if(k>z&&z>-k&&q>B&&B>-q){var D=Math.abs(C-A-s);(null===g||g>D)&&(g=D,m=z,N=B,w=A,c.copy(v),a.copy(O),r.copy(h),b++)}}}if(b){y=!0;var E=this.createContactEquation(t,l,e,f);c.mult(-s,E.ri),E.ni.copy(c),E.ni.negate(E.ni),c.mult(w,c),a.mult(m,a),c.vadd(a,c),r.mult(N,r),c.vadd(r,E.rj),E.ri.vadd(n,E.ri),E.ri.vsub(t.position,E.ri),E.rj.vadd(o,E.rj),E.rj.vsub(l.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}for(var F=u.get(),G=W,H=0;2!==H&&!y;H++)for(var I=0;2!==I&&!y;I++)for(var J=0;2!==J&&!y;J++)if(F.set(0,0,0),H?F.vadd(p[0],F):F.vsub(p[0],F),I?F.vadd(p[1],F):F.vsub(p[1],F),J?F.vadd(p[2],F):F.vsub(p[2],F),o.vadd(F,G),G.vsub(n,G),G.norm2()<s*s){y=!0;var E=this.createContactEquation(t,l,e,f);E.ri.copy(G),E.ri.normalize(),E.ni.copy(E.ri),E.ri.mult(s,E.ri),E.rj.copy(F),E.ri.vadd(n,E.ri),E.ri.vsub(t.position,E.ri),E.rj.vadd(o,E.rj),E.rj.vsub(l.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}u.release(F),F=null;for(var K=u.get(),L=u.get(),E=u.get(),M=u.get(),D=u.get(),P=p.length,H=0;H!==P&&!y;H++)for(var I=0;I!==P&&!y;I++)if(H%3!==I%3){p[I].cross(p[H],K),K.normalize(),p[H].vadd(p[I],L),E.copy(n),E.vsub(L,E),E.vsub(o,E);var Q=E.dot(K);K.mult(Q,M);for(var J=0;J===H%3||J===I%3;)J++;D.copy(n),D.vsub(M,D),D.vsub(L,D),D.vsub(o,D);var $=Math.abs(Q),_=D.norm();if($<p[J].norm()&&s>_){y=!0;var ef=this.createContactEquation(t,l,e,f);L.vadd(M,ef.rj),ef.rj.copy(ef.rj),D.negate(ef.ni),ef.ni.normalize(),ef.ri.copy(ef.rj),ef.ri.vadd(o,ef.ri),ef.ri.vsub(n,ef.ri),ef.ri.normalize(),ef.ri.mult(s,ef.ri),ef.ri.vadd(n,ef.ri),ef.ri.vsub(t.position,ef.ri),ef.rj.vadd(o,ef.rj),ef.rj.vsub(l.position,ef.rj),this.result.push(ef),this.createFrictionEquationsFromContact(ef,this.frictionResult)}}u.release(K,L,E,M,D)};var $=new l,_=new l,ef=new l,ff=new l,nf=new l,of=new l,df=new l,tf=new l,lf=new l,uf=new l;n.prototype[i.types.SPHERE|i.types.CONVEXPOLYHEDRON]=n.prototype.sphereConvex=function(e,f,n,d,i,t,l,u){var p=this.v3pool;n.vsub(d,$);for(var s=f.faceNormals,y=f.faces,c=f.vertices,a=e.radius,r=0;r!==c.length;r++){var w=c[r],b=nf;t.vmult(w,b),d.vadd(b,b);var m=ff;if(b.vsub(n,m),m.norm2()<a*a){g=!0;var N=this.createContactEquation(l,u,e,f);return N.ri.copy(m),N.ri.normalize(),N.ni.copy(N.ri),N.ri.mult(a,N.ri),b.vsub(d,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(l.position,N.ri),N.rj.vadd(d,N.rj),N.rj.vsub(u.position,N.rj),this.result.push(N),void this.createFrictionEquationsFromContact(N,this.frictionResult)}}for(var g=!1,r=0,x=y.length;r!==x&&g===!1;r++){var j=s[r],v=y[r],A=of;t.vmult(j,A);var C=df;t.vmult(c[v[0]],C),C.vadd(d,C);var O=tf;A.mult(-a,O),n.vadd(O,O);var h=lf;O.vsub(C,h);var k=h.dot(A),q=uf;if(n.vsub(C,q),0>k&&q.dot(A)>0){for(var z=[],B=0,D=v.length;B!==D;B++){var E=p.get();t.vmult(c[v[B]],E),d.vadd(E,E),z.push(E)}if(o(z,A,n)){g=!0;var N=this.createContactEquation(l,u,e,f);A.mult(-a,N.ri),A.negate(N.ni);var F=p.get();A.mult(-k,F);var G=p.get();A.mult(-a,G),n.vsub(d,N.rj),N.rj.vadd(G,N.rj),N.rj.vadd(F,N.rj),N.rj.vadd(d,N.rj),N.rj.vsub(u.position,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(l.position,N.ri),p.release(F),p.release(G),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult);for(var B=0,H=z.length;B!==H;B++)p.release(z[B]);return}for(var B=0;B!==v.length;B++){var I=p.get(),J=p.get();t.vmult(c[v[(B+1)%v.length]],I),t.vmult(c[v[(B+2)%v.length]],J),d.vadd(I,I),d.vadd(J,J);var K=_;J.vsub(I,K);var L=ef;K.unit(L);var M=p.get(),P=p.get();n.vsub(I,P);var Q=P.dot(L);L.mult(Q,M),M.vadd(I,M);var R=p.get();if(M.vsub(n,R),Q>0&&Q*Q<K.norm2()&&R.norm2()<a*a){var N=this.createContactEquation(l,u,e,f);M.vsub(d,N.rj),M.vsub(n,N.ni),N.ni.normalize(),N.ni.mult(a,N.ri),N.rj.vadd(d,N.rj),N.rj.vsub(u.position,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(l.position,N.ri),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult);for(var B=0,H=z.length;B!==H;B++)p.release(z[B]);return p.release(I),p.release(J),p.release(M),p.release(R),void p.release(P)}p.release(I),p.release(J),p.release(M),p.release(R),p.release(P)}for(var B=0,H=z.length;B!==H;B++)p.release(z[B])}}};new l,new l;n.prototype[i.types.PLANE|i.types.BOX]=n.prototype.planeBox=function(e,f,n,o,d,i,t,l){f.convexPolyhedronRepresentation.material=f.material,f.convexPolyhedronRepresentation.collisionResponse=f.collisionResponse,this.planeConvex(e,f.convexPolyhedronRepresentation,n,o,d,i,t,l)};var pf=new l,sf=new l,yf=new l,cf=new l;n.prototype[i.types.PLANE|i.types.CONVEXPOLYHEDRON]=n.prototype.planeConvex=function(e,f,n,o,d,i,t,l){var u=pf,p=sf;p.set(0,0,1),d.vmult(p,p);for(var s=0,y=yf,c=0;c!==f.vertices.length;c++){u.copy(f.vertices[c]),i.vmult(u,u),o.vadd(u,u),u.vsub(n,y);var a=p.dot(y);if(0>=a){var r=this.createContactEquation(t,l,e,f),w=cf;p.mult(p.dot(y),w),u.vsub(w,w),w.vsub(n,r.ri),r.ni.copy(p),u.vsub(o,r.rj),r.ri.vadd(n,r.ri),r.ri.vsub(t.position,r.ri),r.rj.vadd(o,r.rj),r.rj.vsub(l.position,r.rj),this.result.push(r),s++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(r,this.frictionResult)}}this.enableFrictionReduction&&s&&this.createFrictionFromAverage(s)};var af=new l,rf=new l;n.prototype[i.types.CONVEXPOLYHEDRON]=n.prototype.convexConvex=function(e,f,n,o,d,i,t,l,u,p,s,y){var c=af;if(!(n.distanceTo(o)>e.boundingSphereRadius+f.boundingSphereRadius)&&e.findSeparatingAxis(f,n,d,o,i,c,s,y)){var a=[],r=rf;e.clipAgainstHull(n,d,f,o,i,c,-100,100,a);for(var w=0,b=0;b!==a.length;b++){var m=this.createContactEquation(t,l,e,f,u,p),N=m.ri,g=m.rj;c.negate(m.ni),a[b].normal.negate(r),r.mult(a[b].depth,r),a[b].point.vadd(r,N),g.copy(a[b].point),N.vsub(n,N),g.vsub(o,g),N.vadd(n,N),N.vsub(t.position,N),g.vadd(o,g),g.vsub(l.position,g),this.result.push(m),w++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(m,this.frictionResult)}this.enableFrictionReduction&&w&&this.createFrictionFromAverage(w)}};var wf=new l,bf=new l,mf=new l;n.prototype[i.types.PLANE|i.types.PARTICLE]=n.prototype.planeParticle=function(e,f,n,o,d,i,t,l){var u=wf;u.set(0,0,1),t.quaternion.vmult(u,u);var p=bf;o.vsub(t.position,p);var s=u.dot(p);if(0>=s){var y=this.createContactEquation(l,t,f,e);y.ni.copy(u),y.ni.negate(y.ni),y.ri.set(0,0,0);var c=mf;u.mult(u.dot(o),c),o.vsub(c,c),y.rj.copy(c),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}};var Nf=new l;n.prototype[i.types.PARTICLE|i.types.SPHERE]=n.prototype.sphereParticle=function(e,f,n,o,d,i,t,l){var u=Nf;u.set(0,0,1),o.vsub(n,u);var p=u.norm2();if(p<=e.radius*e.radius){var s=this.createContactEquation(l,t,f,e);u.normalize(),s.rj.copy(u),s.rj.mult(e.radius,s.rj),s.ni.copy(u),s.ni.negate(s.ni),s.ri.set(0,0,0),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}};var gf=new p,xf=new l,jf=(new l,new l),vf=new l,Af=new l;n.prototype[i.types.PARTICLE|i.types.CONVEXPOLYHEDRON]=n.prototype.convexParticle=function(e,f,n,o,d,i,t,l){var u=-1,p=jf,s=Af,y=null,c=0,a=xf;if(a.copy(o),a.vsub(n,a),d.conjugate(gf),gf.vmult(a,a),e.pointIsInside(a)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(n,d),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(d);for(var r=0,w=e.faces.length;r!==w;r++){var b=[e.worldVertices[e.faces[r][0]]],m=e.worldFaceNormals[r];o.vsub(b[0],vf);var N=-m.dot(vf);(null===y||Math.abs(N)<Math.abs(y))&&(y=N,u=r,p.copy(m),c++)}if(-1!==u){var g=this.createContactEquation(l,t,f,e);p.mult(y,s),s.vadd(o,s),s.vsub(n,s),g.rj.copy(s),p.negate(g.ni),g.ri.set(0,0,0);var x=g.ri,j=g.rj;x.vadd(o,x),x.vsub(l.position,x),j.vadd(n,j),j.vsub(t.position,j),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}else console.warn(\"Point found inside convex, but did not find penetrating face!\")}},n.prototype[i.types.BOX|i.types.HEIGHTFIELD]=n.prototype.boxHeightfield=function(e,f,n,o,d,i,t,l){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,f,n,o,d,i,t,l)};var Cf=new l,Of=new l,hf=[0];n.prototype[i.types.CONVEXPOLYHEDRON|i.types.HEIGHTFIELD]=n.prototype.convexHeightfield=function(e,f,n,o,d,i,t,l){var p=f.data,s=f.elementSize,y=e.boundingSphereRadius,c=Of,a=hf,r=Cf;u.pointToLocalFrame(o,i,n,r);var w=Math.floor((r.x-y)/s)-1,b=Math.ceil((r.x+y)/s)+1,m=Math.floor((r.y-y)/s)-1,N=Math.ceil((r.y+y)/s)+1;if(!(0>b||0>N||w>p.length||m>p[0].length)){0>w&&(w=0),0>b&&(b=0),0>m&&(m=0),0>N&&(N=0),w>=p.length&&(w=p.length-1),b>=p.length&&(b=p.length-1),N>=p[0].length&&(N=p[0].length-1),m>=p[0].length&&(m=p[0].length-1);var g=[];f.getRectMinMax(w,m,b,N,g);var x=g[0],j=g[1];if(!(r.z-y>j||r.z+y<x))for(var v=w;b>v;v++)for(var A=m;N>A;A++)f.getConvexTrianglePillar(v,A,!1),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.convexConvex(e,f.pillarConvex,n,c,d,i,t,l,null,null,a,null),f.getConvexTrianglePillar(v,A,!0),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.convexConvex(e,f.pillarConvex,n,c,d,i,t,l,null,null,a,null)}};var kf=new l,qf=new l;n.prototype[i.types.SPHERE|i.types.HEIGHTFIELD]=n.prototype.sphereHeightfield=function(e,f,n,o,d,i,t,l){var p=f.data,s=e.radius,y=f.elementSize,c=qf,a=kf;u.pointToLocalFrame(o,i,n,a);var r=Math.floor((a.x-s)/y)-1,w=Math.ceil((a.x+s)/y)+1,b=Math.floor((a.y-s)/y)-1,m=Math.ceil((a.y+s)/y)+1;if(!(0>w||0>m||r>p.length||m>p[0].length)){0>r&&(r=0),0>w&&(w=0),0>b&&(b=0),0>m&&(m=0),r>=p.length&&(r=p.length-1),w>=p.length&&(w=p.length-1),m>=p[0].length&&(m=p[0].length-1),b>=p[0].length&&(b=p[0].length-1);var N=[];f.getRectMinMax(r,b,w,m,N);var g=N[0],x=N[1];if(!(a.z-s>x||a.z+s<g))for(var j=this.result,v=r;w>v;v++)for(var A=b;m>A;A++){var C=j.length;f.getConvexTrianglePillar(v,A,!1),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.sphereConvex(e,f.pillarConvex,n,c,d,i,t,l),f.getConvexTrianglePillar(v,A,!0),u.pointToWorldFrame(o,i,f.pillarOffset,c),n.distanceTo(c)<f.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&this.sphereConvex(e,f.pillarConvex,n,c,d,i,t,l);var O=j.length-C;if(O>2)return}}}},{\"../collision/AABB\":3,\"../collision/Ray\":9,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43,\"../solver/Solver\":47,\"../utils/Vec3Pool\":54}],56:[function(e,f){function n(){u.apply(this),this.dt=-1,this.allowSleep=!1,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=0,this.quatNormalizeFast=!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new d,this.broadphase=new m,this.bodies=[],this.solver=new t,this.constraints=[],this.narrowphase=new l(this),this.collisionMatrix=new p,this.collisionMatrixPrevious=new p,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new a,this.defaultMaterial=new s(\"default\"),this.defaultContactMaterial=new y(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.subsystems=[],this.addBodyEvent={type:\"addBody\",body:null},this.removeBodyEvent={type:\"removeBody\",body:null}}f.exports=n;var o=e(\"../shapes/Shape\"),d=e(\"../math/Vec3\"),i=e(\"../math/Quaternion\"),t=e(\"../solver/GSSolver\"),l=(e(\"../utils/Vec3Pool\"),e(\"../equations/ContactEquation\"),e(\"../equations/FrictionEquation\"),e(\"./Narrowphase\")),u=e(\"../utils/EventTarget\"),p=e(\"../collision/ArrayCollisionMatrix\"),s=e(\"../material/Material\"),y=e(\"../material/ContactMaterial\"),c=e(\"../objects/Body\"),a=e(\"../utils/TupleDictionary\"),r=e(\"../collision/RaycastResult\"),w=e(\"../collision/AABB\"),b=e(\"../collision/Ray\"),m=e(\"../collision/NaiveBroadphase\");n.prototype=new u;var N=(new w,new b);if(n.prototype.getContactMaterial=function(e,f){return this.contactMaterialTable.get(e.id,f.id)},n.prototype.numObjects=function(){return this.bodies.length},n.prototype.collisionMatrixTick=function(){var e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset()},n.prototype.add=n.prototype.addBody=function(e){-1===this.bodies.indexOf(e)&&(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof c&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.dispatchEvent(this.addBodyEvent))},n.prototype.addConstraint=function(e){this.constraints.push(e)},n.prototype.removeConstraint=function(e){var f=this.constraints.indexOf(e);-1!==f&&this.constraints.splice(f,1)},n.prototype.rayTest=function(e,f,n){n instanceof r?this.raycastClosest(e,f,{skipBackfaces:!0},n):this.raycastAll(e,f,{skipBackfaces:!0},n)},n.prototype.raycastAll=function(e,f,n,o){return n.mode=b.ALL,n.from=e,n.to=f,n.callback=o,N.intersectWorld(this,n)},n.prototype.raycastAny=function(e,f,n,o){return n.mode=b.ANY,n.from=e,n.to=f,n.result=o,N.intersectWorld(this,n)},n.prototype.raycastClosest=function(e,f,n,o){return n.mode=b.CLOSEST,n.from=e,n.to=f,n.result=o,N.intersectWorld(this,n)},n.prototype.remove=function(e){e.world=null;var f=this.bodies.length-1,n=this.bodies,o=n.indexOf(e);if(-1!==o){n.splice(o,1);for(var d=0;d!==n.length;d++)n[d].index=d;this.collisionMatrix.setNumObjects(f),this.removeBodyEvent.body=e,this.dispatchEvent(this.removeBodyEvent)}},n.prototype.removeBody=n.prototype.remove,n.prototype.addMaterial=function(e){this.materials.push(e)},n.prototype.addContactMaterial=function(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)},\"undefined\"==typeof performance&&(performance={}),!performance.now){var g=Date.now();performance.timing&&performance.timing.navigationStart&&(g=performance.timing.navigationStart),performance.now=function(){return Date.now()-g}}var x=new d;n.prototype.step=function(e,f,n){if(n=n||10,f=f||0,0===f)this.internalStep(e),this.time+=e;else{var o=Math.floor((this.time+f)/e)-Math.floor(this.time/e);o=Math.min(o,n);for(var d=performance.now(),i=0;i!==o&&(this.internalStep(e),!(performance.now()-d>1e3*e));i++);this.time+=f;for(var t=this.time%e,l=t/e,u=x,p=this.bodies,s=0;s!==p.length;s++){var y=p[s];y.type!==c.STATIC&&y.sleepState!==c.SLEEPING?(y.position.vsub(y.previousPosition,u),u.scale(l,u),y.position.vadd(u,y.interpolatedPosition)):(y.interpolatedPosition.copy(y.position),y.interpolatedQuaternion.copy(y.quaternion))}}};var j={type:\"postStep\"},v={type:\"preStep\"},A={type:\"collide\",body:null,contact:null},C=[],O=[],h=[],k=[],q=(new d,new d,new d,new d,new d,new d,new d,new d,new d,new i,new i),z=new i,B=new d;n.prototype.internalStep=function(e){this.dt=e;var f,n=this.contacts,d=h,i=k,t=this.numObjects(),l=this.bodies,u=this.solver,p=this.gravity,s=this.doProfiling,y=this.profile,a=c.DYNAMIC,r=this.constraints,w=O,b=(p.norm(),p.x),m=p.y,N=p.z,g=0;for(s&&(f=performance.now()),g=0;g!==t;g++){var x=l[g];if(x.type&a){var D=x.force,E=x.mass;D.x+=E*b,D.y+=E*m,D.z+=E*N}}for(var g=0,F=this.subsystems.length;g!==F;g++)this.subsystems[g].update();s&&(f=performance.now()),d.length=0,i.length=0,this.broadphase.collisionPairs(this,d,i),s&&(y.broadphase=performance.now()-f);var G=r.length;for(g=0;g!==G;g++){var H=r[g];if(!H.collideConnected)for(var I=d.length-1;I>=0;I-=1)(H.bodyA===d[I]&&H.bodyB===i[I]||H.bodyB===d[I]&&H.bodyA===i[I])&&(d.splice(I,1),i.splice(I,1))}this.collisionMatrixTick(),s&&(f=performance.now());var J=C,K=n.length;for(g=0;g!==K;g++)J.push(n[g]);n.length=0;var L=this.frictionEquations.length;for(g=0;g!==L;g++)w.push(this.frictionEquations[g]);this.frictionEquations.length=0,this.narrowphase.getContacts(d,i,this,n,J,this.frictionEquations,w),s&&(y.narrowphase=performance.now()-f),s&&(f=performance.now());for(var g=0;g<this.frictionEquations.length;g++)u.addEquation(this.frictionEquations[g]);for(var M=n.length,P=0;P!==M;P++){{var Q,H=n[P],x=H.bi,R=H.bj;H.si,H.sj}Q=x.material&&R.material?this.getContactMaterial(x.material,R.material)||this.defaultContactMaterial:this.defaultContactMaterial;var S=Q.friction;if(x.material&&R.material&&(x.material.friction>=0&&R.material.friction>=0&&(S=x.material.friction*R.material.friction),x.material.restitution>=0&&R.material.restitution>=0&&(H.restitution=x.material.restitution*R.material.restitution)),u.addEquation(H),x.allowSleep&&x.type===c.DYNAMIC&&x.sleepState===c.SLEEPING&&R.sleepState===c.AWAKE&&R.type!==c.STATIC){var T=R.velocity.norm2()+R.angularVelocity.norm2(),U=Math.pow(R.sleepSpeedLimit,2);\nT>=2*U&&(x._wakeUpAfterNarrowphase=!0)}if(R.allowSleep&&R.type===c.DYNAMIC&&R.sleepState===c.SLEEPING&&x.sleepState===c.AWAKE&&x.type!==c.STATIC){var V=x.velocity.norm2()+x.angularVelocity.norm2(),W=Math.pow(x.sleepSpeedLimit,2);V>=2*W&&(R._wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(x,R,!0),this.collisionMatrixPrevious.get(x,R)||(A.body=R,A.contact=H,x.dispatchEvent(A),A.body=x,R.dispatchEvent(A))}for(s&&(y.makeContactConstraints=performance.now()-f,f=performance.now()),g=0;g!==t;g++){var x=l[g];x._wakeUpAfterNarrowphase&&(x.wakeUp(),x._wakeUpAfterNarrowphase=!1)}var G=r.length;for(g=0;g!==G;g++){var H=r[g];H.update();for(var I=0,X=H.equations.length;I!==X;I++){var Y=H.equations[I];u.addEquation(Y)}}u.solve(e,this),s&&(y.solve=performance.now()-f),u.removeAllEquations();var Z=Math.pow;for(g=0;g!==t;g++){var x=l[g];if(x.type&a){var $=Z(1-x.linearDamping,e),_=x.velocity;_.mult($,_);var ef=x.angularVelocity;if(ef){var ff=Z(1-x.angularDamping,e);ef.mult(ff,ef)}}}for(this.dispatchEvent(v),g=0;g!==t;g++){var x=l[g];x.preStep&&x.preStep.call(x)}s&&(f=performance.now());{var nf=q,of=z,df=this.stepnumber,tf=c.DYNAMIC|c.KINEMATIC,lf=df%(this.quatNormalizeSkip+1)===0,uf=this.quatNormalizeFast,pf=.5*e;o.types.PLANE,o.types.CONVEXPOLYHEDRON}for(g=0;g!==t;g++){var sf=l[g],yf=sf.force,cf=sf.torque;if(sf.type&tf&&sf.sleepState!==c.SLEEPING){var af=sf.velocity,rf=sf.angularVelocity,wf=sf.position,bf=sf.quaternion,mf=sf.invMass,Nf=sf.invInertiaWorld;af.x+=yf.x*mf*e,af.y+=yf.y*mf*e,af.z+=yf.z*mf*e,sf.angularVelocity&&(Nf.vmult(cf,B),B.mult(e,B),B.vadd(rf,rf)),wf.x+=af.x*e,wf.y+=af.y*e,wf.z+=af.z*e,sf.angularVelocity&&(nf.set(rf.x,rf.y,rf.z,0),nf.mult(bf,of),bf.x+=pf*of.x,bf.y+=pf*of.y,bf.z+=pf*of.z,bf.w+=pf*of.w,lf&&(uf?bf.normalizeFast():bf.normalize())),sf.aabb&&(sf.aabbNeedsUpdate=!0),sf.updateInertiaWorld&&sf.updateInertiaWorld()}}for(this.clearForces(),this.broadphase.dirty=!0,s&&(y.integrate=performance.now()-f),this.time+=e,this.stepnumber+=1,this.dispatchEvent(j),g=0;g!==t;g++){var x=l[g],gf=x.postStep;gf&&gf.call(x)}if(this.allowSleep)for(g=0;g!==t;g++)l[g].sleepTick(this.time)},n.prototype.clearForces=function(){for(var e=this.bodies,f=e.length,n=0;n!==f;n++){{var o=e[n];o.force,o.torque}o.force.set(0,0,0),o.torque.set(0,0,0)}}},{\"../collision/AABB\":3,\"../collision/ArrayCollisionMatrix\":4,\"../collision/NaiveBroadphase\":7,\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../material/ContactMaterial\":24,\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Shape\":43,\"../solver/GSSolver\":46,\"../utils/EventTarget\":49,\"../utils/TupleDictionary\":52,\"../utils/Vec3Pool\":54,\"./Narrowphase\":55}]},{},[2])(2)});"
			}],
		"3BC7F6A4-425D-4554-833F-67410759383A": [
			{
				"name": "hfBodyLoader.js",
				"source": "function init(){\n\n\tvar json = this.userData;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFBody_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n//\tvar map = textureLoader.load(\"https://i.imgur.com/nfQa595.jpg\");\n//\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/AN9igD7\");\n\tvar diffuseMap = textureLoader.load(\"https://i.imgur.com/nfQa595.jpg\");\n\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/qlaJssh.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/LXG8CUy.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/Fpr7OSs.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/nUWcc7I.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/VGW8BZ2.jpg\");\n//\tvar url = \"/skinned/rlc/RLC_SDK_HFBody_v6.json\";\n//\tvar loader = new THREE.XHRLoader();\n//\tloader.setResponseType( \"json\" );\n//\tloader.load(url, function( json ){\n//\tdebugMode && console.log( json );\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FemaleBodyMaterial\",\n\t\tmap: diffuseMap,\n\t//\tbumpMap: bumpMap,\n\t\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(1,1,1),\n\t\tbumpScale: -0.05,\n\t\tskinning: true,\t//\timportant!\n\t});\n\n/*\n\tvar material;\n\tfor (var i = 0; i < object.materials.length; i++ ){\n\t\tobject.materials[i].skinning = true; // important!\n\t}\n\n\tif ( object.materials.length > 1 ) {\n\t\tmaterial = new THREE.MultiMaterial(object.materials);\n\t} else if ( object.materials.length == 1 ) {\n\t\tmaterial = object.materials[0];\n\t} \n*/\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.body = skinned;\n\t\n\tlocalPlayer.outfit.setGender(\"female\");\n\tlocalPlayer.outfit.add({\"body\":female.body});\n\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n}\n\n"
			}],
		"E6A25D04-08FC-473B-AF43-0CE1C1E64A70": [
			{
				"name": "hfHairsLoader.js",
				"source": "function init(){\n\n\tvar json = this.userData;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFHairs_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n\tvar map = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FemaleHairsMaterial\",\n\t\tmap: map,\n\t\tbumpMap: bumpMap,\n\t\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(1,1,1),\n\t\tside: 2,\n\t\tbumpScale: 0.1,\n\t\talphaTest: 0.5, //\timportant!\n\t\tskinning: true,\t//\timportant!\n\t\ttransparent: true,\n\t});\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.hairs = skinned;\n\t\n\tlocalPlayer.outfit.add({\"hairs\":female.hairs});\n\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n}\n"
			}],
		"0B2221CD-CFDC-473B-BB8C-87214D41EF1D": [
			{
				"name": "hfSkeletonLoader.js",
				"source": "function init(){\n\n\tvar json = this.userData;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFSkeleton_v6.json\";\n/*\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n\tvar map = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n*/\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshLambertMaterial({\n\t\tname: \"FemaleSkeletonMaterial\",\n\t\temissive: new THREE.Color(0.5,0.5,0.5),\n\t\tskinning: true,\t//\timportant!\n\t});\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.skeleton = skinned;\n\t\n//\tlocalPlayer.outfit.setGender(\"female\");\n//\tlocalPlayer.outfit.add({\"body\":female.skeleton});\n//\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n}\n\n"
			}],
		"A30CC89D-3C2D-4CDC-800D-54CE7C6BD371": [
			{
				"name": "idle.js",
				"source": "\nFemaleAnimations.idle = {\"name\":\"idle\",\"fps\":25,\"length\":3,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.000027,15.8,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0.08110972507331586,-0.10852438482691497,0.04275342070621884,0.9898564620258776],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0.08110972507331586,-0.10852438482691497,0.04275342070621884,0.9898564620258776],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[-0.2508830799393094,0.046297470393187365,-0.029975231189155127,0.9664448820033734],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[-0.2508830799393094,0.046297470393187365,-0.029975231189155127,0.9664448820033734],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.18223552549214747,0,0,0.9832549075639546],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.026176948307873153,0,0,0.9996573249755573],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0.18223552549214747,0,0,0.9832549075639546],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.05648904079047317,-0.29380992210344425,-0.012910860768279471,0.9541058786205869],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0.0662162066044309,0.21649845959222072,0.006598561112362683,0.9740124691031226],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0.0954044976882724,0.0954044976882724,0.00918640827616802,0.9908135917238321],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.05648904079047317,-0.29380992210344425,-0.012910860768279471,0.9541058786205869],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0.13938461223091034,-0.03334478210020656,-0.013493231455433213,0.989584755382185],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0.13938461223091034,-0.03334478210020656,-0.013493231455433213,0.989584755382185],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.08977605084327832,0.033565889994950644,-0.34859509594579907,0.9323599362941176],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.0965717077778429,0.04000131110311384,-0.3805870524817655,0.9188184237650792],\"scl\":[1,1,1],\"time\":1},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.0965717077778429,0.04000131110311384,-0.3805870524817655,0.9188184237650792],\"scl\":[1,1,1],\"time\":2},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.08977605084327832,0.033565889994950644,-0.34859509594579907,0.9323599362941176],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0.017649456306844953,-0.07644819418733124,-0.22425760531694186,0.9713664070550719],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.04659103265964365,0.25472048153874666,-0.14500127610726593,0.9549457481384174],\"scl\":[1,1,1],\"time\":2},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[-0.033664403405740194,0.36502815163946495,-0.0680906724593644,0.9278926752475434],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[-0.033664403405740194,0.36502815163946495,-0.0680906724593644,0.9278926752475434],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.092824243828212,-0.04882978291469103,0.3877362079922929,0.9157837872936943],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0.15643446504023087,0.9876883405951378],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.02474916633088814,-0.18469889108422627,0.22591292760076828,0.9561574909715622],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.034100170275569865,-0.01894723701057425,0.042977675724626484,0.9983141289124137],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0.15643446504023087,0.9876883405951378],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0.011368010309443642,0.21677851353720998,-0.02177646004678168,0.9759116918031226],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0.011368010309443642,0.21677851353720998,-0.02177646004678168,0.9759116918031226],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.01673250036501372,0.1119597742000099,-0.14685927090251089,0.9826583266540819],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.008699634501766435,0.0006846760840393577,0.07845610824589173,0.9968793741757849],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[-0.06093467170257374,-0.0037269241793389824,-0.06093467170257374,0.9962730758206609],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,-0.16504760586067765,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[-0.06093467170257374,-0.0037269241793389824,-0.06093467170257374,0.9962730758206609],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[-0.13012382353035157,-0.010240967010384116,-0.07778786728740775,0.9883885677441897],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.05289434227051154,-0.08657801110116932,-0.013242619947177417,0.9947517627863096],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.8,-1.60251,0.04113],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.05289434227051154,-0.08657801110116932,-0.013242619947177417,0.9947517627863096],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":2},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,-0.08715574274765817,0.9961946980917455],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0.026008679106203633,-0.0029633146750876085,0.1131644218538618,0.9932313834166578],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[-0.08571740814525969,0.023422394668670805,0.06796307330355708,0.9937227671921276],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0.09584575252022398,0.9953961983671789],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0.026008679106203633,-0.0029633146750876085,0.1131644218538618,0.9932313834166578],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.15643446504023087,0,0,0.9876883405951378],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[-0.14780941112961063,0,0,0.9890158633619168],\"scl\":[1,1,1],\"time\":2},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]}]}"
			}],
		"5563133F-085D-4516-8E3C-A607C16E2635": [
			{
				"name": "walk.js",
				"source": "FemaleAnimations.walk = {\"name\":\"idle\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,14.5,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,16,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000027,14.5,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,15.9,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000027,14.5,0.169405],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.144162,0.321899],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,2.30816,-0.491099],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.008712,3.25595,0.069768],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.06104853953485687,0,0,0.9981347984218669],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[-0.07845909572784494,0,0,0.996917333733128],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.023034,1.46401,0.411038],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.23911761839433449,0.09904576054128762,-0.3696438106143861,0.8923991008325228],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.13256989652402948,0.054912249102650856,-0.37872318955302253,0.9143186606041034],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.024184346765249966,0.010017484427300428,-0.38255229631055027,0.9235629420699013],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.13256989652402948,0.054912249102650856,-0.37872318955302253,0.9143186606041034],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[2.52983,-0.937077,-0.361347],\"rot\":[0.23911761839433449,0.09904576054128762,-0.3696438106143861,0.8923991008325228],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[3.19505,-2.63784,0.444198],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.03489816783660457,-0.008721219528731424,0.0003045516968497588,0.9993527732787075],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.01369879188248452,-0.10505462045483409,-0.032879865436440926,0.9938283474881026],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0.025238044688962256,-0.12920656296492938,-0.06279078960882961,0.9893058283096119],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[0.008802020473715274,0.00864972142940827,0.008802020473715274,0.9998851089952057],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[3.19611,-2.32051,1.02422],\"rot\":[-0.03489816783660457,-0.008721219528731424,0.0003045516968497588,0.9993527732787075],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.10452846326765347,0.9945218953682733],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.1908089953765448,0.981627183447664],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,-0.14780941112961063,0.9890158633619168],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,-0.13917310096006544,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.476265,-0.405676,0.16763],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.366805,-0.348112,0.094266],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.0844,-0.702997,0.311596],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[-0.12186934340514748,0,0,0.992546151641322],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.1345,0.465408,0.302213],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0.35020738125946743,0,0,0.9366721892483976],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.180056,-0.478939,0.60054],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0.24192189559966773,0,0,0.9702957262759965],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.092886,-0.289543,0.386178],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.16348,-0.12585],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.02084506970569165,-0.018076607791144388,0.38232668433076056,0.9236151935564816],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.12127227334991539,-0.05959187784394953,0.37808632003237,0.9158561996383252],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.22025787424253448,-0.10039875996355209,0.36935152131589893,0.8972101267448848],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.12127227334991539,-0.05959187784394953,0.37808632003237,0.9158561996383252],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-2.52867,-0.937096,-0.361214],\"rot\":[0.02084506970569165,-0.018076607791144388,0.38232668433076056,0.9236151935564816],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-3.19598,-2.63734,0.444101],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.03322576326979469,-0.013783702099207956,0.14741253846967084,0.9884207614743368],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[-0.0417168882701734,-0.15665558296350302,-0.0017875781876456887,0.9867702539718363],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-3.196,-2.32064,1.032],\"rot\":[0.03322576326979469,-0.013783702099207956,0.14741253846967084,0.9884207614743368],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.1908089953765448,0.981627183447664],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.13917310096006544,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.13917310096006544,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0.1908089953765448,0.981627183447664],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[-0.00851968176305283,0.0018887679742852046,0.21643137258081216,0.9762588327595204],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.499381,-0.387148,0.109694],\"rot\":[-0.00851968176305283,0.0018887679742852046,0.21643137258081216,0.9762588327595204],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.373054,-0.338717,0.107148],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.14875,-0.745953,0.339327],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.19745,0.436272,0.257659],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.176136,-0.458651,0.585481],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.070728,-0.239492,0.362029],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.79366,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.072112,1.56253,0.174991],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.73021,0.798965,-0.440115],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.01175942937344755,0.1820510834426342,0.01874955344598273,0.9830399651508327],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,-0.07845909572784494,0,0.996917333733128],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0,-0.12186934340514748,0,0.992546151641322],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.01175942937344755,0.1820510834426342,0.01874955344598273,0.9830399651508327],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.24117613113288489,-0.01898097316551604,0.07612852527220725,0.9673046283717154],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.1480529180500005,-0.0008834016706651343,0.053047216404080756,0.9875553381406769],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.21625154078414352,0.012263568935751942,0.0954503349415529,0.9715833003633746],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[-0.009383953260013822,-0.008014653232669736,0.07852903854699522,0.9968354412136732],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.43938,-1.60251,0.041129],\"rot\":[0.24117613113288489,-0.01898097316551604,0.07612852527220725,0.9673046283717154],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0.6156614753256583,0,0,0.7880107536067219],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.851619,-7.12582,-0.664236],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,-0.11320321376790672,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.7531,-6.81598,-0.370799],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.008726535498373935,0,0,0.9999619230641713],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.11753739745783764,0,0,0.9930684569549263],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.224951054343865,0,0,0.9743700647852352],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.3779,-2.27964,0.987525],\"rot\":[0.008726535498373935,0,0,0.9999619230641713],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,2.30816,-0.491099],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.04341857235856081,0.09575452860150463,0.004180733006501779,0.9944488017480722],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.012321295630453703,-0.10415792632230236,-0.03561860769689824,0.9938463799018232],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0.11320321376790672,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[-0.20659316195735433,-0.02482146873554838,-0.07493289832487197,0.9752375202333567],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.01373336526755417,-0.007671930455933075,-0.07856326141801098,0.9967850069683395],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[0.23338262665424891,0.009855951828208986,-0.0783192490714475,0.9691756832558317],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[-0.12080946217260312,-0.01819618314346435,-0.0768110895676198,0.9895322275135918],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.439,-1.60251,0.04113],\"rot\":[-0.20659316195735433,-0.02482146873554838,-0.07493289832487197,0.9752375202333567],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0.5948227867513413,0,0,0.8038568606172174],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.852048,-7.1256,-0.664335],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.753052,-6.8162,-0.3707],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[-0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.377549,-2.27926,0.988361],\"rot\":[0.3007057995042731,0,0,0.9537169507482269],\"scl\":[1,1,1],\"time\":1}]}]};\n\n"
			}],
		"5DF95FF7-EE44-41AE-9871-C59794A99C83": [
			{
				"name": "hfTshirtLoader.js",
				"source": "function init(){\n\n\tvar json = this.userData;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFTshirt_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n//\tvar map = textureLoader.load(\"https://i.imgur.com/FInWuBt.png\");\n//\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/65nWZsK.jpg\");\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FemaleTshirtMaterial\",\n\t//\tmap: map,\n\t//\tbumpMap: bumpMap,\n\t//\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(0.5,0.5,0.5),\n\t\tbumpScale: 0.1,\n\t\tskinning: true,\t//\timportant!\n\t\ttransparent: true,\n\t});\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.tshirt = skinned;\n\t\n//\tlocalPlayer.outfit.add({\"tshirt\":female.tshirt});\n//\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n}\n"
			}],
		"6ABD9AB3-4408-457B-A53D-28573B621373": [
			{
				"name": "hfFrillyskirtLoader.js",
				"source": "function init(){\n\n\tvar json = this.userData;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFFrillySkirt_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n//\tvar map = textureLoader.load(\"https://i.imgur.com/map.jpg\");\n//\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/bumpMap.jpg\");\n//\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/emissiveMap.jpg\");\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FrillySkirtMaterial\",\n\t//\tmap: map,\n\t//\tbumpMap: bumpMap,\n\t//\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(0.5,0.5,0.5),\n\t\tbumpScale: 0.1,\n\t\tskinning: true,\t//\timportant!\n\t\ttransparent: false,\n\t\tside: 2,\n\t});\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.skirt = skinned;\n\t\n//\tlocalPlayer.outfit.add({\"skirt\":female.skirt});\n//\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n}\n"
			}],
		"677F0360-845D-4A0B-B1DF-8D33676B44EC": [
			{
				"name": "hfFrillydressLoader.js",
				"source": "function init(){\n\n\tvar json = this.userData;\n\tvar url = \"/skinned/rlc/RLC_SDK_HFFrillyDress_v6.json\";\n\n\tvar textureLoader = new THREE.TextureLoader();\n\ttextureLoader.crossOrigin = \"anonymous\";\t//\timportant!\n//\tvar map = textureLoader.load(\"https://i.imgur.com/map.jpg\");\n//\tvar bumpMap = textureLoader.load(\"https://i.imgur.com/bumpMap.jpg\");\n\tvar alphaMap = textureLoader.load(\"https://i.imgur.com/kRYx1pC.jpg\");\n\tvar emissiveMap = textureLoader.load(\"https://i.imgur.com/BHoTHiw.jpg\");\n\temissiveMap.repeat = {x:2, y:2}\n\temissiveMap.wrapT = emissiveMap.wrapS = 1002;\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\tdebugMode && console.log( object );\n\n\tvar material = new THREE.MeshStandardMaterial({\n\t\tname: \"FrillyDressMaterial\",\n\t\tmap: alphaMap,\n\t\tbumpMap: emissiveMap,\n\t\temissiveMap: emissiveMap,\n\t\tcolor: new THREE.Color(1,1,1),\n\t\temissive: new THREE.Color(1,1,1),\n\t\tside: 2,\n\t\tbumpScale: 0.1,\n\t\talphaTest: 0.5, //\timportant!\n\t\tskinning: true,\t//\timportant!\n\t\ttransparent: true,\n\t});\n\n\tvar geometry = object.geometry;\n\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceFile = url;  // important!\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.castShadow = true;\n\tskinned.name = object.name;\n\n\tfemale.dress = skinned;\n\t\n\tlocalPlayer.outfit.add({\"dress\":female.dress});\n\tlocalPlayer.outfit.AnimationsHandler.refresh(); // important?\n\n}\n"
			}],
		"A39F20FC-AD40-4F9B-8A2E-F4F3B45A9054": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"E9C420DE-52FA-4328-9FDD-7DC38192F1F2": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"8179D2BC-D220-484C-BD41-E8E90FD39A10": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"D07BE125-9BD5-429F-9704-7E8AB6B56E30": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"8300E908-EB3C-4878-AF2D-6C601B345C9C": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"1F760C5E-C123-4327-9A91-649340790BCD": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"74B9C98A-AF37-455B-8F63-B07E7386BADD": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"A453D833-E3AC-482D-BA2F-B1138E2DDD49": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"3D7E5F15-A405-4A7B-BB8E-FF51688F9CC8": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"A7A2C1EA-A74C-476F-B99C-927D26AD1A9E": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"9DB68AD7-88A5-410F-8B2C-39C05A8D5F57": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"328503CF-6A1B-43C4-9D3F-3C4997FAE9E6": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"90832875-4B03-4103-99C3-86EA55ED0146": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"B5E342A9-D176-4A24-B16A-5D729F6F897C": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"B47E52B2-D852-44C8-B545-E3A7E196B721": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"F03D13A2-3A2D-4720-AFDC-657ACB8FBA90": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"96FF2660-43FA-44C1-B57C-ACB072A180A6": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"7B13F363-20F8-4667-B0AD-C15B683BA953": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"DC9FB530-9276-4256-AC82-34195577913E": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"682C46FC-1AE4-4EAD-B9E5-3A66F8831390": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"0D13CE47-87DC-4B85-874E-3F5E5F604EC2": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"2E632F16-D468-4F7C-BF87-7C5C8F69FDB4": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"CA48EA65-650E-45A6-ABAA-93D3AE8119FA": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"A80F7607-2F15-4510-8E40-3969C0595128": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"80A731B2-A99E-4B63-8239-8342B432CE58": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"983C160E-3F6D-4E49-B72C-F41469B8871B": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"093317B6-F8EA-40BA-A5AD-A7004A0B98BD": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"1BF6C397-33C0-435B-AE72-05E4A10FB277": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"88ED03D8-82BB-4091-8F56-A8AD781D3383": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}],
		"0B2A8D26-B8F6-4C55-B94A-A7DDE84DFB6D": [
			{
				"name": "octree-geometry.js",
				"source": "function init(){\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.fromBufferGeometry(this.geometry);\n\tgeometry.mergeVertices ();\n\n\tvar material = this.material;\n\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.copy(this.position); // important!\n\n\toctree.importThreeMesh( mesh );\n//\tcameraControls.rigidObjects.push( this );\n\n\tdebugMode && console.log( mesh );\n\n}"
			}]
	}
}